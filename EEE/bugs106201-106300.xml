<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="106201" />
    <CreationDate amount="2005-08-05 12:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[UA] [plan item] Support dynamic and reusable content in User Assistance components.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In previous releases, Eclipse Help manipulated content as a reference. Although the representation is 
simple and reliable, it is difficult to tailor the content for multiple presentations, or to provide incremental 
content contributions, content reuse, content filtering etc. The representation for help content should be 
improved. Also, branding information should be separated from the rest of the content to simplify 
aggregating multiple contributions into larger units. [Help, UI, Core, Install/Update]
Our teams' dependencies on this one include having this functionality for the 
help system webapp as well as the integrated UA pieces (cheat sheets, 
contextual help, etc).

We would want to use this functionality for standalone/infocenter scenarios as 
well, so need function available in minimal set of code plug-ins that are used 
for standalone/infocenter scenarios.

--Lee Anne Kowalski
IBM User Assistance Technologies
Here are some additional items that we believe are related to this one. If 
there are other opinions that these are better discussed as separate 
requirements, please let me know and I will open separate entries for these:

- Hide/suppress links in text if the topic targets they link to are not 
installed. Scenario: there are a number of configurations that are valid--a 
user can optionally include code components in many different valid 
configurations. The UI code can dynamically respond and hide/show UI features 
based on what it knows is loaded at install or runtime. However, currently, a 
help system topic once it is written in XHTML is "static" and cannot 
dynamically change its content by that time. Topic authors cannot know in 
advance when writing the topic file which ones will be present to provide links 
between topics. They then only provide links to those topics they are 100% sure 
of, and as the trend is for an increasingly componentized world, this is a 
smaller set of 100% guaranteed links. To get around ths, the links have to be 
resolved as close to the user's end as possible (install time or system 
configuration time or system start-up).

- Allow product-level suppression/substitution of topics at points in time same 
as above (install; system configuration; or system start-up). Today, if your 
product extends and overrides the functionality of someone else's plug-in, you 
would like to have your help topics for your plug-in be the only ones that your 
users see, and override the help topics that they had contributed. Your product 
wants to suppress or replace that content at a topic level.

- Automatically generate "parent summary" topics for parent topics that don't 
have associated HTML topic files (hrefs). These summay topics can be generated 
from the titles of the children topics--for example, a bulleted list of the 
hrefs of the children topics with their titles as the text of the links. This 
is related to Bugzilla 105322 (https://bugs.eclipse.org/bugs/show_bug.cgi?
id=105322)

--Lee Anne Kowalski
IBM User Assistance Technologies

Name changed to match the edits being made for the plan revision.
The original plan item has been implement - we provide content manipulation for Help documents, and also filtering for Welcome and cheatsheets. Lee Anne, your additional requirements are something we could not commit for 3.2. You are free to transfer them in to a feature request for release 3.3.</WithStack>
    <WithOutStack>In previous releases, Eclipse Help manipulated content as a reference. Although the representation is 
simple and reliable, it is difficult to tailor the content for multiple presentations, or to provide incremental 
content contributions, content reuse, content filtering etc. The representation for help content should be 
improved. Also, branding information should be separated from the rest of the content to simplify 
aggregating multiple contributions into larger units. [Help, UI, Core, Install/Update]
Our teams' dependencies on this one include having this functionality for the 
help system webapp as well as the integrated UA pieces (cheat sheets, 
contextual help, etc).

We would want to use this functionality for standalone/infocenter scenarios as 
well, so need function available in minimal set of code plug-ins that are used 
for standalone/infocenter scenarios.

--Lee Anne Kowalski
IBM User Assistance Technologies
Here are some additional items that we believe are related to this one. If 
there are other opinions that these are better discussed as separate 
requirements, please let me know and I will open separate entries for these:

- Hide/suppress links in text if the topic targets they link to are not 
installed. Scenario: there are a number of configurations that are valid--a 
user can optionally include code components in many different valid 
configurations. The UI code can dynamically respond and hide/show UI features 
based on what it knows is loaded at install or runtime. However, currently, a 
help system topic once it is written in XHTML is "static" and cannot 
dynamically change its content by that time. Topic authors cannot know in 
advance when writing the topic file which ones will be present to provide links 
between topics. They then only provide links to those topics they are 100% sure 
of, and as the trend is for an increasingly componentized world, this is a 
smaller set of 100% guaranteed links. To get around ths, the links have to be 
resolved as close to the user's end as possible (install time or system 
configuration time or system start-up).

- Allow product-level suppression/substitution of topics at points in time same 
as above (install; system configuration; or system start-up). Today, if your 
product extends and overrides the functionality of someone else's plug-in, you 
would like to have your help topics for your plug-in be the only ones that your 
users see, and override the help topics that they had contributed. Your product 
wants to suppress or replace that content at a topic level.

- Automatically generate "parent summary" topics for parent topics that don't 
have associated HTML topic files (hrefs). These summay topics can be generated 
from the titles of the children topics--for example, a bulleted list of the 
hrefs of the children topics with their titles as the text of the links. This 
is related to Bugzilla 105322 (https://bugs.eclipse.org/bugs/show_bug.cgi?
id=105322)

--Lee Anne Kowalski
IBM User Assistance Technologies

Name changed to match the edits being made for the plan revision.
The original plan item has been implement - we provide content manipulation for Help documents, and also filtering for Welcome and cheatsheets. Lee Anne, your additional requirements are something we could not commit for 3.2. You are free to transfer them in to a feature request for release 3.3.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106202" />
    <CreationDate amount="2005-08-05 12:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>JavaModelCache should have configurable LRU cache limits</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="23">
        <Lines>
          <Line>1. Make the cache configurable via UI or commandline arguments.</Line>
          <Line>This is non-optimal in that people will have to know that this problem can</Line>
          <Line>occur and how to fix it. Could possibly provide a warning somewhere that</Line>
          <Line>thrashing was occurring, but still would be difficult to discover.</Line>
          <Line />
          <Line>2. Size the cache relative to the size of the heap.</Line>
          <Line>This is better, in that when a user experiences thrashing they are likely to</Line>
          <Line>attempt increasing the heap size as a solution, as Ernest did.</Line>
          <Line />
          <Line>3. Remove the package cache limit.</Line>
          <Line>The comments for JavaModelCache indicate that a single package takes up 1782</Line>
          <Line>bytes in memory. Is this truly accurate? Seems like this is larger than they</Line>
          <Line>should actually be, as a PackageFragment appears (in my admittedly limited JDT</Line>
          <Line>knowledge) to contain only a String[] and a reference to its parent. Maybe</Line>
          <Line>PackageFragments don't need to be flushed from memory at all?</Line>
          <Line>*** Bug 106226 has been marked as a duplicate of this bug. ***</Line>
          <Line>We could still use the current heap size, which is evolving across the session.</Line>
          <Line>I think I prefer using the max heap size for an initial guess at a cache size</Line>
          <Line>(overridable from the command line).  However, I believe the cache should grow</Line>
          <Line>without limit if more space is needed.  If the cache size is *limited* to say 5%</Line>
          <Line>of the max heap size, it's silly for me to have a lot of unused heap that I</Line>
          <Line>can't get to.  I would prefer an aging strategy to get rid of cruft that is</Line>
          <Line>probably no longer in use.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>We are working with the classpath container extension point and found that if we
add a lot of jars to our container, the JDT starts thrashing the garbage
collector.  Upon further investigation, we found that there is a limit of 2000
packages in the package cache in the JavaModelCache.  Every time I delete and
readd a semicolon and resave the file, the model cache appears to go rebuild the
cache data for all of those jars (even though I'm not actually referencing all
of them from my code) and this makes the garbage collector thrash.  Looking at
the code, it appears that 2000 is a hardcoded limit.  There is a setSpaceLimit()
method on LRUCache, but the class is internal, and I don't see a public way to
get the cache pointer anyway.  

So even though I'm running with -Xmx512m, I'm thrashing memory at a much lower
level than that, and I don't see a workaround other than to not add so many jars
to my classpath.
We just ran into this same issue with a single very large (160MB) jar. Our
temporary fix was to double the size of the package cache directly in
JavaModelCache.java.

I see there being 3 possible long-term solutions to this:

1. Make the cache configurable via UI or commandline arguments.
   This is non-optimal in that people will have to know that this problem can
occur and how to fix it. Could possibly provide a warning somewhere that
thrashing was occurring, but still would be difficult to discover.

2. Size the cache relative to the size of the heap. 
   This is better, in that when a user experiences thrashing they are likely to
attempt increasing the heap size as a solution, as Ernest did.

3. Remove the package cache limit. 
   The comments for JavaModelCache indicate that a single package takes up 1782
bytes in memory. Is this truly accurate? Seems like this is larger than they
should actually be, as a PackageFragment appears (in my admittedly limited JDT
knowledge) to contain only a String[] and a reference to its parent. Maybe
PackageFragments don't need to be flushed from memory at all?
*** Bug 106226 has been marked as a duplicate of this bug. ***
We could still use the current heap size, which is evolving across the session.
I think I prefer using the max heap size for an initial guess at a cache size
(overridable from the command line).  However, I believe the cache should grow
without limit if more space is needed.  If the cache size is *limited* to say 5%
of the max heap size, it's silly for me to have a lot of unused heap that I
can't get to.  I would prefer an aging strategy to get rid of cruft that is
probably no longer in use.

Also, I think that the number of classes available that need to be cached (i.e.
the size of the classpath) isn't necessarily related to working memory usage.  I
can take a project and double the size of the classpath without using more
workspace memory otherwise.  I believe that this lack of correlation makes it
unwise to impose a hard limit, even if user configurable.
Created attachment 26232
Patch to set the size of the caches relatively to the max heap size

I first thought that it was not possible to get the max heap size
programmatically, but the 1.4 API Runtime#maxMemory() returns this max heap
size.

The attached patch sets the size of the JavaModel caches relatively to this max
heap size. If you start Eclipse with no argument, the default max heap size is
256MB, and the size of the caches remains unchanged. If you double the max heap
size (i.e. -XmX512M) the size of the JavaModel caches is doubled as well.
(In reply to comment #4)
&gt; I think I prefer using the max heap size for an initial guess at a cache size
&gt; (overridable from the command line).  
The attached patch implements this.

&gt; However, I believe the cache should grow without limit if more space is
&gt; needed.  If the cache size is *limited* to say 5% of the max heap size, it's
&gt; silly for me to have a lot of unused heap that I can't get to.  I would 
&gt; prefer an aging strategy to get rid of cruft that is probably no longer in
&gt; use.
That's an interresting idea, but this is a completely different direction than
the LRU cache stategy. Can you tell us more on how you would implement this
aging stategy ?

&gt; Also, I think that the number of classes available that need to be cached 
&gt; (i.e. the size of the classpath) isn't necessarily related to working memory
&gt; usage.  I can take a project and double the size of the classpath without
&gt; using more workspace memory otherwise.  I believe that this lack of
&gt; correlation makes it unwise to impose a hard limit, even if user configurable.
Unfortunately, JDT Core might not be the only plugin in the system. If we didn't
limit the cache size, we would end up using all memory, leaving nothing for
other plugins.


Well, I guess by aging strategy, I might do something like keep a timestamp on
the last cache access of each jar (I think you cache the class info with jar
granularity).  The cache size is unlimited, but if you haven't used cache info
from a jar within a certain time period (10 minutes, 1 hour, 1 day, etc.), then
the cache info corresponding to the jar can be dumped (immediately, on shutdown,
etc.).   You could use a thread to check periodically, or just check on
shutdown.  You can make this timeout value pretty short if you really want to
make sure they don't accumulate a lot of cache quickly by switching between
projects.

If the user is really using all of the cache info within the time window, then
they need all of that data in their cache working set.  If that amount of cache
(in conjunction with their other work) takes up too much of their heap, then
they need to increase their heap size.  The alternative is to thrash needlessly
when memory is available.
This strategy would still need to be combined with a policy for avoiding memory
outage. Typically operations open lots of files within a fraction of a second...
so I would go first for what we have (improved to better use heap contextual
info), then from there consider a subsequent complimentary strategy.
+1 for 3.1.1, if we get positive feedback from APT scenario. If not, there is no
strong need to push this into a 3.1 update.
Jess - can you sync with Jerome to see if this would meet your needs ?
The patch looks good. If we set our max heap to 512M, we can put our large jar
on the classpath and still get reasonable performance. Agree this would be great
to have in 3.1.1.
Thanks Jess.

Released patch in both HEAD and R3_1_maintenace branch.

Ernest, so as to not loose your idea of aging stategy I opened bug 108665. Feel
free to add yourself to the CC list to get informed of its progress.
Verified in I20050920-0010 for 3.2M2
Verified for 3.1.1 using M20050923-1430.</WithStack>
    <WithOutStack>We are working with the classpath container extension point and found that if we
add a lot of jars to our container, the JDT starts thrashing the garbage
collector.  Upon further investigation, we found that there is a limit of 2000
packages in the package cache in the JavaModelCache.  Every time I delete and
readd a semicolon and resave the file, the model cache appears to go rebuild the
cache data for all of those jars (even though I'm not actually referencing all
of them from my code) and this makes the garbage collector thrash.  Looking at
the code, it appears that 2000 is a hardcoded limit.  There is a setSpaceLimit()
method on LRUCache, but the class is internal, and I don't see a public way to
get the cache pointer anyway.  

So even though I'm running with -Xmx512m, I'm thrashing memory at a much lower
level than that, and I don't see a workaround other than to not add so many jars
to my classpath.
We just ran into this same issue with a single very large (160MB) jar. Our
temporary fix was to double the size of the package cache directly in
JavaModelCache.java.

I see there being 3 possible long-term solutions to this:

1. Make the cache configurable via UI or commandline arguments.
   This is non-optimal in that people will have to know that this problem can
occur and how to fix it. Could possibly provide a warning somewhere that
thrashing was occurring, but still would be difficult to discover.

2. Size the cache relative to the size of the heap. 
   This is better, in that when a user experiences thrashing they are likely to
attempt increasing the heap size as a solution, as Ernest did.

3. Remove the package cache limit. 
   The comments for JavaModelCache indicate that a single package takes up 1782
bytes in memory. Is this truly accurate? Seems like this is larger than they
should actually be, as a PackageFragment appears (in my admittedly limited JDT
knowledge) to contain only a String[] and a reference to its parent. Maybe
PackageFragments don't need to be flushed from memory at all?
*** Bug 106226 has been marked as a duplicate of this bug. ***
We could still use the current heap size, which is evolving across the session.
I think I prefer using the max heap size for an initial guess at a cache size
(overridable from the command line).  However, I believe the cache should grow
without limit if more space is needed.  If the cache size is *limited* to say 5%
of the max heap size, it's silly for me to have a lot of unused heap that I
can't get to.  I would prefer an aging strategy to get rid of cruft that is
probably no longer in use.

Also, I think that the number of classes available that need to be cached (i.e.
the size of the classpath) isn't necessarily related to working memory usage.  I
can take a project and double the size of the classpath without using more
workspace memory otherwise.  I believe that this lack of correlation makes it
unwise to impose a hard limit, even if user configurable.
Created attachment 26232
Patch to set the size of the caches relatively to the max heap size

I first thought that it was not possible to get the max heap size
programmatically, but the 1.4 API Runtime#maxMemory() returns this max heap
size.

The attached patch sets the size of the JavaModel caches relatively to this max
heap size. If you start Eclipse with no argument, the default max heap size is
256MB, and the size of the caches remains unchanged. If you double the max heap
size (i.e. -XmX512M) the size of the JavaModel caches is doubled as well.
(In reply to comment #4)
&gt; I think I prefer using the max heap size for an initial guess at a cache size
&gt; (overridable from the command line).  
The attached patch implements this.

&gt; However, I believe the cache should grow without limit if more space is
&gt; needed.  If the cache size is *limited* to say 5% of the max heap size, it's
&gt; silly for me to have a lot of unused heap that I can't get to.  I would 
&gt; prefer an aging strategy to get rid of cruft that is probably no longer in
&gt; use.
That's an interresting idea, but this is a completely different direction than
the LRU cache stategy. Can you tell us more on how you would implement this
aging stategy ?

&gt; Also, I think that the number of classes available that need to be cached 
&gt; (i.e. the size of the classpath) isn't necessarily related to working memory
&gt; usage.  I can take a project and double the size of the classpath without
&gt; using more workspace memory otherwise.  I believe that this lack of
&gt; correlation makes it unwise to impose a hard limit, even if user configurable.
Unfortunately, JDT Core might not be the only plugin in the system. If we didn't
limit the cache size, we would end up using all memory, leaving nothing for
other plugins.


Well, I guess by aging strategy, I might do something like keep a timestamp on
the last cache access of each jar (I think you cache the class info with jar
granularity).  The cache size is unlimited, but if you haven't used cache info
from a jar within a certain time period (10 minutes, 1 hour, 1 day, etc.), then
the cache info corresponding to the jar can be dumped (immediately, on shutdown,
etc.).   You could use a thread to check periodically, or just check on
shutdown.  You can make this timeout value pretty short if you really want to
make sure they don't accumulate a lot of cache quickly by switching between
projects.

If the user is really using all of the cache info within the time window, then
they need all of that data in their cache working set.  If that amount of cache
(in conjunction with their other work) takes up too much of their heap, then
they need to increase their heap size.  The alternative is to thrash needlessly
when memory is available.
This strategy would still need to be combined with a policy for avoiding memory
outage. Typically operations open lots of files within a fraction of a second...
so I would go first for what we have (improved to better use heap contextual
info), then from there consider a subsequent complimentary strategy.
+1 for 3.1.1, if we get positive feedback from APT scenario. If not, there is no
strong need to push this into a 3.1 update.
Jess - can you sync with Jerome to see if this would meet your needs ?
The patch looks good. If we set our max heap to 512M, we can put our large jar
on the classpath and still get reasonable performance. Agree this would be great
to have in 3.1.1.
Thanks Jess.

Released patch in both HEAD and R3_1_maintenace branch.

Ernest, so as to not loose your idea of aging stategy I opened bug 108665. Feel
free to add yourself to the CC list to get informed of its progress.
Verified in I20050920-0010 for 3.2M2
Verified for 3.1.1 using M20050923-1430.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106203" />
    <CreationDate amount="2005-08-05 12:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[plan item] Improve UI Forms</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>UI Forms are increasingly being used in the Eclipse user interface. The UI Form support should be 
improved to allow for more pervasive use in 3.2. Critical widget functionality should be moved to SWT to 
ensure quality and native look and feel. The remaining UI Forms code (minus FormEditor) should be 
pushed down into JFace so that it is available in the Eclipse workbench. [SWT, UI, Help]
All though work has been done in this area, the main thrust of the item (i.e. transferring ownership of the UI Forms code) will not be completed in R3.2, so we are marking this deferred plan item as LATER.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>UI Forms are increasingly being used in the Eclipse user interface. The UI Form support should be 
improved to allow for more pervasive use in 3.2. Critical widget functionality should be moved to SWT to 
ensure quality and native look and feel. The remaining UI Forms code (minus FormEditor) should be 
pushed down into JFace so that it is available in the Eclipse workbench. [SWT, UI, Help]
All though work has been done in this area, the main thrust of the item (i.e. transferring ownership of the UI Forms code) will not be completed in R3.2, so we are marking this deferred plan item as LATER.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106204" />
    <CreationDate amount="2005-08-05 12:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Workbench] workbench doesn't restores original state after oppenig resource in a new window</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>If one opens a workspace or any other resource in a new window, closes the 
first window and then the new one, when eclipse opens again, the focus will be 
on the project (window name too).
If one navigates 'Up to Workspace', closes eclipse and reopens it, the 
workbench will be still with focus on that project.
There are currently no plans to work on this although we would be happy to review a patch</WithStack>
    <WithOutStack>If one opens a workspace or any other resource in a new window, closes the 
first window and then the new one, when eclipse opens again, the focus will be 
on the project (window name too).
If one navigates 'Up to Workspace', closes eclipse and reopens it, the 
workbench will be still with focus on that project.
There are currently no plans to work on this although we would be happy to review a patch</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106205" />
    <CreationDate amount="2005-08-05 12:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[plan item] Enhance the debug platform</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The debug support in Eclipse is increasingly being used in areas that require more flexible mechanisms 
than those required by simple Java programs. Potential work areas include: the integration of flow control, 
async/cancellation into debug APIs; update policies in debug views (i.e. ensure view updates before 
proceeding vs. let debugger go as fast as it can and let the views catch up); a flexible debug model 
element hierarchy to account for different architectures such as multi-core processors, thousands of 
threads, etc; and introduction of table trees in standard debug views for better/flexible presentation. 
[Debug]
Link to proposal on flexible hierarchy:

http://dev.eclipse.org/viewcvs/index.cgi/*checkout*/platform-debug-
home/r3_2/docs/flexible_hierarchy.html?rev=HEAD&amp;content-type=text/html
The text of this item in the plan has changed. The new text is:
"
The debug support in Eclipse is increasingly being used in areas that require more flexible mechanisms than those required by simple Java programs. Features will be provided as provisional API subject to change in a future release. Features include: a flexible element hierarchy in debug views to account for different architectures such as multi-core processors, thousands of threads, etc; asynchronous, cancellable interactions when retrieving view content and labels; model driven view updates; a debug context service allowing for retargettable debug actions, flexible view wiring and pluggable source lookup. [Debug]
"
See also bug 127874, for further debug work.

Marking fixed. During 3.2, provisional support has been added for the following:

* Flexible element hierarchy in all debug views (except breakpoint view) with asynchronous content retrieval - @see IAsynchronousContentAdapter
* Asynchronous label generation - @see IAsynchronousLabelAdapter
* Support for columns and cell editors in 'single model' views - @see IColumnPresentationFactoryAdapter and IColumnEditorFactoryAdapter
* Model driven view updates - @see IModelProxyFactoryAdapter
* Asynchronous, retargettable debug actions - @see IAsynchronousTerminateAdapter, IAsynchronousStepAdapter, etc.
* Debug context service - @see IDebugContextManager, IDebugContextProvider, IDebugContextListener
* Flexible view wiring - the variables view sets its input to be the active debug context rather than being hard-wired to the selection in the debug view 

New bug reports should be opened as neccessary to deal with related issues/bugs. 

Marking Verified.</WithStack>
    <WithOutStack>The debug support in Eclipse is increasingly being used in areas that require more flexible mechanisms 
than those required by simple Java programs. Potential work areas include: the integration of flow control, 
async/cancellation into debug APIs; update policies in debug views (i.e. ensure view updates before 
proceeding vs. let debugger go as fast as it can and let the views catch up); a flexible debug model 
element hierarchy to account for different architectures such as multi-core processors, thousands of 
threads, etc; and introduction of table trees in standard debug views for better/flexible presentation. 
[Debug]
Link to proposal on flexible hierarchy:

http://dev.eclipse.org/viewcvs/index.cgi/*checkout*/platform-debug-
home/r3_2/docs/flexible_hierarchy.html?rev=HEAD&amp;content-type=text/html
The text of this item in the plan has changed. The new text is:
"
The debug support in Eclipse is increasingly being used in areas that require more flexible mechanisms than those required by simple Java programs. Features will be provided as provisional API subject to change in a future release. Features include: a flexible element hierarchy in debug views to account for different architectures such as multi-core processors, thousands of threads, etc; asynchronous, cancellable interactions when retrieving view content and labels; model driven view updates; a debug context service allowing for retargettable debug actions, flexible view wiring and pluggable source lookup. [Debug]
"
See also bug 127874, for further debug work.

Marking fixed. During 3.2, provisional support has been added for the following:

* Flexible element hierarchy in all debug views (except breakpoint view) with asynchronous content retrieval - @see IAsynchronousContentAdapter
* Asynchronous label generation - @see IAsynchronousLabelAdapter
* Support for columns and cell editors in 'single model' views - @see IColumnPresentationFactoryAdapter and IColumnEditorFactoryAdapter
* Model driven view updates - @see IModelProxyFactoryAdapter
* Asynchronous, retargettable debug actions - @see IAsynchronousTerminateAdapter, IAsynchronousStepAdapter, etc.
* Debug context service - @see IDebugContextManager, IDebugContextProvider, IDebugContextListener
* Flexible view wiring - the variables view sets its input to be the active debug context rather than being hard-wired to the selection in the debug view 

New bug reports should be opened as neccessary to deal with related issues/bugs. 

Marking Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106206" />
    <CreationDate amount="2005-08-05 12:43:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[plan item] Add support for Java SE 6 features</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Java SE 6 (aka "Mustang") will likely contain improvements to javadoc tags (like @category), classfile 
specification updates, pluggable annotation processing APIs, and new compiler APIs, all of which will 
require specific support. [JDT Core, JDT UI, JDT Text, JDT Debug]
JSR-202 had published updated class file format specification and details on new
verifier. I wonder what are the timeframe for incorporating these new features
into Eclipse Java compiler? Thanks.
The StackMapTable attribute support is scheduled for 3.2M4 so far.
Also see bug 109980
The list of participating components should include: JDT APT.
JDT UI/Text: For 3.2, added '@category' filter to outline, rendering categories in labels.
Why is this bug still open? Is more work going to be done for R3.2?

It was just moved to JDT/Core from JDT/UI.
At the core level, we added the generation of stack map frames. This is done by settings the source, target platform and compliance to 1.6 or 6.0.
Closing as FIXED for 3.2.</WithStack>
    <WithOutStack>Java SE 6 (aka "Mustang") will likely contain improvements to javadoc tags (like @category), classfile 
specification updates, pluggable annotation processing APIs, and new compiler APIs, all of which will 
require specific support. [JDT Core, JDT UI, JDT Text, JDT Debug]
JSR-202 had published updated class file format specification and details on new
verifier. I wonder what are the timeframe for incorporating these new features
into Eclipse Java compiler? Thanks.
The StackMapTable attribute support is scheduled for 3.2M4 so far.
Also see bug 109980
The list of participating components should include: JDT APT.
JDT UI/Text: For 3.2, added '@category' filter to outline, rendering categories in labels.
Why is this bug still open? Is more work going to be done for R3.2?

It was just moved to JDT/Core from JDT/UI.
At the core level, we added the generation of stack map frames. This is done by settings the source, target platform and compliance to 1.6 or 6.0.
Closing as FIXED for 3.2.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106207" />
    <CreationDate amount="2005-08-05 12:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[plan item] Split refactoring.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- Scripting support for refactorings with the ability to create refactoring scripts and replay them on another workspace</Line>
          <Line>- Sharing of project refactoring information across workspaces</Line>
          <Line>- Support to annotate JAR files with refactoring information in order to ease API migration to new versions of libraries</Line>
          <Line>- A number of refactorings such as Rename, Move, Change Signature, ... now generate delegates to preserve API compatibility</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Refactoring currently relies on a closed world assumption. This means that all of the code to be refactored 
must be available in the workspace when the refactoring is triggered. However for large distributed teams, 
the closed world approach isn't really feasible. The same is true for clients which use binary versions of 
libraries where API changes from one version to another. In 3.2 the closed world assumptions will be 
relaxed in such a way that a refactoring executed in workspace A can be "reapplied" on workspace B to 
refactor any remaining references to the refactored element. Furthermore, existing refactorings will be 
improved to preserve API compatibility where possible (for example when renaming a method, a 
deprecated stub with the old signature will be generated that forwards to the new method). [JDT Core/UI]
*** Bug 76503 has been marked as a duplicate of this bug. ***
Please consider the work done at http://www-plan.cs.colorado.edu/henkel/catchup/ .
Unfortunately, it seems the announced plugin will not be published - maybe
Eclipse.org can get it as a contribution.

Does any of the following issues match this plan item?

  Bug 43237
  Bug 47712
  Bug 86283
  Bug 87339


Bug 43237 and Bug 47712 are not covered by this bug. Bug 86283 might be covered
since we are investigating ways to allow refactoring descriptions (but not quick
fixes) to be attached to change sets. Bug 87339 isn't covered either, however it
is on the 3.2 plan.

The generic "Improve refactoring" title might be confusing. I will change it to
better match the description of this bug report.
The title of this bug has been changed to match the latest plan revision. In addition, the text of this item in the plan has changed. The new text is:
"
Refactoring currently relies on a closed world assumption. This means that all of the code to be refactored must be available in the workspace when the refactoring is triggered. However for large distributed teams, the closed world approach isn't really feasible. The same is true for clients which use binary versions of libraries where API changes from one version to another. In 3.2 the closed world assumptions will be relaxed in such a way that a refactoring executed in workspace A can be "reapplied" on workspace B to refactor any remaining references to the refactored element. [JDT Core/UI]
"

What is the status of this item?
The items mentioned in comment 0 and comment 5 have been covered, namely:

- Scripting support for refactorings with the ability to create refactoring scripts and replay them on another workspace
- Sharing of project refactoring information across workspaces
- Support to annotate JAR files with refactoring information in order to ease API migration to new versions of libraries
- A number of refactorings such as Rename, Move, Change Signature, ... now generate delegates to preserve API compatibility

All items have been released and are now currently polished and tested.
Is more work planned for R3.2? (If not, we should mark the bug as fixed.)
No, two other items have been deferred to 3.3 in order to have more time for testing. For 3.2, all features are in.

Closing as fixed.</WithStack>
    <WithOutStack>Refactoring currently relies on a closed world assumption. This means that all of the code to be refactored 
must be available in the workspace when the refactoring is triggered. However for large distributed teams, 
the closed world approach isn't really feasible. The same is true for clients which use binary versions of 
libraries where API changes from one version to another. In 3.2 the closed world assumptions will be 
relaxed in such a way that a refactoring executed in workspace A can be "reapplied" on workspace B to 
refactor any remaining references to the refactored element. Furthermore, existing refactorings will be 
improved to preserve API compatibility where possible (for example when renaming a method, a 
deprecated stub with the old signature will be generated that forwards to the new method). [JDT Core/UI]
*** Bug 76503 has been marked as a duplicate of this bug. ***
Please consider the work done at http://www-plan.cs.colorado.edu/henkel/catchup/ .
Unfortunately, it seems the announced plugin will not be published - maybe
Eclipse.org can get it as a contribution.

Does any of the following issues match this plan item?

  Bug 43237
  Bug 47712
  Bug 86283
  Bug 87339


Bug 43237 and Bug 47712 are not covered by this bug. Bug 86283 might be covered
since we are investigating ways to allow refactoring descriptions (but not quick
fixes) to be attached to change sets. Bug 87339 isn't covered either, however it
is on the 3.2 plan.

The generic "Improve refactoring" title might be confusing. I will change it to
better match the description of this bug report.
The title of this bug has been changed to match the latest plan revision. In addition, the text of this item in the plan has changed. The new text is:
"
Refactoring currently relies on a closed world assumption. This means that all of the code to be refactored must be available in the workspace when the refactoring is triggered. However for large distributed teams, the closed world approach isn't really feasible. The same is true for clients which use binary versions of libraries where API changes from one version to another. In 3.2 the closed world assumptions will be relaxed in such a way that a refactoring executed in workspace A can be "reapplied" on workspace B to refactor any remaining references to the refactored element. [JDT Core/UI]
"

What is the status of this item?
The items mentioned in comment 0 and comment 5 have been covered, namely:

- Scripting support for refactorings with the ability to create refactoring scripts and replay them on another workspace
- Sharing of project refactoring information across workspaces
- Support to annotate JAR files with refactoring information in order to ease API migration to new versions of libraries
- A number of refactorings such as Rename, Move, Change Signature, ... now generate delegates to preserve API compatibility

All items have been released and are now currently polished and tested.
Is more work planned for R3.2? (If not, we should mark the bug as fixed.)
No, two other items have been deferred to 3.3 in order to have more time for testing. For 3.2, all features are in.

Closing as fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106208" />
    <CreationDate amount="2005-08-05 12:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="Examples [GEF 3.x / Zest 1.x]" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[EDiagram] Shift-Edit semantics</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>a) the instantiated Ecore super-type attributes are changed to match</Line>
          <Line>the changed graphics. e.g. Ecore has B-&gt;A. EDiagram shows A,B,C and</Line>
          <Line>B-&gt;A. A reconnect of the B end of B-&gt;A to C, deletes B-&gt;A and creates C-&gt;A.</Line>
          <Line />
          <Line>b) the graphics is changed to instantiate a different super-type relationship</Line>
          <Line>and so the command can only execute when the changed grpahics corresponds to</Line>
          <Line>a legal Ecore context. e.g. Ecore has B-&gt;A, and C-&gt;A. EDiagram shows A,B,C</Line>
          <Line>B-&gt;A. A reconnect of the B end of B-&gt;A to C can therefore change the graphic to</Line>
          <Line>show C-&gt;A.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The Delete command is the most obvious demonstration of a need for two
distinction operations, Delete to affect the graphical instantiation of
the Ecore model, and Shift-Delete to affect the Ecore model itself and
any associated graphical instantiation.

The same distinction actually occurs for ? all commands. ? Is it possible
to achieve a consistent Shift-XXX is an Ecore edit, XXX is a graphic edit ?

For instance, when reconnecting the end of an Inheritance there are two
possible interpretations:

a) the instantiated Ecore super-type attributes are changed to match
the changed graphics. e.g. Ecore has B-&gt;A. EDiagram shows A,B,C and
B-&gt;A. A reconnect of the B end of B-&gt;A to C, deletes B-&gt;A and creates C-&gt;A.

b) the graphics is changed to instantiate a different super-type relationship
and so the command can only execute when the changed grpahics corresponds to
a legal Ecore context. e.g. Ecore has B-&gt;A, and C-&gt;A. EDiagram shows A,B,C
B-&gt;A. A reconnect of the B end of B-&gt;A to C can therefore change the graphic to
show C-&gt;A. 

For consistency a) should be Shift-Reconnect, and b) just Reconnect.

Similarly a Shift-Drag-Connection could provide a means to draw only legal
instantiations (avoiding the need to DND from the outline). This will
require some kind of context dependent pop-up so that a choice can be made
between multiple alternatives, which in turn implies that the Shift-Drag
distinction could resolved by an anonymous Pallett entry so that there
is a choice of Create-Inheritance, Create Reference,
or Instantiate Link and of course similarly an Instantiate Node, so that
a DND of an outline item can change the instantiated class, or a context
pop-up/property edit change the instantiation.

This then means that changing the name of a class by Direct Edit is
a change of the instantiation. It must require a Shift-Direct Edit to rename
the Ecore element.

This seems to suggest that Shift could be consistent as an Ecore Edit
permission, but equally the need to use Shift so often could be tedious
and confusing for novices though ultimately beneficial in clarifying what
is a graphical edit.

I doubt this really matters in EDiagram, but it is more significant for
me in UMLX where model instantiation plays a more significant role than
model develeopment. Comments?
EDiagram is discontinued.</WithStack>
    <WithOutStack>The Delete command is the most obvious demonstration of a need for two
distinction operations, Delete to affect the graphical instantiation of
the Ecore model, and Shift-Delete to affect the Ecore model itself and
any associated graphical instantiation.

The same distinction actually occurs for ? all commands. ? Is it possible
to achieve a consistent Shift-XXX is an Ecore edit, XXX is a graphic edit ?

For instance, when reconnecting the end of an Inheritance there are two
possible interpretations:

a) the instantiated Ecore super-type attributes are changed to match
the changed graphics. e.g. Ecore has B-&gt;A. EDiagram shows A,B,C and
B-&gt;A. A reconnect of the B end of B-&gt;A to C, deletes B-&gt;A and creates C-&gt;A.

b) the graphics is changed to instantiate a different super-type relationship
and so the command can only execute when the changed grpahics corresponds to
a legal Ecore context. e.g. Ecore has B-&gt;A, and C-&gt;A. EDiagram shows A,B,C
B-&gt;A. A reconnect of the B end of B-&gt;A to C can therefore change the graphic to
show C-&gt;A. 

For consistency a) should be Shift-Reconnect, and b) just Reconnect.

Similarly a Shift-Drag-Connection could provide a means to draw only legal
instantiations (avoiding the need to DND from the outline). This will
require some kind of context dependent pop-up so that a choice can be made
between multiple alternatives, which in turn implies that the Shift-Drag
distinction could resolved by an anonymous Pallett entry so that there
is a choice of Create-Inheritance, Create Reference,
or Instantiate Link and of course similarly an Instantiate Node, so that
a DND of an outline item can change the instantiated class, or a context
pop-up/property edit change the instantiation.

This then means that changing the name of a class by Direct Edit is
a change of the instantiation. It must require a Shift-Direct Edit to rename
the Ecore element.

This seems to suggest that Shift could be consistent as an Ecore Edit
permission, but equally the need to use Shift so often could be tedious
and confusing for novices though ultimately beneficial in clarifying what
is a graphical edit.

I doubt this really matters in EDiagram, but it is more significant for
me in UMLX where model instantiation plays a more significant role than
model develeopment. Comments?
EDiagram is discontinued.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106209" />
    <CreationDate amount="2005-08-05 12:47:00 -0400" />
    <DupId amount="80162" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[plan item] Implement library projects</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>For plug-in development, PDE distinguishes between the plug-in projects you are working on (source 
plug-in projects) and plug-in projects you are working with but not actually changing (binary plug-in 
projects). Making this distinction affords the user the benefits of having full source for everything in their 
workspace where it's easily browsed and searched, while permitting economies because the latter kind of 
projects do not actually have to be (re)compiled. This work item is to support a similar notion of library 
project for Java development in general. The user should be able to flag a Java project as a library project; 
JDT would then know how to present library projects appropriately at the UI, and how to deal with them 
more efficiently using generated binaries. [JDT Core, JDT UI, PDE]
*sigh*. Sorry, I missed bug #80162 which is the old plan item for this. Closing this one as a dup and 
updating the other one...


*** This bug has been marked as a duplicate of 80162 ***</WithStack>
    <WithOutStack>For plug-in development, PDE distinguishes between the plug-in projects you are working on (source 
plug-in projects) and plug-in projects you are working with but not actually changing (binary plug-in 
projects). Making this distinction affords the user the benefits of having full source for everything in their 
workspace where it's easily browsed and searched, while permitting economies because the latter kind of 
projects do not actually have to be (re)compiled. This work item is to support a similar notion of library 
project for Java development in general. The user should be able to flag a Java project as a library project; 
JDT would then know how to present library projects appropriately at the UI, and how to deal with them 
more efficiently using generated binaries. [JDT Core, JDT UI, PDE]
*sigh*. Sorry, I missed bug #80162 which is the old plan item for this. Closing this one as a dup and 
updating the other one...


*** This bug has been marked as a duplicate of 80162 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106210" />
    <CreationDate amount="2005-08-05 12:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[plan item][nls tooling] Improve NLS tooling</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="19">
        <Lines>
          <Line>1) Currently when you add or edit keys the changes are reflected in the</Line>
          <Line>specified properties file (say 'strings.properties'). But if you have more files</Line>
          <Line>in your bundle ('strings_dk.properties', 'strings_it.properties' etc) you have</Line>
          <Line>to edit them manually. So it should be possible to specify more than one</Line>
          <Line>property file (perhaps using wildcards?) and/or the wizard should (optionally?)</Line>
          <Line>try to find all property files based on the root part (in this case 'strings')</Line>
          <Line>and display them in the 'changes to be performed' list.</Line>
          <Line />
          <Line>2) It's cumbersome to remove keys. First you need to start the wizard and</Line>
          <Line>internalize the key (and, as above, this only works on one property file) and</Line>
          <Line>then you can remove the string from your code. The wizard should detect keys</Line>
          <Line>that are no longer in use and offer to remove them from the accessor class and</Line>
          <Line>the relevant property file(s).</Line>
          <Line />
          <Line>3) And finally, when you have more than one source file externalized in one set</Line>
          <Line>of accessor class/property file(s), _please_ consider making it possible to open</Line>
          <Line>all of these source files at the same time in the wizard. It's a pain having to</Line>
          <Line>open wizard for source file 1, edit keys, perform changes, open wizard for file</Line>
          <Line>2 etc...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The Eclipse NLS tooling should better support the the new Eclipse string externalization pattern added in 
3.1, along with ways to help developers with unused keys and unused property file entries. [JDT UI]
This item is JDT Text and not JDT UI.
Mike, can you please update the item on the 3.2 plan? Thanks.
Jeem, said he would change it for me.
Here's some things that needs fixed in the Externalize Strings wizard: 

1) Currently when you add or edit keys the changes are reflected in the 
specified properties file (say 'strings.properties'). But if you have more files 
in your bundle ('strings_dk.properties', 'strings_it.properties' etc) you have 
to edit them manually. So it should be possible to specify more than one 
property file (perhaps using wildcards?) and/or the wizard should (optionally?) 
try to find all property files based on the root part (in this case 'strings') 
and display them in the 'changes to be performed' list.

2) It's cumbersome to remove keys. First you need to start the wizard and 
internalize the key (and, as above, this only works on one property file) and 
then you can remove the string from your code. The wizard should detect keys 
that are no longer in use and offer to remove them from the accessor class and 
the relevant property file(s).

3) And finally, when you have more than one source file externalized in one set 
of accessor class/property file(s), _please_ consider making it possible to open 
 all of these source files at the same time in the wizard. It's a pain having to 
 open wizard for source file 1, edit keys, perform changes, open wizard for file 
 2 etc...

If any of these points needs a seperate bug#, feel free to move them or ask me 
and I'll do it.

Regards /Max

 
Please file a separate PRs. 1) and 3) are enhancement requests which will
most-likely not be addressed for 3.2 unless there's a good quality contribution.
2) looks like a bug.
The text of this item in the plan has changed. The new text is:
"
The Eclipse NLS tooling should better support the new Eclipse string externalization pattern added in 3.1. [JDT Text]
"

Benno, drop by for more info.
fixed &gt; I20060301-0800

NLSStringHover: Show the value of the nls constant when hovering over a reference to an NLS constant.
NLSKeyHyperlink: Jump directly to the definition of nls constant in the property file when clicking on the link of an NLS constant reference.
PropertyKeyHyperlink: Jump to users of an nls value when clicking on the link in the properties file (or show a dialog if multiple users)
NLSSearchResultRequestor: Search for and show 
      +Unusued property keys 
      +Referenced but undefined property keys

All this is supposed to work and behave the same with the traditional nls style and the eclipse nls style.

Max, 1) and 3) are enhancement requests, as Dani said, file separate bugs. I think also 2) is an enhancement, or did the dialog ever detect unused keys? You can use the NLS search to find unused/undefined nls keys.</WithStack>
    <WithOutStack>The Eclipse NLS tooling should better support the the new Eclipse string externalization pattern added in 
3.1, along with ways to help developers with unused keys and unused property file entries. [JDT UI]
This item is JDT Text and not JDT UI.
Mike, can you please update the item on the 3.2 plan? Thanks.
Jeem, said he would change it for me.
Here's some things that needs fixed in the Externalize Strings wizard: 

1) Currently when you add or edit keys the changes are reflected in the 
specified properties file (say 'strings.properties'). But if you have more files 
in your bundle ('strings_dk.properties', 'strings_it.properties' etc) you have 
to edit them manually. So it should be possible to specify more than one 
property file (perhaps using wildcards?) and/or the wizard should (optionally?) 
try to find all property files based on the root part (in this case 'strings') 
and display them in the 'changes to be performed' list.

2) It's cumbersome to remove keys. First you need to start the wizard and 
internalize the key (and, as above, this only works on one property file) and 
then you can remove the string from your code. The wizard should detect keys 
that are no longer in use and offer to remove them from the accessor class and 
the relevant property file(s).

3) And finally, when you have more than one source file externalized in one set 
of accessor class/property file(s), _please_ consider making it possible to open 
 all of these source files at the same time in the wizard. It's a pain having to 
 open wizard for source file 1, edit keys, perform changes, open wizard for file 
 2 etc...

If any of these points needs a seperate bug#, feel free to move them or ask me 
and I'll do it.

Regards /Max

 
Please file a separate PRs. 1) and 3) are enhancement requests which will
most-likely not be addressed for 3.2 unless there's a good quality contribution.
2) looks like a bug.
The text of this item in the plan has changed. The new text is:
"
The Eclipse NLS tooling should better support the new Eclipse string externalization pattern added in 3.1. [JDT Text]
"

Benno, drop by for more info.
fixed &gt; I20060301-0800

NLSStringHover: Show the value of the nls constant when hovering over a reference to an NLS constant.
NLSKeyHyperlink: Jump directly to the definition of nls constant in the property file when clicking on the link of an NLS constant reference.
PropertyKeyHyperlink: Jump to users of an nls value when clicking on the link in the properties file (or show a dialog if multiple users)
NLSSearchResultRequestor: Search for and show 
      +Unusued property keys 
      +Referenced but undefined property keys

All this is supposed to work and behave the same with the traditional nls style and the eclipse nls style.

Max, 1) and 3) are enhancement requests, as Dani said, file separate bugs. I think also 2) is an enhancement, or did the dialog ever detect unused keys? You can use the NLS search to find unused/undefined nls keys.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106211" />
    <CreationDate amount="2005-08-05 12:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[plan item] Improve target support</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="4">
      <Enumeration lines="1">
        <Lines>
          <Line>1. Target Definition</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="8">
        <Lines>
          <Line>1. name</Line>
          <Line>2. location</Line>
          <Line>3. additional locations without the need for links.</Line>
          <Line>4. Content (in terms of plugins or features or both)</Line>
          <Line>5. target environment (ws, os, arch, nl)</Line>
          <Line>6. JRE (default or by name or by Execution Environment)</Line>
          <Line>7. Program/VM launching arguments associated with this target</Line>
          <Line>8. Implicit dependencies when using this target.  This option is useful when running a target that requires certain plug-ins that are not explicitly listed in a plugin's manifest file.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- org.eclipse.osgi</Line>
          <Line>- org.eclipse.swt</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- NamedTargetA</Line>
          <Line>- org.eclipse.jface</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>PDE manages a model of the target Eclipse for which you are developing. Targets may be complex and 
diverse, and switching targets or launch configurations can be expensive. PDE should be extended to 
support named targets and automatically track changes to the workspace. [PDE, Core]
*** Bug 80163 has been marked as a duplicate of this bug. ***
Possible requirements for Named Targets:

It would be advantageous to users if they could compile their code against a 
subset of the full target platform.  This would allow the user to develop 
projects for a variety of platforms and versions in one workspace.  These 
subsets should consist of possibly selecting features, plug-ins, fragments, and 
other subsets to include for the project’s development.  These subsets should 
be usable for build path management and for use with launches and product 
configurations.

The ability to programmatically add named sets for a user would simplify the 
process for a user, as Named Targets could be created for the user by ISV 
developed plug-ins.  One option may be via extension point.  The ability to 
define these in the target platform and have them created when the target 
platform was loaded may also prove useful.  

We should also have the ability to allow users to define Named Targets through 
a UI.  Users would be able to composed their Named Targets from scratch, or add 
to existing Named Targets.

It might be helpful to a user to be able to sort OS independent bundles vs. OS 
dependent bundles/fragments.  Thereby allowing the user a quick way to create a 
subset based on an OS/architecture.  This is just an option and may not be 
valuable enough to implement.

These Named Targets could also be valuable to a user in the launch dialog.  
They could select one of the Named Targets in the launcher to quickly select a 
set of plug-ins/fragments/features.  This way they could quickly launch the 
plug-ins/fragments/features to correctly simulate their environment.  This 
could be useful in pre-populating the plug-ins/fragments/features on the plug-
ins page of the launcher. 

A user may want to create a named target from an existing names target, so the 
implementation would need to support inheritance of named sets.  For example:

NamedTargetA:
	- org.eclipse.osgi
	- org.eclipse.swt

NamedTargetB:
	- NamedTargetA
	- org.eclipse.jface

One implementation might be using features to define Named Targets.  These 
features would contain features/plug-ins/fragments.  The feature defining the 
Named Target could have metadata in the feature telling PDE that it is defining 
a Named Target.  During the parsing and loading of the plug-ins in the Target 
Platform, the PDE would load this Named Target. 

Named Targets should be configurable through the PDE preference page.  This 
page should allow the user to select and create new Named Targets.  The launch 
dialog should have the capability to select and launch the plug-ins in a Named 
Target.

Named Targets might also be able to warn the user if they reference a class or 
package from a plug-in that is not in the current Named Target.  This would 
ensure the user will not unknowingly write code referencing classes that won’t 
be available in the runtime.

Here is how we addressed this item:

1. Target Definition

A target definition is a .target file that can be created via File &gt; New &gt; Other... &gt; Plug-in Development &gt; Target Definition.
Three options when creating a .target file:
  i.  blank file
  ii. a target based on the current target platform settings
  iii. a target based on an existing target definition.

The .target file opens in a form-based Target Editor that lets you specify all aspects of a target:
1. name
2. location 
3. additional locations without the need for links.
4. Content (in terms of plugins or features or both)
5. target environment (ws, os, arch, nl)
6. JRE (default or by name or by Execution Environment)
7. Program/VM launching arguments associated with this target
8. Implicit dependencies when using this target.  This option is useful when running a target that requires certain plug-ins that are not explicitly listed in a plugin's manifest file.

On the Target Platform preference page, you can browse the workspace for .target files and load them

We also introduced a new org.eclipse.pde.core.targets extension point to allow products to ship with pre-canned targets.

The target combo box on the Target Platform preference page is pre-populated with all registered org.eclipse.pde.core.targets extension.

The org.eclipse.pde.core.targets extension take a unique ID, a translatable name, a translatable description, and a path to the .target file that describes the target.

Finally, on the Target Platform preference page, you can preview a target before loading it.  The Preview displays the content of the target in a form-based tabbed window.</WithStack>
    <WithOutStack>PDE manages a model of the target Eclipse for which you are developing. Targets may be complex and 
diverse, and switching targets or launch configurations can be expensive. PDE should be extended to 
support named targets and automatically track changes to the workspace. [PDE, Core]
*** Bug 80163 has been marked as a duplicate of this bug. ***
Possible requirements for Named Targets:

It would be advantageous to users if they could compile their code against a 
subset of the full target platform.  This would allow the user to develop 
projects for a variety of platforms and versions in one workspace.  These 
subsets should consist of possibly selecting features, plug-ins, fragments, and 
other subsets to include for the project’s development.  These subsets should 
be usable for build path management and for use with launches and product 
configurations.

The ability to programmatically add named sets for a user would simplify the 
process for a user, as Named Targets could be created for the user by ISV 
developed plug-ins.  One option may be via extension point.  The ability to 
define these in the target platform and have them created when the target 
platform was loaded may also prove useful.  

We should also have the ability to allow users to define Named Targets through 
a UI.  Users would be able to composed their Named Targets from scratch, or add 
to existing Named Targets.

It might be helpful to a user to be able to sort OS independent bundles vs. OS 
dependent bundles/fragments.  Thereby allowing the user a quick way to create a 
subset based on an OS/architecture.  This is just an option and may not be 
valuable enough to implement.

These Named Targets could also be valuable to a user in the launch dialog.  
They could select one of the Named Targets in the launcher to quickly select a 
set of plug-ins/fragments/features.  This way they could quickly launch the 
plug-ins/fragments/features to correctly simulate their environment.  This 
could be useful in pre-populating the plug-ins/fragments/features on the plug-
ins page of the launcher. 

A user may want to create a named target from an existing names target, so the 
implementation would need to support inheritance of named sets.  For example:

NamedTargetA:
	- org.eclipse.osgi
	- org.eclipse.swt

NamedTargetB:
	- NamedTargetA
	- org.eclipse.jface

One implementation might be using features to define Named Targets.  These 
features would contain features/plug-ins/fragments.  The feature defining the 
Named Target could have metadata in the feature telling PDE that it is defining 
a Named Target.  During the parsing and loading of the plug-ins in the Target 
Platform, the PDE would load this Named Target. 

Named Targets should be configurable through the PDE preference page.  This 
page should allow the user to select and create new Named Targets.  The launch 
dialog should have the capability to select and launch the plug-ins in a Named 
Target.

Named Targets might also be able to warn the user if they reference a class or 
package from a plug-in that is not in the current Named Target.  This would 
ensure the user will not unknowingly write code referencing classes that won’t 
be available in the runtime.

Here is how we addressed this item:

1. Target Definition

A target definition is a .target file that can be created via File &gt; New &gt; Other... &gt; Plug-in Development &gt; Target Definition.
Three options when creating a .target file:
  i.  blank file
  ii. a target based on the current target platform settings
  iii. a target based on an existing target definition.

The .target file opens in a form-based Target Editor that lets you specify all aspects of a target:
1. name
2. location 
3. additional locations without the need for links.
4. Content (in terms of plugins or features or both)
5. target environment (ws, os, arch, nl)
6. JRE (default or by name or by Execution Environment)
7. Program/VM launching arguments associated with this target
8. Implicit dependencies when using this target.  This option is useful when running a target that requires certain plug-ins that are not explicitly listed in a plugin's manifest file.

On the Target Platform preference page, you can browse the workspace for .target files and load them

We also introduced a new org.eclipse.pde.core.targets extension point to allow products to ship with pre-canned targets.

The target combo box on the Target Platform preference page is pre-populated with all registered org.eclipse.pde.core.targets extension.

The org.eclipse.pde.core.targets extension take a unique ID, a translatable name, a translatable description, and a path to the .target file that describes the target.

Finally, on the Target Platform preference page, you can preview a target before loading it.  The Preview displays the content of the target in a form-based tabbed window.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106212" />
    <CreationDate amount="2005-08-05 12:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[plan item] New source lookup for debugging Eclipse applications</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. The debugger hits a breakpoint.</Line>
          <Line>2. The director receives a stack frame object (IJavaStackFrame) for which it has to locate the source.</Line>
          <Line>3. the director retrieves the classloader associated with the stack frame.</Line>
          <Line>This classloader is an instance of org.eclipse.core.runtime.adaptor.EclipseClassLoader and carries a member variable (hostdata) which holds the name/version/location of the bundle associated with this classloader.</Line>
          <Line />
          <Line>4. PDE uses this info to zero in on the project/package fragment root/external archive containing the source for this bundle and returns it.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The default source lookup mechanism for debugging Java applications has scalability issues since the 
debugger may needing to scan a list of hundreds of plug-in projects each time it look up a source file. 
PDE should provide its own source path computer to which the debugger can delegate the task of locating 
source files. In addition to faster lookups, the PDE-based approach will be better positioned to handle 
duplicate source files on the same source path. It would also allow the user to easily debug plug-ins 
against different targets without having to change the Target Platform in the preferences. [PDE, Debug, 
Core]
The interesting discussion took place in bug 65614.

Source lookup when debugging all PDE launch configurations (Eclipse App, Equinox and Plugin/JUnit) now uses a source lookup mechanism that is faithful to the OSGi classloader.

The solution involved a new source lookup director, which extends the standard lookup director.

Here is how it works:
1. The debugger hits a breakpoint.
2. The director receives a stack frame object (IJavaStackFrame) for which it has to locate the source.
3. the director retrieves the classloader associated with the stack frame.
This classloader is an instance of org.eclipse.core.runtime.adaptor.EclipseClassLoader and carries a member variable (hostdata) which holds the name/version/location of the bundle associated with this classloader.

4. PDE uses this info to zero in on the project/package fragment root/external archive containing the source for this bundle and returns it.

This new source lookup is much faster than the standard linear Java lookup as it knows exactly where to look for source and what projects/libraries are involved.

It is also very accurate and is not fooled by Java files by the same qualified name in the workspace.

As a luxury bonus feature, you can now even debug an entire Eclipse Application, including stopping in Main, without having a single project in your host workbench.
I meant to cross-reference bug 65164 in comment 1</WithStack>
    <WithOutStack>The default source lookup mechanism for debugging Java applications has scalability issues since the 
debugger may needing to scan a list of hundreds of plug-in projects each time it look up a source file. 
PDE should provide its own source path computer to which the debugger can delegate the task of locating 
source files. In addition to faster lookups, the PDE-based approach will be better positioned to handle 
duplicate source files on the same source path. It would also allow the user to easily debug plug-ins 
against different targets without having to change the Target Platform in the preferences. [PDE, Debug, 
Core]
The interesting discussion took place in bug 65614.

Source lookup when debugging all PDE launch configurations (Eclipse App, Equinox and Plugin/JUnit) now uses a source lookup mechanism that is faithful to the OSGi classloader.

The solution involved a new source lookup director, which extends the standard lookup director.

Here is how it works:
1. The debugger hits a breakpoint.
2. The director receives a stack frame object (IJavaStackFrame) for which it has to locate the source.
3. the director retrieves the classloader associated with the stack frame.
This classloader is an instance of org.eclipse.core.runtime.adaptor.EclipseClassLoader and carries a member variable (hostdata) which holds the name/version/location of the bundle associated with this classloader.

4. PDE uses this info to zero in on the project/package fragment root/external archive containing the source for this bundle and returns it.

This new source lookup is much faster than the standard linear Java lookup as it knows exactly where to look for source and what projects/libraries are involved.

It is also very accurate and is not fooled by Java files by the same qualified name in the workspace.

As a luxury bonus feature, you can now even debug an entire Eclipse Application, including stopping in Main, without having a single project in your host workbench.
I meant to cross-reference bug 65164 in comment 1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106213" />
    <CreationDate amount="2005-08-05 13:00:00 -0400" />
    <DupId amount="200098" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[plan item] API-aware tools</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Given the importance that the Eclipse community places on stable, robust APIs, having good support for 
their implementation is critical. The support within Eclipse for describing APIs should be improved, along 
with better tools from assisting developers to stick to APIs provided by other plug-ins. [PDE, JDT]
Marking as LATER as this item is defered for R3.2.
API Tooling is now fully part of the PDE product.

*** This bug has been marked as a duplicate of bug 200098 ***</WithStack>
    <WithOutStack>Given the importance that the Eclipse community places on stable, robust APIs, having good support for 
their implementation is critical. The support within Eclipse for describing APIs should be improved, along 
with better tools from assisting developers to stick to APIs provided by other plug-ins. [PDE, JDT]
Marking as LATER as this item is defered for R3.2.
API Tooling is now fully part of the PDE product.

*** This bug has been marked as a duplicate of bug 200098 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106214" />
    <CreationDate amount="2005-08-05 13:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[plan item] Improve PDE build</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="6">
      <Enumeration lines="11">
        <Lines>
          <Line>- 68048  Better handling of errors on state build</Line>
          <Line>- 75285  Footprint required for upgrade to 3.0.1 not known</Line>
          <Line>- 86116  Useless error message for failure Exporting Feature</Line>
          <Line>- 97835  Simplification of application export</Line>
          <Line>- 97929  Provide an option to sign feature root files</Line>
          <Line>- 106123  UI feature export crashes when version qualifier contains underscores</Line>
          <Line>- 35371 Ways to hook in an existing build.xml</Line>
          <Line>- 105282 Improve support for JNLP export</Line>
          <Line>- More flexible layout for input to the build</Line>
          <Line>- Improve support for product export</Line>
          <Line>- Ensure composibility of the various tasks</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- 106173  The classpath computation does not take friends and private export into consideration</Line>
          <Line>- 98757, 105408 Restrict the set of bundles considered by PDE Build (based on feature)</Line>
          <Line />
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- incremental fetch</Line>
          <Line>- delta drops (only contain the plugins and features that have changed)</Line>
          <Line>- build in parallel</Line>
          <Line>- review the scripts that are being generated</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="13">
        <Lines>
          <Line>- 81918  encoding used in projects is ignored</Line>
          <Line>- 55353, 76218 project or workspace compiler settings are ignored</Line>
          <Line>- 82414, 103645 source filters are ignored</Line>
          <Line />
          <Line>IResource awareness</Line>
          <Line>- 101966  "Export as deployable plugins" fails when prerequisite plugin is linked binary project</Line>
          <Line>What happens here with respect to the remote resource work going on</Line>
          <Line />
          <Line>Builder awareness (35371)</Line>
          <Line>- 74880   PDE build does not use project class libraries</Line>
          <Line>- 101241  Plugin exporter should support exporting plugins from their output folder</Line>
          <Line>- 104156  PDE build.xml should use all project builders</Line>
          <Line />
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- 74880   PDE build does not use project class libraries</Line>
          <Line>- 101241  Plugin exporter should support exporting plugins from their output folder</Line>
          <Line>- 104156  PDE build.xml should use all project builders</Line>
          <Line />
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- 34757 Multiple repository: the fetch task provides a way to automate the fetching of code from a CVS</Line>
          <Line>repository. It is nice this it guarantee that all the right depends are fetched and it is minimal for the</Line>
          <Line>things being built. However if the code comes from multiple repository and repository that do not offer</Line>
          <Line>the same flexibility than CVS things get harder. Note that the fetch step is optional.</Line>
          <Line>- build from update site</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>PDE Build is fundamental to how the Eclipse Platform releases are produced. It is also increasingly being 
used by other Eclipse projects and in the wider community. Potential improvements to PDE build include 
parallel cross-building, incremental building of plug-ins, increased integration with the workspace model, 
and support for additional repository providers. [PDE]
Improved debuggability would also be appreciated. E.g. at present error messages
are often quite inscrutable.
In addition to being in violent agreement with Tom about better error
messages, I have been thinking about the last two things in Mike's
list myself recently.

"increased integration with the workspace model": This is something
that has bugged me and some of my coworkers about PDE Build, that
builds done through PDE Build are done differently than builds
developers do within their workspaces.  Because they use different
mechanisms, the Java code may be compiled with different options, and
other aspects of the build (such as running custom Ant scripts) are
done differently in the two environments.  I think PDE Build should
use the exact same mechanism as the Eclipse IDE to do the bulk of the
build.  PDE Build would just perform the extra task of setting up the
workspace before invoking the Eclipse IDE build.

"support for additional repository providers": I spent a while trying
to get PDE Build to work with ClearCase and came to the conclusion
that it is just not possible without a major overhaul of PDE Build.
PDE Build's view of source control is very CVS-centric and can't be
mapped to ClearCase or other repositories that don't behave like CVS.
The features that tie it most tightly to CVS are (1) that each
directory in the repository can be fetched using a different
tag/branch/label, and (2) the directory structure of the fetched
source can be completely different from the directory structure in the
repository.  This does not map to ClearCase, where using different
branch/label rules for different parts of a VOB is non-trivial, and
where the directory structure of a view needs to match the directory
structure in the repository.  There is also the fact that PDE Build
expects to fetch the source fresh from the repository with every
build, while ClearCase is designed to keep a view around for a while
and just update the view when doing a build.  (This isn't a fatal
flaw, since creating a new ClearCase view with each build isn't too
hard.  But there is a record of the view on the server, so you have to
remember to remove the view when the build is done, unlike CVS where
the server has no record of checkouts.  And creating a new view with
every build runs into ClearCase's significant networking issues.)


McQ 2005-08-05 13:01
&gt; Potential improvements to PDE build include parallel cross-building,

What is meant by "parallel cross-building"? Inquiring minds ...


McQ 2005-08-05 13:01
&gt;&gt; Potential improvements to PDE build include [...] support for
&gt;&gt; additional repository providers

David Olsen  2005-08-08 12:20
&gt; In addition to being in violent agreement

(Careful, you'll scare our Canadian pals--they already think we're
all imperialist gun nuts !-)

&gt; "support for additional repository providers": I spent a while
&gt; trying to get PDE Build to work with ClearCase and came to the
&gt; conclusion that it is just not possible without a major overhaul of
&gt; PDE Build.

I believe (I Could Be Wrong, Your Mileage May Vary, I certainly don't
know as much about PDEB as I would like) that the main differences
between PDEB and its users are that the latter are more likely to

* use SCMs with non-CVS semantics

* bring in a larger proportion of build inputs as binaries (e.g.
  prebuilt components)

If so, then I suspect (ICBW, YMMV) both PDEB and its users can be
well accomodated by a PDEB that

* can start up "pointing to" some workspace (e.g. a CC MVFS)

* has something like a custom ant task for fetching from CVS

* has something like a custom ant task for fetching binaries

Then, e.g.,

* a PDEB user like R*D could start up in its dynamic view, and in
  its fetch phase get

· whatever additional sources they required (from contributors who
  are not using CC)

· its binary dependencies

* PDEB could just call its CVS task as usual in its fetch phase

This may be possible with today's PDEB (I certainly haven't done it
yet), but likely requires more hoop-jumping than users would like.

(In reply to comment #2)
&gt; "support for additional repository providers": I spent a while trying
&gt; to get PDE Build to work with ClearCase and came to the conclusion
&gt; that it is just not possible without a major overhaul of PDE Build.

This is covered in bug 34757. I've also written a patch, which works well here
in our ClearCase environment. Basically, it enhances the map file syntax to
fetch from different repositories. Someone might want to write a specific
ClearCase provider that creates a view with a specific config spec, fetches the
source and destroys the view afterwards.

However, you can't use the tag+release concept that Eclipse uses with CVS with
ClearCase. IMHO it's too much overhand if you create and destroy a view for
every plugin. I have estahblished another approach in our environment. PDE Build
is invoked throuh CruiseControl. Before building any Eclipse stuff, the view is
updated with a specified config spec (e.g., latest or milestone builds).

CruiseControl 
-&gt; bootstrap builder
-&gt; start builder

Builder
-&gt; get config spec &amp; update view
-&gt; start patched PDE Build
(In reply to comment #5)

&gt; IMHO it's too much overhand ...

I meant to say "overhead".

Comment #5 From Gunnar Wagenknecht  2005-08-09 00:14
&gt; [Support for additional repository providers] is covered in bug 34757.

So perhaps discussion of that particular PDEB improvement
should move there? And perhaps separate bugzillas should be spawned
for each of the other mentioned enhancements:

* parallel cross-building

* incremental building of plug-ins

* increased integration with the workspace model

* improved debuggability

This bugzilla could then be reserved for new enhancement proposals.


Ted Chiasson (from AST) has submitted several PDEB-related bugzillas:

84351: Can't package a feature when patch is present, may fail silently

93299: PDE packager deletes tree at the end of packaging step

97346: Ability to specify default build.properties

100460: root property in packaging.properties does not seem to be used

106490: generated unzipper.xml does not work correctly (-x /features)

106505: build.properties in feature dir causes feature to not be packaged

I would to precise some of the items that have been listed in the initial comment, scope some of the 
work that is being planned, and list other things we'd like to do. However nothing guarantee that all of 
these items will be covered in the 3.2 timeframe. It just constitutes a list of improvements / directions 
that are being considered. Moreover it does not include the obvious bugs that must be fixed.

I like to classify things, so there are really 4 themes of work that I can see happening for PDE Build.

Usability
=======
This theme encompasses various aspects of PDE Build usability such as error reporting, flexibility in the 
input, complexity / modularity of the infrastructure, etc... .

- 68048  Better handling of errors on state build 
- 75285  Footprint required for upgrade to 3.0.1 not known 
- 86116  Useless error message for failure Exporting Feature
- 97835  Simplification of application export
- 97929  Provide an option to sign feature root files 
- 106123  UI feature export crashes when version qualifier contains underscores 
- 35371 Ways to hook in an existing build.xml
- 105282 Improve support for JNLP export
- More flexible layout for input to the build
- Improve support for product export
- Ensure composibility of the various tasks


Runtime fidelity
============
Like any other plugin in the PDE space, PDE build sole purpose is to tool the runtime. Therefore it 
should be as faithful as possible to the runtime.

- 106173  The classpath computation does not take friends and private export into consideration
- 98757, 105408 Restrict the set of bundles considered by PDE Build (based on feature)
 

Scalability
========
As eclipse and eclipse based products become bigger, the build takes longer and it takes longer to 
deliver the drops. In order to cut this linear relationship between the size and the time, the provided 
infrastructure needs to provide ways to make build faster.

- incremental fetch 
- delta drops (only contain the plugins and features that have changed)
- build in parallel
- review the scripts that are being generated


Workspace integration
==================
PDE build design point has been to be decoupled from the workspace / IDE. However, as the workspace 
provides richer and richer functions, the decoupling is more and more problematic. 
With the priority and timing/resource constraints known as I'm writing this, only the "preference" 
section can be considered by 3.2.
For a longer discussion on the full problem of workspace integration please go to the bug 106594

Preferences
- 81918  encoding used in projects is ignored
- 55353, 76218 project or workspace compiler settings are ignored
- 82414, 103645 source filters are ignored
 
IResource awareness
- 101966  "Export as deployable plugins" fails when prerequisite plugin is linked binary project 
What happens here with respect to the remote resource work going on
 
Builder awareness (35371)
- 74880   PDE build does not use project class libraries 
- 101241  Plugin exporter should support exporting plugins from their output folder
- 104156  PDE build.xml should use all project builders 
 

Build input
===============
From the packager and the builder, PDE provides a set of tasks that help fetching binary drops from 
URLs and source code from CVS. However, theses tasks have restrictions and should be opened.

- 34757 Multiple repository: the fetch task provides a way to automate the fetching of code from a CVS 
repository. It is nice this it guarantee that all the right depends are fetched and it is minimal for the 
things being built. However if the code comes from multiple repository and repository that do not offer 
the same flexibility than CVS things get harder. Note that the fetch step is optional. 
- build from update site

https://bugs.eclipse.org/bugs/show_bug.cgi?id=106214#c9
From Pascal Rapicault  2005-08-10 00:44
&gt; I like to classify things, so there are really 4 themes of work that
&gt; I can see happening for PDE Build[: usability, runtime fidelity,
&gt; scalability, workspace integration, build input.]

Umm, seems like 5 to me :-) Could we add a sixth? My impression is
that folks have problems with the packager. In addition to comments in
Constellation Build calls (will try to get more input on
constellation-build), there are Chiasson's bugzillas

84351: Can't package a feature when patch is present, may fail silently

93299: PDE packager deletes tree at the end of packaging step

100460: root property in packaging.properties does not seem to be used

106490: generated unzipper.xml does not work correctly (-x /features)

106505: build.properties in feature dir causes feature to not be packaged

So perhaps theme=Packaging is in order?

Hi.
I opened a number of packager defects, because fundamentally I believe that 
packaging must be part of a complete solution.
I can compile code, but at the end of the day, what I need to produce is a 
product. (collection of plugins, features and "other")

Other than that, my main concern is ease of use and diagnostics.
If you are only compiling a few plugins against a given base, then it is 
usually easy to determine what the problem is when something breaks.
But when we dump in a new binary prereq, such as a new IES to build against, 
then hundreds of plugins and features may have changed, and it is very hard to 
isolate the problem.

Based on the following suggestions, I made

Jie Chen 08/10/2005 03:40:49 PM:
&gt; * After PDE build finishes, could we choose not to delete the tmp
&gt;   directory (where all the files get zipped from) if we want?. I
&gt;   noticed that in the assemble.*.xml/package*.xml files, they always
&gt;   have a &lt;delete dir="${assemblyTempDir}" /&gt; task in the main target.
&gt;   Could we disable it if we like?

https://bugs.eclipse.org/bugs/show_bug.cgi?id=106685

(for theme=usability) and

&gt; * For the PDE build, is there a way to split English and NL feature
&gt;   packaging? The current PDE process seems always have the NL feature
&gt;   packaged within the English feature (it probably because the English
&gt;   feature includes the NL feature in the feature.xml file). Is there a
&gt;   plan to make it happen in the future?

https://bugs.eclipse.org/bugs/show_bug.cgi?id=106687

(for proposed theme=packaging).


https://bugs.eclipse.org/bugs/show_bug.cgi?id=106214#c9
&gt; Scalability
&gt; ========

&gt; As eclipse and eclipse based products become bigger, the build takes
&gt; longer and it takes longer to deliver the drops. In order to cut
&gt; this linear relationship between the size and the time, the provided
&gt; infrastructure needs to provide ways to make build faster.

&gt; - incremental fetch 

Perhaps also incremental compile? Why I ask: 

As the concept of continuous integration gains increasing mindshare,
CruiseControl is increasingly adopted (even in IBM :-) for its
implementation. IIUC if PDEB did incremental fetch/compile it would be
much more useful to CruiseControl users.

But perhaps incremental compilation is more germane to

https://bugs.eclipse.org/bugs/show_bug.cgi?id=106594
&gt; Make PDE fully workspace aware

?

Closing as fixed as most of the item from the list given in comment #9 have been addressed.

usability
 ant friendly logging
 complete end to end support for product export
 documentation on how to use feature and product export
 more flexible input with the plugins property that supports 
 ways to hook in build.xml at plugins and features level
 support for versioning

runtime fidelity
 filter what is being put on the classpath based on the import / export
 possibility to compile a bundle against a particular class library

Workspace integration
 encoding preferences
 compiler preferences

build input
 pluggable support for repository</WithStack>
    <WithOutStack>PDE Build is fundamental to how the Eclipse Platform releases are produced. It is also increasingly being 
used by other Eclipse projects and in the wider community. Potential improvements to PDE build include 
parallel cross-building, incremental building of plug-ins, increased integration with the workspace model, 
and support for additional repository providers. [PDE]
Improved debuggability would also be appreciated. E.g. at present error messages
are often quite inscrutable.
In addition to being in violent agreement with Tom about better error
messages, I have been thinking about the last two things in Mike's
list myself recently.

"increased integration with the workspace model": This is something
that has bugged me and some of my coworkers about PDE Build, that
builds done through PDE Build are done differently than builds
developers do within their workspaces.  Because they use different
mechanisms, the Java code may be compiled with different options, and
other aspects of the build (such as running custom Ant scripts) are
done differently in the two environments.  I think PDE Build should
use the exact same mechanism as the Eclipse IDE to do the bulk of the
build.  PDE Build would just perform the extra task of setting up the
workspace before invoking the Eclipse IDE build.

"support for additional repository providers": I spent a while trying
to get PDE Build to work with ClearCase and came to the conclusion
that it is just not possible without a major overhaul of PDE Build.
PDE Build's view of source control is very CVS-centric and can't be
mapped to ClearCase or other repositories that don't behave like CVS.
The features that tie it most tightly to CVS are (1) that each
directory in the repository can be fetched using a different
tag/branch/label, and (2) the directory structure of the fetched
source can be completely different from the directory structure in the
repository.  This does not map to ClearCase, where using different
branch/label rules for different parts of a VOB is non-trivial, and
where the directory structure of a view needs to match the directory
structure in the repository.  There is also the fact that PDE Build
expects to fetch the source fresh from the repository with every
build, while ClearCase is designed to keep a view around for a while
and just update the view when doing a build.  (This isn't a fatal
flaw, since creating a new ClearCase view with each build isn't too
hard.  But there is a record of the view on the server, so you have to
remember to remove the view when the build is done, unlike CVS where
the server has no record of checkouts.  And creating a new view with
every build runs into ClearCase's significant networking issues.)


McQ 2005-08-05 13:01
&gt; Potential improvements to PDE build include parallel cross-building,

What is meant by "parallel cross-building"? Inquiring minds ...


McQ 2005-08-05 13:01
&gt;&gt; Potential improvements to PDE build include [...] support for
&gt;&gt; additional repository providers

David Olsen  2005-08-08 12:20
&gt; In addition to being in violent agreement

(Careful, you'll scare our Canadian pals--they already think we're
all imperialist gun nuts !-)

&gt; "support for additional repository providers": I spent a while
&gt; trying to get PDE Build to work with ClearCase and came to the
&gt; conclusion that it is just not possible without a major overhaul of
&gt; PDE Build.

I believe (I Could Be Wrong, Your Mileage May Vary, I certainly don't
know as much about PDEB as I would like) that the main differences
between PDEB and its users are that the latter are more likely to

* use SCMs with non-CVS semantics

* bring in a larger proportion of build inputs as binaries (e.g.
  prebuilt components)

If so, then I suspect (ICBW, YMMV) both PDEB and its users can be
well accomodated by a PDEB that

* can start up "pointing to" some workspace (e.g. a CC MVFS)

* has something like a custom ant task for fetching from CVS

* has something like a custom ant task for fetching binaries

Then, e.g.,

* a PDEB user like R*D could start up in its dynamic view, and in
  its fetch phase get

· whatever additional sources they required (from contributors who
  are not using CC)

· its binary dependencies

* PDEB could just call its CVS task as usual in its fetch phase

This may be possible with today's PDEB (I certainly haven't done it
yet), but likely requires more hoop-jumping than users would like.

(In reply to comment #2)
&gt; "support for additional repository providers": I spent a while trying
&gt; to get PDE Build to work with ClearCase and came to the conclusion
&gt; that it is just not possible without a major overhaul of PDE Build.

This is covered in bug 34757. I've also written a patch, which works well here
in our ClearCase environment. Basically, it enhances the map file syntax to
fetch from different repositories. Someone might want to write a specific
ClearCase provider that creates a view with a specific config spec, fetches the
source and destroys the view afterwards.

However, you can't use the tag+release concept that Eclipse uses with CVS with
ClearCase. IMHO it's too much overhand if you create and destroy a view for
every plugin. I have estahblished another approach in our environment. PDE Build
is invoked throuh CruiseControl. Before building any Eclipse stuff, the view is
updated with a specified config spec (e.g., latest or milestone builds).

CruiseControl 
-&gt; bootstrap builder
-&gt; start builder

Builder
-&gt; get config spec &amp; update view
-&gt; start patched PDE Build
(In reply to comment #5)

&gt; IMHO it's too much overhand ...

I meant to say "overhead".

Comment #5 From Gunnar Wagenknecht  2005-08-09 00:14
&gt; [Support for additional repository providers] is covered in bug 34757.

So perhaps discussion of that particular PDEB improvement
should move there? And perhaps separate bugzillas should be spawned
for each of the other mentioned enhancements:

* parallel cross-building

* incremental building of plug-ins

* increased integration with the workspace model

* improved debuggability

This bugzilla could then be reserved for new enhancement proposals.


Ted Chiasson (from AST) has submitted several PDEB-related bugzillas:

84351: Can't package a feature when patch is present, may fail silently

93299: PDE packager deletes tree at the end of packaging step

97346: Ability to specify default build.properties

100460: root property in packaging.properties does not seem to be used

106490: generated unzipper.xml does not work correctly (-x /features)

106505: build.properties in feature dir causes feature to not be packaged

I would to precise some of the items that have been listed in the initial comment, scope some of the 
work that is being planned, and list other things we'd like to do. However nothing guarantee that all of 
these items will be covered in the 3.2 timeframe. It just constitutes a list of improvements / directions 
that are being considered. Moreover it does not include the obvious bugs that must be fixed.

I like to classify things, so there are really 4 themes of work that I can see happening for PDE Build.

Usability
=======
This theme encompasses various aspects of PDE Build usability such as error reporting, flexibility in the 
input, complexity / modularity of the infrastructure, etc... .

- 68048  Better handling of errors on state build 
- 75285  Footprint required for upgrade to 3.0.1 not known 
- 86116  Useless error message for failure Exporting Feature
- 97835  Simplification of application export
- 97929  Provide an option to sign feature root files 
- 106123  UI feature export crashes when version qualifier contains underscores 
- 35371 Ways to hook in an existing build.xml
- 105282 Improve support for JNLP export
- More flexible layout for input to the build
- Improve support for product export
- Ensure composibility of the various tasks


Runtime fidelity
============
Like any other plugin in the PDE space, PDE build sole purpose is to tool the runtime. Therefore it 
should be as faithful as possible to the runtime.

- 106173  The classpath computation does not take friends and private export into consideration
- 98757, 105408 Restrict the set of bundles considered by PDE Build (based on feature)
 

Scalability
========
As eclipse and eclipse based products become bigger, the build takes longer and it takes longer to 
deliver the drops. In order to cut this linear relationship between the size and the time, the provided 
infrastructure needs to provide ways to make build faster.

- incremental fetch 
- delta drops (only contain the plugins and features that have changed)
- build in parallel
- review the scripts that are being generated


Workspace integration
==================
PDE build design point has been to be decoupled from the workspace / IDE. However, as the workspace 
provides richer and richer functions, the decoupling is more and more problematic. 
With the priority and timing/resource constraints known as I'm writing this, only the "preference" 
section can be considered by 3.2.
For a longer discussion on the full problem of workspace integration please go to the bug 106594

Preferences
- 81918  encoding used in projects is ignored
- 55353, 76218 project or workspace compiler settings are ignored
- 82414, 103645 source filters are ignored
 
IResource awareness
- 101966  "Export as deployable plugins" fails when prerequisite plugin is linked binary project 
What happens here with respect to the remote resource work going on
 
Builder awareness (35371)
- 74880   PDE build does not use project class libraries 
- 101241  Plugin exporter should support exporting plugins from their output folder
- 104156  PDE build.xml should use all project builders 
 

Build input
===============
From the packager and the builder, PDE provides a set of tasks that help fetching binary drops from 
URLs and source code from CVS. However, theses tasks have restrictions and should be opened.

- 34757 Multiple repository: the fetch task provides a way to automate the fetching of code from a CVS 
repository. It is nice this it guarantee that all the right depends are fetched and it is minimal for the 
things being built. However if the code comes from multiple repository and repository that do not offer 
the same flexibility than CVS things get harder. Note that the fetch step is optional. 
- build from update site

https://bugs.eclipse.org/bugs/show_bug.cgi?id=106214#c9
From Pascal Rapicault  2005-08-10 00:44
&gt; I like to classify things, so there are really 4 themes of work that
&gt; I can see happening for PDE Build[: usability, runtime fidelity,
&gt; scalability, workspace integration, build input.]

Umm, seems like 5 to me :-) Could we add a sixth? My impression is
that folks have problems with the packager. In addition to comments in
Constellation Build calls (will try to get more input on
constellation-build), there are Chiasson's bugzillas

84351: Can't package a feature when patch is present, may fail silently

93299: PDE packager deletes tree at the end of packaging step

100460: root property in packaging.properties does not seem to be used

106490: generated unzipper.xml does not work correctly (-x /features)

106505: build.properties in feature dir causes feature to not be packaged

So perhaps theme=Packaging is in order?

Hi.
I opened a number of packager defects, because fundamentally I believe that 
packaging must be part of a complete solution.
I can compile code, but at the end of the day, what I need to produce is a 
product. (collection of plugins, features and "other")

Other than that, my main concern is ease of use and diagnostics.
If you are only compiling a few plugins against a given base, then it is 
usually easy to determine what the problem is when something breaks.
But when we dump in a new binary prereq, such as a new IES to build against, 
then hundreds of plugins and features may have changed, and it is very hard to 
isolate the problem.

Based on the following suggestions, I made

Jie Chen 08/10/2005 03:40:49 PM:
&gt; * After PDE build finishes, could we choose not to delete the tmp
&gt;   directory (where all the files get zipped from) if we want?. I
&gt;   noticed that in the assemble.*.xml/package*.xml files, they always
&gt;   have a &lt;delete dir="${assemblyTempDir}" /&gt; task in the main target.
&gt;   Could we disable it if we like?

https://bugs.eclipse.org/bugs/show_bug.cgi?id=106685

(for theme=usability) and

&gt; * For the PDE build, is there a way to split English and NL feature
&gt;   packaging? The current PDE process seems always have the NL feature
&gt;   packaged within the English feature (it probably because the English
&gt;   feature includes the NL feature in the feature.xml file). Is there a
&gt;   plan to make it happen in the future?

https://bugs.eclipse.org/bugs/show_bug.cgi?id=106687

(for proposed theme=packaging).


https://bugs.eclipse.org/bugs/show_bug.cgi?id=106214#c9
&gt; Scalability
&gt; ========

&gt; As eclipse and eclipse based products become bigger, the build takes
&gt; longer and it takes longer to deliver the drops. In order to cut
&gt; this linear relationship between the size and the time, the provided
&gt; infrastructure needs to provide ways to make build faster.

&gt; - incremental fetch 

Perhaps also incremental compile? Why I ask: 

As the concept of continuous integration gains increasing mindshare,
CruiseControl is increasingly adopted (even in IBM :-) for its
implementation. IIUC if PDEB did incremental fetch/compile it would be
much more useful to CruiseControl users.

But perhaps incremental compilation is more germane to

https://bugs.eclipse.org/bugs/show_bug.cgi?id=106594
&gt; Make PDE fully workspace aware

?

Closing as fixed as most of the item from the list given in comment #9 have been addressed.

usability
 ant friendly logging
 complete end to end support for product export
 documentation on how to use feature and product export
 more flexible input with the plugins property that supports 
 ways to hook in build.xml at plugins and features level
 support for versioning

runtime fidelity
 filter what is being put on the classpath based on the import / export
 possibility to compile a bundle against a particular class library

Workspace integration
 encoding preferences
 compiler preferences

build input
 pluggable support for repository</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106215" />
    <CreationDate amount="2005-08-05 13:59:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="jst.jsp" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>org.apache.jsp</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hi
     I have a tomcat project developing in ECLIPSE. All these days it
precompiled my JSP into org.apache.jsp folder. But, now all of a sudden, it is
not precompiling my JSP into this folder. My folder structure is 
projectname has WORK, WEB-INF folders and jsp files. WORK has a folder called
org.apache.jsp which has a compiled JSP files.

when i create new JSP files, they are not compiled as _java files under
org.apache.jsp..

please help me..........


my error is
type Exception report

message 

description The server encountered an internal error () that prevented it from
fulfilling this request.

exception 

javax.servlet.ServletException: Wrapper cannot find servlet class
org.apache.jsp.index_jsp or a class it depends on
	org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)
	org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)
	org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
	org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
	org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	java.lang.Thread.run(Unknown Source)


root cause 

java.lang.ClassNotFoundException: org.apache.jsp.index_jsp
	org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1332)
	org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1181)
	org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)
	org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)
	org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
	org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
	org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	java.lang.Thread.run(Unknown Source)


note The full stack trace of the root cause is available in the Apache
Tomcat/5.5.9 logs.
This bug certainly doesn't belong in EMF.  Maybe it should be in web tools...
Chuck, over to you. Is this a problem with WTP? With the deployment to Tomcat?
Hi All,

  I am the one who reported the bug... I am
actually starting and stopping TOMCAT through tomcat
plugin(sysdeo plugin) from Eclipse. The first time i create an index.jsp all
goes well. Any subsequest changes I make to
index.jsp file or if i delete index_jsp.java under
org.apache.jsp folder... i am not able to refresh it
or do anything at all...

I would appreciate, if all of you could help me with this one...

God Bless

Regards
hepzi

(In reply to comment #3)

&gt; Hi All,

&gt;   I am the one who reported the bug... I am
&gt; actually starting and stopping TOMCAT through tomcat
&gt; plugin(sysdeo plugin) from Eclipse. The first time i create an index.jsp all
&gt; goes well. Any subsequest changes I make to
&gt; index.jsp file or if i delete index_jsp.java under
&gt; org.apache.jsp folder... i am not able to refresh it
&gt; or do anything at all...
&gt; 
&gt; I would appreciate, if all of you could help me with this one...
&gt; 
&gt; God Bless
&gt; 
&gt; Regards
&gt; hepzi
&gt; 
Hi, 

I have the same problem with WTP 0.7. But When I checked the "Build
Automatically" item in the Project menu of Eclipse my jsp files are correctly
refreshed.

Regards

Gildas
Please move to a newer version of WTP that doesn't use builders to assemble compiled classes/jsp's.....
This is part of a mass update to close out all stale WTP bugs which are in the resolved state without an appropriate targeted version.  If you feel this bug was closed inappropriately, please reopen.</WithStack>
    <WithOutStack>Hi
     I have a tomcat project developing in ECLIPSE. All these days it
precompiled my JSP into org.apache.jsp folder. But, now all of a sudden, it is
not precompiling my JSP into this folder. My folder structure is 
projectname has WORK, WEB-INF folders and jsp files. WORK has a folder called
org.apache.jsp which has a compiled JSP files.

when i create new JSP files, they are not compiled as _java files under
org.apache.jsp..

please help me..........


my error is
type Exception report

message 

description The server encountered an internal error () that prevented it from
fulfilling this request.

exception 

javax.servlet.ServletException: Wrapper cannot find servlet class
org.apache.jsp.index_jsp or a class it depends on
	org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)
	org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)
	org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
	org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
	org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	java.lang.Thread.run(Unknown Source)


root cause 

java.lang.ClassNotFoundException: org.apache.jsp.index_jsp
	org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1332)
	org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1181)
	org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)
	org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)
	org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
	org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
	org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	java.lang.Thread.run(Unknown Source)


note The full stack trace of the root cause is available in the Apache
Tomcat/5.5.9 logs.
This bug certainly doesn't belong in EMF.  Maybe it should be in web tools...
Chuck, over to you. Is this a problem with WTP? With the deployment to Tomcat?
Hi All,

  I am the one who reported the bug... I am
actually starting and stopping TOMCAT through tomcat
plugin(sysdeo plugin) from Eclipse. The first time i create an index.jsp all
goes well. Any subsequest changes I make to
index.jsp file or if i delete index_jsp.java under
org.apache.jsp folder... i am not able to refresh it
or do anything at all...

I would appreciate, if all of you could help me with this one...

God Bless

Regards
hepzi

(In reply to comment #3)

&gt; Hi All,

&gt;   I am the one who reported the bug... I am
&gt; actually starting and stopping TOMCAT through tomcat
&gt; plugin(sysdeo plugin) from Eclipse. The first time i create an index.jsp all
&gt; goes well. Any subsequest changes I make to
&gt; index.jsp file or if i delete index_jsp.java under
&gt; org.apache.jsp folder... i am not able to refresh it
&gt; or do anything at all...
&gt; 
&gt; I would appreciate, if all of you could help me with this one...
&gt; 
&gt; God Bless
&gt; 
&gt; Regards
&gt; hepzi
&gt; 
Hi, 

I have the same problem with WTP 0.7. But When I checked the "Build
Automatically" item in the Project menu of Eclipse my jsp files are correctly
refreshed.

Regards

Gildas
Please move to a newer version of WTP that doesn't use builders to assemble compiled classes/jsp's.....
This is part of a mass update to close out all stale WTP bugs which are in the resolved state without an appropriate targeted version.  If you feel this bug was closed inappropriately, please reopen.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106216" />
    <CreationDate amount="2005-08-05 14:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Search result markers in folded text don't appear in the overview ruler</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>I did a seach for references to a variable. In the Search View, I saw one file
that had 32 matches. I opened an editor on that file.

I noticed that, even though there were 32 matches in the file, and they are
distributed rather evenly throughout the entire file, I only saw 4 purple search
markers in the overview ruler on the right.

Most of the code in the source file was folded. Only the search markers
appearing in unfolded functions were visible. When I unfolded functions that
contained matches, the corresponding search markers appeared in the overview
ruler on the right. When I folded those functions again, the search markers
disappeared.

I believe the correct behavior is to show a single item in the overview ruler
for folded text that contains at least one search marker (or something like that
- I'm sure that a more precise description of the correct behavior is
available). Instead, folding is hiding the markers entirely.
Eclipse Version: 3.1.0 Build id: I20050627-1435
CDT 3.0.0 I200507292328

I'll look into this for 4.0.
Fixed in 4.0 &gt; 20061004.
I've verified that the bug is fixed.</WithStack>
    <WithOutStack>I did a seach for references to a variable. In the Search View, I saw one file
that had 32 matches. I opened an editor on that file.

I noticed that, even though there were 32 matches in the file, and they are
distributed rather evenly throughout the entire file, I only saw 4 purple search
markers in the overview ruler on the right.

Most of the code in the source file was folded. Only the search markers
appearing in unfolded functions were visible. When I unfolded functions that
contained matches, the corresponding search markers appeared in the overview
ruler on the right. When I folded those functions again, the search markers
disappeared.

I believe the correct behavior is to show a single item in the overview ruler
for folded text that contains at least one search marker (or something like that
- I'm sure that a more precise description of the correct behavior is
available). Instead, folding is hiding the markers entirely.
Eclipse Version: 3.1.0 Build id: I20050627-1435
CDT 3.0.0 I200507292328

I'll look into this for 4.0.
Fixed in 4.0 &gt; 20061004.
I've verified that the bug is fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106217" />
    <CreationDate amount="2005-08-05 14:09:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="wst.ws" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>TVT 3.1: TCT337 -  truncation for "Mapping pairs" on Web Service Skeleton XML to Java Mappings page</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="19">
        <Lines>
          <Line>1. Select File &gt; New &gt; Other. The New wizard will appear.</Line>
          <Line>2. Expand Web Services. Select Web Service.</Line>
          <Line>3. Click Next.</Line>
          <Line>4. The first page of the Web service wizard will appear, entitled Web</Line>
          <Line>Services.</Line>
          <Line>5. On this page, select Top Down Java bean Web Service as the Web service</Line>
          <Line>type.</Line>
          <Line>6. Click Next.</Line>
          <Line>7. On the Object Selection Page, enter</Line>
          <Line>http://www.xmethods.net/sd/2001/TemperatureService.wsdl in the URI field.</Line>
          <Line>8. Pause for about 5 sec.</Line>
          <Line>9. Click Next.</Line>
          <Line>10. The Service Deployment Configuration page should appear.</Line>
          <Line>11. Click Next.</Line>
          <Line>12. On the Web Service Skeleton Java Bean Configuration page.</Line>
          <Line>13. Check the checkbox labeled Define custom mapping for namespace to package.</Line>
          <Line>14. Click Next. The Web Service Skeleton XML to Java Mappings page should</Line>
          <Line>appear.</Line>
          <Line>==&gt; "Mapping pairs" is truncated.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The space allocated for the "Mapping pairs" label is too small. Truncation is 
happening in T.Chinese, Japanese, Korean, and Polish.

OS : RHEL 3.1 
Severity 2 
Must Fix 
Build date: 20050718 
Blocking: NO 
Language: CHT 
Bitmap Location: 337_26002430.gif 
Tester Name: Ivory Chang 

Problem Description: Truncation in the Web Service Skeleton XML to Java 
Mappings page 
Re-create Procedure: 
1. Select File &gt; New &gt; Other. The New wizard will appear. 
2. Expand Web Services. Select Web Service. 
3. Click Next. 
4. The first page of the Web service wizard will appear, entitled Web 
Services. 
5. On this page, select Top Down Java bean Web Service as the Web service 
type. 
6. Click Next. 
7. On the Object Selection Page, enter 
http://www.xmethods.net/sd/2001/TemperatureService.wsdl in the URI field. 
8. Pause for about 5 sec. 
9. Click Next. 
10. The Service Deployment Configuration page should appear. 
11. Click Next. 
12. On the Web Service Skeleton Java Bean Configuration page. 
13. Check the checkbox labeled Define custom mapping for namespace to package. 
14. Click Next. The Web Service Skeleton XML to Java Mappings page should 
appear. 
==&gt; "Mapping pairs" is truncated.

Best Regards, Ivory Chang TVT, Taiwan
Created attachment 25765
screen capture
Created attachment 25846
Axis consumption UI plugin patch
Hi Kathy, the fix for this defect is ready to be committed.  Thanks.
Patches committed and released as v20050809_1630.
Kathy Chan updating target milestone to 1.0M7.1 on behalf of Chris Brealey.
This bug is over one year old. Closing on submitter's behalf.</WithStack>
    <WithOutStack>The space allocated for the "Mapping pairs" label is too small. Truncation is 
happening in T.Chinese, Japanese, Korean, and Polish.

OS : RHEL 3.1 
Severity 2 
Must Fix 
Build date: 20050718 
Blocking: NO 
Language: CHT 
Bitmap Location: 337_26002430.gif 
Tester Name: Ivory Chang 

Problem Description: Truncation in the Web Service Skeleton XML to Java 
Mappings page 
Re-create Procedure: 
1. Select File &gt; New &gt; Other. The New wizard will appear. 
2. Expand Web Services. Select Web Service. 
3. Click Next. 
4. The first page of the Web service wizard will appear, entitled Web 
Services. 
5. On this page, select Top Down Java bean Web Service as the Web service 
type. 
6. Click Next. 
7. On the Object Selection Page, enter 
http://www.xmethods.net/sd/2001/TemperatureService.wsdl in the URI field. 
8. Pause for about 5 sec. 
9. Click Next. 
10. The Service Deployment Configuration page should appear. 
11. Click Next. 
12. On the Web Service Skeleton Java Bean Configuration page. 
13. Check the checkbox labeled Define custom mapping for namespace to package. 
14. Click Next. The Web Service Skeleton XML to Java Mappings page should 
appear. 
==&gt; "Mapping pairs" is truncated.

Best Regards, Ivory Chang TVT, Taiwan
Created attachment 25765
screen capture
Created attachment 25846
Axis consumption UI plugin patch
Hi Kathy, the fix for this defect is ready to be committed.  Thanks.
Patches committed and released as v20050809_1630.
Kathy Chan updating target milestone to 1.0M7.1 on behalf of Chris Brealey.
This bug is over one year old. Closing on submitter's behalf.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106218" />
    <CreationDate amount="2005-08-05 14:18:00 -0400" />
    <DupId amount="105105" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="wst.ws" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>TVT 3.1: TCT336 - description on Service Deployment Configuration page truncated</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>1. Select File &gt; New &gt; Other. The New wizard will appear.</Line>
          <Line>2. Expand Web Services. Select Web Service.</Line>
          <Line>3. Click Next.</Line>
          <Line>4. The first page of the Web service wizard will appear, entitled Web</Line>
          <Line>Services.</Line>
          <Line>5. On this page, select Top Down Java bean Web Service as the Web service</Line>
          <Line>type.</Line>
          <Line>6. Click Next.</Line>
          <Line>7. On the Object Selection Page, enter</Line>
          <Line>http://www.xmethods.net/sd/2001/TemperatureService.wsdl in the URI field.</Line>
          <Line>8. Pause for about 5 sec.</Line>
          <Line>9. Click Next.</Line>
          <Line>10. The Service Deployment Configuration page should appear.</Line>
          <Line>==&gt; The description is truncated.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Description on Service Deployment Configuration page truncated. The 2 lines of 
description in English is pretty long. Translations in other languages cannot 
be shorten. And, only about half of the width of the dialog is allocated to 
the description. Can that be widen a little more? This is considered a must-
fix by T.Chinese, Korean, Japanese, and Hungarian.

OS : RHEL 3.1 
Severity 2 
Must Fix 
Build date: 20050718 
Blocking: NO 
Language: CHT 
Bitmap Location: 336_26002410.gif 
Tester Name: Ivory Chang 

Problem Description: Truncation in the Service Deployment Configuration page 
Re-create Procedure: 
1. Select File &gt; New &gt; Other. The New wizard will appear. 
2. Expand Web Services. Select Web Service. 
3. Click Next. 
4. The first page of the Web service wizard will appear, entitled Web 
Services. 
5. On this page, select Top Down Java bean Web Service as the Web service 
type. 
6. Click Next. 
7. On the Object Selection Page, enter 
http://www.xmethods.net/sd/2001/TemperatureService.wsdl in the URI field. 
8. Pause for about 5 sec. 
9. Click Next. 
10. The Service Deployment Configuration page should appear. 
==&gt; The description is truncated.

Best Regards, Ivory Chang TVT, Taiwan
Created attachment 25766
screen capture
This is considered as a must-fix for T.Chinese. Upgrading serverity to "major".
This problem has been fixed in defect 105105.

*** This bug has been marked as a duplicate of 105105 ***
Verified and closed on submitter's behalf.
Closed.</WithStack>
    <WithOutStack>Description on Service Deployment Configuration page truncated. The 2 lines of 
description in English is pretty long. Translations in other languages cannot 
be shorten. And, only about half of the width of the dialog is allocated to 
the description. Can that be widen a little more? This is considered a must-
fix by T.Chinese, Korean, Japanese, and Hungarian.

OS : RHEL 3.1 
Severity 2 
Must Fix 
Build date: 20050718 
Blocking: NO 
Language: CHT 
Bitmap Location: 336_26002410.gif 
Tester Name: Ivory Chang 

Problem Description: Truncation in the Service Deployment Configuration page 
Re-create Procedure: 
1. Select File &gt; New &gt; Other. The New wizard will appear. 
2. Expand Web Services. Select Web Service. 
3. Click Next. 
4. The first page of the Web service wizard will appear, entitled Web 
Services. 
5. On this page, select Top Down Java bean Web Service as the Web service 
type. 
6. Click Next. 
7. On the Object Selection Page, enter 
http://www.xmethods.net/sd/2001/TemperatureService.wsdl in the URI field. 
8. Pause for about 5 sec. 
9. Click Next. 
10. The Service Deployment Configuration page should appear. 
==&gt; The description is truncated.

Best Regards, Ivory Chang TVT, Taiwan
Created attachment 25766
screen capture
This is considered as a must-fix for T.Chinese. Upgrading serverity to "major".
This problem has been fixed in defect 105105.

*** This bug has been marked as a duplicate of 105105 ***
Verified and closed on submitter's behalf.
Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106219" />
    <CreationDate amount="2005-08-05 14:19:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="Web Tools" />
    <component amount="documentation" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>TVT 3.1: TCT 375 - Unexternalized strings when errors are present in WSDL validation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Note: This is a must fix bug for TVT sign off.

OS : Linux
Must fix
Build date:21/07
Blocking: NO
Language: DEU
Bitmap Location: V:\defects\de\26.003150.jpg
Tester Name: Ruth Nestvold

Problem Description: When you validate a WSDL file that has errors, the error
window has a number of headers in English (Description, Resource, In Folder,
Location) which should be localized.
Created attachment 25767
screen shot
Those strings belong to the Platform. Please route this bug to the Platform 
team. Thanks.
Is this the error log view?  I thought we made the decision back in 3.0 that 
error log entries (this is a view of the error log) were not to be translated.

Cam, do you recall?

I believe the untranslated lines may be from the platform and/or features that 
we had in 3.0.  The bug here (and perhaps in some others) is that we have over 
translated WTP.

The problem reported is not about the error messages displayed on the screen. 
It is about the translation of text on the panel in English. This problem no 
longer exist now that the NL build tool is fixed. 
Bug is to be closed as invalid.
Changing status to invalid.
This bug was moved to 'closed' state, since it is so old and since it is a dup, worksforme, invalid bug that its unlikely to still be useful or need further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error.</WithStack>
    <WithOutStack>Note: This is a must fix bug for TVT sign off.

OS : Linux
Must fix
Build date:21/07
Blocking: NO
Language: DEU
Bitmap Location: V:\defects\de\26.003150.jpg
Tester Name: Ruth Nestvold

Problem Description: When you validate a WSDL file that has errors, the error
window has a number of headers in English (Description, Resource, In Folder,
Location) which should be localized.
Created attachment 25767
screen shot
Those strings belong to the Platform. Please route this bug to the Platform 
team. Thanks.
Is this the error log view?  I thought we made the decision back in 3.0 that 
error log entries (this is a view of the error log) were not to be translated.

Cam, do you recall?

I believe the untranslated lines may be from the platform and/or features that 
we had in 3.0.  The bug here (and perhaps in some others) is that we have over 
translated WTP.

The problem reported is not about the error messages displayed on the screen. 
It is about the translation of text on the panel in English. This problem no 
longer exist now that the NL build tool is fixed. 
Bug is to be closed as invalid.
Changing status to invalid.
This bug was moved to 'closed' state, since it is so old and since it is a dup, worksforme, invalid bug that its unlikely to still be useful or need further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106220" />
    <CreationDate amount="2005-08-05 14:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>&lt;archive&gt; tags don't work when updating</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Create a local update site as follows:

updates (dir)
|-&gt; site.xml
|-&gt; 3.0 (dir)
    |-&gt; features (dir)
        |-&gt; &lt;feature-jars&gt;
    |-&gt; plugins (dir)
        |-&gt; &lt;update-jars&gt;


The site.xml would look something like this:

&lt;feature url="3.0/features/&lt;feature-name&gt;_3.1.0.jar" patch="false" 
id="&lt;feature-name&gt;" version="3.1.0"&gt;
        &lt;category name="3.1" /&gt;
&lt;/feature&gt;
&lt;archive path="plugins/&lt;plugin-name&gt;_3.1.0.jar" url="3.0/plugins/&lt;plugin-
name&gt;_3.1.0.jar" /&gt; 


This setup works just fine during discovery (search for new features to be 
installed).  However, when updating (when you have an older version of that 
feature installed already), no updates are found.  I tested this locally by 
changing the update url in the feature.xml to "file:/D:/updates".

Marking this bug as major and not critical because, obviously, the workaround 
is to copy the files to updateURL/features and updateURL/plugins directory.
Invalid.  Change the valid update preference from the default of equivalent to 
compatible fixed this.</WithStack>
    <WithOutStack>Create a local update site as follows:

updates (dir)
|-&gt; site.xml
|-&gt; 3.0 (dir)
    |-&gt; features (dir)
        |-&gt; &lt;feature-jars&gt;
    |-&gt; plugins (dir)
        |-&gt; &lt;update-jars&gt;


The site.xml would look something like this:

&lt;feature url="3.0/features/&lt;feature-name&gt;_3.1.0.jar" patch="false" 
id="&lt;feature-name&gt;" version="3.1.0"&gt;
        &lt;category name="3.1" /&gt;
&lt;/feature&gt;
&lt;archive path="plugins/&lt;plugin-name&gt;_3.1.0.jar" url="3.0/plugins/&lt;plugin-
name&gt;_3.1.0.jar" /&gt; 


This setup works just fine during discovery (search for new features to be 
installed).  However, when updating (when you have an older version of that 
feature installed already), no updates are found.  I tested this locally by 
changing the update url in the feature.xml to "file:/D:/updates".

Marking this bug as major and not critical because, obviously, the workaround 
is to copy the files to updateURL/features and updateURL/plugins directory.
Invalid.  Change the valid update preference from the default of equivalent to 
compatible fixed this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106221" />
    <CreationDate amount="2005-08-05 14:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[jar exporter] Jar exporter generates unnecessary duplicate entry errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1. File-&gt;New-&gt;Java Project-&gt;"Folder Project".</Line>
          <Line>2. Open Properties dialog for "Folder Project".  Go to Java Build Path item.</Line>
          <Line>3. On Source tab, Add Folder... "Dir1".</Line>
          <Line>4. On Source tab, Add Folder... , select "Dir1", Create New Folder-&gt;"SubDir1".</Line>
          <Line>5. Close Properties dialog.</Line>
          <Line>6. Add package and class to Dir1\SubDir1.</Line>
          <Line>7. Delete source folder Dir1.</Line>
          <Line>8. Select Folder Project.  File-&gt;Export-&gt;Jar File.</Line>
          <Line>9. Check java source files and resources.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>1. File-&gt;New-&gt;Java Project-&gt;"Folder Project".
2. Open Properties dialog for "Folder Project".  Go to Java Build Path item.
3. On Source tab, Add Folder... "Dir1".
4. On Source tab, Add Folder... , select "Dir1", Create New Folder-&gt;"SubDir1".
5. Close Properties dialog.
6. Add package and class to Dir1\SubDir1.
7. Delete source folder Dir1.
8. Select Folder Project.  File-&gt;Export-&gt;Jar File.
9. Check java source files and resources.

At this point I get a duplicate entry warning.  If I uncheck the phantom folder 
(i.e., Dir1) when I export I don't get the warning.  Why does the phantom 
folder even appear?
The folder Dir1 isn't a phantom folder. It exists on the disk. Since only
Dir1/SubDir is on the build path inside Dir1 there could be resource to be
exported. So showing the folder is correct.

However, generating the duplicate entry warning isn't and should be fixed. 

JAR creation failed. See details for additional information.
  Problem writing /Folder Project/bin/p/A.class to JAR: duplicate entry: p/A.class
  Problem writing /Folder Project/Dir1/SubDir1/p/A.java to JAR: duplicate entry:
p/A.java


Dani, any quick hint/tip. It looks like the jar exporter is traversing SubDir1
to times. Once as a sub folder of Dir1 and once as a package framgment root.
The code tries to detect the duplicates but seems to fail in this build path setup.

While it's a bug it is not the common case to export both, source and code into
the same JAR.
The problem also happens when exporting class files and resources.
can you attach the project?
The project exists in the eclipse technology repository - 
dev.eclipse.org:/home/technology.  Under the org.eclipse.ercp folder, check out 
the following projects:

org.eclipse.ercp.swt.core.spec
org.eclipse.ercp.swt.expanded.spec

Set the classpath file to use the .classpath_jre version in each project.  Then 
select the expanded spec project and File-&gt;Export-&gt;Jar File-&gt;class files and 
resources.

thanks.
*** Bug 160989 has been marked as a duplicate of this bug. ***
*** Bug 125730 has been marked as a duplicate of this bug. ***
Created attachment 109783
Fix

All tests pass. Benno, it would be good to have a second eye on the fix. Thanks.
Patch is good.

Fixed in HEAD.
Available in builds &gt; N20080817-2000.
*** Bug 255704 has been marked as a duplicate of this bug. ***
Created attachment 118280
Fix without regression (see bug 248899)
We are an adopter product of Eclipse 3.4.2.  We encountered bugzilla 255704, which is marked as dup of this bugzilla.  Can the fix for bugzilla 106221 be released for 3.4.2 as well?  Thks.
The fix is not to critical. Will backport.
&gt;The fix is not to critical. Will backport.
I meant the fix is not "complicated"

Markus please review the latest patch for 3.4.2.
(In reply to comment #13)
&gt; Created an attachment (id=118280) [details]

+1, this fix solves the reported problem.

In HEAD, I beautified exception handling for duplicates and fixed another problem (duplicates in external class folder caused a log entry instead of being accumulated).
Fixed in R3_4_maintenance.
Available in builds &gt;= M20090107-0800.
Philippe, please approve for 3.4.2.
+1 for 3.4.2
Verified in M20090121-1700 (including the regression).</WithStack>
    <WithOutStack>1. File-&gt;New-&gt;Java Project-&gt;"Folder Project".
2. Open Properties dialog for "Folder Project".  Go to Java Build Path item.
3. On Source tab, Add Folder... "Dir1".
4. On Source tab, Add Folder... , select "Dir1", Create New Folder-&gt;"SubDir1".
5. Close Properties dialog.
6. Add package and class to Dir1\SubDir1.
7. Delete source folder Dir1.
8. Select Folder Project.  File-&gt;Export-&gt;Jar File.
9. Check java source files and resources.

At this point I get a duplicate entry warning.  If I uncheck the phantom folder 
(i.e., Dir1) when I export I don't get the warning.  Why does the phantom 
folder even appear?
The folder Dir1 isn't a phantom folder. It exists on the disk. Since only
Dir1/SubDir is on the build path inside Dir1 there could be resource to be
exported. So showing the folder is correct.

However, generating the duplicate entry warning isn't and should be fixed. 

JAR creation failed. See details for additional information.
  Problem writing /Folder Project/bin/p/A.class to JAR: duplicate entry: p/A.class
  Problem writing /Folder Project/Dir1/SubDir1/p/A.java to JAR: duplicate entry:
p/A.java


Dani, any quick hint/tip. It looks like the jar exporter is traversing SubDir1
to times. Once as a sub folder of Dir1 and once as a package framgment root.
The code tries to detect the duplicates but seems to fail in this build path setup.

While it's a bug it is not the common case to export both, source and code into
the same JAR.
The problem also happens when exporting class files and resources.
can you attach the project?
The project exists in the eclipse technology repository - 
dev.eclipse.org:/home/technology.  Under the org.eclipse.ercp folder, check out 
the following projects:

org.eclipse.ercp.swt.core.spec
org.eclipse.ercp.swt.expanded.spec

Set the classpath file to use the .classpath_jre version in each project.  Then 
select the expanded spec project and File-&gt;Export-&gt;Jar File-&gt;class files and 
resources.

thanks.
*** Bug 160989 has been marked as a duplicate of this bug. ***
*** Bug 125730 has been marked as a duplicate of this bug. ***
Created attachment 109783
Fix

All tests pass. Benno, it would be good to have a second eye on the fix. Thanks.
Patch is good.

Fixed in HEAD.
Available in builds &gt; N20080817-2000.
*** Bug 255704 has been marked as a duplicate of this bug. ***
Created attachment 118280
Fix without regression (see bug 248899)
We are an adopter product of Eclipse 3.4.2.  We encountered bugzilla 255704, which is marked as dup of this bugzilla.  Can the fix for bugzilla 106221 be released for 3.4.2 as well?  Thks.
The fix is not to critical. Will backport.
&gt;The fix is not to critical. Will backport.
I meant the fix is not "complicated"

Markus please review the latest patch for 3.4.2.
(In reply to comment #13)
&gt; Created an attachment (id=118280) [details]

+1, this fix solves the reported problem.

In HEAD, I beautified exception handling for duplicates and fixed another problem (duplicates in external class folder caused a log entry instead of being accumulated).
Fixed in R3_4_maintenance.
Available in builds &gt;= M20090107-0800.
Philippe, please approve for 3.4.2.
+1 for 3.4.2
Verified in M20090121-1700 (including the regression).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106222" />
    <CreationDate amount="2005-08-05 14:40:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Chart" />
    <Version amount="1.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Tooltips for Chart subtypes are hard coded in *.java files.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Tooltips for Chart subtypes such as "Standard Stock Chart" is hard coded
in StockChart.java.

      vSubTypes.add( new DefaultChartSubTypeImpl( "Standard Stock Chart", 
img2D, sStandardDescription ) ); //$NON-NLS-1$

These hard coded strings should be externalized to *.properties files.
Created attachment 25772
Screenshot for Chart subtypes description
Need to externerlize the string
Externerlize the chart subtype string.
verified that the strings has been moved to messages.properties file.
It will be translated soon.
fixed
"Standard Stock Chart" has been translated.</WithStack>
    <WithOutStack>Tooltips for Chart subtypes such as "Standard Stock Chart" is hard coded
in StockChart.java.

      vSubTypes.add( new DefaultChartSubTypeImpl( "Standard Stock Chart", 
img2D, sStandardDescription ) ); //$NON-NLS-1$

These hard coded strings should be externalized to *.properties files.
Created attachment 25772
Screenshot for Chart subtypes description
Need to externerlize the string
Externerlize the chart subtype string.
verified that the strings has been moved to messages.properties file.
It will be translated soon.
fixed
"Standard Stock Chart" has been translated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106223" />
    <CreationDate amount="2005-08-05 14:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.UI.ManualTestClient" />
    <Version amount="4.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Running testsuite for Linux gets this message java.lang.InternalError</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330565823">
        <Exception>ava.lang.InternalError</Exception>
        <Reason>Can't connect to X11 window server using ':0.0' as the 
value of the DISPLAY variable.</Reason>
        <Frames>
          <Frame depth="0">sun.awt.X11GraphicsEnvironment.initDisplay(Native Method)</Frame>
          <Frame depth="1">sun.awt.X11GraphicsEnvironment.&lt;clinit&gt;(X11GraphicsEnvironment.java:175)</Frame>
          <Frame depth="2">java.lang.Class.forName1(Native Method)</Frame>
          <Frame depth="3">java.lang.Class.forName(Class.java:180)</Frame>
          <Frame depth="4">java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment(GraphicsEnvironment.java:91)</Frame>
          <Frame depth="5">java.awt.Window.init(Window.java:268)</Frame>
          <Frame depth="6">java.awt.Window.&lt;init&gt;(Window.java:312)</Frame>
          <Frame depth="7">java.awt.Frame.&lt;init&gt;(Frame.java:431)</Frame>
          <Frame depth="8">java.awt.Frame.&lt;init&gt;(Frame.java:396)</Frame>
          <Frame depth="9">javax.swing.JFrame.&lt;init&gt;(JFrame.java:183)</Frame>
          <Frame depth="10">org.eclipse.hyades.test.manual.runner.ui.RemoteAppFrame.&lt;init&gt;(RemoteAppFrame.java:79)</Frame>
          <Frame depth="11">org.eclipse.hyades.test.manual.runner.HyadesManualRunner$2.&lt;init&gt;(HyadesManualRunner.java:181)</Frame>
          <Frame depth="12">org.eclipse.hyades.test.manual.runner.HyadesManualRunner.main(HyadesManualRunner.java:176)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When I try to run a testsuite on the linux machine (Red Hat Enterprise 
Linux AS release 3, Taroon Update 2), it failed to run.  I'm using the
Build ID TPTP-4.0.0-200507181519. I first did this remotely by login 
in to the linux machine and display it on my windows terminal which didn't 
work, tried to display it on unix terminal, or used vnc still the same
problem.  My last thing to do was to run it locally on the linux machine 
in front of me that had all the eclipse, tptpruntime, etc., installed, I 
got the same result.

The manual testcase windows does not display too after the run.  I checked 
the overview tab and got an  "inconclusive" as the verdict error after the
run.  Then I checked the events tab to see the messages and below is what 
is displayed on the text box.  Also, on the severity box says "error".

ava.lang.InternalError: Can't connect to X11 window server using ':0.0' as the 
value of the DISPLAY variable.
	at sun.awt.X11GraphicsEnvironment.initDisplay(Native Method)
	at sun.awt.X11GraphicsEnvironment.&lt;clinit&gt;
(X11GraphicsEnvironment.java:175)
	at java.lang.Class.forName1(Native Method)
	at java.lang.Class.forName(Class.java:180)
	at java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment
(GraphicsEnvironment.java:91)
	at java.awt.Window.init(Window.java:268)
	at java.awt.Window.&lt;init&gt;(Window.java:312)
	at java.awt.Frame.&lt;init&gt;(Frame.java:431)
	at java.awt.Frame.&lt;init&gt;(Frame.java:396)
	at javax.swing.JFrame.&lt;init&gt;(JFrame.java:183)
	at org.eclipse.hyades.test.manual.runner.ui.RemoteAppFrame.&lt;init&gt;
(RemoteAppFrame.java:79)
	at org.eclipse.hyades.test.manual.runner.HyadesManualRunner$2.&lt;init&gt;
(HyadesManualRunner.java:181)
	at org.eclipse.hyades.test.manual.runner.HyadesManualRunner.main
(HyadesManualRunner.java:176)

How to reproduce:

Login to RHE AS 3.0 Linux, Taroon Update 2
Install the components below in which you can obtain from
www.eclipse.org/tptp/ "latest downloads" is 4.0.0
Eclipse SDK 3.1.0
EMF 2.1.0
XSD 2.1.0
tptp.runtime-TPTP-4.0.0-200507181519   
tptpdc.linux_ia32-TPTP-4.0.0-200507181519 - rac, LINUX-IA32
j2sdk1.4.2_02 - JAVA, this java we have here in cupertino

create new project
go to new:other:test:TPTP Manual Test
go to the test cases tab and add test cases
on behavior tab, click on add to select invocation to run the test case
click Run, to run manual tester, you will see that it doesn't bring up 
the manual test case runtime window, it's kind of similar to what happen
to the bug ID: 103601. 
The overview tab says "inconclusive" as the verdict error 
On the events tab you'll see some detail messages about the errors.

Re-assigning to the manual test client component.
P2 Highly desirable and planned for this release, but not stop ship 
normal A problem making a function difficult to use but no special work around 
is required
Not sufficient resources to complete in TPTP v4.1 (i2).  As such, moving to 
TPTP 4.2.
Using the latest TPTP V4.1.0 driver, this defect is unreproducable when running from the OS desktop.
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithStack>
    <WithOutStack>When I try to run a testsuite on the linux machine (Red Hat Enterprise 
Linux AS release 3, Taroon Update 2), it failed to run.  I'm using the
Build ID TPTP-4.0.0-200507181519. I first did this remotely by login 
in to the linux machine and display it on my windows terminal which didn't 
work, tried to display it on unix terminal, or used vnc still the same
problem.  My last thing to do was to run it locally on the linux machine 
in front of me that had all the eclipse, tptpruntime, etc., installed, I 
got the same result.

The manual testcase windows does not display too after the run.  I checked 
the overview tab and got an  "inconclusive" as the verdict error after the
run.  Then I checked the events tab to see the messages and below is what 
is displayed on the text box.  Also, on the severity box says "error".



How to reproduce:

Login to RHE AS 3.0 Linux, Taroon Update 2
Install the components below in which you can obtain from
www.eclipse.org/tptp/ "latest downloads" is 4.0.0
Eclipse SDK 3.1.0
EMF 2.1.0
XSD 2.1.0
tptp.runtime-TPTP-4.0.0-200507181519   
tptpdc.linux_ia32-TPTP-4.0.0-200507181519 - rac, LINUX-IA32
j2sdk1.4.2_02 - JAVA, this java we have here in cupertino

create new project
go to new:other:test:TPTP Manual Test
go to the test cases tab and add test cases
on behavior tab, click on add to select invocation to run the test case
click Run, to run manual tester, you will see that it doesn't bring up 
the manual test case runtime window, it's kind of similar to what happen
to the bug ID: 103601. 
The overview tab says "inconclusive" as the verdict error 
On the events tab you'll see some detail messages about the errors.

Re-assigning to the manual test client component.
P2 Highly desirable and planned for this release, but not stop ship 
normal A problem making a function difficult to use but no special work around 
is required
Not sufficient resources to complete in TPTP v4.1 (i2).  As such, moving to 
TPTP 4.2.
Using the latest TPTP V4.1.0 driver, this defect is unreproducable when running from the OS desktop.
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106224" />
    <CreationDate amount="2005-08-05 15:11:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>TVT 3.1: Tct 474 English strings on panel</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>1. Create a Java project and import VisualEditorExample.zip to it.</Line>
          <Line>2. Right click on the file ‘TooComplexError.java’, select ‘Open With’, and</Line>
          <Line>click on ‘Visual Editor’.</Line>
          <Line>3. In the ‘Java Beans’ View, select the JButton with the yellow alert sign</Line>
          <Line>next to it.</Line>
          <Line>==&gt; The gray panel came up with english text.</Line>
          <Line>Created attachment 25774</Line>
          <Line>VE_002140_truncation_english.gif</Line>
          <Line>The property  file for this is location in the jbcfswtvm.jar file in the</Line>
          <Line>org.eclipse.ve.swt/vm directory. This (and any other property files in that jar)</Line>
          <Line>need to be translated.</Line>
          <Line>And the truncation in the status bar is as expected.  Note that the flyover in</Line>
          <Line>the the screen shot has the full text.  No more status bar truncation bugs</Line>
          <Line>when the flyover is working properly please.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>OS : RHEL 3.1 
MUST FIX: Yes 
Severity 2 
Build date: 20050725 
Blocking: NO 
Language: CHT 
Bitmap Location: 474_21002140.gif 
Tester Name: Ivory Chang 

Problem Description: Truncated error message in the status bar for VE 
Re-create Procedure: 
1. Create a Java project and import VisualEditorExample.zip to it. 
2. Right click on the file ‘TooComplexError.java’, select ‘Open With’, and 
click on ‘Visual Editor’. 
3. In the ‘Java Beans’ View, select the JButton with the yellow alert sign 
next to it. 
==&gt; The gray panel came up with english text.
Created attachment 25774
VE_002140_truncation_english.gif
The property  file for this is location in the jbcfswtvm.jar file in the
org.eclipse.ve.swt/vm directory. This (and any other property files in that jar)
need to be translated.
And the truncation in the status bar is as expected.  Note that the flyover in 
the the screen shot has the full text.  No more status bar truncation bugs 
when the flyover is working properly please.

We do need to address the untranslated string bit, of course.  Please check 
the properties file that Peter mentions.


closing</WithStack>
    <WithOutStack>OS : RHEL 3.1 
MUST FIX: Yes 
Severity 2 
Build date: 20050725 
Blocking: NO 
Language: CHT 
Bitmap Location: 474_21002140.gif 
Tester Name: Ivory Chang 

Problem Description: Truncated error message in the status bar for VE 
Re-create Procedure: 
1. Create a Java project and import VisualEditorExample.zip to it. 
2. Right click on the file ‘TooComplexError.java’, select ‘Open With’, and 
click on ‘Visual Editor’. 
3. In the ‘Java Beans’ View, select the JButton with the yellow alert sign 
next to it. 
==&gt; The gray panel came up with english text.
Created attachment 25774
VE_002140_truncation_english.gif
The property  file for this is location in the jbcfswtvm.jar file in the
org.eclipse.ve.swt/vm directory. This (and any other property files in that jar)
need to be translated.
And the truncation in the status bar is as expected.  Note that the flyover in 
the the screen shot has the full text.  No more status bar truncation bugs 
when the flyover is working properly please.

We do need to address the untranslated string bit, of course.  Please check 
the properties file that Peter mentions.


closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106225" />
    <CreationDate amount="2005-08-05 15:15:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="MDT.XSD" />
    <component amount="Core" />
    <Version amount="2.1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Reloaded XSD files don't validate</Summery>
    <Patches amount="1">
      <Patch>
        <index>XSDSchemaDirectiveImpl.java</index>
        <original_file>XSDSchemaDirectiveImpl.java</original_file>
        <modified_file>XSDSchemaDirectiveImpl.java</modified_file>
        <Hunks>
          <hunk>// then it's an error if it's not a good schema&#xD;
&#xD;
                 }&#xD;
&#xD;
               }&#xD;
&#xD;
+              else if (!resolvedResource.isLoaded())&#xD;
&#xD;
+              {&#xD;
&#xD;
+                try&#xD;
&#xD;
+                {&#xD;
&#xD;
+                  resolvedResource.load(resourceSet.getLoadOptions());&#xD;
&#xD;
+                }&#xD;
&#xD;
+                catch (IOException exception)&#xD;
&#xD;
+                {&#xD;
&#xD;
+                }&#xD;
&#xD;
+              }&#xD;
&#xD;
   &#xD;
&#xD;
               if (resolvedResource != null)&#xD;
&#xD;
               {</hunk>
        </Hunks>
      </Patch>
    </Patches>
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="multicomment">
        <location start="348" end="472" />
        <code>/**
   * Resets the effects of imports, includes, and redefines so that they will be
reprocessed.
   * @see #update
   */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="473" end="488" />
        <code>void reset();</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1669" end="1736" />
        <code>// then it's an error if it's not a good schema</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1883" end="1954" />
        <code>+                  resolvedResource.load(resourceSet.getLoadOptions());</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="2080" end="2141" />
        <code>if (resolvedResource != null)
               {</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>As can be seen by running the attached test case, if a set of XSD files that
normally validate with no errors are unloaded then reloaded, a slew of new
errors and warnings are returned on subsequent validations.
Created attachment 25775
Test project
I've not looked at this yet, and I'll be on vacation next week.  You might want
to look at using 

  /**
   * Resets the effects of imports, includes, and redefines so that they will be
reprocessed.
   * @see #update
   */
  void reset();

XSD instances are often so tightly interwoven, unloading one schema probably
requires you to reset them all.  Definitely all downstream schemas need to be
reset if you unload an upstream one.
Hmm, the reason we were doing the unload in the first place was because of an
old response from you indicating that if XSD resources are deleted, then we need
to go through this unload/reload process to clean up cross-references before
revalidating.  Is it possible that all we really need to do is reset all of the
XSD's?
Wasn't entirely sure where to do the reset, but tried both before and after
unloading the resource, and neither fixes the problem.
John,

This turns out to be quite a simple problem, thank goodness.  The following
fixes it, I believe:

Index: XSDSchemaDirectiveImpl.java
===================================================================
RCS file:
/home/tools/org.eclipse.xsd/plugins/org.eclipse.xsd/src/org/eclipse/xsd/impl/XSDSchemaDirectiveImpl.java,v
retrieving revision 1.7
diff -u -r1.7 XSDSchemaDirectiveImpl.java
--- XSDSchemaDirectiveImpl.java	8 Jun 2005 06:23:01 -0000	1.7
+++ XSDSchemaDirectiveImpl.java	18 Aug 2005 18:38:20 -0000
@@ -405,6 +405,16 @@
                   // then it's an error if it's not a good schema
                 }
               }
+              else if (!resolvedResource.isLoaded())
+              {
+                try
+                {
+                  resolvedResource.load(resourceSet.getLoadOptions());
+                }
+                catch (IOException exception)
+                {
+                }
+              }
   
               if (resolvedResource != null)
               {

The problem is that a resource that isn't loaded yet won't be loaded without the
additional code above.  Can you verify that this fixes the issue for you?  Note
that I did change your test case to do all the unloading in a separate loop.
That did the trick.  Thanks Ed.
The fix is committed to CVS head.
Fixed in 2.2.0 I200508251028
Move to verified as per bug 206558.
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>As can be seen by running the attached test case, if a set of XSD files that
normally validate with no errors are unloaded then reloaded, a slew of new
errors and warnings are returned on subsequent validations.
Created attachment 25775
Test project
I've not looked at this yet, and I'll be on vacation next week.  You might want
to look at using 

  /**
   * Resets the effects of imports, includes, and redefines so that they will be
reprocessed.
   * @see #update
   */
  void reset();

XSD instances are often so tightly interwoven, unloading one schema probably
requires you to reset them all.  Definitely all downstream schemas need to be
reset if you unload an upstream one.
Hmm, the reason we were doing the unload in the first place was because of an
old response from you indicating that if XSD resources are deleted, then we need
to go through this unload/reload process to clean up cross-references before
revalidating.  Is it possible that all we really need to do is reset all of the
XSD's?
Wasn't entirely sure where to do the reset, but tried both before and after
unloading the resource, and neither fixes the problem.
John,

This turns out to be quite a simple problem, thank goodness.  The following
fixes it, I believe:

Index: XSDSchemaDirectiveImpl.java
===================================================================
RCS file:
/home/tools/org.eclipse.xsd/plugins/org.eclipse.xsd/src/org/eclipse/xsd/impl/XSDSchemaDirectiveImpl.java,v
retrieving revision 1.7
diff -u -r1.7 XSDSchemaDirectiveImpl.java
--- XSDSchemaDirectiveImpl.java	8 Jun 2005 06:23:01 -0000	1.7
+++ XSDSchemaDirectiveImpl.java	18 Aug 2005 18:38:20 -0000
@@ -405,6 +405,16 @@
                   // then it's an error if it's not a good schema
                 }
               }
+              else if (!resolvedResource.isLoaded())
+              {
+                try
+                {
+                  resolvedResource.load(resourceSet.getLoadOptions());
+                }
+                catch (IOException exception)
+                {
+                }
+              }
   
               if (resolvedResource != null)
               {

The problem is that a resource that isn't loaded yet won't be loaded without the
additional code above.  Can you verify that this fixes the issue for you?  Note
that I did change your test case to do all the unloading in a separate loop.
That did the trick.  Thanks Ed.
The fix is committed to CVS head.
Fixed in 2.2.0 I200508251028
Move to verified as per bug 206558.
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106226" />
    <CreationDate amount="2005-08-05 15:16:00 -0400" />
    <DupId amount="106202" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>JavaModelCache should have configurable LRU cache limits</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>We are working with the classpath container extension point and found that if we
add a lot of jars to our container, the JDT starts thrashing the garbage
collector.  Upon further investigation, we found that there is a limit of 2000
packages in the package cache in the JavaModelCache.  Every time I delete and
readd a semicolon and resave the file, the model cache appears to go rebuild the
cache data for all of those jars (even though I'm not actually referencing all
of them from my code) and this makes the garbage collector thrash.  Looking at
the code, it appears that 2000 is a hardcoded limit.  There is a setSpaceLimit()
method on LRUCache, but the class is internal, and I don't see a public way to
get the cache pointer anyway.  

So even though I'm running with -Xmx512m, I'm thrashing memory at a much lower
level than that, and I don't see a workaround other than to not add so many jars
to my classpath.


*** This bug has been marked as a duplicate of 106202 ***</WithStack>
    <WithOutStack>We are working with the classpath container extension point and found that if we
add a lot of jars to our container, the JDT starts thrashing the garbage
collector.  Upon further investigation, we found that there is a limit of 2000
packages in the package cache in the JavaModelCache.  Every time I delete and
readd a semicolon and resave the file, the model cache appears to go rebuild the
cache data for all of those jars (even though I'm not actually referencing all
of them from my code) and this makes the garbage collector thrash.  Looking at
the code, it appears that 2000 is a hardcoded limit.  There is a setSpaceLimit()
method on LRUCache, but the class is internal, and I don't see a public way to
get the cache pointer anyway.  

So even though I'm running with -Xmx512m, I'm thrashing memory at a much lower
level than that, and I don't see a workaround other than to not add so many jars
to my classpath.


*** This bug has been marked as a duplicate of 106202 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106227" />
    <CreationDate amount="2005-08-05 15:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>JUnit test failures running org.eclipse.core.filebuffers.tests  on Mac OS X</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>93 errors occurred when I ran the org.eclipse.core.filebuffers.tests JUnit
plug-in tests on the Mac, build I20050803-0800.  Will attach JUnit results.  We
intend to start running JUnit tests on the Mac post 3.2M1.
Created attachment 25776
JUnit output
The filebuffers plugin is part of the text component.
In our setup, the test also leaves behind a "core_filebuffers_folder" 
workspace directory that cannot be deleted via the command line.  The 
directory can be dragged to the trash, but it cannot be emptied.  The 
message "WorkspaceFile is locked" is displayed.

Does this happen consistently?

Are the user/machine rights setup correctly?

The tests indicate that some resources could not be deleted and hence old data
is around and hence the following tests fail.

André, can you check whether the tests run in your workspace? You only need to
load the "org.eclipse.core.filebuffers.tests" test project and run the 
"FileBuffersTestSuite".
Re: comment #4, yes the errors seem to occur consistently.  I tried running 
the tests from HEAD with I20060808-0800 on the test machine and got the same 
93 errors.  I notice the file project/folderA/folderB/WorkspaceFile has -r--r--
r-- permissions and I am unable to change it.  The file is owned by owner and 
group "sdimitro".  The parent directories have permissions drwxr-xr-x.
Let me know if there is anything else you would like me to check.
The reason for this bug is as follows: the tests set the read-only flag using
IResource.setReadOnly(true). We later delete the project that contains such
files using IProject.delete(...). This works under Linux and Windows but not on
the Mac. The reason is that on the Mac an addition flag 'lock' is set.

Also note that if I delete the project via the Mac Finder it removes the project
without complaints.
see also bug 65893
additional infobit for comment #7: removing the folders in the Finder works, but removing with command 
line Unix-"rm -r" doesn't work either.
I haven't looked into this yet, but I'm surprised deleting a project with
read-only content would succeed on Linux either. When I investigated in bug
21084 I found deletion failed on Linux in this case, as expected.  In all core
tests where we set a resource read-only, we set read-only to false in a finally
block to ensure the test can be cleaned up.
We will do the same but I'd still like to understand what's the expected
behavior here.
Closing since the tests no longer fail.  The expected behaviour in case of
deletion of read-only files is platform specific.  On Windows this is expected
to succeed and on all other platforms I know of, this is not allowed so deletion
will fail.</WithStack>
    <WithOutStack>93 errors occurred when I ran the org.eclipse.core.filebuffers.tests JUnit
plug-in tests on the Mac, build I20050803-0800.  Will attach JUnit results.  We
intend to start running JUnit tests on the Mac post 3.2M1.
Created attachment 25776
JUnit output
The filebuffers plugin is part of the text component.
In our setup, the test also leaves behind a "core_filebuffers_folder" 
workspace directory that cannot be deleted via the command line.  The 
directory can be dragged to the trash, but it cannot be emptied.  The 
message "WorkspaceFile is locked" is displayed.

Does this happen consistently?

Are the user/machine rights setup correctly?

The tests indicate that some resources could not be deleted and hence old data
is around and hence the following tests fail.

André, can you check whether the tests run in your workspace? You only need to
load the "org.eclipse.core.filebuffers.tests" test project and run the 
"FileBuffersTestSuite".
Re: comment #4, yes the errors seem to occur consistently.  I tried running 
the tests from HEAD with I20060808-0800 on the test machine and got the same 
93 errors.  I notice the file project/folderA/folderB/WorkspaceFile has -r--r--
r-- permissions and I am unable to change it.  The file is owned by owner and 
group "sdimitro".  The parent directories have permissions drwxr-xr-x.
Let me know if there is anything else you would like me to check.
The reason for this bug is as follows: the tests set the read-only flag using
IResource.setReadOnly(true). We later delete the project that contains such
files using IProject.delete(...). This works under Linux and Windows but not on
the Mac. The reason is that on the Mac an addition flag 'lock' is set.

Also note that if I delete the project via the Mac Finder it removes the project
without complaints.
see also bug 65893
additional infobit for comment #7: removing the folders in the Finder works, but removing with command 
line Unix-"rm -r" doesn't work either.
I haven't looked into this yet, but I'm surprised deleting a project with
read-only content would succeed on Linux either. When I investigated in bug
21084 I found deletion failed on Linux in this case, as expected.  In all core
tests where we set a resource read-only, we set read-only to false in a finally
block to ensure the test can be cleaned up.
We will do the same but I'd still like to understand what's the expected
behavior here.
Closing since the tests no longer fail.  The expected behaviour in case of
deletion of read-only files is platform specific.  On Windows this is expected
to succeed and on all other platforms I know of, this is not allowed so deletion
will fail.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106228" />
    <CreationDate amount="2005-08-05 15:19:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[navigation] CamelCase pattern matching in quick outline and quick hierarchy</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="class">
        <location start="7461" end="7506" />
        <code>public class Test {
  void doSomeStuff() {}
}</code>
      </source_code>
      <source_code type="class">
        <location start="7748" end="7799" />
        <code>&gt; public class Test {
&gt;   void doSomeStuff() {}
&gt; }</code>
      </source_code>
      <source_code type="class">
        <location start="8198" end="8255" />
        <code>&gt; &gt; public class Test {
&gt; &gt;   void doSomeStuff() {}
&gt; &gt; }</code>
      </source_code>
      <source_code type="class">
        <location start="8900" end="8963" />
        <code>&gt; &gt; &gt; public class Test {
&gt; &gt; &gt;   void doSomeStuff() {}
&gt; &gt; &gt; }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="3">
      <Enumeration lines="6">
        <Lines>
          <Line>1. Moved PatternMatcher (which is a private static class) out of TypeInfoFilter.</Line>
          <Line>2. Created MethodAndTypeNamePatternMatcher that uses PatternMatcher and StringMatcher to match only first part of the label string.</Line>
          <Line>3. Removed matching logic from JavaOutlineInformationControl.</Line>
          <Line>4. Made AbstractInformationControl performs matching using MethodAndTypeNamePatternMatcher</Line>
          <Line>Created attachment 197622</Line>
          <Line>JUnit tests I used to test new pattern matcher class</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- Move PatternMatcher (which is a private static class) out of TypeInfoFilter (see Markus Keller comment).</Line>
          <Line>- Make JavaOutlineInformationControl use a new pattern matcher class that wraps current logic and ads new pattern matching logic (using OR operation e.g. returns true if old or new logic matches).</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- PatternMatcher has a lot of additional logic that is not used/needed</Line>
          <Line>- Matching is performed up to "(" sign. So there is way of combining camel case matching of method name and "(" and then camel case matching of argument types.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I've gotten to like this in the open type dialog.  I think it would be quite 
useful in the quick outline opened in the java editor as well.
The implementation would probably reuse org.eclipse.jdt.internal.corext.util.TypeInfoFilter.PatternMatcher.
+1. Any chance of considering this for 3.4? This is badly needed for method names that are "somewhat long".
&gt;Any chance of considering this for 3.4?
We probably won't have time to work on this. As always, good quality patches are welcome ;-)
*** Bug 275463 has been marked as a duplicate of this bug. ***
*** Bug 283002 has been marked as a duplicate of this bug. ***
*** Bug 284260 has been marked as a duplicate of this bug. ***
Created attachment 196812
Patch to move PatternMather out of TypeInfoFilter and use it to add new functionality to JavaOutlineInformationControl

I would like to propose a patch for this bug. Attached is a first attempt at fixing it.

What I did:

- Move PatternMatcher (which is a private static class) out of TypeInfoFilter (see Markus Keller comment).
- Make JavaOutlineInformationControl use a new pattern matcher class that wraps current logic and ads new pattern matching logic (using OR operation e.g. returns true if old or new logic matches).

This solution is easy and seems to work fine but has few drawbacks:

- PatternMatcher has a lot of additional logic that is not used/needed
- Matching is performed up to "(" sign. So there is way of combining camel case matching of method name and "(" and then camel case matching of argument types.

I would like to know if this patch is enough or if it goes into right direction. If yes then I will add all required parts such as javadoc and tests.
(In reply to comment #7)
&gt; - Make JavaOutlineInformationControl use a new pattern matcher class that wraps
&gt; current logic and ads new pattern matching logic (using OR operation e.g.
&gt; returns true if old or new logic matches).
This should also be done for Quick Hierarchy. See HierarchyInformationControl and AbstractInformationControl. 

&gt; This solution is easy and seems to work fine but has few drawbacks:
&gt; 
&gt; - PatternMatcher has a lot of additional logic that is not used/needed
A * is appended to filter text in the ModifyListener in org.eclipse.jdt.internal.ui.text.AbstractInformationControl.installFilter(). You can remove this and then simply use PatternMatcher in place of StringMatcher in OrStringMatcher (i.e. CamelCaseOrStringMatcher is not required).

&gt; - Matching is performed up to "(" sign. So there is way of combining camel case
&gt; matching of method name and "(" and then camel case matching of argument types.
Hmm, we might be able to live with it, but not sure... 
(Note that this will not be a problem in Quick Hierarchy)
(In reply to comment #8)

Thanks for your comments. I replaced StringMatcher with PatternMatcher and that seems to solve the issue with quick hierarchy. 

I am not sure how should the modified version of 'quick outline' behave. Camel case works for class and method matching. However, as soon as I type '(' it stops working. Should I add camel case support for argument type matching? e.g.:

'fB(SB' should match fooBar(StringBuilder)

Are there any other types of patterns that should be supported?
(In reply to comment #9)
&gt; I am not sure how should the modified version of 'quick outline' behave. Camel
&gt; case works for class and method matching. However, as soon as I type '(' it
&gt; stops working. Should I add camel case support for argument type matching?
&gt; e.g.:
&gt; 
&gt; 'fB(SB' should match fooBar(StringBuilder)
&gt; 
&gt; Are there any other types of patterns that should be supported?

Ideally the following 3 should work
fB(SB matches fooBar(StringBuilder)
fB(String matches fooBar(StringBuilder)
fooBar(SB matches fooBar(StringBuilder)

Camel case should also be supported for filtering by type names which get added once you press Ctrl+O again to add inherited members.
e.g. *FB matches 'foo() : void - p.FooBar'
(The second pattern in OrStringMatcher is for this)
(In reply to comment 9 and comment 10)
Huh, the camelCase matching in arguments list etc. will make things quite complicated. In essence, you would have to parse all constructs that can show up from the label provider. I think we should keep this easy and manageable for now by just supporting camelCase for the first identifier.

Try to split the string at the first "(", "&lt;", or " : ", and then use a normal string matcher for anything after the first identifier in the pattern.
(In reply to comment #11)
&gt; (In reply to comment 9 and comment 10)
&gt; Huh, the camelCase matching in arguments list etc. will make things quite
&gt; complicated. In essence, you would have to parse all constructs that can show
&gt; up from the label provider. I think we should keep this easy and manageable for
&gt; now by just supporting camelCase for the first identifier.
&gt; 

I don't think we need to rely on label provider. Why not pass to the matcher the same java element that was passed to the label provider? If the element is IMethod then we can match its parameter types against the pattern.

I will update a patch in a day or two.

&gt; Try to split the string at the first "(", "&lt;", or " : ", and then use a normal
&gt; string matcher for anything after the first identifier in the pattern.
Parameter types are not the only additional information in the labels. We e.g. show field types, type parameters, and appended full qualifiers. And even if the format of the label changes in the future, the matching should still be based on the string the user sees in the UI.

The labels will always start with the identifier, that's why I suggested to split after the first identifier. The primary goal is to support matching camelCase identifiers. If the user needs more filtering after having typed the camelCase pattern, allow to extend the existing pattern with a simple StringMatcher-based pattern
(In reply to comment #11)
&gt; (In reply to comment 9 and comment 10)
&gt; Huh, the camelCase matching in arguments list etc. will make things quite
&gt; complicated. In essence, you would have to parse all constructs that can show
&gt; up from the label provider. I think we should keep this easy and manageable for
&gt; now by just supporting camelCase for the first identifier.
+1
Created attachment 197618
Using PatternMatcher to camelCase match a method or type name

1. Moved PatternMatcher (which is a private static class) out of TypeInfoFilter.
2. Created MethodAndTypeNamePatternMatcher that uses PatternMatcher and StringMatcher to match only first part of the label string.
3. Removed matching logic from JavaOutlineInformationControl.
4. Made AbstractInformationControl performs matching using MethodAndTypeNamePatternMatcher
Created attachment 197622
JUnit tests I used to test new pattern matcher class

JUnit tests I used to test new pattern matcher class.
Thanks for the patches. We're currently concentrating on Java 7 support, so the review will probably take a few weeks.
(In reply to comment #17)
&gt; Thanks for the patches. We're currently concentrating on Java 7 support, so the
&gt; review will probably take a few weeks.

Any chance of this getting reviewed soon?

Cheers,
Tomasz Kowalczewski
CamelCase matching in the quick outline would really be nice. I've gotten so used to it from other contexts that I always try to use it accidentally in the quick outline. I am then surprised when I don't find what I'm looking for ;-(

So a big +1 on this one.
I have the following class:

public class Test {
  void doSomeStuff() {}
}

If I type 'doSomes' in the quick outline, I don't get 'doSomeStuff()' as an option in the filtered list. Would this be a separate bug or would this enhancement cover this scenario?
(In reply to comment #20)
&gt; I have the following class:
&gt; 
&gt; public class Test {
&gt;   void doSomeStuff() {}
&gt; }
&gt; 
&gt; If I type 'doSomes' in the quick outline, I don't get 'doSomeStuff()' as an
&gt; option in the filtered list. Would this be a separate bug or would this
&gt; enhancement cover this scenario?

This is not a bug but as designed. As soon as you start to use an upper case letter we use case-sensitive matching.
(In reply to comment #21)
&gt; (In reply to comment #20)
&gt; &gt; I have the following class:
&gt; &gt; 
&gt; &gt; public class Test {
&gt; &gt;   void doSomeStuff() {}
&gt; &gt; }
&gt; &gt; 
&gt; &gt; If I type 'doSomes' in the quick outline, I don't get 'doSomeStuff()' as an
&gt; &gt; option in the filtered list. Would this be a separate bug or would this
&gt; &gt; enhancement cover this scenario?
&gt; 
&gt; This is not a bug but as designed. As soon as you start to use an upper case
&gt; letter we use case-sensitive matching.

But this is not consistent with current matching within Open Type dialog or Ctrl-space completion. Here this will match. The logic is that upper case letters are case sensitive, lowercase are not.
(In reply to comment #22)
&gt; (In reply to comment #21)
&gt; &gt; (In reply to comment #20)
&gt; &gt; &gt; I have the following class:
&gt; &gt; &gt; 
&gt; &gt; &gt; public class Test {
&gt; &gt; &gt;   void doSomeStuff() {}
&gt; &gt; &gt; }
&gt; &gt; &gt; 
&gt; &gt; &gt; If I type 'doSomes' in the quick outline, I don't get 'doSomeStuff()' as an
&gt; &gt; &gt; option in the filtered list. Would this be a separate bug or would this
&gt; &gt; &gt; enhancement cover this scenario?
&gt; &gt; 
&gt; &gt; This is not a bug but as designed. As soon as you start to use an upper case
&gt; &gt; letter we use case-sensitive matching.
&gt; 
&gt; But this is not consistent with current matching within Open Type dialog or
&gt; Ctrl-space completion. Here this will match. The logic is that upper case
&gt; letters are case sensitive, lowercase are not.

Good point. Please file a separate bug as this is not camel-case related.
(In reply to comment #23)
&gt; Please file a separate bug as this is not camel-case related.

I opened bug 365015.
Hi,

It has been 8 months since I provided the patches for this issue. Is there any chance it will be reviewed?

Thanks,
Tomasz
Fixed in master with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=e5a45641adcd2d6a74c08dbed08cce0e0349d017

In the end, I didn't use the patch at all, since it had too many little problems.
Verified in I20120312-1800.
*** Bug 365015 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>I've gotten to like this in the open type dialog.  I think it would be quite 
useful in the quick outline opened in the java editor as well.
The implementation would probably reuse org.eclipse.jdt.internal.corext.util.TypeInfoFilter.PatternMatcher.
+1. Any chance of considering this for 3.4? This is badly needed for method names that are "somewhat long".
&gt;Any chance of considering this for 3.4?
We probably won't have time to work on this. As always, good quality patches are welcome ;-)
*** Bug 275463 has been marked as a duplicate of this bug. ***
*** Bug 283002 has been marked as a duplicate of this bug. ***
*** Bug 284260 has been marked as a duplicate of this bug. ***
Created attachment 196812
Patch to move PatternMather out of TypeInfoFilter and use it to add new functionality to JavaOutlineInformationControl

I would like to propose a patch for this bug. Attached is a first attempt at fixing it.

What I did:

- Move PatternMatcher (which is a private static class) out of TypeInfoFilter (see Markus Keller comment).
- Make JavaOutlineInformationControl use a new pattern matcher class that wraps current logic and ads new pattern matching logic (using OR operation e.g. returns true if old or new logic matches).

This solution is easy and seems to work fine but has few drawbacks:

- PatternMatcher has a lot of additional logic that is not used/needed
- Matching is performed up to "(" sign. So there is way of combining camel case matching of method name and "(" and then camel case matching of argument types.

I would like to know if this patch is enough or if it goes into right direction. If yes then I will add all required parts such as javadoc and tests.
(In reply to comment #7)
&gt; - Make JavaOutlineInformationControl use a new pattern matcher class that wraps
&gt; current logic and ads new pattern matching logic (using OR operation e.g.
&gt; returns true if old or new logic matches).
This should also be done for Quick Hierarchy. See HierarchyInformationControl and AbstractInformationControl. 

&gt; This solution is easy and seems to work fine but has few drawbacks:
&gt; 
&gt; - PatternMatcher has a lot of additional logic that is not used/needed
A * is appended to filter text in the ModifyListener in org.eclipse.jdt.internal.ui.text.AbstractInformationControl.installFilter(). You can remove this and then simply use PatternMatcher in place of StringMatcher in OrStringMatcher (i.e. CamelCaseOrStringMatcher is not required).

&gt; - Matching is performed up to "(" sign. So there is way of combining camel case
&gt; matching of method name and "(" and then camel case matching of argument types.
Hmm, we might be able to live with it, but not sure... 
(Note that this will not be a problem in Quick Hierarchy)
(In reply to comment #8)

Thanks for your comments. I replaced StringMatcher with PatternMatcher and that seems to solve the issue with quick hierarchy. 

I am not sure how should the modified version of 'quick outline' behave. Camel case works for class and method matching. However, as soon as I type '(' it stops working. Should I add camel case support for argument type matching? e.g.:

'fB(SB' should match fooBar(StringBuilder)

Are there any other types of patterns that should be supported?
(In reply to comment #9)
&gt; I am not sure how should the modified version of 'quick outline' behave. Camel
&gt; case works for class and method matching. However, as soon as I type '(' it
&gt; stops working. Should I add camel case support for argument type matching?
&gt; e.g.:
&gt; 
&gt; 'fB(SB' should match fooBar(StringBuilder)
&gt; 
&gt; Are there any other types of patterns that should be supported?

Ideally the following 3 should work
fB(SB matches fooBar(StringBuilder)
fB(String matches fooBar(StringBuilder)
fooBar(SB matches fooBar(StringBuilder)

Camel case should also be supported for filtering by type names which get added once you press Ctrl+O again to add inherited members.
e.g. *FB matches 'foo() : void - p.FooBar'
(The second pattern in OrStringMatcher is for this)
(In reply to comment 9 and comment 10)
Huh, the camelCase matching in arguments list etc. will make things quite complicated. In essence, you would have to parse all constructs that can show up from the label provider. I think we should keep this easy and manageable for now by just supporting camelCase for the first identifier.

Try to split the string at the first "(", "&lt;", or " : ", and then use a normal string matcher for anything after the first identifier in the pattern.
(In reply to comment #11)
&gt; (In reply to comment 9 and comment 10)
&gt; Huh, the camelCase matching in arguments list etc. will make things quite
&gt; complicated. In essence, you would have to parse all constructs that can show
&gt; up from the label provider. I think we should keep this easy and manageable for
&gt; now by just supporting camelCase for the first identifier.
&gt; 

I don't think we need to rely on label provider. Why not pass to the matcher the same java element that was passed to the label provider? If the element is IMethod then we can match its parameter types against the pattern.

I will update a patch in a day or two.

&gt; Try to split the string at the first "(", "&lt;", or " : ", and then use a normal
&gt; string matcher for anything after the first identifier in the pattern.
Parameter types are not the only additional information in the labels. We e.g. show field types, type parameters, and appended full qualifiers. And even if the format of the label changes in the future, the matching should still be based on the string the user sees in the UI.

The labels will always start with the identifier, that's why I suggested to split after the first identifier. The primary goal is to support matching camelCase identifiers. If the user needs more filtering after having typed the camelCase pattern, allow to extend the existing pattern with a simple StringMatcher-based pattern
(In reply to comment #11)
&gt; (In reply to comment 9 and comment 10)
&gt; Huh, the camelCase matching in arguments list etc. will make things quite
&gt; complicated. In essence, you would have to parse all constructs that can show
&gt; up from the label provider. I think we should keep this easy and manageable for
&gt; now by just supporting camelCase for the first identifier.
+1
Created attachment 197618
Using PatternMatcher to camelCase match a method or type name

1. Moved PatternMatcher (which is a private static class) out of TypeInfoFilter.
2. Created MethodAndTypeNamePatternMatcher that uses PatternMatcher and StringMatcher to match only first part of the label string.
3. Removed matching logic from JavaOutlineInformationControl.
4. Made AbstractInformationControl performs matching using MethodAndTypeNamePatternMatcher
Created attachment 197622
JUnit tests I used to test new pattern matcher class

JUnit tests I used to test new pattern matcher class.
Thanks for the patches. We're currently concentrating on Java 7 support, so the review will probably take a few weeks.
(In reply to comment #17)
&gt; Thanks for the patches. We're currently concentrating on Java 7 support, so the
&gt; review will probably take a few weeks.

Any chance of this getting reviewed soon?

Cheers,
Tomasz Kowalczewski
CamelCase matching in the quick outline would really be nice. I've gotten so used to it from other contexts that I always try to use it accidentally in the quick outline. I am then surprised when I don't find what I'm looking for ;-(

So a big +1 on this one.
I have the following class:

public class Test {
  void doSomeStuff() {}
}

If I type 'doSomes' in the quick outline, I don't get 'doSomeStuff()' as an option in the filtered list. Would this be a separate bug or would this enhancement cover this scenario?
(In reply to comment #20)
&gt; I have the following class:
&gt; 
&gt; public class Test {
&gt;   void doSomeStuff() {}
&gt; }
&gt; 
&gt; If I type 'doSomes' in the quick outline, I don't get 'doSomeStuff()' as an
&gt; option in the filtered list. Would this be a separate bug or would this
&gt; enhancement cover this scenario?

This is not a bug but as designed. As soon as you start to use an upper case letter we use case-sensitive matching.
(In reply to comment #21)
&gt; (In reply to comment #20)
&gt; &gt; I have the following class:
&gt; &gt; 
&gt; &gt; public class Test {
&gt; &gt;   void doSomeStuff() {}
&gt; &gt; }
&gt; &gt; 
&gt; &gt; If I type 'doSomes' in the quick outline, I don't get 'doSomeStuff()' as an
&gt; &gt; option in the filtered list. Would this be a separate bug or would this
&gt; &gt; enhancement cover this scenario?
&gt; 
&gt; This is not a bug but as designed. As soon as you start to use an upper case
&gt; letter we use case-sensitive matching.

But this is not consistent with current matching within Open Type dialog or Ctrl-space completion. Here this will match. The logic is that upper case letters are case sensitive, lowercase are not.
(In reply to comment #22)
&gt; (In reply to comment #21)
&gt; &gt; (In reply to comment #20)
&gt; &gt; &gt; I have the following class:
&gt; &gt; &gt; 
&gt; &gt; &gt; public class Test {
&gt; &gt; &gt;   void doSomeStuff() {}
&gt; &gt; &gt; }
&gt; &gt; &gt; 
&gt; &gt; &gt; If I type 'doSomes' in the quick outline, I don't get 'doSomeStuff()' as an
&gt; &gt; &gt; option in the filtered list. Would this be a separate bug or would this
&gt; &gt; &gt; enhancement cover this scenario?
&gt; &gt; 
&gt; &gt; This is not a bug but as designed. As soon as you start to use an upper case
&gt; &gt; letter we use case-sensitive matching.
&gt; 
&gt; But this is not consistent with current matching within Open Type dialog or
&gt; Ctrl-space completion. Here this will match. The logic is that upper case
&gt; letters are case sensitive, lowercase are not.

Good point. Please file a separate bug as this is not camel-case related.
(In reply to comment #23)
&gt; Please file a separate bug as this is not camel-case related.

I opened bug 365015.
Hi,

It has been 8 months since I provided the patches for this issue. Is there any chance it will be reviewed?

Thanks,
Tomasz
Fixed in master with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=e5a45641adcd2d6a74c08dbed08cce0e0349d017

In the end, I didn't use the patch at all, since it had too many little problems.
Verified in I20120312-1800.
*** Bug 365015 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106229" />
    <CreationDate amount="2005-08-05 15:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JUnit test failures in Runtime and Resources tests on Mac OS X</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>JUnit failures occured when I ran the org.eclipse.core.tests JUnit plug-in tests
for build I20050803-0800.  We will start running the automated JUnit tests on
the Mac post 3.2M1.  Attachment with results to follow.
Created attachment 25777
JUnit results
I have released fixes for these test failures, but I will leave this bug open
until I get confirmation in the next build.
Forgot to mark this fixed... these tests now pass.</WithStack>
    <WithOutStack>JUnit failures occured when I ran the org.eclipse.core.tests JUnit plug-in tests
for build I20050803-0800.  We will start running the automated JUnit tests on
the Mac post 3.2M1.  Attachment with results to follow.
Created attachment 25777
JUnit results
I have released fixes for these test failures, but I will leave this bug open
until I get confirmation in the next build.
Forgot to mark this fixed... these tests now pass.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106230" />
    <CreationDate amount="2005-08-05 15:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Releng" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JUnit failures running org.eclipse.jdt.debug.tests on Mac OS X</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>A number of errors and failures occurred when I ran the
org.eclipse.jdt.debug.tests plug-in tests on the Mac, build I20050803-0800,
attachment to follow.  We
intend to start running JUnit tests on the Mac post 3.2M1.
Created attachment 25778
JUnit results
I've been running the debug test suite on my personal machine for over a year.
There are currently only 3 tests failing for me: testJavaVersion,
testCaseSensitiveQualifiedSourceLookup, and testRenderingTypes.

What kind of hardware are you using for the test machine? Mine's a 1.25 GHz
Powerbook with 2GB of RAM.

Will Performance Tests also be run on the Mac?
testRenderingTypes is only failing because of my current workspace contains a
plugin that contributes a memoryRendering that the test suite doesn't expect.

testJavaVersion and testCaseSensitiveQualifiedSourceLookup failures are known bugs.
We will not be running performance tests at this time.

The test machine is a Power Mac G4 with dual 1.42 GHz CPUs and 1 GB RAM.  It's 
running Mac OSX, 10.3.9 (may upgrade to 10.4 soon).

Sonia, have these tests been run again since these failures occured? I haven't
been able to reproduce the failures on my mac.
Are any of the other test machines dual processor?
Created attachment 26212
.log content

I tried running on the most recent I build and there are still a number of
errors.  I've attached the .log content.  This is the only test machine that is
dual processor.

Have you tried running the tests from the command line, releng style?
Created attachment 26214
Results from running with -Xbootclasspath setting

Thanks for the pointer to bug 74431, results look better, though it looks like
there are a few more setup issues that need to be addressed.
This is looking much better!
testJavaVersion and testCaseSensitiveQualifiedSourceLookup are expected failures
on mac (for now)

The other failures are source lookup problems. The tests look for the source
code of JDK classes. I'd guess that the test machine does not have the JDK
source installed. On my machine it is here:
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Home/src.jar

If I remember correctly the source code is installed with Apples Developer tools.
There is no src.jar on this machine, I will obtain one and try again.
Created attachment 26244
test results with src.jar installed

I think these latest results are as expected.  Is it problematic to not run the
failing tests on the Mac only?
Last two failures are expected. We'll try to address them in debug.
Moving to Platform-Releng since changes were made there
Closing as fixed.  Opened bug 109328 to track intermittent failures due to 
NoClassDefFoundErrors.</WithStack>
    <WithOutStack>A number of errors and failures occurred when I ran the
org.eclipse.jdt.debug.tests plug-in tests on the Mac, build I20050803-0800,
attachment to follow.  We
intend to start running JUnit tests on the Mac post 3.2M1.
Created attachment 25778
JUnit results
I've been running the debug test suite on my personal machine for over a year.
There are currently only 3 tests failing for me: testJavaVersion,
testCaseSensitiveQualifiedSourceLookup, and testRenderingTypes.

What kind of hardware are you using for the test machine? Mine's a 1.25 GHz
Powerbook with 2GB of RAM.

Will Performance Tests also be run on the Mac?
testRenderingTypes is only failing because of my current workspace contains a
plugin that contributes a memoryRendering that the test suite doesn't expect.

testJavaVersion and testCaseSensitiveQualifiedSourceLookup failures are known bugs.
We will not be running performance tests at this time.

The test machine is a Power Mac G4 with dual 1.42 GHz CPUs and 1 GB RAM.  It's 
running Mac OSX, 10.3.9 (may upgrade to 10.4 soon).

Sonia, have these tests been run again since these failures occured? I haven't
been able to reproduce the failures on my mac.
Are any of the other test machines dual processor?
Created attachment 26212
.log content

I tried running on the most recent I build and there are still a number of
errors.  I've attached the .log content.  This is the only test machine that is
dual processor.

Have you tried running the tests from the command line, releng style?
Created attachment 26214
Results from running with -Xbootclasspath setting

Thanks for the pointer to bug 74431, results look better, though it looks like
there are a few more setup issues that need to be addressed.
This is looking much better!
testJavaVersion and testCaseSensitiveQualifiedSourceLookup are expected failures
on mac (for now)

The other failures are source lookup problems. The tests look for the source
code of JDK classes. I'd guess that the test machine does not have the JDK
source installed. On my machine it is here:
/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Home/src.jar

If I remember correctly the source code is installed with Apples Developer tools.
There is no src.jar on this machine, I will obtain one and try again.
Created attachment 26244
test results with src.jar installed

I think these latest results are as expected.  Is it problematic to not run the
failing tests on the Mac only?
Last two failures are expected. We'll try to address them in debug.
Moving to Platform-Releng since changes were made there
Closing as fixed.  Opened bug 109328 to track intermittent failures due to 
NoClassDefFoundErrors.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106231" />
    <CreationDate amount="2005-08-05 15:29:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JUnit test failures occur for org.eclipse.swt.tests on Mac OS X</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>JUnit test failures and errors occurred when I ran the org.eclipse.swt.tests
JUnit plug-in tests on the Mac, build I20050803-0800, attachment with result to
follow.  We
intend to start running JUnit tests on the Mac post 3.2M1.
Created attachment 25779
JUnit results
Closing report, platform is discontinued.
SWT's Carbon port is no longer being supported.</WithStack>
    <WithOutStack>JUnit test failures and errors occurred when I ran the org.eclipse.swt.tests
JUnit plug-in tests on the Mac, build I20050803-0800, attachment with result to
follow.  We
intend to start running JUnit tests on the Mac post 3.2M1.
Created attachment 25779
JUnit results
Closing report, platform is discontinued.
SWT's Carbon port is no longer being supported.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106232" />
    <CreationDate amount="2005-08-05 15:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JUnit test failures/errors running org.eclipse.update.tests.core on Mac OS X</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>JUnit test failures and errors occurred when I ran the
org.eclipse.update.tests.core JUnit plug-in tests on the Mac, build
I20050803-0800, attachment with result to follow.  We
intend to start running JUnit tests on the Mac post 3.2M1.
Created attachment 25780
JUnit results
Branko, Please take a look, at what is different on the Mac running the tests.
FIXED</WithStack>
    <WithOutStack>JUnit test failures and errors occurred when I ran the
org.eclipse.update.tests.core JUnit plug-in tests on the Mac, build
I20050803-0800, attachment with result to follow.  We
intend to start running JUnit tests on the Mac post 3.2M1.
Created attachment 25780
JUnit results
Branko, Please take a look, at what is different on the Mac running the tests.
FIXED</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106233" />
    <CreationDate amount="2005-08-05 15:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Releng" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JUnit test failures occur when running org.eclipse.releng.tests on Mac OS X</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Will need to modify org.eclipse.releng.tests to run on the Mac without failing
on the chkpii test.
Fixed.</WithStack>
    <WithOutStack>Will need to modify org.eclipse.releng.tests to run on the Mac without failing
on the chkpii test.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106234" />
    <CreationDate amount="2005-08-05 15:38:00 -0400" />
    <DupId amount="49098" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[OLE] Word doc looses scroll bar.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>- From the resource nav, I open a .doc file, it shows up in E fine as an OLE</Line>
          <Line>Word doo-dad (See ole-1.png).</Line>
          <Line>- Double click on the tab for the editor on this .do, the editor is maxed out in</Line>
          <Line>size. The scroll bar is gone. (ole-2.png)</Line>
          <Line>- Double click on the tab again, and the editor goes back to normal. The scroll</Line>
          <Line>bar is still gone. (ole-3.png).</Line>
          <Line>Created attachment 25781</Line>
          <Line>screenshot</Line>
          <Line>Created attachment 25782</Line>
          <Line>screenshot 2</Line>
          <Line>Created attachment 25783</Line>
          <Line>screenshot 3</Line>
          <Line>Actually, I will not include the NFO file since it is 1.4MB.</Line>
          <Line>I think this may be a duplicate of bug 49098.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Word doc looses scroll bar.
I am on WinXP SP2 + the usual pile of security patches. Sun Java 1.5.0_04. MS
Office 2003, MS Word 11.0 build 6502; Full sys info (.NFO) attached.

- From the resource nav, I open a .doc file, it shows up in E fine as an OLE
Word doo-dad (See ole-1.png).
- Double click on the tab for the editor on this .do, the editor is maxed out in
size. The scroll bar is gone. (ole-2.png)
- Double click on the tab again, and the editor goes back to normal. The scroll
bar is still gone. (ole-3.png).
Created attachment 25781
screenshot
Created attachment 25782
screenshot 2
Created attachment 25783
screenshot 3
Actually, I will not include the NFO file since it is 1.4MB.
I think this may be a duplicate of bug 49098.

Still there in the 20050808.2000 test pass...

*** Bug 107966 has been marked as a duplicate of this bug. ***
Another, possibly related issue:  When switching between editors, the scroll-bar position for the word-editor is not memorized correctly.  For example, open a word doc, scroll down a few pages, go to java editor then back to word doc, the scrollbar is now at the top.

We're reouurce strapped at the moment (who isn't...;-) so OLE work is being deferred for now.



Reopening to investigate


This appears to be a dup of bug 49098. Doung, is this the one you were thinking of ?? If not feel free to change...


*** This bug has been marked as a duplicate of bug 49098 ***</WithStack>
    <WithOutStack>Word doc looses scroll bar.
I am on WinXP SP2 + the usual pile of security patches. Sun Java 1.5.0_04. MS
Office 2003, MS Word 11.0 build 6502; Full sys info (.NFO) attached.

- From the resource nav, I open a .doc file, it shows up in E fine as an OLE
Word doo-dad (See ole-1.png).
- Double click on the tab for the editor on this .do, the editor is maxed out in
size. The scroll bar is gone. (ole-2.png)
- Double click on the tab again, and the editor goes back to normal. The scroll
bar is still gone. (ole-3.png).
Created attachment 25781
screenshot
Created attachment 25782
screenshot 2
Created attachment 25783
screenshot 3
Actually, I will not include the NFO file since it is 1.4MB.
I think this may be a duplicate of bug 49098.

Still there in the 20050808.2000 test pass...

*** Bug 107966 has been marked as a duplicate of this bug. ***
Another, possibly related issue:  When switching between editors, the scroll-bar position for the word-editor is not memorized correctly.  For example, open a word doc, scroll down a few pages, go to java editor then back to word doc, the scrollbar is now at the top.

We're reouurce strapped at the moment (who isn't...;-) so OLE work is being deferred for now.



Reopening to investigate


This appears to be a dup of bug 49098. Doung, is this the one you were thinking of ?? If not feel free to change...


*** This bug has been marked as a duplicate of bug 49098 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106235" />
    <CreationDate amount="2005-08-05 15:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="EMF" />
    <component amount="Tools" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Model Importer: Label should be "Model URIs" or "Model URI".</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>On the first page of the model importer wizard, the user can specify a single or
a multiple model.  The label of the model location text should be different on
each case (as it is done for the page description).
The fix is committed to CVS.
Fixed in 2.2.0 I200508111102
Fixed in 2.2.0 I200508111102
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>On the first page of the model importer wizard, the user can specify a single or
a multiple model.  The label of the model location text should be different on
each case (as it is done for the page description).
The fix is committed to CVS.
Fixed in 2.2.0 I200508111102
Fixed in 2.2.0 I200508111102
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106236" />
    <CreationDate amount="2005-08-05 15:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.UI.JUnit" />
    <Version amount="4.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P1" />
    <bug_severity amount="blocker" />
    <Summery>TVT 3.1 - TCT 426 - "Test" is translated in JUnit generated code and should not be</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="19">
        <Lines>
          <Line>1. Create a JUnit Test Suite.</Line>
          <Line>2. Select Test Method tab.</Line>
          <Line>3. Click Add button and save the Test Suite.</Line>
          <Line>4. Select the test suite element in the Test Navigator and right click to open</Line>
          <Line>the context menu.</Line>
          <Line>5. Select "Open Source Code".</Line>
          <Line>6. The function name in the java source contains translated characters.</Line>
          <Line>Created attachment 25784</Line>
          <Line>screenshot</Line>
          <Line>Upgrading priority to P1</Line>
          <Line>Updating target milestone to reflect that this was fixed (or will be fixed) in</Line>
          <Line>4.0.1, not 4.1.</Line>
          <Line>In the generated code, the name of the method is generated by concatenating the</Line>
          <Line>non-translated word "test" to the name of the test case as it is defined in the</Line>
          <Line>test suite editor.</Line>
          <Line>So, the translated strings in the method names come from the user input. If the</Line>
          <Line>user changes a test case name to an english word, the method name will contain</Line>
          <Line>english words. If the user adds japanese characters to the test case name, then</Line>
          <Line>the method will contain japanese characters. This sounds to me as a normal behavior.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="10">
        <Lines>
          <Line>1) We all agree that this is normal behavior, and the defect is closed.</Line>
          <Line>2) The tester stills thinks that the method name should not contain japanese</Line>
          <Line>characters. Since the method name is implied by the test case name, we decide</Line>
          <Line>that the defaut name for a new Test Case, when the user hits "Add" in the Test</Line>
          <Line>Cases form, should not be translated.</Line>
          <Line>3) The problem is rephrased to: "The method name should not contain both</Line>
          <Line>translated and non-translated words for 'Test'". Since JUnit requires the</Line>
          <Line>non-translated "test" prefix for test methods, the translated word for "Test"</Line>
          <Line>should be removed from the method name.</Line>
          <Line>According the Japanese tester, option 2 seems to be the most appropriate.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>We need to know where this string is being concatinated from (about 20 instances
of the word "test" in their files).  This is bug will stop sign off for TVT.

OS : RHEL 3.1
Must fix
Severity ( 1 thru 4, 1 as most severe): 2
Build date: 0720
Blocking: YES
Language: JPN
Bitmap Location: Z:\defects\JPN\25.001380_JPN.gif
Tester Name: Hiroshi Inoue

Problem Description: Function name in the java source contains translated
characters.

Steps:
1. Create a JUnit Test Suite.
2. Select Test Method tab.
3. Click Add button and save the Test Suite.
4. Select the test suite element in the Test Navigator and right click to open
the context menu.
5. Select "Open Source Code".
6. The function name in the java source contains translated characters.
Created attachment 25784
screenshot
Upgrading priority to P1
Updating target milestone to reflect that this was fixed (or will be fixed) in
4.0.1, not 4.1. 
In the generated code, the name of the method is generated by concatenating the
non-translated word "test" to the name of the test case as it is defined in the
test suite editor.
So, the translated strings in the method names come from the user input. If the
user changes a test case name to an english word, the method name will contain
english words. If the user adds japanese characters to the test case name, then
the method will contain japanese characters. This sounds to me as a normal behavior.

This said, here are the alternatives I can see:
1) We all agree that this is normal behavior, and the defect is closed.
2) The tester stills thinks that the method name should not contain japanese
characters. Since the method name is implied by the test case name, we decide
that the defaut name for a new Test Case, when the user hits "Add" in the Test
Cases form, should not be translated.
3) The problem is rephrased to: "The method name should not contain both
translated and non-translated words for 'Test'". Since JUnit requires the
non-translated "test" prefix for test methods, the translated word for "Test"
should be removed from the method name.
According the Japanese tester, option 2 seems to be the most appropriate.  

To explain the problem further.  We used a JUnit project created in English, 
exported it and then imported it onto a Japanese machine.  When the tester than 
presses "Add", the method name still shows up with "test" in Japanese.  So I 
don't see how this is coming from user input.
Remove Cindy...only needed to add Uliyana...
Created attachment 25954
Link between a test case name and a test method name

&gt; When the tester than presses "Add", the method name still shows up
&gt; with "test" in Japanese.  So I don't see how this is coming from user input.

Please see attachment UserInput.jpg that shows how the test case name (which is
a field that the user can edit) has an impact on the the method name.
Fixed, adopting solution #2.
The default base name for a new Test Case, when the user hits "Add" in Test
methods tab, is now non-translated, so it is always "test".
ACTION: Please verify/close this defect.
Verified on TPTP-4.3.0-200611070100 driver.</WithStack>
    <WithOutStack>We need to know where this string is being concatinated from (about 20 instances
of the word "test" in their files).  This is bug will stop sign off for TVT.

OS : RHEL 3.1
Must fix
Severity ( 1 thru 4, 1 as most severe): 2
Build date: 0720
Blocking: YES
Language: JPN
Bitmap Location: Z:\defects\JPN\25.001380_JPN.gif
Tester Name: Hiroshi Inoue

Problem Description: Function name in the java source contains translated
characters.

Steps:
1. Create a JUnit Test Suite.
2. Select Test Method tab.
3. Click Add button and save the Test Suite.
4. Select the test suite element in the Test Navigator and right click to open
the context menu.
5. Select "Open Source Code".
6. The function name in the java source contains translated characters.
Created attachment 25784
screenshot
Upgrading priority to P1
Updating target milestone to reflect that this was fixed (or will be fixed) in
4.0.1, not 4.1. 
In the generated code, the name of the method is generated by concatenating the
non-translated word "test" to the name of the test case as it is defined in the
test suite editor.
So, the translated strings in the method names come from the user input. If the
user changes a test case name to an english word, the method name will contain
english words. If the user adds japanese characters to the test case name, then
the method will contain japanese characters. This sounds to me as a normal behavior.

This said, here are the alternatives I can see:
1) We all agree that this is normal behavior, and the defect is closed.
2) The tester stills thinks that the method name should not contain japanese
characters. Since the method name is implied by the test case name, we decide
that the defaut name for a new Test Case, when the user hits "Add" in the Test
Cases form, should not be translated.
3) The problem is rephrased to: "The method name should not contain both
translated and non-translated words for 'Test'". Since JUnit requires the
non-translated "test" prefix for test methods, the translated word for "Test"
should be removed from the method name.
According the Japanese tester, option 2 seems to be the most appropriate.  

To explain the problem further.  We used a JUnit project created in English, 
exported it and then imported it onto a Japanese machine.  When the tester than 
presses "Add", the method name still shows up with "test" in Japanese.  So I 
don't see how this is coming from user input.
Remove Cindy...only needed to add Uliyana...
Created attachment 25954
Link between a test case name and a test method name

&gt; When the tester than presses "Add", the method name still shows up
&gt; with "test" in Japanese.  So I don't see how this is coming from user input.

Please see attachment UserInput.jpg that shows how the test case name (which is
a field that the user can edit) has an impact on the the method name.
Fixed, adopting solution #2.
The default base name for a new Test Case, when the user hits "Add" in Test
methods tab, is now non-translated, so it is always "test".
ACTION: Please verify/close this defect.
Verified on TPTP-4.3.0-200611070100 driver.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106237" />
    <CreationDate amount="2005-08-05 15:52:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="2.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Configurable Component Names</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Currently when ever a new component is generated, the name of the component is a
standard name.  So when I create a new DataSource, the name always starts as
'Data Source'.  

I use standard prefixes for all of my component types.  src for Data Source, set
for Data Sets, tc for Text Control, ...

I would like to be able to configure the default name for each type of element.
Add Eclipse preference to set default prefix to use for all default names.
Add preference setting page to set default name of element.
It's not fixed in build 20051014.
still exist in build 20051018
Verified in build 20051220.</WithStack>
    <WithOutStack>Currently when ever a new component is generated, the name of the component is a
standard name.  So when I create a new DataSource, the name always starts as
'Data Source'.  

I use standard prefixes for all of my component types.  src for Data Source, set
for Data Sets, tc for Text Control, ...

I would like to be able to configure the default name for each type of element.
Add Eclipse preference to set default prefix to use for all default names.
Add preference setting page to set default name of element.
It's not fixed in build 20051014.
still exist in build 20051018
Verified in build 20051220.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106238" />
    <CreationDate amount="2005-08-05 16:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Contributions] ordering: Be able to more deterministicly order object contributions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>To my understanding, there is no current way (at least there weren't when I 
asked about this on eclipse.platform some months ago) to determine or set the 
order of actions on an object contribution (or their group). 
 
Could one add an optional "priority" or "order" numeric value to the object 
contribution actiongroup and action extensions so there is some way of saying 
I want this group to be above this other group? If this is not set, it can 
just default to somewhere in the middle (lets say order went from 1 - 100, all 
contributions with no order defaults in the list as 50) ? 
 
I like to use object contributions to add popup actions etc, but sometimes I 
need more control than the current system allows. Especially in RCP / Platform 
based applications.
Moving Dougs bugs
Assigning to component owner
PW

This item has been fixed/superceded by the menu contribution mechanism - bug 154130

menu contributions have much more control over placement.</WithStack>
    <WithOutStack>To my understanding, there is no current way (at least there weren't when I 
asked about this on eclipse.platform some months ago) to determine or set the 
order of actions on an object contribution (or their group). 
 
Could one add an optional "priority" or "order" numeric value to the object 
contribution actiongroup and action extensions so there is some way of saying 
I want this group to be above this other group? If this is not set, it can 
just default to somewhere in the middle (lets say order went from 1 - 100, all 
contributions with no order defaults in the list as 50) ? 
 
I like to use object contributions to add popup actions etc, but sometimes I 
need more control than the current system allows. Especially in RCP / Platform 
based applications.
Moving Dougs bugs
Assigning to component owner
PW

This item has been fixed/superceded by the menu contribution mechanism - bug 154130

menu contributions have much more control over placement.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106239" />
    <CreationDate amount="2005-08-05 16:19:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="wst.ws" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>TVT 3.1 - TCT 574 - Unable to Add Assertions and incorrect message appears for Web Service</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1. In the Action pane toolbar, click on the Manage Referenced Services icon.</Line>
          <Line>2. In the Services table, click on the Get link. Select Echo Service (the left</Line>
          <Line>hand side checkbox), and click the Transfer button.</Line>
          <Line>3. Click Add Services.</Line>
          <Line>4. In the Action pane toolbar, click on the Manage Publisher Assertion icon.</Line>
          <Line>5. In the Businesses table, click on the Get link. Select Echo Business (the</Line>
          <Line>left hand side checkbox), and click the Transfer button.</Line>
          <Line>6. Click the Add Assertions button.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>This problem is blocking the following test case.

OS : RHEL 3.1
MUST FIX: Yes
Severity 2
Build date: 20050803
Blocking: No
Language: CHT
Bitmap Location: 574_26.gif
Tester Name: Ivory Chang

Problem Description:
Re-create Procedure: Unable to Add Assertions and incorrect message appears for
Web Service
1. In the Action pane toolbar, click on the Manage Referenced Services icon.
2. In the Services table, click on the Get link. Select Echo Service (the left
hand side checkbox), and click the Transfer button.
3. Click Add Services.
4. In the Action pane toolbar, click on the Manage Publisher Assertion icon.
5. In the Businesses table, click on the Get link. Select Echo Business (the
left hand side checkbox), and click the Transfer button.
6. Click the Add Assertions button.

Best Regards, Ivory Chang TVT, Taiwan
Created attachment 25785
screenshot
Created attachment 25875
Patch for the wst.ws.explorer plug-in
Assigning to Peter Moogk on behalf of Chris Brealey.
Accepting defect on behalf of Peter as a patch is available.
Patches committed and released as v20050809_1630.
Kathy Chan updating target milestone to 1.0M7.1 on behalf of Chris Brealey.
Is this one fixed in 0.7.1? We still didn't see the fix as of wtp-sdk-
M20050815.zip. This is marked as a must-fix for TVT signoff.
From what I can tell, this bug is fixed. First of all, the fact that you are 
getting an error message is not a bug. This is because you are trying to add an 
assertion to a business that is not owned by you. I have to own that business 
in order to add assertions. Therefore, I'm not surprise if you get that 
message. The fix for this bug is to externalize 
the "MSG_ERROR_NOT_OWNED_BUSINESS" message. So, instead of getting, the key in 
the status pane, you should now get the proper translated message. If this is 
the case, then the bug is fixed. If you want to add an assertion without 
getting any errors, you must do it against a business that you actually owned.
Actually, we followed the testcases to import a Web Service and
then create a business by our own. If we are the creator of the
business, won't we be the owner of the business? Or, we need to do
something else to make the function available? Please advise. Thanks!
Yes, if you created the business, then you are the owner. Peter or Kathy, can 
you double check the testcase to make sure there isn't a step missing?
Any update?
Hi Kit,
   I was able to reproduce the problem that you are seeing. (ie. the business 
not owned error when adding a business assertion.)  This scenario was working 
about a week ago.  Therefore, our current assessment is that the IBM UDDI test 
registry has changed it's behaviour to cause this problem.  I have sent a note 
to the person responsible for this UDDI registry to determine why the problem 
is occurring.  I will update this defect when I get more information.  Thanks.
Hi Peter, thanks for the update. Since WTP 0.7 went out the door already, can 
you document this bug in the news and noteworthy document and put a link in 
here? Thanks.
This problem had been added to the Known Problem section of the WTP 0.7 Web 
Services News and Noteworthy document:

http://www.eclipse.org/webtools/jst/components/ws/0.7/news/jst-ws-0.7news.html
Are we still planning on fixing this in WTP 0.7.1? If yes, please re-open this 
bug. Thanks.
Kit, the target milestone is set to the 0.7.1 release.  Are you still seeing 
the problem in 0.7.1?

Hi Kit,
   This defect wont get fixed for the 0.71 milestone.  I'm removing the target 
milestone until we have a better idea of when the UDDI team will fix this 
problem.  Thanks.
Just to reiterate what Peter said in comment 12. We believe this is a bug in 
the IBM registry itself. There weren't any changes to the Explorer in that 
area, and the same operation was working up until few weeks ago. This makes us 
to believe it is a registry bug. We have contacted the registry's admin to 
inform them about this.
Updating this bug to the correct state since the problem had not been fixed.
This bug is no longer relevant as the Universal Business Registry (the federated IBM / Microsoft / SAP public and test UDDI registries) was dismantled back on January 12.
Closing on submitter's behalf. The public registries are toast.</WithStack>
    <WithOutStack>This problem is blocking the following test case.

OS : RHEL 3.1
MUST FIX: Yes
Severity 2
Build date: 20050803
Blocking: No
Language: CHT
Bitmap Location: 574_26.gif
Tester Name: Ivory Chang

Problem Description:
Re-create Procedure: Unable to Add Assertions and incorrect message appears for
Web Service
1. In the Action pane toolbar, click on the Manage Referenced Services icon.
2. In the Services table, click on the Get link. Select Echo Service (the left
hand side checkbox), and click the Transfer button.
3. Click Add Services.
4. In the Action pane toolbar, click on the Manage Publisher Assertion icon.
5. In the Businesses table, click on the Get link. Select Echo Business (the
left hand side checkbox), and click the Transfer button.
6. Click the Add Assertions button.

Best Regards, Ivory Chang TVT, Taiwan
Created attachment 25785
screenshot
Created attachment 25875
Patch for the wst.ws.explorer plug-in
Assigning to Peter Moogk on behalf of Chris Brealey.
Accepting defect on behalf of Peter as a patch is available.
Patches committed and released as v20050809_1630.
Kathy Chan updating target milestone to 1.0M7.1 on behalf of Chris Brealey.
Is this one fixed in 0.7.1? We still didn't see the fix as of wtp-sdk-
M20050815.zip. This is marked as a must-fix for TVT signoff.
From what I can tell, this bug is fixed. First of all, the fact that you are 
getting an error message is not a bug. This is because you are trying to add an 
assertion to a business that is not owned by you. I have to own that business 
in order to add assertions. Therefore, I'm not surprise if you get that 
message. The fix for this bug is to externalize 
the "MSG_ERROR_NOT_OWNED_BUSINESS" message. So, instead of getting, the key in 
the status pane, you should now get the proper translated message. If this is 
the case, then the bug is fixed. If you want to add an assertion without 
getting any errors, you must do it against a business that you actually owned.
Actually, we followed the testcases to import a Web Service and
then create a business by our own. If we are the creator of the
business, won't we be the owner of the business? Or, we need to do
something else to make the function available? Please advise. Thanks!
Yes, if you created the business, then you are the owner. Peter or Kathy, can 
you double check the testcase to make sure there isn't a step missing?
Any update?
Hi Kit,
   I was able to reproduce the problem that you are seeing. (ie. the business 
not owned error when adding a business assertion.)  This scenario was working 
about a week ago.  Therefore, our current assessment is that the IBM UDDI test 
registry has changed it's behaviour to cause this problem.  I have sent a note 
to the person responsible for this UDDI registry to determine why the problem 
is occurring.  I will update this defect when I get more information.  Thanks.
Hi Peter, thanks for the update. Since WTP 0.7 went out the door already, can 
you document this bug in the news and noteworthy document and put a link in 
here? Thanks.
This problem had been added to the Known Problem section of the WTP 0.7 Web 
Services News and Noteworthy document:

http://www.eclipse.org/webtools/jst/components/ws/0.7/news/jst-ws-0.7news.html
Are we still planning on fixing this in WTP 0.7.1? If yes, please re-open this 
bug. Thanks.
Kit, the target milestone is set to the 0.7.1 release.  Are you still seeing 
the problem in 0.7.1?

Hi Kit,
   This defect wont get fixed for the 0.71 milestone.  I'm removing the target 
milestone until we have a better idea of when the UDDI team will fix this 
problem.  Thanks.
Just to reiterate what Peter said in comment 12. We believe this is a bug in 
the IBM registry itself. There weren't any changes to the Explorer in that 
area, and the same operation was working up until few weeks ago. This makes us 
to believe it is a registry bug. We have contacted the registry's admin to 
inform them about this.
Updating this bug to the correct state since the problem had not been fixed.
This bug is no longer relevant as the Universal Business Registry (the federated IBM / Microsoft / SAP public and test UDDI registries) was dismantled back on January 12.
Closing on submitter's behalf. The public registries are toast.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106240" />
    <CreationDate amount="2005-08-05 16:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="PTP" />
    <component amount="Core" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="minor" />
    <Summery>Selection Area on View</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The selection area is perfect if the mouse drag started from left top to right down.  If the mouse drag 
started from right down to left top, the selection area will be flickering very much and the starting point is 
not stationary.
Clement (or was it Donny?) fixed this.
I haven't fixed this problem.  The problem is still here.  In windows platform,
the flickering is very much than in linux or mac.  Greg tried the firework
program in his mac.  This program also has this selection problem.

(In reply to comment #1)
&gt; Clement (or was it Donny?) fixed this.
Sorry, I don't know what to do on this one.  I didn't write the selection code, I don't have a windows 
box, and it looks perfect to me on the MAC and Linux boxes I'm using.  Furthermore, I have no idea 
what 'the firework program' is.
it has been fixed.
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.
Closing as fixed</WithStack>
    <WithOutStack>The selection area is perfect if the mouse drag started from left top to right down.  If the mouse drag 
started from right down to left top, the selection area will be flickering very much and the starting point is 
not stationary.
Clement (or was it Donny?) fixed this.
I haven't fixed this problem.  The problem is still here.  In windows platform,
the flickering is very much than in linux or mac.  Greg tried the firework
program in his mac.  This program also has this selection problem.

(In reply to comment #1)
&gt; Clement (or was it Donny?) fixed this.
Sorry, I don't know what to do on this one.  I didn't write the selection code, I don't have a windows 
box, and it looks perfect to me on the MAC and Linux boxes I'm using.  Furthermore, I have no idea 
what 'the firework program' is.
it has been fixed.
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.
Closing as fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106241" />
    <CreationDate amount="2005-08-05 16:21:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Argument stopInMain has no impact in method org.eclipse.cdt.debug.core.CDIDebugModel#newDebugTarget</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="assignment">
        <location start="1075" end="1127" />
        <code>final IDebugTarget[] target = new IDebugTarget[1];</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1128" end="1771" />
        <code>IWorkspaceRunnable r = new IWorkspaceRunnable() {

			public void run( IProgressMonitor m ) throws 
CoreException {
				boolean stop = launch.getLaunchConfiguration
().getAttribute( ICDTLaunchConfigurationConstants.ATTR_DEBUGGER_STOP_AT_MAIN, 
false );
				target[0] = new CDebugTarget( launch, project, 
cdiTarget, name, debuggeeProcess, file, allowTerminate, allowDisconnect );
				ICDITargetConfiguration config = 
cdiTarget.getConfiguration();
				if ( config.supportsBreakpoints() &amp;&amp; stop ) {
					stopInMain( (CDebugTarget)target[0] );
				}
				if ( config.supportsResume() &amp;&amp; resumeTarget ) 
{
					target[0].resume();
				}
			}
		}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1781" end="1830" />
        <code>ResourcesPlugin.getWorkspace().run( r, null );</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1835" end="1943" />
        <code>catch( CoreException e ) {
			CDebugCorePlugin.log( e );
			throw new DebugException( e.getStatus() );
		}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The current version 3.1RC3 interface is:
newDebugTarget(final Ilaunch launch, final IProject project, final ICDITarget 
cdiTarget, final ..., final boolean stopInMain,...)

However, inside the body of this method, it uses another funciton to retrieve 
the same argument from the ILaunchConfiguration. Which means the stopInMain 
argument has no effect, and developer can not control the stop in main 
behavior by using this method.

Can CDT either change the body of the method change the signature of this 
method? Personally, I suggest removing the launch.getLaunchConfiguration(...) 
from the runnable and use the stopInMain.

Original code from CDTRC3.
==============================================================================
	public static IDebugTarget newDebugTarget( final ILaunch launch, final 
IProject project, final ICDITarget cdiTarget, final String name, final 
IProcess debuggeeProcess, final IBinaryObject file, final boolean 
allowTerminate, final boolean allowDisconnect, final boolean stopInMain, final 
boolean resumeTarget ) throws DebugException {
		final IDebugTarget[] target = new IDebugTarget[1];
		IWorkspaceRunnable r = new IWorkspaceRunnable() {

			public void run( IProgressMonitor m ) throws 
CoreException {
				boolean stop = launch.getLaunchConfiguration
().getAttribute( ICDTLaunchConfigurationConstants.ATTR_DEBUGGER_STOP_AT_MAIN, 
false );
				target[0] = new CDebugTarget( launch, project, 
cdiTarget, name, debuggeeProcess, file, allowTerminate, allowDisconnect );
				ICDITargetConfiguration config = 
cdiTarget.getConfiguration();
				if ( config.supportsBreakpoints() &amp;&amp; stop ) {
					stopInMain( (CDebugTarget)target[0] );
				}
				if ( config.supportsResume() &amp;&amp; resumeTarget ) 
{
					target[0].resume();
				}
			}
		};
		try {
			ResourcesPlugin.getWorkspace().run( r, null );
		}
		catch( CoreException e ) {
			CDebugCorePlugin.log( e );
			throw new DebugException( e.getStatus() );
		}
		return target[0];
	}
Fixed in HEAD and 3.0.1 branch.</WithStack>
    <WithOutStack>The current version 3.1RC3 interface is:
newDebugTarget(final Ilaunch launch, final IProject project, final ICDITarget 
cdiTarget, final ..., final boolean stopInMain,...)

However, inside the body of this method, it uses another funciton to retrieve 
the same argument from the ILaunchConfiguration. Which means the stopInMain 
argument has no effect, and developer can not control the stop in main 
behavior by using this method.

Can CDT either change the body of the method change the signature of this 
method? Personally, I suggest removing the launch.getLaunchConfiguration(...) 
from the runnable and use the stopInMain.

Original code from CDTRC3.
==============================================================================
	public static IDebugTarget newDebugTarget( final ILaunch launch, final 
IProject project, final ICDITarget cdiTarget, final String name, final 
IProcess debuggeeProcess, final IBinaryObject file, final boolean 
allowTerminate, final boolean allowDisconnect, final boolean stopInMain, final 
boolean resumeTarget ) throws DebugException {
		final IDebugTarget[] target = new IDebugTarget[1];
		IWorkspaceRunnable r = new IWorkspaceRunnable() {

			public void run( IProgressMonitor m ) throws 
CoreException {
				boolean stop = launch.getLaunchConfiguration
().getAttribute( ICDTLaunchConfigurationConstants.ATTR_DEBUGGER_STOP_AT_MAIN, 
false );
				target[0] = new CDebugTarget( launch, project, 
cdiTarget, name, debuggeeProcess, file, allowTerminate, allowDisconnect );
				ICDITargetConfiguration config = 
cdiTarget.getConfiguration();
				if ( config.supportsBreakpoints() &amp;&amp; stop ) {
					stopInMain( (CDebugTarget)target[0] );
				}
				if ( config.supportsResume() &amp;&amp; resumeTarget ) 
{
					target[0].resume();
				}
			}
		};
		try {
			ResourcesPlugin.getWorkspace().run( r, null );
		}
		catch( CoreException e ) {
			CDebugCorePlugin.log( e );
			throw new DebugException( e.getStatus() );
		}
		return target[0];
	}
Fixed in HEAD and 3.0.1 branch.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106242" />
    <CreationDate amount="2005-08-05 16:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="PTP" />
    <component amount="Core" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>MouseEvent on View</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When double click on an element, this element will be drew black rectangle.  The problem is that it will fire 
other mouse events before you got the double click event.  For example, Down -&gt; Up -&gt; Down -&gt; Double 
Click -&gt; Up.  When you double click on the element, you will get the above events fired.  Each time the 
mouse down event is fired, all selected elements will be delselected.  The mouse up event is fired, the 
element will be selected.  Thus, you will see the element selected and then delselected when you double 
clicked on that element.
I believe the behavior of the events were changed to make this no longer a bug.
 If it's still a bug, please rebug it, but I don't see it anymore.
Actually, I just minimized this problem when I was in LANL.  I added an
attribute to record down the last mouse click event.  I think we can close this
bug if we satisfied the current changed.


(In reply to comment #1)
&gt; I believe the behavior of the events were changed to make this no longer a bug.
&gt;  If it's still a bug, please rebug it, but I don't see it anymore.</WithStack>
    <WithOutStack>When double click on an element, this element will be drew black rectangle.  The problem is that it will fire 
other mouse events before you got the double click event.  For example, Down -&gt; Up -&gt; Down -&gt; Double 
Click -&gt; Up.  When you double click on the element, you will get the above events fired.  Each time the 
mouse down event is fired, all selected elements will be delselected.  The mouse up event is fired, the 
element will be selected.  Thus, you will see the element selected and then delselected when you double 
clicked on that element.
I believe the behavior of the events were changed to make this no longer a bug.
 If it's still a bug, please rebug it, but I don't see it anymore.
Actually, I just minimized this problem when I was in LANL.  I added an
attribute to record down the last mouse click event.  I think we can close this
bug if we satisfied the current changed.


(In reply to comment #1)
&gt; I believe the behavior of the events were changed to make this no longer a bug.
&gt;  If it's still a bug, please rebug it, but I don't see it anymore.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106243" />
    <CreationDate amount="2005-08-05 16:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>clear detail formatter cache when 'max detail length' pref changes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The Java detail formatters for arrays use the 'max detail length' user pref to 
optimize toString/details generation for arrays. Compiled expressions may be 
cached with an old value of the pref, and should be cleared each time the 
preference changes.
The preference is currently an internal preference defined by the debug 
platform, and should be made public for other debuggers. 
Fixed.

Changes to:

debug.ui:
DebugUIPreferenceInitializer
IInternalDebugUIConstants
ExpressionInformationControl
MaxDetailsLengthDialog
VariablesView
IDebugUIConstants

jdt.debug.ui:
JavaDetailsFormatterManager
DisplayAction
Please verify, Kevin.
verified</WithStack>
    <WithOutStack>The Java detail formatters for arrays use the 'max detail length' user pref to 
optimize toString/details generation for arrays. Compiled expressions may be 
cached with an old value of the pref, and should be cleared each time the 
preference changes.
The preference is currently an internal preference defined by the debug 
platform, and should be made public for other debuggers. 
Fixed.

Changes to:

debug.ui:
DebugUIPreferenceInitializer
IInternalDebugUIConstants
ExpressionInformationControl
MaxDetailsLengthDialog
VariablesView
IDebugUIConstants

jdt.debug.ui:
JavaDetailsFormatterManager
DisplayAction
Please verify, Kevin.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106244" />
    <CreationDate amount="2005-08-05 16:30:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>TVT 3.1 - TCT 498 - Error messages with Standard Make Project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>OS : RHEL 4.0
Must fix: YES
Build date: 25 Jul 2005
Blocking: NO
Language: FRA
Tester Name: Marjorie Neiner

Problem Description:

First problem:
Create a new Standard Make C project with the name "test"
Rename it to a very long name.
A message indicating that the name change failed appears and is
partially in english: Could not move
See screenshot 20.008090a_fr.jpg

Second problem:
Create a new Standard Make C project with a name with more than 245 characters
An error message appears indicating that the project cannot be created
and is partially in english: Could not create folder
See screenshot 20.008090b.jpg

Thank you
Marjorie
Created attachment 25786
screenshot
Created attachment 25787
screenshot</WithStack>
    <WithOutStack>OS : RHEL 4.0
Must fix: YES
Build date: 25 Jul 2005
Blocking: NO
Language: FRA
Tester Name: Marjorie Neiner

Problem Description:

First problem:
Create a new Standard Make C project with the name "test"
Rename it to a very long name.
A message indicating that the name change failed appears and is
partially in english: Could not move
See screenshot 20.008090a_fr.jpg

Second problem:
Create a new Standard Make C project with a name with more than 245 characters
An error message appears indicating that the project cannot be created
and is partially in english: Could not create folder
See screenshot 20.008090b.jpg

Thank you
Marjorie
Created attachment 25786
screenshot
Created attachment 25787
screenshot</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106245" />
    <CreationDate amount="2005-08-05 16:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.Agents.Recorder" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>(Test) Firefox with proxy server error when check 'use same proxy for all protocols' box</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>When using firefox and a Proxy server, and you configure Firefox by 
checking "use same proxy for all protocols", ssl connections do not work.
Set milestone to 4.1 i1. 
This has been fixed.  Set configuration correctly.
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithStack>
    <WithOutStack>When using firefox and a Proxy server, and you configure Firefox by 
checking "use same proxy for all protocols", ssl connections do not work.
Set milestone to 4.1 i1. 
This has been fixed.  Set configuration correctly.
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106246" />
    <CreationDate amount="2005-08-05 16:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Don't catch and discard Exception</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="407" end="468" />
        <code>PlatformConfiguration.startup(installURL, configLocation);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="469" end="676" />
        <code>} catch (Exception e) {
			if (platformTracker != null) {
				String message = e.getMessage();
				if (message == null)
					message = ""; //$NON-NLS-1$
				Utils.log(Utils.newStatus(message, e));
			}
		}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I just spent some time trying to track down a startup bug. It turned out to be a
problem in the Path class, but the code below in
ConfigurationActivator#getPlatformConfiguration really threw me off by
swallowing the original exception.  Of course, catching Exception is bad, but
catching Exception and not logging is worse. Please consider at least logging
here, even when platformTracker is null.

		try {
			PlatformConfiguration.startup(installURL, configLocation);
		} catch (Exception e) {
			if (platformTracker != null) {
				String message = e.getMessage();
				if (message == null)
					message = ""; //$NON-NLS-1$
				Utils.log(Utils.newStatus(message, e));
			}
		}
This is a mass update of Platform Update bugs that have had no activity in three years. Platform Update was replaced in Eclipse 3.4 (2008) by a new provisioning system called Equinox p2. If this bug or enhancement is not already addressed in p2 please enter a new bug report against p2 (RT &gt; Equinox &gt; p2). If you still want to see this bug addressed in the deprecated Platform Update component, please reopen this bug. Patches welcome.</WithStack>
    <WithOutStack>I just spent some time trying to track down a startup bug. It turned out to be a
problem in the Path class, but the code below in
ConfigurationActivator#getPlatformConfiguration really threw me off by
swallowing the original exception.  Of course, catching Exception is bad, but
catching Exception and not logging is worse. Please consider at least logging
here, even when platformTracker is null.

		try {
			PlatformConfiguration.startup(installURL, configLocation);
		} catch (Exception e) {
			if (platformTracker != null) {
				String message = e.getMessage();
				if (message == null)
					message = ""; //$NON-NLS-1$
				Utils.log(Utils.newStatus(message, e));
			}
		}
This is a mass update of Platform Update bugs that have had no activity in three years. Platform Update was replaced in Eclipse 3.4 (2008) by a new provisioning system called Equinox p2. If this bug or enhancement is not already addressed in p2 please enter a new bug report against p2 (RT &gt; Equinox &gt; p2). If you still want to see this bug addressed in the deprecated Platform Update component, please reopen this bug. Patches welcome.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106247" />
    <CreationDate amount="2005-08-05 17:31:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Build" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Eclpse Distro Path</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The new 1.0.1 Release has the wrong path in the distribution files.  Currently
all files start with:
birt-report-framework-1_0_1\eclipse\plugins\org.eclipse....
In the past, and by convention the files should be zipped up with:
eclipse\plugins\org.eclipse....

This is more of a nuisance, but it will require a re-write of all of the build
instructions.  And then a second re-write when this gets fixed next build.
Now the files in birt-report-framework-1_0_1 are zipped up with the stucture: 
eclipse\plugins\org.eclipse.... 
*** Bug 106291 has been marked as a duplicate of this bug. ***
Close.</WithStack>
    <WithOutStack>The new 1.0.1 Release has the wrong path in the distribution files.  Currently
all files start with:
birt-report-framework-1_0_1\eclipse\plugins\org.eclipse....
In the past, and by convention the files should be zipped up with:
eclipse\plugins\org.eclipse....

This is more of a nuisance, but it will require a re-write of all of the build
instructions.  And then a second re-write when this gets fixed next build.
Now the files in birt-report-framework-1_0_1 are zipped up with the stucture: 
eclipse\plugins\org.eclipse.... 
*** Bug 106291 has been marked as a duplicate of this bug. ***
Close.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106248" />
    <CreationDate amount="2005-08-05 17:57:00 -0400" />
    <DupId amount="97552" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Background color is messed by Advanced graphics features</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) run/debug a runtime workbench with the modified logic editor.</Line>
          <Line>2) create a logic diagram with four-bit adder</Line>
          <Line>3) in the outline view, switch to thumbnail page.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If you turn on and off anti-aliasing flag, the background color will be messed 
up. Some time, it uses a wrong color if you change the background color in 
your program. If you add a line to always set the background color in 
CheckFill, that will fix the problem. So it should be somewhere the state in 
SWTGraphics is out of sync.
Please provide a test case snippet.
Created attachment 27152
background color problem with advanced graphics
Created attachment 27153
root edit part using LogicPrintableLayer
Created attachment 27154
turn on antialias
Created attachment 27155
LogicEditor using LogicRootEditPart
You can use logic editor as an example. Just modify the editor to use 
LogicRootEditPart and LogicPrintableLayer attached. They only turn antialias, 
nothing else.

You will see the background color of some area in the outline view is no 
longer white.

A similar same problem could happen in the editor as well.
I tried turning on anti-aliasing for the printable layered pane and I didn't 
see any painting problems.

Try creating a standalone test case that shows the problem.
I am not sure if you looked at the screen shot. The simple changes to the 
sample program logic editor from you guys can reproduce the problem fair 
easily in all the machines we have.

Why do you insist a standalone test case? If the bug is complicated one and 
you tool is targeting at eclipse environment, I can see the point.
I have imported the three files and I still don't see any problems.
Here are the steps I use
1) run/debug a runtime workbench with the modified logic editor.
2) create a logic diagram with four-bit adder
3) in the outline view, switch to thumbnail page.

If you still cannot see the problem, resize the editor to smaller sizes and 
use the thumbnail to change the viewport.

Thanks for investigating the problem. 

Now I see the problem.
This must be a duplicate of some bug that was fixed in SWT 3.1.1.
The problem is resolved by changing SWT to 3.1.1.
Pretty sure we fixed this for 3.1.1.  SSQ to verify.


*** This bug has been marked as a duplicate of 97552 ***</WithStack>
    <WithOutStack>If you turn on and off anti-aliasing flag, the background color will be messed 
up. Some time, it uses a wrong color if you change the background color in 
your program. If you add a line to always set the background color in 
CheckFill, that will fix the problem. So it should be somewhere the state in 
SWTGraphics is out of sync.
Please provide a test case snippet.
Created attachment 27152
background color problem with advanced graphics
Created attachment 27153
root edit part using LogicPrintableLayer
Created attachment 27154
turn on antialias
Created attachment 27155
LogicEditor using LogicRootEditPart
You can use logic editor as an example. Just modify the editor to use 
LogicRootEditPart and LogicPrintableLayer attached. They only turn antialias, 
nothing else.

You will see the background color of some area in the outline view is no 
longer white.

A similar same problem could happen in the editor as well.
I tried turning on anti-aliasing for the printable layered pane and I didn't 
see any painting problems.

Try creating a standalone test case that shows the problem.
I am not sure if you looked at the screen shot. The simple changes to the 
sample program logic editor from you guys can reproduce the problem fair 
easily in all the machines we have.

Why do you insist a standalone test case? If the bug is complicated one and 
you tool is targeting at eclipse environment, I can see the point.
I have imported the three files and I still don't see any problems.
Here are the steps I use
1) run/debug a runtime workbench with the modified logic editor.
2) create a logic diagram with four-bit adder
3) in the outline view, switch to thumbnail page.

If you still cannot see the problem, resize the editor to smaller sizes and 
use the thumbnail to change the viewport.

Thanks for investigating the problem. 

Now I see the problem.
This must be a duplicate of some bug that was fixed in SWT 3.1.1.
The problem is resolved by changing SWT to 3.1.1.
Pretty sure we fixed this for 3.1.1.  SSQ to verify.


*** This bug has been marked as a duplicate of 97552 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106249" />
    <CreationDate amount="2005-08-05 18:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="Draw2d [GEF 3.x / Zest 1.x]" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Text] Selected text is not shown right with antialiasing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>TextFlow and related doesn't work for the selected text if antialiasing is on.
I don't see how this is critical since you can simply avoid calling 
setTextAntialias(int).
If its parent turns the advanced graphics on, there is no way to turn it off 
from draw2d API
Right, so the parent should avoid turning it on. Or, it should turn it on 
temporarily and turn it off using Graphics.restoreState().
Sorry, "Right" meaning if the parent turns it on, the child can not turn it off.

"Wrong" that there is no API to turn off advanced graphics. Popping or 
restoring the graphics state will restore the non-advanced mode.
You are right you can pop or restore the state. However, this will rely on the 
code other than the current figure which push the state. The code will be very 
hard to maintain. It is similar to a function that depends on the current call 
stack. If it is called from some callers, it works. but not for others.

SWT have API that can explicitly switch graphics system.</WithStack>
    <WithOutStack>TextFlow and related doesn't work for the selected text if antialiasing is on.
I don't see how this is critical since you can simply avoid calling 
setTextAntialias(int).
If its parent turns the advanced graphics on, there is no way to turn it off 
from draw2d API
Right, so the parent should avoid turning it on. Or, it should turn it on 
temporarily and turn it off using Graphics.restoreState().
Sorry, "Right" meaning if the parent turns it on, the child can not turn it off.

"Wrong" that there is no API to turn off advanced graphics. Popping or 
restoring the graphics state will restore the non-advanced mode.
You are right you can pop or restore the state. However, this will rely on the 
code other than the current figure which push the state. The code will be very 
hard to maintain. It is similar to a function that depends on the current call 
stack. If it is called from some callers, it works. but not for others.

SWT have API that can explicitly switch graphics system.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106250" />
    <CreationDate amount="2005-08-05 18:11:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Data" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>POJO Data Source</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>I have a simple POJO Data Source that was working in RC1 and it no longer works
in  1.0.1.  I will attach the design in an attachment
Created attachment 25788
POJO Report Design
There is an empty stack issue in error messesage handling which blocks report 
executing.
Verified in the build 20051220
closed</WithStack>
    <WithOutStack>I have a simple POJO Data Source that was working in RC1 and it no longer works
in  1.0.1.  I will attach the design in an attachment
Created attachment 25788
POJO Report Design
There is an empty stack issue in error messesage handling which blocks report 
executing.
Verified in the build 20051220
closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106251" />
    <CreationDate amount="2005-08-05 18:16:00 -0400" />
    <DupId amount="97445" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eclipse hangs during shutdown</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="21">
        <Lines>
          <Line>- waiting on &lt;0x12dd92f8&gt; (a org.eclipse.core.runtime.internal.adaptor.S</Line>
          <Line>emaphore)</Line>
          <Line>at java.lang.Object.wait(Unknown Source)</Line>
          <Line>at org.eclipse.core.runtime.internal.adaptor.Semaphore.acquire(Semaphore</Line>
          <Line>.java:33)</Line>
          <Line>- locked &lt;0x12dd92f8&gt; (a org.eclipse.core.runtime.internal.adaptor.Semap</Line>
          <Line>hore)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.stopSystemBundle(Ecli</Line>
          <Line>pseStarter.java:1100)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.shutdown(EclipseStart</Line>
          <Line>er.java:403)</Line>
          <Line>at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja</Line>
          <Line>va:179)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Line>
          <Line>at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Line>
          <Line>at java.lang.reflect.Method.invoke(Unknown Source)</Line>
          <Line>at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Line>
          <Line>at org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Line>
          <Line>at org.eclipse.core.launcher.Main.run(Main.java:973)</Line>
          <Line>at org.eclipse.core.launcher.Main.main(Main.java:948)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When i started eclipse the "Initializing Java Tooling..." task would not
complete.  I tried to shut eclipse down but the process hung around.  The thread
dump is quite confusing.  It shows Worker-8 being stuck in HashMap.get (i
captured two traces and they were the same), but there is no synchronization. 
CPU usage was normal, so it wasn't in an infinite loop.  Worker-8 is the only
runnable thread left...

The only interesting thing in the log is this:
While loading class
"org.tigris.subversion.subclipse.ui.console.ConsoleDocument$ConsoleLine", thread
"main" timed out waiting (5000ms) for thread "Worker-2" to finish starting
bundle "org.tigris.subversion.subclipse.ui". To avoid deadlock, thread "main" is
proceeding but
"org.tigris.subversion.subclipse.ui.console.ConsoleDocument$ConsoleLine" may not
be fully initialized.

Here is the thread dump.

Full thread dump Java HotSpot(TM) Client VM (1.5.0_04-b05 mixed mode):

"System Bundle Shutdown" prio=7 tid=0x189be878 nid=0x544 waiting on condition [0
x1815f000..0x1815fd68]
        at java.lang.Thread.sleep(Native Method)
        at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:683)
        at org.eclipse.jdt.internal.core.JavaModelManager.shutdown(JavaModelMana
ger.java:2554)
        at org.eclipse.jdt.core.JavaCore.stop(JavaCore.java:4098)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl$3.run(Bund
leContextImpl.java:1035)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop(Bundl
eContextImpl.java:1031)
        at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(Bundle
Host.java:402)
        at org.eclipse.osgi.framework.internal.core.AbstractBundle.stop(Abstract
Bundle.java:410)
        at org.eclipse.core.runtime.internal.adaptor.BundleStopper.basicStopBund
les(BundleStopper.java:83)
        at org.eclipse.core.runtime.internal.adaptor.BundleStopper.stopBundles(B
undleStopper.java:73)
        at org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStopping(Ecl
ipseAdaptor.java:757)
        at org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework
.java:528)
        - locked &lt;0x07b786e0&gt; (a org.eclipse.osgi.framework.internal.core.Framew
ork)
        at org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBun
dle.java:171)
        at java.lang.Thread.run(Unknown Source)

"Worker-8" prio=5 tid=0x176b6b40 nid=0x618 runnable [0x184df000..0x184dfbe8]
        at java.util.HashMap.get(Unknown Source)
        at org.eclipse.pde.internal.core.PDEClasspathContainer.getDiscouragedRul
e(PDEClasspathContainer.java:126)
        at org.eclipse.pde.internal.core.PDEClasspathContainer.getAccessRules(PD
EClasspathContainer.java:110)
        at org.eclipse.pde.internal.core.PDEClasspathContainer.addLibraryEntry(P
DEClasspathContainer.java:95)
        at org.eclipse.pde.internal.core.PDEClasspathContainer.addExternalPlugin
(PDEClasspathContainer.java:67)
        at org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.addPl
ugin(RequiredPluginsClasspathContainer.java:239)
        at org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.addDe
pendency(RequiredPluginsClasspathContainer.java:211)
        at org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.addDe
pendency(RequiredPluginsClasspathContainer.java:224)
        at org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.compu
tePluginEntries(RequiredPluginsClasspathContainer.java:130)
        at org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.getCl
asspathEntries(RequiredPluginsClasspathContainer.java:99)
        at org.eclipse.jdt.internal.core.JavaModelManager.containerPutIfInitiali
zingWithSameEntries(JavaModelManager.java:297)
        at org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:385
5)
        at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer(Mod
elEntry.java:110)
        at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize(R
equiredPluginsInitializer.java:40)
        at org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(Ja
vaModelManager.java:1591)
        at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(
JavaModelManager.java:1040)
        at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:132
6)
        at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaPr
oject.java:2039)
        at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaPr
oject.java:1947)
        at org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaSearchSc
ope.java:108)
        at org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.initialize(Ja
vaWorkspaceScope.java:84)
        at org.eclipse.jdt.internal.core.search.JavaSearchScope.&lt;init&gt;(JavaSearc
hScope.java:62)
        at org.eclipse.jdt.internal.core.search.JavaSearchScope.&lt;init&gt;(JavaSearc
hScope.java:58)
        at org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.&lt;init&gt;(JavaWo
rkspaceScope.java:29)
        at org.eclipse.jdt.internal.core.JavaModelManager.getWorkspaceScope(Java
ModelManager.java:1421)
        at org.eclipse.jdt.internal.core.search.BasicSearchEngine.createWorkspac
eScope(BasicSearchEngine.java:157)
        at org.eclipse.jdt.core.search.SearchEngine.createWorkspaceScope(SearchE
ngine.java:392)
        at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:2623)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)

"Worker-7" prio=5 tid=0x16ed04d8 nid=0x328 in Object.wait() [0x1849f000..0x1849f
c68]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-6" prio=5 tid=0x16dbaf88 nid=0x610 in Object.wait() [0x1845f000..0x1845f
ce8]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-5" prio=5 tid=0x16e191f8 nid=0x31c in Object.wait() [0x1841f000..0x1841f
d68]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-4" prio=5 tid=0x16e16800 nid=0x5c0 in Object.wait() [0x183df000..0x183df
9e8]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-3" prio=5 tid=0x16dea280 nid=0x5c4 in Object.wait() [0x1839f000..0x1839f
a68]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-2" prio=5 tid=0x16dc08f0 nid=0x5cc in Object.wait() [0x1835f000..0x1835f
ae8]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-1" prio=5 tid=0x16dc0290 nid=0x5e0 in Object.wait() [0x1831f000..0x1831f
b68]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-0" prio=5 tid=0x16f6a108 nid=0x1d0 in Object.wait() [0x17fef000..0x17fef
d68]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Start Level Event Dispatcher" daemon prio=5 tid=0x170fd8f0 nid=0x3b0 in Object.
wait() [0x1746f000..0x1746f9e8]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Unknown Source)
        at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.getNextE
vent(EventManager.java:349)
        - locked &lt;0x07e92908&gt; (a org.eclipse.osgi.framework.eventmgr.EventManage
r$EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(Even
tManager.java:287)

"Framework Event Dispatcher" daemon prio=5 tid=0x170f5060 nid=0x384 in Object.wa
it() [0x1742f000..0x1742fa68]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Unknown Source)
        at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.getNextE
vent(EventManager.java:349)
        - locked &lt;0x07b7aab8&gt; (a org.eclipse.osgi.framework.eventmgr.EventManage
r$EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(Even
tManager.java:287)

"State Data Manager" daemon prio=5 tid=0x170e5b28 nid=0x380 waiting on condition
 [0x173ef000..0x173efae8]
        at java.lang.Thread.sleep(Native Method)
        at org.eclipse.osgi.framework.adaptor.core.StateManager.run(StateManager
.java:289)
        at java.lang.Thread.run(Unknown Source)

"Low Memory Detector" daemon prio=5 tid=0x00abff50 nid=0x2a8 runnable [0x0000000
0..0x00000000]

"CompilerThread0" daemon prio=10 tid=0x00aa4c38 nid=0x6ec waiting on condition [
0x00000000..0x16cef94c]

"Signal Dispatcher" daemon prio=10 tid=0x00aa3ed8 nid=0x16c waiting on condition
 [0x00000000..0x00000000]

"Finalizer" daemon prio=9 tid=0x00a9b258 nid=0x164 in Object.wait() [0x16c6f000.
.0x16c6fd68]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        - locked &lt;0x074628a8&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        at java.lang.ref.Finalizer$FinalizerThread.run(Unknown Source)

"Reference Handler" daemon prio=10 tid=0x00a99dc8 nid=0x260 in Object.wait() [0x
16c2f000..0x16c2f9e8]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Unknown Source)
        at java.lang.ref.Reference$ReferenceHandler.run(Unknown Source)
        - locked &lt;0x082c18b0&gt; (a java.lang.ref.Reference$Lock)

"main" prio=7 tid=0x00036648 nid=0x268 in Object.wait() [0x0007f000..0x0007fc40]

        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x12dd92f8&gt; (a org.eclipse.core.runtime.internal.adaptor.S
emaphore)
        at java.lang.Object.wait(Unknown Source)
        at org.eclipse.core.runtime.internal.adaptor.Semaphore.acquire(Semaphore
.java:33)
        - locked &lt;0x12dd92f8&gt; (a org.eclipse.core.runtime.internal.adaptor.Semap
hore)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.stopSystemBundle(Ecli
pseStarter.java:1100)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.shutdown(EclipseStart
er.java:403)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja
va:179)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
        at org.eclipse.core.launcher.Main.run(Main.java:973)
        at org.eclipse.core.launcher.Main.main(Main.java:948)

"VM Thread" prio=10 tid=0x00a95cd0 nid=0x280 runnable

"GC task thread#0 (ParallelGC)" prio=5 tid=0x00a7bae8 nid=0x118 runnable

"GC task thread#1 (ParallelGC)" prio=5 tid=0x00a7c500 nid=0x108 runnable

"VM Periodic Task Thread" prio=10 tid=0x00ac1938 nid=0x310 waiting on condition
Any ideas John?
PDE classpath initialization is where it is hanging. Brock, what do you mean by
"CPU usage was normal", was Eclipse/java using any CPU as shown by task manager
while it was hung? If you still have the second trace, it would be useful to
attach it here.  It would be interesting to see if all the line numbers in the
stack are the same.

One possibility is that the HashMap became corrupt due to multiple concurrent
reads and/or writes.  I have seen cases where multiple threads are doing
classpath init during startup, and I don't see any protection around access to
this map.
Sorry, I don't have the second trace anymore.  They looked the same so i got rid
of it.  Eclipse was still responsive and i couldn't hear the fans kick in, so i
assumed that that worker thread was locked.  I didn't check the CPU monitor so i
could be wrong.

I left it running for a few minutes, so i don't think it was ever going to finish.

If you can't see anything obvious i am willing to close this one as a JVM problem.


*** This bug has been marked as a duplicate of 97445 ***</WithStack>
    <WithOutStack>When i started eclipse the "Initializing Java Tooling..." task would not
complete.  I tried to shut eclipse down but the process hung around.  The thread
dump is quite confusing.  It shows Worker-8 being stuck in HashMap.get (i
captured two traces and they were the same), but there is no synchronization. 
CPU usage was normal, so it wasn't in an infinite loop.  Worker-8 is the only
runnable thread left...

The only interesting thing in the log is this:
While loading class
"org.tigris.subversion.subclipse.ui.console.ConsoleDocument$ConsoleLine", thread
"main" timed out waiting (5000ms) for thread "Worker-2" to finish starting
bundle "org.tigris.subversion.subclipse.ui". To avoid deadlock, thread "main" is
proceeding but
"org.tigris.subversion.subclipse.ui.console.ConsoleDocument$ConsoleLine" may not
be fully initialized.

Here is the thread dump.

Full thread dump Java HotSpot(TM) Client VM (1.5.0_04-b05 mixed mode):

"System Bundle Shutdown" prio=7 tid=0x189be878 nid=0x544 waiting on condition [0
x1815f000..0x1815fd68]
        at java.lang.Thread.sleep(Native Method)
        at org.eclipse.core.internal.jobs.JobManager.join(JobManager.java:683)
        at org.eclipse.jdt.internal.core.JavaModelManager.shutdown(JavaModelMana
ger.java:2554)
        at org.eclipse.jdt.core.JavaCore.stop(JavaCore.java:4098)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl$3.run(Bund
leContextImpl.java:1035)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.eclipse.osgi.framework.internal.core.BundleContextImpl.stop(Bundl
eContextImpl.java:1031)
        at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(Bundle
Host.java:402)
        at org.eclipse.osgi.framework.internal.core.AbstractBundle.stop(Abstract
Bundle.java:410)
        at org.eclipse.core.runtime.internal.adaptor.BundleStopper.basicStopBund
les(BundleStopper.java:83)
        at org.eclipse.core.runtime.internal.adaptor.BundleStopper.stopBundles(B
undleStopper.java:73)
        at org.eclipse.core.runtime.adaptor.EclipseAdaptor.frameworkStopping(Ecl
ipseAdaptor.java:757)
        at org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework
.java:528)
        - locked &lt;0x07b786e0&gt; (a org.eclipse.osgi.framework.internal.core.Framew
ork)
        at org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBun
dle.java:171)
        at java.lang.Thread.run(Unknown Source)

"Worker-8" prio=5 tid=0x176b6b40 nid=0x618 runnable [0x184df000..0x184dfbe8]
        at java.util.HashMap.get(Unknown Source)
        at org.eclipse.pde.internal.core.PDEClasspathContainer.getDiscouragedRul
e(PDEClasspathContainer.java:126)
        at org.eclipse.pde.internal.core.PDEClasspathContainer.getAccessRules(PD
EClasspathContainer.java:110)
        at org.eclipse.pde.internal.core.PDEClasspathContainer.addLibraryEntry(P
DEClasspathContainer.java:95)
        at org.eclipse.pde.internal.core.PDEClasspathContainer.addExternalPlugin
(PDEClasspathContainer.java:67)
        at org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.addPl
ugin(RequiredPluginsClasspathContainer.java:239)
        at org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.addDe
pendency(RequiredPluginsClasspathContainer.java:211)
        at org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.addDe
pendency(RequiredPluginsClasspathContainer.java:224)
        at org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.compu
tePluginEntries(RequiredPluginsClasspathContainer.java:130)
        at org.eclipse.pde.internal.core.RequiredPluginsClasspathContainer.getCl
asspathEntries(RequiredPluginsClasspathContainer.java:99)
        at org.eclipse.jdt.internal.core.JavaModelManager.containerPutIfInitiali
zingWithSameEntries(JavaModelManager.java:297)
        at org.eclipse.jdt.core.JavaCore.setClasspathContainer(JavaCore.java:385
5)
        at org.eclipse.pde.internal.core.ModelEntry.updateClasspathContainer(Mod
elEntry.java:110)
        at org.eclipse.pde.internal.core.RequiredPluginsInitializer.initialize(R
equiredPluginsInitializer.java:40)
        at org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(Ja
vaModelManager.java:1591)
        at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(
JavaModelManager.java:1040)
        at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:132
6)
        at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaPr
oject.java:2039)
        at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaPr
oject.java:1947)
        at org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaSearchSc
ope.java:108)
        at org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.initialize(Ja
vaWorkspaceScope.java:84)
        at org.eclipse.jdt.internal.core.search.JavaSearchScope.&lt;init&gt;(JavaSearc
hScope.java:62)
        at org.eclipse.jdt.internal.core.search.JavaSearchScope.&lt;init&gt;(JavaSearc
hScope.java:58)
        at org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.&lt;init&gt;(JavaWo
rkspaceScope.java:29)
        at org.eclipse.jdt.internal.core.JavaModelManager.getWorkspaceScope(Java
ModelManager.java:1421)
        at org.eclipse.jdt.internal.core.search.BasicSearchEngine.createWorkspac
eScope(BasicSearchEngine.java:157)
        at org.eclipse.jdt.core.search.SearchEngine.createWorkspaceScope(SearchE
ngine.java:392)
        at org.eclipse.jdt.core.JavaCore$1.run(JavaCore.java:2623)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)

"Worker-7" prio=5 tid=0x16ed04d8 nid=0x328 in Object.wait() [0x1849f000..0x1849f
c68]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-6" prio=5 tid=0x16dbaf88 nid=0x610 in Object.wait() [0x1845f000..0x1845f
ce8]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-5" prio=5 tid=0x16e191f8 nid=0x31c in Object.wait() [0x1841f000..0x1841f
d68]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-4" prio=5 tid=0x16e16800 nid=0x5c0 in Object.wait() [0x183df000..0x183df
9e8]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-3" prio=5 tid=0x16dea280 nid=0x5c4 in Object.wait() [0x1839f000..0x1839f
a68]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-2" prio=5 tid=0x16dc08f0 nid=0x5cc in Object.wait() [0x1835f000..0x1835f
ae8]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-1" prio=5 tid=0x16dc0290 nid=0x5e0 in Object.wait() [0x1831f000..0x1831f
b68]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Worker-0" prio=5 tid=0x16f6a108 nid=0x1d0 in Object.wait() [0x17fef000..0x17fef
d68]
        at java.lang.Object.wait(Native Method)
        at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:173)
        - locked &lt;0x07b601f8&gt; (a org.eclipse.core.internal.jobs.WorkerPool)
        at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:20
5)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:69)

"Start Level Event Dispatcher" daemon prio=5 tid=0x170fd8f0 nid=0x3b0 in Object.
wait() [0x1746f000..0x1746f9e8]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Unknown Source)
        at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.getNextE
vent(EventManager.java:349)
        - locked &lt;0x07e92908&gt; (a org.eclipse.osgi.framework.eventmgr.EventManage
r$EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(Even
tManager.java:287)

"Framework Event Dispatcher" daemon prio=5 tid=0x170f5060 nid=0x384 in Object.wa
it() [0x1742f000..0x1742fa68]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Unknown Source)
        at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.getNextE
vent(EventManager.java:349)
        - locked &lt;0x07b7aab8&gt; (a org.eclipse.osgi.framework.eventmgr.EventManage
r$EventThread)
        at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(Even
tManager.java:287)

"State Data Manager" daemon prio=5 tid=0x170e5b28 nid=0x380 waiting on condition
 [0x173ef000..0x173efae8]
        at java.lang.Thread.sleep(Native Method)
        at org.eclipse.osgi.framework.adaptor.core.StateManager.run(StateManager
.java:289)
        at java.lang.Thread.run(Unknown Source)

"Low Memory Detector" daemon prio=5 tid=0x00abff50 nid=0x2a8 runnable [0x0000000
0..0x00000000]

"CompilerThread0" daemon prio=10 tid=0x00aa4c38 nid=0x6ec waiting on condition [
0x00000000..0x16cef94c]

"Signal Dispatcher" daemon prio=10 tid=0x00aa3ed8 nid=0x16c waiting on condition
 [0x00000000..0x00000000]

"Finalizer" daemon prio=9 tid=0x00a9b258 nid=0x164 in Object.wait() [0x16c6f000.
.0x16c6fd68]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        - locked &lt;0x074628a8&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(Unknown Source)
        at java.lang.ref.Finalizer$FinalizerThread.run(Unknown Source)

"Reference Handler" daemon prio=10 tid=0x00a99dc8 nid=0x260 in Object.wait() [0x
16c2f000..0x16c2f9e8]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Unknown Source)
        at java.lang.ref.Reference$ReferenceHandler.run(Unknown Source)
        - locked &lt;0x082c18b0&gt; (a java.lang.ref.Reference$Lock)

"main" prio=7 tid=0x00036648 nid=0x268 in Object.wait() [0x0007f000..0x0007fc40]

        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x12dd92f8&gt; (a org.eclipse.core.runtime.internal.adaptor.S
emaphore)
        at java.lang.Object.wait(Unknown Source)
        at org.eclipse.core.runtime.internal.adaptor.Semaphore.acquire(Semaphore
.java:33)
        - locked &lt;0x12dd92f8&gt; (a org.eclipse.core.runtime.internal.adaptor.Semap
hore)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.stopSystemBundle(Ecli
pseStarter.java:1100)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.shutdown(EclipseStart
er.java:403)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja
va:179)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
        at org.eclipse.core.launcher.Main.run(Main.java:973)
        at org.eclipse.core.launcher.Main.main(Main.java:948)

"VM Thread" prio=10 tid=0x00a95cd0 nid=0x280 runnable

"GC task thread#0 (ParallelGC)" prio=5 tid=0x00a7bae8 nid=0x118 runnable

"GC task thread#1 (ParallelGC)" prio=5 tid=0x00a7c500 nid=0x108 runnable

"VM Periodic Task Thread" prio=10 tid=0x00ac1938 nid=0x310 waiting on condition
Any ideas John?
PDE classpath initialization is where it is hanging. Brock, what do you mean by
"CPU usage was normal", was Eclipse/java using any CPU as shown by task manager
while it was hung? If you still have the second trace, it would be useful to
attach it here.  It would be interesting to see if all the line numbers in the
stack are the same.

One possibility is that the HashMap became corrupt due to multiple concurrent
reads and/or writes.  I have seen cases where multiple threads are doing
classpath init during startup, and I don't see any protection around access to
this map.
Sorry, I don't have the second trace anymore.  They looked the same so i got rid
of it.  Eclipse was still responsive and i couldn't hear the fans kick in, so i
assumed that that worker thread was locked.  I didn't check the CPU monitor so i
could be wrong.

I left it running for a few minutes, so i don't think it was ever going to finish.

If you can't see anything obvious i am willing to close this one as a JVM problem.


*** This bug has been marked as a duplicate of 97445 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106252" />
    <CreationDate amount="2005-08-05 18:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="MDT.XSD" />
    <component amount="Core" />
    <Version amount="2.1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Problem With Removing Default Namespace Reference From qNamePrefixToNamespaceMap</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="1059" end="1101" />
        <code>Object result = super.remove(key);</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="1102" end="1575" />
        <code>if (!isReconciling)
        {
          if (result != null)
          {
            if (key == null)
            {
              key = "xmlns";
            }
            Element theElement = getElement();
            if (theElement != null &amp;&amp;
                  theElement.hasAttributeNS(XSDConstants.XMLNS_URI_2000,
(String)key))
            {
              theElement.removeAttributeNS(XSDConstants.XMLNS_URI_2000,
(String)key);
            }
          }
        }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>If you "put" an entry (reference) in XSDSchema's qNamePrefixToNamespaceMap for
the default namespace (null-valued key), it gets properly added to the
underlying DOM elements (as an attribute of the XSDSchema element). However, if
you remove the null-valued key from this map, the default namespace
reference/attribute of the XSDSchema DOM element does not get removed.
Adding/removing/modifying values for non-null keys functions correctly.

Calling "updateElement()" on the XSDSchema does not fix the problem.

I'm attaching a zip file that contains a very simple test case that can
reproduce this defect. The testDefaultNamespaceDeclarationRemoval method in the
TestCustomerXmlSchemas test class addresses this issue.
Created attachment 25789
Unit test + environment

Unzip the archive and run the testDefaultNamespaceDeclarationRemoval method in
the  TestCustomerXmlSchemas class.
Scott,

I've fixed the problem by adding the key == null test to the derived map impl
used to implement the QName prefix map:

      public Object remove(Object key) 
      {
        Object result = super.remove(key);
        if (!isReconciling)
        {
          if (result != null)
          {
            if (key == null)
            {
              key = "xmlns";
            }
            Element theElement = getElement();
            if (theElement != null &amp;&amp;
                  theElement.hasAttributeNS(XSDConstants.XMLNS_URI_2000,
(String)key))
            {
              theElement.removeAttributeNS(XSDConstants.XMLNS_URI_2000,
(String)key);
            }
          }
        }
        return result;
      }

Note that your assertion still fails because a missing attribute will return ""
not null.
Fixed in 2.2.0 I200508251028
Move to verified as per bug 206558.
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>If you "put" an entry (reference) in XSDSchema's qNamePrefixToNamespaceMap for
the default namespace (null-valued key), it gets properly added to the
underlying DOM elements (as an attribute of the XSDSchema element). However, if
you remove the null-valued key from this map, the default namespace
reference/attribute of the XSDSchema DOM element does not get removed.
Adding/removing/modifying values for non-null keys functions correctly.

Calling "updateElement()" on the XSDSchema does not fix the problem.

I'm attaching a zip file that contains a very simple test case that can
reproduce this defect. The testDefaultNamespaceDeclarationRemoval method in the
TestCustomerXmlSchemas test class addresses this issue.
Created attachment 25789
Unit test + environment

Unzip the archive and run the testDefaultNamespaceDeclarationRemoval method in
the  TestCustomerXmlSchemas class.
Scott,

I've fixed the problem by adding the key == null test to the derived map impl
used to implement the QName prefix map:

      public Object remove(Object key) 
      {
        Object result = super.remove(key);
        if (!isReconciling)
        {
          if (result != null)
          {
            if (key == null)
            {
              key = "xmlns";
            }
            Element theElement = getElement();
            if (theElement != null &amp;&amp;
                  theElement.hasAttributeNS(XSDConstants.XMLNS_URI_2000,
(String)key))
            {
              theElement.removeAttributeNS(XSDConstants.XMLNS_URI_2000,
(String)key);
            }
          }
        }
        return result;
      }

Note that your assertion still fails because a missing attribute will return ""
not null.
Fixed in 2.2.0 I200508251028
Move to verified as per bug 206558.
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106253" />
    <CreationDate amount="2005-08-05 18:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Log Analyzer" />
    <component amount="Platform.UI.LogView" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Recorrelation need to be performed with the updated log entries</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functiondef">
        <location start="414" end="671" />
        <code>public void handleProfileEvent(ProfileEvent event) {
		if (event.getType() == ProfileEvent.REFRESH_VIEWS)
		{
			recorrelate(event.getSource());			
	
			refresh();
		}else if (event.getType() == 
ProfileEvent.REFRESH_LOG_NAVIGATOR)
		{
			refresh();
		}
	}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="672" end="739" />
        <code>/**
	 * Recorrelate the logs if necessary
	 * @param source 
	 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="740" end="825" />
        <code>private void recorrelate(Object source) {
		// TODO Auto-generated method stub
		
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>According to defect 79522, a new 'Refresh Views' button will be added to 
contextMenu associated with the CorrelationContainerProxy object. When this 
button clicked, the log correlation need to be performed with the updated log 
entries.
Alex, per our discussion, on Refresh Views action you will need to update the 
correlation if necassary.

This is the code you need to implement in LogInteraction.java class

	public void handleProfileEvent(ProfileEvent event) {
		if (event.getType() == ProfileEvent.REFRESH_VIEWS)
		{
			recorrelate(event.getSource());			
	
			refresh();
		}else if (event.getType() == 
ProfileEvent.REFRESH_LOG_NAVIGATOR)
		{
			refresh();
		}
	}

	/**
	 * Recorrelate the logs if necessary
	 * @param source 
	 */
	private void recorrelate(Object source) {
		// TODO Auto-generated method stub
		
	}

Alex, this needs to be done in i1
Please let me know if you can do it in time
Fixed.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>According to defect 79522, a new 'Refresh Views' button will be added to 
contextMenu associated with the CorrelationContainerProxy object. When this 
button clicked, the log correlation need to be performed with the updated log 
entries.
Alex, per our discussion, on Refresh Views action you will need to update the 
correlation if necassary.

This is the code you need to implement in LogInteraction.java class

	public void handleProfileEvent(ProfileEvent event) {
		if (event.getType() == ProfileEvent.REFRESH_VIEWS)
		{
			recorrelate(event.getSource());			
	
			refresh();
		}else if (event.getType() == 
ProfileEvent.REFRESH_LOG_NAVIGATOR)
		{
			refresh();
		}
	}

	/**
	 * Recorrelate the logs if necessary
	 * @param source 
	 */
	private void recorrelate(Object source) {
		// TODO Auto-generated method stub
		
	}

Alex, this needs to be done in i1
Please let me know if you can do it in time
Fixed.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106254" />
    <CreationDate amount="2005-08-05 18:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Java editor ignores parenthesis even if parenthesis already deleted</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1. Define a method that takes two arguments (say foo.bar(x,y))</Line>
          <Line>2. Type "foo."</Line>
          <Line>3. Select bar from the code hint</Line>
          <Line>-&gt; foo.bar() is inserted, with insertion point inside parens</Line>
          <Line>4. Type one argument</Line>
          <Line>5. Hit END key to go to end of line</Line>
          <Line>6. Hit backspace to delete the last parenthesis</Line>
          <Line>7. Type comma and the second arugment</Line>
          <Line>8. Type the closing parenthesis</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>1. Define a method that takes two arguments (say foo.bar(x,y))
2. Type "foo."
3. Select bar from the code hint
-&gt; foo.bar() is inserted, with insertion point inside parens
4. Type one argument
5. Hit END key to go to end of line
6. Hit backspace to delete the last parenthesis
7. Type comma and the second arugment
8. Type the closing parenthesis

Result: The parenthesis isn't inserted.  You have to type the parenthesis again
to get it to be inserted.  I think what's happening is the auto-paren magic that
knows to "type over" the auto-inserted parenthesis isn't turning itself off if
you manually delete the auto-inserted paren.
We fixed some bugs in that area. Please try with I20050802-0800 and reopen if
you still see the problem there. If you reopen please attach your preferences.</WithStack>
    <WithOutStack>1. Define a method that takes two arguments (say foo.bar(x,y))
2. Type "foo."
3. Select bar from the code hint
-&gt; foo.bar() is inserted, with insertion point inside parens
4. Type one argument
5. Hit END key to go to end of line
6. Hit backspace to delete the last parenthesis
7. Type comma and the second arugment
8. Type the closing parenthesis

Result: The parenthesis isn't inserted.  You have to type the parenthesis again
to get it to be inserted.  I think what's happening is the auto-paren magic that
knows to "type over" the auto-inserted parenthesis isn't turning itself off if
you manually delete the auto-inserted paren.
We fixed some bugs in that area. Please try with I20050802-0800 and reopen if
you still see the problem there. If you reopen please attach your preferences.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106255" />
    <CreationDate amount="2005-08-05 18:59:00 -0400" />
    <DupId amount="83992" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[Markers] Compiler loses error and warning descriptions; blank lines in "Problems" view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="10">
        <Lines>
          <Line>- Eclipse 3.1.0 Build id: I20050627-1435</Line>
          <Line>- 16 projects loaded (all stored in clearcase)</Line>
          <Line>- Projects have dependencies with each others. There are also some circular</Line>
          <Line>dependencies between them.</Line>
          <Line>- using a clearcase snapshot view on the c: drive (but I've seen the problem</Line>
          <Line>using dynamic views on network drives too)</Line>
          <Line>- Compiling under 1.5 rules</Line>
          <Line>- ~35 source directories on the classpath, and maybe around 50 jars.</Line>
          <Line>- Problem view Filter set to 1000 items</Line>
          <Line>- The total # of Problems (warnings) is 25,547</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- Turn off "build automatically"</Line>
          <Line>- Clean all projects (do not start a build)</Line>
          <Line>- Update my clearcase snapshot view, thus updating some workspace source files,</Line>
          <Line>adding new ones, etc.</Line>
          <Line>- select all projects from the package explorer</Line>
          <Line>- Press F5 to refresh them</Line>
          <Line>- Turn on "build automatically".  Wait for the build to finish.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Warning: this is a real mind-bender.  I have been unable to consistently
reproduce this bug, but it happens often and is extremely annoying.  Please bear
with me:

I've got a large project here (many many thousands of files).  Occasionally,
after saving a source file or on building, my "Problems" list gets very strange
- everything is displayed properly except for the description text itself.  I've
got all the columns: but only the icons, "Resource", "In Folder" and "Location"
have anything in them.  The "Description" column is there, but there's no text.
 Anywhere.

It gets more interesting, as hovering over the problematic line in the java
editor will also NOT display the error description, which leads me to conclude
that the compiler is for whatever reason losing the description text - it's not
the "Problems" view that seems to be screwing up, as per the good old "GIGO"
principle (garbage in, garbage out).

Again, I have been unable to reproduce this in a consistent manner at this
time... HOWEVER, I have been able to SOMETIMES reproduce it by simply changing
the number of problems displayed in the view (through the filter dialog - just
changing it between 100 and 1000 and back to 100 again sometimes triggers it,
but NOT all the time).

I will make attachments showing some of this in action.  I am using Windows
2000, JDK 1.4.2, Eclipse 3.1.
Created attachment 25791
The normal "Problems" view.

I am required to blur out the text.  Sorry.  This is a normal "Problems" view
in my project, before weirdness occurs.
Created attachment 25792
After saving a file, having fixed a problem

This shows the "Problems" view after saving (CTRL-S), without taking ANY OTHER
ACTION, after correcting a problem in a source file.
Created attachment 25793
After switching the filter... the problems list becomes blank.

After swapping the filter a couple times, this is what happens.  All the
descriptions are gone.	Doing a complete clean and rebuild will NOT recover the
descriptions.  Nor will switching the filter.  At least, not consistently.
Created attachment 25794
Properties of a blank entry in the "Problems" view

Right-clicking and choosing "Properties" for an item in the "Problems" view
makes this show up.  Note that the description line in the dialog is blank. 
Hovering over the line in the source file will not bring up a tooltip any more,
either.
I apologize for the many attachments but I want to make sure this bug is not
confused with other, similar bugs.  Such similar bugs that are NOT duplicates of
this (as far as I can gather) seem to be 86329, 92771, 93488, 45381, 46604, and
101299.  This is an odd one.

Good luck, guys!  Wish I had a clue how to fix this one!
Move to Platform/UI
*** Bug 106775 has been marked as a duplicate of this bug. ***
Moving to major as this really impedes our productivity.
In our lab problem seen on both windows and linux.
(In reply to comment #8)
&gt; Moving to major as this really impedes our productivity.
&gt; In our lab problem seen on both windows and linux.

This is a stuningly painful bug and I have reverted to 3.02 so I can develop as this gets fixed. Does anyone 
have any news of a workaround?

Darin do you have a replicatale case? I'm afraid I have never seen it here.
(In reply to comment #10)
&gt; Darin do you have a replicatale case? I'm afraid I have never seen it here.

I can get this to occur by switching the number of displayed items around in my
filter, as noted in the original report - try switching back and forth between
100 and 1000 a few times, and hopefully it will crop up...
Darin are you using 2000 or XP? 

I can't replicate on XP with a workbench with about 2000 errors and warnings
using 3.1.1.

Also can you make it go away by restarting?
XP and restarting did not reliably fix the problem.
Others in our group have seen it on Linux as well.
It persists across startups, so no, it does not go away by closing and reopening.

I am experimenting with a fresh Eclipse install and a junk project to see if I
can find some way to consistently reproduce this error; so far, no luck.

I wonder if the other folks on the CC: for this thread could assist me in trying
to find some common factors...

A little more detail about my project:
* Workspace resides on local hard drive
* Project resides on Samba mount point on UNIX system
* ~100 jars on the classpath as a user library
* ~70 source directories on the classpath
* Compiling under 1.4 rules
* Project is "shared" (initially checked out from CVS using Eclipse)

I'll continue trying to replicate using a standalone project... no luck so far,
though.
We are also experiencing this problem, and I haven't found a way to consistently
reproduce it either.

Our projects are also shared, but with Clearcase.  My workspace is as follows:

- Eclipse 3.1.0 Build id: I20050627-1435
- 16 projects loaded (all stored in clearcase)
- Projects have dependencies with each others. There are also some circular
dependencies between them.
- using a clearcase snapshot view on the c: drive (but I've seen the problem
using dynamic views on network drives too)
- Compiling under 1.5 rules
- ~35 source directories on the classpath, and maybe around 50 jars.
- Problem view Filter set to 1000 items
- The total # of Problems (warnings) is 25,547

The problem seems to have more chance of happening when there are compilation
errors in the workspace. Especially when there are inter-project discrepancies.
The last time it happened to me, someone had renamed a project and somehow
eclipse had a hard time picking up the change when I used an old team project
set to import all the projects.  I fixed it by deleting all projects,
reimporting them through an updated team project set, cleaning all projects and
doing a full rebuild.

I also tried reproducing it with a few small, dummy projects, with no luck... 
I'll post an update the next time it happens to me, if I can figure out the
special conditions that make it happen...
I have just reproduced the bug in my environment described previously.

- Turn off "build automatically"
- Clean all projects (do not start a build)
- Update my clearcase snapshot view, thus updating some workspace source files,
adding new ones, etc.
- select all projects from the package explorer
- Press F5 to refresh them
- Turn on "build automatically".  Wait for the build to finish.

The build then has 3 errors (with description) about missing resources and such
(which was expected after this refresh), and 981 warnings.  975 warnings are
from the RMI plugin we're using, and they have descriptions.  6 warnings seem to
be from the eclipse compiler, and have only the icon and "Resource" columns
filled in. The other columns are blank.

Note that one particularity of this refresh is that one of the projects changed
name (new &lt;name&gt; in its .project).  Workspace refresh didn't pick that up, so it
still shows the old name in the package explorer, and that is the cause of the 
3 compilation errors.  Maybe a change to .project outside of workspace control,
followed by a workspace refresh, is a way to trigger this "no description" bug?
I've also encountered this problem...  very frustrating...  Our project
generates about 1,500 warnings.   When I use JLint for eclipse we get up to
about 4600, changing some filter settings often results in loss of descriptions. :(

Doing a Clean followed by a rebuild will get them back.  (Otherwise they stay
blank between rebuilds and IDE restarts)

I've also notice that this can happen on a smaller scale where 2 or 3 warning
descriptions are blank, not sure if this is related (perhaps eclipse is not
parsing the javac output for those vs. missplacing all the message descriptions
later).



*** This bug has been marked as a duplicate of 83992 ***</WithStack>
    <WithOutStack>Warning: this is a real mind-bender.  I have been unable to consistently
reproduce this bug, but it happens often and is extremely annoying.  Please bear
with me:

I've got a large project here (many many thousands of files).  Occasionally,
after saving a source file or on building, my "Problems" list gets very strange
- everything is displayed properly except for the description text itself.  I've
got all the columns: but only the icons, "Resource", "In Folder" and "Location"
have anything in them.  The "Description" column is there, but there's no text.
 Anywhere.

It gets more interesting, as hovering over the problematic line in the java
editor will also NOT display the error description, which leads me to conclude
that the compiler is for whatever reason losing the description text - it's not
the "Problems" view that seems to be screwing up, as per the good old "GIGO"
principle (garbage in, garbage out).

Again, I have been unable to reproduce this in a consistent manner at this
time... HOWEVER, I have been able to SOMETIMES reproduce it by simply changing
the number of problems displayed in the view (through the filter dialog - just
changing it between 100 and 1000 and back to 100 again sometimes triggers it,
but NOT all the time).

I will make attachments showing some of this in action.  I am using Windows
2000, JDK 1.4.2, Eclipse 3.1.
Created attachment 25791
The normal "Problems" view.

I am required to blur out the text.  Sorry.  This is a normal "Problems" view
in my project, before weirdness occurs.
Created attachment 25792
After saving a file, having fixed a problem

This shows the "Problems" view after saving (CTRL-S), without taking ANY OTHER
ACTION, after correcting a problem in a source file.
Created attachment 25793
After switching the filter... the problems list becomes blank.

After swapping the filter a couple times, this is what happens.  All the
descriptions are gone.	Doing a complete clean and rebuild will NOT recover the
descriptions.  Nor will switching the filter.  At least, not consistently.
Created attachment 25794
Properties of a blank entry in the "Problems" view

Right-clicking and choosing "Properties" for an item in the "Problems" view
makes this show up.  Note that the description line in the dialog is blank. 
Hovering over the line in the source file will not bring up a tooltip any more,
either.
I apologize for the many attachments but I want to make sure this bug is not
confused with other, similar bugs.  Such similar bugs that are NOT duplicates of
this (as far as I can gather) seem to be 86329, 92771, 93488, 45381, 46604, and
101299.  This is an odd one.

Good luck, guys!  Wish I had a clue how to fix this one!
Move to Platform/UI
*** Bug 106775 has been marked as a duplicate of this bug. ***
Moving to major as this really impedes our productivity.
In our lab problem seen on both windows and linux.
(In reply to comment #8)
&gt; Moving to major as this really impedes our productivity.
&gt; In our lab problem seen on both windows and linux.

This is a stuningly painful bug and I have reverted to 3.02 so I can develop as this gets fixed. Does anyone 
have any news of a workaround?

Darin do you have a replicatale case? I'm afraid I have never seen it here.
(In reply to comment #10)
&gt; Darin do you have a replicatale case? I'm afraid I have never seen it here.

I can get this to occur by switching the number of displayed items around in my
filter, as noted in the original report - try switching back and forth between
100 and 1000 a few times, and hopefully it will crop up...
Darin are you using 2000 or XP? 

I can't replicate on XP with a workbench with about 2000 errors and warnings
using 3.1.1.

Also can you make it go away by restarting?
XP and restarting did not reliably fix the problem.
Others in our group have seen it on Linux as well.
It persists across startups, so no, it does not go away by closing and reopening.

I am experimenting with a fresh Eclipse install and a junk project to see if I
can find some way to consistently reproduce this error; so far, no luck.

I wonder if the other folks on the CC: for this thread could assist me in trying
to find some common factors...

A little more detail about my project:
* Workspace resides on local hard drive
* Project resides on Samba mount point on UNIX system
* ~100 jars on the classpath as a user library
* ~70 source directories on the classpath
* Compiling under 1.4 rules
* Project is "shared" (initially checked out from CVS using Eclipse)

I'll continue trying to replicate using a standalone project... no luck so far,
though.
We are also experiencing this problem, and I haven't found a way to consistently
reproduce it either.

Our projects are also shared, but with Clearcase.  My workspace is as follows:

- Eclipse 3.1.0 Build id: I20050627-1435
- 16 projects loaded (all stored in clearcase)
- Projects have dependencies with each others. There are also some circular
dependencies between them.
- using a clearcase snapshot view on the c: drive (but I've seen the problem
using dynamic views on network drives too)
- Compiling under 1.5 rules
- ~35 source directories on the classpath, and maybe around 50 jars.
- Problem view Filter set to 1000 items
- The total # of Problems (warnings) is 25,547

The problem seems to have more chance of happening when there are compilation
errors in the workspace. Especially when there are inter-project discrepancies.
The last time it happened to me, someone had renamed a project and somehow
eclipse had a hard time picking up the change when I used an old team project
set to import all the projects.  I fixed it by deleting all projects,
reimporting them through an updated team project set, cleaning all projects and
doing a full rebuild.

I also tried reproducing it with a few small, dummy projects, with no luck... 
I'll post an update the next time it happens to me, if I can figure out the
special conditions that make it happen...
I have just reproduced the bug in my environment described previously.

- Turn off "build automatically"
- Clean all projects (do not start a build)
- Update my clearcase snapshot view, thus updating some workspace source files,
adding new ones, etc.
- select all projects from the package explorer
- Press F5 to refresh them
- Turn on "build automatically".  Wait for the build to finish.

The build then has 3 errors (with description) about missing resources and such
(which was expected after this refresh), and 981 warnings.  975 warnings are
from the RMI plugin we're using, and they have descriptions.  6 warnings seem to
be from the eclipse compiler, and have only the icon and "Resource" columns
filled in. The other columns are blank.

Note that one particularity of this refresh is that one of the projects changed
name (new &lt;name&gt; in its .project).  Workspace refresh didn't pick that up, so it
still shows the old name in the package explorer, and that is the cause of the 
3 compilation errors.  Maybe a change to .project outside of workspace control,
followed by a workspace refresh, is a way to trigger this "no description" bug?
I've also encountered this problem...  very frustrating...  Our project
generates about 1,500 warnings.   When I use JLint for eclipse we get up to
about 4600, changing some filter settings often results in loss of descriptions. :(

Doing a Clean followed by a rebuild will get them back.  (Otherwise they stay
blank between rebuilds and IDE restarts)

I've also notice that this can happen on a smaller scale where 2 or 3 warning
descriptions are blank, not sure if this is related (perhaps eclipse is not
parsing the javac output for those vs. missplacing all the message descriptions
later).



*** This bug has been marked as a duplicate of 83992 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106256" />
    <CreationDate amount="2005-08-05 19:08:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="1.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Expression builder cannot display multilingual text after re-opened.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When multi-lingual text is cut&amp;pasted into Expression builder, the text is 
displayed correctly.
But, after the Expression build is closed and re-opened, the text is now
displayed as "???????????".
Please check the attached bitmap file for detail.

To reproduce, please use the attached UTF-8 text file and follow the
steps described in the bitmap file.
Created attachment 25795
Steps to reproduce
Created attachment 25796
UTF-8 multi-lingual text
Please test with the new Expression builder.
I test the new expression builder under following enviroment:
WinXP, english locale, english language.
JavaVM, english locale, english language.
It's working all right.

Verified in build 20051013.
Verified in build 20051216.</WithStack>
    <WithOutStack>When multi-lingual text is cut&amp;pasted into Expression builder, the text is 
displayed correctly.
But, after the Expression build is closed and re-opened, the text is now
displayed as "???????????".
Please check the attached bitmap file for detail.

To reproduce, please use the attached UTF-8 text file and follow the
steps described in the bitmap file.
Created attachment 25795
Steps to reproduce
Created attachment 25796
UTF-8 multi-lingual text
Please test with the new Expression builder.
I test the new expression builder under following enviroment:
WinXP, english locale, english language.
JavaVM, english locale, english language.
It's working all right.

Verified in build 20051013.
Verified in build 20051216.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106257" />
    <CreationDate amount="2005-08-05 19:21:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Monitor" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Proposed enhancement: Decouple UBC study</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Hello!

I will be using the Mylar Monitor for a user study just across the pond here at
UVic and I will need to make some changes to the monitor, which may benefit
others.  I will list the changes I will need to make, and if there is something
that I can do that would be patch worthy, let me know and I will attempt to do
that first so that I can create a patch.  Each enhancement that I will be making
for myself will be listed seperately in bugzilla.

1. Decouple the monitor from the Mylar user study.  Since I am also doing a user
study I do need a similar set up: user id's, ethical permission for, etc. 
Obviously I will need different forms and information from my users, but perhaps
the monitor could be made so that it is easier to change what study it is being
used for.  (Not that it's very difficult now!)

-Suzanne
Unfortuantely it is too late to make this destabailizing chagne for this week,
so I'll try to do this early next week.

This is pretty much done and the three Mylar monitor projects are now on eclipse.org.  I'll send
more info with Monday's planning email.</WithStack>
    <WithOutStack>Hello!

I will be using the Mylar Monitor for a user study just across the pond here at
UVic and I will need to make some changes to the monitor, which may benefit
others.  I will list the changes I will need to make, and if there is something
that I can do that would be patch worthy, let me know and I will attempt to do
that first so that I can create a patch.  Each enhancement that I will be making
for myself will be listed seperately in bugzilla.

1. Decouple the monitor from the Mylar user study.  Since I am also doing a user
study I do need a similar set up: user id's, ethical permission for, etc. 
Obviously I will need different forms and information from my users, but perhaps
the monitor could be made so that it is easier to change what study it is being
used for.  (Not that it's very difficult now!)

-Suzanne
Unfortuantely it is too late to make this destabailizing chagne for this week,
so I'll try to do this early next week.

This is pretty much done and the three Mylar monitor projects are now on eclipse.org.  I'll send
more info with Monday's planning email.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106258" />
    <CreationDate amount="2005-08-05 19:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Monitor" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>opt out of study</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>2. The ability to opt out of the study (turn off the monitor).  I will be
releasing my eclipse plug-in with the mylar monitor included.  (My users are
novice students, so I try to make things as simple as possible.)  My ethical
permission form has the options for users to decide not to run the monitor.
Suzanne, I'm reassigning these reports to you.  Once we have the generic monitor
you should be able to implement them by extending it, and possibly making
patches if necessary.
The monitor is now optional.</WithStack>
    <WithOutStack>2. The ability to opt out of the study (turn off the monitor).  I will be
releasing my eclipse plug-in with the mylar monitor included.  (My users are
novice students, so I try to make things as simple as possible.)  My ethical
permission form has the options for users to decide not to run the monitor.
Suzanne, I'm reassigning these reports to you.  Once we have the generic monitor
you should be able to implement them by extending it, and possibly making
patches if necessary.
The monitor is now optional.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106259" />
    <CreationDate amount="2005-08-05 19:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Monitor" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>send logs on shutdown</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>3. Send logs on shutdown.  Since I will be using the monitor in a lab
environment at the university, I will need to send the monitor logs when a user
shuts down Eclipse.  This is something I have already implemented for myself. 
(But could be improved.)

Perhaps this could be an option: send logs on startup or shutdown.  (Though I
think it is more popular to want to send logs on startup.)
This is just a inor issue, but for the future note that you don't need to name
your reports "Proposed enhancement..." since we know this from the "Severity"
attribute on the rpeort.
We're not doing this for Mylar, but the monitor is now extensible to different
user studies and the upload policy could be controlled by a plug-in extending
it.  If you need any extra API to do this feel free to re-open the report, but
more than likely you will just want to invoke the upload wizard on shutdown.  If
you want an example of an extended monitor let me know and I can send you the
code for the UBC user study one.</WithStack>
    <WithOutStack>3. Send logs on shutdown.  Since I will be using the monitor in a lab
environment at the university, I will need to send the monitor logs when a user
shuts down Eclipse.  This is something I have already implemented for myself. 
(But could be improved.)

Perhaps this could be an option: send logs on startup or shutdown.  (Though I
think it is more popular to want to send logs on startup.)
This is just a inor issue, but for the future note that you don't need to name
your reports "Proposed enhancement..." since we know this from the "Severity"
attribute on the rpeort.
We're not doing this for Mylar, but the monitor is now extensible to different
user studies and the upload policy could be controlled by a plug-in extending
it.  If you need any extra API to do this feel free to re-open the report, but
more than likely you will just want to invoke the upload wizard on shutdown.  If
you want an example of an extended monitor let me know and I can send you the
code for the UBC user study one.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106260" />
    <CreationDate amount="2005-08-05 19:30:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Monitor" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>monitor compile errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>This may not interest you...

4. Capture compiler errors.  Right now I have modified the monitor to capture
what compiler errors they view in the problems view (my plug-in has an extra
help component and I need to know if they actually read it.)  I would also like
to capture what types of run time and compiler errors occur.  (Unlike the
original monitor, I have no plans to obfuscate what files users are working on,
but I am not interested in what they code, etc.)

For me this is very valuable data.
This should be a Monitor extension.  If it seems generally useful it could be
contributed as a patch to the Monitor.</WithStack>
    <WithOutStack>This may not interest you...

4. Capture compiler errors.  Right now I have modified the monitor to capture
what compiler errors they view in the problems view (my plug-in has an extra
help component and I need to know if they actually read it.)  I would also like
to capture what types of run time and compiler errors occur.  (Unlike the
original monitor, I have no plans to obfuscate what files users are working on,
but I am not interested in what they code, etc.)

For me this is very valuable data.
This should be a Monitor extension.  If it seems generally useful it could be
contributed as a patch to the Monitor.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106261" />
    <CreationDate amount="2005-08-05 19:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="Community" />
    <component amount="Bugzilla" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Additional fields</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>During BIRT development, we found some of the information is difficult to track 
with current Eclipse bugzilla implementation.  Following are a list of 
suggested new fields that will help us track them...

A field to indicate the version number in which  the bug happens. (major 
release number and milestone build number, can use the same drop down selection 
list as the target milestones)

A "Verified by" field - to indicate who has verified that the bug no longer 
happens.

A "Verified in Build" field - to indicate the Build that is used to verify that 
the problem no longer happens

A "Regression" field - indicate the version against which the bug is a 
regression.  Can use the same drop down selection list as the target milestones)

A Locale field - to identify the locale in which the problem exists
The Planning Council decided not to modify Bugzilla at this time.

"Version Number bug happens in" is already there: the "Version" field. Teams
that want to use milestones in that field are welcome to do so.

"Verified by" is available from the bug history. 

"Verified in Build" is available by convention. The convention is that the
target milestone is set when the bug is fixed and is used to indicate the
verified in build.

"Regression" is available from the bug history.

"Locale" is best found from the Eclipse system configuration log. If necessary,
we can modify bugzilla to suggest that a system configuration be attached.
Alternatively, someone could write an Eclipse plug-in that creates a new
bugzilla entry and attaches the system configuration by default.</WithStack>
    <WithOutStack>During BIRT development, we found some of the information is difficult to track 
with current Eclipse bugzilla implementation.  Following are a list of 
suggested new fields that will help us track them...

A field to indicate the version number in which  the bug happens. (major 
release number and milestone build number, can use the same drop down selection 
list as the target milestones)

A "Verified by" field - to indicate who has verified that the bug no longer 
happens.

A "Verified in Build" field - to indicate the Build that is used to verify that 
the problem no longer happens

A "Regression" field - indicate the version against which the bug is a 
regression.  Can use the same drop down selection list as the target milestones)

A Locale field - to identify the locale in which the problem exists
The Planning Council decided not to modify Bugzilla at this time.

"Version Number bug happens in" is already there: the "Version" field. Teams
that want to use milestones in that field are welcome to do so.

"Verified by" is available from the bug history. 

"Verified in Build" is available by convention. The convention is that the
target milestone is set when the bug is fixed and is used to indicate the
verified in build.

"Regression" is available from the bug history.

"Locale" is best found from the Eclipse system configuration log. If necessary,
we can modify bugzilla to suggest that a system configuration be attached.
Alternatively, someone could write an Eclipse plug-in that creates a new
bugzilla entry and attaches the system configuration by default.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106262" />
    <CreationDate amount="2005-08-05 19:41:00 -0400" />
    <DupId amount="99738" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows Server 2003" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Javadoc: preformatted regions are indented with each auto-format</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="multicomment">
        <location start="74" end="115" />
        <code>/**
 * &lt;pre&gt;
 * hello world
 * &lt;/pre&gt;
 */</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Create a file that contains javadoc that contains at least the following:
/**
 * &lt;pre&gt;
 * hello world
 * &lt;/pre&gt;
 */

With each auto-format, "hello world" will be shifted one space to the right. 
Shown below is the result after an auto-format

 * &lt;pre&gt;
 *  hello world
 * &lt;/pre&gt;

three autoformats later, we get:
 * &lt;pre&gt;
 *     hello world
 * &lt;/pre&gt;

As you can imagine, this makes documents where preformatted examples or somesuch
are added over time look strange and requires painful manual re-(un)indenting.


*** This bug has been marked as a duplicate of 99738 ***
Reopening to reassign.


*** This bug has been marked as a duplicate of bug 99738 ***
Verified for 3.2.2 using build M20070112-1200.
Verified for 3.3 M5 using build I20070205-0009</WithStack>
    <WithOutStack>Create a file that contains javadoc that contains at least the following:
/**
 * &lt;pre&gt;
 * hello world
 * &lt;/pre&gt;
 */

With each auto-format, "hello world" will be shifted one space to the right. 
Shown below is the result after an auto-format

 * &lt;pre&gt;
 *  hello world
 * &lt;/pre&gt;

three autoformats later, we get:
 * &lt;pre&gt;
 *     hello world
 * &lt;/pre&gt;

As you can imagine, this makes documents where preformatted examples or somesuch
are added over time look strange and requires painful manual re-(un)indenting.


*** This bug has been marked as a duplicate of 99738 ***
Reopening to reassign.


*** This bug has been marked as a duplicate of bug 99738 ***
Verified for 3.2.2 using build M20070112-1200.
Verified for 3.3 M5 using build I20070205-0009</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106263" />
    <CreationDate amount="2005-08-05 19:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="Community" />
    <component amount="Bugzilla" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>new field to indicate enhancement or defect</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>It will be helpful to add a field to identify whether the issue is an 
Enhancement request or a Defect. 

Current severity field has enhancement as one of the values, but this approach 
does not allow user to provide input on the level of severity/importance of the 
enhancement.
The Planning Council decided that the best solution would be to extend the
Severity field from "blocker, critical, major, normal, minor, trival,
enhancement" to "blocker, critical, major, normal, minor, trival, major
enhancement, normal enhancement, minor enhancement". All of the existing bugs
labeled "enhancement" would be remapped to "normal enhancement".

This change requires a change in the Bugzilla MySQL database and a small change
in the Bugzilla Perl.  See the documentation here:
http://www.bugzilla.org/docs/2.18/html/dbdoc.html

(Actually, the original suggestion by a Seattle-based member was for "grande
enhancement, venti enhancement, tall enhancement"... :-)
As of Bugzilla 2.20, bug severity is a GUI-editable field.  I can add the below enhancements and change "enhancement" for "normal enhancement".

Please confirm.
What is the list of new severity values for "enhancements"?
An Enhancement can have any of the 5 priorities:
P1, P2, P3, P4, P5.

Wenfeng, can your project agree on using the Enhancement's priority field as 'the level of severity/importance of the enhancement'?

For instance, Enhancement P1 = very important; Enhancement P5 = low priority
In reply to comment #4)
&gt; An Enhancement can have any of the 5 priorities:
&gt; P1, P2, P3, P4, P5.
&gt; Wenfeng, can your project agree on using the Enhancement's priority field as
&gt; 'the level of severity/importance of the enhancement'?
&gt; For instance, Enhancement P1 = very important; Enhancement P5 = low priority

Yes, we can. thanks.
If this solution works for you, I'll close this bug.  Feel free to reopen if there's anything else we can do to accomodate you.

D.</WithStack>
    <WithOutStack>It will be helpful to add a field to identify whether the issue is an 
Enhancement request or a Defect. 

Current severity field has enhancement as one of the values, but this approach 
does not allow user to provide input on the level of severity/importance of the 
enhancement.
The Planning Council decided that the best solution would be to extend the
Severity field from "blocker, critical, major, normal, minor, trival,
enhancement" to "blocker, critical, major, normal, minor, trival, major
enhancement, normal enhancement, minor enhancement". All of the existing bugs
labeled "enhancement" would be remapped to "normal enhancement".

This change requires a change in the Bugzilla MySQL database and a small change
in the Bugzilla Perl.  See the documentation here:
http://www.bugzilla.org/docs/2.18/html/dbdoc.html

(Actually, the original suggestion by a Seattle-based member was for "grande
enhancement, venti enhancement, tall enhancement"... :-)
As of Bugzilla 2.20, bug severity is a GUI-editable field.  I can add the below enhancements and change "enhancement" for "normal enhancement".

Please confirm.
What is the list of new severity values for "enhancements"?
An Enhancement can have any of the 5 priorities:
P1, P2, P3, P4, P5.

Wenfeng, can your project agree on using the Enhancement's priority field as 'the level of severity/importance of the enhancement'?

For instance, Enhancement P1 = very important; Enhancement P5 = low priority
In reply to comment #4)
&gt; An Enhancement can have any of the 5 priorities:
&gt; P1, P2, P3, P4, P5.
&gt; Wenfeng, can your project agree on using the Enhancement's priority field as
&gt; 'the level of severity/importance of the enhancement'?
&gt; For instance, Enhancement P1 = very important; Enhancement P5 = low priority

Yes, we can. thanks.
If this solution works for you, I'll close this bug.  Feel free to reopen if there's anything else we can do to accomodate you.

D.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106264" />
    <CreationDate amount="2005-08-05 19:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="Community" />
    <component amount="Bugzilla" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Need programmatic access to bugzilla database</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Need ability to run, schedule and email reports automatically on Bugzilla to 
automate bug tracking process.  We would like to be able to use BIRT  with 
either JDBC access or web service access to Bugzilla database.
You can already access bugzilla programatically using PHP. Please log in to the
committer tools, https://dev.eclipse.org/committers/ and see the "accessing
system databases using PHP".  If your application needs to run as a scheduled
task, this can be setup as required.

We also do provide Tomcat, so we could host a Java application on eclipse.org
servers to access bugzilla. Again, hosting a Java application on eclipse.org is
described in the committer tools.

For security reasons, we cannot provide external access to our database server.

I'll close this as WORKSFORME, feel free to reopen if none of these solutions
can be used for Birt.</WithStack>
    <WithOutStack>Need ability to run, schedule and email reports automatically on Bugzilla to 
automate bug tracking process.  We would like to be able to use BIRT  with 
either JDBC access or web service access to Bugzilla database.
You can already access bugzilla programatically using PHP. Please log in to the
committer tools, https://dev.eclipse.org/committers/ and see the "accessing
system databases using PHP".  If your application needs to run as a scheduled
task, this can be setup as required.

We also do provide Tomcat, so we could host a Java application on eclipse.org
servers to access bugzilla. Again, hosting a Java application on eclipse.org is
described in the committer tools.

For security reasons, we cannot provide external access to our database server.

I'll close this as WORKSFORME, feel free to reopen if none of these solutions
can be used for Birt.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106265" />
    <CreationDate amount="2005-08-05 19:48:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="1.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Class name on Expression builder should not be translated.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Dimention-&gt;measure on Expression Builder is translated.
Since this is a class name, it should not be translated.

Class.Dimension.measure=measure in model's messages_xx_YY.msg should remain in
English.
Created attachment 25797
Screenshot  for this problem
Changed localized strings for "Class.Dimension.measure" back to English.

Verified on 20050815 build.

This has been verified so I'm closing.</WithStack>
    <WithOutStack>Dimention-&gt;measure on Expression Builder is translated.
Since this is a class name, it should not be translated.

Class.Dimension.measure=measure in model's messages_xx_YY.msg should remain in
English.
Created attachment 25797
Screenshot  for this problem
Changed localized strings for "Class.Dimension.measure" back to English.

Verified on 20050815 build.

This has been verified so I'm closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106266" />
    <CreationDate amount="2005-08-05 20:51:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Reset method button too small</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 3.1, GEF 3.1, EMO-SDO-SDK 2.1.0, BIRT 1.0.1

The "Reset Method" button in the code tab of the report editor is too short,
causing the text to be clipped at the button.  The button should not be sized
smaller than its default computeSize result.
Created attachment 25798
Screenshot
Let the "Reset Method" button set size to its default.
Verified in build 20051013.
Verified in build 20051219.</WithStack>
    <WithOutStack>Eclipse 3.1, GEF 3.1, EMO-SDO-SDK 2.1.0, BIRT 1.0.1

The "Reset Method" button in the code tab of the report editor is too short,
causing the text to be clipped at the button.  The button should not be sized
smaller than its default computeSize result.
Created attachment 25798
Screenshot
Let the "Reset Method" button set size to its default.
Verified in build 20051013.
Verified in build 20051219.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106267" />
    <CreationDate amount="2005-08-05 21:04:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Incorrect background for line styles in the property editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Select a table cell or a label</Line>
          <Line>2. Open the Property Editor view</Line>
          <Line>3. In the Properties tab, choose Border</Line>
          <Line>4. Expand Style or Width</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 3.1, GEF 3.1, EMO-SDO-SDK 2.1.0, BIRT 1.0.1
GTK+ 2.6.8 (Debian Linux)

1. Select a table cell or a label
2. Open the Property Editor view
3. In the Properties tab, choose Border
4. Expand Style or Width

The example lines are all drawn on a gray background, but the list background
colour is white.
Created attachment 25799
Screenshot
 Revert the backgroud color to default.
Verified in build 20051227.</WithStack>
    <WithOutStack>Eclipse 3.1, GEF 3.1, EMO-SDO-SDK 2.1.0, BIRT 1.0.1
GTK+ 2.6.8 (Debian Linux)

1. Select a table cell or a label
2. Open the Property Editor view
3. In the Properties tab, choose Border
4. Expand Style or Width

The example lines are all drawn on a gray background, but the list background
colour is white.
Created attachment 25799
Screenshot
 Revert the backgroud color to default.
Verified in build 20051227.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106268" />
    <CreationDate amount="2005-08-05 21:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Mark occurrences doesn't match implementations of generic interfaces in 1.4 mode</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>1. Create a project with 1.4 compliance level</Line>
          <Line>2. Set up project to use a 5.0 class library</Line>
          <Line>3. Open the class "java.lang.String"</Line>
          <Line>4. Click on Comparable&lt;String&gt;</Line>
          <Line>5. Observe: only Comparable&lt;String&gt; is hilighted</Line>
          <Line>6. Change the compliance level of the project to 5.0</Line>
          <Line>7. Reselect Comparable&lt;String&gt;</Line>
          <Line>8. Observe it correctly hilights the compare(String):int function</Line>
          <Line>That's the correct behavior in 1.4 compliance mode.</Line>
          <Line>I don't understand why it is not consistent?  It is smart enough to pick up</Line>
          <Line>classes used in generic types (step 2).  To be truly 1.4 compliant it shouldn't</Line>
          <Line>be doing this, correct?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>When you have a project with 1.4 compliance level but a 5.0 class library the
mark occurrences feature does not pick up implementations of generic interface
methods.  It also seems to be missing the overrides/implements marker.  If you
select "String" it hilights all instances of the class (including Generics), so
I also expected this to work.

1. Create a project with 1.4 compliance level
2. Set up project to use a 5.0 class library
3. Open the class "java.lang.String"
4. Click on Comparable&lt;String&gt;
5. Observe: only Comparable&lt;String&gt; is hilighted
6. Change the compliance level of the project to 5.0
7. Reselect Comparable&lt;String&gt;
8. Observe it correctly hilights the compare(String):int function
That's the correct behavior in 1.4 compliance mode.
I don't understand why it is not consistent?  It is smart enough to pick up
classes used in generic types (step 2).  To be truly 1.4 compliant it shouldn't
be doing this, correct?

Isn't it quite common to develop 1.4 compliant code against a 5.0 JRE?  If you
have to dig into JDK code it is nice to be able to navigate it using the 5.0
features.
&gt;To be truly 1.4 compliant it shouldn't be doing this, correct?
No. It shows the class that you specified by using the 5.0 library.

The compiler / ast generation is defined by the project and not by each
individual library / source.

Philippe, any comments?</WithStack>
    <WithOutStack>When you have a project with 1.4 compliance level but a 5.0 class library the
mark occurrences feature does not pick up implementations of generic interface
methods.  It also seems to be missing the overrides/implements marker.  If you
select "String" it hilights all instances of the class (including Generics), so
I also expected this to work.

1. Create a project with 1.4 compliance level
2. Set up project to use a 5.0 class library
3. Open the class "java.lang.String"
4. Click on Comparable&lt;String&gt;
5. Observe: only Comparable&lt;String&gt; is hilighted
6. Change the compliance level of the project to 5.0
7. Reselect Comparable&lt;String&gt;
8. Observe it correctly hilights the compare(String):int function
That's the correct behavior in 1.4 compliance mode.
I don't understand why it is not consistent?  It is smart enough to pick up
classes used in generic types (step 2).  To be truly 1.4 compliant it shouldn't
be doing this, correct?

Isn't it quite common to develop 1.4 compliant code against a 5.0 JRE?  If you
have to dig into JDK code it is nice to be able to navigate it using the 5.0
features.
&gt;To be truly 1.4 compliant it shouldn't be doing this, correct?
No. It shows the class that you specified by using the 5.0 library.

The compiler / ast generation is defined by the project and not by each
individual library / source.

Philippe, any comments?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106269" />
    <CreationDate amount="2005-08-05 21:22:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cannot set a background image in a style</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. Open the report editor on a report</Line>
          <Line>2. In the layout tab, right click in the report and choose Style &gt; Add Style...</Line>
          <Line>3. Choose Background in the list on the left</Line>
          <Line>4. Click Browse</Line>
          <Line>5. A file chooser dialog opens with a filter called "SWT image (gif, jpeg,</Line>
          <Line>png, ico, bmp)".</Line>
          <Line>6. Navigate to a directory containing some png images -- none are displayed</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 3.1, GEF 3.1, EMO-SDO-SDK 2.1.0, BIRT 1.0.1
GTK+ 2.6.8 (Debian Linux)

1. Open the report editor on a report
2. In the layout tab, right click in the report and choose Style &gt; Add Style...
3. Choose Background in the list on the left
4. Click Browse
5. A file chooser dialog opens with a filter called "SWT image (gif, jpeg,
   png, ico, bmp)".
6. Navigate to a directory containing some png images -- none are displayed

How is this FileDialog being created?  What filter pattern is being used?
Adjust the file type filters for FileDialogs.
Verified in build 20051013.</WithStack>
    <WithOutStack>Eclipse 3.1, GEF 3.1, EMO-SDO-SDK 2.1.0, BIRT 1.0.1
GTK+ 2.6.8 (Debian Linux)

1. Open the report editor on a report
2. In the layout tab, right click in the report and choose Style &gt; Add Style...
3. Choose Background in the list on the left
4. Click Browse
5. A file chooser dialog opens with a filter called "SWT image (gif, jpeg,
   png, ico, bmp)".
6. Navigate to a directory containing some png images -- none are displayed

How is this FileDialog being created?  What filter pattern is being used?
Adjust the file type filters for FileDialogs.
Verified in build 20051013.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106270" />
    <CreationDate amount="2005-08-05 21:27:00 -0400" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Framework" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Strange deadlock</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Eclipse 3.1, GEF 3.1, EMO-SDO-SDK 2.1.0, BIRT 1.0.1
GTK+ 2.6.8 (Debian Linux)

I was playing around with BIRT and decided to check all of their code out of
CVS.  Eclipse hung during the checkout.  The full VM thread dump is attached.

Any ideas what might be the cause?  I'm posting this to Runtime first since two
of the threads seem to be some class loading stuff going on.
Created attachment 25800
kill -3 output
What VM/classlibrary are you using? What version?
I believe this was with the Sun VM 1.5.0-02.
I assume this has not been reproduced recently.  From the dump I cannot tell what is causing the deadlock

Worker-17 thread seems to be waiting for a define class call to return but the status for the thread is "runnable" so I don't know why it is hung.

main thread seems to be blocked on a loadClass call to the parent classloader which it already has obtained the lock on.

I'm tempted to close as worksforme unless you have seen this hang recently.
closing as worksforme.  Please reopen if you can still reproduce.</WithStack>
    <WithOutStack>Eclipse 3.1, GEF 3.1, EMO-SDO-SDK 2.1.0, BIRT 1.0.1
GTK+ 2.6.8 (Debian Linux)

I was playing around with BIRT and decided to check all of their code out of
CVS.  Eclipse hung during the checkout.  The full VM thread dump is attached.

Any ideas what might be the cause?  I'm posting this to Runtime first since two
of the threads seem to be some class loading stuff going on.
Created attachment 25800
kill -3 output
What VM/classlibrary are you using? What version?
I believe this was with the Sun VM 1.5.0-02.
I assume this has not been reproduced recently.  From the dump I cannot tell what is causing the deadlock

Worker-17 thread seems to be waiting for a define class call to return but the status for the thread is "runnable" so I don't know why it is hung.

main thread seems to be blocked on a loadClass call to the parent classloader which it already has obtained the lock on.

I'm tempted to close as worksforme unless you have seen this hang recently.
closing as worksforme.  Please reopen if you can still reproduce.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106271" />
    <CreationDate amount="2005-08-05 21:42:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Chart" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Dimension combo box too small in Chart Selector dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 3.1, GEF 3.1, EMO-SDO-SDK 2.1.0, BIRT 1.0.1
GTK+ 2.6.8 (Debian Linux)

In the Chart Selector dialog there is a combo box for "Dimension" with two
values, "2D" and "2D With Depth".  However, the combo box is too small to show
the full text.
Created attachment 25801
Screenshot
To be fixed in the new builder
Depend on #110667. Resolved with new UI
Fixed in Chart UI V2.0
fixed</WithStack>
    <WithOutStack>Eclipse 3.1, GEF 3.1, EMO-SDO-SDK 2.1.0, BIRT 1.0.1
GTK+ 2.6.8 (Debian Linux)

In the Chart Selector dialog there is a combo box for "Dimension" with two
values, "2D" and "2D With Depth".  However, the combo box is too small to show
the full text.
Created attachment 25801
Screenshot
To be fixed in the new builder
Depend on #110667. Resolved with new UI
Fixed in Chart UI V2.0
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106272" />
    <CreationDate amount="2005-08-05 21:49:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Chart" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Chart Selector dialog incorrectly parented</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 3.1, GEF 3.1, EMO-SDO-SDK 2.1.0, BIRT 1.0.1
GTK+ 2.6.8 (Debian Linux)

In the report editor, click on "chart" in the palette and click back on the
layout to add a chart.  This opens a "Chart Selector" dialog.  However, while
the dialog is modal, it does not seem to have the Eclipse window as its parent.
 Under Linux, this gives some interesting effects.  Even though the dialog is
modal, you can minimize it and move the Eclipse window in front of it, which can
be quite confusing.

The dialog should be created with a parent.
Fixed.
fixed</WithStack>
    <WithOutStack>Eclipse 3.1, GEF 3.1, EMO-SDO-SDK 2.1.0, BIRT 1.0.1
GTK+ 2.6.8 (Debian Linux)

In the report editor, click on "chart" in the palette and click back on the
layout to add a chart.  This opens a "Chart Selector" dialog.  However, while
the dialog is modal, it does not seem to have the Eclipse window as its parent.
 Under Linux, this gives some interesting effects.  Even though the dialog is
modal, you can minimize it and move the Eclipse window in front of it, which can
be quite confusing.

The dialog should be created with a parent.
Fixed.
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106273" />
    <CreationDate amount="2005-08-05 22:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[typing] Code Assist didn't recognize my type Package</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I have the interface com.contivo.udm.components.Package.  When I wrote some 
code in another class like:

public void addPackage(Package thePackage)

Code Assist used the java.lang.Package.  When I pressed CTRL-SHIFT-O, I was 
not prompted with a list of classes with Package in their package name.  I had 
to manually add the import statement for my package.

Are java.lang.* packages always used without checking for other packages with 
those class names?
java.lang is a predefined package (see JLS2, chapter 7) and therefore the
compiler automatically maps Package to java.lang.Package and nothing remains to
do for organize imports (Ctrl+Shift+O).

If you had not written 'Package' by hand but used code assist, e.g.
'Pack'&lt;Ctrl+Space&gt;, a list with available types would have been presented with
your 'Package' interface in it as well. If you'd then select your interface it
would automatically add the import.</WithStack>
    <WithOutStack>I have the interface com.contivo.udm.components.Package.  When I wrote some 
code in another class like:

public void addPackage(Package thePackage)

Code Assist used the java.lang.Package.  When I pressed CTRL-SHIFT-O, I was 
not prompted with a list of classes with Package in their package name.  I had 
to manually add the import statement for my package.

Are java.lang.* packages always used without checking for other packages with 
those class names?
java.lang is a predefined package (see JLS2, chapter 7) and therefore the
compiler automatically maps Package to java.lang.Package and nothing remains to
do for organize imports (Ctrl+Shift+O).

If you had not written 'Package' by hand but used code assist, e.g.
'Pack'&lt;Ctrl+Space&gt;, a list with available types would have been presented with
your 'Package' interface in it as well. If you'd then select your interface it
would automatically add the import.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106274" />
    <CreationDate amount="2005-08-05 22:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Provide a function that can set output folder to any path of OS</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Provide a function that can set output folder to any path of OS.
The other java IDE like IDEA can complile java source into any folder in 
any folder that you want. Why did not eclipse provider the function?
You can target any location on your disk using a linked folder (like a symbolic
link).

Dirk - cc'ing you to see if something could be improved in UI to better leverage
the use of linked folder. These are currently a bit too much hidden in advanced
areas of the UI.
The reason "hiding" is that we consider a linked folder setup an advantage
setup. That's why creating linked folders is "hidden" behing the Advanced button
consistently in the UI (not only JDT/UI). We even use the dialogs provided by
Platform/UI for this. If we are going to change this we have to make sure that
the overall story stays consistent. An alternative would be to have special
actions which hide the creation of linked folders. But this might be confusing
as well since the user would not be aware what actually happens.
It sounds like the solution would be in JDT UI land.
Moving to JDT UI
The functionality is there via linked folders. Adding a button the seamlessly
creates a linked folder for directories outside the workspace is time permitted.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Provide a function that can set output folder to any path of OS.
The other java IDE like IDEA can complile java source into any folder in 
any folder that you want. Why did not eclipse provider the function?
You can target any location on your disk using a linked folder (like a symbolic
link).

Dirk - cc'ing you to see if something could be improved in UI to better leverage
the use of linked folder. These are currently a bit too much hidden in advanced
areas of the UI.
The reason "hiding" is that we consider a linked folder setup an advantage
setup. That's why creating linked folders is "hidden" behing the Advanced button
consistently in the UI (not only JDT/UI). We even use the dialogs provided by
Platform/UI for this. If we are going to change this we have to make sure that
the overall story stays consistent. An alternative would be to have special
actions which hide the creation of linked folders. But this might be confusing
as well since the user would not be aware what actually happens.
It sounds like the solution would be in JDT UI land.
Moving to JDT UI
The functionality is there via linked folders. Adding a button the seamlessly
creates a linked folder for directories outside the workspace is time permitted.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106275" />
    <CreationDate amount="2005-08-05 23:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>IASTPreprocessorIncludeStatement incomplete ??</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="78" end="92" />
        <code>int main() {
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1- Full path (done)</Line>
          <Line>/usr/include/sys/time.h</Line>
          <Line>2- the name reference by the user in the translation unit</Line>
          <Line>sys/time.h</Line>
          <Line>3- the position(offset and length) id</Line>
          <Line>9-11</Line>
          <Line>4- if the search is done first in the system include (-I) because of the &lt;&gt;</Line>
          <Line>or by using ""</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>in code like this

#include &lt;sys/time.h&gt;
#include &lt;time.h&gt;
#include "time.h"

int main() {
}

We need to know a few more information then what the 
IASTPreprocessorIncludeStatement is providing.


The old parser IASTInclusion was providing all this information(but missing
the important one, the full path name of the inclusion).
The new Parser gives the exact location of the inclusion but neglect to
give the other information. For example:

#include &lt;sys/time.h&gt;

1- Full path (done)
   /usr/include/sys/time.h
2- the name reference by the user in the translation unit
   sys/time.h
3- the position(offset and length) id
   9-11
4- if the search is done first in the system include (-I) because of the &lt;&gt;
   or by using ""   

    true/false

I am considering this as a regression.  Maybe we could have a
IInclusionBinding
Good question. Bindings are meant to be logical things that bind "physical" AST
elements dispursed through the tree. Obvious use of bindings are to link
declarations with references. But we've done some "interesting things" like
binding labels and the gotos to them.

For this, though, it might make more sense to add the information you need to
IASTPreprocessorIncludeStatement. I would have thought that some of this, e.g.
location information (offset, length) should have been there anyway.
(In reply to comment #1)
&gt; Good question. Bindings are meant to be logical things that bind "physical" AST
&gt; elements dispursed through the tree. Obvious use of bindings are to link
&gt; declarations with references. But we've done some "interesting things" like
&gt; binding labels and the gotos to them.
&gt; 

Interesting, I'm almost done with the CoreModel Builder base on the DOM.
When going throught the Dom AST, I use the binding because sometime it is the
only way to get the necessary info i.e. the binding wrap things nicely
where it could have been cumbersome to do it myself.

&gt; For this, though, it might make more sense to add the information you need to
&gt; IASTPreprocessorIncludeStatement. I would have thought that some of this, e.g.
&gt; location information (offset, length) should have been there anyway.

My thoughts too.   I get both the ASTFileLocation and the NodeLocation, I was
expecting the NodeLocation to give the right thing but no aval.
Be careful, though. The node location should represent the entire include
statement. If you need the location of the filename in the statement, you
probably need another location entry.

Bindings are good, but they do take time to compute. Use them sparingly. If
enough information is available in the AST, you shouldn't need to resolve the
binding. But there are times when it is necessary.
I have added the methods IASTPreprocessorIncludeStatement.getName() and IASTPreprocessorIncludeStatement.isSystemInclude().

Fixed in 4.0 &gt; 20061107.</WithStack>
    <WithOutStack>in code like this

#include &lt;sys/time.h&gt;
#include &lt;time.h&gt;
#include "time.h"

int main() {
}

We need to know a few more information then what the 
IASTPreprocessorIncludeStatement is providing.


The old parser IASTInclusion was providing all this information(but missing
the important one, the full path name of the inclusion).
The new Parser gives the exact location of the inclusion but neglect to
give the other information. For example:

#include &lt;sys/time.h&gt;

1- Full path (done)
   /usr/include/sys/time.h
2- the name reference by the user in the translation unit
   sys/time.h
3- the position(offset and length) id
   9-11
4- if the search is done first in the system include (-I) because of the &lt;&gt;
   or by using ""   

    true/false

I am considering this as a regression.  Maybe we could have a
IInclusionBinding
Good question. Bindings are meant to be logical things that bind "physical" AST
elements dispursed through the tree. Obvious use of bindings are to link
declarations with references. But we've done some "interesting things" like
binding labels and the gotos to them.

For this, though, it might make more sense to add the information you need to
IASTPreprocessorIncludeStatement. I would have thought that some of this, e.g.
location information (offset, length) should have been there anyway.
(In reply to comment #1)
&gt; Good question. Bindings are meant to be logical things that bind "physical" AST
&gt; elements dispursed through the tree. Obvious use of bindings are to link
&gt; declarations with references. But we've done some "interesting things" like
&gt; binding labels and the gotos to them.
&gt; 

Interesting, I'm almost done with the CoreModel Builder base on the DOM.
When going throught the Dom AST, I use the binding because sometime it is the
only way to get the necessary info i.e. the binding wrap things nicely
where it could have been cumbersome to do it myself.

&gt; For this, though, it might make more sense to add the information you need to
&gt; IASTPreprocessorIncludeStatement. I would have thought that some of this, e.g.
&gt; location information (offset, length) should have been there anyway.

My thoughts too.   I get both the ASTFileLocation and the NodeLocation, I was
expecting the NodeLocation to give the right thing but no aval.
Be careful, though. The node location should represent the entire include
statement. If you need the location of the filename in the statement, you
probably need another location entry.

Bindings are good, but they do take time to compute. Use them sparingly. If
enough information is available in the AST, you shouldn't need to resolve the
binding. But there are times when it is necessary.
I have added the methods IASTPreprocessorIncludeStatement.getName() and IASTPreprocessorIncludeStatement.isSystemInclude().

Fixed in 4.0 &gt; 20061107.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106276" />
    <CreationDate amount="2005-08-06 06:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.UI.URLTest" />
    <Version amount="4.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="blocker" />
    <Summery>URLTest generates malformed HTTP requests</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. File -&gt; New -&gt; Other -&gt; Test -&gt; TPTP URL Test</Line>
          <Line>2. Add one HTTP request to the test</Line>
          <Line>3. Add one invocation to the test</Line>
          <Line>4. Save</Line>
          <Line>5. Right click -&gt; Generate</Line>
          <Line>6. Right click -&gt; Run As -&gt; Test</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>GET /TestWeb/testUseCase.do HTTP/1.1



HTTP/1.1 400 Bad Request

Transfer-Encoding: chunked

Date: Sat, 06 Aug 2005 09:57:14 GMT

Server: Apache-Coyote/1.1

Connection: close
The TPTP HTTP recorder records HTTP traffic exactly as it is generated by the 
browswer.  The GET request (and associated headers) are not modified in any 
way. This would indicate that the malformed HTTP request is actually generated 
by the browser. This doesn't make sense since I have never seen a browser 
generate a malformed request. Can you successfully navigate to this location 
when not performing a recording?  Is this website readily accessible from a 
location outside your intranet?

I will need to contact the bugzilla reported directly to get more information 
and attempt to recreate the problem and find a solution.  One thing I would 
like to see is the generated recording file (with .rec extension).  Please 
post this.


I wasn't clear on this, sorry. The bad HTTP request comes from the autogenerated
URL JUnit test case. Steps to reproduce.

1. File -&gt; New -&gt; Other -&gt; Test -&gt; TPTP URL Test
2. Add one HTTP request to the test
3. Add one invocation to the test
4. Save
5. Right click -&gt; Generate
6. Right click -&gt; Run As -&gt; Test

If you have eg. netcat listening on the appropriate port you can see the HTTP
request.
Created attachment 25869
Screen shot of the URLTest
I am reassigning this to the owner of JUnit Runner.  The problem seems to be 
with the code generation which occurs after the JUnit editor and before the 
JUnit runner. 
Reassigning to Test.UI.URLTest

Please provide URLTest.testsuite file.

Also, if possible provide:

URLTest.rec
URLTest.recmodel
URLTest.java  (this file should be in SOURCE_DIR/test/)

If you wish, just zip &amp; attach your entire workspace.
I will be holding an internal TPTP demo within my company in the near future.
I'll provide the information needed to reproduce this then.
Several further questions on this:

-Does this server error occur every time that one particular request is made? 
Or is it an intermittent problem?

- Have you tried to reproduce with any of the TPTP 4.1 development builds? Or 
do you only see this with 4.0?

- Can you provide the files requested above?
resolving.

Please reopen if bug still exists &amp; can provide requested information.
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. Since this defect is more than 2 years old, it may be no longer relevant. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this defect is resolved as WONTFIX. If this defect is still relevant and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>GET /TestWeb/testUseCase.do HTTP/1.1



HTTP/1.1 400 Bad Request

Transfer-Encoding: chunked

Date: Sat, 06 Aug 2005 09:57:14 GMT

Server: Apache-Coyote/1.1

Connection: close
The TPTP HTTP recorder records HTTP traffic exactly as it is generated by the 
browswer.  The GET request (and associated headers) are not modified in any 
way. This would indicate that the malformed HTTP request is actually generated 
by the browser. This doesn't make sense since I have never seen a browser 
generate a malformed request. Can you successfully navigate to this location 
when not performing a recording?  Is this website readily accessible from a 
location outside your intranet?

I will need to contact the bugzilla reported directly to get more information 
and attempt to recreate the problem and find a solution.  One thing I would 
like to see is the generated recording file (with .rec extension).  Please 
post this.


I wasn't clear on this, sorry. The bad HTTP request comes from the autogenerated
URL JUnit test case. Steps to reproduce.

1. File -&gt; New -&gt; Other -&gt; Test -&gt; TPTP URL Test
2. Add one HTTP request to the test
3. Add one invocation to the test
4. Save
5. Right click -&gt; Generate
6. Right click -&gt; Run As -&gt; Test

If you have eg. netcat listening on the appropriate port you can see the HTTP
request.
Created attachment 25869
Screen shot of the URLTest
I am reassigning this to the owner of JUnit Runner.  The problem seems to be 
with the code generation which occurs after the JUnit editor and before the 
JUnit runner. 
Reassigning to Test.UI.URLTest

Please provide URLTest.testsuite file.

Also, if possible provide:

URLTest.rec
URLTest.recmodel
URLTest.java  (this file should be in SOURCE_DIR/test/)

If you wish, just zip &amp; attach your entire workspace.
I will be holding an internal TPTP demo within my company in the near future.
I'll provide the information needed to reproduce this then.
Several further questions on this:

-Does this server error occur every time that one particular request is made? 
Or is it an intermittent problem?

- Have you tried to reproduce with any of the TPTP 4.1 development builds? Or 
do you only see this with 4.0?

- Can you provide the files requested above?
resolving.

Please reopen if bug still exists &amp; can provide requested information.
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. Since this defect is more than 2 years old, it may be no longer relevant. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this defect is resolved as WONTFIX. If this defect is still relevant and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106277" />
    <CreationDate amount="2005-08-06 06:19:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.Agents.Recorder" />
    <Version amount="4.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>(Test) Cannot create test recording</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>When trying to create new test recording on Linux error dialog appears which
complains about IE and SOCKS proxy.
Created attachment 25803
Screen shot
Application to record is set to Firefox in the HTTP Recorder options
The error message is stating that we do not support recording through a SOCKS 
proxy.  We only support recording that goes through an HTTP proxy or a direct 
connection.  The recorder detected (by reading it in the preferences file) 
that your browser is configured to communicate with the internet through a 
SOCKS proxy.

The error message incorrectly states that you are using IE as your browser.  I 
have modified the error message (as of 8/4/2005).  

To record successfully, you will have to configure your browser (before 
starting a recording) to either go directly to the internet or through an HTTP 
proxy. 
Since this bug is really pointing out a configuration we do not support, I am 
downgrading to normal.  We do not support recording through a SOCKS proxy.  I 
will leave it open until a successful recording is accomplished utilizing one 
of the supported configurations.

The recorder uses the socks proxy protocol for internal communication from 
browser to recorder when the default configuration is for a direct connection 
to the internet.  If the recorder aborts, the SOCKS setting can remain which 
would cause this error message to be displayed.  You should de-select the 
SOCKS proxy in the browser configuration(as the error message suggests) and 
start the recording again.

A case could be made that we should detect that the recorder previously 
aborted, and clean up (reset the configuration as it was before the 
recording).  I will open a new defect that embodies this problem.   
Added (Test) to summary and target to 4.1i1.
No longer a problem. 
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithStack>
    <WithOutStack>When trying to create new test recording on Linux error dialog appears which
complains about IE and SOCKS proxy.
Created attachment 25803
Screen shot
Application to record is set to Firefox in the HTTP Recorder options
The error message is stating that we do not support recording through a SOCKS 
proxy.  We only support recording that goes through an HTTP proxy or a direct 
connection.  The recorder detected (by reading it in the preferences file) 
that your browser is configured to communicate with the internet through a 
SOCKS proxy.

The error message incorrectly states that you are using IE as your browser.  I 
have modified the error message (as of 8/4/2005).  

To record successfully, you will have to configure your browser (before 
starting a recording) to either go directly to the internet or through an HTTP 
proxy. 
Since this bug is really pointing out a configuration we do not support, I am 
downgrading to normal.  We do not support recording through a SOCKS proxy.  I 
will leave it open until a successful recording is accomplished utilizing one 
of the supported configurations.

The recorder uses the socks proxy protocol for internal communication from 
browser to recorder when the default configuration is for a direct connection 
to the internet.  If the recorder aborts, the SOCKS setting can remain which 
would cause this error message to be displayed.  You should de-select the 
SOCKS proxy in the browser configuration(as the error message suggests) and 
start the recording again.

A case could be made that we should detect that the recorder previously 
aborted, and clean up (reset the configuration as it was before the 
recording).  I will open a new defect that embodies this problem.   
Added (Test) to summary and target to 4.1i1.
No longer a problem. 
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106278" />
    <CreationDate amount="2005-08-06 06:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.Agents.Recorder" />
    <Version amount="4.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>NPE creating HTTP Recording with Mozilla as the browser</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>a.  In preferences, select "Application to record:" as None.</Line>
          <Line>b.  Start a recording</Line>
          <Line>c.  Bring up your browser and configure it to Manual Proxy, using Socks Host</Line>
          <Line>of localhost, socks port 1080, and using SOCKS4</Line>
          <Line>d.  Browse wherever you want.</Line>
          <Line>e.  When finished browsing, click "Stop Recording" button. A test will be</Line>
          <Line>generated.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Select Mozilla as the application to record in the HTTP Recording options.
Create new HTTP recording.

Linux version 2.6.12-1.1398_FC4

java version "1.5.0_04"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_04-b05)
Java HotSpot(TM) Client VM (build 1.5.0_04-b05, mixed mode, sharing)
Created attachment 25804
Stack trace
The first thing to try is to make sure the recorder can find the mozilla 
executable. This is explained below. The most likely problem is that we can 
not find the prefs.js file.  We support Mozilla 1.7 and above - in which the 
prefs.js file is found in the following location (which includes the 
random "salt" directory):

~/.mozilla/[Linux Login Name]/[random string].slt/prefs.js.

If your version of Mozilla does not have the prefs.js file located as shown 
above, we can not automatically configure your browser to use the HTTP 
recorder.  However, you can still record, but you must manually point your 
browser to 'talk' to the recorder at the port we are listening (localhost:1080 
using Socks 4 proxy).  This is explained in the documentation, but I will 
briefly outline how to do it:

a.  In preferences, select "Application to record:" as None.
b.  Start a recording
c.  Bring up your browser and configure it to Manual Proxy, using Socks Host 
of localhost, socks port 1080, and using SOCKS4
d.  Browse wherever you want.
e.  When finished browsing, click "Stop Recording" button. A test will be 
generated. 

The TPTP 4.0 HTTP Recorder assumes that Mozilla and Firefox are located in the 
default location on your workstation.  The default location for Mozilla on 
Linux is: /usr/local/mozilla/mozilla.  The default location for Firefox 
is: /usr/local/firefox-installer/firefox .  However, if either is not located 
in the default location, you can specify where it is so the HTTP Recorder can 
find it and use it.  If the recorder can not find Mozilla or Firefox, it 
should give you an error message (but it currently does not).  I will make 
sure that an error message is displayed if it can not find the browser in TPTP 
4.1.

There is a 'hidden' feature that allows the user to specify where Firefox and 
Mozilla are located on your system (either Windows or Linux).  This 
information was not added to the documentation because I added this feature 
after changes to the documentation were frozen.  It TPTP 4.1, the user will be 
able to specify where the browser is located via the Preferences.

You specify the physical location of the  Mozilla and Firefox browser by 
creating a file named recorderPathFile and placing the path in there.  This 
file must be located in the same directory as the "testkeys" file.  The 
easiest way to determine where to put the recorderPathFile is to perform a 
search for "testkeys" (without the quotes).  When you find this file, create a 
new text file (using vi) in the same directory, and name the file 
recorderPathFile.  On my machine the path for testkeys is:  
$ECLIPSE_INSTALL_DIR\plugins\org.eclipse.hyades.test.tools.ui_4.0.0\testkeys" 
where ECLIPSE_INSTALL_DIR is where Eclipse is installed. Therefore, the new 
file I create is : 
$ECLIPSE_INSTALL_DIR\plugins\org.eclipse.hyades.test.tools.ui_4.0.0
\recorderPathFile" .  It must be created with full access permissions for the 
person recording. 

On Linux, the contents of the recorderPathFile should be similar to this 
(except for the path) :
Mozilla:/usr/local/mozilla/mozilla
Firefox:/usr/local/firefox-installer/firefox


In the example above, you would begin the line with "Mozilla:" or "FireFox:" 
(without the quotes), then place the full path of the mozilla executable on 
your system (including the executable name). Do not use environment variables 
as they will not be expanded.  In your example, you would 
replace  /usr/local/mozilla with the path on your machine to the mozilla 
executable.

If you are on the Windows platform, make sure you place double slashes ("\\") 
between directories.  For example, if I  had Firefox at D:\My 
Apps\Firefox\firefox.exe, my entry would be as follows:

Firefox:D:\\My Apps\\Firefox\\firefox.exe

Just save the file as a text file, and the recorder should be able to find it.

If any of these suggestions work, let me know which worked.  If none of them 
work, let me know and I will continuing investigating.
I managed to get Mozilla recording working with following steps

recorderPathFile contents

Mozilla:/usr/bin/mozilla
Firefox:/usr/bin/firefox

and

ln -s default [my linux login name] in the ~/-mozilla dir

My prefs.js file is in

~/.mozilla/default/[random salt].slt/prefs.js


I also managed to get recording working by manually configuring the SOCKS 4
proxy in the browser.

I'm not sure but using [linux login name] is wrong because we're talking about
Mozilla profile name which might or might not be your linux login name. The
default profile is under "default" directory and additional profiles are under
[profile name] directory. Firefox profile (I think firefox does not support
multiple profiles) is under ~/.mozilla/firefox

These are for vanilla Fedora Core 4, Firefox 1.0.6 and Mozilla 1.7.10.
Thanks for your information about using Mozilla and Firefox on Linux.  I have 
done testing, but you always find out new things when others test your 
implementation.  

For the Mozilla preference file, I read on the mozilla website where to find 
the prefs.js and user.js file.   I did a fresh install of Mozilla, and erased 
my old .mozilla directory, and created a profile where the website said.  
However, after receiving your information, I found that if you don't create a 
profile, the preferences are located where you said - ~/.mozilla/default/
[random salt].slt/prefs.js .  Therefore, I am changing my code today to look 
in the default directory below .mozilla like you said. You have helped me find 
another bug in my implementation.

I am using this defect to indicate the Mozilla preference file location is 
incorrect which caused a NPE.  
Modified the preference file location for Mozilla on Linux to be 
~/.mozilla/default/[random string].slt/prefs.js and 
~/.mozilla/default/[random string].slt/user.js.  I tested this on RHEL.
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithStack>
    <WithOutStack>Select Mozilla as the application to record in the HTTP Recording options.
Create new HTTP recording.

Linux version 2.6.12-1.1398_FC4

java version "1.5.0_04"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_04-b05)
Java HotSpot(TM) Client VM (build 1.5.0_04-b05, mixed mode, sharing)
Created attachment 25804
Stack trace
The first thing to try is to make sure the recorder can find the mozilla 
executable. This is explained below. The most likely problem is that we can 
not find the prefs.js file.  We support Mozilla 1.7 and above - in which the 
prefs.js file is found in the following location (which includes the 
random "salt" directory):

~/.mozilla/[Linux Login Name]/[random string].slt/prefs.js.

If your version of Mozilla does not have the prefs.js file located as shown 
above, we can not automatically configure your browser to use the HTTP 
recorder.  However, you can still record, but you must manually point your 
browser to 'talk' to the recorder at the port we are listening (localhost:1080 
using Socks 4 proxy).  This is explained in the documentation, but I will 
briefly outline how to do it:

a.  In preferences, select "Application to record:" as None.
b.  Start a recording
c.  Bring up your browser and configure it to Manual Proxy, using Socks Host 
of localhost, socks port 1080, and using SOCKS4
d.  Browse wherever you want.
e.  When finished browsing, click "Stop Recording" button. A test will be 
generated. 

The TPTP 4.0 HTTP Recorder assumes that Mozilla and Firefox are located in the 
default location on your workstation.  The default location for Mozilla on 
Linux is: /usr/local/mozilla/mozilla.  The default location for Firefox 
is: /usr/local/firefox-installer/firefox .  However, if either is not located 
in the default location, you can specify where it is so the HTTP Recorder can 
find it and use it.  If the recorder can not find Mozilla or Firefox, it 
should give you an error message (but it currently does not).  I will make 
sure that an error message is displayed if it can not find the browser in TPTP 
4.1.

There is a 'hidden' feature that allows the user to specify where Firefox and 
Mozilla are located on your system (either Windows or Linux).  This 
information was not added to the documentation because I added this feature 
after changes to the documentation were frozen.  It TPTP 4.1, the user will be 
able to specify where the browser is located via the Preferences.

You specify the physical location of the  Mozilla and Firefox browser by 
creating a file named recorderPathFile and placing the path in there.  This 
file must be located in the same directory as the "testkeys" file.  The 
easiest way to determine where to put the recorderPathFile is to perform a 
search for "testkeys" (without the quotes).  When you find this file, create a 
new text file (using vi) in the same directory, and name the file 
recorderPathFile.  On my machine the path for testkeys is:  
$ECLIPSE_INSTALL_DIR\plugins\org.eclipse.hyades.test.tools.ui_4.0.0\testkeys" 
where ECLIPSE_INSTALL_DIR is where Eclipse is installed. Therefore, the new 
file I create is : 
$ECLIPSE_INSTALL_DIR\plugins\org.eclipse.hyades.test.tools.ui_4.0.0
\recorderPathFile" .  It must be created with full access permissions for the 
person recording. 

On Linux, the contents of the recorderPathFile should be similar to this 
(except for the path) :
Mozilla:/usr/local/mozilla/mozilla
Firefox:/usr/local/firefox-installer/firefox


In the example above, you would begin the line with "Mozilla:" or "FireFox:" 
(without the quotes), then place the full path of the mozilla executable on 
your system (including the executable name). Do not use environment variables 
as they will not be expanded.  In your example, you would 
replace  /usr/local/mozilla with the path on your machine to the mozilla 
executable.

If you are on the Windows platform, make sure you place double slashes ("\\") 
between directories.  For example, if I  had Firefox at D:\My 
Apps\Firefox\firefox.exe, my entry would be as follows:

Firefox:D:\\My Apps\\Firefox\\firefox.exe

Just save the file as a text file, and the recorder should be able to find it.

If any of these suggestions work, let me know which worked.  If none of them 
work, let me know and I will continuing investigating.
I managed to get Mozilla recording working with following steps

recorderPathFile contents

Mozilla:/usr/bin/mozilla
Firefox:/usr/bin/firefox

and

ln -s default [my linux login name] in the ~/-mozilla dir

My prefs.js file is in

~/.mozilla/default/[random salt].slt/prefs.js


I also managed to get recording working by manually configuring the SOCKS 4
proxy in the browser.

I'm not sure but using [linux login name] is wrong because we're talking about
Mozilla profile name which might or might not be your linux login name. The
default profile is under "default" directory and additional profiles are under
[profile name] directory. Firefox profile (I think firefox does not support
multiple profiles) is under ~/.mozilla/firefox

These are for vanilla Fedora Core 4, Firefox 1.0.6 and Mozilla 1.7.10.
Thanks for your information about using Mozilla and Firefox on Linux.  I have 
done testing, but you always find out new things when others test your 
implementation.  

For the Mozilla preference file, I read on the mozilla website where to find 
the prefs.js and user.js file.   I did a fresh install of Mozilla, and erased 
my old .mozilla directory, and created a profile where the website said.  
However, after receiving your information, I found that if you don't create a 
profile, the preferences are located where you said - ~/.mozilla/default/
[random salt].slt/prefs.js .  Therefore, I am changing my code today to look 
in the default directory below .mozilla like you said. You have helped me find 
another bug in my implementation.

I am using this defect to indicate the Mozilla preference file location is 
incorrect which caused a NPE.  
Modified the preference file location for Mozilla on Linux to be 
~/.mozilla/default/[random string].slt/prefs.js and 
~/.mozilla/default/[random string].slt/user.js.  I tested this on RHEL.
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106279" />
    <CreationDate amount="2005-08-06 10:35:00 -0400" />
    <DupId amount="168924" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>DOM Parser parses parenthesized expressions incorrectly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="153" end="172" />
        <code>int foux=0, bhar=0;</code>
      </source_code>
      <source_code type="assignment">
        <location start="173" end="194" />
        <code>foux = (foux) - bhar;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1) the .qualifier needs to stay on the Bundle-Version in the manifest.  At most, the version would change to 3.1.1.qualifier</Line>
          <Line>2) This TypeScopeStack would not work for C++.  This patch only applies to C and will break C++.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hello,
There's a bug in the DOM parser that parses a parenthesized expression as a 
cast expression.  The following code shows a simple example:

&lt;code&gt;
int foux=0, bhar=0;
foux = (foux) - bhar;
&lt;/code&gt;

The parenthesized "foux" gets parsed as an IASTCastExpression rather than an 
IASTUnaryExpression, and thus creates a ProblemBinding for the IASTName 
reference.
Created attachment 51238
patch to fix incorrect identification of cast
the patch i attached is for the latest head.  if someone wants the patch for 3.0 also I could provide it.

Comment on attachment 51238
patch to fix incorrect identification of cast

After a quick look at this patch, I have to vote -1 :
1) the .qualifier needs to stay on the Bundle-Version in the manifest.  At most, the version would change to 3.1.1.qualifier
2) This TypeScopeStack would not work for C++.  This patch only applies to C and will break C++.

There already exists an ambiguity resolution mechanism that should be used here.  See IASTAmbiguityParent and CAmbiguity/CPPAmbiguity.  John would know the details of how to use this better than I.

See also bug 100641 which is the same kind of problem.
I agree with Andrew. Without looking up what foux is, this expression is ambiguous. And, yes, John C is the only one who knows about this stuff.
Is John C still working on the project.  the last time I  spoke to him he wasn't.  i'm certainly willing to learn here.

so how does one disambiguate in this case and bug 100641?  Should these two bugs be changed to be closed or not bugs?

alternatively, why does the stack not work in c++?  i've not used it in vain there.
John chips in once in a while but not very regulary. Unfortulately you may have to learn directly from the source code. :(
i took a look at IASTAmbiguityParent which just enables one to substitute AST nodes.  The problem with trying to fix this once the AST has been constructed is that it could require a lot of rewriting of the AST with re-intepretation. The example given requires the cast expression (foux) to be changed to a unary bracket expression and the unary '- bhar' to a binary expression!  This is a simple case.

Why is ambiguity easier to disambiguate after AST construction?  Or is this a question of complexity?

The CAmbiguity/CPPAmbiguity are not used in the case of cast, so the parser does not detect the ambiguity itself.  The parser interperets (foux) as a cast.

Would a version of the patch I posted that supports c++ be acceptable?

Ambiguity nodes were created because we wanted to minimize the processing required during AST construction. Parsing has historically been too slow, and it still is. To speed things up, we moved all semantic processing to post parse time, and then only when necessary. If no one cares about the details, the ambiguity nodes do not need to be resolved.

Ambiguity nodes are hard to construct and resolve but they do save us in the end.
&gt; Would a version of the patch I posted that supports c++ be acceptable?
This strategy would not work for C++.  Scopes don't stack in the same way, you need full semantic resolution for the relevant nodes.  To get it right you would essentially be duplicating a lot of the binding resolution and merging it with the syntax parse.  We split semantic resolution out for performance and complexity reasons, this is the biggest difference between the old parser and the DOM parser.

&gt; Why is ambiguity easier to disambiguate after AST construction?
See for example bug 90606, sometimes the required information appears later in the parse.

&gt;The problem with trying to fix this once the AST has been constructed
is that it could require a lot of rewriting of the AST with re-intepretation.
I'm not sure you got this right.  We parse both possibilities and create full AST subtrees for each.  Any complexities with choosing the right subtree and replacing the ambiguity have already been solved.  Step through, for example, AST2CPPTests.testAmbiguity(), to get an idea. (or try the typeid vs unary expression from 90606).
ok, i understand that this solution won't ever work for C++.

so, could you confirm for the follow (based on the example code)

1. an ambiguity node needs to be constructed for the cast (foux)
2. an ambiguity node is not currently constructed for the cast (in the example code)

if this is the case, what is still unclear to me is how to detect the ambiguity? it doesn't seem reasonable to create an ambiguity node for every cast.

i am very happy to resolve this problem, but the resolution is still unclear to me. i also haven't got a response back from JohnC yet.
Future means you commit to fix it in the Future. Inboxes can't make committments. Moving to '--'.
Created testcase AST2Tests.testBug100641_106279_castAmbiguity().
Fixed with bug 168924.

*** This bug has been marked as a duplicate of bug 168924 ***</WithStack>
    <WithOutStack>Hello,
There's a bug in the DOM parser that parses a parenthesized expression as a 
cast expression.  The following code shows a simple example:

&lt;code&gt;
int foux=0, bhar=0;
foux = (foux) - bhar;
&lt;/code&gt;

The parenthesized "foux" gets parsed as an IASTCastExpression rather than an 
IASTUnaryExpression, and thus creates a ProblemBinding for the IASTName 
reference.
Created attachment 51238
patch to fix incorrect identification of cast
the patch i attached is for the latest head.  if someone wants the patch for 3.0 also I could provide it.

Comment on attachment 51238
patch to fix incorrect identification of cast

After a quick look at this patch, I have to vote -1 :
1) the .qualifier needs to stay on the Bundle-Version in the manifest.  At most, the version would change to 3.1.1.qualifier
2) This TypeScopeStack would not work for C++.  This patch only applies to C and will break C++.

There already exists an ambiguity resolution mechanism that should be used here.  See IASTAmbiguityParent and CAmbiguity/CPPAmbiguity.  John would know the details of how to use this better than I.

See also bug 100641 which is the same kind of problem.
I agree with Andrew. Without looking up what foux is, this expression is ambiguous. And, yes, John C is the only one who knows about this stuff.
Is John C still working on the project.  the last time I  spoke to him he wasn't.  i'm certainly willing to learn here.

so how does one disambiguate in this case and bug 100641?  Should these two bugs be changed to be closed or not bugs?

alternatively, why does the stack not work in c++?  i've not used it in vain there.
John chips in once in a while but not very regulary. Unfortulately you may have to learn directly from the source code. :(
i took a look at IASTAmbiguityParent which just enables one to substitute AST nodes.  The problem with trying to fix this once the AST has been constructed is that it could require a lot of rewriting of the AST with re-intepretation. The example given requires the cast expression (foux) to be changed to a unary bracket expression and the unary '- bhar' to a binary expression!  This is a simple case.

Why is ambiguity easier to disambiguate after AST construction?  Or is this a question of complexity?

The CAmbiguity/CPPAmbiguity are not used in the case of cast, so the parser does not detect the ambiguity itself.  The parser interperets (foux) as a cast.

Would a version of the patch I posted that supports c++ be acceptable?

Ambiguity nodes were created because we wanted to minimize the processing required during AST construction. Parsing has historically been too slow, and it still is. To speed things up, we moved all semantic processing to post parse time, and then only when necessary. If no one cares about the details, the ambiguity nodes do not need to be resolved.

Ambiguity nodes are hard to construct and resolve but they do save us in the end.
&gt; Would a version of the patch I posted that supports c++ be acceptable?
This strategy would not work for C++.  Scopes don't stack in the same way, you need full semantic resolution for the relevant nodes.  To get it right you would essentially be duplicating a lot of the binding resolution and merging it with the syntax parse.  We split semantic resolution out for performance and complexity reasons, this is the biggest difference between the old parser and the DOM parser.

&gt; Why is ambiguity easier to disambiguate after AST construction?
See for example bug 90606, sometimes the required information appears later in the parse.

&gt;The problem with trying to fix this once the AST has been constructed
is that it could require a lot of rewriting of the AST with re-intepretation.
I'm not sure you got this right.  We parse both possibilities and create full AST subtrees for each.  Any complexities with choosing the right subtree and replacing the ambiguity have already been solved.  Step through, for example, AST2CPPTests.testAmbiguity(), to get an idea. (or try the typeid vs unary expression from 90606).
ok, i understand that this solution won't ever work for C++.

so, could you confirm for the follow (based on the example code)

1. an ambiguity node needs to be constructed for the cast (foux)
2. an ambiguity node is not currently constructed for the cast (in the example code)

if this is the case, what is still unclear to me is how to detect the ambiguity? it doesn't seem reasonable to create an ambiguity node for every cast.

i am very happy to resolve this problem, but the resolution is still unclear to me. i also haven't got a response back from JohnC yet.
Future means you commit to fix it in the Future. Inboxes can't make committments. Moving to '--'.
Created testcase AST2Tests.testBug100641_106279_castAmbiguity().
Fixed with bug 168924.

*** This bug has been marked as a duplicate of bug 168924 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106280" />
    <CreationDate amount="2005-08-06 10:41:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Releng" />
    <component amount="releng" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Local Builds and Local Tests should be easy to reproduce</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="21">
        <Lines>
          <Line>1.First checks enviroment variables(JAVA_HOME,ANT_HOME,CVS_HOME).If one them</Line>
          <Line>does not exists</Line>
          <Line>promts for valid path until finds neccesary files(For java tools.jar,for ant</Line>
          <Line>ant.bat etc...)</Line>
          <Line />
          <Line />
          <Line>2.Then user is prompted for BUILD_HOME for local build operation.If  specified</Line>
          <Line>path does not exists</Line>
          <Line>it is created.Either case build starts in the specified path.</Line>
          <Line />
          <Line />
          <Line>3.org.eclipse.releng.basebuilder, releng.builder, releng  are checked</Line>
          <Line>in the BUILD_HOME (wheter they exists or not).</Line>
          <Line>If exists ask for continue else they are directly</Line>
          <Line>downloaded(in this step tag name is prompted but it</Line>
          <Line>should be valid ,if not you will be prompted for</Line>
          <Line>valid tag until again and again )</Line>
          <Line />
          <Line>4.After all tasks are finished build operation starts.</Line>
          <Line>Created attachment 26443</Line>
          <Line>local build starter script for linux</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="8">
        <Lines>
          <Line>1. First checks enviroment variables(JAVA_HOME,ANT_HOME,CVS_HOME)</Line>
          <Line>2. User is prompted for BUILD_HOME</Line>
          <Line>3. org.eclipse.releng.basebuilder, releng are downloaded</Line>
          <Line>4. User is NOT prompted for cvs tag of releng.wtpbuilder. That tag</Line>
          <Line>is retrieved from releng/maps/build.cfg as wtpBuilderVersion and</Line>
          <Line>releng.wtpbuilder with tag is downloaded.</Line>
          <Line>5. User is promped for mapVersionTag</Line>
          <Line>6. build, site, test, site tasks are run sequentially</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Several recent notes on wtp-releng have demonstrated at "local builds" are 
not easy to do in a predictable, well documented, easy-to-do way 

on windows as well as linux

entirely from the command line ... preferably with one or two "bat" files, 
with the bat files being "bullet proof", checking for pre-reqs, giving meaningful 
error messages if not met. (See the ant.bat in the apache ant distribution for
what I consider a "well behaved" bat file).
One thing I've noticed, at least as a stated requirement, is that the java
executable (java.exe) be the machine's path. I don't think this is good, since 
many of us use many different versions and configurations of Java and putting 
java on the machine global path is typically not a good practice (similar for
CLASSPATH). 

So, our local builds should not require that. 

Another thing I've noticed that's "hard" about local builds, is that its near
impossible to "see the results" of compile errors or tests results. 

This is because the main results are "hidden" in PHP files that much be 
"served up" to view easily. 

We should fix this so there's some easy to observe results that could be 
read in a text file, or something (where, for examples, just compile errors and 
test failures, errors, and total number of tests are summarized. 
Another thing I've noticed, is some docs/people recommend editing things in
build.cfg and/or properties files in releng.builder ... but IMHO, nothing in the
"standard downloads" should have to be editing, since that just begs for errors
to creap in. (or, differences between "local builds" if someone forgets to
mention or document what they changed). 

I'll attach two example bat files, that i think are the start of what should
work for "completely fresh local build" ... though, they currently do not (at
least on my machine) ... I intend them as starting examples only, to be improved
upon. 

Created attachment 25805
windows bat file to get correct versions of builder projects

This is example only ... a starting point of what I'd eventually like to 
see us maintain for windows and linux.
Created attachment 25806
example command file to do local build

This is intented only as staring point example. Hopefully we can improve it
greatly. But I do think we should maintain a command file that can "live"
outside the releng.builder project but runs the scripts found there. This file
should require a minimum of "machine specific" information to be supplied by
user.
Created attachment 25807
console log showing that tests are not ran with other attached commands

Using the "getFromCVS" script and the "runBuild" commands, I can get a build to
be created, but then get an error when the JUnit tests are attempted to be ran.


Perhaps readers of this bug can spot "obvious error" on my part?
See also bug 106288 which I think is part of reason "local tests" won't run on
fresh machine. 


FYI .. see also bug 106290 for tracking that the HEAD version of basebuilder not
working ... we'll see what they say, and we may need to respond eventually ...
but, for our immediate use, we should use a tagged version of basebuilder, as I
mentioned in bug 105947.
Created attachment 25844
Corrected "get" bat file

This batch file gets the required projects (eclipsebuilder was not needed) and
we now get tagged version R0_7B of releng to pick up tiny fix for bug 106288.
Created attachment 26170
local build batch file(all in one)

This batch file makes local build operation easier.
All neccessary commands are gathered in one batch file.

1.First checks enviroment variables(JAVA_HOME,ANT_HOME,CVS_HOME).If one them
does not exists
promts for valid path until finds neccesary files(For java tools.jar,for ant
ant.bat etc...)


2.Then user is prompted for BUILD_HOME for local build operation.If  specified
path does not exists
it is created.Either case build starts in the specified path.


3.org.eclipse.releng.basebuilder, releng.builder, releng  are checked 
in the BUILD_HOME (wheter they exists or not).
If exists ask for continue else they are directly 
downloaded(in this step tag name is prompted but it
should be valid ,if not you will be prompted for
valid tag until again and again )

4.After all tasks are finished build operation starts.
Created attachment 26443
local build starter script for linux

bash script that works the same way as the previously attatched batch script.
any comments on both scripts are welcome :)
I really like the windows one (though, will comment it uses 'rm' which I do not
think is windows standard ... I'd suggest rmdir /r /q instead. 

I can not get the linux one to work though. 
Is 'checktool' non-standard? Or am I missing some 
basic assumption?

I get following error in console
: command not found.sh: line 2:
'/wtp-build-starter.sh: line 4: syntax error near unexpected token `
'/wtp-build-starter.sh: line 4: `checkTool()


Created attachment 26573
fixes on linux batch (bash)

First line was "#! /bin/sh" and changed to "#!/bin/sh" that 
was the first and fatal bug in the script :). 

A few corrections was made in other parts of the script.

Finally the script runs and all the things go fine until the last line
that starts the ant build. ( Mandrake 9.0 )

ant says  
[java] Exception in thread "main" java.lang.NoClassDefFoundError:
org/eclipse/core/launcher/Main

BUILD FAILED
/home/ba/wtp-build/releng.builder/scripts/cruise.xml:8: Java returned: 1


I missed some parameter(s) i guess.
I'm pretty sure the baseos should be 'gtk' (not 'linux') .. but .. doesn't help
the class not found error. 

Too bad it doesn't work (so far).


whoops, I meant basews of course, not baseos
Created attachment 26609
linux starter script working until tests

in this draft:
"-Declipse.builder=$BUILD_HOME/org.eclipse.releng.basebuilder"
parameter changed to
"-Declipse.builder=org.eclipse.releng.basebuilder"

build starts and all the things go fine until tests;

"
     [java] runTestEclipse:

     [java] BUILD FAILED
     [java] /home/ba/wtp-build/releng.builder/scripts/buildAll.xml:123: The
following error occurred while executing this line:
     [java] /home/ba/wtp-build/releng.builder/scripts/buildAll.xml:142: The
following error occurred while executing this line:
     [java] /home/ba/wtp-build/releng.builder/scripts/buildAll.xml:630: The
following error occurred while executing this line:
     [java] /home/ba/wtp-build/releng.builder/scripts/buildAll.xml:385: Java
returned: 13

     [java] Total time: 213 minutes 13 seconds
"
the latest linux script in comment 16 didn't help me, I got basically same error
message. 

I typically create /home/build-home
and put the script in that directory and run it from a shell with that as 
the "current directory". 
Does that "starting point" matter?

Created attachment 26701
windows batch file (working  fine)

"rm -rf" changed to "RMDIR  /Q /S"
and this one is not effected from paths containig spaces. ( "Program Files" :)
)

this one works fine and seems to be done.

any additions like more user friendly messages, or something else?
It doesnt matter where you put your script and which path you give as
build home. It works same as the windows batch file.

But I have used full paths when testing the script. Thus I didnt try out "."
(current directory) as build home. I will try out this case as soon as possible.

Currently I am working on the linux script to solve the problem that test doesnt
run. Seems like "basews" problem and I will prompt this param from user because 
there are more than one "basews" s in linux. 

All other params to ant seems static for linux.
The builder server uses the following for redhat linux:

baseos=linux
basews=gtk
basearch=x86
Created attachment 28976
wtp-build-starter.cmd (updated for releng.wtpbuilder)

this script uses org.eclipse.releng.basebuilder, releng and releng.wtpbuilder
for local build.

Script runs as;
1. First checks enviroment variables(JAVA_HOME,ANT_HOME,CVS_HOME)
2. User is prompted for BUILD_HOME
3. org.eclipse.releng.basebuilder, releng are downloaded
4. User is NOT prompted for cvs tag of releng.wtpbuilder. That tag
is retrieved from releng/maps/build.cfg as wtpBuilderVersion and 
releng.wtpbuilder with tag is downloaded.
5. User is promped for mapVersionTag
6. build, site, test, site tasks are run sequentially

This script works with org.eclipse.releng.basebuilder=R3_1, 
releng=HEAD, and mapVersionTag=HEAD
I think "major" goes against our guidelines, and while this is still important, 
and while we have made progress, there is a few more things I want to do before closing. 


closing as fixed. 

The current system still needs improvement, but is different enough from when this bug started that we should start again, if/when someone has contributions to make. 

Thanks for all the contributions here. The knowledge I learned here has helped, even if patches not directly used.</WithStack>
    <WithOutStack>Several recent notes on wtp-releng have demonstrated at "local builds" are 
not easy to do in a predictable, well documented, easy-to-do way 

on windows as well as linux

entirely from the command line ... preferably with one or two "bat" files, 
with the bat files being "bullet proof", checking for pre-reqs, giving meaningful 
error messages if not met. (See the ant.bat in the apache ant distribution for
what I consider a "well behaved" bat file).
One thing I've noticed, at least as a stated requirement, is that the java
executable (java.exe) be the machine's path. I don't think this is good, since 
many of us use many different versions and configurations of Java and putting 
java on the machine global path is typically not a good practice (similar for
CLASSPATH). 

So, our local builds should not require that. 

Another thing I've noticed that's "hard" about local builds, is that its near
impossible to "see the results" of compile errors or tests results. 

This is because the main results are "hidden" in PHP files that much be 
"served up" to view easily. 

We should fix this so there's some easy to observe results that could be 
read in a text file, or something (where, for examples, just compile errors and 
test failures, errors, and total number of tests are summarized. 
Another thing I've noticed, is some docs/people recommend editing things in
build.cfg and/or properties files in releng.builder ... but IMHO, nothing in the
"standard downloads" should have to be editing, since that just begs for errors
to creap in. (or, differences between "local builds" if someone forgets to
mention or document what they changed). 

I'll attach two example bat files, that i think are the start of what should
work for "completely fresh local build" ... though, they currently do not (at
least on my machine) ... I intend them as starting examples only, to be improved
upon. 

Created attachment 25805
windows bat file to get correct versions of builder projects

This is example only ... a starting point of what I'd eventually like to 
see us maintain for windows and linux.
Created attachment 25806
example command file to do local build

This is intented only as staring point example. Hopefully we can improve it
greatly. But I do think we should maintain a command file that can "live"
outside the releng.builder project but runs the scripts found there. This file
should require a minimum of "machine specific" information to be supplied by
user.
Created attachment 25807
console log showing that tests are not ran with other attached commands

Using the "getFromCVS" script and the "runBuild" commands, I can get a build to
be created, but then get an error when the JUnit tests are attempted to be ran.


Perhaps readers of this bug can spot "obvious error" on my part?
See also bug 106288 which I think is part of reason "local tests" won't run on
fresh machine. 


FYI .. see also bug 106290 for tracking that the HEAD version of basebuilder not
working ... we'll see what they say, and we may need to respond eventually ...
but, for our immediate use, we should use a tagged version of basebuilder, as I
mentioned in bug 105947.
Created attachment 25844
Corrected "get" bat file

This batch file gets the required projects (eclipsebuilder was not needed) and
we now get tagged version R0_7B of releng to pick up tiny fix for bug 106288.
Created attachment 26170
local build batch file(all in one)

This batch file makes local build operation easier.
All neccessary commands are gathered in one batch file.

1.First checks enviroment variables(JAVA_HOME,ANT_HOME,CVS_HOME).If one them
does not exists
promts for valid path until finds neccesary files(For java tools.jar,for ant
ant.bat etc...)


2.Then user is prompted for BUILD_HOME for local build operation.If  specified
path does not exists
it is created.Either case build starts in the specified path.


3.org.eclipse.releng.basebuilder, releng.builder, releng  are checked 
in the BUILD_HOME (wheter they exists or not).
If exists ask for continue else they are directly 
downloaded(in this step tag name is prompted but it
should be valid ,if not you will be prompted for
valid tag until again and again )

4.After all tasks are finished build operation starts.
Created attachment 26443
local build starter script for linux

bash script that works the same way as the previously attatched batch script.
any comments on both scripts are welcome :)
I really like the windows one (though, will comment it uses 'rm' which I do not
think is windows standard ... I'd suggest rmdir /r /q instead. 

I can not get the linux one to work though. 
Is 'checktool' non-standard? Or am I missing some 
basic assumption?

I get following error in console
: command not found.sh: line 2:
'/wtp-build-starter.sh: line 4: syntax error near unexpected token `
'/wtp-build-starter.sh: line 4: `checkTool()


Created attachment 26573
fixes on linux batch (bash)

First line was "#! /bin/sh" and changed to "#!/bin/sh" that 
was the first and fatal bug in the script :). 

A few corrections was made in other parts of the script.

Finally the script runs and all the things go fine until the last line
that starts the ant build. ( Mandrake 9.0 )

ant says  
[java] Exception in thread "main" java.lang.NoClassDefFoundError:
org/eclipse/core/launcher/Main

BUILD FAILED
/home/ba/wtp-build/releng.builder/scripts/cruise.xml:8: Java returned: 1


I missed some parameter(s) i guess.
I'm pretty sure the baseos should be 'gtk' (not 'linux') .. but .. doesn't help
the class not found error. 

Too bad it doesn't work (so far).


whoops, I meant basews of course, not baseos
Created attachment 26609
linux starter script working until tests

in this draft:
"-Declipse.builder=$BUILD_HOME/org.eclipse.releng.basebuilder"
parameter changed to
"-Declipse.builder=org.eclipse.releng.basebuilder"

build starts and all the things go fine until tests;

"
     [java] runTestEclipse:

     [java] BUILD FAILED
     [java] /home/ba/wtp-build/releng.builder/scripts/buildAll.xml:123: The
following error occurred while executing this line:
     [java] /home/ba/wtp-build/releng.builder/scripts/buildAll.xml:142: The
following error occurred while executing this line:
     [java] /home/ba/wtp-build/releng.builder/scripts/buildAll.xml:630: The
following error occurred while executing this line:
     [java] /home/ba/wtp-build/releng.builder/scripts/buildAll.xml:385: Java
returned: 13

     [java] Total time: 213 minutes 13 seconds
"
the latest linux script in comment 16 didn't help me, I got basically same error
message. 

I typically create /home/build-home
and put the script in that directory and run it from a shell with that as 
the "current directory". 
Does that "starting point" matter?

Created attachment 26701
windows batch file (working  fine)

"rm -rf" changed to "RMDIR  /Q /S"
and this one is not effected from paths containig spaces. ( "Program Files" :)
)

this one works fine and seems to be done.

any additions like more user friendly messages, or something else?
It doesnt matter where you put your script and which path you give as
build home. It works same as the windows batch file.

But I have used full paths when testing the script. Thus I didnt try out "."
(current directory) as build home. I will try out this case as soon as possible.

Currently I am working on the linux script to solve the problem that test doesnt
run. Seems like "basews" problem and I will prompt this param from user because 
there are more than one "basews" s in linux. 

All other params to ant seems static for linux.
The builder server uses the following for redhat linux:

baseos=linux
basews=gtk
basearch=x86
Created attachment 28976
wtp-build-starter.cmd (updated for releng.wtpbuilder)

this script uses org.eclipse.releng.basebuilder, releng and releng.wtpbuilder
for local build.

Script runs as;
1. First checks enviroment variables(JAVA_HOME,ANT_HOME,CVS_HOME)
2. User is prompted for BUILD_HOME
3. org.eclipse.releng.basebuilder, releng are downloaded
4. User is NOT prompted for cvs tag of releng.wtpbuilder. That tag
is retrieved from releng/maps/build.cfg as wtpBuilderVersion and 
releng.wtpbuilder with tag is downloaded.
5. User is promped for mapVersionTag
6. build, site, test, site tasks are run sequentially

This script works with org.eclipse.releng.basebuilder=R3_1, 
releng=HEAD, and mapVersionTag=HEAD
I think "major" goes against our guidelines, and while this is still important, 
and while we have made progress, there is a few more things I want to do before closing. 


closing as fixed. 

The current system still needs improvement, but is different enough from when this bug started that we should start again, if/when someone has contributions to make. 

Thanks for all the contributions here. The knowledge I learned here has helped, even if patches not directly used.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106281" />
    <CreationDate amount="2005-08-06 11:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Offer to download missing features/plugins</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When contributing to Open Source projects or other projects it's often hard to
setup a comfortable development environment, because nobody knows, which
plug-ins are required. For example, sometimes it's necessary to generate some
source code before the project will compile wihtout errors.

Eclipse should introduce some magic to allow projects to define, which plugins
are useful for developing. If these plugins arn't installed Eclipse should offer
to user to download an install the missing features/plugins from an update site.
There is no way for us to figure from where to download required plug-ins. And even if there was a way this is wrong component, please open it against component that you think should do this.
(In reply to comment #1)
&gt; There is no way for us to figure from where to download required plug-ins.

Are you serious? Never heard of EPIC - a simple directory where providers register there plug-ins and can categorize them?

&gt; And
&gt; even if there was a way this is wrong component, please open it against
&gt; component that you think should do this.

If not Platform/Update is responsible for downloading and installing plug-ins who is?</WithStack>
    <WithOutStack>When contributing to Open Source projects or other projects it's often hard to
setup a comfortable development environment, because nobody knows, which
plug-ins are required. For example, sometimes it's necessary to generate some
source code before the project will compile wihtout errors.

Eclipse should introduce some magic to allow projects to define, which plugins
are useful for developing. If these plugins arn't installed Eclipse should offer
to user to download an install the missing features/plugins from an update site.
There is no way for us to figure from where to download required plug-ins. And even if there was a way this is wrong component, please open it against component that you think should do this.
(In reply to comment #1)
&gt; There is no way for us to figure from where to download required plug-ins.

Are you serious? Never heard of EPIC - a simple directory where providers register there plug-ins and can categorize them?

&gt; And
&gt; even if there was a way this is wrong component, please open it against
&gt; component that you think should do this.

If not Platform/Update is responsible for downloading and installing plug-ins who is?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106282" />
    <CreationDate amount="2005-08-06 12:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[EditorMgmt] tabs: Order editors alphabetically</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Keep the editors in alphabetical order so that scanning the tabs will be 
faster to find the desired editor.  Also, the drop down list at the right end 
of the editor tabs would be better alphabetized.

The alphabetized editor tabs should be the most be the latest viewed editors.

I usually have 10-20 editors open because I'm working on several source code 
files.  It's time consuming searching for a specific editor.

I'm using a 20" monitor, so I can see many editor tabs.

I've just switched from JBuilder where the editor tabs are alphabetized and 
stacked into rows.  That made it very fast to switch editors --- one mouse 
click.
Created attachment 39178
Screenshot of discrepency in sorting
Comment on attachment 39178
Screenshot of discrepency in sorting

Attached to wrong bug #
Moving Dougs bugs
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.</WithStack>
    <WithOutStack>Keep the editors in alphabetical order so that scanning the tabs will be 
faster to find the desired editor.  Also, the drop down list at the right end 
of the editor tabs would be better alphabetized.

The alphabetized editor tabs should be the most be the latest viewed editors.

I usually have 10-20 editors open because I'm working on several source code 
files.  It's time consuming searching for a specific editor.

I'm using a 20" monitor, so I can see many editor tabs.

I've just switched from JBuilder where the editor tabs are alphabetized and 
stacked into rows.  That made it very fast to switch editors --- one mouse 
click.
Created attachment 39178
Screenshot of discrepency in sorting
Comment on attachment 39178
Screenshot of discrepency in sorting

Attached to wrong bug #
Moving Dougs bugs
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106283" />
    <CreationDate amount="2005-08-06 13:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Scrolling problem under Linux with ATI drivers</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>- The problem is 100% reproducible.</Line>
          <Line>- It occurs independently of the window manager (tried KDE a nd Gnome).</Line>
          <Line>- It occurs with the latest ATI proprietary drivers (8.14.13).</Line>
          <Line>- It does not occur with the free ATI drivers. Unfortunately those drivers don't</Line>
          <Line>support dual monitor configs.</Line>
          <Line>- It never occurred on another machine with an nVidia card/proprietary drivers.</Line>
          <Line>- It occurs only with eclipse popups. If I have another top-level frame above</Line>
          <Line>the text editor there is no problem.</Line>
          <Line>- I never noticed a similar issue with other applications (KDE, Gnome or Java/Swing)</Line>
          <Line>Created attachment 25808</Line>
          <Line>Screenshot #1</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>In the Java editor when the mouse cursor lies on a class name for instance, a
popup appears displaying the Javadoc of this class. 
If I scroll using the scroll wheel while this popup is displayed, the display
becomes garbled, see attached images.
What seems to happen is that the region that was below the popup in the first
place gets copied above or below the popup whenever the document is scrolled.

Base config:
Dell Latitude D810 with ATI Mobility X600 graphics card.
Ubuntu Linux 5.04

- The problem is 100% reproducible.
- It occurs independently of the window manager (tried KDE a nd Gnome).
- It occurs with the latest ATI proprietary drivers (8.14.13).
- It does not occur with the free ATI drivers. Unfortunately those drivers don't
support dual monitor configs.
- It never occurred on another machine with an nVidia card/proprietary drivers.
- It occurs only with eclipse popups. If I have another top-level frame above
the text editor there is no problem. 
- I never noticed a similar issue with other applications (KDE, Gnome or Java/Swing)
Created attachment 25808
Screenshot #1

Scrolling down with a popup displayed
Created attachment 25809
Screenshot #2

After moving the mouse the popup disappears but even the content below the
dirty region is not refreshed.
Cool, it may be exposing some sort of bug in the XCopyArea implementation
of the driver.  I don't understand how it would be different for other top-level
windows versus the tooltip windows.  They're override_redirect but it shouldn't
matter for the copy area.
What version of Xorg is in that version of Ubuntu?
I opened this bug in the fd.o bugzilla:

  https://bugs.freedesktop.org/show_bug.cgi?id=4008
I have xorg 6.8.2-10
Oops I just noticed that the same problem occurs in Konqueror. It's not an SWT
problem. Will you have a look at it anyway?
It's unfortunate that we haven't got any response yet on that ATI/xorg bug.  Any
update on your end?  I'm going to close this bug as WORKSFORME since it does
seem like it was a bug in your driver.
Hi, well no good news on my side, the problem still appears with latest
(8.16.20) fglrx drivers.</WithStack>
    <WithOutStack>In the Java editor when the mouse cursor lies on a class name for instance, a
popup appears displaying the Javadoc of this class. 
If I scroll using the scroll wheel while this popup is displayed, the display
becomes garbled, see attached images.
What seems to happen is that the region that was below the popup in the first
place gets copied above or below the popup whenever the document is scrolled.

Base config:
Dell Latitude D810 with ATI Mobility X600 graphics card.
Ubuntu Linux 5.04

- The problem is 100% reproducible.
- It occurs independently of the window manager (tried KDE a nd Gnome).
- It occurs with the latest ATI proprietary drivers (8.14.13).
- It does not occur with the free ATI drivers. Unfortunately those drivers don't
support dual monitor configs.
- It never occurred on another machine with an nVidia card/proprietary drivers.
- It occurs only with eclipse popups. If I have another top-level frame above
the text editor there is no problem. 
- I never noticed a similar issue with other applications (KDE, Gnome or Java/Swing)
Created attachment 25808
Screenshot #1

Scrolling down with a popup displayed
Created attachment 25809
Screenshot #2

After moving the mouse the popup disappears but even the content below the
dirty region is not refreshed.
Cool, it may be exposing some sort of bug in the XCopyArea implementation
of the driver.  I don't understand how it would be different for other top-level
windows versus the tooltip windows.  They're override_redirect but it shouldn't
matter for the copy area.
What version of Xorg is in that version of Ubuntu?
I opened this bug in the fd.o bugzilla:

  https://bugs.freedesktop.org/show_bug.cgi?id=4008
I have xorg 6.8.2-10
Oops I just noticed that the same problem occurs in Konqueror. It's not an SWT
problem. Will you have a look at it anyway?
It's unfortunate that we haven't got any response yet on that ATI/xorg bug.  Any
update on your end?  I'm going to close this bug as WORKSFORME since it does
seem like it was a bug in your driver.
Hi, well no good news on my side, the problem still appears with latest
(8.16.20) fglrx drivers.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106284" />
    <CreationDate amount="2005-08-06 14:08:00 -0400" />
    <DupId amount="103485" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5][compiler] Type inference succeeds, but should fail</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="14" end="385" />
        <code>class Infer
{
    private static &lt;T extends Comparable&lt;? super T&gt;&gt; T max(T... elems)
    {
        T max=null;
        for (T elem : elems)
            if (max == null || max.compareTo(elem) &lt; 0)
                max=elem;
        return max;
    }

    public static void main(String[] args)
    {
        System.out.println(max(1, 2.0, new BigDecimal(Math.PI)));
    }
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1075" end="1140" />
        <code>System.out.println(max(1, 2.0, new BigDecimal(Math.PI)));</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Sample code:

class Infer
{
    private static &lt;T extends Comparable&lt;? super T&gt;&gt; T max(T... elems)
    {
        T max=null;
        for (T elem : elems)
            if (max == null || max.compareTo(elem) &lt; 0)
                max=elem;
        return max;
    }

    public static void main(String[] args)
    {
        System.out.println(max(1, 2.0, new BigDecimal(Math.PI)));
    }
}

This code compiles fine in Eclipse 3.1 and throws ClassCastException in runtime.
The whole point of generics is to prevent "unexpected" ClassCastExceptions such
as this (when there are no warnings or errors) and it is true for this sample as
well: this should not compile. The type inferred for &lt;T&gt; in max is Number but
Number is *not* Comparable&lt;Number&gt;.
javac says:
src/jezuch/utils/starmapper3/test/Infer.java:18: &lt;T&gt;max(T...) in
jezuch.utils.starmapper3.test.Infer cannot be applied to
(int,double,java.math.BigDecimal); inferred type argument(s)
java.lang.Number&amp;java.lang.Comparable&lt;? extends
java.lang.Number&amp;java.lang.Comparable&lt;?&gt;&gt; do not conform to bounds of type
variable(s) T
        System.out.println(max(1, 2.0, new BigDecimal(Math.PI)));
Added GenericTypeTest#test798

*** This bug has been marked as a duplicate of 103485 ***</WithStack>
    <WithOutStack>Sample code:

class Infer
{
    private static &lt;T extends Comparable&lt;? super T&gt;&gt; T max(T... elems)
    {
        T max=null;
        for (T elem : elems)
            if (max == null || max.compareTo(elem) &lt; 0)
                max=elem;
        return max;
    }

    public static void main(String[] args)
    {
        System.out.println(max(1, 2.0, new BigDecimal(Math.PI)));
    }
}

This code compiles fine in Eclipse 3.1 and throws ClassCastException in runtime.
The whole point of generics is to prevent "unexpected" ClassCastExceptions such
as this (when there are no warnings or errors) and it is true for this sample as
well: this should not compile. The type inferred for &lt;T&gt; in max is Number but
Number is *not* Comparable&lt;Number&gt;.
javac says:
src/jezuch/utils/starmapper3/test/Infer.java:18: &lt;T&gt;max(T...) in
jezuch.utils.starmapper3.test.Infer cannot be applied to
(int,double,java.math.BigDecimal); inferred type argument(s)
java.lang.Number&amp;java.lang.Comparable&lt;? extends
java.lang.Number&amp;java.lang.Comparable&lt;?&gt;&gt; do not conform to bounds of type
variable(s) T
        System.out.println(max(1, 2.0, new BigDecimal(Math.PI)));
Added GenericTypeTest#test798

*** This bug has been marked as a duplicate of 103485 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106285" />
    <CreationDate amount="2005-08-06 16:39:00 -0400" />
    <DupId amount="61812" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add "Whole Word" option to file searches</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Today when doing a search/replace on files, the pattern being searched can be 
any portion of a word.  This finds undesirable matches.  The problem is worse 
when doing a replace on a word and some results are changed when they 
shouldn't be.  A "Whole Word" option as in the search in editors would fix the 
problem.

For example:

Replace "Input_" with "Source_".  And we'll get:
RESOURCEInput_ &gt;&gt;&gt; RESOURCESource_
RESOURCEInputing_is_invalid &gt;&gt;&gt; RESOURCESourcing_is_invalid
Martin, this is a dup of bug 61812. Suggest to close as such.
See bug 61812 for the regex pattern that implements 'While word'

*** This bug has been marked as a duplicate of 61812 ***</WithStack>
    <WithOutStack>Today when doing a search/replace on files, the pattern being searched can be 
any portion of a word.  This finds undesirable matches.  The problem is worse 
when doing a replace on a word and some results are changed when they 
shouldn't be.  A "Whole Word" option as in the search in editors would fix the 
problem.

For example:

Replace "Input_" with "Source_".  And we'll get:
RESOURCEInput_ &gt;&gt;&gt; RESOURCESource_
RESOURCEInputing_is_invalid &gt;&gt;&gt; RESOURCESourcing_is_invalid
Martin, this is a dup of bug 61812. Suggest to close as such.
See bug 61812 for the regex pattern that implements 'While word'

*** This bug has been marked as a duplicate of 61812 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106286" />
    <CreationDate amount="2005-08-06 17:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.Execution.ExecutionHarness" />
    <Version amount="4.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Serviceability]  Providing a mechanism for clients to report errors and properly displaying those errors.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Currently there are no convenient ways for clients implementing execution
environment or object adapters to report errors to the test execution harness.
The method IExecutionEnvironmentAdapter.setupExecutionEnvironment() only allows
a ClassCastException to be thrown, not even displaying the message field of the
exception when it is captured.

The test execution harness should provide a mechanism for clients to report
errors and interrupt the process of the execution depending on the severity of
those errors.  The error message should be displayed to the user and the
execution of the test suite should be terminated if required.

Joe, please re-assign to me, not sure why these aren't directly assigned to me yet.
Enhancement request need review and approval before executing them.
No considered for 4.2, Version=future
Sorry, forget about the previous change and comment. (Version back to = 4.2)
Enhancements not considered for 4.2 release (setting Target to future)
Updating target to future as requested by the PMC.  

Enhancements are targeted to future if not in plan for the current release.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Currently there are no convenient ways for clients implementing execution
environment or object adapters to report errors to the test execution harness.
The method IExecutionEnvironmentAdapter.setupExecutionEnvironment() only allows
a ClassCastException to be thrown, not even displaying the message field of the
exception when it is captured.

The test execution harness should provide a mechanism for clients to report
errors and interrupt the process of the execution depending on the severity of
those errors.  The error message should be displayed to the user and the
execution of the test suite should be terminated if required.

Joe, please re-assign to me, not sure why these aren't directly assigned to me yet.
Enhancement request need review and approval before executing them.
No considered for 4.2, Version=future
Sorry, forget about the previous change and comment. (Version back to = 4.2)
Enhancements not considered for 4.2 release (setting Target to future)
Updating target to future as requested by the PMC.  

Enhancements are targeted to future if not in plan for the current release.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106287" />
    <CreationDate amount="2005-08-06 17:31:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Adding a Path when creating a new report causes an exception</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The following directory exists:  SchoolPsychology/Reports

If I try to generate a report by appending /Test so I have the directory field 
be:  SchoolPsychology/Reports/Test

I always get:

An unexpected internal exception occurred.Please see log for detail.
  Plug-in Provider:Eclipse.org
  Plug-in Name:BIRT Designer UI
  Plug-in ID:org.eclipse.birt.report.designer.ui
  Version:1.0.1
  Error Code:Error.GUIException.invokedByUnexpectedException
  Error Message:Caused by java.lang.NullPointerException

I can work around this by creating the directory manually.

I just installed 1.0.1 and am trying BIRT for the first time.  I have EMF 2.1 
and GEF 3.1.  I am running on XPhome and 1.4.2_06

This is repeatable.
Create folders when non-existent
Verified in build 20051220.</WithStack>
    <WithOutStack>The following directory exists:  SchoolPsychology/Reports

If I try to generate a report by appending /Test so I have the directory field 
be:  SchoolPsychology/Reports/Test

I always get:

An unexpected internal exception occurred.Please see log for detail.
  Plug-in Provider:Eclipse.org
  Plug-in Name:BIRT Designer UI
  Plug-in ID:org.eclipse.birt.report.designer.ui
  Version:1.0.1
  Error Code:Error.GUIException.invokedByUnexpectedException
  Error Message:Caused by java.lang.NullPointerException

I can work around this by creating the directory manually.

I just installed 1.0.1 and am trying BIRT for the first time.  I have EMF 2.1 
and GEF 3.1.  I am running on XPhome and 1.4.2_06

This is repeatable.
Create folders when non-existent
Verified in build 20051220.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106288" />
    <CreationDate amount="2005-08-06 17:35:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Releng" />
    <component amount="releng" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Prerelease of TPTP no longer available for API scanning tests</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>I'm not sure this is *only* problem, but in my investigations of why local build
and JUnit tests can not be be done by many people, I found following, by
following the basic procedure I outlined in bug 106280. 

The tests are apparently started enough to create a "consolelog", which I'll
attach. What it shows is that there is a major failure in retrieving
http://download.eclipse.org/tptp/4.0/TPTP-4.0-200504151511/tptpdc.win_ia32-TPTP-4.0-200504151511.zip

This pre-release file is apparently no longer available, and not even in our
"drivers" directory on wtptools/downloads/drivers.

I tried the obvious of just renaming the released version of the zip (in my
local downloads directory), but appearently it is different enough to not work. 

Hence, I'd say its "impossible" to reproduce our released build ... at least,
reprodude the test portion of it -- which is why I entered as 'blocker'. 

This is further reason to seperate the API Scan portion of our build process
into a completely seperate process ... and not be part of the the tests. I know
this has been planned for a while, but should be done immediately.
Created attachment 25810
console log from trying to run JUnits locally
Jeffrey or Naci, I assume you have a copy of this zip on your machine? 
Do you think we should "archive" a version of it on wtptools/downloads/drivers? 
(And that's a rhetorical question :). 
BTW, if you send to me, or let me know when available, I'll "manually" download
a copy into my local 'downloads' directory, to see if that fixes the problem. 
I would prefer to have a reproducible way to reproduce our released code (and
its test run) ... and fix scripts in (near) future ... but want to be sure we
have some way to reproduce what was released. 



Perhaps I should be explicit, the build machine has the linux version of this
zip file cached, but not the windows version (naturally) ... and I think we
should archive both if this is the problem. 

[Side note: is there no SFTP to build machine? Seems not to be ... could we?]
The two zip files (win &amp; linux) have been uploaded to the download site:

http://download.eclipse.org/webtools/downloads/drivers/tptpdc.linux_ia32-TPTP-
4.0-200504151511.zip

http://download.eclipse.org/webtools/downloads/drivers/tptpdc.win_ia32-TPTP-4.0-
200504151511.zip

To reproduce a 0.7 release build, we have to manually change the following two 
properties in releng/maps/build.cfg

#URL to TPTP
piAgentURL.linux=http://download.eclipse.org/tptp/4.0/TPTP-4.0-
200504151511/tptpdc.linux_ia32-TPTP-4.0-200504151511.zip
piAgentURL.win32=http://download.eclipse.org/tptp/4.0/TPTP-4.0-
200504151511/tptpdc.win_ia32-TPTP-4.0-200504151511.zip
Changed Summary to be more accurate. 

Committed fix to R0_7_maintenance branch, and will tag with R0_7B 
to signify *that* tag should be used for releng when doing a local build
on a fresh machine. 

To be explicit ... I did confirm having these pre-released version available did
fix my local build so tests would run ... on windows. I have not tested Linux. 
Confirming fixed. 
Close.</WithStack>
    <WithOutStack>I'm not sure this is *only* problem, but in my investigations of why local build
and JUnit tests can not be be done by many people, I found following, by
following the basic procedure I outlined in bug 106280. 

The tests are apparently started enough to create a "consolelog", which I'll
attach. What it shows is that there is a major failure in retrieving
http://download.eclipse.org/tptp/4.0/TPTP-4.0-200504151511/tptpdc.win_ia32-TPTP-4.0-200504151511.zip

This pre-release file is apparently no longer available, and not even in our
"drivers" directory on wtptools/downloads/drivers.

I tried the obvious of just renaming the released version of the zip (in my
local downloads directory), but appearently it is different enough to not work. 

Hence, I'd say its "impossible" to reproduce our released build ... at least,
reprodude the test portion of it -- which is why I entered as 'blocker'. 

This is further reason to seperate the API Scan portion of our build process
into a completely seperate process ... and not be part of the the tests. I know
this has been planned for a while, but should be done immediately.
Created attachment 25810
console log from trying to run JUnits locally
Jeffrey or Naci, I assume you have a copy of this zip on your machine? 
Do you think we should "archive" a version of it on wtptools/downloads/drivers? 
(And that's a rhetorical question :). 
BTW, if you send to me, or let me know when available, I'll "manually" download
a copy into my local 'downloads' directory, to see if that fixes the problem. 
I would prefer to have a reproducible way to reproduce our released code (and
its test run) ... and fix scripts in (near) future ... but want to be sure we
have some way to reproduce what was released. 



Perhaps I should be explicit, the build machine has the linux version of this
zip file cached, but not the windows version (naturally) ... and I think we
should archive both if this is the problem. 

[Side note: is there no SFTP to build machine? Seems not to be ... could we?]
The two zip files (win &amp; linux) have been uploaded to the download site:

http://download.eclipse.org/webtools/downloads/drivers/tptpdc.linux_ia32-TPTP-
4.0-200504151511.zip

http://download.eclipse.org/webtools/downloads/drivers/tptpdc.win_ia32-TPTP-4.0-
200504151511.zip

To reproduce a 0.7 release build, we have to manually change the following two 
properties in releng/maps/build.cfg

#URL to TPTP
piAgentURL.linux=http://download.eclipse.org/tptp/4.0/TPTP-4.0-
200504151511/tptpdc.linux_ia32-TPTP-4.0-200504151511.zip
piAgentURL.win32=http://download.eclipse.org/tptp/4.0/TPTP-4.0-
200504151511/tptpdc.win_ia32-TPTP-4.0-200504151511.zip
Changed Summary to be more accurate. 

Committed fix to R0_7_maintenance branch, and will tag with R0_7B 
to signify *that* tag should be used for releng when doing a local build
on a fresh machine. 

To be explicit ... I did confirm having these pre-released version available did
fix my local build so tests would run ... on windows. I have not tested Linux. 
Confirming fixed. 
Close.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106289" />
    <CreationDate amount="2005-08-06 19:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Blurry Tree text in second column</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When running the sample Tree-with-columns snippet (Snippet170) I'm getting
'blurry' text in columns 2 and 3 after selecting an item.  It's like the
antialiasing has been applied many times.
Created attachment 25812
Blurry text in columns 2 and 3

Attaching a screenshot of problem.  Note that the more you change the selected
tree item, the more blurry the text in columns 2 and 3 gets.
This WORKSFORME.  Are there some Windows settings I need to do to make this 
happen on my machine?
Sorry should have mentioned I have enabled 'Cleartype', Microsoft's nice little
antialising feature.  

Go to Control Panel -&gt; Display -&gt; Appearance, and select 'Clear Type'.  

Also, I'm using Windows XP Profession with SP2.
Ok, I can make it happen now.
Fixed &gt; 20050810
This has not been patched to 3.1.1.
Reopening to consider for 3.1.1.
Fixed in the maintenance stream &gt; 20050909.
Backed out change from 3.1.1 because it caused bug 111836
The problem is visible again in versions &gt;= 3223. This bug should be reopened.
Ok then.
Fixed &gt; 20060218 (again)

With all the recent changes to Tree, I keep forgetting that it is necessary to always fill the background where the text is drawn (ie. I fall for OS.SetBkMode (hDC, OS.TRANSPARENT)).  Thanks for keeping me honest.  Hopefully I won't fall for it again for 3.2!</WithStack>
    <WithOutStack>When running the sample Tree-with-columns snippet (Snippet170) I'm getting
'blurry' text in columns 2 and 3 after selecting an item.  It's like the
antialiasing has been applied many times.
Created attachment 25812
Blurry text in columns 2 and 3

Attaching a screenshot of problem.  Note that the more you change the selected
tree item, the more blurry the text in columns 2 and 3 gets.
This WORKSFORME.  Are there some Windows settings I need to do to make this 
happen on my machine?
Sorry should have mentioned I have enabled 'Cleartype', Microsoft's nice little
antialising feature.  

Go to Control Panel -&gt; Display -&gt; Appearance, and select 'Clear Type'.  

Also, I'm using Windows XP Profession with SP2.
Ok, I can make it happen now.
Fixed &gt; 20050810
This has not been patched to 3.1.1.
Reopening to consider for 3.1.1.
Fixed in the maintenance stream &gt; 20050909.
Backed out change from 3.1.1 because it caused bug 111836
The problem is visible again in versions &gt;= 3223. This bug should be reopened.
Ok then.
Fixed &gt; 20060218 (again)

With all the recent changes to Tree, I keep forgetting that it is necessary to always fill the background where the text is drawn (ie. I fall for OS.SetBkMode (hDC, OS.TRANSPARENT)).  Thanks for keeping me honest.  Hopefully I won't fall for it again for 3.2!</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106290" />
    <CreationDate amount="2005-08-06 21:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Releng" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>HEAD basebuilder seems broken</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330565902">
        <Exception>java.io.IOException</Exception>
        <Reason>Unable to initialize osgi.frameworkClassPath</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.launcher.Main.addBaseJars(Main.java:567)</Frame>
          <Frame depth="1">org.eclipse.core.launcher.Main.getDevPath(Main.java:466)</Frame>
          <Frame depth="2">org.eclipse.core.launcher.Main.getBootPath(Main.java:646)</Frame>
          <Frame depth="3">org.eclipse.core.launcher.Main.basicRun(Main.java:272)</Frame>
          <Frame depth="4">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="5">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I can get from CVS the tagged version of R3_1 and it seems 
to work ok, but the version from HEAD does not. 

By "work" I mean I tested with a simple test of seeing if antRunner runs. 
Such as 
java -jar &lt;path&gt;/startup.jar -application org.eclipse.ant.core.antRunner

We encountered this with trying to fixup/improve WTP builds. 
Part of the fix for us, as you'd expect, is to use tagged versions of 
basebuilder ... but ... thought you would want to know. 

I'm not sure how you in base do builds? Do you use basebuilder? Or full SDK?
Just tested HEAD and the antRunner seems to work fine.  Could there have been 
a problem at checkout time?
yep, just tried again and see same problem. When using 'head' version (but not
R3_1 version), this 
ends up in the log in the configuration directory ...

!SESSION Sat Aug 06 21:22:49 EDT 2005 ------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 2005-08-06 21:22:49.538
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.io.IOException: Unable to initialize osgi.frameworkClassPath
	at org.eclipse.core.launcher.Main.addBaseJars(Main.java:567)
	at org.eclipse.core.launcher.Main.getDevPath(Main.java:466)
	at org.eclipse.core.launcher.Main.getBootPath(Main.java:646)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:272)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)
Created attachment 25852
minimal bat file to show problem

I should add ... there's nothing on my CLASSPATH or anything. 

And did I mention ... I'm trying on windows ... haven't actually tried this on
Linux.
I was able to reproduce the problem with the attached script.  

I believe the workaround is to use this command if you want to use contents 
from HEAD:

cvs -d :pserver:anonymous@dev.eclipse.org:/home/eclipse co -r HEAD 
org.eclipse.releng.basebuilder

I ran a diff and the only difference is that the checkout without the "-r 
HEAD" checks out a bunch of obsolete empty directories.  I don't think there 
is anything we can do to fix this apart from deleting the empty directories 
directly from dev.eclipse.org, the effect of which may be uncertain.

I have confirmed Sonia's statement and workaround that -r HEAD (no empty
directories) solves the problem ... seems odd to me, but is not stopping us from 
doing anything, so feel free to dispose of this "bug" as you'd like. [We won't
really do builds from "head builder" ... but will ask you to be sure to tag when
interesting changes are made and we all should/could update our builder .. we'll
be using R3_1 for several months, at least.]

Thanks for checking it out and confirming I wasn't going crazy :)

The problem is as follows:
- the plugins folder contains:
   org.eclipse.osgi_3.1.0/ (empty folder)
   org.eclipse.osgi_3.1.0.jar
   org.eclipse.osgi_3.0.0/ (empty folder)

- on startup the platform searches the file system and picks highest version of
the plugins available. It there are two matches, it just takes the first one
assuming that all the matches are equivalent and just differ from their
packaging. It then adds the match to the classpath and run.

In this particular scenario, it happens that the org.eclipse.osgi_3.1.0 is
picked but it is empty therefore the startup fails.

There is nothing we can do about it, from the platform point of view this is an
invalid setup.
Closing.</WithStack>
    <WithOutStack>I can get from CVS the tagged version of R3_1 and it seems 
to work ok, but the version from HEAD does not. 

By "work" I mean I tested with a simple test of seeing if antRunner runs. 
Such as 
java -jar &lt;path&gt;/startup.jar -application org.eclipse.ant.core.antRunner

We encountered this with trying to fixup/improve WTP builds. 
Part of the fix for us, as you'd expect, is to use tagged versions of 
basebuilder ... but ... thought you would want to know. 

I'm not sure how you in base do builds? Do you use basebuilder? Or full SDK?
Just tested HEAD and the antRunner seems to work fine.  Could there have been 
a problem at checkout time?
yep, just tried again and see same problem. When using 'head' version (but not
R3_1 version), this 
ends up in the log in the configuration directory ...

!SESSION Sat Aug 06 21:22:49 EDT 2005 ------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 2005-08-06 21:22:49.538
!MESSAGE Exception launching the Eclipse Platform:
!STACK

Created attachment 25852
minimal bat file to show problem

I should add ... there's nothing on my CLASSPATH or anything. 

And did I mention ... I'm trying on windows ... haven't actually tried this on
Linux.
I was able to reproduce the problem with the attached script.  

I believe the workaround is to use this command if you want to use contents 
from HEAD:

cvs -d :pserver:anonymous@dev.eclipse.org:/home/eclipse co -r HEAD 
org.eclipse.releng.basebuilder

I ran a diff and the only difference is that the checkout without the "-r 
HEAD" checks out a bunch of obsolete empty directories.  I don't think there 
is anything we can do to fix this apart from deleting the empty directories 
directly from dev.eclipse.org, the effect of which may be uncertain.

I have confirmed Sonia's statement and workaround that -r HEAD (no empty
directories) solves the problem ... seems odd to me, but is not stopping us from 
doing anything, so feel free to dispose of this "bug" as you'd like. [We won't
really do builds from "head builder" ... but will ask you to be sure to tag when
interesting changes are made and we all should/could update our builder .. we'll
be using R3_1 for several months, at least.]

Thanks for checking it out and confirming I wasn't going crazy :)

The problem is as follows:
- the plugins folder contains:
   org.eclipse.osgi_3.1.0/ (empty folder)
   org.eclipse.osgi_3.1.0.jar
   org.eclipse.osgi_3.0.0/ (empty folder)

- on startup the platform searches the file system and picks highest version of
the plugins available. It there are two matches, it just takes the first one
assuming that all the matches are equivalent and just differ from their
packaging. It then adds the match to the classpath and run.

In this particular scenario, it happens that the org.eclipse.osgi_3.1.0 is
picked but it is empty therefore the startup fails.

There is nothing we can do about it, from the platform point of view this is an
invalid setup.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106291" />
    <CreationDate amount="2005-08-06 21:51:00 -0400" />
    <DupId amount="106247" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Build" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>BIRT Report Framework installs to wrong location</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The report framework package installs to birt-report-framework\eclipse\plugins
etc. instead of just to eclipse\plugins etc. THis makes it harder for users to
install to their eclipse environments. The RC1 and RC2 builds had the path's
correctly. But the production build has it wrong!
duplicate of 106247


*** This bug has been marked as a duplicate of 106247 ***
Closed.</WithStack>
    <WithOutStack>The report framework package installs to birt-report-framework\eclipse\plugins
etc. instead of just to eclipse\plugins etc. THis makes it harder for users to
install to their eclipse environments. The RC1 and RC2 builds had the path's
correctly. But the production build has it wrong!
duplicate of 106247


*** This bug has been marked as a duplicate of 106247 ***
Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106292" />
    <CreationDate amount="2005-08-06 21:54:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Unable to alter project names for modules in EAR when importing EAR</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>In the EAR Import Wizard, the EAR Module and Utility JAR Projects page appears
with the wizard banner stating:

Enter the new project name that will be created for the imported module file by
selecting the second column of the table for edit.

The table described contains a column labeled "Modules in EAR" and another
named "New Project Name". None of the controls on the page nor clicking on
entries in the "New Project Name" column seem to allow this. Is there supposed
to be a way for someone to change these?
code in cvs.
This bug is being moved to the "closed" state since it has been in the fixed state for a so long it is being assumed fixed, without explicit verification from the originator. If there is still a problem, in the most recent 1.5.x builds, please reopen or open another bug.</WithStack>
    <WithOutStack>In the EAR Import Wizard, the EAR Module and Utility JAR Projects page appears
with the wizard banner stating:

Enter the new project name that will be created for the imported module file by
selecting the second column of the table for edit.

The table described contains a column labeled "Modules in EAR" and another
named "New Project Name". None of the controls on the page nor clicking on
entries in the "New Project Name" column seem to allow this. Is there supposed
to be a way for someone to change these?
code in cvs.
This bug is being moved to the "closed" state since it has been in the fixed state for a so long it is being assumed fixed, without explicit verification from the originator. If there is still a problem, in the most recent 1.5.x builds, please reopen or open another bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106293" />
    <CreationDate amount="2005-08-06 22:10:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Java Model Exception while importing WebSphere 5.1 UDDI EAR</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>While importing the WebSphere 5.1 UDDI EAR, the following exception appeared:

*** ERROR ***: Sat Aug 06 22:04:37 EDT 2005    Java Model Exception: Java 
Model Status [Project cannot reference itself: ejb]
    	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation
(JavaModelOperation.java:773)
    	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath
(JavaProject.java:2834)
    	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath
(JavaProject.java:2850)
    	at 
org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactImportOperation.ad
dToClasspath(J2EEArtifactImportOperation.java:135)
    	at 
org.eclipse.jst.j2ee.internal.archive.operations.EARComponentImportOperation.fi
xupClasspaths(EARComponentImportOperation.java:113)
    	at 
org.eclipse.jst.j2ee.internal.archive.operations.EARComponentImportOperation.do
Execute(EARComponentImportOperation.java:79)
    	at 
org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactImportOperation.ex
ecute(J2EEArtifactImportOperation.java:53)
    	at 
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.do
Execute(ExtendableOperationImpl.java:129)
    	at 
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl$1.
run(ExtendableOperationImpl.java:109)
    	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1719)
    	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1739)
    	at 
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.ex
ecute(ExtendableOperationImpl.java:115)
    	at 
org.eclipse.wst.common.frameworks.internal.ui.RunnableOperationWrapper.run
(RunnableOperationWrapper.java:32)
    	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:346)
    	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
    	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)
    	at 
org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.perform
Finish(DataModelWizard.java:245)
    	at org.eclipse.jface.wizard.WizardDialog.finishPressed
(WizardDialog.java:676)
    	at org.eclipse.jface.wizard.WizardDialog.buttonPressed
(WizardDialog.java:349)
    	at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)
    	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:90)
    	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
    	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined 
Compiled Code))
    	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
    	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
    	at org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled 
Code))
    	at org.eclipse.jface.window.Window.open(Window.java:787)
    	at org.eclipse.ui.actions.ImportResourcesAction.run
(ImportResourcesAction.java:159)
    	at org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent
(BaseSelectionListenerAction.java:167)
    	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:538)
    	at org.eclipse.jface.action.ActionContributionItem.access$2
(ActionContributionItem.java:488)
    	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent
(ActionContributionItem.java:400)
    	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
    	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined 
Compiled Code))
    	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
    	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
    	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
    	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
    	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:367)
    	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
    	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:103)
    	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:226)
    	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:376)
    	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:163)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:85)
    	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:58)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:60)
    	at java.lang.reflect.Method.invoke(Method.java:391)
    	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
    	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
    	at org.eclipse.core.launcher.Main.run(Main.java:973)
    	at org.eclipse.core.launcher.Main.main(Main.java:948)

I will attach the EAR.
Created attachment 25813
WebSphere 5.1 UDDI ear
code dropped to cvs.
This bug is being moved to the "closed" state since it has been in the fixed state for a so long it is being assumed fixed, without explicit verification from the originator. If there is still a problem, in the most recent 1.5.x builds, please reopen or open another bug.</WithStack>
    <WithOutStack>While importing the WebSphere 5.1 UDDI EAR, the following exception appeared:

*** ERROR ***: Sat Aug 06 22:04:37 EDT 2005    Java Model Exception: Java 
Model Status [Project cannot reference itself: ejb]
    	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation
(JavaModelOperation.java:773)
    	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath
(JavaProject.java:2834)
    	at org.eclipse.jdt.internal.core.JavaProject.setRawClasspath
(JavaProject.java:2850)
    	at 
org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactImportOperation.ad
dToClasspath(J2EEArtifactImportOperation.java:135)
    	at 
org.eclipse.jst.j2ee.internal.archive.operations.EARComponentImportOperation.fi
xupClasspaths(EARComponentImportOperation.java:113)
    	at 
org.eclipse.jst.j2ee.internal.archive.operations.EARComponentImportOperation.do
Execute(EARComponentImportOperation.java:79)
    	at 
org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactImportOperation.ex
ecute(J2EEArtifactImportOperation.java:53)
    	at 
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.do
Execute(ExtendableOperationImpl.java:129)
    	at 
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl$1.
run(ExtendableOperationImpl.java:109)
    	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1719)
    	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1739)
    	at 
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.ex
ecute(ExtendableOperationImpl.java:115)
    	at 
org.eclipse.wst.common.frameworks.internal.ui.RunnableOperationWrapper.run
(RunnableOperationWrapper.java:32)
    	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:346)
    	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
    	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)
    	at 
org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.perform
Finish(DataModelWizard.java:245)
    	at org.eclipse.jface.wizard.WizardDialog.finishPressed
(WizardDialog.java:676)
    	at org.eclipse.jface.wizard.WizardDialog.buttonPressed
(WizardDialog.java:349)
    	at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)
    	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:90)
    	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
    	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined 
Compiled Code))
    	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
    	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
    	at org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled 
Code))
    	at org.eclipse.jface.window.Window.open(Window.java:787)
    	at org.eclipse.ui.actions.ImportResourcesAction.run
(ImportResourcesAction.java:159)
    	at org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent
(BaseSelectionListenerAction.java:167)
    	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:538)
    	at org.eclipse.jface.action.ActionContributionItem.access$2
(ActionContributionItem.java:488)
    	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent
(ActionContributionItem.java:400)
    	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
    	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Inlined 
Compiled Code))
    	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
    	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
    	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
    	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
    	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:367)
    	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
    	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:103)
    	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:226)
    	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:376)
    	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:163)
    	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:85)
    	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:58)
    	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:60)
    	at java.lang.reflect.Method.invoke(Method.java:391)
    	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
    	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
    	at org.eclipse.core.launcher.Main.run(Main.java:973)
    	at org.eclipse.core.launcher.Main.main(Main.java:948)

I will attach the EAR.
Created attachment 25813
WebSphere 5.1 UDDI ear
code dropped to cvs.
This bug is being moved to the "closed" state since it has been in the fixed state for a so long it is being assumed fixed, without explicit verification from the originator. If there is still a problem, in the most recent 1.5.x builds, please reopen or open another bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106294" />
    <CreationDate amount="2005-08-06 22:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Dump handler signal 22 when resizing window with null Image; JVMCI161: Fatal error in native method: Out of memory when local ref table beyond capacity</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330565902">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>Argument cannot be null</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2926)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2865)</Frame>
          <Frame depth="2">org.eclipse.swt.SWT.error(SWT.java:2836)</Frame>
          <Frame depth="3">org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:124)</Frame>
          <Frame depth="4">org.eclipse.swt.graphics.ImageDataLoader.load(ImageDataLoader.java:18)</Frame>
          <Frame depth="5">org.eclipse.swt.graphics.ImageData.&lt;init&gt;(ImageData.java:327)</Frame>
          <Frame depth="6">org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:651)</Frame>
          <Frame depth="7">com.swtjface.Ch7.Ch7_Composite$1.paintControl(Ch7_Composite.java:35)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:83)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:1153)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Control.windowProc(Control.java:3090)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Display.windowProc(Display.java:3706)</Frame>
          <Frame depth="16">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="17">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1656)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2711)</Frame>
          <Frame depth="19">org.eclipse.jface.window.Window.runEventLoop(Window.java:809)</Frame>
          <Frame depth="20">org.eclipse.jface.window.Window.open(Window.java:787)</Frame>
          <Frame depth="21">com.swtjface.Ch4.WidgetWindow.main(WidgetWindow.java:121)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Still have runtime error in cleanly compiled code from SWT/JFace in Action code.
 Can resize window when other tabs are selected, but selecting tab "Chapter 7"
throws error when ImageLoader sees a null argument.  Grabbing the bottom edge
and dragging it down (larger) produces a signal 22 with both jvm1.4.2_06 and
IBMJDK.  I grant that the first error should be corrected, and likely the
problem will not manifest, but the image was absent, and I was trying to see if
it was painted beyond the bottom of the visible window.
Created attachment 25814
zip file of failing environment

After unzipping, Run as SWT application, Ch4 WidgetWindow.  When window
appears, you can resize the window, but if you select the right-most tab, it
will throw an IllegalArgumentException as a null argument.  Attempting to see
if the absent image is present in the window by grabbing the lower edge and
pulling it down causes a fatal signal 22 and the window exits.
Can you please attach the full IllegalArgumentException stack trace?
Created attachment 26132
javacore file

I think this will contain all that you need.
Comment on attachment 26132
javacore file

java.lang.IllegalArgumentException: Argument cannot be null
	at org.eclipse.swt.SWT.error(SWT.java:2926)
	at org.eclipse.swt.SWT.error(SWT.java:2865)
	at org.eclipse.swt.SWT.error(SWT.java:2836)
	at org.eclipse.swt.graphics.ImageLoader.load(ImageLoader.java:124)
	at
org.eclipse.swt.graphics.ImageDataLoader.load(ImageDataLoader.java:18)
	at org.eclipse.swt.graphics.ImageData.&lt;init&gt;(ImageData.java:327)
	at org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:651)
	at com.swtjface.Ch7.Ch7_Composite$1.paintControl(Ch7_Composite.java:35)
	at
org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:83)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:1153)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3090)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3706)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1656)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2711)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:809)
	at org.eclipse.jface.window.Window.open(Window.java:787)
	at com.swtjface.Ch4.WidgetWindow.main(WidgetWindow.java:121)

initial IllegalArgumentException, down to here


JVMCI161: FATAL ERROR in native method: Out of memory when expanding local ref
table beyond capacity
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1651)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:410)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3123)
	at
org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1582)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1651)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:410)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3123)
	at
org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1582)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1656)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2711)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:809)
	at org.eclipse.jface.window.Window.open(Window.java:787)
	at com.swtjface.Ch4.WidgetWindow.main(WidgetWindow.java:121)
JVMCI161: FATAL ERROR in native method: Out of memory when expanding local ref
table beyond capacity
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1651)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:410)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3123)
	at
org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1582)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1651)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:410)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3123)
	at
org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1582)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1656)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2711)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:809)
	at org.eclipse.jface.window.Window.open(Window.java:787)
	at com.swtjface.Ch4.WidgetWindow.main(WidgetWindow.java:121)
JVMCI161: FATAL ERROR in native method: Out of memory when expanding local ref
table beyond capacity
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1651)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:410)
Created attachment 26195
javacore file of signal 22

After SWT IllegalArgumentException passing null argument to new Image(), when
gif file was in wrong directory.
Created attachment 26196
javacore file of signal 22

another one.  This might just be repetitive</WithStack>
    <WithOutStack>Still have runtime error in cleanly compiled code from SWT/JFace in Action code.
 Can resize window when other tabs are selected, but selecting tab "Chapter 7"
throws error when ImageLoader sees a null argument.  Grabbing the bottom edge
and dragging it down (larger) produces a signal 22 with both jvm1.4.2_06 and
IBMJDK.  I grant that the first error should be corrected, and likely the
problem will not manifest, but the image was absent, and I was trying to see if
it was painted beyond the bottom of the visible window.
Created attachment 25814
zip file of failing environment

After unzipping, Run as SWT application, Ch4 WidgetWindow.  When window
appears, you can resize the window, but if you select the right-most tab, it
will throw an IllegalArgumentException as a null argument.  Attempting to see
if the absent image is present in the window by grabbing the lower edge and
pulling it down causes a fatal signal 22 and the window exits.
Can you please attach the full IllegalArgumentException stack trace?
Created attachment 26132
javacore file

I think this will contain all that you need.
Comment on attachment 26132
javacore file



initial IllegalArgumentException, down to here


JVMCI161: FATAL ERROR in native method: Out of memory when expanding local ref
table beyond capacity
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1651)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:410)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3123)
	at
org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1582)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1651)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:410)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3123)
	at
org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1582)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1656)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2711)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:809)
	at org.eclipse.jface.window.Window.open(Window.java:787)
	at com.swtjface.Ch4.WidgetWindow.main(WidgetWindow.java:121)
JVMCI161: FATAL ERROR in native method: Out of memory when expanding local ref
table beyond capacity
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1651)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:410)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3123)
	at
org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1582)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1651)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:410)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3123)
	at
org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1582)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1656)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2711)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:809)
	at org.eclipse.jface.window.Window.open(Window.java:787)
	at com.swtjface.Ch4.WidgetWindow.main(WidgetWindow.java:121)
JVMCI161: FATAL ERROR in native method: Out of memory when expanding local ref
table beyond capacity
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1651)
	at org.eclipse.swt.widgets.Shell.callWindowProc(Shell.java:410)
Created attachment 26195
javacore file of signal 22

After SWT IllegalArgumentException passing null argument to new Image(), when
gif file was in wrong directory.
Created attachment 26196
javacore file of signal 22

another one.  This might just be repetitive</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106295" />
    <CreationDate amount="2005-08-06 23:52:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Wrong Web app version in imported EAR</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When the WebSphere V5.1 UDDI Registry EAR is imported, the WAR is imported as a
servlet 2.4 Web application. This should be servlet 2.2. I will attach the EAR.
Created attachment 25815
WebSphere V5.1 UDDI ear
can't reproduce.
*** Bug 106560 has been marked as a duplicate of this bug. ***
Verified on WTP 1.5.1 RC driver.</WithStack>
    <WithOutStack>When the WebSphere V5.1 UDDI Registry EAR is imported, the WAR is imported as a
servlet 2.4 Web application. This should be servlet 2.2. I will attach the EAR.
Created attachment 25815
WebSphere V5.1 UDDI ear
can't reproduce.
*** Bug 106560 has been marked as a duplicate of this bug. ***
Verified on WTP 1.5.1 RC driver.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106296" />
    <CreationDate amount="2005-08-07 00:04:00 -0400" />
    <DupId amount="105225" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>WAR imported with build errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="functioncall">
        <location start="158" end="205" />
        <code>EnterpriseApplicationImportDataModelProvider();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="268" end="279" />
        <code>(provider);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="280" end="357" />
        <code>(IEARComponentImportDataModelProperties.FILE_NAME,"&lt;full path to uddi ear&gt;");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="386" end="447" />
        <code>(IEARComponentImportDataModelProperties.PROJECT_NAME,"uddi");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="476" end="539" />
        <code>(IEARComponentImportDataModelProperties.COMPONENT_NAME,"uddi");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When I import the WebSphere V5.1 UDDI Registry EAR programmatically using the
following code:

		EnterpriseApplicationImportDataModelProvider provider = new 
EnterpriseApplicationImportDataModelProvider();
		IDataModel earImportInfo = DataModelFactory.createDataModel
(provider);
(IEARComponentImportDataModelProperties.FILE_NAME,"&lt;full path to uddi ear&gt;");
		earImportInfo.setProperty
(IEARComponentImportDataModelProperties.PROJECT_NAME,"uddi");
		earImportInfo.setProperty
(IEARComponentImportDataModelProperties.COMPONENT_NAME,"uddi");

The resulting soap Web project corresponding to the soap.war inside the EAR
contains duplicate classpath entries for the its jar files inside WEB-INF/lib.
This prevents the project from building. Digging into the properties of the
project, it looks like the jars are in the libraries list AND the Web App 
Libraries container as well. If I remove the ones in the libraries list then 
the problem goes away.

This is preventing blocking down-stream processing from succeeding.
Created attachment 25816
WebSphere V5.1 UDDI Registry EAR
This was dropped to HEAD yesterday - and a patch sent to Tim D for AST builds

*** This bug has been marked as a duplicate of 105225 ***
This bug was moved to 'closed' state, since it is so old and since it is a dup, worksforme, invalid bug that its unlikely to still be useful or need further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error.</WithStack>
    <WithOutStack>When I import the WebSphere V5.1 UDDI Registry EAR programmatically using the
following code:

		EnterpriseApplicationImportDataModelProvider provider = new 
EnterpriseApplicationImportDataModelProvider();
		IDataModel earImportInfo = DataModelFactory.createDataModel
(provider);
(IEARComponentImportDataModelProperties.FILE_NAME,"&lt;full path to uddi ear&gt;");
		earImportInfo.setProperty
(IEARComponentImportDataModelProperties.PROJECT_NAME,"uddi");
		earImportInfo.setProperty
(IEARComponentImportDataModelProperties.COMPONENT_NAME,"uddi");

The resulting soap Web project corresponding to the soap.war inside the EAR
contains duplicate classpath entries for the its jar files inside WEB-INF/lib.
This prevents the project from building. Digging into the properties of the
project, it looks like the jars are in the libraries list AND the Web App 
Libraries container as well. If I remove the ones in the libraries list then 
the problem goes away.

This is preventing blocking down-stream processing from succeeding.
Created attachment 25816
WebSphere V5.1 UDDI Registry EAR
This was dropped to HEAD yesterday - and a patch sent to Tim D for AST builds

*** This bug has been marked as a duplicate of 105225 ***
This bug was moved to 'closed' state, since it is so old and since it is a dup, worksforme, invalid bug that its unlikely to still be useful or need further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106297" />
    <CreationDate amount="2005-08-07 03:50:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[1.5][compiler] new A&lt;X&gt;().new B(){}</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="47" end="119" />
        <code>class A&lt;T&gt; { 
	class B { }
	static { 
		new A&lt;String&gt;().new B() {};
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The Sun javac accepts this; Eclipse does not.

class A&lt;T&gt; { 
	class B { }
	static { 
		new A&lt;String&gt;().new B() {};
	}
}

The complation fails with the message "No enclosing instance of type A&lt;T&gt; is accessible. Must qualify 
the allocation with an enclosing instance of type A&lt;T&gt; (e.g. x.new A() where x is an instance of A&lt;T&gt;)."
Bug exists on 3.1.0, problem only arises in presence of anonymous type with such
qualification. 
Fix released in 3.1 maintenance and 3.2 stream.
Added GenericTypeTest#test793-795
Tests are actually GenericTypeTest#test795-797
Verified for 3.2M1 (I20050808-2000)
Verified for 3.1.1 using M20050923-1430.</WithStack>
    <WithOutStack>The Sun javac accepts this; Eclipse does not.

class A&lt;T&gt; { 
	class B { }
	static { 
		new A&lt;String&gt;().new B() {};
	}
}

The complation fails with the message "No enclosing instance of type A&lt;T&gt; is accessible. Must qualify 
the allocation with an enclosing instance of type A&lt;T&gt; (e.g. x.new A() where x is an instance of A&lt;T&gt;)."
Bug exists on 3.1.0, problem only arises in presence of anonymous type with such
qualification. 
Fix released in 3.1 maintenance and 3.2 stream.
Added GenericTypeTest#test793-795
Tests are actually GenericTypeTest#test795-797
Verified for 3.2M1 (I20050808-2000)
Verified for 3.1.1 using M20050923-1430.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106298" />
    <CreationDate amount="2005-08-07 06:30:00 -0400" />
    <DupId amount="173732" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>console does not flush before cin</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="245" end="398" />
        <code>int main() {	
  cout &lt;&lt; "Please enter name: " &lt;&lt; endl;
  string name;     
  cin &gt;&gt; name;     
  cout &lt;&lt; "Hello, " &lt;&lt; name  &lt;&lt; "!" &lt;&lt; endl;
  return 0;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hello,

i have Gentoo Linux and Eclipse SDK Version: 3.1.0 Build id: I20050627-1435
CDT 2.1.1 or 3.0, (perhaps it is not a CDT bug, but a problem with eclipse?)

for example the code

#include &lt;iostream&gt;
#include &lt;string&gt;

using namespace std;

int main() {	
  cout &lt;&lt; "Please enter name: " &lt;&lt; endl;
  string name;     
  cin &gt;&gt; name;     
  cout &lt;&lt; "Hello, " &lt;&lt; name  &lt;&lt; "!" &lt;&lt; endl;
  return 0;
}

has the console in/output

test
Please enter name: 
Hello, test!

that means, i have to enter the name "test" first, before the "Please enter
name:" is printed on the console.
I experience the same problem in a windows-mingw environment. I'm debugging my data structures with a interactive console testbench. I do not see anything on the console unless I drive the testbench to produce enough data to flush stdout or I call stdout explicitly.

I read somewhere that this has to with the underlying libraries not realizing they are attached to a console terminal thus running the io functions in buffered mode. 

Is there anything I could do in the meantime to get the console to behave like a console other then wrapping the io functions to call fflush(stdout); ? 
Hassen, For windows mingw issue, is your behaviour similar to #199219 https://bugs.eclipse.org/bugs/show_bug.cgi?id=199219 ??
See bug 173732 and the workaround there. This one or the other one should probably be marked as duplicate (and the votes merged!).


*** This bug has been marked as a duplicate of bug 173732 ***</WithStack>
    <WithOutStack>Hello,

i have Gentoo Linux and Eclipse SDK Version: 3.1.0 Build id: I20050627-1435
CDT 2.1.1 or 3.0, (perhaps it is not a CDT bug, but a problem with eclipse?)

for example the code

#include &lt;iostream&gt;
#include &lt;string&gt;

using namespace std;

int main() {	
  cout &lt;&lt; "Please enter name: " &lt;&lt; endl;
  string name;     
  cin &gt;&gt; name;     
  cout &lt;&lt; "Hello, " &lt;&lt; name  &lt;&lt; "!" &lt;&lt; endl;
  return 0;
}

has the console in/output

test
Please enter name: 
Hello, test!

that means, i have to enter the name "test" first, before the "Please enter
name:" is printed on the console.
I experience the same problem in a windows-mingw environment. I'm debugging my data structures with a interactive console testbench. I do not see anything on the console unless I drive the testbench to produce enough data to flush stdout or I call stdout explicitly.

I read somewhere that this has to with the underlying libraries not realizing they are attached to a console terminal thus running the io functions in buffered mode. 

Is there anything I could do in the meantime to get the console to behave like a console other then wrapping the io functions to call fflush(stdout); ? 
Hassen, For windows mingw issue, is your behaviour similar to #199219 https://bugs.eclipse.org/bugs/show_bug.cgi?id=199219 ??
See bug 173732 and the workaround there. This one or the other one should probably be marked as duplicate (and the votes merged!).


*** This bug has been marked as a duplicate of bug 173732 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106299" />
    <CreationDate amount="2005-08-07 07:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Double-Click in system tray forwarded to adjacent icon</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>From a user:

"Under Win2K, if RSSOwl is minimized, and you double
click on the RSSOwl icon in the Windows System Tray
toolbar, it will expand RSSOwl, but the 2nd click is
also forwarded to the Palm HotSync icon that is to the
right and adjacent to RSSOwl. Which then opens that
app as well. RSSOwl should "eat" both mouse clicks in
this scenario.

It seems to be unique to the RSSOwl/HotSync
combination. Which is strange, since double clicking
any other icon adjacent to the HotSync one doesn't
cause it to happen. So I think it's something to do
with RSSOwl's handling of double clicks on the icon in
the system tray

The reason I think it's partially RSSOwl is because
other programs in the tray (like right now where I
have a different icon to the right of HotSync) don't
do this. A double click works perfectly fine in this
situation and doesn't open the HotSync menu."

-----

I have added a "MenuDetect" Listener to the TrayItem in order
to show the Menu that is set on it after this event is happening.

In addition there is a SelectionAdapter reacting on "widgetDefaultSelected",
which will restore the application window.

Ben
From another user:

" Windows system tray icon double click misbehaviour.

Havent researched the archives extensively, so sorry
if this is already known.

Running Windows 2k sp4. RSSOwl sits iconized in system
tray. Clicking it does not open it, so I double click
it. Weird thing happens: it opens RSSOwl but also acts
like I right-clicked the icon directly right from it
and picked the bottom item from the menu, in my case
it opens the window for network connetions...

I dont mind double clicking it, but there is
definately something going wrong here!"

Not sure, could it be a call to setVisible I do on TrayItem?
Looks like that method is implemented in dependance of the
Windows-version. I can not reproduce on WinXP.

Ben</WithStack>
    <WithOutStack>From a user:

"Under Win2K, if RSSOwl is minimized, and you double
click on the RSSOwl icon in the Windows System Tray
toolbar, it will expand RSSOwl, but the 2nd click is
also forwarded to the Palm HotSync icon that is to the
right and adjacent to RSSOwl. Which then opens that
app as well. RSSOwl should "eat" both mouse clicks in
this scenario.

It seems to be unique to the RSSOwl/HotSync
combination. Which is strange, since double clicking
any other icon adjacent to the HotSync one doesn't
cause it to happen. So I think it's something to do
with RSSOwl's handling of double clicks on the icon in
the system tray

The reason I think it's partially RSSOwl is because
other programs in the tray (like right now where I
have a different icon to the right of HotSync) don't
do this. A double click works perfectly fine in this
situation and doesn't open the HotSync menu."

-----

I have added a "MenuDetect" Listener to the TrayItem in order
to show the Menu that is set on it after this event is happening.

In addition there is a SelectionAdapter reacting on "widgetDefaultSelected",
which will restore the application window.

Ben
From another user:

" Windows system tray icon double click misbehaviour.

Havent researched the archives extensively, so sorry
if this is already known.

Running Windows 2k sp4. RSSOwl sits iconized in system
tray. Clicking it does not open it, so I double click
it. Weird thing happens: it opens RSSOwl but also acts
like I right-clicked the icon directly right from it
and picked the bottom item from the menu, in my case
it opens the window for network connetions...

I dont mind double clicking it, but there is
definately something going wrong here!"

Not sure, could it be a call to setVisible I do on TrayItem?
Looks like that method is implemented in dependance of the
Windows-version. I can not reproduce on WinXP.

Ben</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="106300" />
    <CreationDate amount="2005-08-07 08:02:00 -0400" />
    <DupId amount="145540" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Help] Adjust relative font sizes in standard help/documentation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Fonts in Eclipse's Help in Mozilla/Firefox under Linux have wrong relative 
sizes. The main text font is too small in general (with standard browser 
settings) and, more importantly, too small compared to the menu font.

Mozilla offers the option to adjust the font size globally. When I use this 
option, the main text becomes readable, however the menu text becomes too big 
and clipped. In the effect, I have to switch font sizes forth and back when 
using help, which is quite annoying. I know that font settings are controlled by 
documentation authors and cannot be standardized, but I hope that at least 
Eclipse's own documentation can be updated to use reasonably sized fonts for all 
supported platforms. The main text font should never be smaller than the menu 
font (it could be larger than it, though).

See attached screenshots.
Created attachment 25817
Default font sizes - tiny main text font, menu font ok.
Created attachment 25818
Increased font size - main text now readable, menu font too large.
The aspect seems unchanged in 3.2RC4.
Also, whatever is decided in terms of relative sizes, the fact that the upper part's text gets clipped on the vertical axis is a bug.
(Agree that using very large fonts is a corner case... except for users with visual deficiencies, or users like me who simply like them.)
Actually it is not even using relative font sizes.. it should.

*** This bug has been marked as a duplicate of 145540 ***</WithStack>
    <WithOutStack>Fonts in Eclipse's Help in Mozilla/Firefox under Linux have wrong relative 
sizes. The main text font is too small in general (with standard browser 
settings) and, more importantly, too small compared to the menu font.

Mozilla offers the option to adjust the font size globally. When I use this 
option, the main text becomes readable, however the menu text becomes too big 
and clipped. In the effect, I have to switch font sizes forth and back when 
using help, which is quite annoying. I know that font settings are controlled by 
documentation authors and cannot be standardized, but I hope that at least 
Eclipse's own documentation can be updated to use reasonably sized fonts for all 
supported platforms. The main text font should never be smaller than the menu 
font (it could be larger than it, though).

See attached screenshots.
Created attachment 25817
Default font sizes - tiny main text font, menu font ok.
Created attachment 25818
Increased font size - main text now readable, menu font too large.
The aspect seems unchanged in 3.2RC4.
Also, whatever is decided in terms of relative sizes, the fact that the upper part's text gets clipped on the vertical axis is a bug.
(Agree that using very large fonts is a corner case... except for users with visual deficiencies, or users like me who simply like them.)
Actually it is not even using relative font sizes.. it should.

*** This bug has been marked as a duplicate of 145540 ***</WithOutStack>
  </Bug>
</infozilla-output>

