<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="108001" />
    <CreationDate amount="2005-08-25 11:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="TPTP.monitoring" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Apache Log Correlation/Analyzer Sample can't be created</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>build: TPTP-4.1.0-200508240924

I wasn't able to create the sample under: File &gt; New &gt; Example &gt; Logging &gt;
Apache Log Correlation/Analyzer Sample.
fixed
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>build: TPTP-4.1.0-200508240924

I wasn't able to create the sample under: File &gt; New &gt; Example &gt; Logging &gt;
Apache Log Correlation/Analyzer Sample.
fixed
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108002" />
    <CreationDate amount="2005-08-25 12:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[refactoring] [move] Visibility wrongly blamed for refusal to move method.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="class">
        <location start="174" end="301" />
        <code>class Foo extends bug.Bug{
    static class Helper{
        static int method(){return number;}
    }
    static class Stub{}
}</code>
      </source_code>
      <source_code type="package">
        <location start="356" end="368" />
        <code>package bug;</code>
      </source_code>
      <source_code type="class">
        <location start="369" end="422" />
        <code>public class Bug {
    protected static int number;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Eclipse refuses to move the method into class Stub, even though manually 
moving the method's text gives a legal result.

----------------------- Foo.java ------------------
class Foo extends bug.Bug{
    static class Helper{
        static int method(){return number;}
    }
    static class Stub{}
}

----------------------- bug/Bug.java ---------------
package bug;
public class Bug {
    protected static int number;
}
This works for me using N20051018-0010 or greater

Closing as works for me</WithStack>
    <WithOutStack>Eclipse refuses to move the method into class Stub, even though manually 
moving the method's text gives a legal result.

----------------------- Foo.java ------------------
class Foo extends bug.Bug{
    static class Helper{
        static int method(){return number;}
    }
    static class Stub{}
}

----------------------- bug/Bug.java ---------------
package bug;
public class Bug {
    protected static int number;
}
This works for me using N20051018-0010 or greater

Closing as works for me</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108003" />
    <CreationDate amount="2005-08-25 12:50:00 -0400" />
    <DupId amount="130764" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[refactoring] 'Rename fully qualified name in non-Java files' updates packages with nonmatching prefix/suffix</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="package">
        <location start="161" end="177" />
        <code>package my.pack;</code>
      </source_code>
      <source_code type="class">
        <location start="178" end="319" />
        <code>public class C {
/*
my.pack
my.pack.subpack
my.pack2
my.pack2.subpack
not.my.pack.subpack
notmy.pack.subpack
notmy.pack2.subpack
My.pack
*/
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20050823-0800

Rename package refactoring: 'Rename fully qualified name in non-Java files'
updates packages with nonmatching prefix/suffix:

- /my/pack/C.java:
package my.pack;
public class C {
/*
my.pack
my.pack.subpack
my.pack2
my.pack2.subpack
not.my.pack.subpack
notmy.pack.subpack
notmy.pack2.subpack
My.pack
*/
}

- /my/pack/Textfile.txt:
my.pack
my.pack.subpack
my.pack2
my.pack2.subpack
not.my.pack.subpack
notmy.pack.subpack
notmy.pack2.subpack
My.pack

- rename package my.pack to ABC, enable all checkboxes, files pattern *.txt
=&gt; was: all but the last lines in Textfile.txt are updated
=&gt; expected: only first two lines are updated (with subpackage renaming, first
three lines should be updated)
Determining whether subpack in my.pack.subpack is a subpackage or a type is too expensive and not doable in all cases.

my.pack.subpack will always be renamed to ABC.subpack now, but the other lines of Textfile.txt are not updated any more.

*** This bug has been marked as a duplicate of 130764 ***</WithStack>
    <WithOutStack>I20050823-0800

Rename package refactoring: 'Rename fully qualified name in non-Java files'
updates packages with nonmatching prefix/suffix:

- /my/pack/C.java:
package my.pack;
public class C {
/*
my.pack
my.pack.subpack
my.pack2
my.pack2.subpack
not.my.pack.subpack
notmy.pack.subpack
notmy.pack2.subpack
My.pack
*/
}

- /my/pack/Textfile.txt:
my.pack
my.pack.subpack
my.pack2
my.pack2.subpack
not.my.pack.subpack
notmy.pack.subpack
notmy.pack2.subpack
My.pack

- rename package my.pack to ABC, enable all checkboxes, files pattern *.txt
=&gt; was: all but the last lines in Textfile.txt are updated
=&gt; expected: only first two lines are updated (with subpackage renaming, first
three lines should be updated)
Determining whether subpack in my.pack.subpack is a subpackage or a type is too expensive and not doable in all cases.

my.pack.subpack will always be renamed to ABC.subpack now, but the other lines of Textfile.txt are not updated any more.

*** This bug has been marked as a duplicate of 130764 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108004" />
    <CreationDate amount="2005-08-25 12:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Profiling" />
    <component amount="Platform.Doc" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Eclispse corner article</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>We need to write a series of articles for Eclipse Corner.

The first one should be focus on TPTP overview/scope and adoption models.

Ling
Please see bug #88418 for additional information.
Article proposal due to PMC Sept 27, abstract by i2.  Ling will help place 
thereafter which will determine article completion date.
Defered out of 4.1. Will revist right after 4.1 GA.
I am closing this. There was already one article by Valentina and none other are planned before end of June.

As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>We need to write a series of articles for Eclipse Corner.

The first one should be focus on TPTP overview/scope and adoption models.

Ling
Please see bug #88418 for additional information.
Article proposal due to PMC Sept 27, abstract by i2.  Ling will help place 
thereafter which will determine article completion date.
Defered out of 4.1. Will revist right after 4.1 GA.
I am closing this. There was already one article by Valentina and none other are planned before end of June.

As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108005" />
    <CreationDate amount="2005-08-25 12:56:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Releng" />
    <component amount="releng" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[adopter usage scan] false negatives with single-JAR plugins</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Just got this user report:

David Slubicki 08/24/2005 06:52 AM	
&gt; Several plugins, which I know to contain API violations, are showing
&gt; up "violation-free" on the API Violations page (for the
&gt; 20050823_1640 build). These same plugins showed up as violators in
&gt; previous builds (e.g. 20050822_1600). It appears that the common
&gt; characteristic which these erroneously-pardoned plugins share is
&gt; that they all just switched over to using the single-jar packaging
&gt; format

I'm currently using the scanner as downloaded from

http://www.eclipse.org/downloads/download.php?file=/webtools/downloads/apiscanner.zip

which seems to be unchanged from late May (which is about when I
installed). Do I need to step up to a later version?
There's a "hack" that you can use to force the scanner to pick up single jarred 
plug-ins. When you run the violation scanner, make sure the -eclipseDir option 
points to the directory that contains the single jarred plug-ins. For example:

D:/
    |__ rad-build
               |__ eclipse
                          |__ plugins
                                     |__ com.ibm.etools.example1_7.0.0.jar
                                     |__ com.ibm.etools.example2_7.0.0.jar

For the above file structure, specify -eclipseDir D:/rad-build/eclipse/plugins, 
then the single jarred plug-ins should be picked up. This is not the best 
solution, we are improving it. In the meantime, try this out, see if it works.
John, over to you. Thanks. I think this is fixed...
This should be fixed.
Closing as part of mass query to clean up old resolved bugs in untargetted milestones.</WithStack>
    <WithOutStack>Just got this user report:

David Slubicki 08/24/2005 06:52 AM	
&gt; Several plugins, which I know to contain API violations, are showing
&gt; up "violation-free" on the API Violations page (for the
&gt; 20050823_1640 build). These same plugins showed up as violators in
&gt; previous builds (e.g. 20050822_1600). It appears that the common
&gt; characteristic which these erroneously-pardoned plugins share is
&gt; that they all just switched over to using the single-jar packaging
&gt; format

I'm currently using the scanner as downloaded from

http://www.eclipse.org/downloads/download.php?file=/webtools/downloads/apiscanner.zip

which seems to be unchanged from late May (which is about when I
installed). Do I need to step up to a later version?
There's a "hack" that you can use to force the scanner to pick up single jarred 
plug-ins. When you run the violation scanner, make sure the -eclipseDir option 
points to the directory that contains the single jarred plug-ins. For example:

D:/
    |__ rad-build
               |__ eclipse
                          |__ plugins
                                     |__ com.ibm.etools.example1_7.0.0.jar
                                     |__ com.ibm.etools.example2_7.0.0.jar

For the above file structure, specify -eclipseDir D:/rad-build/eclipse/plugins, 
then the single jarred plug-ins should be picked up. This is not the best 
solution, we are improving it. In the meantime, try this out, see if it works.
John, over to you. Thanks. I think this is fixed...
This should be fixed.
Closing as part of mass query to clean up old resolved bugs in untargetted milestones.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108006" />
    <CreationDate amount="2005-08-25 12:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Tasks" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>add UI for restoring the tasklist from the backup copy</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- catching any exceptions on</Line>
          <Line>reading the tasklist</Line>
          <Line>- popping up a dialog that offers to move the tasklist-backup.xml</Line>
          <Line>list to tasklist.xml and re-read.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>There is currently no way of know this is possible without reading the documentation.
It turns out that this should be easy to do by:
- catching any exceptions on
reading the tasklist
- popping up a dialog that offers to move the tasklist-backup.xml
list to tasklist.xml and re-read.

The dialog should have full paths so that
people learn where the backup is if this happens.

We now use the above suggestion to attempt to restore the tasklist from the
backup version.</WithStack>
    <WithOutStack>There is currently no way of know this is possible without reading the documentation.
It turns out that this should be easy to do by:
- catching any exceptions on
reading the tasklist
- popping up a dialog that offers to move the tasklist-backup.xml
list to tasklist.xml and re-read.

The dialog should have full paths so that
people learn where the backup is if this happens.

We now use the above suggestion to attempt to restore the tasklist from the
backup version.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108007" />
    <CreationDate amount="2005-08-25 12:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.Doc" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Eclipse corner article</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>We need to write a series of articles for Eclipse Corner.

One of them should be focus on testing tools inside TPTP.

Ling
Article proposal due to PMC Sept 27, abstract by i2.  Ling will help place 
thereafter which will determine article completion date.
fixing component assignment - TPTP.Testing to Test.Doc.
Deferred to 4.2 after PMC discussion
move to 4.3
Please assign to me.
Returning this defect since there are no proposed TPTP Test articles.
Closing since originator's email address is no longer valid.
Updating sizings.</WithStack>
    <WithOutStack>We need to write a series of articles for Eclipse Corner.

One of them should be focus on testing tools inside TPTP.

Ling
Article proposal due to PMC Sept 27, abstract by i2.  Ling will help place 
thereafter which will determine article completion date.
fixing component assignment - TPTP.Testing to Test.Doc.
Deferred to 4.2 after PMC discussion
move to 4.3
Please assign to me.
Returning this defect since there are no proposed TPTP Test articles.
Closing since originator's email address is no longer valid.
Updating sizings.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108008" />
    <CreationDate amount="2005-08-25 12:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[ccp][reorg] cannot paste class in default package into another package.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) In the default package create and save a file with two top level classes in</Line>
          <Line>it.</Line>
          <Line>2) In PackageExplorer copy the second of the two classes.</Line>
          <Line>3) Try to paste it into another package, but Eclipse refuses.</Line>
          <Line>Secondary types can only be copied to other Java files, not in package.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Steps:
1) In the default package create and save a file with two top level classes in 
it.
2) In PackageExplorer copy the second of the two classes.
3) Try to paste it into another package, but Eclipse refuses.
Secondary types can only be copied to other Java files, not in package.

As secondary types are not common I suggest to close this bug.</WithStack>
    <WithOutStack>Steps:
1) In the default package create and save a file with two top level classes in 
it.
2) In PackageExplorer copy the second of the two classes.
3) Try to paste it into another package, but Eclipse refuses.
Secondary types can only be copied to other Java files, not in package.

As secondary types are not common I suggest to close this bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108009" />
    <CreationDate amount="2005-08-25 13:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Profiling" />
    <component amount="Platform.Doc" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Eclipse corner article</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>We need to write a series of articles for Eclipse Corner.

One of them should be focus on monitoring and profiling tools inside TPTP.

Ling
Article proposal due to PMC Sept 27, abstract by i2.  Ling will help place 
thereafter which will determine article completion date.
Reassigning to Trace.Doc because that's the component for profiling.
Deferred to 4.2 after PMC discussion
Still to be done (=&gt;4.3)
Retargetting to 4.4
Cleaning up the list
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. Since this defect is more than 2 years old, it may be no longer relevant. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this defect is resolved as WONTFIX. If this defect is still relevant and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since the originator of this enhancement/defect has an inactive Bugzilla account and it may be no longer relevant. If this defect is still relevant and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>We need to write a series of articles for Eclipse Corner.

One of them should be focus on monitoring and profiling tools inside TPTP.

Ling
Article proposal due to PMC Sept 27, abstract by i2.  Ling will help place 
thereafter which will determine article completion date.
Reassigning to Trace.Doc because that's the component for profiling.
Deferred to 4.2 after PMC discussion
Still to be done (=&gt;4.3)
Retargetting to 4.4
Cleaning up the list
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. Since this defect is more than 2 years old, it may be no longer relevant. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this defect is resolved as WONTFIX. If this defect is still relevant and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since the originator of this enhancement/defect has an inactive Bugzilla account and it may be no longer relevant. If this defect is still relevant and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108010" />
    <CreationDate amount="2005-08-25 13:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="TPTP.monitoring" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Can't run the Log Parser Sample</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build: TPTP-4.1.0-200508240924

I wasn't able to run the Log Parser Sample from File &gt; New &gt; Example &gt; Logging.
Worked for me with TPTP 4.1.0 20050825_0100 build.  Please try again with this 
or a newer build. Reopen the defect if the problem occurs again.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Build: TPTP-4.1.0-200508240924

I wasn't able to run the Log Parser Sample from File &gt; New &gt; Example &gt; Logging.
Worked for me with TPTP 4.1.0 20050825_0100 build.  Please try again with this 
or a newer build. Reopen the defect if the problem occurs again.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108011" />
    <CreationDate amount="2005-08-25 13:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Java" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>prevent automatic package explorer collapse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This annoying and can hide valuabe context.  Seems to happen when switching
projects.
Fixed by auto-expanding.  Preventing collapse outright could still be considered.

Done.</WithStack>
    <WithOutStack>This annoying and can hide valuabe context.  Seems to happen when switching
projects.
Fixed by auto-expanding.  Preventing collapse outright could still be considered.

Done.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108012" />
    <CreationDate amount="2005-08-25 13:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Markers] Multi filters do not update when filter is disabled</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20050825

I have two filters set up - one for warnings on the selected resources and one
for  errors everywhere. If I disable the warnings one the problems view is not
updating.
We were actually not checking enablement state at all.  Fixed in build &gt;20050825
It is working for the configure filters dialog but not on the quick selection
with the menu
Fixed for build &gt;20050921-0100
Verified in 20050921-1200</WithStack>
    <WithOutStack>20050825

I have two filters set up - one for warnings on the selected resources and one
for  errors everywhere. If I disable the warnings one the problems view is not
updating.
We were actually not checking enablement state at all.  Fixed in build &gt;20050825
It is working for the configure filters dialog but not on the quick selection
with the menu
Fixed for build &gt;20050921-0100
Verified in 20050921-1200</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108013" />
    <CreationDate amount="2005-08-25 13:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Markers] Filters need to be enabled faster than opening the dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1) Convert the dialog to using a checked list</Line>
          <Line>2) Allow enablement and disablement from the problems view</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Currently to enable and disable a filter you need to open the dialog.

We need to
1) Convert the dialog to using a checked list
2) Allow enablement and disablement from the problems view

The initial idea is to use menu items that can be toggled on or off easily. We
may want to consider having a "More" area that shows the unfiltered items as well.
Fixed in build &gt;20050907
Verified in 20050920</WithStack>
    <WithOutStack>Currently to enable and disable a filter you need to open the dialog.

We need to
1) Convert the dialog to using a checked list
2) Allow enablement and disablement from the problems view

The initial idea is to use menu items that can be toggled on or off easily. We
may want to consider having a "More" area that shows the unfiltered items as well.
Fixed in build &gt;20050907
Verified in 20050920</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108014" />
    <CreationDate amount="2005-08-25 13:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="DEVELOPMENT" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[generics] cannot override when returning T (but stranger)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330571308">
        <Exception>java.lang.IllegalStateException</Exception>
        <Reason>Expecting raw type</Reason>
        <Frames>
          <Frame depth="0">org.aspectj.weaver.TypeFactory.createParameterizedType(TypeFactory.java:42)</Frame>
          <Frame depth="1">org.aspectj.weaver.World.resolveToReferenceType(World.java:262)</Frame>
          <Frame depth="2">org.aspectj.weaver.World.resolve(World.java:205)</Frame>
          <Frame depth="3">org.aspectj.weaver.World.resolve(World.java:127)</Frame>
          <Frame depth="4">org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.fromEclipse(EclipseFactory.java:125)</Frame>
          <Frame depth="5">org.aspectj.ajdt.internal.compiler.lookup.EclipseSourceType.getSuperclass(EclipseSourceType.java:115)</Frame>
          <Frame depth="6">org.aspectj.weaver.ReferenceType.getSuperclass(ReferenceType.java:443)</Frame>
          <Frame depth="7">org.aspectj.ajdt.internal.compiler.problem.AjProblemReporter.methodMustOverride(AjProblemReporter.java:356)</Frame>
          <Frame depth="8">org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:153)</Frame>
          <Frame depth="9">org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:400)</Frame>
          <Frame depth="10">org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1076)</Frame>
          <Frame depth="11">org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1105)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="6">
      <source_code type="class">
        <location start="255" end="322" />
        <code>class Bug_Provider {
  public void enable_bug(Object argument) {}
}</code>
      </source_code>
      <source_code type="class">
        <location start="324" end="437" />
        <code>class Bug_Checker&lt;T&gt; extends Bug_Provider {
  public T is_bug_enabled() {
    return (T) new Boolean(true);
  }
}</code>
      </source_code>
      <source_code type="class">
        <location start="439" end="1138" />
        <code>public class Bug {
  public static void main(String[] args) throws InterruptedException {
    final Bug_Checker&lt;Boolean&gt; first = new Bug_Checker&lt;Boolean&gt;() {
      @Override // compiler agrees, this is an override
      public Boolean is_bug_enabled() {
        return new Boolean(false);
      }
    };
    System.out.println("is bug enabled? " + first.is_bug_enabled()); // false

    first.enable_bug(null);

    final Bug_Checker&lt;Boolean&gt; second = new Bug_Checker&lt;Boolean&gt;() {
      //@Override // compiler disagrees now!
      public Boolean is_bug_enabled() {
        return new Boolean(false);
      }
    };
    System.out.println("is bug enabled? " +second.is_bug_enabled()); // true!
  }
}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="1842" end="1859" />
        <code>/*   methods   */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2371" end="2424" />
        <code>is_bug_enabled() of type new Bug_Checker&lt;Boolean&gt;(){}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2459" end="2492" />
        <code>public Boolean is_bug_enabled() {</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>this bug is a sequel to Bug #107898 (currently resolved), which apparently only
fixed part of the problem.

under the same strange circumstances which enabled the first bug, @Override
fails to work properly and overiding the method anyway does nothing:


class Bug_Provider {
  public void enable_bug(Object argument) {}
}

class Bug_Checker&lt;T&gt; extends Bug_Provider {
  public T is_bug_enabled() {
    return (T) new Boolean(true);
  }
}

public class Bug {
  public static void main(String[] args) throws InterruptedException {
    final Bug_Checker&lt;Boolean&gt; first = new Bug_Checker&lt;Boolean&gt;() {
      @Override // compiler agrees, this is an override
      public Boolean is_bug_enabled() {
        return new Boolean(false);
      }
    };
    System.out.println("is bug enabled? " + first.is_bug_enabled()); // false

    first.enable_bug(null);

    final Bug_Checker&lt;Boolean&gt; second = new Bug_Checker&lt;Boolean&gt;() {
      //@Override // compiler disagrees now!
      public Boolean is_bug_enabled() {
        return new Boolean(false);
      }
    };
    System.out.println("is bug enabled? " +second.is_bug_enabled()); // true!
  }
}


note that if the second override of is_bug_enabled is declared to return Object
instead, it does override the original method (although @Override thinks
otherwise). instead, the compiler should return an error, like it does when the
bug is disabled.
Well ... a last minute fix went in for a local type problem ... and it appears
to be playing up a bit here, when I uncomment the 2nd @Override and compile the
program, it blows up:

C:\Bug.java [error] Internal compiler error
java.lang.IllegalStateException: Expecting raw type
	at org.aspectj.weaver.TypeFactory.createParameterizedType(TypeFactory.java:42)
	at org.aspectj.weaver.World.resolveToReferenceType(World.java:262)
	at org.aspectj.weaver.World.resolve(World.java:205)
	at org.aspectj.weaver.World.resolve(World.java:127)
	at
org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory.fromEclipse(EclipseFactory.java:125)
	at
org.aspectj.ajdt.internal.compiler.lookup.EclipseSourceType.getSuperclass(EclipseSourceType.java:115)
	at org.aspectj.weaver.ReferenceType.getSuperclass(ReferenceType.java:443)
	at
org.aspectj.ajdt.internal.compiler.problem.AjProblemReporter.methodMustOverride(AjProblemReporter.java:356)
	at
org.aspectj.org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:153)
	at
org.aspectj.org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:400)
	at
org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1076)
	at
org.aspectj.org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1105)

tracing this a little further I put a breakpoint on EclipseSourceType.isGeneric
and the binding being queried is:

Anonymous type : (id=NoId)
final class $Local$ extends Bug_Checker&lt;java.lang.Boolean&gt;
	enclosing type : Bug
/*   methods   */
java.lang.Boolean is_bug_enabled() 

when I would have expected it to answer TRUE.  Possibly an incorrect lookup of
$Local$ has caused us to put a parameterized type in as the generic type when it
shouldn't have...
indeed, in my before-the-last-minute-fix version of ajc, uncommenting the second
override yields an error which does mention $Local$:


[error] can't find type $Local$
        
[error] can't find type $Local$
        
/home/user/sgelin3/dev/java/ajc/108014-pending/Bug.java:25 [error] The method
is_bug_enabled() of type new Bug_Checker&lt;Boolean&gt;(){} must override a superclass
method
public Boolean is_bug_enabled() {
               ^^^^^^^^^

3 errors
The $Local$ issue was occuring because we were trying to put out a message that
the method did not override the super method (and at the point the message was
issued, we hadn't assigned a constant pool name to the inner type). 

The underlying bug was that we didn't think the method overrode a super method.
The call to enable_bug(null) was signifcant in that it caused us to go looking
up the hierarchy for an exact method match, based on the inferred argument type.
When passing an Object this finds the method in Bug_Provider that takes an
Object. When passing null that method is only seen as a *candidate* match, and
we have to do some more work. In the "more work" we happened to also look at
ITDs made on the type (none in this case) and a horrible side-effect of not
finding any was to remove all knowledge of methods in the type of the receiver
(in your program, the type of first). This erased all trace of is_bug_enabled in
the anonymous Bug_Checker&lt;Boolean&gt; class , leaving the program to bind the
second message send to the supertype method and also causing the bad override
message.

This whole mess should now be cleared up, and a fix is checked into the tree.
We're going to release 1.5.0 M3a with the fix for this bug and also bug 108050
included.</WithStack>
    <WithOutStack>this bug is a sequel to Bug #107898 (currently resolved), which apparently only
fixed part of the problem.

under the same strange circumstances which enabled the first bug, @Override
fails to work properly and overiding the method anyway does nothing:


class Bug_Provider {
  public void enable_bug(Object argument) {}
}

class Bug_Checker&lt;T&gt; extends Bug_Provider {
  public T is_bug_enabled() {
    return (T) new Boolean(true);
  }
}

public class Bug {
  public static void main(String[] args) throws InterruptedException {
    final Bug_Checker&lt;Boolean&gt; first = new Bug_Checker&lt;Boolean&gt;() {
      @Override // compiler agrees, this is an override
      public Boolean is_bug_enabled() {
        return new Boolean(false);
      }
    };
    System.out.println("is bug enabled? " + first.is_bug_enabled()); // false

    first.enable_bug(null);

    final Bug_Checker&lt;Boolean&gt; second = new Bug_Checker&lt;Boolean&gt;() {
      //@Override // compiler disagrees now!
      public Boolean is_bug_enabled() {
        return new Boolean(false);
      }
    };
    System.out.println("is bug enabled? " +second.is_bug_enabled()); // true!
  }
}


note that if the second override of is_bug_enabled is declared to return Object
instead, it does override the original method (although @Override thinks
otherwise). instead, the compiler should return an error, like it does when the
bug is disabled.
Well ... a last minute fix went in for a local type problem ... and it appears
to be playing up a bit here, when I uncomment the 2nd @Override and compile the
program, it blows up:

C:\Bug.java [error] Internal compiler error


tracing this a little further I put a breakpoint on EclipseSourceType.isGeneric
and the binding being queried is:

Anonymous type : (id=NoId)
final class $Local$ extends Bug_Checker&lt;java.lang.Boolean&gt;
	enclosing type : Bug
/*   methods   */
java.lang.Boolean is_bug_enabled() 

when I would have expected it to answer TRUE.  Possibly an incorrect lookup of
$Local$ has caused us to put a parameterized type in as the generic type when it
shouldn't have...
indeed, in my before-the-last-minute-fix version of ajc, uncommenting the second
override yields an error which does mention $Local$:


[error] can't find type $Local$
        
[error] can't find type $Local$
        
/home/user/sgelin3/dev/java/ajc/108014-pending/Bug.java:25 [error] The method
is_bug_enabled() of type new Bug_Checker&lt;Boolean&gt;(){} must override a superclass
method
public Boolean is_bug_enabled() {
               ^^^^^^^^^

3 errors
The $Local$ issue was occuring because we were trying to put out a message that
the method did not override the super method (and at the point the message was
issued, we hadn't assigned a constant pool name to the inner type). 

The underlying bug was that we didn't think the method overrode a super method.
The call to enable_bug(null) was signifcant in that it caused us to go looking
up the hierarchy for an exact method match, based on the inferred argument type.
When passing an Object this finds the method in Bug_Provider that takes an
Object. When passing null that method is only seen as a *candidate* match, and
we have to do some more work. In the "more work" we happened to also look at
ITDs made on the type (none in this case) and a horrible side-effect of not
finding any was to remove all knowledge of methods in the type of the receiver
(in your program, the type of first). This erased all trace of is_bug_enabled in
the anonymous Bug_Checker&lt;Boolean&gt; class , leaving the program to bind the
second message send to the supertype method and also causing the bad override
message.

This whole mess should now be cleared up, and a fix is checked into the tree.
We're going to release 1.5.0 M3a with the fix for this bug and also bug 108050
included.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108015" />
    <CreationDate amount="2005-08-25 13:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Markers]  Filters need to be created, enabled and disabled declaratively</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>20050823

Currently filters can only be added and enabled by the filters dialog. These
should be done declaratively.

The extension point should also allow a product to define the filters that are
on by default so enablement should not be done in the filter definition.
This was implemented in 3.2 M2.</WithStack>
    <WithOutStack>20050823

Currently filters can only be added and enabled by the filters dialog. These
should be done declaratively.

The extension point should also allow a product to define the filters that are
on by default so enablement should not be done in the filter definition.
This was implemented in 3.2 M2.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108016" />
    <CreationDate amount="2005-08-25 13:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Markers] Need to be able to categorize marker types</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20050823

Currently you cannot organize the marker types properly. We need to be able to
set categories for them.

The suggestion was that this would also be done at the product level (correct me
if I have this backwards).

Question for Edurado and Michael - should we limit this to the specified marker
types for the declared filters or should we just sort by defaults?
This has been released to HEAD for build &gt;20051104
Verified in 20051212-0100</WithStack>
    <WithOutStack>20050823

Currently you cannot organize the marker types properly. We need to be able to
set categories for them.

The suggestion was that this would also be done at the product level (correct me
if I have this backwards).

Question for Edurado and Michael - should we limit this to the specified marker
types for the declared filters or should we just sort by defaults?
This has been released to HEAD for build &gt;20051104
Verified in 20051212-0100</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108017" />
    <CreationDate amount="2005-08-25 13:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Markers] Disabling a marker type disables the whole filter</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20050825

When you disable a marker type it disables the whole dialog.
Fixed in build &gt;20050824
Verified in 20050920</WithStack>
    <WithOutStack>20050825

When you disable a marker type it disables the whole dialog.
Fixed in build &gt;20050824
Verified in 20050920</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108018" />
    <CreationDate amount="2005-08-25 13:36:00 -0400" />
    <DupId amount="114344" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>Would love "case smart" find/replace ala Emacs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In emacs, if you do a query replace from "foo" to "bar", it will replace "foo"
with "bar" but also "Foo" with "Bar", automatically.  This is especially useful
when changing the name of a Java property, for example, and you want to change
not only the internal field name (e.g. _foo) but also the setter and getter
method names (getFoo and setFoo).  Currently in Eclipse, this requires two
passes with case sensitive searching enabled.
Dustin, for the field rename case. Why don't you use the Java refactoring
support which gives you the ability to rename setter and getters as well. All
will be done in on shot then as well.

Time permitted.


*** This bug has been marked as a duplicate of bug 114344 ***</WithStack>
    <WithOutStack>In emacs, if you do a query replace from "foo" to "bar", it will replace "foo"
with "bar" but also "Foo" with "Bar", automatically.  This is especially useful
when changing the name of a Java property, for example, and you want to change
not only the internal field name (e.g. _foo) but also the setter and getter
method names (getFoo and setFoo).  Currently in Eclipse, this requires two
passes with case sensitive searching enabled.
Dustin, for the field rename case. Why don't you use the Java refactoring
support which gives you the ability to rename setter and getters as well. All
will be done in on shot then as well.

Time permitted.


*** This bug has been marked as a duplicate of bug 114344 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108019" />
    <CreationDate amount="2005-08-25 13:42:00 -0400" />
    <DupId amount="154238" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[rename] Rename package with updating textual matches throws MalformedTreeException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330571308">
        <Exception>org.eclipse.text.edits.MalformedTreeException</Exception>
        <Reason>End position lies outside
document range</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.text.edits.TextEditProcessor.checkIntegrityDo(TextEditProcessor.java:169)</Frame>
          <Frame depth="1">org.eclipse.text.edits.TextEdit.dispatchCheckIntegrity(TextEdit.java:704)</Frame>
          <Frame depth="2">org.eclipse.text.edits.TextEditProcessor.performEdits(TextEditProcessor.java:148)</Frame>
          <Frame depth="3">org.eclipse.ltk.core.refactoring.TextChange.perform(TextChange.java:240)</Frame>
          <Frame depth="4">org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:279)</Frame>
          <Frame depth="5">org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:279)</Frame>
          <Frame depth="6">org.eclipse.ltk.core.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:232)</Frame>
          <Frame depth="7">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)</Frame>
          <Frame depth="8">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1739)</Frame>
          <Frame depth="9">org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:280)</Frame>
          <Frame depth="10">org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.access$1(UIPerformChangeOperation.java:1)</Frame>
          <Frame depth="11">org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation$1.run(UIPerformChangeOperation.java:63)</Frame>
          <Frame depth="12">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)</Frame>
          <Frame depth="13">org.eclipse.core.runtime.Platform.run(Platform.java:783)</Frame>
          <Frame depth="14">org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation$2.run(UIPerformChangeOperation.java:81)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3113)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2768)</Frame>
          <Frame depth="19">org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:153)</Frame>
          <Frame depth="20">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:303)</Frame>
          <Frame depth="21">org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:293)</Frame>
          <Frame depth="22">org.eclipse.ltk.ui.refactoring.RefactoringWizard.internalPerformFinish(RefactoringWizard.java:547)</Frame>
          <Frame depth="23">org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.performFinish(PreviewWizardPage.java:175)</Frame>
          <Frame depth="24">org.eclipse.ltk.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:613)</Frame>
          <Frame depth="25">org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.okPressed(RefactoringWizardDialog2.java:417)</Frame>
          <Frame depth="26">org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:409)</Frame>
          <Frame depth="27">org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:884)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3136)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2765)</Frame>
          <Frame depth="33">org.eclipse.jface.window.Window.runEventLoop(Window.java:809)</Frame>
          <Frame depth="34">org.eclipse.jface.window.Window.open(Window.java:787)</Frame>
          <Frame depth="35">org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:125)</Frame>
          <Frame depth="36">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="37">org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:138)</Frame>
          <Frame depth="38">org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:40)</Frame>
          <Frame depth="39">org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.activate(UserInterfaceStarter.java:56)</Frame>
          <Frame depth="40">org.eclipse.jdt.internal.ui.refactoring.reorg.RenameUserInterfaceStarter.activate(RenameUserInterfaceStarter.java:113)</Frame>
          <Frame depth="41">org.eclipse.jdt.ui.refactoring.RenameSupport.openDialog(RenameSupport.java:114)</Frame>
          <Frame depth="42">org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startRenameRefactoring(RefactoringExecutionStarter.java:331)</Frame>
          <Frame depth="43">org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:171)</Frame>
          <Frame depth="44">org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:102)</Frame>
          <Frame depth="45">org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:108)</Frame>
          <Frame depth="46">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:222)</Frame>
          <Frame depth="47">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:198)</Frame>
          <Frame depth="48">org.eclipse.jface.action.Action.runWithEvent(Action.java:996)</Frame>
          <Frame depth="49">org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:222)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:228)</Frame>
          <Frame depth="51">org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:117)</Frame>
          <Frame depth="52">org.eclipse.core.commands.Command.execute(Command.java:311)</Frame>
          <Frame depth="53">org.eclipse.core.commands.ParameterizedCommand.execute(ParameterizedCommand.java:396)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:459)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:781)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:828)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:550)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:493)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:117)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.filterEvent(Display.java:920)</Frame>
          <Frame depth="62">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:883)</Frame>
          <Frame depth="63">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:908)</Frame>
          <Frame depth="64">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:893)</Frame>
          <Frame depth="65">org.eclipse.swt.widgets.Control.traverse(Control.java:2794)</Frame>
          <Frame depth="66">org.eclipse.swt.widgets.Control.translateMnemonic(Control.java:2635)</Frame>
          <Frame depth="67">org.eclipse.swt.widgets.Composite.translateMnemonic(Composite.java:856)</Frame>
          <Frame depth="68">org.eclipse.swt.widgets.Control.translateMnemonic(Control.java:2653)</Frame>
          <Frame depth="69">org.eclipse.swt.widgets.Display.translateMnemonic(Display.java:3570)</Frame>
          <Frame depth="70">org.eclipse.swt.widgets.Display.filterMessage(Display.java:934)</Frame>
          <Frame depth="71">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2761)</Frame>
          <Frame depth="72">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1734)</Frame>
          <Frame depth="73">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1698)</Frame>
          <Frame depth="74">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="75">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="76">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="77">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="78">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="79">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="80">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="81">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="82">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="83">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="84">org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)</Frame>
          <Frame depth="85">org.eclipse.core.launcher.Main.basicRun(Main.java:282)</Frame>
          <Frame depth="86">org.eclipse.core.launcher.Main.run(Main.java:977)</Frame>
          <Frame depth="87">org.eclipse.core.launcher.Main.main(Main.java:952)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="11">
        <Lines>
          <Line>- java project with package my.pack</Line>
          <Line>- text file my/pack/Textfile.txt:</Line>
          <Line>my.pack</Line>
          <Line>my.pack.</Line>
          <Line>my.pack.subpack</Line>
          <Line>my.pack2</Line>
          <Line>my.pack2.subpack</Line>
          <Line>not.my.pack.subpack</Line>
          <Line>notmy.pack.subpack</Line>
          <Line>notmy.pack2.subpack</Line>
          <Line>My.pack</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- rename package my.pack to my, enable FQN updating in *.txt files</Line>
          <Line>- press Preview, press OK</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20050823-0800

- java project with package my.pack
- text file my/pack/Textfile.txt:
my.pack
my.pack.
my.pack.subpack
my.pack2
my.pack2.subpack
not.my.pack.subpack
notmy.pack.subpack
notmy.pack2.subpack
My.pack

- rename package my.pack to my, enable FQN updating in *.txt files
- press Preview, press OK

Error 2005-08-25 19:36:11.090 Problems occurred when invoking code from plug-in:
"org.eclipse.ltk.ui.refactoring".
org.eclipse.text.edits.MalformedTreeException: End position lies outside
document range
at
org.eclipse.text.edits.TextEditProcessor.checkIntegrityDo(TextEditProcessor.java:169)
at org.eclipse.text.edits.TextEdit.dispatchCheckIntegrity(TextEdit.java:704)
at org.eclipse.text.edits.TextEditProcessor.performEdits(TextEditProcessor.java:148)
at org.eclipse.ltk.core.refactoring.TextChange.perform(TextChange.java:240)
at
org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:279)
at
org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:279)
at
org.eclipse.ltk.core.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:232)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1739)
at
org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:280)
at
org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.access$1(UIPerformChangeOperation.java:1)
at
org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation$1.run(UIPerformChangeOperation.java:63)
at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)
at org.eclipse.core.runtime.Platform.run(Platform.java:783)
at
org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation$2.run(UIPerformChangeOperation.java:81)
at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)
at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3113)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2768)
at
org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:153)
at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:303)
at
org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:293)
at
org.eclipse.ltk.ui.refactoring.RefactoringWizard.internalPerformFinish(RefactoringWizard.java:547)
at
org.eclipse.ltk.internal.ui.refactoring.PreviewWizardPage.performFinish(PreviewWizardPage.java:175)
at
org.eclipse.ltk.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:613)
at
org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.okPressed(RefactoringWizardDialog2.java:417)
at org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:409)
at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:884)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3136)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2765)
at org.eclipse.jface.window.Window.runEventLoop(Window.java:809)
at org.eclipse.jface.window.Window.open(Window.java:787)
at
org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:125)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at
org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:138)
at
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:40)
at
org.eclipse.jdt.internal.ui.refactoring.UserInterfaceStarter.activate(UserInterfaceStarter.java:56)
at
org.eclipse.jdt.internal.ui.refactoring.reorg.RenameUserInterfaceStarter.activate(RenameUserInterfaceStarter.java:113)
at org.eclipse.jdt.ui.refactoring.RenameSupport.openDialog(RenameSupport.java:114)
at
org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startRenameRefactoring(RefactoringExecutionStarter.java:331)
at
org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:171)
at
org.eclipse.jdt.internal.ui.refactoring.actions.RenameJavaElementAction.run(RenameJavaElementAction.java:102)
at org.eclipse.jdt.ui.actions.RenameAction.run(RenameAction.java:108)
at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:222)
at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:198)
at org.eclipse.jface.action.Action.runWithEvent(Action.java:996)
at org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:222)
at org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:228)
at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:117)
at org.eclipse.core.commands.Command.execute(Command.java:311)
at
org.eclipse.core.commands.ParameterizedCommand.execute(ParameterizedCommand.java:396)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:459)
at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:781)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:828)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:550)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:493)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:117)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
at org.eclipse.swt.widgets.Display.filterEvent(Display.java:920)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:883)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:908)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:893)
at org.eclipse.swt.widgets.Control.traverse(Control.java:2794)
at org.eclipse.swt.widgets.Control.translateMnemonic(Control.java:2635)
at org.eclipse.swt.widgets.Composite.translateMnemonic(Composite.java:856)
at org.eclipse.swt.widgets.Control.translateMnemonic(Control.java:2653)
at org.eclipse.swt.widgets.Display.translateMnemonic(Display.java:3570)
at org.eclipse.swt.widgets.Display.filterMessage(Display.java:934)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2761)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1734)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1698)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)
at org.eclipse.core.launcher.Main.basicRun(Main.java:282)
at org.eclipse.core.launcher.Main.run(Main.java:977)
at org.eclipse.core.launcher.Main.main(Main.java:952)
Added regression test.

*** This bug has been marked as a duplicate of 154238 ***</WithStack>
    <WithOutStack>I20050823-0800

- java project with package my.pack
- text file my/pack/Textfile.txt:
my.pack
my.pack.
my.pack.subpack
my.pack2
my.pack2.subpack
not.my.pack.subpack
notmy.pack.subpack
notmy.pack2.subpack
My.pack

- rename package my.pack to my, enable FQN updating in *.txt files
- press Preview, press OK

Error 2005-08-25 19:36:11.090 Problems occurred when invoking code from plug-in:
"org.eclipse.ltk.ui.refactoring".

Added regression test.

*** This bug has been marked as a duplicate of 154238 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108020" />
    <CreationDate amount="2005-08-25 13:44:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Java element delta must surface IResourceDelta.DESCRIPTION</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When the project description of an IProject changes the resource delta flags
this as a special DESCRIPTION change. However the Java model delta for a
corresponding Java project flags this as a unspecific content changed.

Shouldn't the Java model flag Description changes as well. Another interesting
flag to be surfaced as well could be the ENCODING flag.
Side note: the Javadoc comment for content changes says:

This flag is only valid for elements which correspond to files
I'm not sure what is the use case for surfacing the DESCRIPTION or ENCODING flag.
No action planned.</WithStack>
    <WithOutStack>When the project description of an IProject changes the resource delta flags
this as a special DESCRIPTION change. However the Java model delta for a
corresponding Java project flags this as a unspecific content changed.

Shouldn't the Java model flag Description changes as well. Another interesting
flag to be surfaced as well could be the ENCODING flag.
Side note: the Javadoc comment for content changes says:

This flag is only valid for elements which correspond to files
I'm not sure what is the use case for surfacing the DESCRIPTION or ENCODING flag.
No action planned.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108021" />
    <CreationDate amount="2005-08-25 13:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Monitor" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>make monitor listen to all preference changes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functiondef">
        <location start="262" end="1007" />
        <code>preferencesListener = new IEclipsePreferences.IPreferenceChangeListener()
{
			/*
			 * (non-Javadoc)
			 * 
			 * @see org.eclipse.core.runtime.preferences.IEclipsePreferences.IPreferenceChangeListener#preferenceChange(org.eclipse.core.runtime.preferences.IEclipsePreferences.PreferenceChangeEvent)
			
*/
			public void preferenceChange(PreferenceChangeEvent event) {

				if (silentRunning)
					return;

				Object
oldValue = event.getOldValue();
				Object newValue = event.getNewValue();
				String
key = event.getKey();
				if (newValue == null)
					newValue = getDefault(key,
oldValue);
				else if (oldValue == null)
					oldValue = getDefault(key, newValue);
				firePropertyChangeEvent(event.getKey(),
oldValue, newValue);
			}
		}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1010" end="1083" />
        <code>getStorePreferences().addPreferenceChangeListener(preferencesListener);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1142" end="1194" />
        <code>.addNodeChangeListener(getNodeChangeListener());</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="4">
        <Lines>
          <Line>1) add</Line>
          <Line>the preference monitor to all plug-ins on startup</Line>
          <Line>2) find a listener that gets</Line>
          <Line>notified of all preference change events</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- prefernece monitoring is now added explicitly</Line>
          <Line>- selections are now resolved by structure-bridge-aware monitors, not the catch-all SelectionMonitor (which didn't catch enough)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It's not clear how to do this, but there seem to be two approaches:
1) add
the preference monitor to all plug-ins on startup
2) find a listener that gets
notified of all preference change events

The following code, in ScopedPreferenceStore,
might be relevant:

		preferencesListener = new IEclipsePreferences.IPreferenceChangeListener()
{
			/*
			 * (non-Javadoc)
			 * 
			 * @see org.eclipse.core.runtime.preferences.IEclipsePreferences.IPreferenceChangeListener#preferenceChange(org.eclipse.core.runtime.preferences.IEclipsePreferences.PreferenceChangeEvent)
			
*/
			public void preferenceChange(PreferenceChangeEvent event) {

				if (silentRunning)
					return;

				Object
oldValue = event.getOldValue();
				Object newValue = event.getNewValue();
				String
key = event.getKey();
				if (newValue == null)
					newValue = getDefault(key,
oldValue);
				else if (oldValue == null)
					oldValue = getDefault(key, newValue);
				firePropertyChangeEvent(event.getKey(),
oldValue, newValue);
			}
		};

		getStorePreferences().addPreferenceChangeListener(preferencesListener);

		((IEclipsePreferences)
getStorePreferences().parent())
				.addNodeChangeListener(getNodeChangeListener());
In order to support monitoring RCP applications, and in general make the monitor more flexibile to monitoring more than the SDK, ensuring obfuscations works across structure bridges, etc, I've made some substantial changes to the way in which the Monitor works with selectionsand preferences:
- prefernece monitoring is now added explicitly
- selections are now resolved by structure-bridge-aware monitors, not the catch-all SelectionMonitor (which didn't catch enough)

I plan on documenting this on the Wiki.  Brian, when I merge these changes back into HEAD on Tuesday you should check them out and let me know if this causes you any problems.</WithStack>
    <WithOutStack>It's not clear how to do this, but there seem to be two approaches:
1) add
the preference monitor to all plug-ins on startup
2) find a listener that gets
notified of all preference change events

The following code, in ScopedPreferenceStore,
might be relevant:

		preferencesListener = new IEclipsePreferences.IPreferenceChangeListener()
{
			/*
			 * (non-Javadoc)
			 * 
			 * @see org.eclipse.core.runtime.preferences.IEclipsePreferences.IPreferenceChangeListener#preferenceChange(org.eclipse.core.runtime.preferences.IEclipsePreferences.PreferenceChangeEvent)
			
*/
			public void preferenceChange(PreferenceChangeEvent event) {

				if (silentRunning)
					return;

				Object
oldValue = event.getOldValue();
				Object newValue = event.getNewValue();
				String
key = event.getKey();
				if (newValue == null)
					newValue = getDefault(key,
oldValue);
				else if (oldValue == null)
					oldValue = getDefault(key, newValue);
				firePropertyChangeEvent(event.getKey(),
oldValue, newValue);
			}
		};

		getStorePreferences().addPreferenceChangeListener(preferencesListener);

		((IEclipsePreferences)
getStorePreferences().parent())
				.addNodeChangeListener(getNodeChangeListener());
In order to support monitoring RCP applications, and in general make the monitor more flexibile to monitoring more than the SDK, ensuring obfuscations works across structure bridges, etc, I've made some substantial changes to the way in which the Monitor works with selectionsand preferences:
- prefernece monitoring is now added explicitly
- selections are now resolved by structure-bridge-aware monitors, not the catch-all SelectionMonitor (which didn't catch enough)

I plan on documenting this on the Wiki.  Brian, when I merge these changes back into HEAD on Tuesday you should check them out and let me know if this causes you any problems.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108022" />
    <CreationDate amount="2005-08-25 13:54:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>separate ui plugin dependency for jst.j2ee plugins</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Need UI/NOn-UI plugin separation for headless tools.

Please refactor these UI dependencies
plugin org.eclipse.jst.j2ee.ejb   requires org.eclipse.debug.ui 
plugin org.eclipse.jst.j2ee   requires org.eclipse.debug.ui
Changes dropped to 8/29 build
Verified / Closing</WithStack>
    <WithOutStack>Need UI/NOn-UI plugin separation for headless tools.

Please refactor these UI dependencies
plugin org.eclipse.jst.j2ee.ejb   requires org.eclipse.debug.ui 
plugin org.eclipse.jst.j2ee   requires org.eclipse.debug.ui
Changes dropped to 8/29 build
Verified / Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108023" />
    <CreationDate amount="2005-08-25 13:57:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>UI/Non-UI plugin separation for jst.j2ee.web plugins</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Need a ui/non-ui plugin separation to support headless and guarantee
they would not be broken in the future.

plugin org.eclipse.jst.j2ee.web  requires org.eclipse.debug.ui
Dropped to 8/31 build
Verified / Closing</WithStack>
    <WithOutStack>Need a ui/non-ui plugin separation to support headless and guarantee
they would not be broken in the future.

plugin org.eclipse.jst.j2ee.web  requires org.eclipse.debug.ui
Dropped to 8/31 build
Verified / Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108024" />
    <CreationDate amount="2005-08-25 13:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="MDT" />
    <component amount="Releng" />
    <Version amount="2.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>org.eclipse.platform.doc.isv changed to jarred plugin, build failing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Duplicate of bug 107989.

Fix is to change lines in customTargets.xml with 

&lt;unzip overwrite="true"
src="${buildDirectory}/plugins/org.eclipse.platform.doc.isv/doc.zip"
dest="${buildDirectory}/plugins/org.eclipse.platform.doc.isv" /&gt;

to

&lt;unzip overwrite="true"
src="${buildDirectory}/plugins/org.eclipse.platform.doc.isv.jar"
dest="${buildDirectory}/plugins/org.eclipse.platform.doc.isv" /&gt;

I wish the platform would WARN us before making these changes or at least
announce they're coming so we can prepare properly.
Fix in CVS.
The fix is available in build I200509151529.
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>Duplicate of bug 107989.

Fix is to change lines in customTargets.xml with 

&lt;unzip overwrite="true"
src="${buildDirectory}/plugins/org.eclipse.platform.doc.isv/doc.zip"
dest="${buildDirectory}/plugins/org.eclipse.platform.doc.isv" /&gt;

to

&lt;unzip overwrite="true"
src="${buildDirectory}/plugins/org.eclipse.platform.doc.isv.jar"
dest="${buildDirectory}/plugins/org.eclipse.platform.doc.isv" /&gt;

I wish the platform would WARN us before making these changes or at least
announce they're coming so we can prepare properly.
Fix in CVS.
The fix is available in build I200509151529.
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108025" />
    <CreationDate amount="2005-08-25 14:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Agent Controller" />
    <component amount="Platform.Communication" />
    <Version amount="future" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Improved Error Handling and Notification from TPTP Framework</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>1. Agent should be able to log for error, even when RAC is down (this feature is</Line>
          <Line>planned for 4.1)</Line>
          <Line>2. Tight loops should be avoided.  There should be wait time before a retry.</Line>
          <Line>Ideally, the wait time should be configurable because in systems such as z/OS,</Line>
          <Line>I/O is very expensive.  E.g. during agent registration, the agent keeps polling</Line>
          <Line>for "ramaster" named pipe every second and this is too expensive in z/OS.</Line>
          <Line>3. Should there be a limit before the framework gives up in trying to open a</Line>
          <Line>connection?  I think there should be.</Line>
          <Line>4. If so, how can the agent code be notified of failure in the framework code?</Line>
          <Line>We need a notification mechanism to the agent for framework error conditions.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Background:
===========
Recently, we had a customer situation in which the agent framework code
(implementing the agent API) entered in a loop causing the "PipeServer" thread
to continue running fruitlessly.  The loop was caused by repeated attempts to
open the "uuid" named pipe and it kept failing. Note that this thread was
created by the framework when the agent is started to read the incoming message
from the RAC. 

Observations:
=============
1. Agent should be able to log for error, even when RAC is down (this feature is
planned for 4.1)
2. Tight loops should be avoided.  There should be wait time before a retry. 
Ideally, the wait time should be configurable because in systems such as z/OS,
I/O is very expensive.  E.g. during agent registration, the agent keeps polling
for "ramaster" named pipe every second and this is too expensive in z/OS.
3. Should there be a limit before the framework gives up in trying to open a
connection?  I think there should be.
4. If so, how can the agent code be notified of failure in the framework code?
We need a notification mechanism to the agent for framework error conditions.

Requirements:
=============
We need solutions to bullet 2., 3., and 4.
What is the best way to handle this? This should a desing critera. This is 
consistent with the new agent controller design philosophy. I would like to 
convert this to a bug and require code review to verify it.


moving to request for 4.2 per PMC review
It is going ot be key that logs from our runtime be in a format that can be 
taken by our log analysis tooling, and that we provide symptom databases to 
match for field support.
Transferring general agent controller enhancement requests to new project lead (Joanna) for consideration in future releases.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Background:
===========
Recently, we had a customer situation in which the agent framework code
(implementing the agent API) entered in a loop causing the "PipeServer" thread
to continue running fruitlessly.  The loop was caused by repeated attempts to
open the "uuid" named pipe and it kept failing. Note that this thread was
created by the framework when the agent is started to read the incoming message
from the RAC. 

Observations:
=============
1. Agent should be able to log for error, even when RAC is down (this feature is
planned for 4.1)
2. Tight loops should be avoided.  There should be wait time before a retry. 
Ideally, the wait time should be configurable because in systems such as z/OS,
I/O is very expensive.  E.g. during agent registration, the agent keeps polling
for "ramaster" named pipe every second and this is too expensive in z/OS.
3. Should there be a limit before the framework gives up in trying to open a
connection?  I think there should be.
4. If so, how can the agent code be notified of failure in the framework code?
We need a notification mechanism to the agent for framework error conditions.

Requirements:
=============
We need solutions to bullet 2., 3., and 4.
What is the best way to handle this? This should a desing critera. This is 
consistent with the new agent controller design philosophy. I would like to 
convert this to a bug and require code review to verify it.


moving to request for 4.2 per PMC review
It is going ot be key that logs from our runtime be in a format that can be 
taken by our log analysis tooling, and that we provide symptom databases to 
match for field support.
Transferring general agent controller enhancement requests to new project lead (Joanna) for consideration in future releases.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108026" />
    <CreationDate amount="2005-08-25 14:01:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="wst.web" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Need UI/Non-UI plugin separation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>This is need to support headless tools.  (to reduce their size as well
as ensuring they don't get broken by ui changes that may fail on different
platforms)


plugin org.eclipse.wst.web  requires org.eclipse.ui, 
org.eclipse.wst.common.frameworks.ui
Dropping to 8/31 build
Verified / Closing</WithStack>
    <WithOutStack>This is need to support headless tools.  (to reduce their size as well
as ensuring they don't get broken by ui changes that may fail on different
platforms)


plugin org.eclipse.wst.web  requires org.eclipse.ui, 
org.eclipse.wst.common.frameworks.ui
Dropping to 8/31 build
Verified / Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108027" />
    <CreationDate amount="2005-08-25 14:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Profiling" />
    <component amount="Platform.Model" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Cloudscape 10GA, does not work in network mode</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>I setup Cloudscape 10.0GA with the script as outlined in the help file.  When 
selecting "Test Connection" I got an error message.  Then when I tried to 
import a log file, an error occured.

I will attach the .log file and an image of the error message popup.
Created attachment 26462
.log file with exceptions
Created attachment 26463
The error popup shown when pressing "Test Connection."
Same problem occured for Cloudscape 5.1GA in network mode.
I tested Network mode in Cloudscape 10.1 and I get the same errors.
I can't reproduce the error in either Cloudscape 10.1 or Derby 10.0. Can you
provide any more information?
We discovered that the problem occurred on Terry's machine but not on mine due
to the DB2 installed on Terry's machine. The DB2 JAR was first on the CLASSPATH,
and even though the user told the large log support to look in a particular JAR,
because the DB2 JAR was first on the CLASSPATH the java.sql.Connection was
loaded from the DB2 JAR instead of the Cloudscape JAR. 

The workaround was to clear the CLASSPATH before launching the workspace. This
defect will check in a fix that explicitly looks for an AbstractMethodError in
the CloudscapeJDBCHelperImpl class, and if one occurs, send a message to the log
file to tell the user to remove any DB2 JARs from the CLASSPATH. The error will
then be wrapped in a checked Exception as normal and propagated up.

Because I added a message to the log file explicitly stating that the DB2 JARs
should be removed from the CLASSPATH, I will not open a defect for a README.

verified, TPTP-4.1.0-200509011536</WithStack>
    <WithOutStack>I setup Cloudscape 10.0GA with the script as outlined in the help file.  When 
selecting "Test Connection" I got an error message.  Then when I tried to 
import a log file, an error occured.

I will attach the .log file and an image of the error message popup.
Created attachment 26462
.log file with exceptions
Created attachment 26463
The error popup shown when pressing "Test Connection."
Same problem occured for Cloudscape 5.1GA in network mode.
I tested Network mode in Cloudscape 10.1 and I get the same errors.
I can't reproduce the error in either Cloudscape 10.1 or Derby 10.0. Can you
provide any more information?
We discovered that the problem occurred on Terry's machine but not on mine due
to the DB2 installed on Terry's machine. The DB2 JAR was first on the CLASSPATH,
and even though the user told the large log support to look in a particular JAR,
because the DB2 JAR was first on the CLASSPATH the java.sql.Connection was
loaded from the DB2 JAR instead of the Cloudscape JAR. 

The workaround was to clear the CLASSPATH before launching the workspace. This
defect will check in a fix that explicitly looks for an AbstractMethodError in
the CloudscapeJDBCHelperImpl class, and if one occurs, send a message to the log
file to tell the user to remove any DB2 JARs from the CLASSPATH. The error will
then be wrapped in a checked Exception as normal and propagated up.

Because I added a message to the log file explicitly stating that the DB2 JARs
should be removed from the CLASSPATH, I will not open a defect for a README.

verified, TPTP-4.1.0-200509011536</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108028" />
    <CreationDate amount="2005-08-25 14:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Duplicate watchpointes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Duplicate entries for a watchpoint are shown in the Breakpoints view when the 
debug session is started.
Fixed in HEAD and 3.0.1 branch.</WithStack>
    <WithOutStack>Duplicate entries for a watchpoint are shown in the Breakpoints view when the 
debug session is started.
Fixed in HEAD and 3.0.1 branch.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108029" />
    <CreationDate amount="2005-08-25 14:30:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Forbid  whitespace in the project name</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="NOT_ECLIPSE" />
    <WithStack>[The problem]
On one hand, whitespace may not have negative affect in most situation. But 
sometime does have: For example, when using GDB/MI interface, the GDB will set 
the project directory as the home directory. In such case, the whitespaced 
project name does matter.

On the other hand, whitespace does not bring us any benifit by allowing 
putting it in the project name. We can use "_" or others to replace it if 
needed.

[The suggestion]
Could CDT check the name of the project in the new project wizard, so that 
gurantee that there will not be any whitespace in the project name?
Lack of support for directories with spaces in their names in gdb is not an Eclipse problem. Please raise a bug with gdb.</WithStack>
    <WithOutStack>[The problem]
On one hand, whitespace may not have negative affect in most situation. But 
sometime does have: For example, when using GDB/MI interface, the GDB will set 
the project directory as the home directory. In such case, the whitespaced 
project name does matter.

On the other hand, whitespace does not bring us any benifit by allowing 
putting it in the project name. We can use "_" or others to replace it if 
needed.

[The suggestion]
Could CDT check the name of the project in the new project wizard, so that 
gurantee that there will not be any whitespace in the project name?
Lack of support for directories with spaces in their names in gdb is not an Eclipse problem. Please raise a bug with gdb.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108030" />
    <CreationDate amount="2005-08-25 14:36:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[refactoring] Move instance method inserts argument at wrong position</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="16" end="233" />
        <code>class A {
    B fB;
    
    public void doit(String doitArg) {
        subroutine(1.2f);
    }
    
    public void subroutine(float subArg) {
        subsub();
    }

    public void subsub() {
        
    }
    
}</code>
      </source_code>
      <source_code type="class">
        <location start="235" end="251" />
        <code>class B {
    
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- move doit(..) to fB</Line>
          <Line>-&gt; compiles</Line>
          <Line>- move subroutine(..) to fB</Line>
          <Line>-&gt; does not compile since subroutine's new parameter  A a is at first position</Line>
          <Line>but the argument at the call site is at the second position</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050823-0800

class A {
    B fB;
    
    public void doit(String doitArg) {
        subroutine(1.2f);
    }
    
    public void subroutine(float subArg) {
        subsub();
    }

    public void subsub() {
        
    }
    
}

class B {
    
}

- move doit(..) to fB
  -&gt; compiles
- move subroutine(..) to fB
  -&gt; does not compile since subroutine's new parameter  A a is at first position
but the argument at the call site is at the second position

Please fix and add a second test case where methods have 2 or more parameters.
Filed related bug 108088
Fixed by fix for 36032

Added regression test MoveInstanceMethodTests#test36
verifying for RC3
verified</WithStack>
    <WithOutStack>I20050823-0800

class A {
    B fB;
    
    public void doit(String doitArg) {
        subroutine(1.2f);
    }
    
    public void subroutine(float subArg) {
        subsub();
    }

    public void subsub() {
        
    }
    
}

class B {
    
}

- move doit(..) to fB
  -&gt; compiles
- move subroutine(..) to fB
  -&gt; does not compile since subroutine's new parameter  A a is at first position
but the argument at the call site is at the second position

Please fix and add a second test case where methods have 2 or more parameters.
Filed related bug 108088
Fixed by fix for 36032

Added regression test MoveInstanceMethodTests#test36
verifying for RC3
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108031" />
    <CreationDate amount="2005-08-25 14:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Opening SWT Shell with Menu throws Class Cast</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>M20050825

Opening the attached class produced the attached error log for me.
Created attachment 26468
SWTGrid4.java
Created attachment 26469
error log
give me a sec to look at this class again... may be invalid, i was messing
around with it yesterday and could have left it in a bad state
code was definitely bad... should still look at it to see if we can not barf as
much, but probably isn't as major.
The changes have been released to HEAD.

The problem was not due to the bad code you provided. The problem was due to we
really don't support the "menu" feature on a control and so we never tested that
path. This tested that path and went through some untested code. Fixed the code
to handle this condition.
closed</WithStack>
    <WithOutStack>M20050825

Opening the attached class produced the attached error log for me.
Created attachment 26468
SWTGrid4.java
Created attachment 26469
error log
give me a sec to look at this class again... may be invalid, i was messing
around with it yesterday and could have left it in a bad state
code was definitely bad... should still look at it to see if we can not barf as
much, but probably isn't as major.
The changes have been released to HEAD.

The problem was not due to the bad code you provided. The problem was due to we
really don't support the "menu" feature on a control and so we never tested that
path. This tested that path and went through some untested code. Fixed the code
to handle this condition.
closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108032" />
    <CreationDate amount="2005-08-25 14:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="APT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>generated source folder should be marked as derived</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Currently, the generated source folder ("__generated_src") is not marked as
derived, as shown by selecting it in the package explorer and looking at the
Properties view. It really should be marked as derived when created using
IResource.setDerived(true) so that tools (such as a UI I'm working on) can
easily ignore it.
When we create the generated source folder, we now mark it as derived.</WithStack>
    <WithOutStack>Currently, the generated source folder ("__generated_src") is not marked as
derived, as shown by selecting it in the package explorer and looking at the
Properties view. It really should be marked as derived when created using
IResource.setDerived(true) so that tools (such as a UI I'm working on) can
easily ignore it.
When we create the generated source folder, we now mark it as derived.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108033" />
    <CreationDate amount="2005-08-25 14:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[WorkbenchParts] regression: View Tab Orders lost after restart</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>- The above gets reordered to Problems, Console, Tasks, Debug, Breakpoints.</Line>
          <Line>- I tried moving Debug to the beginning, and it got moved between tasks and</Line>
          <Line>breakpoints.</Line>
          <Line>- I added "Ant" between Problems and Console, and it got moved to the end.</Line>
          <Line>FYI, I tested this on a clean workspace, just to make sure it wasn't a</Line>
          <Line>migration problem from my 3.1 workspace.  Same issue.</Line>
          <Line>*** Bug 110286 has been marked as a duplicate of this bug. ***</Line>
          <Line>Any chance of getting this in before the next milestone?</Line>
          <Line>I'm trying to get some feature work down for the next milestone, so probably not.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>This is was working in 3.1, but as of 3.2M1, my view tabs no longer stay in 
order after I restart.

For example, at the bottom of my screen, I have [Problems, Tasks, Console, 
Debug, Breakpoints, ...] in a single tab group.  After restart, they are in a 
different order.  It almost seems like they are being grouped by the folders 
the views are selected from in the "Show View" window.

- The above gets reordered to Problems, Console, Tasks, Debug, Breakpoints.
- I tried moving Debug to the beginning, and it got moved between tasks and 
breakpoints.
- I added "Ant" between Problems and Console, and it got moved to the end.
FYI, I tested this on a clean workspace, just to make sure it wasn't a 
migration problem from my 3.1 workspace.  Same issue.
*** Bug 110286 has been marked as a duplicate of this bug. ***
Any chance of getting this in before the next milestone?
I'm trying to get some feature work down for the next milestone, so probably not.

If I get the floating toolbar bug out of the way I'll move this one up into the
bugs I'm working on list.

PW

I'm willing to help with this - just let me know if my "help" causes more work 
than assistance...

The tab orders are being loaded properly from workbench.xml.  They are just 
never persisted properly after being added to the perspective.  (What is in 
workbench.xml after the workbench closes does not accurately represent the 
workbench.)  If I close the workbench, then manually edit workbench.xml to put 
things where I expect them, they will stay there across multiple workbench 
restarts...

Does anyone readily know the name of the class responsible for this part of the 
persistence?
Perspective#saveState() calls out to PerspectiveHelper#saveState(), and in there
it calls mainLayout.saveState() ... this maps to the part of the file I think
you care about.

The folder has the views listed (starting with Error Log), and then the
presentation section starting with part="2" ... that maps to the Problems view,
which was first in my list of tabs.

If you want to continue looking at this I think you need to check out
PartStack#saveState() and PartStack#restoreState(), where it's writing out that
presentation section.


&lt;mainWindow&gt;
&lt;info part="topLeft" folder="true"&gt;
&lt;folder activePageID="org.eclipse.jdt.ui.PackageExplorer" expanded="2"
appearance="2"&gt;
&lt;page label="LabelNotFound" content="org.eclipse.ui.views.ResourceNavigator"/&gt;
&lt;page label="Package Explorer" content="org.eclipse.jdt.ui.PackageExplorer"/&gt;
&lt;page label="LabelNotFound" content="org.eclipse.jdt.ui.TypeHierarchy"/&gt;
&lt;page label="Plug-ins" content="org.eclipse.pde.ui.PluginsView"/&gt;
&lt;presentation id="org.eclipse.ui.presentations.WorkbenchPresentationFactory"&gt;
&lt;part id="0"/&gt;
&lt;part id="1"/&gt;
&lt;/presentation&gt;
&lt;/folder&gt;
&lt;/info&gt;
&lt;info part="stickyFolderRight" relative="topLeft" relationship="2"
ratioLeft="1068" ratioRight="357" ratio="0.7494737" folder="true"&gt;
&lt;folder expanded="2" appearance="2"&gt;
&lt;page label="LabelNotFound" content="org.eclipse.help.ui.HelpView"/&gt;
&lt;page label="LabelNotFound" content="org.eclipse.ui.internal.introview"/&gt;
&lt;page label="LabelNotFound"
content="org.eclipse.ui.cheatsheets.views.CheatSheetView"/&gt;
&lt;/folder&gt;
&lt;/info&gt;
&lt;info part="org.eclipse.ui.editorss" relative="topLeft" relationship="2"
ratioLeft="356" ratioRight="1069" ratio="0.24982457"/&gt;
&lt;info part="bottomRight" relative="org.eclipse.ui.editorss" relationship="4"
ratioLeft="684" ratioRight="229" ratio="0.7491785" folder="true"&gt;
&lt;folder activePageID="org.eclipse.ui.views.ProblemView" expanded="2" appearance="2"&gt;
&lt;page label="Error Log" content="org.eclipse.pde.runtime.LogView"/&gt;
&lt;page label="Tasks" content="org.eclipse.ui.views.TaskList"/&gt;
&lt;page label="Problems" content="org.eclipse.ui.views.ProblemView"/&gt;
&lt;page label="Properties" content="org.eclipse.ui.views.PropertySheet"/&gt;
&lt;page label="Progress" content="org.eclipse.ui.views.ProgressView"/&gt;
&lt;page label="Search" content="org.eclipse.search.ui.views.SearchView"/&gt;
&lt;page label="JUnit" content="org.eclipse.jdt.junit.ResultView"/&gt;
&lt;presentation id="org.eclipse.ui.presentations.WorkbenchPresentationFactory"&gt;
&lt;part id="2"/&gt;
&lt;part id="0"/&gt;
&lt;part id="1"/&gt;
&lt;part id="5"/&gt;
&lt;part id="3"/&gt;
&lt;part id="4"/&gt;
&lt;part id="6"/&gt;
&lt;/presentation&gt;
&lt;/folder&gt;
&lt;/info&gt;
&lt;info part="org.eclipse.ui.internal.ViewStack@14d62f1"
relative="org.eclipse.ui.editorss" relationship="2" ratioLeft="801"
ratioRight="268" ratio="0.7492984" folder="true"&gt;
&lt;folder activePageID="org.eclipse.ui.views.ContentOutline" expanded="2"
appearance="2"&gt;
&lt;page label="Outline" content="org.eclipse.ui.views.ContentOutline"/&gt;
&lt;presentation id="org.eclipse.ui.presentations.WorkbenchPresentationFactory"&gt;
&lt;part id="0"/&gt;
&lt;/presentation&gt;
&lt;/folder&gt;
&lt;/info&gt;
&lt;/mainWindow&gt;


PW

I've drilled down to org.eclipse.ui.internal.PartStack.saveState(IMemento).  
The "children" List does not contain the LayoutPart's in the proper order, so 
they are not saved correctly into the memento.  If I manually manipulate the 
list at this point, everything else works as expected.

I can reproduce this bug using any CVS version between 1.55 - 1.62 of 
PartStack.  It looks like this problem may have been introduced by a patch for 
bug 90353 in 1.55?
My fault for not completely comprehending comment #6.  The order of the &lt;page&gt; 
elements shouldn't matter, but designed this way or not, it's basically used as 
the default order after the &lt;part&gt;'s.

The workbench does not appear to be restoring the view tabs from the &lt;part&gt;'s 
correctly.  ViewStack.createControl(Composite) calls 
PresentationFactoryUtil.createPresentation(...), which leads to 
TabbedStackPresentation.restoreState(...), LeftToRightTabOrder.restoreState
(...).  What I see here is that serializer.getPart(id) is always returning 
null, because the "parts" ArrayList is empty (hasn't been loaded yet?).

This seems related to the comment in PresentationFactoryUtil: "//don't 
initialize editors at creation time - it will not contain any parts".  
restoreState(...) is being called before createControl(...), so that can't be 
of any help.

Not sure how much farther I can take this - hope this gives someone a good 
starting point...
Progress!  This definitely looks like it was caused by the patch for bug 90353.

PartStack.createControl(Composite) calls getPresentableParts() to instantiate 
the PresentationSerializer with.  The "presentableParts" list is empty at this 
point; "children" is not.  Now I just need to figure out how I can properly 
have this return the populated list at this point...
Last posting for a while, sorry.  I'm stuck; time for someone else to step in.  
I could probably get it working, but not without extensive refactoring.  Maybe 
Stefan can step in and help me make sense of this?

It seems that the calls in the two createControl() methods just need to be 
reordered such that presentableParts is populated before it gets passed to the 
PresentationFactoryUtil.  I can't call showPart(...) or add to the list 
manually, as the presentation hasn't been created yet and various null pointer 
exceptions and the like are thrown.  Looks like a paradox at the moment...
Thanx for you analysis Mark, you were in the correct place.

The trick will be getting showPart() to work correctly for all it's cases, and
have the presentation restore the tab order only on the start up case.

I might have a chance to look at it next week.

PW


Any updates, or any suggestions for further work?  Guess we missed M2, can we 
commit to this for M3?  It is a regression bug, after all.  :-)  Thanks!
I don't think it'll make it in for M3 ... but I am working on it today.

So if I get lucky, today ... if not, middle of next week.

Later,
PW

Created attachment 28989
Reorder the presentation restore  - ui.workbench

Moved the presentation restore *after* the partstack has access to it's layout
parts.

PW
Doug,

Do you have the editor-stack version of this bug?

PW

Created attachment 28991
Reorder the presentation restore  - ui.workbench v02

Second attempt.

PW
I think I do, but I can't find it. 
 
I was putting together some session tests to prevent further regressions, but
then I ran into bug 114396

I'm sure testing will resume soon :-)

PW

*** Bug 114261 has been marked as a duplicate of this bug. ***
Created attachment 29191
Reorder the presentation restore  - ui.workbench v03

This includes some methods needed for testing.

PW
Created attachment 29194
tests for reordered tabs - ui.tests

Session tests for re-ordering the tabs.

PW
Released patch and tests into HEAD &gt;20051108.
PW

Tested and verified under 3.2M4.  Thanks!

(New tabs inserted in the first session after my upgrade to 3.2M4 didn't maintain their position after the next restart.  However, after subsequent restarts, they are maintaining their order, along with newly inserted tabs.  I've not been able to reliably reproduce this issue yet, just an F.Y.I.)
verified in M4</WithStack>
    <WithOutStack>This is was working in 3.1, but as of 3.2M1, my view tabs no longer stay in 
order after I restart.

For example, at the bottom of my screen, I have [Problems, Tasks, Console, 
Debug, Breakpoints, ...] in a single tab group.  After restart, they are in a 
different order.  It almost seems like they are being grouped by the folders 
the views are selected from in the "Show View" window.

- The above gets reordered to Problems, Console, Tasks, Debug, Breakpoints.
- I tried moving Debug to the beginning, and it got moved between tasks and 
breakpoints.
- I added "Ant" between Problems and Console, and it got moved to the end.
FYI, I tested this on a clean workspace, just to make sure it wasn't a 
migration problem from my 3.1 workspace.  Same issue.
*** Bug 110286 has been marked as a duplicate of this bug. ***
Any chance of getting this in before the next milestone?
I'm trying to get some feature work down for the next milestone, so probably not.

If I get the floating toolbar bug out of the way I'll move this one up into the
bugs I'm working on list.

PW

I'm willing to help with this - just let me know if my "help" causes more work 
than assistance...

The tab orders are being loaded properly from workbench.xml.  They are just 
never persisted properly after being added to the perspective.  (What is in 
workbench.xml after the workbench closes does not accurately represent the 
workbench.)  If I close the workbench, then manually edit workbench.xml to put 
things where I expect them, they will stay there across multiple workbench 
restarts...

Does anyone readily know the name of the class responsible for this part of the 
persistence?
Perspective#saveState() calls out to PerspectiveHelper#saveState(), and in there
it calls mainLayout.saveState() ... this maps to the part of the file I think
you care about.

The folder has the views listed (starting with Error Log), and then the
presentation section starting with part="2" ... that maps to the Problems view,
which was first in my list of tabs.

If you want to continue looking at this I think you need to check out
PartStack#saveState() and PartStack#restoreState(), where it's writing out that
presentation section.


&lt;mainWindow&gt;
&lt;info part="topLeft" folder="true"&gt;
&lt;folder activePageID="org.eclipse.jdt.ui.PackageExplorer" expanded="2"
appearance="2"&gt;
&lt;page label="LabelNotFound" content="org.eclipse.ui.views.ResourceNavigator"/&gt;
&lt;page label="Package Explorer" content="org.eclipse.jdt.ui.PackageExplorer"/&gt;
&lt;page label="LabelNotFound" content="org.eclipse.jdt.ui.TypeHierarchy"/&gt;
&lt;page label="Plug-ins" content="org.eclipse.pde.ui.PluginsView"/&gt;
&lt;presentation id="org.eclipse.ui.presentations.WorkbenchPresentationFactory"&gt;
&lt;part id="0"/&gt;
&lt;part id="1"/&gt;
&lt;/presentation&gt;
&lt;/folder&gt;
&lt;/info&gt;
&lt;info part="stickyFolderRight" relative="topLeft" relationship="2"
ratioLeft="1068" ratioRight="357" ratio="0.7494737" folder="true"&gt;
&lt;folder expanded="2" appearance="2"&gt;
&lt;page label="LabelNotFound" content="org.eclipse.help.ui.HelpView"/&gt;
&lt;page label="LabelNotFound" content="org.eclipse.ui.internal.introview"/&gt;
&lt;page label="LabelNotFound"
content="org.eclipse.ui.cheatsheets.views.CheatSheetView"/&gt;
&lt;/folder&gt;
&lt;/info&gt;
&lt;info part="org.eclipse.ui.editorss" relative="topLeft" relationship="2"
ratioLeft="356" ratioRight="1069" ratio="0.24982457"/&gt;
&lt;info part="bottomRight" relative="org.eclipse.ui.editorss" relationship="4"
ratioLeft="684" ratioRight="229" ratio="0.7491785" folder="true"&gt;
&lt;folder activePageID="org.eclipse.ui.views.ProblemView" expanded="2" appearance="2"&gt;
&lt;page label="Error Log" content="org.eclipse.pde.runtime.LogView"/&gt;
&lt;page label="Tasks" content="org.eclipse.ui.views.TaskList"/&gt;
&lt;page label="Problems" content="org.eclipse.ui.views.ProblemView"/&gt;
&lt;page label="Properties" content="org.eclipse.ui.views.PropertySheet"/&gt;
&lt;page label="Progress" content="org.eclipse.ui.views.ProgressView"/&gt;
&lt;page label="Search" content="org.eclipse.search.ui.views.SearchView"/&gt;
&lt;page label="JUnit" content="org.eclipse.jdt.junit.ResultView"/&gt;
&lt;presentation id="org.eclipse.ui.presentations.WorkbenchPresentationFactory"&gt;
&lt;part id="2"/&gt;
&lt;part id="0"/&gt;
&lt;part id="1"/&gt;
&lt;part id="5"/&gt;
&lt;part id="3"/&gt;
&lt;part id="4"/&gt;
&lt;part id="6"/&gt;
&lt;/presentation&gt;
&lt;/folder&gt;
&lt;/info&gt;
&lt;info part="org.eclipse.ui.internal.ViewStack@14d62f1"
relative="org.eclipse.ui.editorss" relationship="2" ratioLeft="801"
ratioRight="268" ratio="0.7492984" folder="true"&gt;
&lt;folder activePageID="org.eclipse.ui.views.ContentOutline" expanded="2"
appearance="2"&gt;
&lt;page label="Outline" content="org.eclipse.ui.views.ContentOutline"/&gt;
&lt;presentation id="org.eclipse.ui.presentations.WorkbenchPresentationFactory"&gt;
&lt;part id="0"/&gt;
&lt;/presentation&gt;
&lt;/folder&gt;
&lt;/info&gt;
&lt;/mainWindow&gt;


PW

I've drilled down to org.eclipse.ui.internal.PartStack.saveState(IMemento).  
The "children" List does not contain the LayoutPart's in the proper order, so 
they are not saved correctly into the memento.  If I manually manipulate the 
list at this point, everything else works as expected.

I can reproduce this bug using any CVS version between 1.55 - 1.62 of 
PartStack.  It looks like this problem may have been introduced by a patch for 
bug 90353 in 1.55?
My fault for not completely comprehending comment #6.  The order of the &lt;page&gt; 
elements shouldn't matter, but designed this way or not, it's basically used as 
the default order after the &lt;part&gt;'s.

The workbench does not appear to be restoring the view tabs from the &lt;part&gt;'s 
correctly.  ViewStack.createControl(Composite) calls 
PresentationFactoryUtil.createPresentation(...), which leads to 
TabbedStackPresentation.restoreState(...), LeftToRightTabOrder.restoreState
(...).  What I see here is that serializer.getPart(id) is always returning 
null, because the "parts" ArrayList is empty (hasn't been loaded yet?).

This seems related to the comment in PresentationFactoryUtil: "//don't 
initialize editors at creation time - it will not contain any parts".  
restoreState(...) is being called before createControl(...), so that can't be 
of any help.

Not sure how much farther I can take this - hope this gives someone a good 
starting point...
Progress!  This definitely looks like it was caused by the patch for bug 90353.

PartStack.createControl(Composite) calls getPresentableParts() to instantiate 
the PresentationSerializer with.  The "presentableParts" list is empty at this 
point; "children" is not.  Now I just need to figure out how I can properly 
have this return the populated list at this point...
Last posting for a while, sorry.  I'm stuck; time for someone else to step in.  
I could probably get it working, but not without extensive refactoring.  Maybe 
Stefan can step in and help me make sense of this?

It seems that the calls in the two createControl() methods just need to be 
reordered such that presentableParts is populated before it gets passed to the 
PresentationFactoryUtil.  I can't call showPart(...) or add to the list 
manually, as the presentation hasn't been created yet and various null pointer 
exceptions and the like are thrown.  Looks like a paradox at the moment...
Thanx for you analysis Mark, you were in the correct place.

The trick will be getting showPart() to work correctly for all it's cases, and
have the presentation restore the tab order only on the start up case.

I might have a chance to look at it next week.

PW


Any updates, or any suggestions for further work?  Guess we missed M2, can we 
commit to this for M3?  It is a regression bug, after all.  :-)  Thanks!
I don't think it'll make it in for M3 ... but I am working on it today.

So if I get lucky, today ... if not, middle of next week.

Later,
PW

Created attachment 28989
Reorder the presentation restore  - ui.workbench

Moved the presentation restore *after* the partstack has access to it's layout
parts.

PW
Doug,

Do you have the editor-stack version of this bug?

PW

Created attachment 28991
Reorder the presentation restore  - ui.workbench v02

Second attempt.

PW
I think I do, but I can't find it. 
 
I was putting together some session tests to prevent further regressions, but
then I ran into bug 114396

I'm sure testing will resume soon :-)

PW

*** Bug 114261 has been marked as a duplicate of this bug. ***
Created attachment 29191
Reorder the presentation restore  - ui.workbench v03

This includes some methods needed for testing.

PW
Created attachment 29194
tests for reordered tabs - ui.tests

Session tests for re-ordering the tabs.

PW
Released patch and tests into HEAD &gt;20051108.
PW

Tested and verified under 3.2M4.  Thanks!

(New tabs inserted in the first session after my upgrade to 3.2M4 didn't maintain their position after the next restart.  However, after subsequent restarts, they are maintaining their order, along with newly inserted tabs.  I've not been able to reliably reproduce this issue yet, just an F.Y.I.)
verified in M4</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108034" />
    <CreationDate amount="2005-08-25 14:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>GridLayoutPolicyHelper throws exception when GridLayout is invalid</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Take the attached class, then go to the TestComposite that has a GridData with
horizontal indent set on it, and through the java editor remove the two lines of
new Griddata and set horizontal indent.

The GridDataLayoutPolicy throws the exception seen in the attached log.
Created attachment 26471
Test class
Created attachment 26472
log file
The changes have been released to HEAD.
closed</WithStack>
    <WithOutStack>Take the attached class, then go to the TestComposite that has a GridData with
horizontal indent set on it, and through the java editor remove the two lines of
new Griddata and set horizontal indent.

The GridDataLayoutPolicy throws the exception seen in the attached log.
Created attachment 26471
Test class
Created attachment 26472
log file
The changes have been released to HEAD.
closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108035" />
    <CreationDate amount="2005-08-25 15:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Static Analysis" />
    <component amount="Platform.Analysis" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>string key are shown in context menu and preference page.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>please see attach screen shot
Created attachment 26473
screen shot 1
Created attachment 26474
screen shot 2
This UI will be replaced entirely in TPTP 4.2.  This defect will be resolved 
then.
Duplicate of 107789

problem does not exist in tptp.runtime-TPTP-4.1.0-200510140100 anymore.

close bug</WithStack>
    <WithOutStack>please see attach screen shot
Created attachment 26473
screen shot 1
Created attachment 26474
screen shot 2
This UI will be replaced entirely in TPTP 4.2.  This defect will be resolved 
then.
Duplicate of 107789

problem does not exist in tptp.runtime-TPTP-4.1.0-200510140100 anymore.

close bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108036" />
    <CreationDate amount="2005-08-25 15:19:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Rename of Composite messes it up graphically</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437330571339">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable
(java.lang.NullPointerException)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2942)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2865)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:126)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3057)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2716)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="8">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="13">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="15">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="16">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="20">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437330571339">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ve.internal.swt.GridLayoutEditPolicy.getFullCellBounds(GridLayoutEditPolicy.java:877)</Frame>
          <Frame depth="1">org.eclipse.ve.internal.swt.GridSpanHandleLocator.relocate(GridSpanHandleLocator.java:49)</Frame>
          <Frame depth="2">org.eclipse.gef.handles.AbstractHandle.validate(AbstractHandle.java:207)</Frame>
          <Frame depth="3">org.eclipse.draw2d.Figure.validate(Figure.java:1738)</Frame>
          <Frame depth="4">org.eclipse.draw2d.Figure.validate(Figure.java:1738)</Frame>
          <Frame depth="5">org.eclipse.draw2d.FreeformLayeredPane.validate(FreeformLayeredPane.java:122)</Frame>
          <Frame depth="6">org.eclipse.draw2d.FreeformViewport$FreeformViewportLayout.calculatePreferredSize(FreeformViewport.java:28)</Frame>
          <Frame depth="7">org.eclipse.draw2d.AbstractLayout.getPreferredSize(AbstractLayout.java:93)</Frame>
          <Frame depth="8">org.eclipse.draw2d.AbstractHintLayout.getPreferredSize(AbstractHintLayout.java:85)</Frame>
          <Frame depth="9">org.eclipse.draw2d.Figure.getPreferredSize(Figure.java:737)</Frame>
          <Frame depth="10">org.eclipse.draw2d.ScrollPaneSolver.solve(ScrollPaneSolver.java:75)</Frame>
          <Frame depth="11">org.eclipse.draw2d.FigureCanvas.layoutViewport(FigureCanvas.java:237)</Frame>
          <Frame depth="12">org.eclipse.draw2d.FigureCanvas.access$4(FigureCanvas.java:235)</Frame>
          <Frame depth="13">org.eclipse.draw2d.FigureCanvas$3.notifyValidating(FigureCanvas.java:200)</Frame>
          <Frame depth="14">org.eclipse.draw2d.UpdateManager.fireValidating(UpdateManager.java:109)</Frame>
          <Frame depth="15">org.eclipse.draw2d.DeferredUpdateManager.validateFigures(DeferredUpdateManager.java:267)</Frame>
          <Frame depth="16">org.eclipse.draw2d.DeferredUpdateManager.performUpdate(DeferredUpdateManager.java:143)</Frame>
          <Frame depth="17">org.eclipse.draw2d.DeferredUpdateManager$UpdateRequest.run(DeferredUpdateManager.java:40)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Observed in the M20050825 build. 
Open the RCPMail's View in VE. Select the banner Composite graphically and
rename it to 'bannera'. Snippet update finishes and the composite is back in the
tree view with all the children etc., but graphically it is a default sized
Composite with no children shown. There are no exceptions in the log at this
point. Once one selects any of the children in the beans view then the following
exception is thrown:

org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.NullPointerException)
	at org.eclipse.swt.SWT.error(SWT.java:2942)
	at org.eclipse.swt.SWT.error(SWT.java:2865)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:126)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3057)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2716)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)
Caused by: java.lang.NullPointerException
	at
org.eclipse.ve.internal.swt.GridLayoutEditPolicy.getFullCellBounds(GridLayoutEditPolicy.java:877)
	at
org.eclipse.ve.internal.swt.GridSpanHandleLocator.relocate(GridSpanHandleLocator.java:49)
	at org.eclipse.gef.handles.AbstractHandle.validate(AbstractHandle.java:207)
	at org.eclipse.draw2d.Figure.validate(Figure.java:1738)
	at org.eclipse.draw2d.Figure.validate(Figure.java:1738)
	at org.eclipse.draw2d.FreeformLayeredPane.validate(FreeformLayeredPane.java:122)
	at
org.eclipse.draw2d.FreeformViewport$FreeformViewportLayout.calculatePreferredSize(FreeformViewport.java:28)
	at org.eclipse.draw2d.AbstractLayout.getPreferredSize(AbstractLayout.java:93)
	at
org.eclipse.draw2d.AbstractHintLayout.getPreferredSize(AbstractHintLayout.java:85)
	at org.eclipse.draw2d.Figure.getPreferredSize(Figure.java:737)
	at org.eclipse.draw2d.ScrollPaneSolver.solve(ScrollPaneSolver.java:75)
	at org.eclipse.draw2d.FigureCanvas.layoutViewport(FigureCanvas.java:237)
	at org.eclipse.draw2d.FigureCanvas.access$4(FigureCanvas.java:235)
	at org.eclipse.draw2d.FigureCanvas$3.notifyValidating(FigureCanvas.java:200)
	at org.eclipse.draw2d.UpdateManager.fireValidating(UpdateManager.java:109)
	at
org.eclipse.draw2d.DeferredUpdateManager.validateFigures(DeferredUpdateManager.java:267)
	at
org.eclipse.draw2d.DeferredUpdateManager.performUpdate(DeferredUpdateManager.java:143)
	at
org.eclipse.draw2d.DeferredUpdateManager$UpdateRequest.run(DeferredUpdateManager.java:40)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)
	... 18 more
does not have to be RCPMail, similar thing occurs if you rename a composite with
several controls in it in a standard SWT project
This is a codegen problem which arose because of code put in to support moving
of containers within containers. 

Suppose you have a Composite and a label as a child, and you rename the
composite, during snippet update both the composite and the label should be
deleted from the BDM and added back in. However during the disposing of the
Composite, the label is not being disposed. Becuase of which things like
setSize(), setText() are not being reapplied - which results in the parent
having a smaller size. The problem is in CompositeAddDecoderHelper.java line 377
which needs to be fixed.
The problem was the way codegen was adding the label back to the composite. It
was adding it as a child of the composite and then removing it from the
components of the freeform. The removal of it from the components of the
freeform released it from the live VM. Now codegen removes from components first
and then adds it to the controls list of Composite. Released
SWTConstructorDecoderHelper.
closed</WithStack>
    <WithOutStack>Observed in the M20050825 build. 
Open the RCPMail's View in VE. Select the banner Composite graphically and
rename it to 'bannera'. Snippet update finishes and the composite is back in the
tree view with all the children etc., but graphically it is a default sized
Composite with no children shown. There are no exceptions in the log at this
point. Once one selects any of the children in the beans view then the following
exception is thrown:



	... 18 more
does not have to be RCPMail, similar thing occurs if you rename a composite with
several controls in it in a standard SWT project
This is a codegen problem which arose because of code put in to support moving
of containers within containers. 

Suppose you have a Composite and a label as a child, and you rename the
composite, during snippet update both the composite and the label should be
deleted from the BDM and added back in. However during the disposing of the
Composite, the label is not being disposed. Becuase of which things like
setSize(), setText() are not being reapplied - which results in the parent
having a smaller size. The problem is in CompositeAddDecoderHelper.java line 377
which needs to be fixed.
The problem was the way codegen was adding the label back to the composite. It
was adding it as a child of the composite and then removing it from the
components of the freeform. The removal of it from the components of the
freeform released it from the live VM. Now codegen removes from components first
and then adds it to the controls list of Composite. Released
SWTConstructorDecoderHelper.
closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108037" />
    <CreationDate amount="2005-08-25 15:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug-cdi-gdb" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Child process environment variables</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="assignment">
        <location start="542" end="592" />
        <code>fGDBProcess = getGDBProcess(args, envs, monitor);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>I would like (NEED) to be able to pass in additional environment variables to 
the child gdb process in the MIProcessAdapter class. Currently, in the 
getGDBProcess method, it calls ProcessFactory.getFactory().exec(args), I would 
like to see an option to call ProcessFactory.getFactory().exec(args, envs).

Here is what I think the required changes are. Create an additional 
constructor which will takes an additional parameter, such as

public MIProcessAdapter(String[] args, String[] envs, IProgressMonitor 
monitor) throws IOException {
	fGDBProcess = getGDBProcess(args, envs, monitor);
}

and change the getGDBProcess() method to have an additional String[] 
parameter. The old MIProcessAdapter constructor will pass null for envs. Also, 
in the body of the getGDBProcess method, you will need to check if envs is 
null or not. If it is null, than call exec(args), otherwise, call exec(args, 
envs).

Is this make sense? Is there any better approach for passing environment 
variables to the child gdb process?
Sounds good to me.
Attach a patch, or I'll take a look when back at the office next week
Patrick, how did you intend to pass the environment ?
Environment can be pass to gdb, but those environment or meant for the
inferior i.e. the application being debug not gdb itself
Our debugger is a JTAG debugger. We want the environment variables to be 
passed to the debugger itself, not the inferior. We use such some environment 
in that debugger to control the initialization of the debugger. 
Returning to the pool.
Created attachment 55876
Proposed GDB environment fix

This patch uses attributes defined in one of the constants classes to pass an array of strings to the debug process spawner.
after many years the problem i still present, I proposed a patch for cdi and dsf

https://bugs.eclipse.org/bugs/show_bug.cgi?id=338418
https://bugs.eclipse.org/bugs/show_bug.cgi?id=338420</WithStack>
    <WithOutStack>I would like (NEED) to be able to pass in additional environment variables to 
the child gdb process in the MIProcessAdapter class. Currently, in the 
getGDBProcess method, it calls ProcessFactory.getFactory().exec(args), I would 
like to see an option to call ProcessFactory.getFactory().exec(args, envs).

Here is what I think the required changes are. Create an additional 
constructor which will takes an additional parameter, such as

public MIProcessAdapter(String[] args, String[] envs, IProgressMonitor 
monitor) throws IOException {
	fGDBProcess = getGDBProcess(args, envs, monitor);
}

and change the getGDBProcess() method to have an additional String[] 
parameter. The old MIProcessAdapter constructor will pass null for envs. Also, 
in the body of the getGDBProcess method, you will need to check if envs is 
null or not. If it is null, than call exec(args), otherwise, call exec(args, 
envs).

Is this make sense? Is there any better approach for passing environment 
variables to the child gdb process?
Sounds good to me.
Attach a patch, or I'll take a look when back at the office next week
Patrick, how did you intend to pass the environment ?
Environment can be pass to gdb, but those environment or meant for the
inferior i.e. the application being debug not gdb itself
Our debugger is a JTAG debugger. We want the environment variables to be 
passed to the debugger itself, not the inferior. We use such some environment 
in that debugger to control the initialization of the debugger. 
Returning to the pool.
Created attachment 55876
Proposed GDB environment fix

This patch uses attributes defined in one of the constants classes to pass an array of strings to the debug process spawner.
after many years the problem i still present, I proposed a patch for cdi and dsf

https://bugs.eclipse.org/bugs/show_bug.cgi?id=338418
https://bugs.eclipse.org/bugs/show_bug.cgi?id=338420</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108038" />
    <CreationDate amount="2005-08-25 15:24:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>J2EEComponentCreationWizardPage ignores COMPONENT_VERSION property</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="263" end="304" />
        <code>String[] items = versionCombo.getItems();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="344" end="394" />
        <code>versionCombo.select(items.length - 1);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>We extend a subclass of J2EEComponentCreationWizardPage and pass in our own 
DataModelProvider, which assigns a default value for the COMPONENT_VERSION 
property.  However, in J2EEComponentCreationWizardPage.createVersionComposite
(), it has the following lines:
String[] items = versionCombo.getItems();
if (items != null &amp;&amp; items.length &gt; 0)
            versionCombo.select(items.length - 1);

This results in the latest COMPONENT_VERSION being set... even though we have 
already set the appropriate value as the default.  If you add the following 
check around the above lines, it will work as desired:
if (versionCombo.getSelectionIndex() == -1)
Dropped to 8/26 build
This section of code was totally redone for WTP 1.0 M9.</WithStack>
    <WithOutStack>We extend a subclass of J2EEComponentCreationWizardPage and pass in our own 
DataModelProvider, which assigns a default value for the COMPONENT_VERSION 
property.  However, in J2EEComponentCreationWizardPage.createVersionComposite
(), it has the following lines:
String[] items = versionCombo.getItems();
if (items != null &amp;&amp; items.length &gt; 0)
            versionCombo.select(items.length - 1);

This results in the latest COMPONENT_VERSION being set... even though we have 
already set the appropriate value as the default.  If you add the following 
check around the above lines, it will work as desired:
if (versionCombo.getSelectionIndex() == -1)
Dropped to 8/26 build
This section of code was totally redone for WTP 1.0 M9.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108039" />
    <CreationDate amount="2005-08-25 15:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Detail pane setting not remembered if debug views are controlled by context</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1.  Launch a debug session that opens / closes the Registers view based on</Line>
          <Line>context.</Line>
          <Line>2.  Once the debug session is started, switch to the Registers View.</Line>
          <Line>3.  Resize the details pane in the view.</Line>
          <Line>4.  Terminate the debug session and restart the same debug session.</Line>
          <Line>5.  Swtich to the Registers View again.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>1.  Launch a debug session that opens / closes the Registers view based on 
context.
2.  Once the debug session is started, switch to the Registers View.
3.  Resize the details pane in the view. 
4.  Terminate the debug session and restart the same debug session.
5.  Swtich to the Registers View again.

Expected Result:
The size of the detail pane should be remembered.  

Actual Result:  
The size of the detail pane is not remembered.  

#VariablesView.saveState is not called when the view is disposed.  This is 
where the weight on the sash form is remembered.  The size of the detailed pane 
is only remember if the view stays opened and when the workbench is closed.
We should persist sash settings when the user changes them (in a user pref), as we persist column sizes in the variables view.
We should persist the value when ever it changes. When a perspective is re-set, we should throw out the values.
fixed in HEAD

see VariablesView#saveState/#init
please verify Kevin
verifed</WithStack>
    <WithOutStack>1.  Launch a debug session that opens / closes the Registers view based on 
context.
2.  Once the debug session is started, switch to the Registers View.
3.  Resize the details pane in the view. 
4.  Terminate the debug session and restart the same debug session.
5.  Swtich to the Registers View again.

Expected Result:
The size of the detail pane should be remembered.  

Actual Result:  
The size of the detail pane is not remembered.  

#VariablesView.saveState is not called when the view is disposed.  This is 
where the weight on the sash form is remembered.  The size of the detailed pane 
is only remember if the view stays opened and when the workbench is closed.
We should persist sash settings when the user changes them (in a user pref), as we persist column sizes in the variables view.
We should persist the value when ever it changes. When a perspective is re-set, we should throw out the values.
fixed in HEAD

see VariablesView#saveState/#init
please verify Kevin
verifed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108040" />
    <CreationDate amount="2005-08-25 15:31:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>UpdateProjectClasspath causes a NPE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>In org.eclipse.jst.j2ee.internal.common.UpdateProjectClasspath's 
addSrcFolderToProject() method, it makes sure that duplicate classpathEntries 
are not added to the list.  However, the size of the array is oldsize + 
newsize, and it is never reduced.  Classes that later use this array run into 
NullPointerExceptions when they access the empty array element(s).

Please fix this ASAP.
Fix dropped to 8/26 build
Verified that this is now working as expected.
Verified / Fixed</WithStack>
    <WithOutStack>In org.eclipse.jst.j2ee.internal.common.UpdateProjectClasspath's 
addSrcFolderToProject() method, it makes sure that duplicate classpathEntries 
are not added to the list.  However, the size of the array is oldsize + 
newsize, and it is never reduced.  Classes that later use this array run into 
NullPointerExceptions when they access the empty array element(s).

Please fix this ASAP.
Fix dropped to 8/26 build
Verified that this is now working as expected.
Verified / Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108041" />
    <CreationDate amount="2005-08-25 15:34:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>WebContent directory name should be a property</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>In 
org.eclipse.jst.j2ee.internal.web.archive.operations.WebComponentCreationOperat
ion's createWebStructure() method, it has the following lines:

IVirtualFolder webContent = component.getRootFolder().getFolder(new Path
("/")); //$NON-NLS-1$       
		webContent.createLink(new Path(prefix + "/WebContent"), 0, 
null);

As you can see, "/WebContent" is hard-coded.  This should be a property of the 
DataModel.
fixed, should be in the next build.
clsing the verified defect</WithStack>
    <WithOutStack>In 
org.eclipse.jst.j2ee.internal.web.archive.operations.WebComponentCreationOperat
ion's createWebStructure() method, it has the following lines:

IVirtualFolder webContent = component.getRootFolder().getFolder(new Path
("/")); //$NON-NLS-1$       
		webContent.createLink(new Path(prefix + "/WebContent"), 0, 
null);

As you can see, "/WebContent" is hard-coded.  This should be a property of the 
DataModel.
fixed, should be in the next build.
clsing the verified defect</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108042" />
    <CreationDate amount="2005-08-25 15:40:00 -0400" />
    <DupId amount="91967" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>InvocationTargetException exporting source ear file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437330571339">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:357)</Frame>
          <Frame depth="1">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)</Frame>
          <Frame depth="2">org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)</Frame>
          <Frame depth="3">org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.performFinish(DataModelWizard.java:245)</Frame>
          <Frame depth="4">org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:676)</Frame>
          <Frame depth="5">org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:349)</Frame>
          <Frame depth="6">org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="12">org.eclipse.jface.window.Window.runEventLoop(Window.java:809)</Frame>
          <Frame depth="13">org.eclipse.jface.window.Window.open(Window.java:787)</Frame>
          <Frame depth="14">org.eclipse.ui.actions.ExportResourcesAction.run(ExportResourcesAction.java:180)</Frame>
          <Frame depth="15">org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:167)</Frame>
          <Frame depth="16">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="26">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="28">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="31">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="34">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="35">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437330571339">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.wst.common.componentcore.ModuleCoreNature.getModuleCoreNature(ModuleCoreNature.java:152)</Frame>
          <Frame depth="1">org.eclipse.wst.common.componentcore.internal.StructureEdit.getStructureEditForRead(StructureEdit.java:115)</Frame>
          <Frame depth="2">org.eclipse.wst.common.componentcore.internal.resources.VirtualComponent.getReferences(VirtualComponent.java:186)</Frame>
          <Frame depth="3">org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactExportOperation.gatherDependentProjects(J2EEArtifactExportOperation.java:199)</Frame>
          <Frame depth="4">org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactExportOperation.gatherDependentProjects(J2EEArtifactExportOperation.java:202)</Frame>
          <Frame depth="5">org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactExportOperation.getSchedulingRule(J2EEArtifactExportOperation.java:181)</Frame>
          <Frame depth="6">org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.getSchedulingRule(ExtendableOperationImpl.java:63)</Frame>
          <Frame depth="7">org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.execute(ExtendableOperationImpl.java:112)</Frame>
          <Frame depth="8">org.eclipse.wst.common.frameworks.internal.ui.RunnableOperationWrapper.run(RunnableOperationWrapper.java:32)</Frame>
          <Frame depth="9">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)</Frame>
          <Frame depth="10">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)</Frame>
          <Frame depth="11">org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)</Frame>
          <Frame depth="12">org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.performFinish(DataModelWizard.java:245)</Frame>
          <Frame depth="13">org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:676)</Frame>
          <Frame depth="14">org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:349)</Frame>
          <Frame depth="15">org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="21">org.eclipse.jface.window.Window.runEventLoop(Window.java:809)</Frame>
          <Frame depth="22">org.eclipse.jface.window.Window.open(Window.java:787)</Frame>
          <Frame depth="23">org.eclipse.ui.actions.ExportResourcesAction.run(ExportResourcesAction.java:180)</Frame>
          <Frame depth="24">org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:167)</Frame>
          <Frame depth="25">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)</Frame>
          <Frame depth="26">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)</Frame>
          <Frame depth="27">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="35">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="37">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="39">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="40">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="41">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="42">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="43">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="44">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="46">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="47">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="48">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When try to export a source EAR from the J2EE perspective, the following 
exception was received. Please let me know if the test ear file is needed.

java.lang.reflect.InvocationTargetException
		 at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:357
)
		 at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
		 at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)
		 at
org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.performFi
nish(DataModelWizard.java:245)
		 at org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:676)
		 at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:349)
		 at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)
		 at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)
		 at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
		 at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
		 at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
		 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
		 at org.eclipse.jface.window.Window.runEventLoop(Window.java:809)
		 at org.eclipse.jface.window.Window.open(Window.java:787)
		 at
org.eclipse.ui.actions.ExportResourcesAction.run(ExportResourcesAction.java:180)

		 at
org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionList
enerAction.java:167)
		 at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContr
ibutionItem.java:538)
		 at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.j
ava:488)
		 at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionI
tem.java:400)
		 at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
		 at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
		 at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
		 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
		 at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
		 at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
		 at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
		 at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
		 at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
		 at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:
226)
		 at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
		 at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
		 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
		 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
		 at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java
:60)
		 at java.lang.reflect.Method.invoke(Method.java:391)
		 at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
		 at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
		 at org.eclipse.core.launcher.Main.run(Main.java:973)
		 at org.eclipse.core.launcher.Main.main(Main.java:948)
Caused by: java.lang.NullPointerException
		 at
org.eclipse.wst.common.componentcore.ModuleCoreNature.getModuleCoreNature(ModuleC
oreNature.java:152)
		 at
org.eclipse.wst.common.componentcore.internal.StructureEdit.getStructureEditForRe
ad(StructureEdit.java:115)
		 at
org.eclipse.wst.common.componentcore.internal.resources.VirtualComponent.getRefer
ences(VirtualComponent.java:186)
		 at
org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactExportOperation.gath
erDependentProjects(J2EEArtifactExportOperation.java:199)
		 at
org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactExportOperation.gath
erDependentProjects(J2EEArtifactExportOperation.java:202)
		 at
org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactExportOperation.getS
chedulingRule(J2EEArtifactExportOperation.java:181)
		 at
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.getS
chedulingRule(ExtendableOperationImpl.java:63)
		 at
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.exec
ute(ExtendableOperationImpl.java:112)
		 at
org.eclipse.wst.common.frameworks.internal.ui.RunnableOperationWrapper.run(Runnab
leOperationWrapper.java:32)
		 at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346
)
		 at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
		 at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)
		 at
org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.performFi
nish(DataModelWizard.java:245)
		 at org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:676)
		 at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:349)
		 at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)
		 at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)
		 at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
		 at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
		 at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
		 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
		 at org.eclipse.jface.window.Window.runEventLoop(Window.java:809)
		 at org.eclipse.jface.window.Window.open(Window.java:787)
		 at
org.eclipse.ui.actions.ExportResourcesAction.run(ExportResourcesAction.java:180)

		 at
org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionList
enerAction.java:167)
		 at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContr
ibutionItem.java:538)
		 at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.j
ava:488)
		 at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionI
tem.java:400)
		 at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
		 at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
		 at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
		 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
		 at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
		 at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
		 at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
		 at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
		 at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
		 at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:
226)
		 at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
		 at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
		 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
		 at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
		 at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java
:60)
		 at java.lang.reflect.Method.invoke(Method.java:391)
		 at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
		 at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
		 at org.eclipse.core.launcher.Main.run(Main.java:973)
		 at org.eclipse.core.launcher.Main.main(Main.java:948)


*** This bug has been marked as a duplicate of 91967 ***
Closing</WithStack>
    <WithOutStack>When try to export a source EAR from the J2EE perspective, the following 
exception was received. Please let me know if the test ear file is needed.





*** This bug has been marked as a duplicate of 91967 ***
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108043" />
    <CreationDate amount="2005-08-25 15:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>When trying to create a VisualClass it throws an "Error trying to set new file into editor"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>!
I've the same Problem! 

I'm getting the Message:

!ENTRY org.eclipse.ve.java.core 4 0 2005-11-02 11:26:51.637
!MESSAGE Exception thrown.
!STACK 0
java.lang.IllegalStateException: IWAV0168E Improper nesting of mark statements
in Expression. Tried to pop or endMark to before current mark. Tried to go past
Mark# 0.

I'm using eclipse 3.1 and Visual Editor 1.1.0</WithStack>
    <WithOutStack>!
I've the same Problem! 

I'm getting the Message:

!ENTRY org.eclipse.ve.java.core 4 0 2005-11-02 11:26:51.637
!MESSAGE Exception thrown.
!STACK 0
java.lang.IllegalStateException: IWAV0168E Improper nesting of mark statements
in Expression. Tried to pop or endMark to before current mark. Tried to go past
Mark# 0.

I'm using eclipse 3.1 and Visual Editor 1.1.0</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108044" />
    <CreationDate amount="2005-08-25 15:51:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="wst.xml" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Spurious validation errors on web service application</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>There are a lot of extra validation messages that did not exist on previous
versions of WTP, even with the same application in the workspace. Some examples
are posted below from a sample app (I can provide it if you need for debugging)
and appear to all be incorrect. The same application works fine at runtime:
-----------------------------------------------------------------------------
Severity		 Description		 Resource		 In Folder		 Location		 Creation Time
2		 Referenced file contains errors
(http://www.ibm.com/webservices/xsd/j2ee_jaxrpc_map
ping_1_1.xsd).  For more information, right click on the message and select "Show 
Details..."		 InsuranceWebServices_mapping.xml		
RetireWebServicesProject/WebContent/WEB-
INF		 line 1		 August 21, 2005 10:55:39 AM
2		 Referenced file contains errors
(http://www.ibm.com/webservices/xsd/j2ee_jaxrpc_map
ping_1_1.xsd).  For more information, right click on the message and select "Show 
Details..."		 RetireWebServices_mapping.xml		
RetireWebServicesProject/WebContent/WEB-INF
		 line 1		 August 21, 2005 10:55:41 AM
2		 Referenced file contains errors
(http://www.ibm.com/webservices/xsd/j2ee_web_servic
es_1_1.xsd).  For more information, right click on the message and select "Show 
Details..."		 webservices.xml		 RetireWebServicesProject/WebContent/WEB-INF		 line 
1		 August 21, 2005 10:55:46 AM
2		 cvc-id.3: A field of identity constraint 'webservice-description-name-key' 
matched element 'webservices', but this element does not have a simple 
type.		 webservices.xml		 RetireWebServicesProject/WebContent/WEB-INF		 line 4	
 August 21, 
2005 10:55:46 AM
2		 cvc-id.3: A field of identity constraint 'port-component-name-key' matched 
element 'webservice-description', but this element does not have a simple 
type.		 webservices.xml		 RetireWebServicesProject/WebContent/WEB-INF		 line 8	
 August 21, 
2005 10:55:46 AM
Hi,
Some testers on our internal project have run into this and are requesting a fix
for it on M8. Have you had a chance to look into this problem yet?
I haven't had a chance to look at this one yet. Thanks for properly updating the
priority. Please attach or send me the sample app so I can reproduce the problem
that is being seen.
You got lucky. :) I moved the workspace that was failing on 8/25 to a current
WTP and rebuilt and the invalid errors are gone.
This may be more than luck :) I've put in a few fixes for validation when DTDs
and schemas can't be located.

Thanks for keeping current with this.</WithStack>
    <WithOutStack>There are a lot of extra validation messages that did not exist on previous
versions of WTP, even with the same application in the workspace. Some examples
are posted below from a sample app (I can provide it if you need for debugging)
and appear to all be incorrect. The same application works fine at runtime:
-----------------------------------------------------------------------------
Severity		 Description		 Resource		 In Folder		 Location		 Creation Time
2		 Referenced file contains errors
(http://www.ibm.com/webservices/xsd/j2ee_jaxrpc_map
ping_1_1.xsd).  For more information, right click on the message and select "Show 
Details..."		 InsuranceWebServices_mapping.xml		
RetireWebServicesProject/WebContent/WEB-
INF		 line 1		 August 21, 2005 10:55:39 AM
2		 Referenced file contains errors
(http://www.ibm.com/webservices/xsd/j2ee_jaxrpc_map
ping_1_1.xsd).  For more information, right click on the message and select "Show 
Details..."		 RetireWebServices_mapping.xml		
RetireWebServicesProject/WebContent/WEB-INF
		 line 1		 August 21, 2005 10:55:41 AM
2		 Referenced file contains errors
(http://www.ibm.com/webservices/xsd/j2ee_web_servic
es_1_1.xsd).  For more information, right click on the message and select "Show 
Details..."		 webservices.xml		 RetireWebServicesProject/WebContent/WEB-INF		 line 
1		 August 21, 2005 10:55:46 AM
2		 cvc-id.3: A field of identity constraint 'webservice-description-name-key' 
matched element 'webservices', but this element does not have a simple 
type.		 webservices.xml		 RetireWebServicesProject/WebContent/WEB-INF		 line 4	
 August 21, 
2005 10:55:46 AM
2		 cvc-id.3: A field of identity constraint 'port-component-name-key' matched 
element 'webservice-description', but this element does not have a simple 
type.		 webservices.xml		 RetireWebServicesProject/WebContent/WEB-INF		 line 8	
 August 21, 
2005 10:55:46 AM
Hi,
Some testers on our internal project have run into this and are requesting a fix
for it on M8. Have you had a chance to look into this problem yet?
I haven't had a chance to look at this one yet. Thanks for properly updating the
priority. Please attach or send me the sample app so I can reproduce the problem
that is being seen.
You got lucky. :) I moved the workspace that was failing on 8/25 to a current
WTP and rebuilt and the invalid errors are gone.
This may be more than luck :) I've put in a few fixes for validation when DTDs
and schemas can't be located.

Thanks for keeping current with this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108045" />
    <CreationDate amount="2005-08-25 16:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[compiler][1.5] unhelpful error message on bad generic inheritance</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="221" end="281" />
        <code>public class A&lt;T0&gt; extends ArrayList&lt;T0&gt; implements I&lt;T0&gt;{
}</code>
      </source_code>
      <source_code type="class">
        <location start="642" end="700" />
        <code>public class A&lt;T0&gt; extends ArrayList&lt;T0&gt; implements I&lt;T0&gt;{</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>3.1
here's a case where eclipse generates 5 errors for 1 mistake and all are not
very helpful. When it happened to me I ran javac to understand what's going on.
They show 1 message and it tells you exactly what's wrong.

public class A&lt;T0&gt; extends ArrayList&lt;T0&gt; implements I&lt;T0&gt;{
}
interface I&lt;T1&gt; extends Collection{	
}

Eclipse error message (1 of 5):
Name clash: The method addAll(Collection&lt;? extends E&gt;) of type ArrayList&lt;T0&gt; has
the same erasure as addAll(Collection&lt;? extends E&gt;) of type Collection but does
not override it	

javac error message (1 of 1):
java.util.Collection cannot be inherited with different arguments: &lt;&gt; and &lt;T0&gt;
public class A&lt;T0&gt; extends ArrayList&lt;T0&gt; implements I&lt;T0&gt;{
^
Works fine in latest, added GenericTypeTest#test0968</WithStack>
    <WithOutStack>3.1
here's a case where eclipse generates 5 errors for 1 mistake and all are not
very helpful. When it happened to me I ran javac to understand what's going on.
They show 1 message and it tells you exactly what's wrong.

public class A&lt;T0&gt; extends ArrayList&lt;T0&gt; implements I&lt;T0&gt;{
}
interface I&lt;T1&gt; extends Collection{	
}

Eclipse error message (1 of 5):
Name clash: The method addAll(Collection&lt;? extends E&gt;) of type ArrayList&lt;T0&gt; has
the same erasure as addAll(Collection&lt;? extends E&gt;) of type Collection but does
not override it	

javac error message (1 of 1):
java.util.Collection cannot be inherited with different arguments: &lt;&gt; and &lt;T0&gt;
public class A&lt;T0&gt; extends ArrayList&lt;T0&gt; implements I&lt;T0&gt;{
^
Works fine in latest, added GenericTypeTest#test0968</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108046" />
    <CreationDate amount="2005-08-25 16:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Visual Editor pane error</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="295" end="454" />
        <code>org.eclipse.pde.internal.core.WorkspaceModelManager.getWorkplacePluginModel(Lorg/eclipse/core/resource/IProject;)Lorg/eclipse/pde/core/plugin/IPluginModelBase;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Whenever I try to create a visual class - be it SWT, AWT or Swing - the
application throws an error with the following message:
  Error trying to set new file into editor
  Reason: An internal error occured during "Create remote VM for Visual Editor
for  Java"
  Details: tried to access method
org.eclipse.pde.internal.core.WorkspaceModelManager.getWorkplacePluginModel(Lorg/eclipse/core/resource/IProject;)Lorg/eclipse/pde/core/plugin/IPluginModelBase;
from class org.eclipse.jem.internal.proxy.core.PDEProcessForPlugin

Then it creates the class, but does not show it in the Visual Editor pane and
the Palette is empty.

If I close down Eclipse and restart it with a project containing a visual class
open, then it throws the above error on start up. 

Eclipse version: 3.1
If you want it, I can mail the stack trac/error log.
Created attachment 26481
The exported error log/stack trace
What version of VE, Eclipse SDK, EMF and GEF did you install?
Sorry, accidentally deleted the first line with the info.

Eclipse : 3.1.0
EMF     : 2.1.1.M2200508110300
GEF     : 3.1.0
VE      : 1.0.2.1</WithStack>
    <WithOutStack>Whenever I try to create a visual class - be it SWT, AWT or Swing - the
application throws an error with the following message:
  Error trying to set new file into editor
  Reason: An internal error occured during "Create remote VM for Visual Editor
for  Java"
  Details: tried to access method
org.eclipse.pde.internal.core.WorkspaceModelManager.getWorkplacePluginModel(Lorg/eclipse/core/resource/IProject;)Lorg/eclipse/pde/core/plugin/IPluginModelBase;
from class org.eclipse.jem.internal.proxy.core.PDEProcessForPlugin

Then it creates the class, but does not show it in the Visual Editor pane and
the Palette is empty.

If I close down Eclipse and restart it with a project containing a visual class
open, then it throws the above error on start up. 

Eclipse version: 3.1
If you want it, I can mail the stack trac/error log.
Created attachment 26481
The exported error log/stack trace
What version of VE, Eclipse SDK, EMF and GEF did you install?
Sorry, accidentally deleted the first line with the info.

Eclipse : 3.1.0
EMF     : 2.1.1.M2200508110300
GEF     : 3.1.0
VE      : 1.0.2.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108047" />
    <CreationDate amount="2005-08-25 16:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Operations] 'Replace with...' deletes .project, .classpath</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>When you right-click on a shared project and use "Replace with...", the
replacement operation silently deletes the .project and .classpath files for the
project.

It seems that Eclipse should be *much* smarter about this: if the .project and
.classpath files are indeed source-controlled (bad idea, in general), then they
probably should be replaced; otherwise; if they aren't source controlled, they
definitely should NOT be deleted!

I would propose adding a check when deleting files: if deleting a project's
.project or .classpath, maybe Eclipse should prompt the user with something akin to:

"Warning: you are about to delete one of your project's configuration files. 
Are you certain you wish to delete this file?"
I wouldn't say that adding the .project and .classpath to source control is a 
bad idea in general. I would actually say that doing so simplifies things but 
I understand that some projects do not want to pollute their modules with IDE 
specific files. In those cases, they will usually allow you to add 
the .project and .classpath to the .cvsignore file and doing so will fix your 
problem.

However, I agree that we should probably prompt if any file whose names starts 
with a dot is not under version control and the user performs a Replace With 
on the project. Unfortunatley, given our workload, it is not something we will 
be able to address but patches will be accepted.
I think either this needs to be marked as a duplicate of bug 135718 or that of this.
*** Bug 135718 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>When you right-click on a shared project and use "Replace with...", the
replacement operation silently deletes the .project and .classpath files for the
project.

It seems that Eclipse should be *much* smarter about this: if the .project and
.classpath files are indeed source-controlled (bad idea, in general), then they
probably should be replaced; otherwise; if they aren't source controlled, they
definitely should NOT be deleted!

I would propose adding a check when deleting files: if deleting a project's
.project or .classpath, maybe Eclipse should prompt the user with something akin to:

"Warning: you are about to delete one of your project's configuration files. 
Are you certain you wish to delete this file?"
I wouldn't say that adding the .project and .classpath to source control is a 
bad idea in general. I would actually say that doing so simplifies things but 
I understand that some projects do not want to pollute their modules with IDE 
specific files. In those cases, they will usually allow you to add 
the .project and .classpath to the .cvsignore file and doing so will fix your 
problem.

However, I agree that we should probably prompt if any file whose names starts 
with a dot is not under version control and the user performs a Replace With 
on the project. Unfortunatley, given our workload, it is not something we will 
be able to address but patches will be accepted.
I think either this needs to be marked as a duplicate of bug 135718 or that of this.
*** Bug 135718 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108048" />
    <CreationDate amount="2005-08-25 16:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Java virtual machine verions error:BigDecimal :NoSuchMethodError</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I start eclipse with jdk1.5.0_04 set the project compatibility to 1.4. get no
compile error after using constructor
new BigDecimal(0)

When I run the porgram I get
NoSuchMethodError
If you want to run your program on a 1.4 VM, use 1.4 libraries on the classpath.
The compiler is using the libraries provided on the classpath to compile.
The compiler doesn't check that the method has been defined only in 1.5 when you
compile using the compatibility 1.4.
Closing as INVALID.</WithStack>
    <WithOutStack>I start eclipse with jdk1.5.0_04 set the project compatibility to 1.4. get no
compile error after using constructor
new BigDecimal(0)

When I run the porgram I get
NoSuchMethodError
If you want to run your program on a 1.4 VM, use 1.4 libraries on the classpath.
The compiler is using the libraries provided on the classpath to compile.
The compiler doesn't check that the method has been defined only in 1.5 when you
compile using the compatibility 1.4.
Closing as INVALID.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108049" />
    <CreationDate amount="2005-08-25 16:21:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Release Engineering" />
    <component amount="TPTP.Web" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Project Status page for each of the projects should include links to the 4.1 status</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>From the TPTP home page, select any of the projects in the table of contents in 
the left frame. In the Developer's Corner menu, select Project Status.  Only 
3.3 and 4.0 status links are shown on this page.  It would be useful to add 4.1 
status links (defect reports, enhancement reports, and test pass reports).
Fixed.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>From the TPTP home page, select any of the projects in the table of contents in 
the left frame. In the Developer's Corner menu, select Project Status.  Only 
3.3 and 4.0 status links are shown on this page.  It would be useful to add 4.1 
status links (defect reports, enhancement reports, and test pass reports).
Fixed.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108050" />
    <CreationDate amount="2005-08-25 16:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.5.0M3" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Execution not matching override in doubly derived method</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="8">
      <source_code type="class">
        <location start="401" end="709" />
        <code>public abstract class MockServlet extends HttpServlet {
    
    protected void doPost() {
    }

    private static aspect FindMatches {
        declare warning: execution(* HttpServlet.do*(..)): "servlet request";
        declare warning: execution(* HttpServlet+.do*(..)): "servlet request2";    	
    }
}</code>
      </source_code>
      <source_code type="class">
        <location start="711" end="772" />
        <code>class HttpServlet {
    protected void doPost() {
    }    
}</code>
      </source_code>
      <source_code type="class">
        <location start="774" end="883" />
        <code>public class MockDelayingServlet extends MockServlet {
    private static final long serialVersionUID = 1; 
}</code>
      </source_code>
      <source_code type="class">
        <location start="885" end="984" />
        <code>public class MockServlet4 extends MockDelayingServlet 
{
    protected void doPost()
    {
    } 
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1135" end="1160" />
        <code>protected void doPost() {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1383" end="1408" />
        <code>protected void doPost() {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1630" end="1655" />
        <code>protected void doPost() {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1878" end="1903" />
        <code>protected void doPost() {</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The following sample code fails because the compiler isn't matching the
execution of doPost in MockServlet4. The declare warning for "servlet request"
doesn't match  in that case, nor does advice on the join point actually run at
runtime (though this simplified code only shows the problem with declare
warning). This was working until fairly recently (certainly in M2, even in AJDT
from August 11).

public abstract class MockServlet extends HttpServlet {
    
    protected void doPost() {
    }

    private static aspect FindMatches {
        declare warning: execution(* HttpServlet.do*(..)): "servlet request";
        declare warning: execution(* HttpServlet+.do*(..)): "servlet request2";    	
    }
}

class HttpServlet {
    protected void doPost() {
    }    
}

public class MockDelayingServlet extends MockServlet {
    private static final long serialVersionUID = 1; 
}

public class MockServlet4 extends MockDelayingServlet 
{
    protected void doPost()
    {
    } 
}

compiler output (should have 6 warnings, including two for MockServlet4):

C:\devel\workspace\test\src\MockServlet.java:16 [warning] servlet request
protected void doPost() {
^^^^^^^^^^^^^^^^^^^^^^^^^
        method-execution(void MockServlet.doPost())
        see also: C:\devel\workspace\test\src\MockServlet.java:20::0
C:\devel\workspace\test\src\MockServlet.java:16 [warning] servlet request2
protected void doPost() {
^^^^^^^^^^^^^^^^^^^^^^^^^
        method-execution(void MockServlet.doPost())
        see also: C:\devel\workspace\test\src\MockServlet.java:21::0
C:\devel\workspace\test\src\MockServlet.java:26 [warning] servlet request
protected void doPost() {
^^^^^^^^^^^^^^^^^^^^^^^^^
        method-execution(void HttpServlet.doPost())
        see also: C:\devel\workspace\test\src\MockServlet.java:20::0
C:\devel\workspace\test\src\MockServlet.java:26 [warning] servlet request2
protected void doPost() {
^^^^^^^^^^^^^^^^^^^^^^^^^
        method-execution(void HttpServlet.doPost())
        see also: C:\devel\workspace\test\src\MockServlet.java:21::0
C:\devel\workspace\test\src\MockServlet4.java:9 [warning] servlet request2
protected void doPost()
^^^^^^^^^^^^^^^^^^^^^^^
        method-execution(void MockServlet4.doPost())
        see also: C:\devel\workspace\test\src\MockServlet.java:21::0

5 warnings
bloody hell!  (excuse my language)

over 2300 tests in the suite now (any many of those make multiple discrete
assertions) - up by 1,100 from AspectJ 1.2.1, and not one of them caught this bug. 

It's fixed now in the tree, and serious enough to warrant 1.5.0 M3a
Thanks for the quick catch and the easy to reproduce bug report.</WithStack>
    <WithOutStack>The following sample code fails because the compiler isn't matching the
execution of doPost in MockServlet4. The declare warning for "servlet request"
doesn't match  in that case, nor does advice on the join point actually run at
runtime (though this simplified code only shows the problem with declare
warning). This was working until fairly recently (certainly in M2, even in AJDT
from August 11).

public abstract class MockServlet extends HttpServlet {
    
    protected void doPost() {
    }

    private static aspect FindMatches {
        declare warning: execution(* HttpServlet.do*(..)): "servlet request";
        declare warning: execution(* HttpServlet+.do*(..)): "servlet request2";    	
    }
}

class HttpServlet {
    protected void doPost() {
    }    
}

public class MockDelayingServlet extends MockServlet {
    private static final long serialVersionUID = 1; 
}

public class MockServlet4 extends MockDelayingServlet 
{
    protected void doPost()
    {
    } 
}

compiler output (should have 6 warnings, including two for MockServlet4):

C:\devel\workspace\test\src\MockServlet.java:16 [warning] servlet request
protected void doPost() {
^^^^^^^^^^^^^^^^^^^^^^^^^
        method-execution(void MockServlet.doPost())
        see also: C:\devel\workspace\test\src\MockServlet.java:20::0
C:\devel\workspace\test\src\MockServlet.java:16 [warning] servlet request2
protected void doPost() {
^^^^^^^^^^^^^^^^^^^^^^^^^
        method-execution(void MockServlet.doPost())
        see also: C:\devel\workspace\test\src\MockServlet.java:21::0
C:\devel\workspace\test\src\MockServlet.java:26 [warning] servlet request
protected void doPost() {
^^^^^^^^^^^^^^^^^^^^^^^^^
        method-execution(void HttpServlet.doPost())
        see also: C:\devel\workspace\test\src\MockServlet.java:20::0
C:\devel\workspace\test\src\MockServlet.java:26 [warning] servlet request2
protected void doPost() {
^^^^^^^^^^^^^^^^^^^^^^^^^
        method-execution(void HttpServlet.doPost())
        see also: C:\devel\workspace\test\src\MockServlet.java:21::0
C:\devel\workspace\test\src\MockServlet4.java:9 [warning] servlet request2
protected void doPost()
^^^^^^^^^^^^^^^^^^^^^^^
        method-execution(void MockServlet4.doPost())
        see also: C:\devel\workspace\test\src\MockServlet.java:21::0

5 warnings
bloody hell!  (excuse my language)

over 2300 tests in the suite now (any many of those make multiple discrete
assertions) - up by 1,100 from AspectJ 1.2.1, and not one of them caught this bug. 

It's fixed now in the tree, and serious enough to warrant 1.5.0 M3a
Thanks for the quick catch and the easy to reproduce bug report.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108051" />
    <CreationDate amount="2005-08-25 16:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Agent Controller" />
    <component amount="Platform.Communication" />
    <Version amount="4.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Regression in SocketListener.c</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The code was refactored and in the process the data socket was being handled 
the same way as the the control socket. This means we were computing the 
payLoad length via the envelope... this is incorrect for the data socket... 
there is NO envelope.
Tested and updated. 
The issue was a regression where processOneMsg was treating the data socket as 
if it had an envelope. 
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>The code was refactored and in the process the data socket was being handled 
the same way as the the control socket. This means we were computing the 
payLoad length via the envelope... this is incorrect for the data socket... 
there is NO envelope.
Tested and updated. 
The issue was a regression where processOneMsg was treating the data socket as 
if it had an envelope. 
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108052" />
    <CreationDate amount="2005-08-25 16:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Agent Controller" />
    <component amount="Platform.Agents" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Problem with the new ProcessController running the ConsoleTestClient.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>The ConsoleTestClient works but after the run is complete the Process 
controller seems to spin infinitely, reporting an error.
The error check that prints the message seems to report a superfluous error since everything still works.  Turned off the error print in 4.1. Defer to future release to check further.
Transferring ownership of new agemt controller issues with no specific target date to Mikhail for consideration in future releases.
Resolving as "works for me" since unable to reproduce the defect using TPTP build 4.5.
Please change the target to the 4.5 iteration when this Bugzilla was resolved.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>The ConsoleTestClient works but after the run is complete the Process 
controller seems to spin infinitely, reporting an error.
The error check that prints the message seems to report a superfluous error since everything still works.  Turned off the error print in 4.1. Defer to future release to check further.
Transferring ownership of new agemt controller issues with no specific target date to Mikhail for consideration in future releases.
Resolving as "works for me" since unable to reproduce the defect using TPTP build 4.5.
Please change the target to the 4.5 iteration when this Bugzilla was resolved.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108053" />
    <CreationDate amount="2005-08-25 16:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[search] SearchMatch.isInDocComment useless for SearchEngine.searchDeclarationsOfReferencedTypes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="multicomment">
        <location start="557" end="576" />
        <code>/**
 * @see Ref
 */</code>
      </source_code>
      <source_code type="class">
        <location start="577" end="618" />
        <code>public class Test {
    public Ref ref;
}</code>
      </source_code>
      <source_code type="class">
        <location start="619" end="631" />
        <code>class Ref {}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="WONTFIX" />
    <WithStack>3.1
you always get false for SearchMatch.isInDocComment in the requstor in
SearchEngine.searchDeclarationsOfReferencedTypes because the declaration of the
refefrenced type is of course not in javadoc.

However, how do I search for types referenced in the given element but *not* in
the javadoc of the given element. There seems to be no way.
It's not possible to use this flag in this peculiar case. This is a limitation of this API which comes from the fact that only the first found reference is used to report the declaration.

So, in following example:
/**
 * @see Ref
 */
public class Test {
    public Ref ref;
}
class Ref {}

SearchEngine returns a match but cannot set the isInDocComment flag as there's another reference which is not in a javadoc comment...

But there's a way to do what you're expecting... Disable the javadoc comment support of the compiler before performing the search using the IJavaProject.setOption(String, String). The corresponding option is:
JavaCore.COMPILER_DOC_COMMENT_SUPPORT and the value to disable it is:
JavaCore.DISABLED.
Then SearchEngine will not look into the Javadoc comments and no type declaration will be reported if there's only references in Javadoc comment.

Close as WONTFIX

Verified for 3.4M1 using build I20070802-0800.</WithStack>
    <WithOutStack>3.1
you always get false for SearchMatch.isInDocComment in the requstor in
SearchEngine.searchDeclarationsOfReferencedTypes because the declaration of the
refefrenced type is of course not in javadoc.

However, how do I search for types referenced in the given element but *not* in
the javadoc of the given element. There seems to be no way.
It's not possible to use this flag in this peculiar case. This is a limitation of this API which comes from the fact that only the first found reference is used to report the declaration.

So, in following example:
/**
 * @see Ref
 */
public class Test {
    public Ref ref;
}
class Ref {}

SearchEngine returns a match but cannot set the isInDocComment flag as there's another reference which is not in a javadoc comment...

But there's a way to do what you're expecting... Disable the javadoc comment support of the compiler before performing the search using the IJavaProject.setOption(String, String). The corresponding option is:
JavaCore.COMPILER_DOC_COMMENT_SUPPORT and the value to disable it is:
JavaCore.DISABLED.
Then SearchEngine will not look into the Javadoc comments and no type declaration will be reported if there's only references in Javadoc comment.

Close as WONTFIX

Verified for 3.4M1 using build I20070802-0800.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108054" />
    <CreationDate amount="2005-08-25 17:02:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="jst.ws" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eradicate use of Natures</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Chuck commented out piles of Web service code that was still using Natures. 
I've reviewed his changes and completely removed piles of dead code and classes 
that was using natures.
Created attachment 26483
apply to org.eclipse.jst.ws

patch 1 of 6
Created attachment 26484
apply to org.eclipse.jst.ws.axis.consumption.core

patch 2 of 6
Created attachment 26485
apply to org.eclipse.jst.ws.consumption

patch 3 of 6
Created attachment 26486
apply to org.eclipse.jst.ws.consumption.ui

patch 4 of 6
Created attachment 26487
apply to org.eclipse.jst.ws.creation.ui

patch 5 of 6
Created attachment 26488
apply to org.eclipse.jst.ws.tests

patch 6 of 6
The attached patches are ready to be committed. A few things are broken. See
bug 108056, bug 108057, and bug 108058 for details.
Patches committed and released as v20050826_1255.  Please move the state of 
this defect to resolve.
Resolving
Closing</WithStack>
    <WithOutStack>Chuck commented out piles of Web service code that was still using Natures. 
I've reviewed his changes and completely removed piles of dead code and classes 
that was using natures.
Created attachment 26483
apply to org.eclipse.jst.ws

patch 1 of 6
Created attachment 26484
apply to org.eclipse.jst.ws.axis.consumption.core

patch 2 of 6
Created attachment 26485
apply to org.eclipse.jst.ws.consumption

patch 3 of 6
Created attachment 26486
apply to org.eclipse.jst.ws.consumption.ui

patch 4 of 6
Created attachment 26487
apply to org.eclipse.jst.ws.creation.ui

patch 5 of 6
Created attachment 26488
apply to org.eclipse.jst.ws.tests

patch 6 of 6
The attached patches are ready to be committed. A few things are broken. See
bug 108056, bug 108057, and bug 108058 for details.
Patches committed and released as v20050826_1255.  Please move the state of 
this defect to resolve.
Resolving
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108055" />
    <CreationDate amount="2005-08-25 17:10:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[refactoring] Contained modules not deleted when EAR deleted</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When deleting enterprise applications, there used to be a dialog asking if the
contained modules and utility jar files should be deleted. We now have to
manually delete all the individual modules and utilities inside the ear file.
This dialog was very useful and should be brought back.
Agreed and this port is planned in M9
We will fix this as part of 92426 enhancement

*** This bug has been marked as a duplicate of 92426 ***
Closing
Closing
Reopening since this does not appear to be working in 1.0.1. When I delete the EAR project (even from the J2EE perspective), it simply deletes the EAR project and does not prompt for or delete the contained modules.
hey Tim/John/Chuck, I'm going to resolve this as a dup of 115682 (which covers interactive support for project refactoring - looks like the pri/sev of that one may need to be adjusted); the current refactoring support only covers the automatic updating of J2EE dependencies and associated metadata (including server modules) - I may be misunderstanding the nature of this bug but I believe it falls into a category that needs to be handled by an interactive UI.

Please reopen/send back if I'm misinterpreting something here (i.e. it was intended for these actions to also be taken automatically)


*** This bug has been marked as a duplicate of 115682 ***
Yes, you probably do need UI for this since the user may not want to delete all of the contained modules. Note that absolutely nothing happened other than the regular project delete - not sure if this means that 113439 isn't working.
We may want to revive this bug, and seperate from the the more general issue in 115682.

We currently have a dialog that needs to be migrated to the component api.

The action and extension point classes are:
J2EEDeleteAction.java
J2EEDeleteModuleActionPopulator.java

These handles the case of deleting the contained modules when deleting an EAR.
The more generic case of removing/renaming projects with dependents still needs to be explored, but we could revive these classes for this use case now.

Moving to M6
Is this really critical?

Rob, what level of support do we have now?

We do not have any UI support from eclipse, so this would be a major line item and I would see it as an enhancement request for WTP.
I don't think this is a P1 (the user can simply delete the modules)

The current refactoring actions are all automatic and, as a consequence, do not delete any artifacts; they only update metadata to correct the inter-module dependencies.


No longer considering... closing for now</WithStack>
    <WithOutStack>When deleting enterprise applications, there used to be a dialog asking if the
contained modules and utility jar files should be deleted. We now have to
manually delete all the individual modules and utilities inside the ear file.
This dialog was very useful and should be brought back.
Agreed and this port is planned in M9
We will fix this as part of 92426 enhancement

*** This bug has been marked as a duplicate of 92426 ***
Closing
Closing
Reopening since this does not appear to be working in 1.0.1. When I delete the EAR project (even from the J2EE perspective), it simply deletes the EAR project and does not prompt for or delete the contained modules.
hey Tim/John/Chuck, I'm going to resolve this as a dup of 115682 (which covers interactive support for project refactoring - looks like the pri/sev of that one may need to be adjusted); the current refactoring support only covers the automatic updating of J2EE dependencies and associated metadata (including server modules) - I may be misunderstanding the nature of this bug but I believe it falls into a category that needs to be handled by an interactive UI.

Please reopen/send back if I'm misinterpreting something here (i.e. it was intended for these actions to also be taken automatically)


*** This bug has been marked as a duplicate of 115682 ***
Yes, you probably do need UI for this since the user may not want to delete all of the contained modules. Note that absolutely nothing happened other than the regular project delete - not sure if this means that 113439 isn't working.
We may want to revive this bug, and seperate from the the more general issue in 115682.

We currently have a dialog that needs to be migrated to the component api.

The action and extension point classes are:
J2EEDeleteAction.java
J2EEDeleteModuleActionPopulator.java

These handles the case of deleting the contained modules when deleting an EAR.
The more generic case of removing/renaming projects with dependents still needs to be explored, but we could revive these classes for this use case now.

Moving to M6
Is this really critical?

Rob, what level of support do we have now?

We do not have any UI support from eclipse, so this would be a major line item and I would see it as an enhancement request for WTP.
I don't think this is a P1 (the user can simply delete the modules)

The current refactoring actions are all automatic and, as a consequence, do not delete any artifacts; they only update metadata to correct the inter-module dependencies.


No longer considering... closing for now</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108056" />
    <CreationDate amount="2005-08-25 17:15:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="jst.ws" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Associate sample web module with the right earModule</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>I deleted CreateWebProjectCommand since it was using obselete API from J2EE. 
CreateSampleProjectCommand was the only place it was being used so I refactored 
it to use the new commands. Some additional work needs to be done to make sure 
the newly created sample project is added to correct EAR. I've put TODO's in 
the file. Let me know if you have any questions.
Noticed that CreateSampleProjectCommand is not being used anymore (since Kathy 
applied the patch for 105550), so resolving this as invalid. 
Closing</WithStack>
    <WithOutStack>I deleted CreateWebProjectCommand since it was using obselete API from J2EE. 
CreateSampleProjectCommand was the only place it was being used so I refactored 
it to use the new commands. Some additional work needs to be done to make sure 
the newly created sample project is added to correct EAR. I've put TODO's in 
the file. Let me know if you have any questions.
Noticed that CreateSampleProjectCommand is not being used anymore (since Kathy 
applied the patch for 105550), so resolving this as invalid. 
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108057" />
    <CreationDate amount="2005-08-25 17:20:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="jst.ws" />
    <Version amount="1.5" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>AddModuleDependenciesCommand does not add Java utility projects to EARs properly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="752" end="1879" />
        <code>John Lanuti -   for (int i = 0; i &lt; javaProjectsList.size(); i++) {
      IProject proj = (IProject) javaProjectsList.get(i);
      IDataModel migrationdm = DataModelFactory.createDataModel(new 
JavaProjectMigrationDataModelProvider());
      migrationdm.setProperty
(IJavaProjectMigrationDataModelProperties.PROJECT_NAME, proj.getName());
      migrationdm.getDefaultOperation().execute(monitor, null);

      IDataModel refdm = DataModelFactory.createDataModel(new 
CreateReferenceComponentsDataModelProvider());
      List targetCompList = (List) refdm.getProperty
(ICreateReferenceComponentsDataModelProperties.TARGET_COMPONENTS_HANDLE_LIST);

      IVirtualComponent targetcomponent = ComponentCore.createComponent(proj, 
proj.getName());
      targetCompList.add(targetcomponent.getComponentHandle());
 
      refdm.setProperty
(ICreateReferenceComponentsDataModelProperties.SOURCE_COMPONENT_HANDLE, 
earComponent.getComponentHandle());
      refdm.setProperty
(ICreateReferenceComponentsDataModelProperties.TARGET_COMPONENTS_HANDLE_LIST, 
targetCompList);
      refdm.getDefaultOperation().execute(monitor, null);
     }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>J2EE team has deleted AddUtilityJARMapCommand so the addJavaProjectAsUtilityJar 
method in AddModuleDependenciesCommand needs to be updated. It is currently 
commented out with a TODO.
Here is a conversation I had with John Lanuti on this:

Rupam - What we're trying to is add the Java project as a utility JAR
John Lanuti - let me check
Rupam - Could I write the name of the JAR directly into the manifest using 
J2EEProjectUtilities.writeManifest?
John Lanuti - i dont think thats good
John Lanuti - ah ok
John Lanuti - CreateReferenceComponentsOp
John Lanuti - will ad the component reference
John Lanuti - and to make the java project a component
John Lanuti - JavaProjectMigrationOperation
John Lanuti - for example
John Lanuti - here's some code
John Lanuti -   for (int i = 0; i &lt; javaProjectsList.size(); i++) {
      IProject proj = (IProject) javaProjectsList.get(i);
      IDataModel migrationdm = DataModelFactory.createDataModel(new 
JavaProjectMigrationDataModelProvider());
      migrationdm.setProperty
(IJavaProjectMigrationDataModelProperties.PROJECT_NAME, proj.getName());
      migrationdm.getDefaultOperation().execute(monitor, null);

      IDataModel refdm = DataModelFactory.createDataModel(new 
CreateReferenceComponentsDataModelProvider());
      List targetCompList = (List) refdm.getProperty
(ICreateReferenceComponentsDataModelProperties.TARGET_COMPONENTS_HANDLE_LIST);

      IVirtualComponent targetcomponent = ComponentCore.createComponent(proj, 
proj.getName());
      targetCompList.add(targetcomponent.getComponentHandle());
 
      refdm.setProperty
(ICreateReferenceComponentsDataModelProperties.SOURCE_COMPONENT_HANDLE, 
earComponent.getComponentHandle());
      refdm.setProperty
(ICreateReferenceComponentsDataModelProperties.TARGET_COMPONENTS_HANDLE_LIST, 
targetCompList);
      refdm.getDefaultOperation().execute(monitor, null);
     } 
Rupam - Does the migration operation actually modify the Java project in some 
way?
Rupam - or does it create a new Flexible project with a component in it?
John Lanuti - it just modifies the existing one
Rupam - Can I use CreateReferenceComponentsOp more generally to add a 
dependency of one project/component on another (for example, if I have a Web 
component in project A that needs to reference an ejb or app client component 
in project B?
John Lanuti - i believe that is the idea
John Lanuti - it is generic
This bug has been fixed. I talked extensively with a couple members of the j2ee team to get the right code in there as well as with Rupam.
This change is a bulk update of all _un_targeted, fixed, resolved bugs upon release of M5. This particular bug _might_ have been fixed earlier than M5. (Feel free to correct). 


Verified.
Closed.</WithStack>
    <WithOutStack>J2EE team has deleted AddUtilityJARMapCommand so the addJavaProjectAsUtilityJar 
method in AddModuleDependenciesCommand needs to be updated. It is currently 
commented out with a TODO.
Here is a conversation I had with John Lanuti on this:

Rupam - What we're trying to is add the Java project as a utility JAR
John Lanuti - let me check
Rupam - Could I write the name of the JAR directly into the manifest using 
J2EEProjectUtilities.writeManifest?
John Lanuti - i dont think thats good
John Lanuti - ah ok
John Lanuti - CreateReferenceComponentsOp
John Lanuti - will ad the component reference
John Lanuti - and to make the java project a component
John Lanuti - JavaProjectMigrationOperation
John Lanuti - for example
John Lanuti - here's some code
John Lanuti -   for (int i = 0; i &lt; javaProjectsList.size(); i++) {
      IProject proj = (IProject) javaProjectsList.get(i);
      IDataModel migrationdm = DataModelFactory.createDataModel(new 
JavaProjectMigrationDataModelProvider());
      migrationdm.setProperty
(IJavaProjectMigrationDataModelProperties.PROJECT_NAME, proj.getName());
      migrationdm.getDefaultOperation().execute(monitor, null);

      IDataModel refdm = DataModelFactory.createDataModel(new 
CreateReferenceComponentsDataModelProvider());
      List targetCompList = (List) refdm.getProperty
(ICreateReferenceComponentsDataModelProperties.TARGET_COMPONENTS_HANDLE_LIST);

      IVirtualComponent targetcomponent = ComponentCore.createComponent(proj, 
proj.getName());
      targetCompList.add(targetcomponent.getComponentHandle());
 
      refdm.setProperty
(ICreateReferenceComponentsDataModelProperties.SOURCE_COMPONENT_HANDLE, 
earComponent.getComponentHandle());
      refdm.setProperty
(ICreateReferenceComponentsDataModelProperties.TARGET_COMPONENTS_HANDLE_LIST, 
targetCompList);
      refdm.getDefaultOperation().execute(monitor, null);
     } 
Rupam - Does the migration operation actually modify the Java project in some 
way?
Rupam - or does it create a new Flexible project with a component in it?
John Lanuti - it just modifies the existing one
Rupam - Can I use CreateReferenceComponentsOp more generally to add a 
dependency of one project/component on another (for example, if I have a Web 
component in project A that needs to reference an ejb or app client component 
in project B?
John Lanuti - i believe that is the idea
John Lanuti - it is generic
This bug has been fixed. I talked extensively with a couple members of the j2ee team to get the right code in there as well as with Rupam.
This change is a bulk update of all _un_targeted, fixed, resolved bugs upon release of M5. This particular bug _might_ have been fixed earlier than M5. (Feel free to correct). 


Verified.
Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108058" />
    <CreationDate amount="2005-08-25 17:26:00 -0400" />
    <DupId amount="113312" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="jst.ws" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>ClientHandlersWidgetOutputCommand and ClientHandlerWidgetDefaultingCommand need to be refactored</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>These two classes are completely out of date in their use of J2EE API. Much has 
been commented out in them with TODO's.
Kathy, would you please handle this? Let me know if you need any help - We 
might be able to grab a bit of time from Seng. Targetting to M10.
Please take a look at this together with bug 113312.
Seng, as discussed, I'm resolving this as a duplicate of bug 113312 given how closely entwined they are.

*** This bug has been marked as a duplicate of 113312 ***
Done</WithStack>
    <WithOutStack>These two classes are completely out of date in their use of J2EE API. Much has 
been commented out in them with TODO's.
Kathy, would you please handle this? Let me know if you need any help - We 
might be able to grab a bit of time from Seng. Targetting to M10.
Please take a look at this together with bug 113312.
Seng, as discussed, I'm resolving this as a duplicate of bug 113312 given how closely entwined they are.

*** This bug has been marked as a duplicate of 113312 ***
Done</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108059" />
    <CreationDate amount="2005-08-25 17:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.Execution.ExecutionHarness" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Incorrect path in RAC in generated pluginconfig.xml for hexrecr</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The pluginconfig.xml file in org.eclipse.hyades.test.core has an incorrect 
path to the hexrecr.jar file.  The current line says:

&lt;Variable name="CLASSPATH_ORG_ECLIPSE_HYADES_TEST_CORE" position="append" 
value="%PLUGINS_HOME%\org.eclipse.hyades.test.core_4.0.0\hexrecr.jar"/&gt;

It should say : 
&lt;Variable name="CLASSPATH_ORG_ECLIPSE_HYADES_TEST_CORE" position="append" 
value="%PLUGINS_HOME%\org.eclipse.hyades.test.core_4.1.0\hexrecr.jar"/&gt;

I have a work around (manually edit the file).
I modified SetConfig.java to generate _4.1.0 instead of _4.0.0.  This seems to 
work.  I will wait to talk to Scott before closing this defect.

Mark, the fix you have looks good to me -- this happens frequently where we
become broken due to a build change (maybe related to a plugin.xml version
number changes, not sure how this is handled in the builds).  Thanks for the
fix; I'll close it out now.
*** Bug 108265 has been marked as a duplicate of this bug. ***

Done.</WithStack>
    <WithOutStack>The pluginconfig.xml file in org.eclipse.hyades.test.core has an incorrect 
path to the hexrecr.jar file.  The current line says:

&lt;Variable name="CLASSPATH_ORG_ECLIPSE_HYADES_TEST_CORE" position="append" 
value="%PLUGINS_HOME%\org.eclipse.hyades.test.core_4.0.0\hexrecr.jar"/&gt;

It should say : 
&lt;Variable name="CLASSPATH_ORG_ECLIPSE_HYADES_TEST_CORE" position="append" 
value="%PLUGINS_HOME%\org.eclipse.hyades.test.core_4.1.0\hexrecr.jar"/&gt;

I have a work around (manually edit the file).
I modified SetConfig.java to generate _4.1.0 instead of _4.0.0.  This seems to 
work.  I will wait to talk to Scott before closing this defect.

Mark, the fix you have looks good to me -- this happens frequently where we
become broken due to a build change (maybe related to a plugin.xml version
number changes, not sure how this is handled in the builds).  Thanks for the
fix; I'll close it out now.
*** Bug 108265 has been marked as a duplicate of this bug. ***

Done.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108060" />
    <CreationDate amount="2005-08-25 17:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Extra non-functional horizontal scroll bar in TreeViewer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="32">
      <source_code type="assignment">
        <location start="547" end="609" />
        <code>Composite masterComposite = new Composite(parent, SWT.NONE);</code>
      </source_code>
      <source_code type="assignment">
        <location start="610" end="651" />
        <code>Layout masterLayout = new FillLayout();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="652" end="694" />
        <code>masterComposite.setLayout(masterLayout);</code>
      </source_code>
      <source_code type="assignment">
        <location start="696" end="762" />
        <code>CellEditor[] editors = new CellEditor[COLUMN_PROPERTIES.length];</code>
      </source_code>
      <source_code type="assignment">
        <location start="764" end="832" />
        <code>viewer = new TreeViewer(masterComposite, SWT.BORDER | SWT.SINGLE);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="833" end="881" />
        <code>viewer.setColumnProperties(COLUMN_PROPERTIES);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="882" end="915" />
        <code>viewer.setCellEditors(editors);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="916" end="967" />
        <code>viewer.setCellModifier(new CellModifier(viewer));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="968" end="1021" />
        <code>viewer.setLabelProvider(new ViewerLabelProvider());</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1022" end="1079" />
        <code>viewer.setContentProvider(new ViewerContentProvider());</code>
      </source_code>
      <source_code type="assignment">
        <location start="1186" end="1229" />
        <code>if (e1 == null || e2 == null) return 0;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1381" end="1396" />
        <code>e2).getName());</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1423" end="1456" />
        <code>viewer.setInput(CARD_CATEGORY);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1458" end="1489" />
        <code>Tree tree = viewer.getTree();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1490" end="1520" />
        <code>tree.setHeaderVisible(true);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1521" end="1551" />
        <code>tree.setLinesVisible(false);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1553" end="1610" />
        <code>TreeColumn cardColumn = new TreeColumn(tree, SWT.LEAD);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1611" end="1654" />
        <code>cardColumn.setText(COLUMN_PROPERTIES[0]);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1655" end="1682" />
        <code>cardColumn.setWidth(180);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1683" end="1703" />
        <code>editors[0] = null;</code>
      </source_code>
      <source_code type="assignment">
        <location start="1705" end="1765" />
        <code>TreeColumn bgColorColumn = new TreeColumn(tree, SWT.LEAD);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1766" end="1812" />
        <code>bgColorColumn.setText(COLUMN_PROPERTIES[1]);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1813" end="1842" />
        <code>bgColorColumn.setWidth(70);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1843" end="1884" />
        <code>editors[1] = new ColorCellEditor(tree);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1886" end="1946" />
        <code>TreeColumn fgColorColumn = new TreeColumn(tree, SWT.LEAD);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1947" end="1993" />
        <code>fgColorColumn.setText(COLUMN_PROPERTIES[2]);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1994" end="2023" />
        <code>fgColorColumn.setWidth(70);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2024" end="2065" />
        <code>editors[2] = new ColorCellEditor(tree);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2067" end="2129" />
        <code>TreeColumn fontStyleColumn = new TreeColumn(tree, SWT.LEAD);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2130" end="2178" />
        <code>fontStyleColumn.setText(COLUMN_PROPERTIES[3]);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2179" end="2210" />
        <code>fontStyleColumn.setWidth(70);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2211" end="2281" />
        <code>editors[3] = new ComboBoxCellEditor(tree, FS_VALUES, SWT.READ_ONLY);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I removed the deprecated TableTree on a preferences page created previously and
replaced it with Tree.  Everything seems to work and look the same except for a
non-functional horizontal scroll bar that now appears below the Tree.  This
horizontal scroll bar does nothing and appears no matter how the page is sized.
 When the page is small enough to where a horizontal scroll bar is needed,
another scroll bar appears under the non-functional scroll bar.  

Here is my ceateContents() code:

	protected Control createContents(Composite parent)
	{
		Composite masterComposite = new Composite(parent, SWT.NONE);
		Layout masterLayout = new FillLayout();
		masterComposite.setLayout(masterLayout);

		CellEditor[] editors = new CellEditor[COLUMN_PROPERTIES.length];

		viewer = new TreeViewer(masterComposite, SWT.BORDER | SWT.SINGLE);
		viewer.setColumnProperties(COLUMN_PROPERTIES);
		viewer.setCellEditors(editors);
		viewer.setCellModifier(new CellModifier(viewer));
		viewer.setLabelProvider(new ViewerLabelProvider());
		viewer.setContentProvider(new ViewerContentProvider());
		viewer.setSorter(new ViewerSorter()
		{
			public int compare(Viewer viewer, Object e1, Object e2)
			{
				if (e1 == null || e2 == null) return 0;

				if (e1 instanceof X5CardDescriptor &amp;&amp; e2 instanceof X5CardDescriptor)
					return ((X5CardDescriptor) e1).getName().compareTo(((X5CardDescriptor)
e2).getName());

				return 0;
			}
		});
		viewer.setInput(CARD_CATEGORY);

		Tree tree = viewer.getTree();
		tree.setHeaderVisible(true);
		tree.setLinesVisible(false);

		TreeColumn cardColumn = new TreeColumn(tree, SWT.LEAD);
		cardColumn.setText(COLUMN_PROPERTIES[0]);
		cardColumn.setWidth(180);
		editors[0] = null;

		TreeColumn bgColorColumn = new TreeColumn(tree, SWT.LEAD);
		bgColorColumn.setText(COLUMN_PROPERTIES[1]);
		bgColorColumn.setWidth(70);
		editors[1] = new ColorCellEditor(tree);

		TreeColumn fgColorColumn = new TreeColumn(tree, SWT.LEAD);
		fgColorColumn.setText(COLUMN_PROPERTIES[2]);
		fgColorColumn.setWidth(70);
		editors[2] = new ColorCellEditor(tree);

		TreeColumn fontStyleColumn = new TreeColumn(tree, SWT.LEAD);
		fontStyleColumn.setText(COLUMN_PROPERTIES[3]);
		fontStyleColumn.setWidth(70);
		editors[3] = new ComboBoxCellEditor(tree, FS_VALUES, SWT.READ_ONLY);

		return masterComposite;
	}
Created attachment 26489
Screen shot of non-functional scrollbar
Created attachment 26490
Another Screen shot of non-functional scrollbar
Interesting.  Does the problem go away when you run with the XP manifest 
file?  See http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-
swt-home/faq.html#xpthemes.
If you run a stand alone ControlExample, does the tree have an extra scroll 
bar?
Created attachment 26745
Sample text case with TreeViewer

The same issue happens with TreeColumn added in a Tree in the TreeViewer. Try
to resize the viewer horizontally and you will see another horizontal scroll
bar appear.
Tod, can you please help Yu-Fen recode his example as a stand alone JFace code 
and/or fix the code?  The sample code has no main.  Thanks.
Created attachment 26925
JFace version

Project with a Jface only version of the example that shows the problem.
Fixed &gt; 20050908

Thanks for fixing the snippet Tod!
Created attachment 31111
Double horizontal Scrollbar

Unfortunatly this bug seems to be inplace for I20051102-1600.
I just get it, after a resize that would require an horizontal scrollbar. But it doesn't disapear after that. And it is non-functional.
Karsten,

This sounds like another manifestation of the same bug.  I reran the code that was in this bug report that was provided by Tod and it WORKSFORME.  Do you have some sample code or a set of steps that makes this happen for you?  If so, please reopen this bug with them.  Thanks.
Any more on this?  I can see you are getting this from the screen shot you attached but I haven't got a test case that fails.</WithStack>
    <WithOutStack>I removed the deprecated TableTree on a preferences page created previously and
replaced it with Tree.  Everything seems to work and look the same except for a
non-functional horizontal scroll bar that now appears below the Tree.  This
horizontal scroll bar does nothing and appears no matter how the page is sized.
 When the page is small enough to where a horizontal scroll bar is needed,
another scroll bar appears under the non-functional scroll bar.  

Here is my ceateContents() code:

	protected Control createContents(Composite parent)
	{
		Composite masterComposite = new Composite(parent, SWT.NONE);
		Layout masterLayout = new FillLayout();
		masterComposite.setLayout(masterLayout);

		CellEditor[] editors = new CellEditor[COLUMN_PROPERTIES.length];

		viewer = new TreeViewer(masterComposite, SWT.BORDER | SWT.SINGLE);
		viewer.setColumnProperties(COLUMN_PROPERTIES);
		viewer.setCellEditors(editors);
		viewer.setCellModifier(new CellModifier(viewer));
		viewer.setLabelProvider(new ViewerLabelProvider());
		viewer.setContentProvider(new ViewerContentProvider());
		viewer.setSorter(new ViewerSorter()
		{
			public int compare(Viewer viewer, Object e1, Object e2)
			{
				if (e1 == null || e2 == null) return 0;

				if (e1 instanceof X5CardDescriptor &amp;&amp; e2 instanceof X5CardDescriptor)
					return ((X5CardDescriptor) e1).getName().compareTo(((X5CardDescriptor)
e2).getName());

				return 0;
			}
		});
		viewer.setInput(CARD_CATEGORY);

		Tree tree = viewer.getTree();
		tree.setHeaderVisible(true);
		tree.setLinesVisible(false);

		TreeColumn cardColumn = new TreeColumn(tree, SWT.LEAD);
		cardColumn.setText(COLUMN_PROPERTIES[0]);
		cardColumn.setWidth(180);
		editors[0] = null;

		TreeColumn bgColorColumn = new TreeColumn(tree, SWT.LEAD);
		bgColorColumn.setText(COLUMN_PROPERTIES[1]);
		bgColorColumn.setWidth(70);
		editors[1] = new ColorCellEditor(tree);

		TreeColumn fgColorColumn = new TreeColumn(tree, SWT.LEAD);
		fgColorColumn.setText(COLUMN_PROPERTIES[2]);
		fgColorColumn.setWidth(70);
		editors[2] = new ColorCellEditor(tree);

		TreeColumn fontStyleColumn = new TreeColumn(tree, SWT.LEAD);
		fontStyleColumn.setText(COLUMN_PROPERTIES[3]);
		fontStyleColumn.setWidth(70);
		editors[3] = new ComboBoxCellEditor(tree, FS_VALUES, SWT.READ_ONLY);

		return masterComposite;
	}
Created attachment 26489
Screen shot of non-functional scrollbar
Created attachment 26490
Another Screen shot of non-functional scrollbar
Interesting.  Does the problem go away when you run with the XP manifest 
file?  See http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-
swt-home/faq.html#xpthemes.
If you run a stand alone ControlExample, does the tree have an extra scroll 
bar?
Created attachment 26745
Sample text case with TreeViewer

The same issue happens with TreeColumn added in a Tree in the TreeViewer. Try
to resize the viewer horizontally and you will see another horizontal scroll
bar appear.
Tod, can you please help Yu-Fen recode his example as a stand alone JFace code 
and/or fix the code?  The sample code has no main.  Thanks.
Created attachment 26925
JFace version

Project with a Jface only version of the example that shows the problem.
Fixed &gt; 20050908

Thanks for fixing the snippet Tod!
Created attachment 31111
Double horizontal Scrollbar

Unfortunatly this bug seems to be inplace for I20051102-1600.
I just get it, after a resize that would require an horizontal scrollbar. But it doesn't disapear after that. And it is non-functional.
Karsten,

This sounds like another manifestation of the same bug.  I reran the code that was in this bug report that was provided by Tod and it WORKSFORME.  Do you have some sample code or a set of steps that makes this happen for you?  If so, please reopen this bug with them.  Thanks.
Any more on this?  I can see you are getting this from the screen shot you attached but I haven't got a test case that fails.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108061" />
    <CreationDate amount="2005-08-25 17:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Profiling" />
    <component amount="Platform.UI.ProfilingPerspective" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>"Save profiling resources on exit" preferences have no effect</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Setting the "Save profiling resources on exit" preference to Always or Prompt 
has no effect.  Always does not save the profiling and logging resources to 
disk on exit.  Prompt does not show a prompt window on exit.

I was using TPTP 4.1 200508250100 driver.
problem does not exist as in 2005 09 09 CVS code.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Setting the "Save profiling resources on exit" preference to Always or Prompt 
has no effect.  Always does not save the profiling and logging resources to 
disk on exit.  Prompt does not show a prompt window on exit.

I was using TPTP 4.1 200508250100 driver.
problem does not exist as in 2005 09 09 CVS code.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108062" />
    <CreationDate amount="2005-08-25 17:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="UI" />
    <Version amount="0.3" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>NPE when opening resources from CVS resources history</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330571355">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.mylar.java.ui.editor.MylarJavaElementDescriptor.drawCompositeImage(MylarJavaElementDescriptor.java:40)</Frame>
          <Frame depth="1">org.eclipse.jface.resource.CompositeImageDescriptor.getImageData(CompositeImageDescriptor.java:205)</Frame>
          <Frame depth="2">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:279)</Frame>
          <Frame depth="3">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:233)</Frame>
          <Frame depth="4">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:211)</Frame>
          <Frame depth="5">org.eclipse.mylar.ui.MylarImages.getImage(MylarImages.java:108)</Frame>
          <Frame depth="6">org.eclipse.mylar.java.ui.editor.MylarCompilationUnitEditor.updatedTitleImage(MylarCompilationUnitEditor.java:55)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.javaeditor.JavaEditorErrorTickUpdater$1.run(JavaEditorErrorTickUpdater.java:86)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:152)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:28)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.syncExec(Display.java:3413)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.javaeditor.JavaEditorErrorTickUpdater.postImageChange(JavaEditorErrorTickUpdater.java:84)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.ui.javaeditor.JavaEditorErrorTickUpdater.updateEditorImage(JavaEditorErrorTickUpdater.java:77)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput(CompilationUnitEditor.java:1548)</Frame>
          <Frame depth="14">org.eclipse.ui.texteditor.AbstractTextEditor$16.run(AbstractTextEditor.java:2360)</Frame>
          <Frame depth="15">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)</Frame>
          <Frame depth="17">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:624)</Frame>
          <Frame depth="18">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="19">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:621)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2135)</Frame>
          <Frame depth="21">org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:2378)</Frame>
          <Frame depth="22">org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:2405)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:773)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:572)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:365)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:552)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:214)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2325)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2258)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.WorkbenchPage.access$9(WorkbenchPage.java:2250)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2236)</Frame>
          <Frame depth="32">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2231)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2204)</Frame>
          <Frame depth="35">org.eclipse.team.internal.ccvs.ui.actions.OpenLogEntryAction$1.run(OpenLogEntryAction.java:85)</Frame>
          <Frame depth="36">org.eclipse.team.internal.ccvs.ui.repo.RepositoryManager.run(RepositoryManager.java:651)</Frame>
          <Frame depth="37">org.eclipse.team.internal.ccvs.ui.actions.CVSAction$2.run(CVSAction.java:347)</Frame>
          <Frame depth="38">org.eclipse.team.internal.ccvs.ui.actions.CVSAction$3.run(CVSAction.java:356)</Frame>
          <Frame depth="39">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="40">org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run(CVSAction.java:353)</Frame>
          <Frame depth="41">org.eclipse.team.internal.ccvs.ui.actions.OpenLogEntryAction.execute(OpenLogEntryAction.java:64)</Frame>
          <Frame depth="42">org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run(CVSAction.java:117)</Frame>
          <Frame depth="43">org.eclipse.team.internal.ccvs.ui.HistoryView$6.handleEvent(HistoryView.java:199)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="51">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="53">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="54">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="55">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="56">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="57">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="58">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="59">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="60">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="61">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="62">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="63">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>NPE when opening resources (double-click) from CVS resources history view.

java.lang.NullPointerException
	at
org.eclipse.mylar.java.ui.editor.MylarJavaElementDescriptor.drawCompositeImage(MylarJavaElementDescriptor.java:40)
	at
org.eclipse.jface.resource.CompositeImageDescriptor.getImageData(CompositeImageDescriptor.java:205)
	at
org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:279)
	at
org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:233)
	at
org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:211)
	at
org.eclipse.mylar.ui.MylarImages.getImage(MylarImages.java:108)
	at org.eclipse.mylar.java.ui.editor.MylarCompilationUnitEditor.updatedTitleImage(MylarCompilationUnitEditor.java:55)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaEditorErrorTickUpdater$1.run(JavaEditorErrorTickUpdater.java:86)
	at
org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:152)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:28)
	at
org.eclipse.swt.widgets.Display.syncExec(Display.java:3413)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditorErrorTickUpdater.postImageChange(JavaEditorErrorTickUpdater.java:84)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaEditorErrorTickUpdater.updateEditorImage(JavaEditorErrorTickUpdater.java:77)
	at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput(CompilationUnitEditor.java:1548)
	at
org.eclipse.ui.texteditor.AbstractTextEditor$16.run(AbstractTextEditor.java:2360)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)
	at
org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:624)
	at
org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:621)
	at
org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2135)
	at
org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:2378)
	at
org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:2405)
	at
org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:773)
	at
org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:572)
	at
org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:365)
	at
org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:552)
	at
org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:214)
	at
org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2325)
	at
org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2258)
	at
org.eclipse.ui.internal.WorkbenchPage.access$9(WorkbenchPage.java:2250)
	at
org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2236)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at
org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2231)
	at
org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2204)
	at
org.eclipse.team.internal.ccvs.ui.actions.OpenLogEntryAction$1.run(OpenLogEntryAction.java:85)
	at
org.eclipse.team.internal.ccvs.ui.repo.RepositoryManager.run(RepositoryManager.java:651)
	at
org.eclipse.team.internal.ccvs.ui.actions.CVSAction$2.run(CVSAction.java:347)
	at
org.eclipse.team.internal.ccvs.ui.actions.CVSAction$3.run(CVSAction.java:356)
	at
org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run(CVSAction.java:353)
	at
org.eclipse.team.internal.ccvs.ui.actions.OpenLogEntryAction.execute(OpenLogEntryAction.java:64)
	at
org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run(CVSAction.java:117)
	at
org.eclipse.team.internal.ccvs.ui.HistoryView$6.handleEvent(HistoryView.java:199)
	at
org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at
org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at
org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
	at
org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
	at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
	at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
	at
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at
java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at
org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at
org.eclipse.core.launcher.Main.main(Main.java:948)
I just had this happen to me too.  Fixed.</WithStack>
    <WithOutStack>NPE when opening resources (double-click) from CVS resources history view.


I just had this happen to me too.  Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108063" />
    <CreationDate amount="2005-08-25 18:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Java" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>create policy for re-running active searches</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- resource change listening</Line>
          <Line>- Java model listening</Line>
          <Line>-</Line>
          <Line>an explicit refresh button</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>They don't contribute any information to the view.
This could either be done via:
- resource change listening
- Java model listening
-
an explicit refresh button

Let's chat about what's best--the latter will
be very easy to do.

*** Bug 108068 has been marked as a duplicate of this bug. ***
Stale.</WithStack>
    <WithOutStack>They don't contribute any information to the view.
This could either be done via:
- resource change listening
- Java model listening
-
an explicit refresh button

Let's chat about what's best--the latter will
be very easy to do.

*** Bug 108068 has been marked as a duplicate of this bug. ***
Stale.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108064" />
    <CreationDate amount="2005-08-25 18:11:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Deleted revision not handled gracefully</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437330571355">
        <Exception>org.eclipse.team.internal.ccvs.core.connection.CVSServerException</Exception>
        <Reason>The server
reported an error while performing the "cvs update" command.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.fetchDelta(RemoteFolderTreeBuilder.java:625)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildTree(RemoteFolderTreeBuilder.java:291)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:143)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteTree(CVSWorkspaceRoot.java:173)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.syncinfo.CVSResourceVariantTree.fetchVariant(CVSResourceVariantTree.java:80)</Frame>
          <Frame depth="5">org.eclipse.team.core.variants.AbstractResourceVariantTree.refresh(AbstractResourceVariantTree.java:86)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.core.syncinfo.CVSResourceVariantTree.refresh(CVSResourceVariantTree.java:327)</Frame>
          <Frame depth="7">org.eclipse.team.core.variants.AbstractResourceVariantTree.refresh(AbstractResourceVariantTree.java:55)</Frame>
          <Frame depth="8">org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.refresh(ResourceVariantTreeSubscriber.java:160)</Frame>
          <Frame depth="9">org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.refresh(ResourceVariantTreeSubscriber.java:125)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ccvs.ui.actions.SyncAction$1.run(SyncAction.java:122)</Frame>
          <Frame depth="11">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437330571355">
        <Exception>org.eclipse.team.internal.ccvs.core.connection.CVSServerException</Exception>
        <Reason>The server
reported an error while performing the "cvs status" command.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.performErrorCheck(RemoteFolderMemberFetcher.java:148)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.updateFileRevisions(RemoteFolderMemberFetcher.java:132)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.ui.operations.FetchMembersOperation$InternalRemoteFolderMemberFetcher.updateFileRevisions(FetchMembersOperation.java:74)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.fetchMembers(RemoteFolderMemberFetcher.java:73)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.fetchMembers(RemoteFolderMemberFetcher.java:53)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.ui.operations.FetchMembersOperation.execute(FetchMembersOperation.java:107)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.ui.operations.CVSOperation.run(CVSOperation.java:79)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.ui.model.CVSTagElement.fetchDeferredChildren(CVSTagElement.java:134)</Frame>
          <Frame depth="8">org.eclipse.ui.progress.DeferredTreeContentManager$1.run(DeferredTreeContentManager.java:192)</Frame>
          <Frame depth="9">org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) Get the latest version of a file in your workspace</Line>
          <Line>2) Have the cvsadmin/release-engineer delete that revision (for example using RCS)</Line>
          <Line>3) Attempt to synchronize that file within Eclipse.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>We had to have release engineering delete a revision (i.e. rollback).  Eclipse
had no idea what to do during synchronizes, compares, etc.  

I had to explicitly replace with an older version of the file in question after
several other attempts to clean-up my environment were greeted with no response
from Eclipse, including an empty error message alert box.

This can be reproduced by:
1) Get the latest version of a file in your workspace
2) Have the cvsadmin/release-engineer delete that revision (for example using RCS)
3) Attempt to synchronize that file within Eclipse.

Some of the interesting entries from the log were as follows:

!ENTRY org.eclipse.team.cvs.core 4 0 2005-08-25 14:38:40.177
!MESSAGE The server reported an error while performing the "cvs update" command.
!STACK 1
org.eclipse.team.internal.ccvs.core.connection.CVSServerException: The server
reported an error while performing the "cvs update" command.
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.fetchDelta(RemoteFolderTreeBuilder.java:625)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildTree(RemoteFolderTreeBuilder.java:291)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderTreeBuilder.buildRemoteTree(RemoteFolderTreeBuilder.java:143)
	at
org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteTree(CVSWorkspaceRoot.java:173)
	at
org.eclipse.team.internal.ccvs.core.syncinfo.CVSResourceVariantTree.fetchVariant(CVSResourceVariantTree.java:80)
	at
org.eclipse.team.core.variants.AbstractResourceVariantTree.refresh(AbstractResourceVariantTree.java:86)
	at
org.eclipse.team.internal.ccvs.core.syncinfo.CVSResourceVariantTree.refresh(CVSResourceVariantTree.java:327)
	at
org.eclipse.team.core.variants.AbstractResourceVariantTree.refresh(AbstractResourceVariantTree.java:55)
	at
org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.refresh(ResourceVariantTreeSubscriber.java:160)
	at
org.eclipse.team.core.variants.ResourceVariantTreeSubscriber.refresh(ResourceVariantTreeSubscriber.java:125)
	at org.eclipse.team.internal.ccvs.ui.actions.SyncAction$1.run(SyncAction.java:122)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)
!SUBENTRY 1 org.eclipse.team.cvs.core 4 -10 2005-08-25 14:38:40.177
!MESSAGE The server reported an error while performing the "cvs update" command.
!SUBENTRY 2 org.eclipse.team.cvs.core 4 -14 2005-08-25 14:38:40.177
!MESSAGE cfg: cvs [server aborted]: could not find desired version 1.18 in
/cvsrep/cvsroot/OP/op/cfg/configFile.xml,v


!ENTRY org.eclipse.team.cvs.core 4 0 2005-08-25 12:02:24.891
!MESSAGE The server reported an error while performing the "cvs status" command.
!STACK 1
org.eclipse.team.internal.ccvs.core.connection.CVSServerException: The server
reported an error while performing the "cvs status" command.
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.performErrorCheck(RemoteFolderMemberFetcher.java:148)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.updateFileRevisions(RemoteFolderMemberFetcher.java:132)
	at
org.eclipse.team.internal.ccvs.ui.operations.FetchMembersOperation$InternalRemoteFolderMemberFetcher.updateFileRevisions(FetchMembersOperation.java:74)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.fetchMembers(RemoteFolderMemberFetcher.java:73)
	at
org.eclipse.team.internal.ccvs.core.resources.RemoteFolderMemberFetcher.fetchMembers(RemoteFolderMemberFetcher.java:53)
	at
org.eclipse.team.internal.ccvs.ui.operations.FetchMembersOperation.execute(FetchMembersOperation.java:107)
	at
org.eclipse.team.internal.ccvs.ui.operations.CVSOperation.run(CVSOperation.java:79)
	at
org.eclipse.team.internal.ccvs.ui.model.CVSTagElement.fetchDeferredChildren(CVSTagElement.java:134)
	at
org.eclipse.ui.progress.DeferredTreeContentManager$1.run(DeferredTreeContentManager.java:192)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)
!SUBENTRY 1 org.eclipse.team.cvs.core 4 -10 2005-08-25 12:02:24.891
!MESSAGE The server reported an error while performing the "cvs status" command.
!SUBENTRY 2 org.eclipse.team.cvs.core 4 -14 2005-08-25 12:02:24.891
!MESSAGE : cvs server: failed to create lock directory for `/cvsrep/cvsroot/OP'
(/cvsrep/cvsroot/OP/#cvs.lock): Permission denied
!SUBENTRY 2 org.eclipse.team.cvs.core 4 -14 2005-08-25 12:02:24.891
!MESSAGE : cvs server: failed to obtain dir lock in repository `/cvsrep/cvsroot/OP'
!SUBENTRY 2 org.eclipse.team.cvs.core 4 -14 2005-08-25 12:02:24.891
!MESSAGE : cvs [server aborted]: read lock failed - giving up
I think it is reasonable to assume that if you are going to delete revisions 
from the server that all users will be required to check out the affected 
projects from scratch.
Created attachment 26537
Error indication due to deleted revision
That certainly is reasonable.  However, the error handling of such an event
leaves something to be desired.  See the attached screenshot.
Yes, I agree that asn't very graceful. I have made several error handling 
improvements in 3.2 that may have addressed this. The problem with this 
particular case is that an improvement in the error handling would not be all 
that helpful anyway so I'm not inclined to spend time trying to reproduce the 
scenario.
Actually, I tried it and was not able to reproduce the empty dialog you got 
(i.e. I always get an error message of some sort). What did you do in 
particular to get the empty dialog?
I wish I could give you more specifics, but the most specific I can get is that
I attempted several times to Synch/Compare/Replace immediately after the
revision was deleted.  Unfortunately, I can't recall the exact steps.

I was only lucky enough to get the empty error box once.  All the other times
there was no feedback.

I've attached all of the log entries that resulted from these events.  However,
I'm not sure they are very helpful.

Hopefully the new error handling code will help.
Created attachment 26538
Partial log</WithStack>
    <WithOutStack>We had to have release engineering delete a revision (i.e. rollback).  Eclipse
had no idea what to do during synchronizes, compares, etc.  

I had to explicitly replace with an older version of the file in question after
several other attempts to clean-up my environment were greeted with no response
from Eclipse, including an empty error message alert box.

This can be reproduced by:
1) Get the latest version of a file in your workspace
2) Have the cvsadmin/release-engineer delete that revision (for example using RCS)
3) Attempt to synchronize that file within Eclipse.

Some of the interesting entries from the log were as follows:

!ENTRY org.eclipse.team.cvs.core 4 0 2005-08-25 14:38:40.177
!MESSAGE The server reported an error while performing the "cvs update" command.
!STACK 1
!SUBENTRY 1 org.eclipse.team.cvs.core 4 -10 2005-08-25 14:38:40.177
!MESSAGE The server reported an error while performing the "cvs update" command.
!SUBENTRY 2 org.eclipse.team.cvs.core 4 -14 2005-08-25 14:38:40.177
!MESSAGE cfg: cvs [server aborted]: could not find desired version 1.18 in
/cvsrep/cvsroot/OP/op/cfg/configFile.xml,v


!ENTRY org.eclipse.team.cvs.core 4 0 2005-08-25 12:02:24.891
!MESSAGE The server reported an error while performing the "cvs status" command.
!STACK 1

!SUBENTRY 1 org.eclipse.team.cvs.core 4 -10 2005-08-25 12:02:24.891
!MESSAGE The server reported an error while performing the "cvs status" command.
!SUBENTRY 2 org.eclipse.team.cvs.core 4 -14 2005-08-25 12:02:24.891
!MESSAGE : cvs server: failed to create lock directory for `/cvsrep/cvsroot/OP'
(/cvsrep/cvsroot/OP/#cvs.lock): Permission denied
!SUBENTRY 2 org.eclipse.team.cvs.core 4 -14 2005-08-25 12:02:24.891
!MESSAGE : cvs server: failed to obtain dir lock in repository `/cvsrep/cvsroot/OP'
!SUBENTRY 2 org.eclipse.team.cvs.core 4 -14 2005-08-25 12:02:24.891
!MESSAGE : cvs [server aborted]: read lock failed - giving up
I think it is reasonable to assume that if you are going to delete revisions 
from the server that all users will be required to check out the affected 
projects from scratch.
Created attachment 26537
Error indication due to deleted revision
That certainly is reasonable.  However, the error handling of such an event
leaves something to be desired.  See the attached screenshot.
Yes, I agree that asn't very graceful. I have made several error handling 
improvements in 3.2 that may have addressed this. The problem with this 
particular case is that an improvement in the error handling would not be all 
that helpful anyway so I'm not inclined to spend time trying to reproduce the 
scenario.
Actually, I tried it and was not able to reproduce the empty dialog you got 
(i.e. I always get an error message of some sort). What did you do in 
particular to get the empty dialog?
I wish I could give you more specifics, but the most specific I can get is that
I attempted several times to Synch/Compare/Replace immediately after the
revision was deleted.  Unfortunately, I can't recall the exact steps.

I was only lucky enough to get the empty error box once.  All the other times
there was no feedback.

I've attached all of the log entries that resulted from these events.  However,
I'm not sure they are very helpful.

Hopefully the new error handling code will help.
Created attachment 26538
Partial log</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108065" />
    <CreationDate amount="2005-08-25 18:16:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[typing] Copy Line (Ctrl+Alt+DownArrow) fails on last line of editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) Create new text file.</Line>
          <Line>2) Enter text: "Blah blah blah blah" (no newline)</Line>
          <Line>3) Press Ctrl+Alt+DownArrow (note UpArrow also fails)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The command "Copy Line" which is bound to Ctrl+Alt+DownArrow by default fails
when you're on the last line of a file/editor.

1) Create new text file.
2) Enter text: "Blah blah blah blah" (no newline)
3) Press Ctrl+Alt+DownArrow (note UpArrow also fails)

Nothing happens.  If you press enter after #2, and then try, it works. 
Ctrl+Alt+DownArrow should knoww to create a new line at the end of the buffer if
it's at the last line of the editor.

This effects the text editor, as well as the Java editor (and probably all
others based on the text editor.
Happens in I20050823-0800

Tom, I thought there's a bug for this but couldn't find it.
See also bug 73461.
When fixing this, we have to make sure to preserve the line endings properly.
I.e. if there is a last line without newline, the duplicated line inherits that
property (does not have a terminator).
Fixed in HEAD.
Available in builds &gt; N20060405-0010.</WithStack>
    <WithOutStack>The command "Copy Line" which is bound to Ctrl+Alt+DownArrow by default fails
when you're on the last line of a file/editor.

1) Create new text file.
2) Enter text: "Blah blah blah blah" (no newline)
3) Press Ctrl+Alt+DownArrow (note UpArrow also fails)

Nothing happens.  If you press enter after #2, and then try, it works. 
Ctrl+Alt+DownArrow should knoww to create a new line at the end of the buffer if
it's at the last line of the editor.

This effects the text editor, as well as the Java editor (and probably all
others based on the text editor.
Happens in I20050823-0800

Tom, I thought there's a bug for this but couldn't find it.
See also bug 73461.
When fixing this, we have to make sure to preserve the line endings properly.
I.e. if there is a last line without newline, the duplicated line inherits that
property (does not have a terminator).
Fixed in HEAD.
Available in builds &gt; N20060405-0010.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108066" />
    <CreationDate amount="2005-08-25 18:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[prefs] core.prefs settings file causing repeating version conflicts</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="functioncall">
        <location start="1417" end="1477" />
        <code>Platform.getPreferencesService().applyPreferences(myNode);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="5708" end="5787" />
        <code>//if the node existed before importing, it is marked dirty although unchanged</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="5787" end="5927" />
        <code>if(node.isDirty() &amp;&amp; comparePrefs(myNode, node)==0) {
    //reset dirty flag since prefs were not really modified
    node.setDirty(false)
}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="6040" end="6188" />
        <code>&gt; if(node.isDirty() &amp;&amp; comparePrefs(myNode, node)==0) {
&gt;     //reset dirty flag since prefs were not really modified
&gt;     node.setDirty(false)
&gt; }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="21">
        <Lines>
          <Line>1) Set a breakpoint at the beginning of the RefreshJob.runInWorkspace(...)</Line>
          <Line>2) Import a java-project with a file '.settings/org.eclipse.jdt.core.prefs'</Line>
          <Line>--&gt; The java indexer is notified about the new project and accesses the</Line>
          <Line>project preferences. The preference node is created, an attempt to load</Line>
          <Line>them from file is made, however the file does not yet exist, so the node</Line>
          <Line>remains to be empty.</Line>
          <Line />
          <Line>3) After that let the refresh job continue</Line>
          <Line>--&gt; When the file '.settings/org.eclipse.jdt.core.prefs' is refreshed, the</Line>
          <Line>existing empty project preference node is updated and marked as dirty.</Line>
          <Line>It is not yet flushed to disk at this point (because flag isLoading is set).</Line>
          <Line />
          <Line>Note: If the project preference node does not yet exist at this point,</Line>
          <Line>it is created and loaded and updated. Then the update does not</Line>
          <Line>actually change anything, so the node is not set dirty and we are</Line>
          <Line>fine)</Line>
          <Line />
          <Line>4) Any operation that flushes the preference tree now causes the dirty node</Line>
          <Line>to be flushed to disk. E.g. a preference import will trigger that.</Line>
          <Line>Created attachment 159920</Line>
          <Line>Clears the dirty flag after updating project prefs from file</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- delay "project open" notification until after project prefs have been</Line>
          <Line>initialized</Line>
          <Line>- Ensure that project prefs cannot be refreshed from disk while a client</Line>
          <Line>is editing them</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>At the top of the org.eclipse.jdt.core.prefs file in .settings, there is a line 
with a date stamp (#Thu Aug 18 15:28:50 BST 2005), which seems to get updated 
when no changes have been made to the settings.

We are using .settings extensively, and this is causing us problems, as we are 
ending up with conflicts, because this timestamp is getting updated when there 
are no changes to the actual content of the file, only to the timestamp.

Is the timestamp necessary, and if so, could it please be only updated on real 
changes to the file.
This bug is still really annoying me, and continues into the 3.1.1 build.

 Can you at least justify the existence of that date stamp?

If not, I suggest removing the date stamp.
JDT/Core preferences rely on Platform Resources preferences and so I do not know whether this time stamp is used or not.
I'm currently tracking whether it's JDT/Core or Platform Resources which is responsible of this unnecessary update...
DJ, if you have any hits on this subject please let me know, thx
I will check to ensure project prefs are behaving correctly w.r.t. isDirty and saving.
Seem to be a Platform preferences issue...

Not easy to reproduce. My scenario is to import in my workspace a project checked out in another workspace and not modified. Before, I put a breakpoint on last line of ProjectPreferences.read(ProjectPreferences node, IFile file).
For 3.2 M4 it's at line 394:
		Platform.getPreferencesService().applyPreferences(myNode);
When this bkpt is reached, toggle a watchpoint on EclipsePreferences.dirty field and you'll see while executing this last line that preferences are written although it should not...

I also verified all JDT/Core preferences possible update during this import and everything is clean (ie. no unnecessarily update is performed)

HTH
Thanks for the investigation Frederic.
*** Bug 143770 has been marked as a duplicate of this bug. ***
Glad to see this has been assigned.

There's another related scenario that has the same theme, that of XML config files (e.g. .project and .classpath) where the same information is output in a different order, therefore making it impossible to know what the change is that is being committed.

From a developers point of view, it's an annoyance in the same way as for .settings, as it looks like a change happened, but didn't, but makes changes difficult to spot.

Perhaps we need the "Compare files" to do so, not as text files, but as XML structure.
Created attachment 159764
Relevant stack-traces when reproducing the issue

The issue can be reproduced in the debugger (using 3.6M4):

1) Set a breakpoint at the beginning of the RefreshJob.runInWorkspace(...)
2) Import a java-project with a file '.settings/org.eclipse.jdt.core.prefs'
--&gt; The java indexer is notified about the new project and accesses the 
    project preferences. The preference node is created, an attempt to load
    them from file is made, however the file does not yet exist, so the node
    remains to be empty.

3) After that let the refresh job continue
--&gt; When the file '.settings/org.eclipse.jdt.core.prefs' is refreshed, the
    existing empty project preference node is updated and marked as dirty. 
    It is not yet flushed to disk at this point (because flag isLoading is set).

    Note: If the project preference node does not yet exist at this point,
          it is created and loaded and updated. Then the update does not 
          actually change anything, so the node is not set dirty and we are
          fine)

4) Any operation that flushes the preference tree now causes the dirty node
  to be flushed to disk. E.g. a preference import will trigger that.
Created attachment 159920
Clears the dirty flag after updating project prefs from file

The patch fixes the issue by clearing the dirty flag after applying the preferences as read from the file. 

The preference node may actually be modified through listeners at this point. Up to now, such changes were sometimes flushed to disk accidentially (when some other client flushed the entire preferece tree), but usually they were not persisted. 
With the patch such modifications will not be flushed, unless at a later point the node is further modified and flushed afterwards.
Is it also possible to suppress the date stamp in the preference file?  Most (all?) filesystems already have a modified time, so putting it in the prefs file seems overkill.
(In reply to comment #10)
&gt; Is it also possible to suppress the date stamp in the preference file?  Most
&gt; (all?) filesystems already have a modified time, so putting it in the prefs
&gt; file seems overkill.
That's a different issue and there is no trivial fix for that, the timestamp is written by java.util.Properties.store(..), which is used to persist the project preferences.
Also, note that with Markus' fix, the timestamp in the properties file will change much less frequently so I do not think that this will be an issue any more.

And I do see some value in the timestamp since when you unpersist the project out of an archive, CM Repository, ... the timestamp on disk may be different than when the properties file was actually written.
(In reply to comment #12)
Yep, point taken. 

Markus' fix will make a big difference to the project deltas we see when using Eclipse with CCRC.
Created attachment 159954
Patch with slightly updated comments

I slightly updated comments to reflect my understanding of what the patch does.

Markus: Would it make sense to compare the prefs-on-disk versus prefs-in-memory before resetting the dirty flag? I see that in the read() method, we already have the "original" prefs from file as well as the "merged/imported" ones, so this should be possible:

//if the node existed before importing, it is marked dirty although unchanged
if(node.isDirty() &amp;&amp; comparePrefs(myNode, node)==0) {
    //reset dirty flag since prefs were not really modified
    node.setDirty(false)
}
(In reply to comment #14)
&gt; ...
&gt; //if the node existed before importing, it is marked dirty although unchanged
&gt; if(node.isDirty() &amp;&amp; comparePrefs(myNode, node)==0) {
&gt;     //reset dirty flag since prefs were not really modified
&gt;     node.setDirty(false)
&gt; }

I think the intended behavior is not to flush such changes. 
(The initial modifications to the preferences via a PreferenceModifyListener will be done every time the project is opened. So there is no actual need to
flush them.)

Even if you leave the dirty-flag set, the flushing will be suppressed. It's only done sometimes by accident. For example when you use the import wizard to import some workspace preferences this will as a side effect flush all dirty project preferences.
I have committed the fix to HEAD (all AutomatedTests pass).

The important thing to understand here is that this fix does not protect us from race conditions, but it does make the effect of race conditions deterministic.

If a client is in the middle of updating project prefs when a refresh monitor forces re-loading preferences from disk, we get a version conflict which we cannot resolve: the content from disk overrides the content in memory, both before the fix and after. Before the fix, the preference node remained dirty thus indicating ("needs saving") and it was purely random who would ever perform a save on the next preference flush.

With the fix, after loading content from file, the in-memory representation correctly specifies the prefs node as unchanged compared to the disk, so no flush is needed, so we get the deterministic behavior of "file system is always king" and avoid the scenario where an unflushed prefs node remains hanging around forever.

So the fix definitely improves the situation, especially in the case of listeners modifying project prefs too early after project open, when prefs are not yet correctly initialized. In order to avoid race conditions, some more work would be needed elsewhere:
  - delay "project open" notification until after project prefs have been
    initialized
  - Ensure that project prefs cannot be refreshed from disk while a client 
    is editing them

I think that the 2nd case is mostly ensured today already, by flushing modified prefs immediately. In case the resource is out of sync while flushing, the flush runs into an error, so users are aware of potential problems.

Thanks Markus for all the investigations, this was a great bug to fix.</WithStack>
    <WithOutStack>At the top of the org.eclipse.jdt.core.prefs file in .settings, there is a line 
with a date stamp (#Thu Aug 18 15:28:50 BST 2005), which seems to get updated 
when no changes have been made to the settings.

We are using .settings extensively, and this is causing us problems, as we are 
ending up with conflicts, because this timestamp is getting updated when there 
are no changes to the actual content of the file, only to the timestamp.

Is the timestamp necessary, and if so, could it please be only updated on real 
changes to the file.
This bug is still really annoying me, and continues into the 3.1.1 build.

 Can you at least justify the existence of that date stamp?

If not, I suggest removing the date stamp.
JDT/Core preferences rely on Platform Resources preferences and so I do not know whether this time stamp is used or not.
I'm currently tracking whether it's JDT/Core or Platform Resources which is responsible of this unnecessary update...
DJ, if you have any hits on this subject please let me know, thx
I will check to ensure project prefs are behaving correctly w.r.t. isDirty and saving.
Seem to be a Platform preferences issue...

Not easy to reproduce. My scenario is to import in my workspace a project checked out in another workspace and not modified. Before, I put a breakpoint on last line of ProjectPreferences.read(ProjectPreferences node, IFile file).
For 3.2 M4 it's at line 394:
		Platform.getPreferencesService().applyPreferences(myNode);
When this bkpt is reached, toggle a watchpoint on EclipsePreferences.dirty field and you'll see while executing this last line that preferences are written although it should not...

I also verified all JDT/Core preferences possible update during this import and everything is clean (ie. no unnecessarily update is performed)

HTH
Thanks for the investigation Frederic.
*** Bug 143770 has been marked as a duplicate of this bug. ***
Glad to see this has been assigned.

There's another related scenario that has the same theme, that of XML config files (e.g. .project and .classpath) where the same information is output in a different order, therefore making it impossible to know what the change is that is being committed.

From a developers point of view, it's an annoyance in the same way as for .settings, as it looks like a change happened, but didn't, but makes changes difficult to spot.

Perhaps we need the "Compare files" to do so, not as text files, but as XML structure.
Created attachment 159764
Relevant stack-traces when reproducing the issue

The issue can be reproduced in the debugger (using 3.6M4):

1) Set a breakpoint at the beginning of the RefreshJob.runInWorkspace(...)
2) Import a java-project with a file '.settings/org.eclipse.jdt.core.prefs'
--&gt; The java indexer is notified about the new project and accesses the 
    project preferences. The preference node is created, an attempt to load
    them from file is made, however the file does not yet exist, so the node
    remains to be empty.

3) After that let the refresh job continue
--&gt; When the file '.settings/org.eclipse.jdt.core.prefs' is refreshed, the
    existing empty project preference node is updated and marked as dirty. 
    It is not yet flushed to disk at this point (because flag isLoading is set).

    Note: If the project preference node does not yet exist at this point,
          it is created and loaded and updated. Then the update does not 
          actually change anything, so the node is not set dirty and we are
          fine)

4) Any operation that flushes the preference tree now causes the dirty node
  to be flushed to disk. E.g. a preference import will trigger that.
Created attachment 159920
Clears the dirty flag after updating project prefs from file

The patch fixes the issue by clearing the dirty flag after applying the preferences as read from the file. 

The preference node may actually be modified through listeners at this point. Up to now, such changes were sometimes flushed to disk accidentially (when some other client flushed the entire preferece tree), but usually they were not persisted. 
With the patch such modifications will not be flushed, unless at a later point the node is further modified and flushed afterwards.
Is it also possible to suppress the date stamp in the preference file?  Most (all?) filesystems already have a modified time, so putting it in the prefs file seems overkill.
(In reply to comment #10)
&gt; Is it also possible to suppress the date stamp in the preference file?  Most
&gt; (all?) filesystems already have a modified time, so putting it in the prefs
&gt; file seems overkill.
That's a different issue and there is no trivial fix for that, the timestamp is written by java.util.Properties.store(..), which is used to persist the project preferences.
Also, note that with Markus' fix, the timestamp in the properties file will change much less frequently so I do not think that this will be an issue any more.

And I do see some value in the timestamp since when you unpersist the project out of an archive, CM Repository, ... the timestamp on disk may be different than when the properties file was actually written.
(In reply to comment #12)
Yep, point taken. 

Markus' fix will make a big difference to the project deltas we see when using Eclipse with CCRC.
Created attachment 159954
Patch with slightly updated comments

I slightly updated comments to reflect my understanding of what the patch does.

Markus: Would it make sense to compare the prefs-on-disk versus prefs-in-memory before resetting the dirty flag? I see that in the read() method, we already have the "original" prefs from file as well as the "merged/imported" ones, so this should be possible:

//if the node existed before importing, it is marked dirty although unchanged
if(node.isDirty() &amp;&amp; comparePrefs(myNode, node)==0) {
    //reset dirty flag since prefs were not really modified
    node.setDirty(false)
}
(In reply to comment #14)
&gt; ...
&gt; //if the node existed before importing, it is marked dirty although unchanged
&gt; if(node.isDirty() &amp;&amp; comparePrefs(myNode, node)==0) {
&gt;     //reset dirty flag since prefs were not really modified
&gt;     node.setDirty(false)
&gt; }

I think the intended behavior is not to flush such changes. 
(The initial modifications to the preferences via a PreferenceModifyListener will be done every time the project is opened. So there is no actual need to
flush them.)

Even if you leave the dirty-flag set, the flushing will be suppressed. It's only done sometimes by accident. For example when you use the import wizard to import some workspace preferences this will as a side effect flush all dirty project preferences.
I have committed the fix to HEAD (all AutomatedTests pass).

The important thing to understand here is that this fix does not protect us from race conditions, but it does make the effect of race conditions deterministic.

If a client is in the middle of updating project prefs when a refresh monitor forces re-loading preferences from disk, we get a version conflict which we cannot resolve: the content from disk overrides the content in memory, both before the fix and after. Before the fix, the preference node remained dirty thus indicating ("needs saving") and it was purely random who would ever perform a save on the next preference flush.

With the fix, after loading content from file, the in-memory representation correctly specifies the prefs node as unchanged compared to the disk, so no flush is needed, so we get the deterministic behavior of "file system is always king" and avoid the scenario where an unflushed prefs node remains hanging around forever.

So the fix definitely improves the situation, especially in the case of listeners modifying project prefs too early after project open, when prefs are not yet correctly initialized. In order to avoid race conditions, some more work would be needed elsewhere:
  - delay "project open" notification until after project prefs have been
    initialized
  - Ensure that project prefs cannot be refreshed from disk while a client 
    is editing them

I think that the 2nd case is mostly ensured today already, by flushing modified prefs immediately. In case the resource is out of sync while flushing, the flush runs into an error, so users are aware of potential problems.

Thanks Markus for all the investigations, this was a great bug to fix.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108067" />
    <CreationDate amount="2005-08-25 18:57:00 -0400" />
    <DupId amount="339777" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Bugzilla" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[context] when activating a new report automatically populate context with stack</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>This can be a generic "initialContext" mechanism which Bugzilla extends to populate
with the top elements of a stack trace if contained in the report.
Mik, is there are plans to implement this?
I've been finding it easy enough to do by clicking a few stack trace links.  But  if a bug report contained a stack, e.g. one that was automatically submitted by Jeff's new feature, we could take the top n items to pre-populate the context?  That would definitely save a few clicks and provide some nice automation.
This is now tracked on bug 339777.

*** This bug has been marked as a duplicate of bug 339777 ***</WithStack>
    <WithOutStack>This can be a generic "initialContext" mechanism which Bugzilla extends to populate
with the top elements of a stack trace if contained in the report.
Mik, is there are plans to implement this?
I've been finding it easy enough to do by clicking a few stack trace links.  But  if a bug report contained a stack, e.g. one that was automatically submitted by Jeff's new feature, we could take the top n items to pre-populate the context?  That would definitely save a few clicks and provide some nice automation.
This is now tracked on bug 339777.

*** This bug has been marked as a duplicate of bug 339777 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108068" />
    <CreationDate amount="2005-08-25 19:04:00 -0400" />
    <DupId amount="108063" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Core" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>update active search based on resource changes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Sometimes searches have to run when landmarks have not changed.


*** This bug has been marked as a duplicate of 108063 ***</WithStack>
    <WithOutStack>Sometimes searches have to run when landmarks have not changed.


*** This bug has been marked as a duplicate of 108063 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108069" />
    <CreationDate amount="2005-08-25 19:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>OutOfMemory occurred when working with a bigger project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437330571370">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:327)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:447)</Frame>
          <Frame depth="2">org.eclipse.cdt.internal.ui.search.actions.OpenDeclarationsAction.run(OpenDeclarationsAction.java:218)</Frame>
          <Frame depth="3">org.eclipse.cdt.internal.ui.editor.CElementHyperlink.open(CElementHyperlink.java:55)</Frame>
          <Frame depth="4">org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseUp(HyperlinkManager.java:388)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:137)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="13">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="15">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="16">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="17">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="25">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437330571370">
        <Exception>java.lang.OutOfMemoryError</Exception>
        <Reason>!ENTRY org.eclipse.cdt.ui 4 4 2005-08-23 21:34:41.859
!MESSAGE Error
!STACK 0
java.lang.reflect.InvocationTargetException</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:327)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:447)</Frame>
          <Frame depth="2">org.eclipse.cdt.internal.ui.search.actions.OpenDeclarationsAction.run(OpenDeclarationsAction.java:218)</Frame>
          <Frame depth="3">org.eclipse.cdt.internal.ui.editor.CElementHyperlink.open(CElementHyperlink.java:55)</Frame>
          <Frame depth="4">org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseUp(HyperlinkManager.java:388)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:137)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="13">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="15">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="16">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="17">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="25">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>After the switch to version 3.0 working with a bigger project (cryptopp) caused
OutOfMemory exceptions. Log file is attached.

Environment: Windows XP Professional SP2
GCC        : Mingw 4.1.0
Shell      : MSys 1.0.10

Problem occurred although 2 different settings were used: -Xmx384M and 512M
Eclipse was below 100MB when issue arised.

Log entry is:

!ENTRY org.eclipse.cdt.ui 4 4 2005-08-23 21:34:25.62
!MESSAGE Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:327)
	at
org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:447)
	at
org.eclipse.cdt.internal.ui.search.actions.OpenDeclarationsAction.run(OpenDeclarationsAction.java:218)
	at
org.eclipse.cdt.internal.ui.editor.CElementHyperlink.open(CElementHyperlink.java:55)
	at
org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseUp(HyperlinkManager.java:388)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:137)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)
Caused by: java.lang.OutOfMemoryError
Root exception:
java.lang.OutOfMemoryError

!ENTRY org.eclipse.cdt.ui 4 4 2005-08-23 21:34:41.859
!MESSAGE Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:327)
	at
org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:447)
	at
org.eclipse.cdt.internal.ui.search.actions.OpenDeclarationsAction.run(OpenDeclarationsAction.java:218)
	at
org.eclipse.cdt.internal.ui.editor.CElementHyperlink.open(CElementHyperlink.java:55)
	at
org.eclipse.jface.text.hyperlink.HyperlinkManager.mouseUp(HyperlinkManager.java:388)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:137)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)
Caused by: java.lang.OutOfMemoryError
Root exception:
java.lang.OutOfMemoryError
The stack says that it dies while you were trying to run an Open Declarations 
operation.  Reassigning to core.
Open Declaration no longer creates a full AST. You should be fine now.</WithStack>
    <WithOutStack>After the switch to version 3.0 working with a bigger project (cryptopp) caused
OutOfMemory exceptions. Log file is attached.

Environment: Windows XP Professional SP2
GCC        : Mingw 4.1.0
Shell      : MSys 1.0.10

Problem occurred although 2 different settings were used: -Xmx384M and 512M
Eclipse was below 100MB when issue arised.

Log entry is:

!ENTRY org.eclipse.cdt.ui 4 4 2005-08-23 21:34:25.62
!MESSAGE Error
!STACK 0
Caused by: java.lang.OutOfMemoryError
Root exception:
Caused by: java.lang.OutOfMemoryError
Root exception:
java.lang.OutOfMemoryError
The stack says that it dies while you were trying to run an Open Declarations 
operation.  Reassigning to core.
Open Declaration no longer creates a full AST. You should be fine now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108070" />
    <CreationDate amount="2005-08-25 19:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="APT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Disallow setting the generated source to be an existing source directory</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="ifstatement">
        <location start="1376" end="1693" />
        <code>if (fJProj != null &amp;&amp; !dirName.equals(fOriginalGenSrcDir)) {
    IFolder folder = fJProj.getProject().getFolder( dirName );
    if (folder != null &amp;&amp; folder.exists() &amp;&amp; !folder.isDerived()) {
      return new StatusInfo(IStatus.WARNING, 
        "Contents of generated source directory will be deleted.");
    }
  }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="5">
        <Lines>
          <Line>a. Ignore the problem.</Line>
          <Line>b. Disallow setting the gen src folder to an existing non-derived folder.</Line>
          <Line>c. Like (b), but just warn, rather than disallowing.</Line>
          <Line>d. Change the behavior in step 3, above, to only delete derived resources.  (Slightly harder than it sounds due to the need to do it inside a scheduled job, but not impossible.)</Line>
          <Line>e. Both (c) and (d).</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>1. When we create the folder, we set it (and any parent folders that we also have to create) to "derived".</Line>
          <Line>2. During project clean, we delete all derived files under the gen src folder.</Line>
          <Line>3. When the user changes the gen src folder name, we delete the old folder, regardless of whether or not the folder is derived.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you set up your generated source directory to be an already-existing source
directory, we will remove everything inside that directory.

Need to prevent this, or at the very least offer a very stern warning in the UI.
Theodora, I think that now that we set and use the isDerived bit this should no 
longer be a problem?  If I should still be putting a warning in the config UI, 
telling people not to set to an existing directory, just reassign this to me.  
If it is really not a problem any more, then resolve as fixed.
At present, the behavior is:

  1. When we create the folder, we set it (and any parent folders that we also have to create) to "derived".
  2. During project clean, we delete all derived files under the gen src folder.
  3. When the user changes the gen src folder name, we delete the old folder, regardless of whether or not the folder is derived.

I am wondering whether the right thing to do is:

  a. Ignore the problem.
  b. Disallow setting the gen src folder to an existing non-derived folder.
  c. Like (b), but just warn, rather than disallowing.
  d. Change the behavior in step 3, above, to only delete derived resources.  (Slightly harder than it sounds due to the need to do it inside a scheduled job, but not impossible.)
  e. Both (c) and (d).

Code to implement (c) looks like this, within AptConfigurationBlock.validateGenSrcDir():

  if (fJProj != null &amp;&amp; !dirName.equals(fOriginalGenSrcDir)) {
    IFolder folder = fJProj.getProject().getFolder( dirName );
    if (folder != null &amp;&amp; folder.exists() &amp;&amp; !folder.isDerived()) {
      return new StatusInfo(IStatus.WARNING, 
        "Contents of generated source directory will be deleted.");
    }
  }

Fixed in 3.1.1; needs to be merged to 3.2.  We now warn in the GUI when the user attempts to set the GSF to an existing, non-derived directory; and when cleaning or deleting, we only delete derived contents and folders that contain only derived contents.  When changing the GSF, we remove the previous one from the classpath only if it was derived (but we do not pay any attention to whether it had non-derived contents).
I believe this has been merged into 3.2 already. Walter, if that's not the case, could you please reopen?</WithStack>
    <WithOutStack>If you set up your generated source directory to be an already-existing source
directory, we will remove everything inside that directory.

Need to prevent this, or at the very least offer a very stern warning in the UI.
Theodora, I think that now that we set and use the isDerived bit this should no 
longer be a problem?  If I should still be putting a warning in the config UI, 
telling people not to set to an existing directory, just reassign this to me.  
If it is really not a problem any more, then resolve as fixed.
At present, the behavior is:

  1. When we create the folder, we set it (and any parent folders that we also have to create) to "derived".
  2. During project clean, we delete all derived files under the gen src folder.
  3. When the user changes the gen src folder name, we delete the old folder, regardless of whether or not the folder is derived.

I am wondering whether the right thing to do is:

  a. Ignore the problem.
  b. Disallow setting the gen src folder to an existing non-derived folder.
  c. Like (b), but just warn, rather than disallowing.
  d. Change the behavior in step 3, above, to only delete derived resources.  (Slightly harder than it sounds due to the need to do it inside a scheduled job, but not impossible.)
  e. Both (c) and (d).

Code to implement (c) looks like this, within AptConfigurationBlock.validateGenSrcDir():

  if (fJProj != null &amp;&amp; !dirName.equals(fOriginalGenSrcDir)) {
    IFolder folder = fJProj.getProject().getFolder( dirName );
    if (folder != null &amp;&amp; folder.exists() &amp;&amp; !folder.isDerived()) {
      return new StatusInfo(IStatus.WARNING, 
        "Contents of generated source directory will be deleted.");
    }
  }

Fixed in 3.1.1; needs to be merged to 3.2.  We now warn in the GUI when the user attempts to set the GSF to an existing, non-derived directory; and when cleaning or deleting, we only delete derived contents and folders that contain only derived contents.  When changing the GSF, we remove the previous one from the classpath only if it was derived (but we do not pay any attention to whether it had non-derived contents).
I believe this has been merged into 3.2 already. Walter, if that's not the case, could you please reopen?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108071" />
    <CreationDate amount="2005-08-25 22:11:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[code templates] template for body of newly created class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="25">
      <source_code type="class">
        <location start="309" end="397" />
        <code>public class Blee { 
// constants 

// member variables 

// constructors 

// etc... 
}</code>
      </source_code>
      <source_code type="class">
        <location start="420" end="443" />
        <code>public class Blee { 

}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="445" end="459" />
        <code>// constants</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="459" end="481" />
        <code>// member variables</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="481" end="499" />
        <code>// constructors</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="499" end="511" />
        <code>// etc...</code>
      </source_code>
      <source_code type="class">
        <location start="559" end="581" />
        <code>public class Blee { 
}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="586" end="600" />
        <code>// constants</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="600" end="622" />
        <code>// member variables</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="622" end="640" />
        <code>// constructors</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="640" end="652" />
        <code>// etc...</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="842" end="854" />
        <code>// comment</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="923" end="935" />
        <code>// comment</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="3013" end="3048" />
        <code>// the template class comments...</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="3137" end="3210" />
        <code>// some squirrelly thing here, perhaps a comment or future metadata tag</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="3213" end="3248" />
        <code>// the template class comments...</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="3812" end="3845" />
        <code>// xp3911{unintelligible-junk}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="5372" end="5387" />
        <code>// A comment</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="16955" end="16972" />
        <code>// constants</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="16972" end="16999" />
        <code>// instance variables</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="16999" end="17020" />
        <code>// constructors</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="17051" end="17077" />
        <code>// inherited methods</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="17111" end="17131" />
        <code>// main method</code>
      </source_code>
      <source_code type="class">
        <location start="20244" end="20302" />
        <code>(${superclass_constructors}, ${inherited_abstract_methods}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="24554" end="24599" />
        <code>Signature.getQualifier(cu.getElementName()));</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="43">
        <Lines>
          <Line>1.) Create a new template variable that doesn't hard-insert brackets and</Line>
          <Line>allows users to insert their own brackets where they choose in their template.</Line>
          <Line>This is my preferred solution for a couple of reasons. First, it is an</Line>
          <Line>addition, so it doesn't affect the current user behavior by design, and so is</Line>
          <Line>safe from causing regressions based on assumptions of current usage. (Of</Line>
          <Line>course, I understand it may cause regressions based on implementation, but I</Line>
          <Line>pledge to handle those.) Second, it gives the user the ultimate flexibility in</Line>
          <Line>controlling exactly what appears after the type declaration before the opening</Line>
          <Line>class brackets, what appears between the class brackets, and what appears</Line>
          <Line>after the class brackets. It would go something like this:</Line>
          <Line />
          <Line>${type_declaration_no_brackets}</Line>
          <Line>{</Line>
          <Line>}</Line>
          <Line />
          <Line>and could accomodate something as bizarre as this:</Line>
          <Line>${type_declaration_no_brackets}</Line>
          <Line>{</Line>
          <Line>}// some other squirrelly thing, like a tool-specific embedded comment</Line>
          <Line />
          <Line>2.) Change the behavior so the new type wizard detects if the user has</Line>
          <Line>inserted brackets in the template, and if so, uses these brackets instead of</Line>
          <Line>hard-inserting their own. This saves creating a new template variable, and</Line>
          <Line>seems like a sophisticated solution, but has a couple of strange corner cases.</Line>
          <Line>These involve things like putting brackets in a comment that is intended to go</Line>
          <Line>after the class, like an embedded comment that some tool would want in the</Line>
          <Line>code:</Line>
          <Line />
          <Line>${type_declaration}</Line>
          <Line />
          <Line>The code would have to be smart enough to parse comments and not include</Line>
          <Line>brackets in comments in its detection. Generally, this solution isn't as safe</Line>
          <Line>as the first because it changes the behavior of the current</Line>
          <Line>${type_declaration} template variable and may violate some oddball user</Line>
          <Line>assumption somewhere.</Line>
          <Line />
          <Line>3.) Change the behavior so the new type wizard considers everything below the</Line>
          <Line>${type_declaration} template variable to be embedded in the class rather than</Line>
          <Line>below it. This was the first solution I thought of, but I like it the least</Line>
          <Line>because it changes the default behavior of the current ${type_declaration}</Line>
          <Line>template variable the most severely, and doesn't have the flexibility to</Line>
          <Line>accomodate the squirrelly comments the first solution can handle. Blech.</Line>
          <Line>Included here just for purposes of discussion.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- Introduced template id constants in CodeGeneration (CodeTemplateContextType is</Line>
          <Line>not API)</Line>
          <Line>- label description changes</Line>
          <Line>- used lineDelimiter instead on '/n', added NPE check after getting the template</Line>
          <Line>(as spec'ed)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Problem: 
Users can't put comments in a Java class template that are to be embedded 
inside the class (between the class brackets), so every new class starts with 
the comments in the right place without requiring the user to edit each class 
by hand after it's generated. 

e.g. I want something like this: 
public class Blee { 
// constants 

// member variables 

// constructors 

// etc... 
} 

...but I get this: 
public class Blee { 

} 
// constants 

// member variables 

// constructors 

// etc... 

..or if I put in my own brackets, I get this: 
public class Blee { 
} 
{ 
// constants 

// member variables 

// constructors 

// etc... 
} 

Steps to reproduce: 
Open Window-&gt;Preferences-&gt;Java-&gt;Code Style-&gt;Code Templates-&gt;Code-&gt;New Java 
Files 
Edit the "Pattern:" window to include something like this: 

${type_declaration} 
// comment 

..to get the first result above, or this: 

${type_declaration} 
{ 
// comment 
} 

..to get the second result above. 

The Pitch 
This is a convenience I've been using for 10 years before I used eclipse. You 
start with the same file template and fill in what you need, so you always 
know the basic order of items in every class, and don't have to keep typing in 
the section headers yourself. Having all files organized the same way with 
section headers is a best practice that many well-respected developers 
recommend. Here are some references. They all present their schemes for 
ordering functions within a file or within a class (as the language warrants) 
and their recommended commenting formats. 

J2EE Design and Development - Rod Johnson p.144-5 "Delimit sections of code." 
Code Complete - Steve McConnell p.449 "..order the source file carefully." 
C Style: Standards and Guildelines - David Straker p.125 "Sort functions by a 
standard scheme..." 

OK, so it's a relatively small thing, but it bugs me enough I'm willing to fix 
it myself and contribute the change. All I need is somebody to review the 
change and give me some advice on logistics (e.g. do you need a CVS changelist 
or can I e-mail source files, what tests should I run/fix up etc...) and to 
help choose a preferred solution from the alternatives. 

Proposed Solution Alternatives: 
1.) Create a new template variable that doesn't hard-insert brackets and 
allows users to insert their own brackets where they choose in their template. 
This is my preferred solution for a couple of reasons. First, it is an 
addition, so it doesn't affect the current user behavior by design, and so is 
safe from causing regressions based on assumptions of current usage. (Of 
course, I understand it may cause regressions based on implementation, but I 
pledge to handle those.) Second, it gives the user the ultimate flexibility in 
controlling exactly what appears after the type declaration before the opening 
class brackets, what appears between the class brackets, and what appears 
after the class brackets. It would go something like this: 

${type_declaration_no_brackets} 
{ 
// the template class comments... 
} 

and could accomodate something as bizarre as this: 
${type_declaration_no_brackets} 
// some squirrelly thing here, perhaps a comment or future metadata tag 
{ 
// the template class comments... 
}// some other squirrelly thing, like a tool-specific embedded comment 

2.) Change the behavior so the new type wizard detects if the user has 
inserted brackets in the template, and if so, uses these brackets instead of 
hard-inserting their own. This saves creating a new template variable, and 
seems like a sophisticated solution, but has a couple of strange corner cases. 
These involve things like putting brackets in a comment that is intended to go 
after the class, like an embedded comment that some tool would want in the 
code: 

${type_declaration} 

// xp3911{unintelligible-junk} 

The code would have to be smart enough to parse comments and not include 
brackets in comments in its detection. Generally, this solution isn't as safe 
as the first because it changes the behavior of the current 
${type_declaration} template variable and may violate some oddball user 
assumption somewhere. 

3.) Change the behavior so the new type wizard considers everything below the 
${type_declaration} template variable to be embedded in the class rather than 
below it. This was the first solution I thought of, but I like it the least 
because it changes the default behavior of the current ${type_declaration} 
template variable the most severely, and doesn't have the flexibility to 
accomodate the squirrelly comments the first solution can handle. Blech. 
Included here just for purposes of discussion. 

So whaddya say guys? Will you accept one of these solutions (or a variation as 
we agree) if I implement it right? Isn't this what the spirit of eclipse is 
all about?
John, 

I really encourage you to investigate further in this topic and try to provide a
patch for it that can be included into Eclipse.

I favour solution one. The only porblem I see with it is that
${type_declaration} can represent a type containing more than just an empty
body. For example if you check any of the "Generate method stubs" options on the
wizard how will this go together with the type body you are providing. So you
need more than just one variable. The templete has to look more like this:

{$ype_declaration_header} {
  // A comment
  {$main_method}
}

So we need variable for the main method, constructor and abstract inherited
methods as well.

The "procedure" for getting code into Eclipse is as follows:

- the code should be provided as a patch against a reasonable "latest" version
  of the Eclipse code (e.g. against the latest integration build). The code
  can be found in the Eclipse CVS repository. The project you are looking for
  is org.eclipse.jdt.ui (some basic steps how to get the source can be found at
  the end of 
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/jdt-ui-home/r3_2/main.html#Overall_Planning)
  
- you have to provide test cases as well. The tests has to go into 
  org.eclipse.jdt.ui.tests

- all code patches have to be provided as attachments to bug reports. We can
  use this bug report for this

I am not the expert for code templates and Martin (the expert) is currently out
of office. But as a starting point you might want to have a look at the class
StubUtility which is the facade for all template based code generation.
Dirk, 

Thanks for your reply, and I appreciate the encouragement. 

I studied the source for a few sessions and thought about your ideas of other 
template variables to show the location of generated methods. That makes 
things harder to implement, but it will definitely make a better user 
experience. The way I had originally thought of it (and the way I still want 
to implement it as a first iteration before I take on the additional 
complexity) would have the comments generated in the right place inside the 
class, but all the stub methods would just be generated at their default 
location, which I'm assuming (hoping) is at the top of the method. Then, for a 
second iteration, I'd add the template variables to indicate where the 
different types of generated stub methods should go, and allow them to be 
interspersed with the comments.

After considering your suggestions and my original ideas for a while, I became 
more uneasy about the user experience if we allow alternate versions of the 
template variables (${type_declaration}  and ${type_declaration_header}) and 
then offer other template variables that the user has to be aware are coupled 
with only the ${type_declaration_header} version, and further require the user 
to understand they have to manually place their class brackets. It just sounds 
like there are a lot of failure cases and a lot of potential user confusion.

What I came up with after some headscratching is a new suggestion. Instead of 
offering an alternate ${type_declaration} version, why not have 
${type_declaration} insert a user-definable "sub"-template like ${filecomment} 
and ${typecomment} currently do? That way, the template variables available 
for showing where the generated method stubs go in the class can be offered 
only in the ${type_declaration} editing context, and we no longer have to 
worry about the users understanding how they are coupled. Along with that, the 
code behind the type stub generation can put in some protective default 
behavior if the user forgets to add one or both brackets (default placement is 
right after the class declaration header for the open bracket, and at the 
bottom off the template for the close bracket). Finally, the default 
definition of the "sub"-template can be set to the current behavior, taking 
care of any backward-compatibility user expectations. 

In addition, this leaves open the future possibility of allowing users to 
define different templates for the different types: interfaces, classes, 
annotations, enums.

Let me know if this sounds like a plan, or if anyone over there has any 
further suggestions, and I'll get started.

As far as process, I will get a CVS download set up. Up until now, I have been 
downloading the source from your download site, but that was just to do some 
preliminary surfing. I like to do test-driven development, so I'll try to get 
some bare-bones test cases written first. That way, I can work through the 
logistics of building and running the tests before I get very far. Or perhaps 
I'll just try to mimic the current behavior with the new user-definable class 
template variable, so the current test cases will run.
John,

something we have to keep in mind is the fact that the current "New Java File"
template is API. Clients can create a new CU using the CodeGeneration API class
which basically forwards to StubUtility. We have to make sure that current
clients will not get broken by "reusing" the current ${type_declaration}
variable. So before going down that path we need to investigate what your
approach means regarding API and backwards compatibility. 

I still tend to introduce a new variable (it avoids all the API and
compatibility issues). What we can do is adding a new varaible ${type_content}
which is a sub variable like you suggested.
Dirk -

OK, I can set it up as a new variable: ${type_content}.

I am still concerned about the user experience with both the 
${type_declaration} and the ${type_content} variables available. It seems it 
is asking for confusion along the lines of "I changed the definition in 
${type_content} but the new generated class still didn't change..." because 
they were using ${type_declaration} and didn't notice the difference. I assume 
it will be easy enough to change if I get it working this way, and it looks 
like the API and regression tests can still work with the re-implementation. 
It seems to me it will be dependent on how we integrate the new changes, but 
since I haven't done it yet, I can't prove it one way or the other. 

Got CVS set up, and I'll try to run the original tests next.

Dirk &amp; Martin,

I have studied the code in NewTypeWizardPage, CodeGeneration, StubUtility, and 
the 2 other references to the CodeGeneration.getCompilationUnitContent API in 
the jdt package (in AccessorClassCreator and MoveInnerToTopRefactoring). 

The bad news is I can't see any way to do this enhancement without changing 
the getCompilationUnitContent API. 

The biggest reason is that StubUtility.getCompilationUnitContent is 
responsible for evaluating templates and resolving the template variables. 
With this change, I will have to shift the responsibility for inserting the 
content of a new type and its stub methods from their current hard-coded 
treatment in NewTypeWizardPage down into StubUtility, so I will have to pass 
more information (for new template variables) into 
StubUtility.getCompilationUnitContent to allow it to resolve all the template 
variables at once. 

A secondary reason is that the client interaction with 
StubUtility.getCompilationUnitContent is currently tightly coupled with its 
clients. All clients currently are calling getLineDelimiterUsed from 
StubUtility directly, and usually making separate calls to getTypeComment and 
getFileComment and passing the results back to the call to 
CodeGeneration.getCompilationUnitContent. In addition, two of the clients have 
essentially repeated fail-safe code after the call to 
getCompilationUnitContent returns. (These are NewTypeWizard.constructCUContent 
and MoveInnerToTopRefactoring.createSourceForNewCu.) Basically, the 
interaction between the clients and the getCompilationUnitContent method could 
be made a lot cleaner and cries out to be refactored. 

I doubt if it is even possible to keep the current version of the API around 
as a facade that calls the new routine in the background, because I predict I 
will run into some unreconcilable failure cases and strange user experience 
when the user uses new templates and the old code doesn't allow the data to be 
passed in to fill them. The same goes for creating new parallel code and 
leaving the old code intact, which has the added problem of creating a duel 
maintenance problem. I would much rather clean up the current code for all 
concerned and for any future enhancements as well. 

So, what I'm willing to do to fix all of this is: 
Add additional tests to cover the new functionality and combinations. 
Alter any existing tests as needed to pass with the new API. 
Fix the getCompilationUnitContent API to be more flexible and to require less 
coupling between its clients and itself. 
Refactor the current clients to use the new API and clean up repeated code 
made unnecessary by the change. 

As far as the exact form the new API will take, let me prototype a few 
possibilities, and then come back with a suggestion or some choices. 

So let me know what you think. I know this isn't what you wanted to hear, but 
if you approve me doing this, I have a way forward and can get this done 
without too much trouble. (In other words, it's a tractable/straighforward 
problem as long as you accept the constraint that the API has to change.)

- John
Hi John,
I would favor a new code template 'type body' that will be used for the variable
${type_declaration} in the new file template (I don't see why a new variable
would have to be introduced, Dirk?).

CodeGeneration.getCompilationUnitContent can stay the same. The type content
that is passed to it should be generated using the new type body template. A new
API getTypeBodyContent() would be added for that, and it should get all
information that it requires (type delaration header, type name, cu name...)

When creating a new type, the type wizard would first construct the new cu using
these templates and on that insert the all methods to be created. I don't see
how you could solve that with variables for all created methods (e.g.
${main_method}}. We can't know what kind of methods will be created by clients.

One problem is that all client of 
CodeGeneration.getCompilationUnitContent will have to be updated, there will
always be clients that aren't. 

An other probelm is that i'm not sure if you really will get what you want. New
methods will probably be entered at the very beginning, and can't understand
your comments in the body. This will be also the case for all other new members
that will be added programatically. 







The discussed changes will also fix the common template complaint of wanting 
to add default members for logging and versioning.
Martin,

Thanks for your ideas. Here are my responses.

I don't want to put words in Dirk's mouth, so jump Dirk in if I get this 
wrong, but I think he wanted me to be conservative about changing the current 
behavior of the ${type_declaration} variable so it wouldn't break any current 
tests or invalidate any current client uses.

I was planning to default the new template so it implemented the current hard-
coded behavior out of the box, and so would pass all the tests. Since I 
haven't yet proven I can do that successfully, I can understand Dirk wanting 
to be cautious about it. I have always hoped I could prove it though, so I 
don't have to enter a new template variable, because it would mean two 
template variables that do the same thing, one hard-coded, one user-
configurable, and I believe that would be confusing to users.

I had first envisioned, as you imply, that eclipse would generate all new 
methods at the top of the class, and users would have to cut-and-paste them 
down into their class where they wanted them to go. If you look at Dirk's 
first response, however, you can see he suggests creating template variables 
that direct eclipse to place generated methods at user-specified points within 
the class. So, you could have methods corresponding to the different options 
in the new class dialog go different places in the newly generated class. For 
example:

${type_header} {
    // constants

    // instance variables

    // constructors
    ${superclass_constructors}

    // inherited methods
    ${inherited_abstract_methods)

    // main method
    ${main_method}
}

I agree with you this isn't a perfect solution, as we can't anticipate all the 
kinds of methods different clients can generate and hard-code template 
variables for them. However, I agree with Dirk this is a better user 
experience than putting all the generated methods at the top of the class, and 
we could provide template variables for all the generated methods we currently 
know about, if we have a version of a template evaluating method that takes a 
collection of structures that include template variable name, optional content 
for the name and some flags to indicate how to process (supress as in 
filecomment if user deselects "Generate comments", supercede passed content 
with user template variable if present, or always use passed content). (I 
suggest this as the workable alternative to hard-coding each template variable 
as a parameter in the signature of the call that evaluates the template. It 
could be a new version of getCompilationUnitContent if you want to evaluate 
the whole template at once, or a routine that would replace the guts of 
NewTypeWizardPage.constructTypeStub if that's what you guys want me to do. 
Speaking of which...)

The last point to discuss is changing the 
CodeGeneration.getCompilationUnitContent signature. I see your point that I 
could accomplish this enhancement by pre-evaluating the templates to generate 
the typeContent, (however complex that becomes with these added method 
generation variables or not), then passing the resulting typeContent into the 
current API. I will do it that way (or at least attempt it) if you really want 
me to. But I think that would be perpetuating (and making worse) the bad 
coupling and weak cohesion that already exist between and among 
NewTypeWizardPage and StubUtility/CodeGeneration. 

I would go back to the arguments I made in my last comment. And I'll add my 
opinion that StubUtility should have the responsibility of evaluating 
templates and reading variables and the NewTypeWizardPage (and other clients) 
should simply direct StubUtility as to what to do for particular cases. I 
think this would be a big improvement over the current state, where clients 
have to make several calls to StubUtility to gather data, pass the data back 
as parameters to StubUtility in getCompilationUnitContent, and then check for 
success and fix up a hard-coded default in case of failure. Every client 
currently requires a paragraph-length interaction with StubUtility to make a 
getCompilationUnitContent call, and there is a lot of repeated code between 
clients. I would like to try to reduce that to a few lines.

If it were my code base, that's what I would do. I think it fits the spirit of 
open-source, where we try to constantly refactor and improve the software to 
help it reach its best design. On the other hand, I'm not a committer, and I'm 
not so totally wedded to this idea (i.e. changing the 
getCompilationUnitContent API) that I won't do it the other way (keeping it 
the same) if you guys insist.

Let me know about changing the API and about the new template variables 
(${superclass_constructors}, ${inherited_abstract_methods}, and 
${main_method}) and I'll forge ahead with whatever you think is best.

Thanks,
- John
Hi John, thanks for you comment! Here are my responses:
I don't see where we would break any clients or tests when using
${type_declaration}, So I would head for that, it's the simplest solution for
the user (no changes).
The only thing that changes is that everybody that used the new file pattern
should know that we now have an extra template for the type declaration. As
said, that will take its time.

The idea of using variables like ${superclass_constructors} doesn't work, in my
opinion. First, NewTypeWizardPage.constructTypeStub is an API method and we
currently give all clients the full freedom to create whatever they want in the
type body. Second, there many ways to categorizing methods, static methods,
public/private methods, getter/setters, fields.. Some of the categories overlap,
so it will be hard to write a template that is still correct. Then, when
creating methods you also have to create imports. Imports depend on the context
where the type is used. Textual templates are not powerful enough here.
So if you are fine with 'I'll copy/paste my methods in the catrogies later' then
we should go with that. From comment 7 I see that there are other use cases for
this template, so it would be great to have the new template.

If you have a more convenient API for getCompilationUnitContent API, please make
a suggestion. We just have to keep the old API areound and compatible. But no
problem to add an extra, more convenient variant. To be honest, I don't really
see how things can be made much simpler. There's a certain number of parameters
that have to be passed, and I found it simpler to more API with less parameters,
having smaller blocks of funtionality, increasing the flexibility how you can
use the various parts. E.g. we have functionality that just needs a type comment
(Add Javadoc action), some functionality doesn't want comments (pass a single
'null').


Martin - OK - good enough. I can move ahead based on your suggestions. If we 
don't provide any new template variables to direct eclipse where to put 
methods, it simplifies the problem quite a bit. To my mind, it removes the 
need to change the existing APIs.

I am still uneasy about introducing more model functionality (especially 
template reading and resolving code) into NewTypeWizardPage, but will proceed 
with the target of changing as little of the existing code as possible. I'll 
try first to create a StubUtility/CodeGeneration routine to read the new user 
template for the type content, then call that and evaluate the template in a 
new body for NewTypeWizardPage.constructTypeStub.

I'll let you guys know how that works one way or the other.

- John
(In reply to comment #7)
&gt; The discussed changes will also fix the common template complaint of wanting 
&gt; to add default members for logging and versioning.

Matt - thanks for the comment, and the vote. I'll put in a test case that has 
a default member variable to be sure this works.
Created attachment 27495
Changes to the JDT that add a user-definable template for new type content
Created attachment 27496
Changes to tests for addition of new type content template
Here is a patch that adds a "typecontent" template that the system uses to 
process user-definable content that will be substituted for the 
${type_definition} variable in the "newtype" code template. This patch also 
adds a ${type_header} variable for users to insert into the "typecontent" 
template.

The default text for the new template matches the original version, and so 
passes all current tests with one modification which adds the new template 
variable so the test variable counts match what is now in the template store. 
No new automated tests are added to insure different user edits of the new 
template behave as expected (though I tested some manually). Let me know if 
you have any changes in the above patch you want or any other work you want me 
to do on this.

Thanks,
- John
Thanks a lot John, the patch looks good. I still think strongly that we
shouldn't introduce a new variable, as this just adds completixy for the user.
In getTypeContent,
context.setVariable(CodeTemplateContextType.TYPENAME,
Signature.getQualifier(cu.getElementName()));
only works for top level types. I think an extra parameter is needed for the
enclosing type name.

I was wondering, would you also be happy having simply a type _body_ template?
That would by symetrical to the method body template and save us the new
variable for the header declaration. By deault such a variable would be empty.
Sorry that I realized this quite late. But if there arent strong reasons against
this I would favour such a template.

Martin,

I thought about your suggestion to cut down the typecontent variable to just 
the typebodycontent and have eclipse generate the rest automatically. I can 
easily make this change. Your comment about it being "quite late" - do you 
mean I need to make this change quickly to make a deadline, or just that I 
have done the work already?

I can think of two reasons to keep it the way it is, but neither is very 
strong. The first reason is that at some point, somebody may want to take 
advantage of the flexibility to put a special comment or something around the 
header. I can't think of a good use case for this, though, so the simplicity 
of your suggestion wins out, in my mind. 

The second reason is that it may be *less* intuitive, rather than more to edit 
a blank template rather than one with a ${type_header} variable and two 
brackets - at least that looks like a class declaration rather than just a 
blank space - what do I put here? I don't think this is a very strong argument 
either, as it may just be more intutive to me because I wrote it that way. 
Also, the typebodycontent cuts out the failure cases in the typecontent of 
leaving out the header or one or the other of the brackets - I discussed that 
problem earlier in the thread.

OK - two things.
First, you mention TYPENAME only works for top-level types. Do you want me to 
detect top-level or not and switch which variable I include based on that? Can 
I get to the type name in any way for an inner type?

Second, I think the default template will have to be one newline character 
rather than blank to match the current behavior, but not hard-code the newline 
so that the user can never get rid of it. I'm assuming this is a small issue, 
but the default template won't exactly be blank.

Thanks,
- John
Created attachment 27545
Version that adds just a user definable type body
Created attachment 27546
tests for the type body-only patch

Here is the new version with just a blank type body as the new template.
The variables are the same as the first patch (just the type name added to all
the default variables). Type header is now gone and the default template is one
blank line as mentioned in the comment above.
Hi John,
with 'late' I meant it was late after having all the discussion already and you
already having a patch. Time wise we are fine M3 is not so soon.
I think I would favour that approach, mostly for the consistency reason.
Thanks for the patch!

Having the CU, you can't conclude the type name. The user might create an inner
type. So I think, method getTypeBody needs an additional parameter String typeName.

I'm not sure if the new line in the template would do a difference as the body
will be reformatted and the settings in the formatter will be used. I think that
the best solution anyway.

I'll apply the patch and fix the remaining issues (type name). Thanks a lot!

John, another idea: I think it would be good to have different templates for
class, interface, enum and annotation. Do you want to add that? Otherwise I can
add the change.
From the API standpoint I would add an extra 'int kind' flag, using new constants.
(In reply to comment #20)
&gt; John, another idea: I think it would be good to have different templates for
&gt; class, interface, enum and annotation. Do you want to add that? Otherwise I 
can
&gt; add the change.
&gt; From the API standpoint I would add an extra 'int kind' flag, using new 
constants.

Martin - I would be glad to do the change adding different 'kinds' of 
templates. I was thinking of that myself, but thought it was too big a change 
to suggest before you guys had accepted my first change. 

Just to get it straight - this means 4 code templates in the Window-
&gt;Preferences-&gt;(etc) dialog, and the 'int kind' enum that NewTypeWizardPage 
passes through to StubUtility will select the proper template?
New Java class body
New Java interface body
New Java enumeration body
New Java annotation body

How about instead of an enum, the "NewxxxWizard" classes pass the ID of the 
template down to StubUtility directly instead of requiring a lookup based on 
an enum? This way the Wizard classes don't have to refer to an enum defined in 
StubUtility, and it saves us the lookup.

One more thing - what's the best way to pick up your Eclipse changes and the 
checked in version? Should I wait for the next integ or is it safe to just 
pick up the head versions of the affected few files? I just haven't figured 
out what to sync to in CVS, so I'm using the last integ build and wiping it 
out and starting over each version. I haven't done any really iterative 
development yet.

Thanks,
- John
You can take HEAD, but sometimes also you need some referenced plugins in HEAD.
Follow the jdt-ui dev mailing list for messages about what other plugins are
needed in HEAD until the next I-build. It happens from time to time that we
forget to write this on the mailing list, but here are the candidates:

org.eclipse.core.filebuffers
org.eclipse.jdt.core
org.eclipse.jface.text
org.eclipse.ltk.core.refactoring
org.eclipse.ltk.ui.refactoring
org.eclipse.text
org.eclipse.ui.editors
org.eclipse.ui.workbench.texteditor

Sure the kind constants can be the template keys (good idea), but you have to
check them before using them (throw an illegal argument exception otherwise)!

Martin,
Took in the latest integ, then the head revisions of the parts you listed. The 
changes aren't in the head revision yet, so I re-applied my patch to my local 
copy and started making the new changes. I have the new code templates done, 
but haven't finished the changes to StubUtility and NewTypeWizardPage yet 
because I didn't want to have merge problems with your changes.

It turns out there already are constants that identify the type in 
NewTypeWizardPage, and they are placed in a member fTypeKind. It is referenced 
17 times throughout the class in if branches and switch statments. This is 
kind of shocking to me - I'm an OO purist and would always do overridden 
methods in subclasses rather than subclass-aware logic in the parent class. 
But, that would take quite a bit of cleaning up, so if you'd rather, I could 
keep changes to a minimum by piggybacking on the switch statement currently in 
constructTypeHeader (which I'll refactor back into constructTypeStub, the way 
it was before I started) and assign the right template ID that way. 

I could go either way, it's either doing some extra work to clean things up or 
holding my nose and slipping in some quick-and-dirty code.

Let me know your preference, and tell me when you check in the past changes, 
and I'll update, finish the new changes, and resubmit another patch.

Thanks,
- John
I see what you mean. It's all API, so changes are difficult and enums and
annotation are recent additions. I would introduce a protected method
'getTypeBodyContent', but make sure the default implemention (with the switch)
is in the NewTypeWizardPage so that no existing clients not knowing of the
change are broken.
Martin - to clarify, the "API" that relates to this is the NewTypeWizardPage 
constructor - and any "clients" would be subclasses of NewTypeWizardPage. The 
rest of it is hidden in NewTypeWizardPage implementation. Since the superclass 
is aware of its subclasses, I don't see how you could have any client that 
could be affected by this, except subclasses that inherit directly from 
NewTypeWizardPage, but they would have to pass in one of the four valid "type 
kind" parameters and pretend to be that type kind. I couldn't conceive of 
there being other subclasses, but maybe that's just me.

My inclination would not be to create a new virtual method just to pass in a 
string identifier, (though I would use virtual methods to clean a lot of the 
other sub-type based logic out of NewTypeWizardPage, but that's a side issue). 
I was thinking this is best solved by having the subclasses pass in the data 
to a new version of the constructor, then the rest is encapsulated in 
NewTypeWizardPage. The problem I have with that is the switch statement on the 
types in the code that used to be in constructTypeStub that I broke out into 
constructTypeHeader. I don't like that way of doing things, but I like less 
doing what amounts to the exact same thing with two different designs in two 
different places in the same class. 

So, I believe my choices are to change the NewTypeWizardPage constructor and 
the constructors in all the subclasses, and pass both the template ID and the 
text that will be embedded in the code that way, (to my mind, this is the 
clean solution) or to piggyback the template IDs into the same switch 
statement that is currently there (to my mind, this is the quick-and-dirty 
solution). If the constructor calling sequences can't change because they are 
API, then the quick-and-dirty solution would be the one to go with.

- John
The code template framework is currently JDT.UI internal. No other plugin can
contribute a code template and also can't access code templates by an ID.
That means using the code template ID in the constructor makes no sense for
other non-JDT-UI plugin. 

What I would suggest is a protected method
getTypeBodyContent(ICmplilationUnit cu,  String newTypeName, String linDelim)
that by default returns the type body template according to the current
fTypeKind, but could be overridden by clients like the NewTestSuitePage (in the
junit plugin) to return a different type body.
OK - I'll leave the constructor alone and make the changes in the class as you 
suggest. I haven't seen the last patch checked in when I synchronized. I can 
accumulate all the changes (including the parameter to pass the type name as 
you suggested earlier) and send a new patch either tonight or tomorrow. Since 
I'm removing the original "newType" code template and replacing it with the 4 
subclass templates, it'll save me some change merging.

Thanks,
- John
Martin &amp; Dirk,

Ran into some trouble synchronizing so I didn't get it done yet.
Will do it over the weekend.

Do you guys really sync to HEAD? Whenever I try there are always compilation 
errors, so I can't get a clean build or test run. 

I've been trying to sync to the last integ label, but the functions to do that 
easily are missing from eclipse CVS support, and I haven't found the forumula 
yet. (The "Team Synchronization" functions are cool, but I have only figured 
out how to synchronize to HEAD.) I have been syncing using external tools, and 
it's a pain.

So I can't use HEAD and I can't sync to an integ label. What am I missing?

Thanks,
- John
John, no problem, there's no rush.
We work from HEAD with the plugins I listed, and -I forgot to say- always use
the latest integration build (I20050927-1200 currently) for the rest of the
plugins as binary (you automatically get these when you use this build to
develop with. If you are not, go to Preferences - Plug-in Dev. - Platform Target
to set the location to the latest I-build).
What are the errors you get?
OK - I'll try that - the errors I'm getting are scattered around, and could 
easily be from misaligned versions of things. Constants defined in another 
class could not be resolved, methods having different signatures, etc...

So, sorry to be so thick about this, but do you download the integration build 
and copy it over your current eclipse to work with the latest, or do you have 
to delete parts of the old eclipse before you copy over? 

Looks like I got your other suggestion working to point the plug-in preference 
to the latest integ. My problem was making sure I sync'ed all the folders and 
didn't miss any.

Thanks,
- John

Created attachment 27746
Adds 4 new code templates for user-definable type bodies

Here is a new patch that adds 4 code templates users can use to put different
standard default bodies into newly created classes, interfaces, enums, and
annotations. This patch fixes the problem with earlier attempts with the type
name template variable not resolving correctly for inner classes. This patch
also does not introduce any new ${} template variables that are exposed to
users. 

The regression tests do not run entirely clean as of this patch, but since I
sync'ed to HEAD rather than an integ, I do not know if the tests would have
been clean before this change. The failed tests are: 5 failures in
RenameTypeTest from refactoring/AllAllTests, one failure in
ModifierCorrectionsQuickFixTest and 5 failures in ReorgQuickFixTest from
ui/AutomatedSuite. I don't think any of my changes caused these failures, and
don't know how to resolve them, but am willing to fix them if somebody can give
me a clue what I did. 

Thanks,
- John
Created attachment 27747
Tests for user template patch

This patch introduces 4 new tests into NewTypeWizardTest to insure each type
kind picks up its body template correctly. It also fixes up the code template
store tests to include the new templates.
I would never copy an installation over an old one, just extract to a new
folder. I have a batch file where I simply have to update the path of the
installation directory.

I released your patch with the following changes:
- Introduced template id constants in CodeGeneration (CodeTemplateContextType is
not API)
- label description changes
- used lineDelimiter instead on '/n', added NPE check after getting the template
(as spec'ed)

Thanks a lot for your help!

Marking this bug as fixed, but feel free to add further improvements.
Great - Thanks! It was fun working with you on this.
I'll look forward to picking up the new feature in the next integ.
- John
Thanks a lot for your time and endurance :-)! I think we have a good result!

Verified using I20051031-2000
*** Bug 29845 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Problem: 
Users can't put comments in a Java class template that are to be embedded 
inside the class (between the class brackets), so every new class starts with 
the comments in the right place without requiring the user to edit each class 
by hand after it's generated. 

e.g. I want something like this: 
public class Blee { 
// constants 

// member variables 

// constructors 

// etc... 
} 

...but I get this: 
public class Blee { 

} 
// constants 

// member variables 

// constructors 

// etc... 

..or if I put in my own brackets, I get this: 
public class Blee { 
} 
{ 
// constants 

// member variables 

// constructors 

// etc... 
} 

Steps to reproduce: 
Open Window-&gt;Preferences-&gt;Java-&gt;Code Style-&gt;Code Templates-&gt;Code-&gt;New Java 
Files 
Edit the "Pattern:" window to include something like this: 

${type_declaration} 
// comment 

..to get the first result above, or this: 

${type_declaration} 
{ 
// comment 
} 

..to get the second result above. 

The Pitch 
This is a convenience I've been using for 10 years before I used eclipse. You 
start with the same file template and fill in what you need, so you always 
know the basic order of items in every class, and don't have to keep typing in 
the section headers yourself. Having all files organized the same way with 
section headers is a best practice that many well-respected developers 
recommend. Here are some references. They all present their schemes for 
ordering functions within a file or within a class (as the language warrants) 
and their recommended commenting formats. 

J2EE Design and Development - Rod Johnson p.144-5 "Delimit sections of code." 
Code Complete - Steve McConnell p.449 "..order the source file carefully." 
C Style: Standards and Guildelines - David Straker p.125 "Sort functions by a 
standard scheme..." 

OK, so it's a relatively small thing, but it bugs me enough I'm willing to fix 
it myself and contribute the change. All I need is somebody to review the 
change and give me some advice on logistics (e.g. do you need a CVS changelist 
or can I e-mail source files, what tests should I run/fix up etc...) and to 
help choose a preferred solution from the alternatives. 

Proposed Solution Alternatives: 
1.) Create a new template variable that doesn't hard-insert brackets and 
allows users to insert their own brackets where they choose in their template. 
This is my preferred solution for a couple of reasons. First, it is an 
addition, so it doesn't affect the current user behavior by design, and so is 
safe from causing regressions based on assumptions of current usage. (Of 
course, I understand it may cause regressions based on implementation, but I 
pledge to handle those.) Second, it gives the user the ultimate flexibility in 
controlling exactly what appears after the type declaration before the opening 
class brackets, what appears between the class brackets, and what appears 
after the class brackets. It would go something like this: 

${type_declaration_no_brackets} 
{ 
// the template class comments... 
} 

and could accomodate something as bizarre as this: 
${type_declaration_no_brackets} 
// some squirrelly thing here, perhaps a comment or future metadata tag 
{ 
// the template class comments... 
}// some other squirrelly thing, like a tool-specific embedded comment 

2.) Change the behavior so the new type wizard detects if the user has 
inserted brackets in the template, and if so, uses these brackets instead of 
hard-inserting their own. This saves creating a new template variable, and 
seems like a sophisticated solution, but has a couple of strange corner cases. 
These involve things like putting brackets in a comment that is intended to go 
after the class, like an embedded comment that some tool would want in the 
code: 

${type_declaration} 

// xp3911{unintelligible-junk} 

The code would have to be smart enough to parse comments and not include 
brackets in comments in its detection. Generally, this solution isn't as safe 
as the first because it changes the behavior of the current 
${type_declaration} template variable and may violate some oddball user 
assumption somewhere. 

3.) Change the behavior so the new type wizard considers everything below the 
${type_declaration} template variable to be embedded in the class rather than 
below it. This was the first solution I thought of, but I like it the least 
because it changes the default behavior of the current ${type_declaration} 
template variable the most severely, and doesn't have the flexibility to 
accomodate the squirrelly comments the first solution can handle. Blech. 
Included here just for purposes of discussion. 

So whaddya say guys? Will you accept one of these solutions (or a variation as 
we agree) if I implement it right? Isn't this what the spirit of eclipse is 
all about?
John, 

I really encourage you to investigate further in this topic and try to provide a
patch for it that can be included into Eclipse.

I favour solution one. The only porblem I see with it is that
${type_declaration} can represent a type containing more than just an empty
body. For example if you check any of the "Generate method stubs" options on the
wizard how will this go together with the type body you are providing. So you
need more than just one variable. The templete has to look more like this:

{$ype_declaration_header} {
  // A comment
  {$main_method}
}

So we need variable for the main method, constructor and abstract inherited
methods as well.

The "procedure" for getting code into Eclipse is as follows:

- the code should be provided as a patch against a reasonable "latest" version
  of the Eclipse code (e.g. against the latest integration build). The code
  can be found in the Eclipse CVS repository. The project you are looking for
  is org.eclipse.jdt.ui (some basic steps how to get the source can be found at
  the end of 
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/jdt-ui-home/r3_2/main.html#Overall_Planning)
  
- you have to provide test cases as well. The tests has to go into 
  org.eclipse.jdt.ui.tests

- all code patches have to be provided as attachments to bug reports. We can
  use this bug report for this

I am not the expert for code templates and Martin (the expert) is currently out
of office. But as a starting point you might want to have a look at the class
StubUtility which is the facade for all template based code generation.
Dirk, 

Thanks for your reply, and I appreciate the encouragement. 

I studied the source for a few sessions and thought about your ideas of other 
template variables to show the location of generated methods. That makes 
things harder to implement, but it will definitely make a better user 
experience. The way I had originally thought of it (and the way I still want 
to implement it as a first iteration before I take on the additional 
complexity) would have the comments generated in the right place inside the 
class, but all the stub methods would just be generated at their default 
location, which I'm assuming (hoping) is at the top of the method. Then, for a 
second iteration, I'd add the template variables to indicate where the 
different types of generated stub methods should go, and allow them to be 
interspersed with the comments.

After considering your suggestions and my original ideas for a while, I became 
more uneasy about the user experience if we allow alternate versions of the 
template variables (${type_declaration}  and ${type_declaration_header}) and 
then offer other template variables that the user has to be aware are coupled 
with only the ${type_declaration_header} version, and further require the user 
to understand they have to manually place their class brackets. It just sounds 
like there are a lot of failure cases and a lot of potential user confusion.

What I came up with after some headscratching is a new suggestion. Instead of 
offering an alternate ${type_declaration} version, why not have 
${type_declaration} insert a user-definable "sub"-template like ${filecomment} 
and ${typecomment} currently do? That way, the template variables available 
for showing where the generated method stubs go in the class can be offered 
only in the ${type_declaration} editing context, and we no longer have to 
worry about the users understanding how they are coupled. Along with that, the 
code behind the type stub generation can put in some protective default 
behavior if the user forgets to add one or both brackets (default placement is 
right after the class declaration header for the open bracket, and at the 
bottom off the template for the close bracket). Finally, the default 
definition of the "sub"-template can be set to the current behavior, taking 
care of any backward-compatibility user expectations. 

In addition, this leaves open the future possibility of allowing users to 
define different templates for the different types: interfaces, classes, 
annotations, enums.

Let me know if this sounds like a plan, or if anyone over there has any 
further suggestions, and I'll get started.

As far as process, I will get a CVS download set up. Up until now, I have been 
downloading the source from your download site, but that was just to do some 
preliminary surfing. I like to do test-driven development, so I'll try to get 
some bare-bones test cases written first. That way, I can work through the 
logistics of building and running the tests before I get very far. Or perhaps 
I'll just try to mimic the current behavior with the new user-definable class 
template variable, so the current test cases will run.
John,

something we have to keep in mind is the fact that the current "New Java File"
template is API. Clients can create a new CU using the CodeGeneration API class
which basically forwards to StubUtility. We have to make sure that current
clients will not get broken by "reusing" the current ${type_declaration}
variable. So before going down that path we need to investigate what your
approach means regarding API and backwards compatibility. 

I still tend to introduce a new variable (it avoids all the API and
compatibility issues). What we can do is adding a new varaible ${type_content}
which is a sub variable like you suggested.
Dirk -

OK, I can set it up as a new variable: ${type_content}.

I am still concerned about the user experience with both the 
${type_declaration} and the ${type_content} variables available. It seems it 
is asking for confusion along the lines of "I changed the definition in 
${type_content} but the new generated class still didn't change..." because 
they were using ${type_declaration} and didn't notice the difference. I assume 
it will be easy enough to change if I get it working this way, and it looks 
like the API and regression tests can still work with the re-implementation. 
It seems to me it will be dependent on how we integrate the new changes, but 
since I haven't done it yet, I can't prove it one way or the other. 

Got CVS set up, and I'll try to run the original tests next.

Dirk &amp; Martin,

I have studied the code in NewTypeWizardPage, CodeGeneration, StubUtility, and 
the 2 other references to the CodeGeneration.getCompilationUnitContent API in 
the jdt package (in AccessorClassCreator and MoveInnerToTopRefactoring). 

The bad news is I can't see any way to do this enhancement without changing 
the getCompilationUnitContent API. 

The biggest reason is that StubUtility.getCompilationUnitContent is 
responsible for evaluating templates and resolving the template variables. 
With this change, I will have to shift the responsibility for inserting the 
content of a new type and its stub methods from their current hard-coded 
treatment in NewTypeWizardPage down into StubUtility, so I will have to pass 
more information (for new template variables) into 
StubUtility.getCompilationUnitContent to allow it to resolve all the template 
variables at once. 

A secondary reason is that the client interaction with 
StubUtility.getCompilationUnitContent is currently tightly coupled with its 
clients. All clients currently are calling getLineDelimiterUsed from 
StubUtility directly, and usually making separate calls to getTypeComment and 
getFileComment and passing the results back to the call to 
CodeGeneration.getCompilationUnitContent. In addition, two of the clients have 
essentially repeated fail-safe code after the call to 
getCompilationUnitContent returns. (These are NewTypeWizard.constructCUContent 
and MoveInnerToTopRefactoring.createSourceForNewCu.) Basically, the 
interaction between the clients and the getCompilationUnitContent method could 
be made a lot cleaner and cries out to be refactored. 

I doubt if it is even possible to keep the current version of the API around 
as a facade that calls the new routine in the background, because I predict I 
will run into some unreconcilable failure cases and strange user experience 
when the user uses new templates and the old code doesn't allow the data to be 
passed in to fill them. The same goes for creating new parallel code and 
leaving the old code intact, which has the added problem of creating a duel 
maintenance problem. I would much rather clean up the current code for all 
concerned and for any future enhancements as well. 

So, what I'm willing to do to fix all of this is: 
Add additional tests to cover the new functionality and combinations. 
Alter any existing tests as needed to pass with the new API. 
Fix the getCompilationUnitContent API to be more flexible and to require less 
coupling between its clients and itself. 
Refactor the current clients to use the new API and clean up repeated code 
made unnecessary by the change. 

As far as the exact form the new API will take, let me prototype a few 
possibilities, and then come back with a suggestion or some choices. 

So let me know what you think. I know this isn't what you wanted to hear, but 
if you approve me doing this, I have a way forward and can get this done 
without too much trouble. (In other words, it's a tractable/straighforward 
problem as long as you accept the constraint that the API has to change.)

- John
Hi John,
I would favor a new code template 'type body' that will be used for the variable
${type_declaration} in the new file template (I don't see why a new variable
would have to be introduced, Dirk?).

CodeGeneration.getCompilationUnitContent can stay the same. The type content
that is passed to it should be generated using the new type body template. A new
API getTypeBodyContent() would be added for that, and it should get all
information that it requires (type delaration header, type name, cu name...)

When creating a new type, the type wizard would first construct the new cu using
these templates and on that insert the all methods to be created. I don't see
how you could solve that with variables for all created methods (e.g.
${main_method}}. We can't know what kind of methods will be created by clients.

One problem is that all client of 
CodeGeneration.getCompilationUnitContent will have to be updated, there will
always be clients that aren't. 

An other probelm is that i'm not sure if you really will get what you want. New
methods will probably be entered at the very beginning, and can't understand
your comments in the body. This will be also the case for all other new members
that will be added programatically. 







The discussed changes will also fix the common template complaint of wanting 
to add default members for logging and versioning.
Martin,

Thanks for your ideas. Here are my responses.

I don't want to put words in Dirk's mouth, so jump Dirk in if I get this 
wrong, but I think he wanted me to be conservative about changing the current 
behavior of the ${type_declaration} variable so it wouldn't break any current 
tests or invalidate any current client uses.

I was planning to default the new template so it implemented the current hard-
coded behavior out of the box, and so would pass all the tests. Since I 
haven't yet proven I can do that successfully, I can understand Dirk wanting 
to be cautious about it. I have always hoped I could prove it though, so I 
don't have to enter a new template variable, because it would mean two 
template variables that do the same thing, one hard-coded, one user-
configurable, and I believe that would be confusing to users.

I had first envisioned, as you imply, that eclipse would generate all new 
methods at the top of the class, and users would have to cut-and-paste them 
down into their class where they wanted them to go. If you look at Dirk's 
first response, however, you can see he suggests creating template variables 
that direct eclipse to place generated methods at user-specified points within 
the class. So, you could have methods corresponding to the different options 
in the new class dialog go different places in the newly generated class. For 
example:

${type_header} {
    // constants

    // instance variables

    // constructors
    ${superclass_constructors}

    // inherited methods
    ${inherited_abstract_methods)

    // main method
    ${main_method}
}

I agree with you this isn't a perfect solution, as we can't anticipate all the 
kinds of methods different clients can generate and hard-code template 
variables for them. However, I agree with Dirk this is a better user 
experience than putting all the generated methods at the top of the class, and 
we could provide template variables for all the generated methods we currently 
know about, if we have a version of a template evaluating method that takes a 
collection of structures that include template variable name, optional content 
for the name and some flags to indicate how to process (supress as in 
filecomment if user deselects "Generate comments", supercede passed content 
with user template variable if present, or always use passed content). (I 
suggest this as the workable alternative to hard-coding each template variable 
as a parameter in the signature of the call that evaluates the template. It 
could be a new version of getCompilationUnitContent if you want to evaluate 
the whole template at once, or a routine that would replace the guts of 
NewTypeWizardPage.constructTypeStub if that's what you guys want me to do. 
Speaking of which...)

The last point to discuss is changing the 
CodeGeneration.getCompilationUnitContent signature. I see your point that I 
could accomplish this enhancement by pre-evaluating the templates to generate 
the typeContent, (however complex that becomes with these added method 
generation variables or not), then passing the resulting typeContent into the 
current API. I will do it that way (or at least attempt it) if you really want 
me to. But I think that would be perpetuating (and making worse) the bad 
coupling and weak cohesion that already exist between and among 
NewTypeWizardPage and StubUtility/CodeGeneration. 

I would go back to the arguments I made in my last comment. And I'll add my 
opinion that StubUtility should have the responsibility of evaluating 
templates and reading variables and the NewTypeWizardPage (and other clients) 
should simply direct StubUtility as to what to do for particular cases. I 
think this would be a big improvement over the current state, where clients 
have to make several calls to StubUtility to gather data, pass the data back 
as parameters to StubUtility in getCompilationUnitContent, and then check for 
success and fix up a hard-coded default in case of failure. Every client 
currently requires a paragraph-length interaction with StubUtility to make a 
getCompilationUnitContent call, and there is a lot of repeated code between 
clients. I would like to try to reduce that to a few lines.

If it were my code base, that's what I would do. I think it fits the spirit of 
open-source, where we try to constantly refactor and improve the software to 
help it reach its best design. On the other hand, I'm not a committer, and I'm 
not so totally wedded to this idea (i.e. changing the 
getCompilationUnitContent API) that I won't do it the other way (keeping it 
the same) if you guys insist.

Let me know about changing the API and about the new template variables 
(${superclass_constructors}, ${inherited_abstract_methods}, and 
${main_method}) and I'll forge ahead with whatever you think is best.

Thanks,
- John
Hi John, thanks for you comment! Here are my responses:
I don't see where we would break any clients or tests when using
${type_declaration}, So I would head for that, it's the simplest solution for
the user (no changes).
The only thing that changes is that everybody that used the new file pattern
should know that we now have an extra template for the type declaration. As
said, that will take its time.

The idea of using variables like ${superclass_constructors} doesn't work, in my
opinion. First, NewTypeWizardPage.constructTypeStub is an API method and we
currently give all clients the full freedom to create whatever they want in the
type body. Second, there many ways to categorizing methods, static methods,
public/private methods, getter/setters, fields.. Some of the categories overlap,
so it will be hard to write a template that is still correct. Then, when
creating methods you also have to create imports. Imports depend on the context
where the type is used. Textual templates are not powerful enough here.
So if you are fine with 'I'll copy/paste my methods in the catrogies later' then
we should go with that. From comment 7 I see that there are other use cases for
this template, so it would be great to have the new template.

If you have a more convenient API for getCompilationUnitContent API, please make
a suggestion. We just have to keep the old API areound and compatible. But no
problem to add an extra, more convenient variant. To be honest, I don't really
see how things can be made much simpler. There's a certain number of parameters
that have to be passed, and I found it simpler to more API with less parameters,
having smaller blocks of funtionality, increasing the flexibility how you can
use the various parts. E.g. we have functionality that just needs a type comment
(Add Javadoc action), some functionality doesn't want comments (pass a single
'null').


Martin - OK - good enough. I can move ahead based on your suggestions. If we 
don't provide any new template variables to direct eclipse where to put 
methods, it simplifies the problem quite a bit. To my mind, it removes the 
need to change the existing APIs.

I am still uneasy about introducing more model functionality (especially 
template reading and resolving code) into NewTypeWizardPage, but will proceed 
with the target of changing as little of the existing code as possible. I'll 
try first to create a StubUtility/CodeGeneration routine to read the new user 
template for the type content, then call that and evaluate the template in a 
new body for NewTypeWizardPage.constructTypeStub.

I'll let you guys know how that works one way or the other.

- John
(In reply to comment #7)
&gt; The discussed changes will also fix the common template complaint of wanting 
&gt; to add default members for logging and versioning.

Matt - thanks for the comment, and the vote. I'll put in a test case that has 
a default member variable to be sure this works.
Created attachment 27495
Changes to the JDT that add a user-definable template for new type content
Created attachment 27496
Changes to tests for addition of new type content template
Here is a patch that adds a "typecontent" template that the system uses to 
process user-definable content that will be substituted for the 
${type_definition} variable in the "newtype" code template. This patch also 
adds a ${type_header} variable for users to insert into the "typecontent" 
template.

The default text for the new template matches the original version, and so 
passes all current tests with one modification which adds the new template 
variable so the test variable counts match what is now in the template store. 
No new automated tests are added to insure different user edits of the new 
template behave as expected (though I tested some manually). Let me know if 
you have any changes in the above patch you want or any other work you want me 
to do on this.

Thanks,
- John
Thanks a lot John, the patch looks good. I still think strongly that we
shouldn't introduce a new variable, as this just adds completixy for the user.
In getTypeContent,
context.setVariable(CodeTemplateContextType.TYPENAME,
Signature.getQualifier(cu.getElementName()));
only works for top level types. I think an extra parameter is needed for the
enclosing type name.

I was wondering, would you also be happy having simply a type _body_ template?
That would by symetrical to the method body template and save us the new
variable for the header declaration. By deault such a variable would be empty.
Sorry that I realized this quite late. But if there arent strong reasons against
this I would favour such a template.

Martin,

I thought about your suggestion to cut down the typecontent variable to just 
the typebodycontent and have eclipse generate the rest automatically. I can 
easily make this change. Your comment about it being "quite late" - do you 
mean I need to make this change quickly to make a deadline, or just that I 
have done the work already?

I can think of two reasons to keep it the way it is, but neither is very 
strong. The first reason is that at some point, somebody may want to take 
advantage of the flexibility to put a special comment or something around the 
header. I can't think of a good use case for this, though, so the simplicity 
of your suggestion wins out, in my mind. 

The second reason is that it may be *less* intuitive, rather than more to edit 
a blank template rather than one with a ${type_header} variable and two 
brackets - at least that looks like a class declaration rather than just a 
blank space - what do I put here? I don't think this is a very strong argument 
either, as it may just be more intutive to me because I wrote it that way. 
Also, the typebodycontent cuts out the failure cases in the typecontent of 
leaving out the header or one or the other of the brackets - I discussed that 
problem earlier in the thread.

OK - two things.
First, you mention TYPENAME only works for top-level types. Do you want me to 
detect top-level or not and switch which variable I include based on that? Can 
I get to the type name in any way for an inner type?

Second, I think the default template will have to be one newline character 
rather than blank to match the current behavior, but not hard-code the newline 
so that the user can never get rid of it. I'm assuming this is a small issue, 
but the default template won't exactly be blank.

Thanks,
- John
Created attachment 27545
Version that adds just a user definable type body
Created attachment 27546
tests for the type body-only patch

Here is the new version with just a blank type body as the new template.
The variables are the same as the first patch (just the type name added to all
the default variables). Type header is now gone and the default template is one
blank line as mentioned in the comment above.
Hi John,
with 'late' I meant it was late after having all the discussion already and you
already having a patch. Time wise we are fine M3 is not so soon.
I think I would favour that approach, mostly for the consistency reason.
Thanks for the patch!

Having the CU, you can't conclude the type name. The user might create an inner
type. So I think, method getTypeBody needs an additional parameter String typeName.

I'm not sure if the new line in the template would do a difference as the body
will be reformatted and the settings in the formatter will be used. I think that
the best solution anyway.

I'll apply the patch and fix the remaining issues (type name). Thanks a lot!

John, another idea: I think it would be good to have different templates for
class, interface, enum and annotation. Do you want to add that? Otherwise I can
add the change.
From the API standpoint I would add an extra 'int kind' flag, using new constants.
(In reply to comment #20)
&gt; John, another idea: I think it would be good to have different templates for
&gt; class, interface, enum and annotation. Do you want to add that? Otherwise I 
can
&gt; add the change.
&gt; From the API standpoint I would add an extra 'int kind' flag, using new 
constants.

Martin - I would be glad to do the change adding different 'kinds' of 
templates. I was thinking of that myself, but thought it was too big a change 
to suggest before you guys had accepted my first change. 

Just to get it straight - this means 4 code templates in the Window-
&gt;Preferences-&gt;(etc) dialog, and the 'int kind' enum that NewTypeWizardPage 
passes through to StubUtility will select the proper template?
New Java class body
New Java interface body
New Java enumeration body
New Java annotation body

How about instead of an enum, the "NewxxxWizard" classes pass the ID of the 
template down to StubUtility directly instead of requiring a lookup based on 
an enum? This way the Wizard classes don't have to refer to an enum defined in 
StubUtility, and it saves us the lookup.

One more thing - what's the best way to pick up your Eclipse changes and the 
checked in version? Should I wait for the next integ or is it safe to just 
pick up the head versions of the affected few files? I just haven't figured 
out what to sync to in CVS, so I'm using the last integ build and wiping it 
out and starting over each version. I haven't done any really iterative 
development yet.

Thanks,
- John
You can take HEAD, but sometimes also you need some referenced plugins in HEAD.
Follow the jdt-ui dev mailing list for messages about what other plugins are
needed in HEAD until the next I-build. It happens from time to time that we
forget to write this on the mailing list, but here are the candidates:

org.eclipse.core.filebuffers
org.eclipse.jdt.core
org.eclipse.jface.text
org.eclipse.ltk.core.refactoring
org.eclipse.ltk.ui.refactoring
org.eclipse.text
org.eclipse.ui.editors
org.eclipse.ui.workbench.texteditor

Sure the kind constants can be the template keys (good idea), but you have to
check them before using them (throw an illegal argument exception otherwise)!

Martin,
Took in the latest integ, then the head revisions of the parts you listed. The 
changes aren't in the head revision yet, so I re-applied my patch to my local 
copy and started making the new changes. I have the new code templates done, 
but haven't finished the changes to StubUtility and NewTypeWizardPage yet 
because I didn't want to have merge problems with your changes.

It turns out there already are constants that identify the type in 
NewTypeWizardPage, and they are placed in a member fTypeKind. It is referenced 
17 times throughout the class in if branches and switch statments. This is 
kind of shocking to me - I'm an OO purist and would always do overridden 
methods in subclasses rather than subclass-aware logic in the parent class. 
But, that would take quite a bit of cleaning up, so if you'd rather, I could 
keep changes to a minimum by piggybacking on the switch statement currently in 
constructTypeHeader (which I'll refactor back into constructTypeStub, the way 
it was before I started) and assign the right template ID that way. 

I could go either way, it's either doing some extra work to clean things up or 
holding my nose and slipping in some quick-and-dirty code.

Let me know your preference, and tell me when you check in the past changes, 
and I'll update, finish the new changes, and resubmit another patch.

Thanks,
- John
I see what you mean. It's all API, so changes are difficult and enums and
annotation are recent additions. I would introduce a protected method
'getTypeBodyContent', but make sure the default implemention (with the switch)
is in the NewTypeWizardPage so that no existing clients not knowing of the
change are broken.
Martin - to clarify, the "API" that relates to this is the NewTypeWizardPage 
constructor - and any "clients" would be subclasses of NewTypeWizardPage. The 
rest of it is hidden in NewTypeWizardPage implementation. Since the superclass 
is aware of its subclasses, I don't see how you could have any client that 
could be affected by this, except subclasses that inherit directly from 
NewTypeWizardPage, but they would have to pass in one of the four valid "type 
kind" parameters and pretend to be that type kind. I couldn't conceive of 
there being other subclasses, but maybe that's just me.

My inclination would not be to create a new virtual method just to pass in a 
string identifier, (though I would use virtual methods to clean a lot of the 
other sub-type based logic out of NewTypeWizardPage, but that's a side issue). 
I was thinking this is best solved by having the subclasses pass in the data 
to a new version of the constructor, then the rest is encapsulated in 
NewTypeWizardPage. The problem I have with that is the switch statement on the 
types in the code that used to be in constructTypeStub that I broke out into 
constructTypeHeader. I don't like that way of doing things, but I like less 
doing what amounts to the exact same thing with two different designs in two 
different places in the same class. 

So, I believe my choices are to change the NewTypeWizardPage constructor and 
the constructors in all the subclasses, and pass both the template ID and the 
text that will be embedded in the code that way, (to my mind, this is the 
clean solution) or to piggyback the template IDs into the same switch 
statement that is currently there (to my mind, this is the quick-and-dirty 
solution). If the constructor calling sequences can't change because they are 
API, then the quick-and-dirty solution would be the one to go with.

- John
The code template framework is currently JDT.UI internal. No other plugin can
contribute a code template and also can't access code templates by an ID.
That means using the code template ID in the constructor makes no sense for
other non-JDT-UI plugin. 

What I would suggest is a protected method
getTypeBodyContent(ICmplilationUnit cu,  String newTypeName, String linDelim)
that by default returns the type body template according to the current
fTypeKind, but could be overridden by clients like the NewTestSuitePage (in the
junit plugin) to return a different type body.
OK - I'll leave the constructor alone and make the changes in the class as you 
suggest. I haven't seen the last patch checked in when I synchronized. I can 
accumulate all the changes (including the parameter to pass the type name as 
you suggested earlier) and send a new patch either tonight or tomorrow. Since 
I'm removing the original "newType" code template and replacing it with the 4 
subclass templates, it'll save me some change merging.

Thanks,
- John
Martin &amp; Dirk,

Ran into some trouble synchronizing so I didn't get it done yet.
Will do it over the weekend.

Do you guys really sync to HEAD? Whenever I try there are always compilation 
errors, so I can't get a clean build or test run. 

I've been trying to sync to the last integ label, but the functions to do that 
easily are missing from eclipse CVS support, and I haven't found the forumula 
yet. (The "Team Synchronization" functions are cool, but I have only figured 
out how to synchronize to HEAD.) I have been syncing using external tools, and 
it's a pain.

So I can't use HEAD and I can't sync to an integ label. What am I missing?

Thanks,
- John
John, no problem, there's no rush.
We work from HEAD with the plugins I listed, and -I forgot to say- always use
the latest integration build (I20050927-1200 currently) for the rest of the
plugins as binary (you automatically get these when you use this build to
develop with. If you are not, go to Preferences - Plug-in Dev. - Platform Target
to set the location to the latest I-build).
What are the errors you get?
OK - I'll try that - the errors I'm getting are scattered around, and could 
easily be from misaligned versions of things. Constants defined in another 
class could not be resolved, methods having different signatures, etc...

So, sorry to be so thick about this, but do you download the integration build 
and copy it over your current eclipse to work with the latest, or do you have 
to delete parts of the old eclipse before you copy over? 

Looks like I got your other suggestion working to point the plug-in preference 
to the latest integ. My problem was making sure I sync'ed all the folders and 
didn't miss any.

Thanks,
- John

Created attachment 27746
Adds 4 new code templates for user-definable type bodies

Here is a new patch that adds 4 code templates users can use to put different
standard default bodies into newly created classes, interfaces, enums, and
annotations. This patch fixes the problem with earlier attempts with the type
name template variable not resolving correctly for inner classes. This patch
also does not introduce any new ${} template variables that are exposed to
users. 

The regression tests do not run entirely clean as of this patch, but since I
sync'ed to HEAD rather than an integ, I do not know if the tests would have
been clean before this change. The failed tests are: 5 failures in
RenameTypeTest from refactoring/AllAllTests, one failure in
ModifierCorrectionsQuickFixTest and 5 failures in ReorgQuickFixTest from
ui/AutomatedSuite. I don't think any of my changes caused these failures, and
don't know how to resolve them, but am willing to fix them if somebody can give
me a clue what I did. 

Thanks,
- John
Created attachment 27747
Tests for user template patch

This patch introduces 4 new tests into NewTypeWizardTest to insure each type
kind picks up its body template correctly. It also fixes up the code template
store tests to include the new templates.
I would never copy an installation over an old one, just extract to a new
folder. I have a batch file where I simply have to update the path of the
installation directory.

I released your patch with the following changes:
- Introduced template id constants in CodeGeneration (CodeTemplateContextType is
not API)
- label description changes
- used lineDelimiter instead on '/n', added NPE check after getting the template
(as spec'ed)

Thanks a lot for your help!

Marking this bug as fixed, but feel free to add further improvements.
Great - Thanks! It was fun working with you on this.
I'll look forward to picking up the new feature in the next integ.
- John
Thanks a lot for your time and endurance :-)! I think we have a good result!

Verified using I20051031-2000
*** Bug 29845 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108072" />
    <CreationDate amount="2005-08-25 22:37:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Problem importing two EARs with modules of the same name</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>I have two EAR files, each with a module that has the same name inside it.
Although it has the same name, the module has different contents in each of the
two EARs.
If I import the first EAR, I get an EAR and the module created. When I import
the second EAR, it creates the second EAR but doesn't seem to import the second
module at all. In this case it should have either prompted me with options or
generated the second module into a different name, e.g. modulename_1.
Please let me know if you need a sample.
Jason Sholl just fixed this problem last week - please verify.
Closing</WithStack>
    <WithOutStack>I have two EAR files, each with a module that has the same name inside it.
Although it has the same name, the module has different contents in each of the
two EARs.
If I import the first EAR, I get an EAR and the module created. When I import
the second EAR, it creates the second EAR but doesn't seem to import the second
module at all. In this case it should have either prompted me with options or
generated the second module into a different name, e.g. modulename_1.
Please let me know if you need a sample.
Jason Sholl just fixed this problem last week - please verify.
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108073" />
    <CreationDate amount="2005-08-25 22:41:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>No option to delete references when deleting module</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="53">
        <Lines>
          <Line>0) Start with a empty workspace</Line>
          <Line />
          <Line>1) Create Test Artifacts</Line>
          <Line />
          <Line>1.1) Create Generic WLS 9.0 server type</Line>
          <Line>1.2) Create Generic WLS 9.0 server instance</Line>
          <Line>1.3) Create an EAR project</Line>
          <Line>1.4) Create a Utility project, add to EAR</Line>
          <Line>1.5) Create a dynamic Web project, add to EAR</Line>
          <Line>1.6) Create an EJB project (w/ client project), add to EAR</Line>
          <Line>1.7) Create a connector project, add to EAR</Line>
          <Line>1.8) Create a standalone web project</Line>
          <Line />
          <Line>2) Create Test Dependencies</Line>
          <Line />
          <Line>2.1) Add J2EE dependence from Web to EJB (via client)</Line>
          <Line>2.2) Add Web Lib dependence from Web to Utility</Line>
          <Line>2.3) Add EAR to server instance</Line>
          <Line>2.4) Add standalone web to server instance</Line>
          <Line />
          <Line>3) Project Refactoring Tests</Line>
          <Line />
          <Line>3.1) Rename Utility project</Line>
          <Line>-Verify that the following are updated:</Line>
          <Line>-EAR's .component</Line>
          <Line>-EAR's .project</Line>
          <Line>-Web's .component (as web lib)</Line>
          <Line>-Web's .project</Line>
          <Line>-Web's .classpath</Line>
          <Line>-NOT Web's MANIFEST.MF</Line>
          <Line>3.2) Rename EJB client project</Line>
          <Line>-Verify that the following are updated:</Line>
          <Line>-EAR's .component</Line>
          <Line>-EAR's .project</Line>
          <Line>-Web's .component (not as web lib)</Line>
          <Line>-Web's .project</Line>
          <Line>-Web's .classpath</Line>
          <Line>-Web's MANIFEST.MF</Line>
          <Line>-EJB's .component</Line>
          <Line>-EJB's ejb-jar.xml</Line>
          <Line>3.3) Rename connector project</Line>
          <Line>-Verify that the following are updated:</Line>
          <Line>-EAR's .component</Line>
          <Line>-EAR's .project</Line>
          <Line>-EAR's application.xml</Line>
          <Line>3.3) Rename EAR</Line>
          <Line>-Verify servers.xml is updated</Line>
          <Line>-Verify server view is updated</Line>
          <Line>3.4) Delete standalone web</Line>
          <Line>-Verify servers.xml is updated</Line>
          <Line>-Verify server view is updated</Line>
          <Line />
          <Line>4) Classpath update tests</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When deleting a module or utility project from the J2EE perspective, there is no 
option to also delete references to the deleted projects. As a result, the EAR's
application.xml is not updated properly and the deleted module is still shown in
the module list. In one case, an internal error was also received when trying to
delete one of these references.
Refactoring actions are due for M9
This will be fixed as part of the refactoring and deletion enhancement 92426

*** This bug has been marked as a duplicate of 92426 ***
Closing
Closing
Reopening. Although all the duped bug has been resolved as fixed, I can easily reproduce on 1.0.1.
hey Tim - the current refactoring logic should be removing the J2EE dependencies and, if the has an associated server module, a call is made to remove it (via ServerUtils.modifyModules()); are you seeing stale application.xml entries?
Yes, there were stale application.xml entries. The project was not added to a server so I can't comment there.
The stale application.xml entries should definitely be getting removed; anything interesting in the log? I'm downloading the latest build and will try things out with that now...
Several interesting things in the log, however they are all exceptions in other components.
hi Tim, I just ran through my refactoring smoke test (see below) on M200602070438 and everything worked as expected; I did hit one fatal error executing a new project wizard (https://bugs.eclipse.org/bugs/show_bug.cgi?id=126787) so it does appear there are stability issues with the build; another thing I noticed during execution of the smoke test was that a newly created dynamic web project did not initially appear as a choice to add to a server (I ended up deleting and recreating and was able to add it - was not able to repro that so I'm not clear what was going on there...); although neither of these issues caused refactoring problems for me, perhaps some of the other exceptions you saw in the log could have been behind the failure to remove the application.xml entries: the refactoring logic will only execute if the deleted/renamed project has the ModuleCoreNature and application.xml entries are only updated if a .component dependency exists between the EAR and module project; so, if some failure caused problems with the addition of the ModuleCoreNature, .component dependency creation or functioning of the DependencyGraphManager, the refactoring logic will not execute.

If have a reliable repro case, please let me know the build and set of steps and send it back my way.

------------------------------------------------------
Smoke Test for Refactoring:

0) Start with a empty workspace

1) Create Test Artifacts

   1.1) Create Generic WLS 9.0 server type
   1.2) Create Generic WLS 9.0 server instance
   1.3) Create an EAR project
   1.4) Create a Utility project, add to EAR
   1.5) Create a dynamic Web project, add to EAR
   1.6) Create an EJB project (w/ client project), add to EAR
   1.7) Create a connector project, add to EAR
   1.8) Create a standalone web project
   
2) Create Test Dependencies

   2.1) Add J2EE dependence from Web to EJB (via client)
   2.2) Add Web Lib dependence from Web to Utility
   2.3) Add EAR to server instance
   2.4) Add standalone web to server instance

3) Project Refactoring Tests

   3.1) Rename Utility project
        -Verify that the following are updated:
                -EAR's .component
                -EAR's .project
                -Web's .component (as web lib)
                -Web's .project
                -Web's .classpath
                -NOT Web's MANIFEST.MF
   3.2) Rename EJB client project
        -Verify that the following are updated:
                -EAR's .component
                -EAR's .project
                -Web's .component (not as web lib)
                -Web's .project
                -Web's .classpath
                -Web's MANIFEST.MF
                -EJB's .component
                -EJB's ejb-jar.xml
   3.3) Rename connector project
        -Verify that the following are updated:
                -EAR's .component
                -EAR's .project
                -EAR's application.xml          
   3.3) Rename EAR
        -Verify servers.xml is updated
        -Verify server view is updated
   3.4) Delete standalone web
        -Verify servers.xml is updated
        -Verify server view is updated

4) Classpath update tests

   4.1) Add src path to Utility project
        -Verify that mapping is added to .component file
   4.2) Remove src path from Utility project
        -Verify that mapping is removed from .component file 
Verifed, it's now working. Closing.</WithStack>
    <WithOutStack>When deleting a module or utility project from the J2EE perspective, there is no 
option to also delete references to the deleted projects. As a result, the EAR's
application.xml is not updated properly and the deleted module is still shown in
the module list. In one case, an internal error was also received when trying to
delete one of these references.
Refactoring actions are due for M9
This will be fixed as part of the refactoring and deletion enhancement 92426

*** This bug has been marked as a duplicate of 92426 ***
Closing
Closing
Reopening. Although all the duped bug has been resolved as fixed, I can easily reproduce on 1.0.1.
hey Tim - the current refactoring logic should be removing the J2EE dependencies and, if the has an associated server module, a call is made to remove it (via ServerUtils.modifyModules()); are you seeing stale application.xml entries?
Yes, there were stale application.xml entries. The project was not added to a server so I can't comment there.
The stale application.xml entries should definitely be getting removed; anything interesting in the log? I'm downloading the latest build and will try things out with that now...
Several interesting things in the log, however they are all exceptions in other components.
hi Tim, I just ran through my refactoring smoke test (see below) on M200602070438 and everything worked as expected; I did hit one fatal error executing a new project wizard (https://bugs.eclipse.org/bugs/show_bug.cgi?id=126787) so it does appear there are stability issues with the build; another thing I noticed during execution of the smoke test was that a newly created dynamic web project did not initially appear as a choice to add to a server (I ended up deleting and recreating and was able to add it - was not able to repro that so I'm not clear what was going on there...); although neither of these issues caused refactoring problems for me, perhaps some of the other exceptions you saw in the log could have been behind the failure to remove the application.xml entries: the refactoring logic will only execute if the deleted/renamed project has the ModuleCoreNature and application.xml entries are only updated if a .component dependency exists between the EAR and module project; so, if some failure caused problems with the addition of the ModuleCoreNature, .component dependency creation or functioning of the DependencyGraphManager, the refactoring logic will not execute.

If have a reliable repro case, please let me know the build and set of steps and send it back my way.

------------------------------------------------------
Smoke Test for Refactoring:

0) Start with a empty workspace

1) Create Test Artifacts

   1.1) Create Generic WLS 9.0 server type
   1.2) Create Generic WLS 9.0 server instance
   1.3) Create an EAR project
   1.4) Create a Utility project, add to EAR
   1.5) Create a dynamic Web project, add to EAR
   1.6) Create an EJB project (w/ client project), add to EAR
   1.7) Create a connector project, add to EAR
   1.8) Create a standalone web project
   
2) Create Test Dependencies

   2.1) Add J2EE dependence from Web to EJB (via client)
   2.2) Add Web Lib dependence from Web to Utility
   2.3) Add EAR to server instance
   2.4) Add standalone web to server instance

3) Project Refactoring Tests

   3.1) Rename Utility project
        -Verify that the following are updated:
                -EAR's .component
                -EAR's .project
                -Web's .component (as web lib)
                -Web's .project
                -Web's .classpath
                -NOT Web's MANIFEST.MF
   3.2) Rename EJB client project
        -Verify that the following are updated:
                -EAR's .component
                -EAR's .project
                -Web's .component (not as web lib)
                -Web's .project
                -Web's .classpath
                -Web's MANIFEST.MF
                -EJB's .component
                -EJB's ejb-jar.xml
   3.3) Rename connector project
        -Verify that the following are updated:
                -EAR's .component
                -EAR's .project
                -EAR's application.xml          
   3.3) Rename EAR
        -Verify servers.xml is updated
        -Verify server view is updated
   3.4) Delete standalone web
        -Verify servers.xml is updated
        -Verify server view is updated

4) Classpath update tests

   4.1) Add src path to Utility project
        -Verify that mapping is added to .component file
   4.2) Remove src path from Utility project
        -Verify that mapping is removed from .component file 
Verifed, it's now working. Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108074" />
    <CreationDate amount="2005-08-26 00:25:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="wst.xml" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>format should not change whitespace in xsl:text elements</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>by definition, they are to be used for significant whitespace
*** Bug 126868 has been marked as a duplicate of this bug. ***
(formatting bug)
fixed as part of enhancement bug 176093
patch found in bug 84688

formatter now respects whitespace in xsl:text &amp; xsl:attribute elements
verified in wtp2.0 M6 200704021416</WithStack>
    <WithOutStack>by definition, they are to be used for significant whitespace
*** Bug 126868 has been marked as a duplicate of this bug. ***
(formatting bug)
fixed as part of enhancement bug 176093
patch found in bug 84688

formatter now respects whitespace in xsl:text &amp; xsl:attribute elements
verified in wtp2.0 M6 200704021416</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108075" />
    <CreationDate amount="2005-08-26 00:45:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="jst.jsp" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Incorrect copyrights in org/eclipse/jst/jsp/core/internal/java/jspel/ELGenerator</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="multicomment">
        <location start="955" end="1484" />
        <code>/*******************************************************************************
 * Copyright (c) 2005 BEA Systems and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     BEA Systems - initial implementation
 *     
 *******************************************************************************/</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Incorrect copyrights in 
org/eclipse/jst/jsp/core/internal/java/jspel/ELGenerator.java
(the org.eclipse.jst.jsp.core plugin).

There are words in there that are causing concern with lawyers.  Can we please 
fix it for 3.1.1?
this is either a dup of Bug 107845 or as a result of Bug 107845 (im not sure 
what the offending words are)
It's a dup, but I'm going to leave this bug open to track getting it into the 
0.7.1 release.  It has only been fixed in the 1.0 stream by that other 
defect.  

The most offending words were "The software contained on this media is 
proprietary to and embodies the confidential technology of BEA Systems, Inc."
Agreed, that's offensive enough :) 
that we should fix that maintenance branch too. 
released to 

M-M20050827-200508270841
For convenience, I'll document here I changed the one "offensive" copyright as
below. I did not change all the other more minor improvements to copyrights that 
have been made in head. 


/*******************************************************************************
 * Copyright (c) 2005 BEA Systems and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     BEA Systems - initial implementation
 *     
 *******************************************************************************/
This bug was moved to 'closed' state, since it is so old and it is assumed really fixed and no longer useful or need further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error.</WithStack>
    <WithOutStack>Incorrect copyrights in 
org/eclipse/jst/jsp/core/internal/java/jspel/ELGenerator.java
(the org.eclipse.jst.jsp.core plugin).

There are words in there that are causing concern with lawyers.  Can we please 
fix it for 3.1.1?
this is either a dup of Bug 107845 or as a result of Bug 107845 (im not sure 
what the offending words are)
It's a dup, but I'm going to leave this bug open to track getting it into the 
0.7.1 release.  It has only been fixed in the 1.0 stream by that other 
defect.  

The most offending words were "The software contained on this media is 
proprietary to and embodies the confidential technology of BEA Systems, Inc."
Agreed, that's offensive enough :) 
that we should fix that maintenance branch too. 
released to 

M-M20050827-200508270841
For convenience, I'll document here I changed the one "offensive" copyright as
below. I did not change all the other more minor improvements to copyrights that 
have been made in head. 


/*******************************************************************************
 * Copyright (c) 2005 BEA Systems and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     BEA Systems - initial implementation
 *     
 *******************************************************************************/
This bug was moved to 'closed' state, since it is so old and it is assumed really fixed and no longer useful or need further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108076" />
    <CreationDate amount="2005-08-26 00:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Javadoc attachments are broken</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: I-20050823

In said build, the platform.doc.isv, pde.doc.user and jdt.doc.user have become 
JARd and changed their internal structure.
However, the javadoc locations in the plugin.xml were not updated, so PDE is 
now attaching invalid javadoc locations to libraries.
Created attachment 26519
Patch for jdt.doc.isv
Created attachment 26520
Patch for platform.doc.isv
Dani/Sonia, please release the patches attached above and version the 
corresponding projects for next week's I-build.
I'll just take care of both right now.
Patches committed and projects released.

Wassim, just wondering: why do we need both additions i.e. 'doc.zip!' and
archive=true?
actually, we just removed them, not added them.

does that answer the question or did I not understand the question?
Mmh. Was before I my first coffee ;-)</WithStack>
    <WithOutStack>Build: I-20050823

In said build, the platform.doc.isv, pde.doc.user and jdt.doc.user have become 
JARd and changed their internal structure.
However, the javadoc locations in the plugin.xml were not updated, so PDE is 
now attaching invalid javadoc locations to libraries.
Created attachment 26519
Patch for jdt.doc.isv
Created attachment 26520
Patch for platform.doc.isv
Dani/Sonia, please release the patches attached above and version the 
corresponding projects for next week's I-build.
I'll just take care of both right now.
Patches committed and projects released.

Wassim, just wondering: why do we need both additions i.e. 'doc.zip!' and
archive=true?
actually, we just removed them, not added them.

does that answer the question or did I not understand the question?
Mmh. Was before I my first coffee ;-)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108077" />
    <CreationDate amount="2005-08-26 02:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-build" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>I can't use "clean" on windows platform,because it use linux command style "rm -rf".</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I'm a Chinese  :)

When I use 'rebuild project',eclipse show me "rm -rf" command is invalidation.
I know the 'rm' command shoud be linux commmand.But I run eclipse on windows 
platform.Why CDT-rebuild always use 'rm' command?

I search the project,then I found '.cdtbuild' file.There is 
a 'cleanCommand="rm -rf"' property in 'configuration' element.I modify "rm -rf" 
to "del /f /q".Then the problem was gone,but another was coming.

If source file was placed in project's root folder,it's ok,no problem.But if
source file was placed in a subfolder,for example "src/test.c",the 'del' command
think '/test.c' as a parameter.It's terrible!!!
if my english syntax has wrong,tell me please,thanks.
I read the help,found 'Standard Make projects' can define my own 'makefile'.
Why 'Managed Make projects' can't do this?
Although CDT can auto generate 'makefile' for 'Managed Make projects',but I 
wish to modify the 'makefile' templete.

How can I do it???
Here are 2 pieces of information regarding the Managed Build System (MBS):

-  On Windows, MBS provides support for the Cygwin tools.  Cygwin has an 'rm' 
command, so the clean command works.  Are you using Cygwin?  If you are using a 
different tool-chain, you can set the clean command to whatever you want.

-  MBS does not use a 'template' but the makefiles that it generates do include 
3 optional user-defined makefile entries: makefile.init, makefile.defs, 
makefile.targets.  See a generated makefile for where these are included.

(In reply to comment #3)
&gt; Here are 2 pieces of information regarding the Managed Build System (MBS):
&gt; -  On Windows, MBS provides support for the Cygwin tools.  Cygwin has an 'rm' 
&gt; command, so the clean command works.  Are you using Cygwin?  If you are using 
a 
&gt; different tool-chain, you can set the clean command to whatever you want.
&gt; -  MBS does not use a 'template' but the makefiles that it generates do 
include 
&gt; 3 optional user-defined makefile entries: makefile.init, makefile.defs, 
&gt; makefile.targets.  See a generated makefile for where these are included.


I'm using MinGW.How to set clean command?
How to find user-defined makefile entries?
The problem has been solved.I install MSYS.
The 'rm' command includes in MSYS.
Thank you very much.
&gt; How to find user-defined makefile entries?

If you still want to do this, makefile.init, makefile.defs, 
makefile.targets are files that you can create in your project directory that 
will be included by the main makefile.</WithStack>
    <WithOutStack>I'm a Chinese  :)

When I use 'rebuild project',eclipse show me "rm -rf" command is invalidation.
I know the 'rm' command shoud be linux commmand.But I run eclipse on windows 
platform.Why CDT-rebuild always use 'rm' command?

I search the project,then I found '.cdtbuild' file.There is 
a 'cleanCommand="rm -rf"' property in 'configuration' element.I modify "rm -rf" 
to "del /f /q".Then the problem was gone,but another was coming.

If source file was placed in project's root folder,it's ok,no problem.But if
source file was placed in a subfolder,for example "src/test.c",the 'del' command
think '/test.c' as a parameter.It's terrible!!!
if my english syntax has wrong,tell me please,thanks.
I read the help,found 'Standard Make projects' can define my own 'makefile'.
Why 'Managed Make projects' can't do this?
Although CDT can auto generate 'makefile' for 'Managed Make projects',but I 
wish to modify the 'makefile' templete.

How can I do it???
Here are 2 pieces of information regarding the Managed Build System (MBS):

-  On Windows, MBS provides support for the Cygwin tools.  Cygwin has an 'rm' 
command, so the clean command works.  Are you using Cygwin?  If you are using a 
different tool-chain, you can set the clean command to whatever you want.

-  MBS does not use a 'template' but the makefiles that it generates do include 
3 optional user-defined makefile entries: makefile.init, makefile.defs, 
makefile.targets.  See a generated makefile for where these are included.

(In reply to comment #3)
&gt; Here are 2 pieces of information regarding the Managed Build System (MBS):
&gt; -  On Windows, MBS provides support for the Cygwin tools.  Cygwin has an 'rm' 
&gt; command, so the clean command works.  Are you using Cygwin?  If you are using 
a 
&gt; different tool-chain, you can set the clean command to whatever you want.
&gt; -  MBS does not use a 'template' but the makefiles that it generates do 
include 
&gt; 3 optional user-defined makefile entries: makefile.init, makefile.defs, 
&gt; makefile.targets.  See a generated makefile for where these are included.


I'm using MinGW.How to set clean command?
How to find user-defined makefile entries?
The problem has been solved.I install MSYS.
The 'rm' command includes in MSYS.
Thank you very much.
&gt; How to find user-defined makefile entries?

If you still want to do this, makefile.init, makefile.defs, 
makefile.targets are files that you can create in your project directory that 
will be included by the main makefile.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108078" />
    <CreationDate amount="2005-08-26 02:52:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[Patch] Apply patch forces me to save all files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>R3.1

AFAIK the patch file contains the information about which files will be touched
and hence I cannot understand why I have to save all my files in order to be
allowed to apply that patch.

NOTE: I cannot even veto the save and continue.
This doesn't seem to be a problem anymore as the dialog can now be dismissed.
Remy, if you refer to the "Save Resources" dialog, it's true that it can be canceled but it's not doing it exactly the way we would like it to (see bug 208022). Also, if I understood Daniel correctly, he claimed about the fact that he's asked to save _all_ dirty resources.

I think the dialog should be either changed to look more like the "Save Modified
Resources" dialog which pops out prior refactoring (lists resources that need to saved before proceeding) or we could uncheck resources which are not included in the patch (on the modified resources list in the current dialog).
I would expect that I am only asked to save files that are indeed part of the patch. Applying a patch is different from a refactoring as you already know upfront which files will be modified (while this list isn't known when you start a refactoring) i.e. only ask to save dirty files that are part of the patch as the other dirty files are irrelevant for this operation.</WithStack>
    <WithOutStack>R3.1

AFAIK the patch file contains the information about which files will be touched
and hence I cannot understand why I have to save all my files in order to be
allowed to apply that patch.

NOTE: I cannot even veto the save and continue.
This doesn't seem to be a problem anymore as the dialog can now be dismissed.
Remy, if you refer to the "Save Resources" dialog, it's true that it can be canceled but it's not doing it exactly the way we would like it to (see bug 208022). Also, if I understood Daniel correctly, he claimed about the fact that he's asked to save _all_ dirty resources.

I think the dialog should be either changed to look more like the "Save Modified
Resources" dialog which pops out prior refactoring (lists resources that need to saved before proceeding) or we could uncheck resources which are not included in the patch (on the modified resources list in the current dialog).
I would expect that I am only asked to save files that are indeed part of the patch. Applying a patch is different from a refactoring as you already know upfront which files will be modified (while this list isn't known when you start a refactoring) i.e. only ask to save dirty files that are part of the patch as the other dirty files are irrelevant for this operation.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108079" />
    <CreationDate amount="2005-08-26 03:01:00 -0400" />
    <DupId amount="101796" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>content assist dropdown skips entries</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- happens only when there's a _vertical_ scrollbar</Line>
          <Line>- if it happens the content of the dropdown jumps several lines up or dow (depending on the</Line>
          <Line>scrolling direction), so that the entry after (down) or before (up) becomes the new first (up) or</Line>
          <Line>last (down) line of the visible area.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>if the content assist's dropdown hast too many entries and thus gets scrollbars, the horicontal 
scrollbar obscures the lowermost entry! thus, scrolling trough the list with the up-/down-keys 
never shows the entry obscured -- probably because the dropdown does not calculate the space 
the horicontal scrollbar needs.
additionally:
- happens only when there's a _vertical_ scrollbar
- if it happens the content of the dropdown jumps several lines up or dow (depending on the 
scrolling direction), so that the entry after (down) or before (up) becomes the new first (up) or 
last (down) line of the visible area.


*** This bug has been marked as a duplicate of 101796 ***</WithStack>
    <WithOutStack>if the content assist's dropdown hast too many entries and thus gets scrollbars, the horicontal 
scrollbar obscures the lowermost entry! thus, scrolling trough the list with the up-/down-keys 
never shows the entry obscured -- probably because the dropdown does not calculate the space 
the horicontal scrollbar needs.
additionally:
- happens only when there's a _vertical_ scrollbar
- if it happens the content of the dropdown jumps several lines up or dow (depending on the 
scrolling direction), so that the entry after (down) or before (up) becomes the new first (up) or 
last (down) line of the visible area.


*** This bug has been marked as a duplicate of 101796 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108080" />
    <CreationDate amount="2005-08-26 03:59:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Preview string format parameter default value in edit parameter dialog doesn't return right result</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. new a string type parameter</Line>
          <Line>2. Type "abcdefg" in default value dialog</Line>
          <Line>3. Click on Change... button to show up format generator dialog</Line>
          <Line>4. Select string format as customer</Line>
          <Line>5. Choose zip code+4</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>description:
Preview string format parameter default value in edit parameter dialog doesn't 
return right result

Steps to reproduce:
1. new a string type parameter
2. Type "abcdefg" in default value dialog
3. Click on Change... button to show up format generator dialog
4. Select string format as customer
5. Choose zip code+4

actual result:
"abcd-efg" display in preview pane

expected result:
"abc-defg" is expected

reason:
"abcdefg" is treat as the default value here to be previewed, while only 
abcdefg is the actual default value. quotation mark is not expected.
This result is returened by core formater api.
Please see the comments. The user inputs the default value as an expression:
"abcdefg" (to be a valid javascript expression, he adds quotes around the value)
and the expected result is use ZIP+4 to format the value abcdefg(not including
the quotes). The UI use ZIP+4 to format the javascript expression instead of the
default value.

So it is the UI's issue. It should format the value instead of the expression.
The expression value is decided at runtime. UI never parses any expressions.
verified in build 20051108</WithStack>
    <WithOutStack>description:
Preview string format parameter default value in edit parameter dialog doesn't 
return right result

Steps to reproduce:
1. new a string type parameter
2. Type "abcdefg" in default value dialog
3. Click on Change... button to show up format generator dialog
4. Select string format as customer
5. Choose zip code+4

actual result:
"abcd-efg" display in preview pane

expected result:
"abc-defg" is expected

reason:
"abcdefg" is treat as the default value here to be previewed, while only 
abcdefg is the actual default value. quotation mark is not expected.
This result is returened by core formater api.
Please see the comments. The user inputs the default value as an expression:
"abcdefg" (to be a valid javascript expression, he adds quotes around the value)
and the expected result is use ZIP+4 to format the value abcdefg(not including
the quotes). The UI use ZIP+4 to format the javascript expression instead of the
default value.

So it is the UI's issue. It should format the value instead of the expression.
The expression value is decided at runtime. UI never parses any expressions.
verified in build 20051108</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108081" />
    <CreationDate amount="2005-08-26 04:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>no shortkey for shift left.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>There is no short key for the "Edit/shift left" command.

There is one for  "Edit/shift right".
End CDT 2.1, There is one for  "Edit/shift left" too. Bur no more en CDT 3.0.
shift tab is ok (but not mentioned in the menu).
(The shift+ctrl+I has disapered.)

The shorkkey mentioned for shift left/right shoud be with the tab key (instead
of the ctrl+I).
In my opinion, the shift left/right functions should be independant of the code formatter, merely having the effect of adding/removing a tab width of whitespace from the beginning of the line. Therefore they should have their own shortcut keys.
The "shift+ctrl+I" shortcut invokes the code formatter on the currently selected block of code, which then formats it according to your code formatting rules. This is not analogous to using either shift right or shift left functions(sometimes I want to shift a block of code or piece of text left or right out of convention!).

It would be nice if the shift left/right functions actually had entries in the Window &gt; Preferences &gt; General &gt; Keys &gt; View editor and I would propose that "Ctrl+[" be used for shift left and "Ctr+]" be used for shift right by default, as I can't see any existing entries for these combinations.
Ctrl+Shft+I does not invoke the code formatter, I suppose you mean Ctrl+I which fixes the line indent according to the code style.

Shift Left is bound to Shift+TAB
Shift Right is bound to TAB
 - if at least one complete line is selected.

Those are no regular key bindings, though, ie. you cannot redefine them.
Anyway, the shift actions are a platform feature and we don't plan to override them.
Please open a bug against Platform/Text to support regular key bindings for shift left/right.
Yeah I meant Ctrl+I, sorry!

I was gonna suggest this bug be moved to a higher level, but I'm new to this and wasn't sure where. I wasn't aware of the shift+tab binding and couldn't find any shortcut key information on it in any docs or that preference page, so assumed it didn't exist. I'll create a bug where you suggest. Cheers.</WithStack>
    <WithOutStack>There is no short key for the "Edit/shift left" command.

There is one for  "Edit/shift right".
End CDT 2.1, There is one for  "Edit/shift left" too. Bur no more en CDT 3.0.
shift tab is ok (but not mentioned in the menu).
(The shift+ctrl+I has disapered.)

The shorkkey mentioned for shift left/right shoud be with the tab key (instead
of the ctrl+I).
In my opinion, the shift left/right functions should be independant of the code formatter, merely having the effect of adding/removing a tab width of whitespace from the beginning of the line. Therefore they should have their own shortcut keys.
The "shift+ctrl+I" shortcut invokes the code formatter on the currently selected block of code, which then formats it according to your code formatting rules. This is not analogous to using either shift right or shift left functions(sometimes I want to shift a block of code or piece of text left or right out of convention!).

It would be nice if the shift left/right functions actually had entries in the Window &gt; Preferences &gt; General &gt; Keys &gt; View editor and I would propose that "Ctrl+[" be used for shift left and "Ctr+]" be used for shift right by default, as I can't see any existing entries for these combinations.
Ctrl+Shft+I does not invoke the code formatter, I suppose you mean Ctrl+I which fixes the line indent according to the code style.

Shift Left is bound to Shift+TAB
Shift Right is bound to TAB
 - if at least one complete line is selected.

Those are no regular key bindings, though, ie. you cannot redefine them.
Anyway, the shift actions are a platform feature and we don't plan to override them.
Please open a bug against Platform/Text to support regular key bindings for shift left/right.
Yeah I meant Ctrl+I, sorry!

I was gonna suggest this bug be moved to a higher level, but I'm new to this and wasn't sure where. I wasn't aware of the shift+tab binding and couldn't find any shortcut key information on it in any docs or that preference page, so assumed it didn't exist. I'll create a bug where you suggest. Cheers.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108082" />
    <CreationDate amount="2005-08-26 04:28:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Error massage shows up when preview a string type parameter which has default value with quotation.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. New a string type text box parameter</Line>
          <Line>2. Set default value "test" with quotation</Line>
          <Line>3. Change the contrl type to list box</Line>
          <Line>4. Type some value for list box</Line>
          <Line>5. Save and preview</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>details:
Error massage shows up when preview a string type parameter which has default 
value with quotation.

steps to reproduce:
1. New a string type text box parameter
2. Set default value "test" with quotation
3. Change the contrl type to list box
4. Type some value for list box 
5. Save and preview 

actual result:
"±¨±íÒ³ÉÏ´æÔÚ´íÎó: 
- There are error(s) in ScalarParameter:ÐÂ½¨²ÎÊý 
Error0 : Failed to evaluate ""test""(1 time)detail: Failed to 
evaluate ""test""missing ; before statement (#1)" displays in preivew page

expected result:
No such error message
This seems to be a bug because default value is an expression, and "test" should just evaluate to string test. 
The designer create ""test"" for the default value which is not a valid java-script expression. 
Following comments from Wenbin, GUI add double quote for this case if the type is string. 
So user need know they don't need add more double quote here. GUI can evaluate expression at design time, so we can guess if user want to input a string with qutoe or not.
Verified in build 20051222.</WithStack>
    <WithOutStack>details:
Error massage shows up when preview a string type parameter which has default 
value with quotation.

steps to reproduce:
1. New a string type text box parameter
2. Set default value "test" with quotation
3. Change the contrl type to list box
4. Type some value for list box 
5. Save and preview 

actual result:
"±¨±íÒ³ÉÏ´æÔÚ´íÎó: 
- There are error(s) in ScalarParameter:ÐÂ½¨²ÎÊý 
Error0 : Failed to evaluate ""test""(1 time)detail: Failed to 
evaluate ""test""missing ; before statement (#1)" displays in preivew page

expected result:
No such error message
This seems to be a bug because default value is an expression, and "test" should just evaluate to string test. 
The designer create ""test"" for the default value which is not a valid java-script expression. 
Following comments from Wenbin, GUI add double quote for this case if the type is string. 
So user need know they don't need add more double quote here. GUI can evaluate expression at design time, so we can guess if user want to input a string with qutoe or not.
Verified in build 20051222.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108083" />
    <CreationDate amount="2005-08-26 04:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-build" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Import/export project/workspace from/to other IDEs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Hello,

We would like to be able to import existing open-source projects in Eclipse.

These projects have often IDE settings files (such as for Visual C/Studio, Dev-
C++, CodeBlocks, Anjuta, etc.) which could be reused.

Even CodeBlocks which is a very recent IDE developped by a sole person is able 
to do it :-)

A related feature would be to export the workspace settings (with the relative 
paths of the files https://bugs.eclipse.org/bugs/show_bug.cgi?id=82179).

Thanks
You might want to break this request up a bit. There are many types of 
projects that you may want to import as you mentioned. An open ended 
enhancement request like this is impossible to complete. Please raise a 
request for each environment you care about.</WithStack>
    <WithOutStack>Hello,

We would like to be able to import existing open-source projects in Eclipse.

These projects have often IDE settings files (such as for Visual C/Studio, Dev-
C++, CodeBlocks, Anjuta, etc.) which could be reused.

Even CodeBlocks which is a very recent IDE developped by a sole person is able 
to do it :-)

A related feature would be to export the workspace settings (with the relative 
paths of the files https://bugs.eclipse.org/bugs/show_bug.cgi?id=82179).

Thanks
You might want to break this request up a bit. There are many types of 
projects that you may want to import as you mentioned. An open ended 
enhancement request like this is impossible to complete. Please raise a 
request for each environment you care about.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108084" />
    <CreationDate amount="2005-08-26 04:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Search Occurences in File on keywords or any selected text</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>I find, that sometimes it's helpful to use grep to find occurences of a special
string in a file - especially when modifying ANT scripts and property files by
hand, or when trying to find the use of the "synchronized" keyword, or even
"this" in java files.

What I really want is to be able to mark what I want to search for and use
"Search Occurences in File |&gt; selected" and have it shown in the Search window
with temporary bookmarks for easy access and without scope considerations - then
again perhaps being able to select different scopes would be nice: global,
project, file, method, current scope.

There's a possibility, that it should not be in "Search" but in "Edit|Find" with
an option to "find all" and "add search bookmark to the search view"

If you have tried Visual SlickEdit's "Find", then it has the functionality in an
odd way: type in what to search for, select "Files/Buffers &gt;&gt; " where you'll
select the single file/buffer you'll be searching in, then press "OK", and
"Global" after first match. Now the search window will list line number,
startindex, and the line itself ordered by line number ascending and per
file/buffer. These lines are really bookmarks into the files.

Per Holst

Version: 3.1.0
Build id: I20050627-1435
There are some plans to add it to Find/Replace but not in interaction with
search marks.</WithStack>
    <WithOutStack>I find, that sometimes it's helpful to use grep to find occurences of a special
string in a file - especially when modifying ANT scripts and property files by
hand, or when trying to find the use of the "synchronized" keyword, or even
"this" in java files.

What I really want is to be able to mark what I want to search for and use
"Search Occurences in File |&gt; selected" and have it shown in the Search window
with temporary bookmarks for easy access and without scope considerations - then
again perhaps being able to select different scopes would be nice: global,
project, file, method, current scope.

There's a possibility, that it should not be in "Search" but in "Edit|Find" with
an option to "find all" and "add search bookmark to the search view"

If you have tried Visual SlickEdit's "Find", then it has the functionality in an
odd way: type in what to search for, select "Files/Buffers &gt;&gt; " where you'll
select the single file/buffer you'll be searching in, then press "OK", and
"Global" after first match. Now the search window will list line number,
startindex, and the line itself ordered by line number ascending and per
file/buffer. These lines are really bookmarks into the files.

Per Holst

Version: 3.1.0
Build id: I20050627-1435
There are some plans to add it to Find/Replace but not in interaction with
search marks.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108085" />
    <CreationDate amount="2005-08-26 04:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-build" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Problem w/ file properties when the tool associated with the file changes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="singlecomment">
        <location start="1967" end="1978" />
        <code>// main.c</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1997" end="2043" />
        <code>int main( void ) { printf("Hello World!\n"); }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="REOPENED" />
    <resolution amount="" />
    <WithStack>Hello,

I am using Eclipse to compile a C++ open-source project (Ogre).

A subproject uses a .c file which is not recognised by the "Managed C++ Project"
as a file to compile.

I must manually configure it to compile with gcc and not g++ !

Look at the paragraph "6.1.4 - Compiling glprocs.c" on the instructions I 
wrote :
http://www.ogre3d.org/wiki/index.php/Building_Under_Eclipse_And_GCC#5_-
_Compile_Ogre_with_Eclipse


BTW, I discussed this point on the forum :
http://www.eclipse.org/newsportal/article.php?
id=8104&amp;group=eclipse.tools.cdt#8104

Furthermore, the Managed Build doesn't recognise .rc files.
(see 5.3.2 - Compiling win32 resources (OgreWin32Resources.rc))
but I know that there is a feature request for this point.

Thanks
The Managed Build System was changed in CDT 3.0 to use Eclipse content-types 
for defining the inputs to build tools.  The positive aspect of this change is 
that a user can change the set of file extensions that are considered to be 
part of the content-type.  g++ uses the C++ Source file content-type.  This 
does not, by default, include the .c extension.  You can modify the content-
type for a workspace or for a project.  To modify for a project, open the 
project properties and select "C/C++ File Types".  Select "Use project 
settings" and create a new entry the *.c as a C++ source file.

If there is already a feature request for windres, I will close this bugzilla.


(In reply to comment #1)
&gt; The Managed Build System was changed in CDT 3.0 to use Eclipse content-types 
&gt; for defining the inputs to build tools.  The positive aspect of this change 
&gt; is that a user can change the set of file extensions that are considered 
&gt; to be part of the content-type.  g++ uses the C++ Source file content-type.
&gt; This does not, by default, include the .c extension.

Wrong. 

g++ (at least a modern one) recognise .c files and compiles it correctly by 
automatically calling gcc. 

Try it with this superb sample :

// main.c
#include &lt;stdio.h&gt;
int main( void ) { printf("Hello World!\n"); }


&gt; You can modify the
&gt; content-type for a workspace or for a project.  To modify for a project, 
&gt; open the project properties and select "C/C++ File Types".  
&gt; Select "Use project settings" and create a new entry the *.c as a 
&gt; C++ source file. 

As said in the forum it doesn't work.



Created attachment 26585
C++ project with .c source file
&gt;I tried. It didn't work.
&gt;(Project Properties -&gt; Use project settings -&gt; new -&gt; Filename : .c  
&gt;Description : C++ Source File)

You need to specify "*.c", not ".c".


*** Bug 100891 has been marked as a duplicate of this bug. ***
*** Bug 109690 has been marked as a duplicate of this bug. ***
As someone else seems to have a similar problem, it could interest you to know 
that I still have my problem.

&gt; You need to specify "*.c", not ".c".

Of course, it used "*.c". It was in the bug message that I forgot to put 
the "*". This doesn't help.

Mixing C and C++ in a small, simplistic program works. But not a more complex 
with countless #define.

If you want to try I put a link in my first message.
Note that this tutorial was used by hundreds programmers and AFAIK none found a 
solution !

Bye

Can you send us the program?  We can't fix the problem unless we can reproduce 
it.

Created attachment 27213
Project containing a .c file which is not recognised.

As asked I send you a subproject containing the incriminating .c file.

(I removed from the zip the Eclipse workspace because of the 2Meg limit)

The project must be compiled in Release.

The problem is with the file "DEBUG\RenderSystems\GL\src\glprocs.c".
If you "Disable Custom Build Step" I was not able to compile the project.


If you need the whole project you can find it 
(as said several time) on this wiki : 
http://www.ogre3d.org/wiki/index.php/Building_Under_Eclipse_And_GCC
See the chapter "6.1 - Build RenderSystem_GL".
There is a problem with your project, because you created your custom build 
step for the .c source file before adding the *.c file extension.  That is why 
I hadn't seen the problem in any other projects.

There are two parts to the problem.  One part has to do with generating the 
makefiles.  I have checked in the fix for that.  The second part has to do with 
editing file properties for a file where the file properties were edited before 
the file extension was associated with a tool.  I don't have time to fix that 
part now, so we'll leave this report open.  I'm changing the Summary to be more 
specific.  Note for later: The problem is that the resource configuration code 
does not expect the build tool associated with a source file to ever change 
once the ResourceConfiguration is created.

I'm attaching a hand-modified .cdtbuild file that should work better for you.  
You can leave your .c file using the custom build step, or remove the custom 
build step.

Created attachment 27236
RenderSystems\GL\.cdtbuild</WithStack>
    <WithOutStack>Hello,

I am using Eclipse to compile a C++ open-source project (Ogre).

A subproject uses a .c file which is not recognised by the "Managed C++ Project"
as a file to compile.

I must manually configure it to compile with gcc and not g++ !

Look at the paragraph "6.1.4 - Compiling glprocs.c" on the instructions I 
wrote :
http://www.ogre3d.org/wiki/index.php/Building_Under_Eclipse_And_GCC#5_-
_Compile_Ogre_with_Eclipse


BTW, I discussed this point on the forum :
http://www.eclipse.org/newsportal/article.php?
id=8104&amp;group=eclipse.tools.cdt#8104

Furthermore, the Managed Build doesn't recognise .rc files.
(see 5.3.2 - Compiling win32 resources (OgreWin32Resources.rc))
but I know that there is a feature request for this point.

Thanks
The Managed Build System was changed in CDT 3.0 to use Eclipse content-types 
for defining the inputs to build tools.  The positive aspect of this change is 
that a user can change the set of file extensions that are considered to be 
part of the content-type.  g++ uses the C++ Source file content-type.  This 
does not, by default, include the .c extension.  You can modify the content-
type for a workspace or for a project.  To modify for a project, open the 
project properties and select "C/C++ File Types".  Select "Use project 
settings" and create a new entry the *.c as a C++ source file.

If there is already a feature request for windres, I will close this bugzilla.


(In reply to comment #1)
&gt; The Managed Build System was changed in CDT 3.0 to use Eclipse content-types 
&gt; for defining the inputs to build tools.  The positive aspect of this change 
&gt; is that a user can change the set of file extensions that are considered 
&gt; to be part of the content-type.  g++ uses the C++ Source file content-type.
&gt; This does not, by default, include the .c extension.

Wrong. 

g++ (at least a modern one) recognise .c files and compiles it correctly by 
automatically calling gcc. 

Try it with this superb sample :

// main.c
#include &lt;stdio.h&gt;
int main( void ) { printf("Hello World!\n"); }


&gt; You can modify the
&gt; content-type for a workspace or for a project.  To modify for a project, 
&gt; open the project properties and select "C/C++ File Types".  
&gt; Select "Use project settings" and create a new entry the *.c as a 
&gt; C++ source file. 

As said in the forum it doesn't work.



Created attachment 26585
C++ project with .c source file
&gt;I tried. It didn't work.
&gt;(Project Properties -&gt; Use project settings -&gt; new -&gt; Filename : .c  
&gt;Description : C++ Source File)

You need to specify "*.c", not ".c".


*** Bug 100891 has been marked as a duplicate of this bug. ***
*** Bug 109690 has been marked as a duplicate of this bug. ***
As someone else seems to have a similar problem, it could interest you to know 
that I still have my problem.

&gt; You need to specify "*.c", not ".c".

Of course, it used "*.c". It was in the bug message that I forgot to put 
the "*". This doesn't help.

Mixing C and C++ in a small, simplistic program works. But not a more complex 
with countless #define.

If you want to try I put a link in my first message.
Note that this tutorial was used by hundreds programmers and AFAIK none found a 
solution !

Bye

Can you send us the program?  We can't fix the problem unless we can reproduce 
it.

Created attachment 27213
Project containing a .c file which is not recognised.

As asked I send you a subproject containing the incriminating .c file.

(I removed from the zip the Eclipse workspace because of the 2Meg limit)

The project must be compiled in Release.

The problem is with the file "DEBUG\RenderSystems\GL\src\glprocs.c".
If you "Disable Custom Build Step" I was not able to compile the project.


If you need the whole project you can find it 
(as said several time) on this wiki : 
http://www.ogre3d.org/wiki/index.php/Building_Under_Eclipse_And_GCC
See the chapter "6.1 - Build RenderSystem_GL".
There is a problem with your project, because you created your custom build 
step for the .c source file before adding the *.c file extension.  That is why 
I hadn't seen the problem in any other projects.

There are two parts to the problem.  One part has to do with generating the 
makefiles.  I have checked in the fix for that.  The second part has to do with 
editing file properties for a file where the file properties were edited before 
the file extension was associated with a tool.  I don't have time to fix that 
part now, so we'll leave this report open.  I'm changing the Summary to be more 
specific.  Note for later: The problem is that the resource configuration code 
does not expect the build tool associated with a source file to ever change 
once the ResourceConfiguration is created.

I'm attaching a hand-modified .cdtbuild file that should work better for you.  
You can leave your .c file using the custom build step, or remove the custom 
build step.

Created attachment 27236
RenderSystems\GL\.cdtbuild</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108086" />
    <CreationDate amount="2005-08-26 04:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>problem with plug-in manifest editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>when i try to add a jar in the "classpath" section of the "runtime" tab of the 
plug-in manifest editor, i am not able to select the jar that constitues my 
own plug-in. however, if i don't specify my own jar in the bundle-classPath, i 
get a class not found exception when i try to run my program after having 
exported it with the product export wizard.
&gt;i am not able to select the jar that constitues my own plug-in.

I am not sure I understand what you mean.  could you please elaborate.

i have my product that includes my feature that includes my plug-in. exporting 
my product works fine. but when i start the exported program, my application 
class is not found. i solved this by putting myRuntime.jar onto the bundle-
classpath of my manifest.mf. however, i had to do this manually, as the 
selection of myRuntime.jar in the classpath section of the runtime tab of the 
plug-in manifest editor is not possible (probably because this jar does not 
exist at this moment, yet).
If the jar doesn't exist, you can't select it of course.  In this case, you 
add the library name via the 'New...' button, not "Add..."</WithStack>
    <WithOutStack>when i try to add a jar in the "classpath" section of the "runtime" tab of the 
plug-in manifest editor, i am not able to select the jar that constitues my 
own plug-in. however, if i don't specify my own jar in the bundle-classPath, i 
get a class not found exception when i try to run my program after having 
exported it with the product export wizard.
&gt;i am not able to select the jar that constitues my own plug-in.

I am not sure I understand what you mean.  could you please elaborate.

i have my product that includes my feature that includes my plug-in. exporting 
my product works fine. but when i start the exported program, my application 
class is not found. i solved this by putting myRuntime.jar onto the bundle-
classpath of my manifest.mf. however, i had to do this manually, as the 
selection of myRuntime.jar in the classpath section of the runtime tab of the 
plug-in manifest editor is not possible (probably because this jar does not 
exist at this moment, yet).
If the jar doesn't exist, you can't select it of course.  In this case, you 
add the library name via the 'New...' button, not "Add..."</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108087" />
    <CreationDate amount="2005-08-26 04:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Java conventions default formatter settings confused</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050823 (perhaps a 3.1.1 issue?)

The Java conventions formatter settings have been changed to fix bug XXX. They
now specify

  tab_char=SPACE
  tab_size=8
  indent_size=4

This looks correct, but isn't: the formatter will not interpret the indent_size
setting when tab_char is SPACE, but rather take the tab_size setting as
indentation length. Therefore, the correct setting should read:

  tab_char=SPACE
  tab_size=4
  (indent_size=8) // this is not interpreted by the formatter, but the editor
uses it as the visual tab length setting, so please set it to 8

or 

  tab_char=MIXED
  tab_size=8
  indent_size=4

I will attach a patch that implements the former.
Created attachment 26521
DefaultCodeFormatterOptions.java.diff
The previous bug fix where we changed this value is bug 104765.
The change has not been backported to 3.1.1.

According to your comment, the right solution would be:
  tab_char=MIXED
  tab_size=8
  indent_size=4

  tab_char=SPACE
  tab_size=4
  (indent_size=8) // this is not interpreted by the formatter, but the editor
uses it as the visual tab length setting, so please set it to 8

doesn't solve anything because the tab is till four characters. So it might look
good in Eclipse, but it would be wrong outside of Eclipse in a simple text editor.
I checked some code from code librairies and it doesn't seem to follow the Java
conventions.
Using MIXED as the tab char will end up having tabs and spaces. But it appears
that only spaces are using. The conventions themselves don't appear to specify
what should be used.
From the conventions:
"Four spaces should be used as the unit of indentation. The exact construction
of the indentation (spaces vs. tabs) is unspecified. Tabs must be set exactly
every 8 spaces (not 4)."
So the MIXED mode might not be wrong.
What do you think?
(In reply to comment #2)
&gt;   tab_char=SPACE
&gt;   tab_size=4
&gt;   (indent_size=8)
&gt; 
&gt; doesn't solve anything because the tab is till four characters. So it might look
&gt; good in Eclipse, but it would be wrong outside of Eclipse in a simple text 
&gt; editor.

I don't see how this could be the case - if tab_char is SPACE, it will look good
everywhere since the formatter will not insert any tabs! So, code formatted with
these settings will look correct in any editor.

Of course, to display mixed indents correctly (e.g. rt.jar code), the *editor*
still needs to know how to display tabs, but not the *formatter*!

What the Java editor does in this case: it uses the indentation_size setting
(which is not used by the formatter) to store the visual tab length setting.
This is why I asked to set it to 8.

(In reply to comment #3)
&gt; So the MIXED mode might not be wrong.
&gt; What do you think?

I agree. The conventions do not specify either mode, so either of the
combinations correctly implements the Java conventions.
  tab_char=MIXED
  tab_size=8
  indent_size=4

This seems to be the best solution for me. Unfortunately this is not backward compatible with the existing Java conventions. But sine we have an Eclipse profile that is the default profile, we might want to change it in the Java conventions.
The indent_size to 8 seems to be wrong even if this is what the editor is using.
Do you want this to be fixed for 3.2?
(In reply to comment #6)
&gt; Do you want this to be fixed for 3.2?

(sorry for the late answer)

Yes please - the settings from your comment 5 are fine for me.
would be nice for 3.2!
So compare to existing settings. This simply means to change the tab char from SPACE to MIXED.
Tom,

Do you have any tests that rely on the old settings?
I am running all our tests.
(In reply to comment #10)
&gt; Tom,
&gt; 
&gt; Do you have any tests that rely on the old settings?

I don't expect any problems as we normally use eclipse settings or custom ones with INDENT_CHAR=SPACE. I am running the tests with the modifications right now, though.
Fixed and released in HEAD.
+1 for 3.2RC1
Verified for 3.2 RC1 using build I20060413-0010</WithStack>
    <WithOutStack>I20050823 (perhaps a 3.1.1 issue?)

The Java conventions formatter settings have been changed to fix bug XXX. They
now specify

  tab_char=SPACE
  tab_size=8
  indent_size=4

This looks correct, but isn't: the formatter will not interpret the indent_size
setting when tab_char is SPACE, but rather take the tab_size setting as
indentation length. Therefore, the correct setting should read:

  tab_char=SPACE
  tab_size=4
  (indent_size=8) // this is not interpreted by the formatter, but the editor
uses it as the visual tab length setting, so please set it to 8

or 

  tab_char=MIXED
  tab_size=8
  indent_size=4

I will attach a patch that implements the former.
Created attachment 26521
DefaultCodeFormatterOptions.java.diff
The previous bug fix where we changed this value is bug 104765.
The change has not been backported to 3.1.1.

According to your comment, the right solution would be:
  tab_char=MIXED
  tab_size=8
  indent_size=4

  tab_char=SPACE
  tab_size=4
  (indent_size=8) // this is not interpreted by the formatter, but the editor
uses it as the visual tab length setting, so please set it to 8

doesn't solve anything because the tab is till four characters. So it might look
good in Eclipse, but it would be wrong outside of Eclipse in a simple text editor.
I checked some code from code librairies and it doesn't seem to follow the Java
conventions.
Using MIXED as the tab char will end up having tabs and spaces. But it appears
that only spaces are using. The conventions themselves don't appear to specify
what should be used.
From the conventions:
"Four spaces should be used as the unit of indentation. The exact construction
of the indentation (spaces vs. tabs) is unspecified. Tabs must be set exactly
every 8 spaces (not 4)."
So the MIXED mode might not be wrong.
What do you think?
(In reply to comment #2)
&gt;   tab_char=SPACE
&gt;   tab_size=4
&gt;   (indent_size=8)
&gt; 
&gt; doesn't solve anything because the tab is till four characters. So it might look
&gt; good in Eclipse, but it would be wrong outside of Eclipse in a simple text 
&gt; editor.

I don't see how this could be the case - if tab_char is SPACE, it will look good
everywhere since the formatter will not insert any tabs! So, code formatted with
these settings will look correct in any editor.

Of course, to display mixed indents correctly (e.g. rt.jar code), the *editor*
still needs to know how to display tabs, but not the *formatter*!

What the Java editor does in this case: it uses the indentation_size setting
(which is not used by the formatter) to store the visual tab length setting.
This is why I asked to set it to 8.

(In reply to comment #3)
&gt; So the MIXED mode might not be wrong.
&gt; What do you think?

I agree. The conventions do not specify either mode, so either of the
combinations correctly implements the Java conventions.
  tab_char=MIXED
  tab_size=8
  indent_size=4

This seems to be the best solution for me. Unfortunately this is not backward compatible with the existing Java conventions. But sine we have an Eclipse profile that is the default profile, we might want to change it in the Java conventions.
The indent_size to 8 seems to be wrong even if this is what the editor is using.
Do you want this to be fixed for 3.2?
(In reply to comment #6)
&gt; Do you want this to be fixed for 3.2?

(sorry for the late answer)

Yes please - the settings from your comment 5 are fine for me.
would be nice for 3.2!
So compare to existing settings. This simply means to change the tab char from SPACE to MIXED.
Tom,

Do you have any tests that rely on the old settings?
I am running all our tests.
(In reply to comment #10)
&gt; Tom,
&gt; 
&gt; Do you have any tests that rely on the old settings?

I don't expect any problems as we normally use eclipse settings or custom ones with INDENT_CHAR=SPACE. I am running the tests with the modifications right now, though.
Fixed and released in HEAD.
+1 for 3.2RC1
Verified for 3.2 RC1 using build I20060413-0010</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108088" />
    <CreationDate amount="2005-08-26 04:58:00 -0400" />
    <DupId amount="36032" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[search] Inaccurate search match for method invocations with literal arguments</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="class">
        <location start="63" end="240" />
        <code>public class A {
  B fB;
  public void doit(String doitArg) {
    subroutine(1.2f);
  }
  public void subroutine(float subArg) {
    subsub();
  }
  public void subsub() {
  }
}</code>
      </source_code>
      <source_code type="class">
        <location start="242" end="337" />
        <code>public class B { 
  public void doit(A pApp, String doitArg) {
    pApp.subroutine(1.2f);
  }
}</code>
      </source_code>
      <source_code type="class">
        <location start="693" end="819" />
        <code>class A {
    B fB;
    public void subroutine(float subArg) {
        subsub();
    }
    public void subsub() {
    }
    
}</code>
      </source_code>
      <source_code type="class">
        <location start="820" end="838" />
        <code>public class T {
}</code>
      </source_code>
      <source_code type="class">
        <location start="874" end="965" />
        <code>class B {
	public void doit(A pApp, String doitArg) {
	    pApp.subroutine(1.2f);
	}
    
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- Create two cus in a new project in the default package:</Line>
          <Line>- Create cu T.java with content:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20050823-0800

Consider the following two compilation units:

public class A {
  B fB;
  public void doit(String doitArg) {
    subroutine(1.2f);
  }
  public void subroutine(float subArg) {
    subsub();
  }
  public void subsub() {
  }
}

public class B { 
  public void doit(A pApp, String doitArg) {
    pApp.subroutine(1.2f);
  }
}

-&gt; Search for references to A#subRoutine(float) in the workspace
-&gt; The invocation pApp.subroutine(1.2f) is reported as inaccurate
I cannot reproduce using same build
I am using JDT Core HEAD

Here is a more reliable test case. I hope you can reproduce it now:

- Create two cus in a new project in the default package:
- Create cu T.java with content:

class A {
    B fB;
    public void subroutine(float subArg) {
        subsub();
    }
    public void subsub() {
    }
    
}
public class T {
}

- create cu B.java with content:

class B {
	public void doit(A pApp, String doitArg) {
	    pApp.subroutine(1.2f);
	}
    
}

-&gt; Search for references to A#subRoutine(float) in the workspace
-&gt; The invocation pApp.subroutine(1.2f) is reported as inaccurate

The first test case must have been some temporary inconsistency
Interesting test case for bug 36032...

*** This bug has been marked as a duplicate of 36032 ***</WithStack>
    <WithOutStack>I20050823-0800

Consider the following two compilation units:

public class A {
  B fB;
  public void doit(String doitArg) {
    subroutine(1.2f);
  }
  public void subroutine(float subArg) {
    subsub();
  }
  public void subsub() {
  }
}

public class B { 
  public void doit(A pApp, String doitArg) {
    pApp.subroutine(1.2f);
  }
}

-&gt; Search for references to A#subRoutine(float) in the workspace
-&gt; The invocation pApp.subroutine(1.2f) is reported as inaccurate
I cannot reproduce using same build
I am using JDT Core HEAD

Here is a more reliable test case. I hope you can reproduce it now:

- Create two cus in a new project in the default package:
- Create cu T.java with content:

class A {
    B fB;
    public void subroutine(float subArg) {
        subsub();
    }
    public void subsub() {
    }
    
}
public class T {
}

- create cu B.java with content:

class B {
	public void doit(A pApp, String doitArg) {
	    pApp.subroutine(1.2f);
	}
    
}

-&gt; Search for references to A#subRoutine(float) in the workspace
-&gt; The invocation pApp.subroutine(1.2f) is reported as inaccurate

The first test case must have been some temporary inconsistency
Interesting test case for bug 36032...

*** This bug has been marked as a duplicate of 36032 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108089" />
    <CreationDate amount="2005-08-26 04:58:00 -0400" />
    <DupId amount="107735" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception moving file from default to another package</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437330571433">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:357)</Frame>
          <Frame depth="1">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)</Frame>
          <Frame depth="2">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:447)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:131)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:77)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:220)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop(SelectionTransferDropAdapter.java:138)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:130)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:134)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java:783)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:132)</Frame>
          <Frame depth="12">org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:660)</Frame>
          <Frame depth="18">org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:480)</Frame>
          <Frame depth="19">org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:405)</Frame>
          <Frame depth="20">org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:350)</Frame>
          <Frame depth="21">org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:236)</Frame>
          <Frame depth="22">org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:117)</Frame>
          <Frame depth="23">org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)</Frame>
          <Frame depth="24">org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)</Frame>
          <Frame depth="25">org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:267)</Frame>
          <Frame depth="26">org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:161)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="34">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="39">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="40">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="41">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="42">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="44">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="46">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437330571433">
        <Exception>java.lang.StringIndexOutOfBoundsException</Exception>
        <Reason>String index out of 
range: -1</Reason>
        <Frames>
          <Frame depth="0">java.lang.String.substring(Unknown Source)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension(Util.java:839)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName(PossibleMatch.java:101)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;(PossibleMatch.java:41)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1097)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarations(BasicSearchEngine.java:931)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfReferencedTypes(BasicSearchEngine.java:1042)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes(SearchEngine.java:889)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:64)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:56)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypesReferencedIn(ReferenceFinderUtil.java:47)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImportToSourcePackageTypes(MoveCuUpdateCreator.java:246)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:143)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:129)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createChangeManager(MoveCuUpdateCreator.java:95)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1894)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1993)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalConditions(JavaMoveProcessor.java:160)</Frame>
          <Frame depth="19">org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:169)</Frame>
          <Frame depth="20">org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions(Refactoring.java:126)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:71)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:39)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:718)</Frame>
          <Frame depth="24">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)</Frame>
          <Frame depth="25">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3760)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)</Frame>
          <Frame depth="27">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437330571433">
        <Exception>java.lang.StringIndexOutOfBoundsException</Exception>
        <Reason>String index out of range: -1</Reason>
        <Frames>
          <Frame depth="0">java.lang.String.substring(Unknown Source)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension(Util.java:839)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName(PossibleMatch.java:101)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;(PossibleMatch.java:41)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1097)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarations(BasicSearchEngine.java:931)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfReferencedTypes(BasicSearchEngine.java:1042)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes(SearchEngine.java:889)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:64)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:56)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypesReferencedIn(ReferenceFinderUtil.java:47)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImportToSourcePackageTypes(MoveCuUpdateCreator.java:246)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:143)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:129)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createChangeManager(MoveCuUpdateCreator.java:95)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1894)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1993)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalConditions(JavaMoveProcessor.java:160)</Frame>
          <Frame depth="19">org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:169)</Frame>
          <Frame depth="20">org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions(Refactoring.java:126)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:71)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:39)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:718)</Frame>
          <Frame depth="24">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)</Frame>
          <Frame depth="25">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3760)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)</Frame>
          <Frame depth="27">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)</Frame>
          <Frame depth="28">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)</Frame>
          <Frame depth="29">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:447)</Frame>
          <Frame depth="30">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:131)</Frame>
          <Frame depth="31">org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:77)</Frame>
          <Frame depth="32">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:220)</Frame>
          <Frame depth="33">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop(SelectionTransferDropAdapter.java:138)</Frame>
          <Frame depth="34">org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:130)</Frame>
          <Frame depth="35">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:134)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.Platform.run(Platform.java:783)</Frame>
          <Frame depth="38">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:132)</Frame>
          <Frame depth="39">org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:660)</Frame>
          <Frame depth="45">org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:480)</Frame>
          <Frame depth="46">org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:405)</Frame>
          <Frame depth="47">org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:350)</Frame>
          <Frame depth="48">org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:236)</Frame>
          <Frame depth="49">org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:117)</Frame>
          <Frame depth="50">org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)</Frame>
          <Frame depth="51">org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)</Frame>
          <Frame depth="52">org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:267)</Frame>
          <Frame depth="53">org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:161)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="57">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="61">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="63">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="64">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="65">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="66">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="67">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="68">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="69">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="70">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="71">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="72">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="27" end="62" />
        <code>public class TestTypeInference {

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1. I created a new class.</Line>
          <Line />
          <Line />
          <Line />
          <Line>It was created in the default package.</Line>
          <Line />
          <Line>2.  I created a new package com.test</Line>
          <Line />
          <Line>3. I tried to move this class to com.test by clicking and dragging.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>1. I created a new class.

public class TestTypeInference {

}

It was created in the default package.

2.  I created a new package com.test

3. I tried to move this class to com.test by clicking and dragging.

I got a popup showing
"Unexpected exception occurred.See log for details
 String index out of range:-1"
The popup window title shows "Refactoring"

The trace is

!ENTRY org.eclipse.jdt.ui 4 10001 2005-08-26 14:23:43.886
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:357)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:447)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform
(RefactoringExecutionHelper.java:131)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run
(ReorgMoveStarter.java:77)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDrop
Move(SelectionTransferDropAdapter.java:220)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop
(SelectionTransferDropAdapter.java:138)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop
(JdtViewerDropAdapter.java:130)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter$3.run
(DelegatingDropAdapter.java:134)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1044)
	at org.eclipse.core.runtime.Platform.run(Platform.java:783)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop
(DelegatingDropAdapter.java:132)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:660)
	at org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:480)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:405)
	at org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:350)
	at org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:236)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6
(COMObject.java:117)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)
	at org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:267)
	at org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:161)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:103)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)
Caused by: java.lang.StringIndexOutOfBoundsException: String index out of 
range: -1
	at java.lang.String.substring(Unknown Source)
	at 
org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension
(Util.java:839)
	at 
org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName
(PossibleMatch.java:101)
	at org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;
(PossibleMatch.java:41)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches
(MatchLocator.java:1097)
	at 
org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches
(JavaSearchParticipant.java:94)
	at 
org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarations
(BasicSearchEngine.java:931)
	at 
org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfRefe
rencedTypes(BasicSearchEngine.java:1042)
	at 
org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes
(SearchEngine.java:889)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:64)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:56)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
pesReferencedIn(ReferenceFinderUtil.java:47)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImport
ToSourcePackageTypes(MoveCuUpdateCreator.java:246)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:143)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:129)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createCha
ngeManager(MoveCuUpdateCreator.java:95)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1894)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1993)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalC
onditions(JavaMoveProcessor.java:160)
	at 
org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFi
nalConditions(ProcessorBasedRefactoring.java:169)
	at org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions
(Refactoring.java:126)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.ru
n(RefactoringExecutionHelper.java:71)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:39)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:718)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1719)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3760)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run
(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:346)
	... 46 more
Root exception:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(Unknown Source)
	at 
org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension
(Util.java:839)
	at 
org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName
(PossibleMatch.java:101)
	at org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;
(PossibleMatch.java:41)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches
(MatchLocator.java:1097)
	at 
org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches
(JavaSearchParticipant.java:94)
	at 
org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarations
(BasicSearchEngine.java:931)
	at 
org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfRefe
rencedTypes(BasicSearchEngine.java:1042)
	at 
org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes
(SearchEngine.java:889)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:64)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:56)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
pesReferencedIn(ReferenceFinderUtil.java:47)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImport
ToSourcePackageTypes(MoveCuUpdateCreator.java:246)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:143)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:129)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createCha
ngeManager(MoveCuUpdateCreator.java:95)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1894)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1993)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalC
onditions(JavaMoveProcessor.java:160)
	at 
org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFi
nalConditions(ProcessorBasedRefactoring.java:169)
	at org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions
(Refactoring.java:126)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.ru
n(RefactoringExecutionHelper.java:71)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:39)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:718)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1719)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3760)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run
(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:346)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:447)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform
(RefactoringExecutionHelper.java:131)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run
(ReorgMoveStarter.java:77)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDrop
Move(SelectionTransferDropAdapter.java:220)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop
(SelectionTransferDropAdapter.java:138)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop
(JdtViewerDropAdapter.java:130)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter$3.run
(DelegatingDropAdapter.java:134)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1044)
	at org.eclipse.core.runtime.Platform.run(Platform.java:783)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop
(DelegatingDropAdapter.java:132)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:660)
	at org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:480)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:405)
	at org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:350)
	at org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:236)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6
(COMObject.java:117)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)
	at org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:267)
	at org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:161)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:103)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)







Version: 3.1.0
Build id: I20050627-1435
*** Bug 108090 has been marked as a duplicate of this bug. ***
*** Bug 108093 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 107735 ***</WithStack>
    <WithOutStack>1. I created a new class.

public class TestTypeInference {

}

It was created in the default package.

2.  I created a new package com.test

3. I tried to move this class to com.test by clicking and dragging.

I got a popup showing
"Unexpected exception occurred.See log for details
 String index out of range:-1"
The popup window title shows "Refactoring"

The trace is

!ENTRY org.eclipse.jdt.ui 4 10001 2005-08-26 14:23:43.886
!MESSAGE Internal Error
!STACK 0
	... 46 more
Root exception:








Version: 3.1.0
Build id: I20050627-1435
*** Bug 108090 has been marked as a duplicate of this bug. ***
*** Bug 108093 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 107735 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108090" />
    <CreationDate amount="2005-08-26 04:59:00 -0400" />
    <DupId amount="108089" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception moving file from default to another package</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437330571433">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:357)</Frame>
          <Frame depth="1">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)</Frame>
          <Frame depth="2">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:447)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:131)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:77)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:220)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop(SelectionTransferDropAdapter.java:138)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:130)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:134)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java:783)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:132)</Frame>
          <Frame depth="12">org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:660)</Frame>
          <Frame depth="18">org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:480)</Frame>
          <Frame depth="19">org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:405)</Frame>
          <Frame depth="20">org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:350)</Frame>
          <Frame depth="21">org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:236)</Frame>
          <Frame depth="22">org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:117)</Frame>
          <Frame depth="23">org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)</Frame>
          <Frame depth="24">org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)</Frame>
          <Frame depth="25">org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:267)</Frame>
          <Frame depth="26">org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:161)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="34">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="39">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="40">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="41">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="42">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="44">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="46">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437330571433">
        <Exception>java.lang.StringIndexOutOfBoundsException</Exception>
        <Reason>String index out of 
range: -1</Reason>
        <Frames>
          <Frame depth="0">java.lang.String.substring(Unknown Source)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension(Util.java:839)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName(PossibleMatch.java:101)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;(PossibleMatch.java:41)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1097)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarations(BasicSearchEngine.java:931)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfReferencedTypes(BasicSearchEngine.java:1042)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes(SearchEngine.java:889)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:64)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:56)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypesReferencedIn(ReferenceFinderUtil.java:47)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImportToSourcePackageTypes(MoveCuUpdateCreator.java:246)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:143)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:129)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createChangeManager(MoveCuUpdateCreator.java:95)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1894)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1993)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalConditions(JavaMoveProcessor.java:160)</Frame>
          <Frame depth="19">org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:169)</Frame>
          <Frame depth="20">org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions(Refactoring.java:126)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:71)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:39)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:718)</Frame>
          <Frame depth="24">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)</Frame>
          <Frame depth="25">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3760)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)</Frame>
          <Frame depth="27">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437330571433">
        <Exception>java.lang.StringIndexOutOfBoundsException</Exception>
        <Reason>String index out of range: -1</Reason>
        <Frames>
          <Frame depth="0">java.lang.String.substring(Unknown Source)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension(Util.java:839)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName(PossibleMatch.java:101)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;(PossibleMatch.java:41)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1097)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarations(BasicSearchEngine.java:931)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfReferencedTypes(BasicSearchEngine.java:1042)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes(SearchEngine.java:889)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:64)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:56)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypesReferencedIn(ReferenceFinderUtil.java:47)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImportToSourcePackageTypes(MoveCuUpdateCreator.java:246)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:143)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:129)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createChangeManager(MoveCuUpdateCreator.java:95)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1894)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1993)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalConditions(JavaMoveProcessor.java:160)</Frame>
          <Frame depth="19">org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:169)</Frame>
          <Frame depth="20">org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions(Refactoring.java:126)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:71)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:39)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:718)</Frame>
          <Frame depth="24">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)</Frame>
          <Frame depth="25">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3760)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)</Frame>
          <Frame depth="27">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)</Frame>
          <Frame depth="28">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)</Frame>
          <Frame depth="29">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:447)</Frame>
          <Frame depth="30">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:131)</Frame>
          <Frame depth="31">org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:77)</Frame>
          <Frame depth="32">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:220)</Frame>
          <Frame depth="33">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop(SelectionTransferDropAdapter.java:138)</Frame>
          <Frame depth="34">org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:130)</Frame>
          <Frame depth="35">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:134)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.Platform.run(Platform.java:783)</Frame>
          <Frame depth="38">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:132)</Frame>
          <Frame depth="39">org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:660)</Frame>
          <Frame depth="45">org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:480)</Frame>
          <Frame depth="46">org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:405)</Frame>
          <Frame depth="47">org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:350)</Frame>
          <Frame depth="48">org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:236)</Frame>
          <Frame depth="49">org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:117)</Frame>
          <Frame depth="50">org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)</Frame>
          <Frame depth="51">org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)</Frame>
          <Frame depth="52">org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:267)</Frame>
          <Frame depth="53">org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:161)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="57">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="61">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="63">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="64">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="65">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="66">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="67">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="68">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="69">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="70">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="71">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="72">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="27" end="62" />
        <code>public class TestTypeInference {

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1. I created a new class.</Line>
          <Line />
          <Line />
          <Line />
          <Line>It was created in the default package.</Line>
          <Line />
          <Line>2.  I created a new package com.test</Line>
          <Line />
          <Line>3. I tried to move this class to com.test by clicking and dragging.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>1. I created a new class.

public class TestTypeInference {

}

It was created in the default package.

2.  I created a new package com.test

3. I tried to move this class to com.test by clicking and dragging.

I got a popup showing
"Unexpected exception occurred.See log for details
 String index out of range:-1"
The popup window title shows "Refactoring"

The trace is

!ENTRY org.eclipse.jdt.ui 4 10001 2005-08-26 14:23:43.886
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:357)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:447)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform
(RefactoringExecutionHelper.java:131)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run
(ReorgMoveStarter.java:77)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDrop
Move(SelectionTransferDropAdapter.java:220)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop
(SelectionTransferDropAdapter.java:138)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop
(JdtViewerDropAdapter.java:130)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter$3.run
(DelegatingDropAdapter.java:134)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1044)
	at org.eclipse.core.runtime.Platform.run(Platform.java:783)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop
(DelegatingDropAdapter.java:132)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:660)
	at org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:480)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:405)
	at org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:350)
	at org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:236)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6
(COMObject.java:117)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)
	at org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:267)
	at org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:161)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:103)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)
Caused by: java.lang.StringIndexOutOfBoundsException: String index out of 
range: -1
	at java.lang.String.substring(Unknown Source)
	at 
org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension
(Util.java:839)
	at 
org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName
(PossibleMatch.java:101)
	at org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;
(PossibleMatch.java:41)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches
(MatchLocator.java:1097)
	at 
org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches
(JavaSearchParticipant.java:94)
	at 
org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarations
(BasicSearchEngine.java:931)
	at 
org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfRefe
rencedTypes(BasicSearchEngine.java:1042)
	at 
org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes
(SearchEngine.java:889)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:64)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:56)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
pesReferencedIn(ReferenceFinderUtil.java:47)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImport
ToSourcePackageTypes(MoveCuUpdateCreator.java:246)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:143)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:129)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createCha
ngeManager(MoveCuUpdateCreator.java:95)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1894)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1993)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalC
onditions(JavaMoveProcessor.java:160)
	at 
org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFi
nalConditions(ProcessorBasedRefactoring.java:169)
	at org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions
(Refactoring.java:126)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.ru
n(RefactoringExecutionHelper.java:71)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:39)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:718)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1719)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3760)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run
(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:346)
	... 46 more
Root exception:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(Unknown Source)
	at 
org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension
(Util.java:839)
	at 
org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName
(PossibleMatch.java:101)
	at org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;
(PossibleMatch.java:41)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches
(MatchLocator.java:1097)
	at 
org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches
(JavaSearchParticipant.java:94)
	at 
org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarations
(BasicSearchEngine.java:931)
	at 
org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfRefe
rencedTypes(BasicSearchEngine.java:1042)
	at 
org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes
(SearchEngine.java:889)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:64)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:56)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
pesReferencedIn(ReferenceFinderUtil.java:47)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImport
ToSourcePackageTypes(MoveCuUpdateCreator.java:246)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:143)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:129)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createCha
ngeManager(MoveCuUpdateCreator.java:95)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1894)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1993)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalC
onditions(JavaMoveProcessor.java:160)
	at 
org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFi
nalConditions(ProcessorBasedRefactoring.java:169)
	at org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions
(Refactoring.java:126)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.ru
n(RefactoringExecutionHelper.java:71)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:39)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:718)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1719)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3760)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run
(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:346)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:447)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform
(RefactoringExecutionHelper.java:131)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run
(ReorgMoveStarter.java:77)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDrop
Move(SelectionTransferDropAdapter.java:220)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop
(SelectionTransferDropAdapter.java:138)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop
(JdtViewerDropAdapter.java:130)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter$3.run
(DelegatingDropAdapter.java:134)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1044)
	at org.eclipse.core.runtime.Platform.run(Platform.java:783)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop
(DelegatingDropAdapter.java:132)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:660)
	at org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:480)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:405)
	at org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:350)
	at org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:236)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6
(COMObject.java:117)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)
	at org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:267)
	at org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:161)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:103)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)







Version: 3.1.0
Build id: I20050627-1435


*** This bug has been marked as a duplicate of 108089 ***</WithStack>
    <WithOutStack>1. I created a new class.

public class TestTypeInference {

}

It was created in the default package.

2.  I created a new package com.test

3. I tried to move this class to com.test by clicking and dragging.

I got a popup showing
"Unexpected exception occurred.See log for details
 String index out of range:-1"
The popup window title shows "Refactoring"

The trace is

!ENTRY org.eclipse.jdt.ui 4 10001 2005-08-26 14:23:43.886
!MESSAGE Internal Error
!STACK 0
	... 46 more
Root exception:








Version: 3.1.0
Build id: I20050627-1435


*** This bug has been marked as a duplicate of 108089 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108091" />
    <CreationDate amount="2005-08-26 04:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[PropertiesView] (org.eclipse.ui.views.Protrafikanten.nopertySheet) -&gt; handle changes in number of PropertyDescriptors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330571433">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>1</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.ui.views.properties.PropertySheetViewer.updateChildrenOf(PropertySheetViewer.java:1195)</Frame>
          <Frame depth="1">org.eclipse.ui.views.properties.PropertySheetViewer.updateChildrenOf(PropertySheetViewer.java:1198)</Frame>
          <Frame depth="2">org.eclipse.ui.views.properties.PropertySheetViewer.access$2(PropertySheetViewer.java:1101)</Frame>
          <Frame depth="3">org.eclipse.ui.views.properties.PropertySheetViewer$3.childEntriesChanged(PropertySheetViewer.java:308)</Frame>
          <Frame depth="4">org.eclipse.ui.views.properties.PropertySheetEntry.fireChildEntriesChanged(PropertySheetEntry.java:295)</Frame>
          <Frame depth="5">org.eclipse.ui.views.properties.PropertySheetEntry.refreshChildEntries(PropertySheetEntry.java:559)</Frame>
          <Frame depth="6">org.eclipse.ui.views.properties.PropertySheetEntry.refreshFromRoot(PropertySheetEntry.java:574)</Frame>
          <Frame depth="7">org.eclipse.ui.views.properties.PropertySheetEntry.refreshFromRoot(PropertySheetEntry.java:576)</Frame>
          <Frame depth="8">org.eclipse.ui.views.properties.PropertySheetEntry.setValue(PropertySheetEntry.java:703)</Frame>
          <Frame depth="9">org.eclipse.ui.views.properties.PropertySheetEntry.applyEditorValue(PropertySheetEntry.java:146)</Frame>
          <Frame depth="10">org.eclipse.ui.views.properties.PropertySheetEntry$1.applyEditorValue(PropertySheetEntry.java:106)</Frame>
          <Frame depth="11">org.eclipse.jface.viewers.CellEditor$1.run(CellEditor.java:304)</Frame>
          <Frame depth="12">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)</Frame>
          <Frame depth="13">org.eclipse.core.runtime.Platform.run(Platform.java:783)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44)</Frame>
          <Frame depth="15">org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:148)</Frame>
          <Frame depth="16">org.eclipse.jface.viewers.CellEditor.fireApplyEditorValue(CellEditor.java:302)</Frame>
          <Frame depth="17">org.eclipse.jface.viewers.CellEditor.focusLost(CellEditor.java:676)</Frame>
          <Frame depth="18">org.eclipse.jface.viewers.TextCellEditor$5.focusLost(TextCellEditor.java:184)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:109)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1021)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1045)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1026)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Control.sendFocusEvent(Control.java:2423)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Control.gtk_event_after(Control.java:1884)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Text.gtk_event_after(Text.java:1041)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1360)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.windowProc(Display.java:3442)</Frame>
          <Frame depth="29">org.eclipse.swt.internal.gtk.OS._gtk_widget_grab_focus(Native Method)</Frame>
          <Frame depth="30">org.eclipse.swt.internal.gtk.OS.gtk_widget_grab_focus(OS.java:7055)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Tree.gtk_button_press_event(Tree.java:1305)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1353)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.windowProc(Display.java:3442)</Frame>
          <Frame depth="34">org.eclipse.swt.internal.gtk.OS._gtk_main_do_event(Native Method)</Frame>
          <Frame depth="35">org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(OS.java:4777)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.eventProc(Display.java:1067)</Frame>
          <Frame depth="37">org.eclipse.swt.internal.gtk.OS._g_main_context_iteration(Native Method)</Frame>
          <Frame depth="38">org.eclipse.swt.internal.gtk.OS.g_main_context_iteration(OS.java:1158)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2570)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="43">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="45">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="46">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="47">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="48">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="49">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="50">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="51">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="53">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="54">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="55">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>#Background:

I'm writing a plugin to support traceability of requirements in models and
source-code.In the plugin I'm using the Properties-view to edit a requirements
properties. 

# Problem description

The number of properties of IAdaptable-objects that is source of ISelection that
is input for the Properties-view is changing dynamically. Then the size of
IPropertySource.getPropertyDescriptors():IPropertyDescriptor[] that the
properties-view is using, also changes dynamically. When the
IPropertyDescriptor[] increases with 2 or more, then the following exception occurs:

!ENTRY org.eclipse.jface 4 2 2005-08-26 10:16:45.996
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jface".
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 1
        at
org.eclipse.ui.views.properties.PropertySheetViewer.updateChildrenOf(PropertySheetViewer.java:1195)
        at
org.eclipse.ui.views.properties.PropertySheetViewer.updateChildrenOf(PropertySheetViewer.java:1198)
        at
org.eclipse.ui.views.properties.PropertySheetViewer.access$2(PropertySheetViewer.java:1101)
        at
org.eclipse.ui.views.properties.PropertySheetViewer$3.childEntriesChanged(PropertySheetViewer.java:308)
        at
org.eclipse.ui.views.properties.PropertySheetEntry.fireChildEntriesChanged(PropertySheetEntry.java:295)
        at
org.eclipse.ui.views.properties.PropertySheetEntry.refreshChildEntries(PropertySheetEntry.java:559)
        at
org.eclipse.ui.views.properties.PropertySheetEntry.refreshFromRoot(PropertySheetEntry.java:574)
        at
org.eclipse.ui.views.properties.PropertySheetEntry.refreshFromRoot(PropertySheetEntry.java:576)
        at
org.eclipse.ui.views.properties.PropertySheetEntry.setValue(PropertySheetEntry.java:703)
        at
org.eclipse.ui.views.properties.PropertySheetEntry.applyEditorValue(PropertySheetEntry.java:146)
        at
org.eclipse.ui.views.properties.PropertySheetEntry$1.applyEditorValue(PropertySheetEntry.java:106)
        at org.eclipse.jface.viewers.CellEditor$1.run(CellEditor.java:304)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)
        at org.eclipse.core.runtime.Platform.run(Platform.java:783)
        at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44)
        at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:148)
        at
org.eclipse.jface.viewers.CellEditor.fireApplyEditorValue(CellEditor.java:302)
        at org.eclipse.jface.viewers.CellEditor.focusLost(CellEditor.java:676)
        at
org.eclipse.jface.viewers.TextCellEditor$5.focusLost(TextCellEditor.java:184)
        at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:109)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1021)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1045)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1026)
        at org.eclipse.swt.widgets.Control.sendFocusEvent(Control.java:2423)
        at org.eclipse.swt.widgets.Control.gtk_event_after(Control.java:1884)
        at org.eclipse.swt.widgets.Text.gtk_event_after(Text.java:1041)
        at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1360)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:3442)
        at org.eclipse.swt.internal.gtk.OS._gtk_widget_grab_focus(Native Method)
        at org.eclipse.swt.internal.gtk.OS.gtk_widget_grab_focus(OS.java:7055)
        at org.eclipse.swt.widgets.Tree.gtk_button_press_event(Tree.java:1305)
        at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1353)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:3442)
        at org.eclipse.swt.internal.gtk.OS._gtk_main_do_event(Native Method)
        at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(OS.java:4777)
        at org.eclipse.swt.widgets.Display.eventProc(Display.java:1067)
        at org.eclipse.swt.internal.gtk.OS._g_main_context_iteration(Native Method)
        at org.eclipse.swt.internal.gtk.OS.g_main_context_iteration(OS.java:1158)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2570)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
        at
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
        at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
        at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
        at
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
        at org.eclipse.core.launcher.Main.run(Main.java:973)
        at org.eclipse.core.launcher.Main.main(Main.java:948)


"java.lang.ArrayIndexOutOfBoundsException: 1" --&gt; The '1' the index of the
second new "property" for a given "property-category".

The exception occurs when clicking on all the elements after this. Eclipse has
to be restarted to "work" again. Then with the exately equal IAdaptable items,
the view works as usual.


# startuplog:

!SESSION 2005-08-26 10:16:01.144 -----------------------------------------------
eclipse.buildId=unknown
java.version=1.5.0_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=en_US
Framework arguments:  -product org.eclipse.platform.ide -pdelaunch
Command-line arguments:  -product org.eclipse.platform.ide -data
/local1/peide3/runtime-EclipseApplication -dev
file:/local1/peide3/workspace/.metadata/.plu
gins/org.eclipse.pde.core/Eclipse Application/dev.properties -pdelaunch -os
linux -ws gtk -arch x86
Seems that the problem was related to my implementation of IPropertySource2.

I guess that
org.eclipse.ui.views.properties.IPropertySource#getPropertyValue(java.lang.Object)
(or similar) did return 'null' for new Properties.. This was not a part of the
stacktrace, so a bit difficult to debug..</WithStack>
    <WithOutStack>#Background:

I'm writing a plugin to support traceability of requirements in models and
source-code.In the plugin I'm using the Properties-view to edit a requirements
properties. 

# Problem description

The number of properties of IAdaptable-objects that is source of ISelection that
is input for the Properties-view is changing dynamically. Then the size of
IPropertySource.getPropertyDescriptors():IPropertyDescriptor[] that the
properties-view is using, also changes dynamically. When the
IPropertyDescriptor[] increases with 2 or more, then the following exception occurs:

!ENTRY org.eclipse.jface 4 2 2005-08-26 10:16:45.996
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jface".
!STACK 0



"java.lang.ArrayIndexOutOfBoundsException: 1" --&gt; The '1' the index of the
second new "property" for a given "property-category".

The exception occurs when clicking on all the elements after this. Eclipse has
to be restarted to "work" again. Then with the exately equal IAdaptable items,
the view works as usual.


# startuplog:

!SESSION 2005-08-26 10:16:01.144 -----------------------------------------------
eclipse.buildId=unknown
java.version=1.5.0_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=en_US
Framework arguments:  -product org.eclipse.platform.ide -pdelaunch
Command-line arguments:  -product org.eclipse.platform.ide -data
/local1/peide3/runtime-EclipseApplication -dev
file:/local1/peide3/workspace/.metadata/.plu
gins/org.eclipse.pde.core/Eclipse Application/dev.properties -pdelaunch -os
linux -ws gtk -arch x86
Seems that the problem was related to my implementation of IPropertySource2.

I guess that
org.eclipse.ui.views.properties.IPropertySource#getPropertyValue(java.lang.Object)
(or similar) did return 'null' for new Properties.. This was not a part of the
stacktrace, so a bit difficult to debug..</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108092" />
    <CreationDate amount="2005-08-26 05:21:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Engine" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>There are error(s) in Data:null</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>by creation of a new DataSet I get results in the query tab.
--&gt; connection to database etablished(oracle db)!!

after creation of report and selecting the preview layout I get the following
error message:


There are errors on the report page: 
- There are error(s) in Data:null 
Error0 : Error.TextualItemProcessingError(1 time)detail: There are problems(s) 
processing textual item .Native Library C:\OraHome1\bin\ocijdbc9.dll already 
loaded in another classloader
Could you give the environment you use in more detail?

The jdbc driver you use, the platform, eclipse or rational?

Thanks.

(In reply to comment #0)
&gt; by creation of a new DataSet I get results in the query tab.
&gt; --&gt; connection to database etablished(oracle db)!!
&gt; 
&gt; after creation of report and selecting the preview layout I get the following
&gt; error message:
&gt; 
&gt; 
&gt; There are errors on the report page: 
&gt; - There are error(s) in Data:null 
&gt; Error0 : Error.TextualItemProcessingError(1 time)detail: There are problems(s) 
&gt; processing textual item .Native Library C:\OraHome1\bin\ocijdbc9.dll already 
&gt; loaded in another classloader


please prvoide the info requested by Baoliang, so that we can see to fix it in BIRT 2.0.  Thanks.
This bugs's resolution is remind not fix!
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.
resolved as fixed</WithStack>
    <WithOutStack>by creation of a new DataSet I get results in the query tab.
--&gt; connection to database etablished(oracle db)!!

after creation of report and selecting the preview layout I get the following
error message:


There are errors on the report page: 
- There are error(s) in Data:null 
Error0 : Error.TextualItemProcessingError(1 time)detail: There are problems(s) 
processing textual item .Native Library C:\OraHome1\bin\ocijdbc9.dll already 
loaded in another classloader
Could you give the environment you use in more detail?

The jdbc driver you use, the platform, eclipse or rational?

Thanks.

(In reply to comment #0)
&gt; by creation of a new DataSet I get results in the query tab.
&gt; --&gt; connection to database etablished(oracle db)!!
&gt; 
&gt; after creation of report and selecting the preview layout I get the following
&gt; error message:
&gt; 
&gt; 
&gt; There are errors on the report page: 
&gt; - There are error(s) in Data:null 
&gt; Error0 : Error.TextualItemProcessingError(1 time)detail: There are problems(s) 
&gt; processing textual item .Native Library C:\OraHome1\bin\ocijdbc9.dll already 
&gt; loaded in another classloader


please prvoide the info requested by Baoliang, so that we can see to fix it in BIRT 2.0.  Thanks.
This bugs's resolution is remind not fix!
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.
resolved as fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108093" />
    <CreationDate amount="2005-08-26 05:22:00 -0400" />
    <DupId amount="108089" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception moving file from default to another package</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437330571448">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:357)</Frame>
          <Frame depth="1">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)</Frame>
          <Frame depth="2">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:447)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:131)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:77)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:220)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop(SelectionTransferDropAdapter.java:138)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:130)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:134)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java:783)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:132)</Frame>
          <Frame depth="12">org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:660)</Frame>
          <Frame depth="18">org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:480)</Frame>
          <Frame depth="19">org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:405)</Frame>
          <Frame depth="20">org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:350)</Frame>
          <Frame depth="21">org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:236)</Frame>
          <Frame depth="22">org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:117)</Frame>
          <Frame depth="23">org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)</Frame>
          <Frame depth="24">org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)</Frame>
          <Frame depth="25">org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:267)</Frame>
          <Frame depth="26">org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:161)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="34">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="39">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="40">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="41">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="42">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="44">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="46">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437330571448">
        <Exception>java.lang.StringIndexOutOfBoundsException</Exception>
        <Reason>String index out of 
range: -1</Reason>
        <Frames>
          <Frame depth="0">java.lang.String.substring(Unknown Source)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension(Util.java:839)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName(PossibleMatch.java:101)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;(PossibleMatch.java:41)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1097)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarations(BasicSearchEngine.java:931)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfReferencedTypes(BasicSearchEngine.java:1042)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes(SearchEngine.java:889)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:64)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:56)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypesReferencedIn(ReferenceFinderUtil.java:47)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImportToSourcePackageTypes(MoveCuUpdateCreator.java:246)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:143)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:129)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createChangeManager(MoveCuUpdateCreator.java:95)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1894)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1993)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalConditions(JavaMoveProcessor.java:160)</Frame>
          <Frame depth="19">org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:169)</Frame>
          <Frame depth="20">org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions(Refactoring.java:126)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:71)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:39)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:718)</Frame>
          <Frame depth="24">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)</Frame>
          <Frame depth="25">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3760)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)</Frame>
          <Frame depth="27">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437330571448">
        <Exception>java.lang.StringIndexOutOfBoundsException</Exception>
        <Reason>String index out of range: -1</Reason>
        <Frames>
          <Frame depth="0">java.lang.String.substring(Unknown Source)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension(Util.java:839)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName(PossibleMatch.java:101)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;(PossibleMatch.java:41)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1097)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:94)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarations(BasicSearchEngine.java:931)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfReferencedTypes(BasicSearchEngine.java:1042)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes(SearchEngine.java:889)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:64)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypeReferencesIn(ReferenceFinderUtil.java:56)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypesReferencedIn(ReferenceFinderUtil.java:47)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImportToSourcePackageTypes(MoveCuUpdateCreator.java:246)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:143)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdates(MoveCuUpdateCreator.java:129)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createChangeManager(MoveCuUpdateCreator.java:95)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1894)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesFoldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1993)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalConditions(JavaMoveProcessor.java:160)</Frame>
          <Frame depth="19">org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:169)</Frame>
          <Frame depth="20">org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions(Refactoring.java:126)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.run(RefactoringExecutionHelper.java:71)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:39)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:718)</Frame>
          <Frame depth="24">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)</Frame>
          <Frame depth="25">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3760)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)</Frame>
          <Frame depth="27">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)</Frame>
          <Frame depth="28">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)</Frame>
          <Frame depth="29">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:447)</Frame>
          <Frame depth="30">org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform(RefactoringExecutionHelper.java:131)</Frame>
          <Frame depth="31">org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run(ReorgMoveStarter.java:77)</Frame>
          <Frame depth="32">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDropMove(SelectionTransferDropAdapter.java:220)</Frame>
          <Frame depth="33">org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop(SelectionTransferDropAdapter.java:138)</Frame>
          <Frame depth="34">org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop(JdtViewerDropAdapter.java:130)</Frame>
          <Frame depth="35">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter$3.run(DelegatingDropAdapter.java:134)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.Platform.run(Platform.java:783)</Frame>
          <Frame depth="38">org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop(DelegatingDropAdapter.java:132)</Frame>
          <Frame depth="39">org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:660)</Frame>
          <Frame depth="45">org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:480)</Frame>
          <Frame depth="46">org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:405)</Frame>
          <Frame depth="47">org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:350)</Frame>
          <Frame depth="48">org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:236)</Frame>
          <Frame depth="49">org.eclipse.swt.internal.ole.win32.COMObject.callback6(COMObject.java:117)</Frame>
          <Frame depth="50">org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)</Frame>
          <Frame depth="51">org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)</Frame>
          <Frame depth="52">org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:267)</Frame>
          <Frame depth="53">org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:161)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="57">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="61">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="63">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="64">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="65">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="66">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="67">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="68">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="69">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="70">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="71">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="72">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="73">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="27" end="62" />
        <code>public class TestTypeInference {

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1. I created a new class.</Line>
          <Line />
          <Line />
          <Line />
          <Line>It was created in the default package.</Line>
          <Line />
          <Line>2.  I created a new package com.test</Line>
          <Line />
          <Line>3. I tried to move this class to com.test by clicking and dragging.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>1. I created a new class.

public class TestTypeInference {

}

It was created in the default package.

2.  I created a new package com.test

3. I tried to move this class to com.test by clicking and dragging.

I got a popup showing
"Unexpected exception occurred.See log for details
 String index out of range:-1"
The popup window title shows "Refactoring"

The trace is

!ENTRY org.eclipse.jdt.ui 4 10001 2005-08-26 14:23:43.886
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:357)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:447)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform
(RefactoringExecutionHelper.java:131)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run
(ReorgMoveStarter.java:77)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDrop
Move(SelectionTransferDropAdapter.java:220)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop
(SelectionTransferDropAdapter.java:138)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop
(JdtViewerDropAdapter.java:130)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter$3.run
(DelegatingDropAdapter.java:134)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1044)
	at org.eclipse.core.runtime.Platform.run(Platform.java:783)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop
(DelegatingDropAdapter.java:132)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:660)
	at org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:480)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:405)
	at org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:350)
	at org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:236)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6
(COMObject.java:117)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)
	at org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:267)
	at org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:161)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:103)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)
Caused by: java.lang.StringIndexOutOfBoundsException: String index out of 
range: -1
	at java.lang.String.substring(Unknown Source)
	at 
org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension
(Util.java:839)
	at 
org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName
(PossibleMatch.java:101)
	at org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;
(PossibleMatch.java:41)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches
(MatchLocator.java:1097)
	at 
org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches
(JavaSearchParticipant.java:94)
	at 
org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarations
(BasicSearchEngine.java:931)
	at 
org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfRefe
rencedTypes(BasicSearchEngine.java:1042)
	at 
org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes
(SearchEngine.java:889)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:64)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:56)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
pesReferencedIn(ReferenceFinderUtil.java:47)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImport
ToSourcePackageTypes(MoveCuUpdateCreator.java:246)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:143)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:129)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createCha
ngeManager(MoveCuUpdateCreator.java:95)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1894)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1993)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalC
onditions(JavaMoveProcessor.java:160)
	at 
org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFi
nalConditions(ProcessorBasedRefactoring.java:169)
	at org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions
(Refactoring.java:126)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.ru
n(RefactoringExecutionHelper.java:71)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:39)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:718)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1719)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3760)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run
(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:346)
	... 46 more
Root exception:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(Unknown Source)
	at 
org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension
(Util.java:839)
	at 
org.eclipse.jdt.internal.core.search.matching.PossibleMatch.getQualifiedName
(PossibleMatch.java:101)
	at org.eclipse.jdt.internal.core.search.matching.PossibleMatch.&lt;init&gt;
(PossibleMatch.java:41)
	at 
org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches
(MatchLocator.java:1097)
	at 
org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches
(JavaSearchParticipant.java:94)
	at 
org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarations
(BasicSearchEngine.java:931)
	at 
org.eclipse.jdt.internal.core.search.BasicSearchEngine.searchDeclarationsOfRefe
rencedTypes(BasicSearchEngine.java:1042)
	at 
org.eclipse.jdt.core.search.SearchEngine.searchDeclarationsOfReferencedTypes
(SearchEngine.java:889)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:64)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
peReferencesIn(ReferenceFinderUtil.java:56)
	at 
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTy
pesReferencedIn(ReferenceFinderUtil.java:47)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addImport
ToSourcePackageTypes(MoveCuUpdateCreator.java:246)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:143)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.addUpdate
s(MoveCuUpdateCreator.java:129)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveCuUpdateCreator.createCha
ngeManager(MoveCuUpdateCreator.java:95)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.createChangeManager(ReorgPolicyFactory.java:1894)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.ReorgPolicyFactory$MoveFilesF
oldersAndCusPolicy.checkFinalConditions(ReorgPolicyFactory.java:1993)
	at 
org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor.checkFinalC
onditions(JavaMoveProcessor.java:160)
	at 
org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFi
nalConditions(ProcessorBasedRefactoring.java:169)
	at org.eclipse.ltk.core.refactoring.Refactoring.checkAllConditions
(Refactoring.java:126)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper$Operation.ru
n(RefactoringExecutionHelper.java:71)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:39)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:718)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1719)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3760)
	at org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run
(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:346)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:447)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringExecutionHelper.perform
(RefactoringExecutionHelper.java:131)
	at org.eclipse.jdt.internal.ui.refactoring.reorg.ReorgMoveStarter.run
(ReorgMoveStarter.java:77)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.handleDrop
Move(SelectionTransferDropAdapter.java:220)
	at 
org.eclipse.jdt.internal.ui.packageview.SelectionTransferDropAdapter.drop
(SelectionTransferDropAdapter.java:138)
	at org.eclipse.jdt.internal.ui.dnd.JdtViewerDropAdapter.drop
(JdtViewerDropAdapter.java:130)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter$3.run
(DelegatingDropAdapter.java:134)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1044)
	at org.eclipse.core.runtime.Platform.run(Platform.java:783)
	at org.eclipse.jdt.internal.ui.dnd.DelegatingDropAdapter.drop
(DelegatingDropAdapter.java:132)
	at org.eclipse.swt.dnd.DNDListener.handleEvent(DNDListener.java:65)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:660)
	at org.eclipse.swt.dnd.DropTarget.notifyListeners(DropTarget.java:480)
	at org.eclipse.swt.dnd.DropTarget.Drop(DropTarget.java:405)
	at org.eclipse.swt.dnd.DropTarget.access$7(DropTarget.java:350)
	at org.eclipse.swt.dnd.DropTarget$3.method6(DropTarget.java:236)
	at org.eclipse.swt.internal.ole.win32.COMObject.callback6
(COMObject.java:117)
	at org.eclipse.swt.internal.ole.win32.COM.DoDragDrop(Native Method)
	at org.eclipse.swt.dnd.DragSource.drag(DragSource.java:277)
	at org.eclipse.swt.dnd.DragSource.access$0(DragSource.java:267)
	at org.eclipse.swt.dnd.DragSource$1.handleEvent(DragSource.java:161)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:103)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)







Version: 3.1.0
Build id: I20050627-1435


*** This bug has been marked as a duplicate of 108089 ***</WithStack>
    <WithOutStack>1. I created a new class.

public class TestTypeInference {

}

It was created in the default package.

2.  I created a new package com.test

3. I tried to move this class to com.test by clicking and dragging.

I got a popup showing
"Unexpected exception occurred.See log for details
 String index out of range:-1"
The popup window title shows "Refactoring"

The trace is

!ENTRY org.eclipse.jdt.ui 4 10001 2005-08-26 14:23:43.886
!MESSAGE Internal Error
!STACK 0
	... 46 more
Root exception:








Version: 3.1.0
Build id: I20050627-1435


*** This bug has been marked as a duplicate of 108089 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108094" />
    <CreationDate amount="2005-08-26 05:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Docs" />
    <Version amount="1.5.0M3" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Hardwire some of the links in the AJ documentation so integration with AJDT is trivial.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Currently every time we do a build and attempt to integrate the doc with AJDT,
Helen sees some problems with broken links that she has to fix up (in the
Language Semantics docs and also in the iajc task doc from the dev guide).  The
problem occurs because hardcoded names haven't been given to sections in those
docs so they are generated by docbook - these generated names arent the same
each time and so the links in AJDT table of contents has to be changed.

Please hardcode the names so they are the same each time the doc is generated.
Created attachment 26638
gives static names to anchors

used a python script (and checked all the changes it made) to give all the
anchors static names, these are the changes it made
Created attachment 26640
gives static names to anchors

a couple of the anchor names had commas and periods in and I don't think
they're allowed in anchors
marking as M4
Great patch, thanks Andrew :))
Now applied to tree and everything working great...</WithStack>
    <WithOutStack>Currently every time we do a build and attempt to integrate the doc with AJDT,
Helen sees some problems with broken links that she has to fix up (in the
Language Semantics docs and also in the iajc task doc from the dev guide).  The
problem occurs because hardcoded names haven't been given to sections in those
docs so they are generated by docbook - these generated names arent the same
each time and so the links in AJDT table of contents has to be changed.

Please hardcode the names so they are the same each time the doc is generated.
Created attachment 26638
gives static names to anchors

used a python script (and checked all the changes it made) to give all the
anchors static names, these are the changes it made
Created attachment 26640
gives static names to anchors

a couple of the anchor names had commas and periods in and I don't think
they're allowed in anchors
marking as M4
Great patch, thanks Andrew :))
Now applied to tree and everything working great...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108095" />
    <CreationDate amount="2005-08-26 06:05:00 -0400" />
    <DupId amount="102181" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>The compiler incorrectly creates Object[] for generic varargs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="functioncall">
        <location start="103" end="147" />
        <code>System.out.println(values.getClass());</code>
      </source_code>
      <source_code type="functioncall">
        <location start="190" end="225" />
        <code>Bar.&lt;String&gt;foo("monkey", "cat");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="226" end="278" />
        <code>Bar.&lt;String&gt;foo(new String[] { "monkey", "cat" });</code>
      </source_code>
      <source_code type="class">
        <location start="900" end="1149" />
        <code>public class X {

  public static &lt;T&gt; void foo(T ... values) {
      System.out.println(values.getClass());
  }

	public static void main(String args[]) {
	  X.&lt;String&gt;foo("monkey", "cat");
      X.&lt;String&gt;foo(new String[] { "monkey", "cat" });
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Assume that I declare a method on class Bar like this.

  public static &lt;T&gt; void foo(T ... values)
  {
      System.out.println(values.getClass());
  }

and then call the method like this:

  Bar.&lt;String&gt;foo("monkey", "cat");
  Bar.&lt;String&gt;foo(new String[] { "monkey", "cat" });

The compiler have all the facts to make the two calls equal. But it doesn't. The
output of this, when compiled using the Eclipse compiler, is:

  class [Ljava.lang.Object;
  class [Ljava.lang.String;

Using the Sun compiler, the output is correct:

  class [Ljava.lang.String;
  class [Ljava.lang.String;

I do not think this is a duplicate of bug 92032 even if they might be related.
This is fixed in 3.2M1.

d:\tests_sources&gt;java -jar d:\org.eclipse.jdt.core_3.1.0.jar -classpath 
d:\jdks\jdk1.5.0_05\jre\lib\rt.jar -1.5 X.java

d:\tests_sources&gt;java X
class [Ljava.lang.String;
class [Ljava.lang.String;

Where X is:
public class X {

  public static &lt;T&gt; void foo(T ... values) {
      System.out.println(values.getClass());
  }

	public static void main(String args[]) {
	  X.&lt;String&gt;foo("monkey", "cat");
      X.&lt;String&gt;foo(new String[] { "monkey", "cat" });
	}
}

Looks like a dup of bug 102181. I will add this test case as a regression test.

*** This bug has been marked as a duplicate of 102181 ***
Added org.eclipse.jdt.core.tests.compiler.regression.VarargsTest.test035</WithStack>
    <WithOutStack>Assume that I declare a method on class Bar like this.

  public static &lt;T&gt; void foo(T ... values)
  {
      System.out.println(values.getClass());
  }

and then call the method like this:

  Bar.&lt;String&gt;foo("monkey", "cat");
  Bar.&lt;String&gt;foo(new String[] { "monkey", "cat" });

The compiler have all the facts to make the two calls equal. But it doesn't. The
output of this, when compiled using the Eclipse compiler, is:

  class [Ljava.lang.Object;
  class [Ljava.lang.String;

Using the Sun compiler, the output is correct:

  class [Ljava.lang.String;
  class [Ljava.lang.String;

I do not think this is a duplicate of bug 92032 even if they might be related.
This is fixed in 3.2M1.

d:\tests_sources&gt;java -jar d:\org.eclipse.jdt.core_3.1.0.jar -classpath 
d:\jdks\jdk1.5.0_05\jre\lib\rt.jar -1.5 X.java

d:\tests_sources&gt;java X
class [Ljava.lang.String;
class [Ljava.lang.String;

Where X is:
public class X {

  public static &lt;T&gt; void foo(T ... values) {
      System.out.println(values.getClass());
  }

	public static void main(String args[]) {
	  X.&lt;String&gt;foo("monkey", "cat");
      X.&lt;String&gt;foo(new String[] { "monkey", "cat" });
	}
}

Looks like a dup of bug 102181. I will add this test case as a regression test.

*** This bug has been marked as a duplicate of 102181 ***
Added org.eclipse.jdt.core.tests.compiler.regression.VarargsTest.test035</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108096" />
    <CreationDate amount="2005-08-26 06:42:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Grid dimension doesn't have hint message for limitation.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Add a grid.</Line>
          <Line>2. Set row number and column number as "11111111111111111".</Line>
          <Line>3. Click on "OK".</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Description: Grid dimension doesn't have hint message for limitation.

Steps to reproduce:
1. Add a grid.
2. Set row number and column number as "11111111111111111".
3. Click on "OK".

Actual result: 3*3 grid appears in layout view.
I don't think this make sense to let user input a number bigger than Max Java int value.
It's better to create a table with default value that pop up a message and let user change the value manually.
Verified in build 20051206.</WithStack>
    <WithOutStack>Description: Grid dimension doesn't have hint message for limitation.

Steps to reproduce:
1. Add a grid.
2. Set row number and column number as "11111111111111111".
3. Click on "OK".

Actual result: 3*3 grid appears in layout view.
I don't think this make sense to let user input a number bigger than Max Java int value.
It's better to create a table with default value that pop up a message and let user change the value manually.
Verified in build 20051206.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108097" />
    <CreationDate amount="2005-08-26 07:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="minor" />
    <Summery>[Navigator] AIOOBE when cancelling paste action override question</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437330571448">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable
(java.lang.ArrayIndexOutOfBoundsException: -1)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:3241)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:3164)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:126)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3113)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2768)</Frame>
          <Frame depth="5">org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:153)</Frame>
          <Frame depth="6">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:303)</Frame>
          <Frame depth="7">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:453)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:261)</Frame>
          <Frame depth="9">org.eclipse.ui.actions.CopyFilesAndFoldersOperation.copyResources(CopyFilesAndFoldersOperation.java:473)</Frame>
          <Frame depth="10">org.eclipse.ui.views.navigator.PasteAction.run(PasteAction.java:135)</Frame>
          <Frame depth="11">org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:167)</Frame>
          <Frame depth="12">org.eclipse.ui.actions.TextActionHandler$PasteActionHandler.runWithEvent(TextActionHandler.java:258)</Frame>
          <Frame depth="13">org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:222)</Frame>
          <Frame depth="14">org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:117)</Frame>
          <Frame depth="15">org.eclipse.core.commands.Command.execute(Command.java:311)</Frame>
          <Frame depth="16">org.eclipse.core.commands.ParameterizedCommand.execute(ParameterizedCommand.java:396)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:459)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:781)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:828)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:550)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:493)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:117)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Display.filterEvent(Display.java:920)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:883)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:908)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:893)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:921)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:917)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1231)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3157)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Tree.WM_CHAR(Tree.java:2948)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Control.windowProc(Control.java:3058)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Tree.windowProc(Tree.java:2908)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.windowProc(Display.java:3772)</Frame>
          <Frame depth="36">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="37">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1680)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2763)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1734)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1698)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="42">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="44">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="45">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="46">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="47">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="48">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="49">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="50">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.basicRun(Main.java:282)</Frame>
          <Frame depth="53">org.eclipse.core.launcher.Main.run(Main.java:977)</Frame>
          <Frame depth="54">org.eclipse.core.launcher.Main.main(Main.java:952)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437330571448">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>-1</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.ui.actions.CopyFilesAndFoldersOperation$1.run(CopyFilesAndFoldersOperation.java:260)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:150)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:36)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- In the Resource Navigator, create a simple project and create a folder 'f' in it</Line>
          <Line>- Copy .project from the project into folder f</Line>
          <Line>- Copy f/.project to clipboard, select the project, and paste</Line>
          <Line>- A Resource Exists dialog appears</Line>
          <Line>- exit the dialog by pressing the Esc key, or by clicking the close box</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050823-0800

- In the Resource Navigator, create a simple project and create a folder 'f' in it
- Copy .project from the project into folder f
- Copy f/.project to clipboard, select the project, and paste
- A Resource Exists dialog appears
- exit the dialog by pressing the Esc key, or by clicking the close box

org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.ArrayIndexOutOfBoundsException: -1)
	at org.eclipse.swt.SWT.error(SWT.java:3241)
	at org.eclipse.swt.SWT.error(SWT.java:3164)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:126)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3113)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2768)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:153)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:303)
	at
org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:453)
	at
org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:261)
	at
org.eclipse.ui.actions.CopyFilesAndFoldersOperation.copyResources(CopyFilesAndFoldersOperation.java:473)
	at org.eclipse.ui.views.navigator.PasteAction.run(PasteAction.java:135)
	at
org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:167)
	at
org.eclipse.ui.actions.TextActionHandler$PasteActionHandler.runWithEvent(TextActionHandler.java:258)
	at org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:222)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:117)
	at org.eclipse.core.commands.Command.execute(Command.java:311)
	at
org.eclipse.core.commands.ParameterizedCommand.execute(ParameterizedCommand.java:396)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:459)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:781)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:828)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:550)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:493)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:117)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:920)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:883)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:908)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:893)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:921)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:917)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1231)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3157)
	at org.eclipse.swt.widgets.Tree.WM_CHAR(Tree.java:2948)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3058)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:2908)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3772)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1680)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2763)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1734)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1698)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:282)
	at org.eclipse.core.launcher.Main.run(Main.java:977)
	at org.eclipse.core.launcher.Main.main(Main.java:952)
Caused by: java.lang.ArrayIndexOutOfBoundsException: -1
	at
org.eclipse.ui.actions.CopyFilesAndFoldersOperation$1.run(CopyFilesAndFoldersOperation.java:260)
	at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:150)
	at org.eclipse.ui.internal.UISynchronizer$1.run(UISynchronizer.java:36)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)
	... 52 more
Paul, could you investigate please?
A MessageDialog returns SWT.DEFAULT (-1) on ESC or shell window-close ... that's
been translated into a IDialogConstants.CANCEL_ID

PW

verified in RC5

PW</WithStack>
    <WithOutStack>I20050823-0800

- In the Resource Navigator, create a simple project and create a folder 'f' in it
- Copy .project from the project into folder f
- Copy f/.project to clipboard, select the project, and paste
- A Resource Exists dialog appears
- exit the dialog by pressing the Esc key, or by clicking the close box



	... 52 more
Paul, could you investigate please?
A MessageDialog returns SWT.DEFAULT (-1) on ESC or shell window-close ... that's
been translated into a IDialogConstants.CANCEL_ID

PW

verified in RC5

PW</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108098" />
    <CreationDate amount="2005-08-26 07:13:00 -0400" />
    <DupId amount="106334" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Visual Editor requires itself, not GEF</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In the Update Manager (Help -&gt; Software Updates -&gt; Find and Install...), the 
dependency between Visual Editor and GEF is resolved, but displayed 
incorrectly.

When I select VE for installation, I get the message:

Visual Editor (1.1.0) requires feature "Visual Editor (3.1.0)", or compatible.

However, the message should be:

Visual Editor (1.1.0) requires feature "GEF (3.1.0)", or compatible.

The solution is obvious if you know that VE depends on GEF, but otherwise you 
are pretty lost.


*** This bug has been marked as a duplicate of 106334 ***</WithStack>
    <WithOutStack>In the Update Manager (Help -&gt; Software Updates -&gt; Find and Install...), the 
dependency between Visual Editor and GEF is resolved, but displayed 
incorrectly.

When I select VE for installation, I get the message:

Visual Editor (1.1.0) requires feature "Visual Editor (3.1.0)", or compatible.

However, the message should be:

Visual Editor (1.1.0) requires feature "GEF (3.1.0)", or compatible.

The solution is obvious if you know that VE depends on GEF, but otherwise you 
are pretty lost.


*** This bug has been marked as a duplicate of 106334 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108099" />
    <CreationDate amount="2005-08-26 07:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.5.0M3" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Binary weaving ITDs (including generic ones) #1</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="228" end="302" />
        <code>public void testBinaryWeavingITDs2() {runTest("binary weaving ITDs - 2");}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I'm just not sure if this works right now... I started writing a few testcases,
I got unstuck - but not for the reason I thought I would but for something much
more fundamental.  You can see the problem I hit with the testcase

public void testBinaryWeavingITDs2() {runTest("binary weaving ITDs - 2");}

in GenericsTests which is currently commented out, its a very simple test run:

step1) It weaves a BaseClass with an aspect A1 into an output jar (-1.5,
-Xreweavable) - A1 adds a field List&lt;String&gt; to BaseClass.

step2) it then uses that output jar as input to another weave, this time with
aspect A2 - A2 is defined to add another field called List&lt;String&gt; to BaseClass.

This was my first simple scenario - the second step verifies the binary weaving
of A1 and BaseClass together.

but it just doesnt work.

The first compile step is OK, the second compile step fails - you get an error
from A2 saying it cant find the 2nd list it introduced onto the base type.

Digging a little, I find this strange circumstance:

Look in AjLookupEnvironment.weaveInterTypeDeclarations(SourceTypeBinding
sourceType, Collection typeMungers, 
			Collection declareParents, Collection declareAnnotationOnTypes, boolean
skipInners) 

this method is passed a set of type mungers. In the case of the 2nd compile,
this includes the one that adds the second field, 'list2':

[(EclipseTypeMunger ResolvedTypeMunger(Field, java.util.List&lt;N&gt; BaseClass.list2))]

the first part of the method then says:
- is there a weaverstate info around?  When weaveIntertypeDeclarations is
running for BaseClass the answer to this question is YES (we built things
reweavable).  The if() block then retrieves type mungers from the state info,
applies them to the target type *AND RETURNS* - it doesnt continue to apply the
set it was passed?!?!?  So the list2 never makes it onto the type.
I commented out the return to enable it to proceed and apply the type mungers it
was passed as well, and that causes this test to work but others in the suite to
fail :(

So I'm not quite sure whats wrong there, but something is... and making
reweavable the default will add to the confusion when we decide to do that...
for M4
Fix checked in.  Waiting on build before closing - see related bug pr83717.
fix available, woooo</WithStack>
    <WithOutStack>I'm just not sure if this works right now... I started writing a few testcases,
I got unstuck - but not for the reason I thought I would but for something much
more fundamental.  You can see the problem I hit with the testcase

public void testBinaryWeavingITDs2() {runTest("binary weaving ITDs - 2");}

in GenericsTests which is currently commented out, its a very simple test run:

step1) It weaves a BaseClass with an aspect A1 into an output jar (-1.5,
-Xreweavable) - A1 adds a field List&lt;String&gt; to BaseClass.

step2) it then uses that output jar as input to another weave, this time with
aspect A2 - A2 is defined to add another field called List&lt;String&gt; to BaseClass.

This was my first simple scenario - the second step verifies the binary weaving
of A1 and BaseClass together.

but it just doesnt work.

The first compile step is OK, the second compile step fails - you get an error
from A2 saying it cant find the 2nd list it introduced onto the base type.

Digging a little, I find this strange circumstance:

Look in AjLookupEnvironment.weaveInterTypeDeclarations(SourceTypeBinding
sourceType, Collection typeMungers, 
			Collection declareParents, Collection declareAnnotationOnTypes, boolean
skipInners) 

this method is passed a set of type mungers. In the case of the 2nd compile,
this includes the one that adds the second field, 'list2':

[(EclipseTypeMunger ResolvedTypeMunger(Field, java.util.List&lt;N&gt; BaseClass.list2))]

the first part of the method then says:
- is there a weaverstate info around?  When weaveIntertypeDeclarations is
running for BaseClass the answer to this question is YES (we built things
reweavable).  The if() block then retrieves type mungers from the state info,
applies them to the target type *AND RETURNS* - it doesnt continue to apply the
set it was passed?!?!?  So the list2 never makes it onto the type.
I commented out the return to enable it to proceed and apply the type mungers it
was passed as well, and that causes this test to work but others in the suite to
fail :(

So I'm not quite sure whats wrong there, but something is... and making
reweavable the default will add to the confusion when we decide to do that...
for M4
Fix checked in.  Waiting on build before closing - see related bug pr83717.
fix available, woooo</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="108100" />
    <CreationDate amount="2005-08-26 07:29:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.5.0M3" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Binary weaving ITDs (including generic ones) #2</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="148" end="164" />
        <code>class Foo&lt;T&gt; {
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Relating to the first bug I raised on this.  Once that issue is resolved, we can
explore more interesting cases.  For example, for a generic type:

class Foo&lt;T&gt; {
}

binary weaving

aspect Goo {
  List&lt;G&gt; Foo&lt;G&gt;.x;
}

In the 'all source' case, this works by preserving an alias list in the ITD
which is then passed to scopes as required, in the above case the ITD for 'x'
has an alias list of 'G' indicating that when someone asks for G, what they
really mean is the first type variable defined in Foo.

However, the alias list is *not* persisted in the ITD that makes it to the disk
(it makes it to the disk as a munger).  Actually I just looked in
ResolvedTypeMunger and it has an unused field I should have deleted called
'typeVariableToGenericTypeVariableIndex' - left over from some prototype work.

I suspect for binary weaving of the munger to work, you need to persist the
alias list - the reason i dont right now is I couldnt write a testcase to verify
binary weaving was broken because of the first binary weaving ITD bug I've
raised (and I'm not putting in a bunch of serialization/deserialization
infrastructure without a way to verify its ok...).  I'm sure there are other
test strategies that could be used other than using Xreweavable like I did in
the first bug but what I did in that bug seemed such a straightforward way to do
it that I was shocked when it failed and it seemed so fundamental that it needed
fixing first...
for M4
this should have been tagged M4...
type aliases are preserved in the bytecode now.  basic binary weaving is working!!</WithStack>
    <WithOutStack>Relating to the first bug I raised on this.  Once that issue is resolved, we can
explore more interesting cases.  For example, for a generic type:

class Foo&lt;T&gt; {
}

binary weaving

aspect Goo {
  List&lt;G&gt; Foo&lt;G&gt;.x;
}

In the 'all source' case, this works by preserving an alias list in the ITD
which is then passed to scopes as required, in the above case the ITD for 'x'
has an alias list of 'G' indicating that when someone asks for G, what they
really mean is the first type variable defined in Foo.

However, the alias list is *not* persisted in the ITD that makes it to the disk
(it makes it to the disk as a munger).  Actually I just looked in
ResolvedTypeMunger and it has an unused field I should have deleted called
'typeVariableToGenericTypeVariableIndex' - left over from some prototype work.

I suspect for binary weaving of the munger to work, you need to persist the
alias list - the reason i dont right now is I couldnt write a testcase to verify
binary weaving was broken because of the first binary weaving ITD bug I've
raised (and I'm not putting in a bunch of serialization/deserialization
infrastructure without a way to verify its ok...).  I'm sure there are other
test strategies that could be used other than using Xreweavable like I did in
the first bug but what I did in that bug seemed such a straightforward way to do
it that I was shocked when it failed and it seemed so fundamental that it needed
fixing first...
for M4
this should have been tagged M4...
type aliases are preserved in the bytecode now.  basic binary weaving is working!!</WithOutStack>
  </Bug>
</infozilla-output>

