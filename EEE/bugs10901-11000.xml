<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="10901" />
    <CreationDate amount="2002-03-06 16:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Performance: use lineToCodeIndexes() instead of locationsOfLine()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I've been stepping through the breakpoint code, and I've noticed that 
breakpoints seem to spend a fair amount of time trying to install themselves.  
Ever time a class prepare event comes in, the breakpoint scans the class to see 
if it can place itself.  This is particularly painful for inner classes, since 
the breakpoint doesn't know which inner class it belongs to.

In ClassTypeImpl.locationsOfLine(), the JDI method locationsOfLine() is 
repeatedly invoked.  Unfortunately, this method reports failure by throwing an 
exception.  This is very slow (especially on Sun-based VMs).

This code could be optimized by asking if the method has lineToCodeIndexes() 
(indices(sp)?) for that line.  This method returns null for failure instead of 
throwing an exception, so should be mush faster.

I'm not very familiar with JDI, though, so I'm not 100% certain that the 
optimization is valid.  It looks a lot less painful to me, though.

(20020215 build)
#lineToCodeIndexes is not part of the JDI API - it is part of the internal 
implementation. The API is #locationsOfLine(..). Since we run with any JDI 
implementation, we cannot rely on the internal method/impl to exist.</WithStack>
    <WithOutStack>I've been stepping through the breakpoint code, and I've noticed that 
breakpoints seem to spend a fair amount of time trying to install themselves.  
Ever time a class prepare event comes in, the breakpoint scans the class to see 
if it can place itself.  This is particularly painful for inner classes, since 
the breakpoint doesn't know which inner class it belongs to.

In ClassTypeImpl.locationsOfLine(), the JDI method locationsOfLine() is 
repeatedly invoked.  Unfortunately, this method reports failure by throwing an 
exception.  This is very slow (especially on Sun-based VMs).

This code could be optimized by asking if the method has lineToCodeIndexes() 
(indices(sp)?) for that line.  This method returns null for failure instead of 
throwing an exception, so should be mush faster.

I'm not very familiar with JDI, though, so I'm not 100% certain that the 
optimization is valid.  It looks a lot less painful to me, though.

(20020215 build)
#lineToCodeIndexes is not part of the JDI API - it is part of the internal 
implementation. The API is #locationsOfLine(..). Since we run with any JDI 
implementation, we cannot rely on the internal method/impl to exist.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10902" />
    <CreationDate amount="2002-03-06 16:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Spaces should not be allowed at beginning or end of path segments</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>From newsgroup:

...
it works now !
i had a trailing space in the repository path : /cvsroot/objectbridge / (see 
the log of prev. post)
jakob

...
ok
Root /cvsroot/objectbridge
Global_option -n
Argument -d
Argument -A
Directory .
/cvsroot/objectbridge /
Directory .
/cvsroot/objectbridge /
Argument .
update
...
Fixed</WithStack>
    <WithOutStack>From newsgroup:

...
it works now !
i had a trailing space in the repository path : /cvsroot/objectbridge / (see 
the log of prev. post)
jakob

...
ok
Root /cvsroot/objectbridge
Global_option -n
Argument -d
Argument -A
Directory .
/cvsroot/objectbridge /
Directory .
/cvsroot/objectbridge /
Argument .
update
...
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10903" />
    <CreationDate amount="2002-03-06 16:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Turning off/on cvs decorators makes workspace unresponsive</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020305
Team 2.0

I have 10 projects shared via the CVS.
5 live in dev.eclipse.org (extssh)
5 live in zrhcvs.zrh.oti.com (pserver)

In the Java perspective, no editors open, tasks list and packages view.  The 
packages view has no hierarchies expanded (only showing projects).
Turning off cvs decorators is immediate.
Turn the cvs decorators back on: 30 seconds.
No busy cursor and my workbench is not responsive.

Disabling "Compute deep outgoing state..." on the decorator preferences locked 
up the workspace/computer for another 2 minutes.
Turing it back on, another 2 minutes.
*** Bug 10904 has been marked as a duplicate of this bug. ***
Ouch. I see this too. This is new behaviour; we must fix this for the next
integration build.
Correction. The behaviour I was seeing was due to another problem which is not
in the builds but only in our latest; it's currently being fixed.

I've tried to reproduce this but cannot. Turning the CVS decorator on and off is
instantaneous. While some of the decorations (especially those computed deeply)
don't show up right away, this intentional - they are computed in another thread
and the UI updates when they are ready. But at no time was I able to cause the
workbench to become unresponsive. I will keep trying.

Also note that the repository is not contacted when decorating, so the location
of the projects *should* be irrelevant.
I got your workspace. I cannot reproduce this problem on Win2K or on Linux.
Trying NT...
Hmm, two seconds after I replied, I am now seeing this on Win2K for some reason.
Investigating.
Turn team decorators off. Now toggle the binary plugin decorator on and off. Do
you see the same sort of freeze? I see a noticeable freeze when doing this. This
would indicate to me that it's not a problem with the Team decorators.
Investigating further...
I have shown this to Tod, he asked for it to be assigned to him.
Awaiting example workspace from JM.
Sent workspace to Tod
May be related to Bug 11140.
When I started this image up I found that refreshListeners on 
getDecoratorManager was called 677 times on startup.
Supported added for multi element label updates and decoration of text and 
images.

The IBatchLabelDecorator (which extends ILabelDecorator) has been added that 
allows for Decoration of an Image and a Text in the same method invocation 
using the decorateTextAndImage method.

The LabelProviderChangedEvent can now accept an Array of Objects as its 
elements. The default handleLabelProviderChanged method in StructuredViewer now 
calls update(Object[],String[]) rather than update(Object,String[]). The 
previous getElement() API remains and now returns the first element in the list 
of elements if there is one (otherwise null as before).
Marking closed as dependant PRs are fixed and performance has improved.
Marking as closed.</WithStack>
    <WithOutStack>Build 20020305
Team 2.0

I have 10 projects shared via the CVS.
5 live in dev.eclipse.org (extssh)
5 live in zrhcvs.zrh.oti.com (pserver)

In the Java perspective, no editors open, tasks list and packages view.  The 
packages view has no hierarchies expanded (only showing projects).
Turning off cvs decorators is immediate.
Turn the cvs decorators back on: 30 seconds.
No busy cursor and my workbench is not responsive.

Disabling "Compute deep outgoing state..." on the decorator preferences locked 
up the workspace/computer for another 2 minutes.
Turing it back on, another 2 minutes.
*** Bug 10904 has been marked as a duplicate of this bug. ***
Ouch. I see this too. This is new behaviour; we must fix this for the next
integration build.
Correction. The behaviour I was seeing was due to another problem which is not
in the builds but only in our latest; it's currently being fixed.

I've tried to reproduce this but cannot. Turning the CVS decorator on and off is
instantaneous. While some of the decorations (especially those computed deeply)
don't show up right away, this intentional - they are computed in another thread
and the UI updates when they are ready. But at no time was I able to cause the
workbench to become unresponsive. I will keep trying.

Also note that the repository is not contacted when decorating, so the location
of the projects *should* be irrelevant.
I got your workspace. I cannot reproduce this problem on Win2K or on Linux.
Trying NT...
Hmm, two seconds after I replied, I am now seeing this on Win2K for some reason.
Investigating.
Turn team decorators off. Now toggle the binary plugin decorator on and off. Do
you see the same sort of freeze? I see a noticeable freeze when doing this. This
would indicate to me that it's not a problem with the Team decorators.
Investigating further...
I have shown this to Tod, he asked for it to be assigned to him.
Awaiting example workspace from JM.
Sent workspace to Tod
May be related to Bug 11140.
When I started this image up I found that refreshListeners on 
getDecoratorManager was called 677 times on startup.
Supported added for multi element label updates and decoration of text and 
images.

The IBatchLabelDecorator (which extends ILabelDecorator) has been added that 
allows for Decoration of an Image and a Text in the same method invocation 
using the decorateTextAndImage method.

The LabelProviderChangedEvent can now accept an Array of Objects as its 
elements. The default handleLabelProviderChanged method in StructuredViewer now 
calls update(Object[],String[]) rather than update(Object,String[]). The 
previous getElement() API remains and now returns the first element in the list 
of elements if there is one (otherwise null as before).
Marking closed as dependant PRs are fixed and performance has improved.
Marking as closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10904" />
    <CreationDate amount="2002-03-06 16:21:00 -0500" />
    <DupId amount="10903" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Performance problem with CVS Decorator updating</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I did Replace With&gt;Latest from Repository on 4 small .java files in the same 
package.
It took about 8 seconds after the progress dialog closed for the "&gt;" signs to 
all go away.
I reimported my changes (I had saved them in a Jar) and it took 9 seconds for 
the four "&gt;" signs to reappear.


*** This bug has been marked as a duplicate of 10903 ***</WithStack>
    <WithOutStack>I did Replace With&gt;Latest from Repository on 4 small .java files in the same 
package.
It took about 8 seconds after the progress dialog closed for the "&gt;" signs to 
all go away.
I reimported my changes (I had saved them in a Jar) and it took 9 seconds for 
the four "&gt;" signs to reappear.


*** This bug has been marked as a duplicate of 10903 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10905" />
    <CreationDate amount="2002-03-06 16:22:00 -0500" />
    <DupId amount="8577" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Ordering of added extensions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>As more and more extensions are implemented in a plugin, the Extensions/All 
Extensions tree starts to clutter. At present it doesn't seem to be possible to 
re-arrange the order of the different extensions, they are simply listed in the 
extension tree in the order they were added. It would be nice if one could 
order the extensions after they have been added.
ie. if i would like:
-Action Sets
 extension1
 extension2
 extension3
 extension4

to be ordered as follows:
-Action Sets
 extension1
 extension4
 extension2
 extension3

I would like if there was an easy way to do this (ie. by using "Move Up" 
or "Move Down" on extension4).
We planned a number of usability enhancements of form editors as described in 
bug 8577. In addition to controlling sibling order, copy/cut/paste operations 
are considered.

*** This bug has been marked as a duplicate of 8577 ***</WithStack>
    <WithOutStack>As more and more extensions are implemented in a plugin, the Extensions/All 
Extensions tree starts to clutter. At present it doesn't seem to be possible to 
re-arrange the order of the different extensions, they are simply listed in the 
extension tree in the order they were added. It would be nice if one could 
order the extensions after they have been added.
ie. if i would like:
-Action Sets
 extension1
 extension2
 extension3
 extension4

to be ordered as follows:
-Action Sets
 extension1
 extension4
 extension2
 extension3

I would like if there was an easy way to do this (ie. by using "Move Up" 
or "Move Down" on extension4).
We planned a number of usability enhancements of form editors as described in 
bug 8577. In addition to controlling sibling order, copy/cut/paste operations 
are considered.

*** This bug has been marked as a duplicate of 8577 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10906" />
    <CreationDate amount="2002-03-06 16:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>When merging, incoming conflicts on local deletion doesn't appear</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. In branch branch-9023 or org.eclipse.team.core.cvs, RemoteFolderTreeBuilder</Line>
          <Line>was modified.</Line>
          <Line>2. In HEAD, the above file was deleted.</Line>
          <Line>3. On Merge, the file does not appear as anything. It should be a conflict</Line>
          <Line>I misinterpreted the situation. This problem did not occur</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Here's the scenario:
1. In branch branch-9023 or org.eclipse.team.core.cvs, RemoteFolderTreeBuilder 
was modified.
2. In HEAD, the above file was deleted.
3. On Merge, the file does not appear as anything. It should be a conflict
I misinterpreted the situation. This problem did not occur</WithStack>
    <WithOutStack>Here's the scenario:
1. In branch branch-9023 or org.eclipse.team.core.cvs, RemoteFolderTreeBuilder 
was modified.
2. In HEAD, the above file was deleted.
3. On Merge, the file does not appear as anything. It should be a conflict
I misinterpreted the situation. This problem did not occur</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10907" />
    <CreationDate amount="2002-03-06 16:42:00 -0500" />
    <DupId amount="10816" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>When debugging, get flipped to resource perspective</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1) I am in the Java perspective and I select debug -&gt; my app from the toolbar.</Line>
          <Line>The app launches but eclipse flips to the Resource perspective (the first</Line>
          <Line>perspective in the list?)</Line>
          <Line>2) I go to the debug perspective in anticipation of hitting the break point.</Line>
          <Line>3) The app hits a break point and flips me to the Resource perspective.</Line>
          <Line>4) I go back to the debug perspective, step through a bunch of code and then</Line>
          <Line>hit the resume toolbar item - once again the resource perspective appears.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Eclipse 20020305-I

1) I am in the Java perspective and I select debug -&gt; my app from the toolbar. 
The app launches but eclipse flips to the Resource perspective (the first 
perspective in the list?)
2) I go to the debug perspective in anticipation of hitting the break point.
3) The app hits a break point and flips me to the Resource perspective.
4) I go back to the debug perspective, step through a bunch of code and then 
hit the resume toolbar item - once again the resource perspective appears.


*** This bug has been marked as a duplicate of 10816 ***</WithStack>
    <WithOutStack>Eclipse 20020305-I

1) I am in the Java perspective and I select debug -&gt; my app from the toolbar. 
The app launches but eclipse flips to the Resource perspective (the first 
perspective in the list?)
2) I go to the debug perspective in anticipation of hitting the break point.
3) The app hits a break point and flips me to the Resource perspective.
4) I go back to the debug perspective, step through a bunch of code and then 
hit the resume toolbar item - once again the resource perspective appears.


*** This bug has been marked as a duplicate of 10816 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10908" />
    <CreationDate amount="2002-03-06 16:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>plugin.xml editor keeps wiping out my .classpath file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="4">
      <Enumeration lines="8">
        <Lines>
          <Line>1) create a PDE project called TableTest.</Line>
          <Line>2) import the attached zip file into TableTest using Import dialog.</Line>
          <Line>3) Fix the Java Build Path using the properties dialog so that it can compile.</Line>
          <Line>4) Notice now that plugin.xml has an error and attempt to fix this error by</Line>
          <Line>correcting the version field - the .classpath gets set back to the default and</Line>
          <Line>the project does not compile.</Line>
          <Line>Same thing happens when trying to fix the class name.</Line>
          <Line>And 'Update Classpath' wipes out my PDE project classpath too.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="14">
        <Lines>
          <Line>1) All the plug-ins you require must be listed in your plugin.xml</Line>
          <Line>using 'import' elements in 'requires' group. If you have added dependencies to</Line>
          <Line>other plug-ins but didn't add 'import' statement, you will loose these entries</Line>
          <Line>from the classpath.</Line>
          <Line />
          <Line>2) PDE depends on the presence of build.properties file to connect libraries</Line>
          <Line>and source. These file is created when PDE is used to create new plug-in</Line>
          <Line>projects. Create one dummy project and examine the contents of this file - the</Line>
          <Line>syntax is very simple.</Line>
          <Line />
          <Line>3) PDE requires that you DO NOT have Java source at the project root. Instead,</Line>
          <Line>you must create a source folder and place all your source there. In addition,</Line>
          <Line>you need to map this source folder to the run-time library name to be able to</Line>
          <Line>perform tasks like classpath update and JAR build.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="31">
        <Lines>
          <Line>1) All the plug-ins you require must be listed in your plugin.xml</Line>
          <Line>using 'import' elements in 'requires' group. If you have added dependencies to</Line>
          <Line>other plug-ins but didn't add 'import' statement, you will loose these entries</Line>
          <Line>from the classpath.</Line>
          <Line>My answer:</Line>
          <Line>If I add:</Line>
          <Line>&lt;requires&gt;</Line>
          <Line>&lt;import plugin="org.eclipse.core.runtime"/&gt;</Line>
          <Line>...</Line>
          <Line>&lt;/requires&gt;</Line>
          <Line>to the plugin.xml file I get an error:</Line>
          <Line>'This plugin-in contains unresolved and/or cyclical references to other</Line>
          <Line>plug-ins'</Line>
          <Line>even though I know they are needed when I Run as 'Run-time Workbench'.</Line>
          <Line>I can't find a way to remove this alert/Bug.</Line>
          <Line />
          <Line>2) PDE depends on the presence of build.properties file to connect libraries</Line>
          <Line>and source. These file is created when PDE is used to create new plug-in</Line>
          <Line>projects. Create one dummy project and examine the contents of this file - the</Line>
          <Line>syntax is very simple.</Line>
          <Line>My answer:</Line>
          <Line>There is no build.propeties file in my PDE project(Not even in the filesystem).</Line>
          <Line>I have now manually created one but it seems READONLY. I cannot change the file</Line>
          <Line>within eclipse.</Line>
          <Line />
          <Line>3) PDE requires that you DO NOT have Java source at the project root. Instead,</Line>
          <Line>you must create a source folder and place all your source there. In addition,</Line>
          <Line>you need to map this source folder to the run-time library name to be able to</Line>
          <Line>perform tasks like classpath update and JAR build.</Line>
          <Line>My answer:</Line>
          <Line>I use a /src folder... (Which eclipse sometimes 'forgets').</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="9">
        <Lines>
          <Line>1) Create your plug-in as normal.</Line>
          <Line>2) Save all.</Line>
          <Line>3) Reset your Java Build path.</Line>
          <Line>4) Project-&gt;Rebuild Project (it doesn't kill your Java Build Path)</Line>
          <Line>5) Export project to .jar file</Line>
          <Line>6) Set-up directory structure as normal and copy the plugin.xml and</Line>
          <Line>yourplugin.jar file to it.</Line>
          <Line>7) Close and reload Eclipse (no, I haven't found a way to run the Run-Time</Line>
          <Line>Workbench)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Every time I edit the plugin.xml file, my .classpath gets wiped out and I lose 
all references to jars and projects that are required to compile source.

I modified the "&lt;plugin class" and the "&lt;plugin version" using the source 
editor and each time the .classpath got reset to the default.
Plug-in manifest editor is configured to update classpath if changes are made 
to requires clause. If you add or remove (or otherwise change) some of the 
dependent plug-ins (Dependencies page), PDE will update your classpath on save. 
You can defeat this behaviour in PDE Preferences-&gt;Java Build path control. 

If you modify plugin.xml using a source editor, PDE should not touch 
your .classpath. This is strange - are you sure PDE is doing this?

BTW, the reason PDE may be wiping out your .classpath is that SWT classpath is 
custom i.e. it is not possible to construct a working class path using data in 
build.properties and plugin.xml as with any other plug-in. Just use preferences 
to defeat the classpath update feature.
Created attachment 441
zip file
I was not editing the SWT plugin.xml file.

I have attached the plugin.  I got it from another bug report where it was 
supposed to demonstrate a problem.

Here are the steps I took:

1) create a PDE project called TableTest.
2) import the attached zip file into TableTest using Import dialog.
3) Fix the Java Build Path using the properties dialog so that it can compile.
4) Notice now that plugin.xml has an error and attempt to fix this error by 
correcting the version field - the .classpath gets set back to the default and 
the project does not compile.
Same thing happens when trying to fix the class name.
And 'Update Classpath' wipes out my PDE project classpath too.

I have tried for 1 week now to port a plugin from 1.0 to 2.0 but
several strange things happens like this bug.
I almost crying... the PDE does NOT work :-(

I use at the moment: eclipse-SDK-20020521-win32.zip


Please note the following:

1) All the plug-ins you require must be listed in your plugin.xml 
using 'import' elements in 'requires' group. If you have added dependencies to 
other plug-ins but didn't add 'import' statement, you will loose these entries 
from the classpath.

2) PDE depends on the presence of build.properties file to connect libraries 
and source. These file is created when PDE is used to create new plug-in 
projects. Create one dummy project and examine the contents of this file - the 
syntax is very simple.

3) PDE requires that you DO NOT have Java source at the project root. Instead, 
you must create a source folder and place all your source there. In addition, 
you need to map this source folder to the run-time library name to be able to 
perform tasks like classpath update and JAR build.

The entire Eclipse team uses PDE on a daily bases to develop Eclipse. We are 
sure you can too if you just get over some hurldes you are currently 
experiences. I am using PDE to develop PDE too :-).

SWT plug-in is an exception - it has a custom build script and custom 
classpaths and PDE automated support must be turned off for it.
Dejan:

Whatever I do my .classpath file gets wipes out from minute to minute when 
developing in the PDE.

I use 'Add variable' and I need around 200 mouseclick's to update the 
classpath each time just to pick up the jar files in different plugins I need.
(My arm hurts...)

And:
You wrote:
1) All the plug-ins you require must be listed in your plugin.xml 
using 'import' elements in 'requires' group. If you have added dependencies to 
other plug-ins but didn't add 'import' statement, you will loose these entries 
from the classpath.
My answer:
If I add:
&lt;requires&gt;
   &lt;import plugin="org.eclipse.core.runtime"/&gt;
   ...
&lt;/requires&gt;
to the plugin.xml file I get an error:
'This plugin-in contains unresolved and/or cyclical references to other
plug-ins'
even though I know they are needed when I Run as 'Run-time Workbench'.
I can't find a way to remove this alert/Bug.

2) PDE depends on the presence of build.properties file to connect libraries 
and source. These file is created when PDE is used to create new plug-in 
projects. Create one dummy project and examine the contents of this file - the 
syntax is very simple.
My answer:
There is no build.propeties file in my PDE project(Not even in the filesystem).
I have now manually created one but it seems READONLY. I cannot change the file 
within eclipse.

3) PDE requires that you DO NOT have Java source at the project root. Instead, 
you must create a source folder and place all your source there. In addition, 
you need to map this source folder to the run-time library name to be able to 
perform tasks like classpath update and JAR build.
My answer:
I use a /src folder... (Which eclipse sometimes 'forgets').

The entire Eclipse team uses PDE on a daily bases to develop Eclipse. We are 
sure you can too if you just get over some hurldes you are currently 
experiences. I am using PDE to develop PDE too :-).
My answer:
Well, have you actually tried 2.0 then ?

My experience:
1.
Try to download the latest build.
Take your well working plugin(using SWT/JDT) from 1.0.
Create a new plugin project in 2.0
Copy and refresh from old project.
Test it with 'Run-time Workbench'
It does not work.
(I know you need to create launch configurations etc.)

2.
Create a new PDE project using the wizard.
Test it with 'Run-time Workbench'
It does not work.

I started this noon my eclipse 2.0 experiences with exactly the described 
problems (manipulating plugin.xml wiped out my .classpath file ... except for 
output and the runtime var-entry).

later on that problem disappeared ... (i think it was after i changed at least 
once into Plug-in Development perspective and corrected the plugin.xml 
there ... before that i've been in the Java Perspective)

my last problem was that the source path still disappeared when changing the 
plugin.xml. now i found out that that could be prevented by adding a jar file 
to the runtime-tab in the plugin file and then add the src folder in the window 
below to the library content. I think that that is necessary for deployment but 
i scheduled it after the development.

i hope that helps tracking and avoiding the problems.
I've been experiencing this exact problem. Even if I have the proper libraries 
or variables set-up, I will always get this error in the overview of 
plugin.xml:
This plug-in contains unresolved and/or cyclical references to other plug-ins.

Any attempt to Update the Classpath and it will remove ALL my variables and 
libraries from the Java Build Path (creating a plethora of other problems with 
my import statements). If I try and save all, the whole thing explodes on me 
too. And like others have said, it's really annoying having to manually reset 
your Java Build Path everytime you save.

However, I have found a workaround. Not a good one, but it works none the 
less...

1) Create your plug-in as normal.
2) Save all.
3) Reset your Java Build path.
4) Project-&gt;Rebuild Project (it doesn't kill your Java Build Path)
5) Export project to .jar file
6) Set-up directory structure as normal and copy the plugin.xml and 
yourplugin.jar file to it.
7) Close and reload Eclipse (no, I haven't found a way to run the Run-Time 
Workbench)

I'm pretty noob to all of this (about three days!), and I would love it if I 
was just being a noob and was doing something all wrong! But so far, any 
suggestions in this report haven't helped.
Wassim, see if this defect is still current and if not, close.
Kevin,
You should never have to go through all that to get a plug-in running.  Here 
is what I think the problem is:
1. If you open the plugin.xml editor, and it tells you that you have 
cyclical/unresolved references to other plug-ins.  It means that you 
definitely do, and you could never run your plug-in.  I'm guessing that your 
setup is the basic self-hosting setup, which involves external plug-ins.  What 
you need to do is go to Preferences-&gt;Plug-in Development-&gt;Target Platform.  
Select 'Not in Workspace' and then OK.  This should solve this problem.
2. If you do not want PDE to update your classpath every time you make a 
change to the list of dependencies, go to Preferences-&gt;Plug-in Development-
&gt;Java Build Path Control, and uncheck the preference that allows PDE to do so.
However, if you fixed problem #1, I'm sure that you would want PDE to update 
your classpath when you change the list of dependencies, so that you do not 
have to update it manually.

Closing the defect since people have the option to turn on/off PDE's control 
over the build path.
Thanks, that worked. =)</WithStack>
    <WithOutStack>Every time I edit the plugin.xml file, my .classpath gets wiped out and I lose 
all references to jars and projects that are required to compile source.

I modified the "&lt;plugin class" and the "&lt;plugin version" using the source 
editor and each time the .classpath got reset to the default.
Plug-in manifest editor is configured to update classpath if changes are made 
to requires clause. If you add or remove (or otherwise change) some of the 
dependent plug-ins (Dependencies page), PDE will update your classpath on save. 
You can defeat this behaviour in PDE Preferences-&gt;Java Build path control. 

If you modify plugin.xml using a source editor, PDE should not touch 
your .classpath. This is strange - are you sure PDE is doing this?

BTW, the reason PDE may be wiping out your .classpath is that SWT classpath is 
custom i.e. it is not possible to construct a working class path using data in 
build.properties and plugin.xml as with any other plug-in. Just use preferences 
to defeat the classpath update feature.
Created attachment 441
zip file
I was not editing the SWT plugin.xml file.

I have attached the plugin.  I got it from another bug report where it was 
supposed to demonstrate a problem.

Here are the steps I took:

1) create a PDE project called TableTest.
2) import the attached zip file into TableTest using Import dialog.
3) Fix the Java Build Path using the properties dialog so that it can compile.
4) Notice now that plugin.xml has an error and attempt to fix this error by 
correcting the version field - the .classpath gets set back to the default and 
the project does not compile.
Same thing happens when trying to fix the class name.
And 'Update Classpath' wipes out my PDE project classpath too.

I have tried for 1 week now to port a plugin from 1.0 to 2.0 but
several strange things happens like this bug.
I almost crying... the PDE does NOT work :-(

I use at the moment: eclipse-SDK-20020521-win32.zip


Please note the following:

1) All the plug-ins you require must be listed in your plugin.xml 
using 'import' elements in 'requires' group. If you have added dependencies to 
other plug-ins but didn't add 'import' statement, you will loose these entries 
from the classpath.

2) PDE depends on the presence of build.properties file to connect libraries 
and source. These file is created when PDE is used to create new plug-in 
projects. Create one dummy project and examine the contents of this file - the 
syntax is very simple.

3) PDE requires that you DO NOT have Java source at the project root. Instead, 
you must create a source folder and place all your source there. In addition, 
you need to map this source folder to the run-time library name to be able to 
perform tasks like classpath update and JAR build.

The entire Eclipse team uses PDE on a daily bases to develop Eclipse. We are 
sure you can too if you just get over some hurldes you are currently 
experiences. I am using PDE to develop PDE too :-).

SWT plug-in is an exception - it has a custom build script and custom 
classpaths and PDE automated support must be turned off for it.
Dejan:

Whatever I do my .classpath file gets wipes out from minute to minute when 
developing in the PDE.

I use 'Add variable' and I need around 200 mouseclick's to update the 
classpath each time just to pick up the jar files in different plugins I need.
(My arm hurts...)

And:
You wrote:
1) All the plug-ins you require must be listed in your plugin.xml 
using 'import' elements in 'requires' group. If you have added dependencies to 
other plug-ins but didn't add 'import' statement, you will loose these entries 
from the classpath.
My answer:
If I add:
&lt;requires&gt;
   &lt;import plugin="org.eclipse.core.runtime"/&gt;
   ...
&lt;/requires&gt;
to the plugin.xml file I get an error:
'This plugin-in contains unresolved and/or cyclical references to other
plug-ins'
even though I know they are needed when I Run as 'Run-time Workbench'.
I can't find a way to remove this alert/Bug.

2) PDE depends on the presence of build.properties file to connect libraries 
and source. These file is created when PDE is used to create new plug-in 
projects. Create one dummy project and examine the contents of this file - the 
syntax is very simple.
My answer:
There is no build.propeties file in my PDE project(Not even in the filesystem).
I have now manually created one but it seems READONLY. I cannot change the file 
within eclipse.

3) PDE requires that you DO NOT have Java source at the project root. Instead, 
you must create a source folder and place all your source there. In addition, 
you need to map this source folder to the run-time library name to be able to 
perform tasks like classpath update and JAR build.
My answer:
I use a /src folder... (Which eclipse sometimes 'forgets').

The entire Eclipse team uses PDE on a daily bases to develop Eclipse. We are 
sure you can too if you just get over some hurldes you are currently 
experiences. I am using PDE to develop PDE too :-).
My answer:
Well, have you actually tried 2.0 then ?

My experience:
1.
Try to download the latest build.
Take your well working plugin(using SWT/JDT) from 1.0.
Create a new plugin project in 2.0
Copy and refresh from old project.
Test it with 'Run-time Workbench'
It does not work.
(I know you need to create launch configurations etc.)

2.
Create a new PDE project using the wizard.
Test it with 'Run-time Workbench'
It does not work.

I started this noon my eclipse 2.0 experiences with exactly the described 
problems (manipulating plugin.xml wiped out my .classpath file ... except for 
output and the runtime var-entry).

later on that problem disappeared ... (i think it was after i changed at least 
once into Plug-in Development perspective and corrected the plugin.xml 
there ... before that i've been in the Java Perspective)

my last problem was that the source path still disappeared when changing the 
plugin.xml. now i found out that that could be prevented by adding a jar file 
to the runtime-tab in the plugin file and then add the src folder in the window 
below to the library content. I think that that is necessary for deployment but 
i scheduled it after the development.

i hope that helps tracking and avoiding the problems.
I've been experiencing this exact problem. Even if I have the proper libraries 
or variables set-up, I will always get this error in the overview of 
plugin.xml:
This plug-in contains unresolved and/or cyclical references to other plug-ins.

Any attempt to Update the Classpath and it will remove ALL my variables and 
libraries from the Java Build Path (creating a plethora of other problems with 
my import statements). If I try and save all, the whole thing explodes on me 
too. And like others have said, it's really annoying having to manually reset 
your Java Build Path everytime you save.

However, I have found a workaround. Not a good one, but it works none the 
less...

1) Create your plug-in as normal.
2) Save all.
3) Reset your Java Build path.
4) Project-&gt;Rebuild Project (it doesn't kill your Java Build Path)
5) Export project to .jar file
6) Set-up directory structure as normal and copy the plugin.xml and 
yourplugin.jar file to it.
7) Close and reload Eclipse (no, I haven't found a way to run the Run-Time 
Workbench)

I'm pretty noob to all of this (about three days!), and I would love it if I 
was just being a noob and was doing something all wrong! But so far, any 
suggestions in this report haven't helped.
Wassim, see if this defect is still current and if not, close.
Kevin,
You should never have to go through all that to get a plug-in running.  Here 
is what I think the problem is:
1. If you open the plugin.xml editor, and it tells you that you have 
cyclical/unresolved references to other plug-ins.  It means that you 
definitely do, and you could never run your plug-in.  I'm guessing that your 
setup is the basic self-hosting setup, which involves external plug-ins.  What 
you need to do is go to Preferences-&gt;Plug-in Development-&gt;Target Platform.  
Select 'Not in Workspace' and then OK.  This should solve this problem.
2. If you do not want PDE to update your classpath every time you make a 
change to the list of dependencies, go to Preferences-&gt;Plug-in Development-
&gt;Java Build Path Control, and uncheck the preference that allows PDE to do so.
However, if you fixed problem #1, I'm sure that you would want PDE to update 
your classpath when you change the list of dependencies, so that you do not 
have to update it manually.

Closing the defect since people have the option to turn on/off PDE's control 
over the build path.
Thanks, that worked. =)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10909" />
    <CreationDate amount="2002-03-06 17:14:00 -0500" />
    <DupId amount="7522" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Need version tag proposer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When you tag a resource, we no longer support suggesting a tag and optionally 
showing previously used tags.
Turn team decorators off. Now toggle the binary plugin decorator on and off. Do
you see the same sort of freeze? I see a noticeable freeze when doing this. This
would indicate to me that it's not a problem with the Team decorators.
Investigating further...
I clearly annotated the wrong PR. Ignore...


*** This bug has been marked as a duplicate of 7522 ***</WithStack>
    <WithOutStack>When you tag a resource, we no longer support suggesting a tag and optionally 
showing previously used tags.
Turn team decorators off. Now toggle the binary plugin decorator on and off. Do
you see the same sort of freeze? I see a noticeable freeze when doing this. This
would indicate to me that it's not a problem with the Team decorators.
Investigating further...
I clearly annotated the wrong PR. Ignore...


*** This bug has been marked as a duplicate of 7522 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10910" />
    <CreationDate amount="2002-03-06 17:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Tag prompter should open before progress</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>When you tag a resource, the prompter appears while the progress monitor is 
already up.

Ideally the progress monitor should open after the prompter, assuming there is 
near zero cost to opening the prompter (which there is atm).
This appears not to be the case anymore</WithStack>
    <WithOutStack>When you tag a resource, the prompter appears while the progress monitor is 
already up.

Ideally the progress monitor should open after the prompter, assuming there is 
near zero cost to opening the prompter (which there is atm).
This appears not to be the case anymore</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10911" />
    <CreationDate amount="2002-03-06 17:18:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>R2:  gdbPicl can't handle the command response lines &gt; 50000</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>This should be fixed for R2. 
I am doing an estimate to see how difficult this is.
But I have encoutered problem when responses from gdb &gt; 50000 lines and it 
hanged Eclipse.
I have changed the picl to take more than MAXLINES.
However, when the picl needs to handle so many responses from GDB, it may run 
out of memory trying to process all the responses.  I need to investigate more 
for this problem to see how we can handle memory more efficiently.

File changed:
GdbProcess.java
This applies to old CDT, closing as part of cleanup.
Closing</WithStack>
    <WithOutStack>This should be fixed for R2. 
I am doing an estimate to see how difficult this is.
But I have encoutered problem when responses from gdb &gt; 50000 lines and it 
hanged Eclipse.
I have changed the picl to take more than MAXLINES.
However, when the picl needs to handle so many responses from GDB, it may run 
out of memory trying to process all the responses.  I need to investigate more 
for this problem to see how we can handle memory more efficiently.

File changed:
GdbProcess.java
This applies to old CDT, closing as part of cleanup.
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10912" />
    <CreationDate amount="2002-03-06 17:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Installation directory cannot contain "+" signs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330576411">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.launcher.Main.searchForBoot(Main.java:461)</Frame>
          <Frame depth="1">org.eclipse.core.launcher.Main.getBootPath(Main.java:241)</Frame>
          <Frame depth="2">org.eclipse.core.launcher.Main.getBootLoader(Main.java:198)</Frame>
          <Frame depth="3">org.eclipse.core.launcher.Main.basicRun(Main.java:148)</Frame>
          <Frame depth="4">org.eclipse.core.launcher.Main.run(Main.java:442)</Frame>
          <Frame depth="5">org.eclipse.core.launcher.UIMain.main(UIMain.java:52)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you install Eclipse to a directory which contains a plus sign, it will not 
start. Error message on console is as follows:

Exception launching the Eclipse Platform UI:
java.lang.NullPointerException
        at org.eclipse.core.launcher.Main.searchForBoot(Main.java:461)
        at org.eclipse.core.launcher.Main.getBootPath(Main.java:241)
        at org.eclipse.core.launcher.Main.getBootLoader(Main.java:198)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:148)
        at org.eclipse.core.launcher.Main.run(Main.java:442)
        at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)
Failed in:

1.0 + Rollup 1
1.0 + Rollup 1 + Rollup 2


This is because java.net.URLDecoder converts '+' characters to spaces.  This 
goes against the specification for URLS (RFC 1738).  Unfortunately, we need the 
URLDecoder class for supporting GB18030 characters.

I now have a fix that works across VMs.  I am now encoding + characters into the 
URL escape sequence (%2B), before invoking URLDecoder.  URLDecoder then converts 
this correctly back into + characters.  Tested the fix with:

IBM J2RE 1.3.0 IBM build cn130-20010502
IBM J2RE 1.3.1_01a
Sun JDK 1.4.0
OTI J9 2.0 pre-release build 20020409 (java version 1.3.0)</WithStack>
    <WithOutStack>If you install Eclipse to a directory which contains a plus sign, it will not 
start. Error message on console is as follows:

Exception launching the Eclipse Platform UI:

Failed in:

1.0 + Rollup 1
1.0 + Rollup 1 + Rollup 2


This is because java.net.URLDecoder converts '+' characters to spaces.  This 
goes against the specification for URLS (RFC 1738).  Unfortunately, we need the 
URLDecoder class for supporting GB18030 characters.

I now have a fix that works across VMs.  I am now encoding + characters into the 
URL escape sequence (%2B), before invoking URLDecoder.  URLDecoder then converts 
this correctly back into + characters.  Tested the fix with:

IBM J2RE 1.3.0 IBM build cn130-20010502
IBM J2RE 1.3.1_01a
Sun JDK 1.4.0
OTI J9 2.0 pre-release build 20020409 (java version 1.3.0)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10913" />
    <CreationDate amount="2002-03-06 18:18:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>DOM/AST: resolveBinding() for static field access</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330576411">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveNameForNameReference(DefaultBindingResolver.java:222)</Frame>
          <Frame depth="1">org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveName(DefaultBindingResolver.java:97)</Frame>
          <Frame depth="2">org.eclipse.jdt.core.dom.Name.resolveBinding(Name.java:75)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="101" end="189" />
        <code>public class Foo{
  int bar() throws Throwable {
    return Foo.x;
  }
  static int x;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1- resolveBinding() on SimpleName "Foo" returns a IVariableBinding object, I</Line>
          <Line>expected a ITypeBinding</Line>
          <Line />
          <Line>2- resolveBinding() on SimpleName "x" throws a NullPointerException :</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>version: 2002

2 problems when I use resolveBinding() on the generated AST for the following code :

public class Foo{
  int bar() throws Throwable {
    return Foo.x;
  }
  static int x;
}

the tree for "return Foo.x;" is :

ReturnStatement
 +-QualifiedName
    +-SimpleName: "Foo"
    +-SimpleName: "x"

1- resolveBinding() on SimpleName "Foo" returns a IVariableBinding object, I
expected a ITypeBinding

2- resolveBinding() on SimpleName "x" throws a NullPointerException :

java.lang.NullPointerException
 at
org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveNameForNameReference(DefaultBindingResolver.java:222)
 at
org.eclipse.jdt.core.dom.DefaultBindingResolver.resolveName(DefaultBindingResolver.java:97)
 at org.eclipse.jdt.core.dom.Name.resolveBinding(Name.java:75)
Already fixed in latest.
Closed.</WithStack>
    <WithOutStack>version: 2002

2 problems when I use resolveBinding() on the generated AST for the following code :

public class Foo{
  int bar() throws Throwable {
    return Foo.x;
  }
  static int x;
}

the tree for "return Foo.x;" is :

ReturnStatement
 +-QualifiedName
    +-SimpleName: "Foo"
    +-SimpleName: "x"

1- resolveBinding() on SimpleName "Foo" returns a IVariableBinding object, I
expected a ITypeBinding

2- resolveBinding() on SimpleName "x" throws a NullPointerException :


Already fixed in latest.
Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10914" />
    <CreationDate amount="2002-03-06 18:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>isManaged does way too much work</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="164" end="202" />
        <code>().removeFirstSegments(1).toString());</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>1- we dumb down the Resource to its path string:</Line>
          <Line>return managedProject.getChild(resource.getFullPath</Line>
          <Line />
          <Line />
          <Line>2- which calls ICVSResource.getChild</Line>
          <Line>3- which creates a *new* java.io.File</Line>
          <Line>4- which if it doesn't exist, creates a new LocalFile from the java.io.File</Line>
          <Line>5- and gets the sync info to ask if its a directory</Line>
          <Line>6- which if it isn't, calls getFile(name)</Line>
          <Line>7- which creates yet another File and LocalFile</Line>
          <Line>8- to ask it if its managed</Line>
          <Line>9- which yet again gets the sync info, which if its not null its managed</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>If you follow the chain of calls from isManaged(), you find:

1- we dumb down the Resource to its path string:
	return managedProject.getChild(resource.getFullPath
().removeFirstSegments(1).toString());

2- which calls ICVSResource.getChild
3- which creates a *new* java.io.File
4- which if it doesn't exist, creates a new LocalFile from the java.io.File
5- and gets the sync info to ask if its a directory
6- which if it isn't, calls getFile(name)
7- which creates yet another File and LocalFile
8- to ask it if its managed
9- which yet again gets the sync info, which if its not null its managed

*phew*!
Note that a quick scan shows that isManaged(IResource) is called on menu 
enablement in numerous places, which increases the importance that this method 
should be speady (which there is no reason why it can't be).
I was referring to CVSProvider.isManaged(IResource), which I see is now 
removed :)</WithStack>
    <WithOutStack>If you follow the chain of calls from isManaged(), you find:

1- we dumb down the Resource to its path string:
	return managedProject.getChild(resource.getFullPath
().removeFirstSegments(1).toString());

2- which calls ICVSResource.getChild
3- which creates a *new* java.io.File
4- which if it doesn't exist, creates a new LocalFile from the java.io.File
5- and gets the sync info to ask if its a directory
6- which if it isn't, calls getFile(name)
7- which creates yet another File and LocalFile
8- to ask it if its managed
9- which yet again gets the sync info, which if its not null its managed

*phew*!
Note that a quick scan shows that isManaged(IResource) is called on menu 
enablement in numerous places, which increases the importance that this method 
should be speady (which there is no reason why it can't be).
I was referring to CVSProvider.isManaged(IResource), which I see is now 
removed :)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10915" />
    <CreationDate amount="2002-03-06 19:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unresolved compilation error</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1)Jed, I know you run on Linux alot, was this really a Windows 2000 problem?</Line>
          <Line>2) This seems to be a java.lang.reflect problem not a compilation problem (I</Line>
          <Line>think) so what JDK are you using?</Line>
          <Line>1. I have only seen this on Windows 2000</Line>
          <Line>2. java -version</Line>
          <Line>java version "1.4.1-beta"</Line>
          <Line>Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.1-beta-b02)</Line>
          <Line>Java HotSpot(TM) Client VM (build 1.4.1-beta-b02, mixed mode)</Line>
          <Line>Moving to SWT as Veronika is already investigating.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>In build 20020305, whenever I double click a file that should be opened by the
System editor I get a dialog that says that the following unresolved compilation
problem exists.

For example, create a file named "abc.abc" on a windows version of Eclipse.  You
will get an error dialog during the creation time.  If you exit the creation
dialog and double click the file that is created you get the same error dialog.

The build was marked with a green check, but this is a compilation error.

java.lang.Error: Unresolved compilation problem: 
	org.eclipse.swt.ole cannot be resolved


	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)

	at
sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)

	at
sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)

	at java.lang.reflect.Constructor.newInstance(Constructor.java:274)

	at
org.eclipse.ui.internal.editorsupport.ComponentSupport.testForOleEditor(ComponentSupport.java:54)

	at
org.eclipse.ui.internal.editorsupport.ComponentSupport.getComponentEditor(ComponentSupport.java:37)

	at org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:262)

	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1249)

	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1145)

	at
org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:118)

	at
org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:99)

	at
org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:89)

	at
org.eclipse.jdt.internal.ui.packageview.OpenResourceAction.run(OpenResourceAction.java:51)

	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.handleDoubleClick(PackageExplorerPart.java:727)

	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.access$1(PackageExplorerPart.java:722)

	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.doubleClick(PackageExplorerPart.java:372)

	at
org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:272)

	at
org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect(StructuredViewer.java:416)

	at
org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetDefaultSelected(AbstractTreeViewer.java:627)

	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:92)

	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)

	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)

	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1420)

	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)

	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:700)

	at org.eclipse.ui.internal.Workbench.run(Workbench.java:683)

	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)

	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)

	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

	at java.lang.reflect.Method.invoke(Method.java:324)

	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)

	at org.eclipse.core.launcher.Main.run(Main.java:502)

	at org.eclipse.core.launcher.Main.main(Main.java:362)
1)Jed, I know you run on Linux alot, was this really a Windows 2000 problem?
2) This seems to be a java.lang.reflect problem not a compilation problem (I 
think) so what JDK are you using?
1. I have only seen this on Windows 2000
2. java -version
java version "1.4.1-beta"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.1-beta-b02)
Java HotSpot(TM) Client VM (build 1.4.1-beta-b02, mixed mode)
Moving to SWT as Veronika is already investigating.


There is no compilation error in SWT.

In most likely hood there is a problem in JDK 1.4.1-beta regarding 
java.lang.reflect.Constructor.
This is not an SWT issue - the problem is in 
org.eclipse.ui.internal.editorsupport.ComponentSupport.testForOleEditor

Moving to the desktop ui team.
More insight:

Every morning I take the Debug teams latest plugins and update latest version of
Eclipse.  If their plugins for 2002.03.06 were built off of stale code, I could
have seen this problem.
Unfortunately, they do not keep copies of their latest plugins so there is no
way of testing this.

I suggest we mark this as a WORKSFORME.
Closing based on comments above</WithStack>
    <WithOutStack>In build 20020305, whenever I double click a file that should be opened by the
System editor I get a dialog that says that the following unresolved compilation
problem exists.

For example, create a file named "abc.abc" on a windows version of Eclipse.  You
will get an error dialog during the creation time.  If you exit the creation
dialog and double click the file that is created you get the same error dialog.

The build was marked with a green check, but this is a compilation error.

java.lang.Error: Unresolved compilation problem: 
	org.eclipse.swt.ole cannot be resolved


	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)

	at
sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)

	at
sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)

	at java.lang.reflect.Constructor.newInstance(Constructor.java:274)

	at
org.eclipse.ui.internal.editorsupport.ComponentSupport.testForOleEditor(ComponentSupport.java:54)

	at
org.eclipse.ui.internal.editorsupport.ComponentSupport.getComponentEditor(ComponentSupport.java:37)

	at org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:262)

	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1249)

	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1145)

	at
org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:118)

	at
org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:99)

	at
org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:89)

	at
org.eclipse.jdt.internal.ui.packageview.OpenResourceAction.run(OpenResourceAction.java:51)

	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.handleDoubleClick(PackageExplorerPart.java:727)

	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.access$1(PackageExplorerPart.java:722)

	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.doubleClick(PackageExplorerPart.java:372)

	at
org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:272)

	at
org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect(StructuredViewer.java:416)

	at
org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetDefaultSelected(AbstractTreeViewer.java:627)

	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:92)

	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)

	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)

	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1420)

	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)

	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:700)

	at org.eclipse.ui.internal.Workbench.run(Workbench.java:683)

	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)

	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)

	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

	at java.lang.reflect.Method.invoke(Method.java:324)

	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)

	at org.eclipse.core.launcher.Main.run(Main.java:502)

	at org.eclipse.core.launcher.Main.main(Main.java:362)
1)Jed, I know you run on Linux alot, was this really a Windows 2000 problem?
2) This seems to be a java.lang.reflect problem not a compilation problem (I 
think) so what JDK are you using?
1. I have only seen this on Windows 2000
2. java -version
java version "1.4.1-beta"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.1-beta-b02)
Java HotSpot(TM) Client VM (build 1.4.1-beta-b02, mixed mode)
Moving to SWT as Veronika is already investigating.


There is no compilation error in SWT.

In most likely hood there is a problem in JDK 1.4.1-beta regarding 
java.lang.reflect.Constructor.
This is not an SWT issue - the problem is in 
org.eclipse.ui.internal.editorsupport.ComponentSupport.testForOleEditor

Moving to the desktop ui team.
More insight:

Every morning I take the Debug teams latest plugins and update latest version of
Eclipse.  If their plugins for 2002.03.06 were built off of stale code, I could
have seen this problem.
Unfortunately, they do not keep copies of their latest plugins so there is no
way of testing this.

I suggest we mark this as a WORKSFORME.
Closing based on comments above</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10916" />
    <CreationDate amount="2002-03-06 19:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Perspective buttons on left hand side should not toggle</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Click on the button for the currently active perspective in
the toolbar on the left.

Notice that it toggles from pushed to unpushed!  I would expect
these buttons to behave more like a radio button and ensure
exactly one button is selected at a time.
Fix in build &gt; 2002-03-08

Action forces shortcut bar tool item to stay in checked state if change 
perspective was successful.</WithStack>
    <WithOutStack>Click on the button for the currently active perspective in
the toolbar on the left.

Notice that it toggles from pushed to unpushed!  I would expect
these buttons to behave more like a radio button and ensure
exactly one button is selected at a time.
Fix in build &gt; 2002-03-08

Action forces shortcut bar tool item to stay in checked state if change 
perspective was successful.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10917" />
    <CreationDate amount="2002-03-06 21:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Patch support does not use mnemonics</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020305

The Compare with / Patch wizard is missing mnemonics for controls on both 
pages.

On the Verify Patch page, it would help to give the checkbox tree a label with 
a mnemonic since the user often has to go back to it.
It would also help to have Select All and Deselect All buttons.
Already in the context menu leading to that wizard a mnemonic is missing why 
not use the same one that's used for :T&amp;eam:Create &amp;Patch...


Fixed for 20020529.
I didn't add Check All and Uncheck All options on the verify page because 
changing the check boxes is rarely necessary. If all goes well all hunks in a 
patch can be applied and they are automatically checked on. I they cannot be 
applied (and the checkboxes are off) the user is not able to force it to on.
So the only case where you want to change the checkbox state is when the file 
or hunk matches but you deliberately don't want to take it.
pls verify
verified</WithStack>
    <WithOutStack>Build 20020305

The Compare with / Patch wizard is missing mnemonics for controls on both 
pages.

On the Verify Patch page, it would help to give the checkbox tree a label with 
a mnemonic since the user often has to go back to it.
It would also help to have Select All and Deselect All buttons.
Already in the context menu leading to that wizard a mnemonic is missing why 
not use the same one that's used for :T&amp;eam:Create &amp;Patch...


Fixed for 20020529.
I didn't add Check All and Uncheck All options on the verify page because 
changing the check boxes is rarely necessary. If all goes well all hunks in a 
patch can be applied and they are automatically checked on. I they cannot be 
applied (and the checkboxes are off) the user is not able to force it to on.
So the only case where you want to change the checkbox state is when the file 
or hunk matches but you deliberately don't want to take it.
pls verify
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10918" />
    <CreationDate amount="2002-03-06 21:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>Patch rejected even though it previews OK</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- with org.eclipse.ui in source (latest head stream), select it and Compare</Line>
          <Line>With / Patch / {attached file}</Line>
          <Line>- on the preview page, all looks well</Line>
          <Line>- hit Finish</Line>
          <Line>- it generates a bunch of .rej (patch rejection) files and corresponding tasks</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 20020305

- with org.eclipse.ui in source (latest head stream), select it and Compare 
With / Patch / {attached file}
- on the preview page, all looks well
- hit Finish
- it generates a bunch of .rej (patch rejection) files and corresponding tasks

Another problem is that if you do it again, it overwrites the .rej files but 
generates a new set of tasks without clearing up the old ones
Created attachment 432
constrained-part-layout.diff
EditorWorkbook.java had been modified since the patch was created, but the 
other files referred to in the patch had not.

Does it reject the whole patch if any of the files have been modified?
If so, this should be made clearer to the user.

UI issues will be addressed for 2.2
This issue has been addressed in 3.3 M3. Closing to avoid reopen/dup spam.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Build 20020305

- with org.eclipse.ui in source (latest head stream), select it and Compare 
With / Patch / {attached file}
- on the preview page, all looks well
- hit Finish
- it generates a bunch of .rej (patch rejection) files and corresponding tasks

Another problem is that if you do it again, it overwrites the .rej files but 
generates a new set of tasks without clearing up the old ones
Created attachment 432
constrained-part-layout.diff
EditorWorkbook.java had been modified since the patch was created, but the 
other files referred to in the patch had not.

Does it reject the whole patch if any of the files have been modified?
If so, this should be made clearer to the user.

UI issues will be addressed for 2.2
This issue has been addressed in 3.3 M3. Closing to avoid reopen/dup spam.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10919" />
    <CreationDate amount="2002-03-06 22:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Scrapbook can't print arrays</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020305

In the scrapbook, if you try to Display the result of evaluating:
new Object[0]
or:
new char[0]
or any method returning an array, you get an error dialog saying:
Receiver does not implement selector "toString" with signature "()
Ljava/lang/String;"

It then continues to print the result type (but not the value).

(The error message uses ST terminology too.)
We should generalize this, and just the model presentation to get the 'details' 
for the evaluation result.
Assigning to Jared. Note, this is not just for the scrapbook, we should use 
this approach for any evaluation.
*** Bug 11187 has been marked as a duplicate of this bug. ***
Fixed in DisplayAction and JavaSnippetEditor

The evaluateToString() methods in these classes now delegate to
JDIModelPresentation.computeDetails().
Please verify.
Verified</WithStack>
    <WithOutStack>Build 20020305

In the scrapbook, if you try to Display the result of evaluating:
new Object[0]
or:
new char[0]
or any method returning an array, you get an error dialog saying:
Receiver does not implement selector "toString" with signature "()
Ljava/lang/String;"

It then continues to print the result type (but not the value).

(The error message uses ST terminology too.)
We should generalize this, and just the model presentation to get the 'details' 
for the evaluation result.
Assigning to Jared. Note, this is not just for the scrapbook, we should use 
this approach for any evaluation.
*** Bug 11187 has been marked as a duplicate of this bug. ***
Fixed in DisplayAction and JavaSnippetEditor

The evaluateToString() methods in these classes now delegate to
JDIModelPresentation.computeDetails().
Please verify.
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10920" />
    <CreationDate amount="2002-03-06 23:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>NPE on close all perspectives</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330576427">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.ui.HistoryView.dispose(HistoryView.java:507)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:569)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:329)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.WorkbenchWindow.closeAllPages(WorkbenchWindow.java:340)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.CloseAllPagesAction.run(CloseAllPagesAction.java:34)</Frame>
          <Frame depth="5">org.eclipse.jface.action.Action.runWithEvent(Action.java:452)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1420)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:700)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:683)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)</Frame>
          <Frame depth="18">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.basicRun(Main.java:151)</Frame>
          <Frame depth="20">org.eclipse.core.launcher.Main.run(Main.java:502)</Frame>
          <Frame depth="21">org.eclipse.core.launcher.Main.main(Main.java:362)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="ifstatement">
        <location start="378" end="456" />
        <code>if (branchImage != null) {
   branchImage.dispose();
   branchImage == null;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I had an old workspace with several perspectives open in the same window.
Running build 20020305 with no changes.
Did a Perspective / Close All.
Got:

java.lang.NullPointerException
	at org.eclipse.team.internal.ccvs.ui.HistoryView.dispose
(HistoryView.java:507)
	at org.eclipse.ui.internal.WorkbenchPage.dispose
(WorkbenchPage.java:569)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:329)
	at org.eclipse.ui.internal.WorkbenchWindow.closeAllPages
(WorkbenchWindow.java:340)
	at org.eclipse.ui.internal.CloseAllPagesAction.run
(CloseAllPagesAction.java:34)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:452)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1420)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:700)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:683)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:777)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:502)
	at org.eclipse.core.launcher.Main.main(Main.java:362)
Could this be caused by the bug which you fixed today?
Looking at the HistoryView code, it is calling dispose on an image but no check 
to see if this image is not null. Should do the following (and for the other 
image too)

if (branchImage != null) {
   branchImage.dispose();
   branchImage == null;
}

Any idea why it's null?  Was it never created?  Was it disposed twice?

As the code is currently, I never null out the image. The only way it could
*possibly* be null is if the call to getImageDescriptor failed, in which case
all of our other imgaes would likely be broken too.

I've put the safety check around the dispose, so this won't happen again, but
I'm still a little uneasy about why this happened in the first place.
It is possible for the workbench to create an instance of the view, but never 
call the createPartControl() method prior to calling dispose. This would happen 
if your view was in a perspective that is open, but was never activated prior 
to the window closing.

So it is possible for those two image variable to be null (you only create them 
in the creatPartControl method, so if it does not get call...)
Aaaah. Thanks for the info Nick.
I believe this was the case.  I had not activated the perspective containing 
this view.
James, you should think of dispose() as being the counterpart to init, not 
createPartControl.</WithStack>
    <WithOutStack>I had an old workspace with several perspectives open in the same window.
Running build 20020305 with no changes.
Did a Perspective / Close All.
Got:


Could this be caused by the bug which you fixed today?
Looking at the HistoryView code, it is calling dispose on an image but no check 
to see if this image is not null. Should do the following (and for the other 
image too)

if (branchImage != null) {
   branchImage.dispose();
   branchImage == null;
}

Any idea why it's null?  Was it never created?  Was it disposed twice?

As the code is currently, I never null out the image. The only way it could
*possibly* be null is if the call to getImageDescriptor failed, in which case
all of our other imgaes would likely be broken too.

I've put the safety check around the dispose, so this won't happen again, but
I'm still a little uneasy about why this happened in the first place.
It is possible for the workbench to create an instance of the view, but never 
call the createPartControl() method prior to calling dispose. This would happen 
if your view was in a perspective that is open, but was never activated prior 
to the window closing.

So it is possible for those two image variable to be null (you only create them 
in the creatPartControl method, so if it does not get call...)
Aaaah. Thanks for the info Nick.
I believe this was the case.  I had not activated the perspective containing 
this view.
James, you should think of dispose() as being the counterpart to init, not 
createPartControl.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10921" />
    <CreationDate amount="2002-03-06 23:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Turn on J9 JIT</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When launching a J9 target in RUN mode, we should turn on the JIT (or make it 
an option).
Turned on the JIT in J9VMRunner
PLease verify.
Verified that we're passing "-jit" into the J9 command line.</WithStack>
    <WithOutStack>When launching a J9 target in RUN mode, we should turn on the JIT (or make it 
an option).
Turned on the JIT in J9VMRunner
PLease verify.
Verified that we're passing "-jit" into the J9 command line.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10922" />
    <CreationDate amount="2002-03-07 02:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Releng" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TVT -  Close menu item is not translated for PTB</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Found by Brazilian  (PTB) tester

Trying to close the Workbench perspective (clicking its icon
on the leftmost vertical toolbar, the "Close" (there are two options
"Close" and "Close All") is untranslated.

Also note, this may just be a problem 
with the PTB translation.  The Spanish product, for
example, is translated correctly.
Created attachment 433
Screen capture of the untranslated text.
Confirmed on rollup3 in  Brazilian Portuguese
This is a problem with the translation.
Please close this PR if it has been fixed.</WithStack>
    <WithOutStack>Found by Brazilian  (PTB) tester

Trying to close the Workbench perspective (clicking its icon
on the leftmost vertical toolbar, the "Close" (there are two options
"Close" and "Close All") is untranslated.

Also note, this may just be a problem 
with the PTB translation.  The Spanish product, for
example, is translated correctly.
Created attachment 433
Screen capture of the untranslated text.
Confirmed on rollup3 in  Brazilian Portuguese
This is a problem with the translation.
Please close this PR if it has been fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10923" />
    <CreationDate amount="2002-03-07 02:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TVT - Customize perspective dialog should be dymanic in size to  accomodate translation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Found by the Spanish Tester.

In the Customize perspective dialog
there are some truncations for some
of the longer entries. This dialog
should be made dynamic so we can
broaden it or make the separator
so that it can move leftwards or
rightwards.
Created attachment 434
Screen capture showing the problem
Confirmed in rollup3. This is a general issue with translations - nothing is 
lost as the windows are scrollable but over long translation will require 
scrolling.

I do not recommend resizing the dialog to fit the text all of the time as it 
will potentially be larger than the display for high constrast low resolution 
settings ( it is currently almost the size of the entire screen in High 
Contrast Extra Large on a 1024x768 display).

As there is no information loss here I don't think a change is required.</WithStack>
    <WithOutStack>Found by the Spanish Tester.

In the Customize perspective dialog
there are some truncations for some
of the longer entries. This dialog
should be made dynamic so we can
broaden it or make the separator
so that it can move leftwards or
rightwards.
Created attachment 434
Screen capture showing the problem
Confirmed in rollup3. This is a general issue with translations - nothing is 
lost as the windows are scrollable but over long translation will require 
scrolling.

I do not recommend resizing the dialog to fit the text all of the time as it 
will potentially be larger than the display for high constrast low resolution 
settings ( it is currently almost the size of the entire screen in High 
Contrast Extra Large on a 1024x768 display).

As there is no information loss here I don't think a change is required.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10924" />
    <CreationDate amount="2002-03-07 02:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TVT -  "widget is disposed" should be translated</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Found by the German tester

German Tester got an internal error message  box.
The msg itself looks as if variables are 
strung together creating "germlish":

"An internal error occurred(this in German). Widget is disposed (English)
See error log for details (again in German)"
Created attachment 435
Screen capture of the problem
Also, WSWB TVT checked and this string is NOT
in the translatable material that
they got from Eclipse.  So the  message, 
"widget is disposed" must be enabled
before it can be translated. 
Error message provided by SWT. Moving PR.



Internal error messages are not translated.</WithStack>
    <WithOutStack>Found by the German tester

German Tester got an internal error message  box.
The msg itself looks as if variables are 
strung together creating "germlish":

"An internal error occurred(this in German). Widget is disposed (English)
See error log for details (again in German)"
Created attachment 435
Screen capture of the problem
Also, WSWB TVT checked and this string is NOT
in the translatable material that
they got from Eclipse.  So the  message, 
"widget is disposed" must be enabled
before it can be translated. 
Error message provided by SWT. Moving PR.



Internal error messages are not translated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10925" />
    <CreationDate amount="2002-03-07 02:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>TVT -  The word "Misc" is not translated</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Click on a file in the navigator.</Line>
          <Line>2) In the property sheet, press</Line>
          <Line>Show/Hide Categories so that it is depressed.</Line>
          <Line>3) In the category "Misc" appears, without</Line>
          <Line>translation.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This problem was found by the Simplified Chinese tester.

1) Click on a file in the navigator. 
2) In the property sheet, press 
Show/Hide Categories so that it is depressed.
3) In the category "Misc" appears, without
translation. 

I tested this with Spanish, and it was also
not translated.  So this is not a 
Simplified Chinese specific
problem.
This was intentionally not translated 

in the code it says

private static String MISCELLANEOUS_CATEGORY_NAME = "Misc"; //$NON-NLS-1$

as it is used as a category name.

However it should either be translated or a secondary label should be defined.

Externalized name</WithStack>
    <WithOutStack>This problem was found by the Simplified Chinese tester.

1) Click on a file in the navigator. 
2) In the property sheet, press 
Show/Hide Categories so that it is depressed.
3) In the category "Misc" appears, without
translation. 

I tested this with Spanish, and it was also
not translated.  So this is not a 
Simplified Chinese specific
problem.
This was intentionally not translated 

in the code it says

private static String MISCELLANEOUS_CATEGORY_NAME = "Misc"; //$NON-NLS-1$

as it is used as a category name.

However it should either be translated or a secondary label should be defined.

Externalized name</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10926" />
    <CreationDate amount="2002-03-07 02:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TVT - English menu</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Reported by the Korean Tester

English string on menus for  such as run, debug, and profile.
A picture speaks a thousand words....
Created attachment 436
a screen capture
Created attachment 437
Screen capture of the problem again
Is it possible that these are strings coming from non Eclipse plugins? The 
icons and strings are not familiar to me.
Anything is possible ;-)    I will double check.  If you do not recognize them, 
then the changes are VERY good that we own them.  I will cancel this defect for 
now, and reopen it later if I find more information to the contrary.</WithStack>
    <WithOutStack>Reported by the Korean Tester

English string on menus for  such as run, debug, and profile.
A picture speaks a thousand words....
Created attachment 436
a screen capture
Created attachment 437
Screen capture of the problem again
Is it possible that these are strings coming from non Eclipse plugins? The 
icons and strings are not familiar to me.
Anything is possible ;-)    I will double check.  If you do not recognize them, 
then the changes are VERY good that we own them.  I will cancel this defect for 
now, and reopen it later if I find more information to the contrary.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10927" />
    <CreationDate amount="2002-03-07 02:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>TVT - Error message in English &amp; Truncation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>1. End of 2nd line is truncated.</Line>
          <Line>2. Message from 3rd line (start with 'Plug-in') is totally in English.</Line>
          <Line>This message is translated in Eclipse files.</Line>
          <Line>Created attachment 438</Line>
          <Line>screen capture</Line>
          <Line>Created attachment 766</Line>
          <Line>screen cap - take two...</Line>
          <Line>Cam mentioned that she could not access the attachment, so I reattached it.  I</Line>
          <Line>can get to this one, so it looks better now.</Line>
          <Line>Changing dependency from bug 9866 to bug 14528. The platform Label clips "non-</Line>
          <Line>breaking words" that are too long for the label. You may need to work around</Line>
          <Line>platform behavior (by knowing you have a too-long string, and manually breaking</Line>
          <Line>it) to fix this. Alternatively, make the dialog resizable.</Line>
          <Line>Marking as WONT FIX as this is platform behaviour</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Reported by the Japanese tester

Don't know how to reproduce error in Eclipse, but we had
a problem (which we fixed) where we got the following messsage: 

Unable to open external editor null
(com.ibm.iwt.edit.WebArtDesignerLauncher)org.eclipse.core.runtime.CoreEx  
&lt;---truncation
Plug-in com.ibm.etools.webedit was unable to load class 
com.ibm.iwt.edit.util.WebArtDesignerLauncher.  

There are 2 problems here:
1. End of 2nd line is truncated.
2. Message from 3rd line (start with 'Plug-in') is totally in English.
   This message is translated in Eclipse files.
Created attachment 438
screen capture
Created attachment 766
screen cap - take two...
Cam mentioned that she could not access the attachment, so I reattached it.  I 
can get to this one, so it looks better now.
Changing dependency from bug 9866 to bug 14528. The platform Label clips "non-
breaking words" that are too long for the label. You may need to work around 
platform behavior (by knowing you have a too-long string, and manually breaking 
it) to fix this. Alternatively, make the dialog resizable.
Marking as WONT FIX as this is platform behaviour</WithStack>
    <WithOutStack>Reported by the Japanese tester

Don't know how to reproduce error in Eclipse, but we had
a problem (which we fixed) where we got the following messsage: 

Unable to open external editor null
(com.ibm.iwt.edit.WebArtDesignerLauncher)org.eclipse.core.runtime.CoreEx  
&lt;---truncation
Plug-in com.ibm.etools.webedit was unable to load class 
com.ibm.iwt.edit.util.WebArtDesignerLauncher.  

There are 2 problems here:
1. End of 2nd line is truncated.
2. Message from 3rd line (start with 'Plug-in') is totally in English.
   This message is translated in Eclipse files.
Created attachment 438
screen capture
Created attachment 766
screen cap - take two...
Cam mentioned that she could not access the attachment, so I reattached it.  I 
can get to this one, so it looks better now.
Changing dependency from bug 9866 to bug 14528. The platform Label clips "non-
breaking words" that are too long for the label. You may need to work around 
platform behavior (by knowing you have a too-long string, and manually breaking 
it) to fix this. Alternatively, make the dialog resizable.
Marking as WONT FIX as this is platform behaviour</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10928" />
    <CreationDate amount="2002-03-07 04:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Profiling feature [misc]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hello, 
I would suggest the following feature, a profiling one. You could base this new 
feature onto the old Parcplace Smalltalk prifiling class which provided two 
kinds of profiling : time and space profiling.
It could be a very, very usefull capability!!!
Regards
Xavier
agreed would be useful and should be considered after 2.0
[misc]
There are no plans to add a profiling feature in JDT/UI for 3.0. This is an 
excelent third party opportunity and can be implemented as its own plug-in.</WithStack>
    <WithOutStack>Hello, 
I would suggest the following feature, a profiling one. You could base this new 
feature onto the old Parcplace Smalltalk prifiling class which provided two 
kinds of profiling : time and space profiling.
It could be a very, very usefull capability!!!
Regards
Xavier
agreed would be useful and should be considered after 2.0
[misc]
There are no plans to add a profiling feature in JDT/UI for 3.0. This is an 
excelent third party opportunity and can be implemented as its own plug-in.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10929" />
    <CreationDate amount="2002-03-07 04:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>All types cache is flushed to frequently</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) open the Open Type dialog</Line>
          <Line>2) add a space to a CU and save it &amp; auto build</Line>
          <Line>3) open the Open Type dialog</Line>
          <Line>-&gt; a search is done again. This search should not be needed since no types were</Line>
          <Line>added or removed.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>1) open the Open Type dialog
2) add a space to a CU and save it &amp; auto build
3) open the Open Type dialog
-&gt; a search is done again. This search should not be needed since no types were 
added or removed.

Marked as P1 since it is highly used feature where performance is critical.
The change is adding a space to the method.

The element delta listener gets a content change on the CU ( flags == F_CONTENT)
and no affected children. I guess thats wrong, as this combination signals a 
change like refresh from local, but not a commit from a working copy.
(I would expect a change delta for the method)

Moving to core
The code to maintain the case is in 
org.eclipse.jdt.internal.ui.dialogs.TypeCache. 

The intent is to implement a caching scheme where the case is flushed whenever 
a type gets added or remove (which should be rare). 
Added flag IJavaElementDelta.F_FINE_GRAINED that indicates
that a fine-grained delta was computed for a given delta.
The TypeCache can use this flag to find out if a compilation unit 
that have a F_CONTENT change should assume that there are 
no finer grained changes (F_FINE_GRAINED is set) or if 
finer grained changes were not considered (F_FINE_GRAINED is not set).

Moving back to JDT/UI so that TypeCache can be updated to use this new flag.
fixes in JDT UI to use this flag.
&gt; 20020307
verified in 20020319-I.</WithStack>
    <WithOutStack>1) open the Open Type dialog
2) add a space to a CU and save it &amp; auto build
3) open the Open Type dialog
-&gt; a search is done again. This search should not be needed since no types were 
added or removed.

Marked as P1 since it is highly used feature where performance is critical.
The change is adding a space to the method.

The element delta listener gets a content change on the CU ( flags == F_CONTENT)
and no affected children. I guess thats wrong, as this combination signals a 
change like refresh from local, but not a commit from a working copy.
(I would expect a change delta for the method)

Moving to core
The code to maintain the case is in 
org.eclipse.jdt.internal.ui.dialogs.TypeCache. 

The intent is to implement a caching scheme where the case is flushed whenever 
a type gets added or remove (which should be rare). 
Added flag IJavaElementDelta.F_FINE_GRAINED that indicates
that a fine-grained delta was computed for a given delta.
The TypeCache can use this flag to find out if a compilation unit 
that have a F_CONTENT change should assume that there are 
no finer grained changes (F_FINE_GRAINED is set) or if 
finer grained changes were not considered (F_FINE_GRAINED is not set).

Moving back to JDT/UI so that TypeCache can be updated to use this new flag.
fixes in JDT UI to use this flag.
&gt; 20020307
verified in 20020319-I.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10930" />
    <CreationDate amount="2002-03-07 05:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Synchronize doesn't honour Cancel</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build 20020305
Team 2.0

During synchonization (Team -&gt; Synchronize with repository), if you press 
Cancel, it keeps working for several seconds before Cancel is honoured.
Changes have been made to check for cancel in the RemoteFolderTreeBuilder. This 
should help here. Other aspects of the synchronize should be looked at before 
the PR is closed
Cancelling on synchronize works for me</WithStack>
    <WithOutStack>Build 20020305
Team 2.0

During synchonization (Team -&gt; Synchronize with repository), if you press 
Cancel, it keeps working for several seconds before Cancel is honoured.
Changes have been made to check for cancel in the RemoteFolderTreeBuilder. This 
should help here. Other aspects of the synchronize should be looked at before 
the PR is closed
Cancelling on synchronize works for me</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10931" />
    <CreationDate amount="2002-03-07 05:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Workbench] Please make Worbench more modular</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- Plaing-Workbench-Plugin, that is just empty and has all the powerfull</Line>
          <Line>windowing features (Perspectives, Views, etc.) and an</Line>
          <Line>- IDE-Plugin, that has the basic menue-items that we see today.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hi,

we would like to use the modularity of the Eclipse-Workbench for a Client-
Server, Database centred application. So we don't need the predefined 
IDE functionalities like "Rebuild All".

As discussed in the Eclipse tool's newgroup (e.g. thread "stripped down 
workbench") this can easily be achieved by hacking some worbench internal 
classes. 

However, according to the Eclipse-Plugin-Concept we would more like a
- Plaing-Workbench-Plugin, that is just empty and has all the powerfull   
windowing features (Perspectives, Views, etc.) and an
- IDE-Plugin, that has the basic menue-items that we see today.

Regards

Marco Litto
This is an interesting idea. It would extend the reach of the eclipse platform 
into areas that we are not currently focused on. However, we do not have spare 
development cycles to work on this now. 

Marco, would you be willing to contibute to the Eclipse project to make this 
enhancement possible?
Consider doing this as a post 2.0 enhancement. 
Reopen to investigate
There are currently no plans to work on this feature</WithStack>
    <WithOutStack>Hi,

we would like to use the modularity of the Eclipse-Workbench for a Client-
Server, Database centred application. So we don't need the predefined 
IDE functionalities like "Rebuild All".

As discussed in the Eclipse tool's newgroup (e.g. thread "stripped down 
workbench") this can easily be achieved by hacking some worbench internal 
classes. 

However, according to the Eclipse-Plugin-Concept we would more like a
- Plaing-Workbench-Plugin, that is just empty and has all the powerfull   
windowing features (Perspectives, Views, etc.) and an
- IDE-Plugin, that has the basic menue-items that we see today.

Regards

Marco Litto
This is an interesting idea. It would extend the reach of the eclipse platform 
into areas that we are not currently focused on. However, we do not have spare 
development cycles to work on this now. 

Marco, would you be willing to contibute to the Eclipse project to make this 
enhancement possible?
Consider doing this as a post 2.0 enhancement. 
Reopen to investigate
There are currently no plans to work on this feature</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10932" />
    <CreationDate amount="2002-03-07 05:40:00 -0500" />
    <DupId amount="3074" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>References to external .jars in &lt;RUNTIME&gt; section of plugin.xml do not work if .jar is not in plugin folder</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>One can specify references to external jars in the &lt;RUNTIME&gt; section of the 
plugin.xml files.
However, these references do not appear to be added to the classpath when the 
plug-in is launched inside PDE (by run in runtime workbench option).

In most of the examples and supplied plugins, these references only ever appear 
to be references to other plugins.
However, if your plugin is dependent on other code, you will often want to 
reference jars that are not plugins.
I suspect that this problem can be fixed easily when you deploy the plugin 
because you can simply stick the referenced jars in the plugin's folder but 
that doesn't help at development time - you want to use the run in runtime 
workbench option.
Moving to Platform Core for investigation on plugin parsing. If it works in 
a "normal conditions", we should move it to PDE to investigate if it is a 
problem in "runtime workbench".


*** This bug has been marked as a duplicate of 3074 ***</WithStack>
    <WithOutStack>One can specify references to external jars in the &lt;RUNTIME&gt; section of the 
plugin.xml files.
However, these references do not appear to be added to the classpath when the 
plug-in is launched inside PDE (by run in runtime workbench option).

In most of the examples and supplied plugins, these references only ever appear 
to be references to other plugins.
However, if your plugin is dependent on other code, you will often want to 
reference jars that are not plugins.
I suspect that this problem can be fixed easily when you deploy the plugin 
because you can simply stick the referenced jars in the plugin's folder but 
that doesn't help at development time - you want to use the run in runtime 
workbench option.
Moving to Platform Core for investigation on plugin parsing. If it works in 
a "normal conditions", we should move it to PDE to investigate if it is a 
problem in "runtime workbench".


*** This bug has been marked as a duplicate of 3074 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10933" />
    <CreationDate amount="2002-03-07 05:42:00 -0500" />
    <DupId amount="10781" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>DOM/AST: position of AnonymousTypeDeclaration is [-1,0]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="package">
        <location start="30" end="48" />
        <code>package nested_in;</code>
      </source_code>
      <source_code type="class">
        <location start="50" end="187" />
        <code>public class A_test651 {
	public void foo() {
		Runnable run= new Runnable() {
			public void run() {
				/*]*/foo();/*[*/
			}
		};
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020305

For the code

package nested_in;

public class A_test651 {
	public void foo() {
		Runnable run= new Runnable() {
			public void run() {
				/*]*/foo();/*[*/
			}
		};
	}
}

the position of the anonymous type declaration is [-1, 0]. IMO the start 
position should be the { and the end position the }
Already fixed in latest. This is a duplicate of 10781.

*** This bug has been marked as a duplicate of 10781 ***</WithStack>
    <WithOutStack>Build 20020305

For the code

package nested_in;

public class A_test651 {
	public void foo() {
		Runnable run= new Runnable() {
			public void run() {
				/*]*/foo();/*[*/
			}
		};
	}
}

the position of the anonymous type declaration is [-1, 0]. IMO the start 
position should be the { and the end position the }
Already fixed in latest. This is a duplicate of 10781.

*** This bug has been marked as a duplicate of 10781 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10934" />
    <CreationDate amount="2002-03-07 05:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>New Refactoring: Hide/Create Delegate [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Description:

This refactoring is an extension to 'Hide Delegate' discussed here:

http://www.refactoring.com/catalog/hideDelegate.html

Context of use:

A member previously accessible via getter and setter exposes too
much about the implementation of its owner. Selecting Hide Delegate would
generate wrapping methods which would call the related methods on the
member.

If no getter and setter were present, option would be named
"Create Delegate".

Would not work with primitives.

The wizard to perform this refactoring should display a selection
list (much like the current override dialog) of delegate methods to
expose. It should also offer the option to remove the getters and
setters.
we can't do it for 2.0 unless we get external help
if someone can give me a pointer to an existing similar refactoring to look at, 
i'd be willing to dig into it. also, is refactoring a moving target (i.e. which 
builds' source should i be working on?)
We don't have a compareable refactoring but a good general starting point is 
the implementation of the Self Encapsulate Field refactoring. It is in 
org.eclipse.jdt.internal.corext.refactoring.sef.

Currently only the AST is public API. The rest of the refactoring stuff is 
still internal. There are plans to make it API &gt; 2.0. 

However the changes are high that most of the internal API is kept stable for 
2.0. We are pretty much done with the refactorings we want to implement and the 
internal API has been stable since 6 weeks.

So I encourage you to give it a try. Simply use the internal API. But be aware 
that we only accept contributions with test cases &lt;g&gt;. There are two project on 
the Eclipse CVS server that help you to write refactoring tests: 
org.eclipse.jdt.ui.test and org.eclipse.jdt.ui.tests.refactoring. 

Looking forward to hearing from you
regarding packaging, should I implement it in its own package? i see that a lot 
of other refactorings are in shared packages, i'd prefer to put it in a package
like org.eclipse.jdt.internal.corext.refactoring.delegate.

additional comments on how the two actions provided should work:

&gt;&gt; Create Delegate Action

Validity:
    Selected field(s) non-primitive. Selected field(s) NOT externally
    visible (private).

Create delegate adds delegate methods to owner class. Which delegate
methods are added can be selected by user (similar to override methods).

&gt;&gt; Hide Delegate Refactoring Action

Validity:
    Selected field(s) non-primitive. Selected field(s) are externally visible
    outside of the declaring class: have getter. Should we allow public,
    protected, package as well?

Hide Delegate removes getter (and changes field access to private)
and creates delegate methods in owner class to access
referenced methods of field(s).

    * All compilation units in the search space (project? workspace?) which
      accessed methods of field(s) are modified to access delegate 
      methods of the owner class.

Delegate methods have the exact same name as methods of the member, or
the same name but with a user-supplied prefix.

Errors:
    * If new delegate method has naming clash with existing method in owner
      class.
    * If compilation unit in search space used a field of the newly hidden 
      field(s) and not a method...or should we just create accessors for these
      as well?
    * If unit in search space just grabbed a reference and didn't use
      a method of the member immediately...later on when actual methods are
      called we don't have a reference to the owner class.
Yes, start with your own package. If we decide to integrate it into another 
package we can use the move refactoring ;-)).

Create Delegate:
  - validation: field not visible and there aren't any getter and setter
    methods for the private field.

Hide Delegate:
  - in a first implementation I would only allow hide delegate on fields that
    are private and have a visible getter method. If a user wants to use hide
    delegate on public fields than he first have to use self encapsulate field.

  - to search for all references to an element using the right scope have a look
    at class RefactoringScopeFactory.

  - Errors:
      o the new method can also overload an existing method and change the 
        semantic of the program without producing a compile error. But for the
        start I would ignore that case.
      o flagging the second and third case as an error is fine for me. IMO they
        are seldom cases anyway.

Just to let you know: I am on vacation the next week ;-).
[refactoring]

No action planned for 2.1. Bug is tagged as help wanted
Create delegate is in place for 2.1. Hide delegate could be done via inline 
method. No further action planned.</WithStack>
    <WithOutStack>Description:

This refactoring is an extension to 'Hide Delegate' discussed here:

http://www.refactoring.com/catalog/hideDelegate.html

Context of use:

A member previously accessible via getter and setter exposes too
much about the implementation of its owner. Selecting Hide Delegate would
generate wrapping methods which would call the related methods on the
member.

If no getter and setter were present, option would be named
"Create Delegate".

Would not work with primitives.

The wizard to perform this refactoring should display a selection
list (much like the current override dialog) of delegate methods to
expose. It should also offer the option to remove the getters and
setters.
we can't do it for 2.0 unless we get external help
if someone can give me a pointer to an existing similar refactoring to look at, 
i'd be willing to dig into it. also, is refactoring a moving target (i.e. which 
builds' source should i be working on?)
We don't have a compareable refactoring but a good general starting point is 
the implementation of the Self Encapsulate Field refactoring. It is in 
org.eclipse.jdt.internal.corext.refactoring.sef.

Currently only the AST is public API. The rest of the refactoring stuff is 
still internal. There are plans to make it API &gt; 2.0. 

However the changes are high that most of the internal API is kept stable for 
2.0. We are pretty much done with the refactorings we want to implement and the 
internal API has been stable since 6 weeks.

So I encourage you to give it a try. Simply use the internal API. But be aware 
that we only accept contributions with test cases &lt;g&gt;. There are two project on 
the Eclipse CVS server that help you to write refactoring tests: 
org.eclipse.jdt.ui.test and org.eclipse.jdt.ui.tests.refactoring. 

Looking forward to hearing from you
regarding packaging, should I implement it in its own package? i see that a lot 
of other refactorings are in shared packages, i'd prefer to put it in a package
like org.eclipse.jdt.internal.corext.refactoring.delegate.

additional comments on how the two actions provided should work:

&gt;&gt; Create Delegate Action

Validity:
    Selected field(s) non-primitive. Selected field(s) NOT externally
    visible (private).

Create delegate adds delegate methods to owner class. Which delegate
methods are added can be selected by user (similar to override methods).

&gt;&gt; Hide Delegate Refactoring Action

Validity:
    Selected field(s) non-primitive. Selected field(s) are externally visible
    outside of the declaring class: have getter. Should we allow public,
    protected, package as well?

Hide Delegate removes getter (and changes field access to private)
and creates delegate methods in owner class to access
referenced methods of field(s).

    * All compilation units in the search space (project? workspace?) which
      accessed methods of field(s) are modified to access delegate 
      methods of the owner class.

Delegate methods have the exact same name as methods of the member, or
the same name but with a user-supplied prefix.

Errors:
    * If new delegate method has naming clash with existing method in owner
      class.
    * If compilation unit in search space used a field of the newly hidden 
      field(s) and not a method...or should we just create accessors for these
      as well?
    * If unit in search space just grabbed a reference and didn't use
      a method of the member immediately...later on when actual methods are
      called we don't have a reference to the owner class.
Yes, start with your own package. If we decide to integrate it into another 
package we can use the move refactoring ;-)).

Create Delegate:
  - validation: field not visible and there aren't any getter and setter
    methods for the private field.

Hide Delegate:
  - in a first implementation I would only allow hide delegate on fields that
    are private and have a visible getter method. If a user wants to use hide
    delegate on public fields than he first have to use self encapsulate field.

  - to search for all references to an element using the right scope have a look
    at class RefactoringScopeFactory.

  - Errors:
      o the new method can also overload an existing method and change the 
        semantic of the program without producing a compile error. But for the
        start I would ignore that case.
      o flagging the second and third case as an error is fine for me. IMO they
        are seldom cases anyway.

Just to let you know: I am on vacation the next week ;-).
[refactoring]

No action planned for 2.1. Bug is tagged as help wanted
Create delegate is in place for 2.1. Hide delegate could be done via inline 
method. No further action planned.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10935" />
    <CreationDate amount="2002-03-07 05:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>DOM/AST: wrong length of variable declaration fragment</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="package">
        <location start="40" end="58" />
        <code>package nested_in;</code>
      </source_code>
      <source_code type="class">
        <location start="60" end="197" />
        <code>public class A_test651 {
	public void foo() {
		Runnable run= new Runnable() {
			public void run() {
				/*]*/foo();/*[*/
			}
		};
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020305

For the following code

package nested_in;

public class A_test651 {
	public void foo() {
		Runnable run= new Runnable() {
			public void run() {
				/*]*/foo();/*[*/
			}
		};
	}
}

the position of the varaible declaration fragment is [80, 61] which means the 
end is the ) of the method call foo().
I was not counting the opening/closing brace to find the end position of the variable declaration 
fragment.
Fixed and released in HEAD.</WithStack>
    <WithOutStack>Build 20020305

For the following code

package nested_in;

public class A_test651 {
	public void foo() {
		Runnable run= new Runnable() {
			public void run() {
				/*]*/foo();/*[*/
			}
		};
	}
}

the position of the varaible declaration fragment is [80, 61] which means the 
end is the ) of the method call foo().
I was not counting the opening/closing brace to find the end position of the variable declaration 
fragment.
Fixed and released in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10936" />
    <CreationDate amount="2002-03-07 06:25:00 -0500" />
    <DupId amount="128661" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Javadoc completion shouldn't add imports</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020305

When codeassisting inside a @see javadoc tag, it should not insert an extra 
import if the chosen type needs qualification. I may not need this type in the 
source directly.
the import is required for JavaDoc
Should this be resolved as invalid?

It happens to me with jdt version 3.3.0.v20070606-0010-7o7jCHEFpPoqQYvnXqejeR 

Worst still it imports a class which is available within eclipse but not when depolyed as a J2EE app (EJB trying to import a UI class) so it breaks the build as well.

Actually - ignore my last comment I didn't see your comment about he javadoc.
Reopening to mark as dup.


*** This bug has been marked as a duplicate of bug 128661 ***</WithStack>
    <WithOutStack>Build 20020305

When codeassisting inside a @see javadoc tag, it should not insert an extra 
import if the chosen type needs qualification. I may not need this type in the 
source directly.
the import is required for JavaDoc
Should this be resolved as invalid?

It happens to me with jdt version 3.3.0.v20070606-0010-7o7jCHEFpPoqQYvnXqejeR 

Worst still it imports a class which is available within eclipse but not when depolyed as a J2EE app (EJB trying to import a UI class) so it breaks the build as well.

Actually - ignore my last comment I didn't see your comment about he javadoc.
Reopening to mark as dup.


*** This bug has been marked as a duplicate of bug 128661 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10937" />
    <CreationDate amount="2002-03-07 06:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="Sun" />
    <op_sys amount="Solaris" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Converter problem on Solaris</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1. Checked-out the project from the cvs server (I did this with smartcvs</Line>
          <Line>but I have also done this in the past with eclipse with the same eventual</Line>
          <Line>result).</Line>
          <Line>2. Created a new java project in eclipse pointing to the checked-out project</Line>
          <Line>(with the correct src path and the correct build path).  After this, I could</Line>
          <Line>see, in eclipse, all the src code previously checked.</Line>
          <Line>3. I edited the project properties and set the repository to be our</Line>
          <Line>cvs repository.</Line>
          <Line>4. I then selected the project and did a Team-&gt;Synchronize with Stream.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This error occured after doing the following to try to read a current project
from our cvs repository into eclipse.
1. Checked-out the project from the cvs server (I did this with smartcvs 
but I have also done this in the past with eclipse with the same eventual
result).
2. Created a new java project in eclipse pointing to the checked-out project
(with the correct src path and the correct build path).  After this, I could
see, in eclipse, all the src code previously checked.
3. I edited the project properties and set the repository to be our 
cvs repository.
4. I then selected the project and did a Team-&gt;Synchronize with Stream.

The synchronize took a very long time to complete (5 minutes or so).  This in
itself isn't suprising as we have not only our source code but also all the
jdom, junit and jgo (a graphics package) source code in the repository as well.
During this time the synchronize progress bar was unchanged but the text
progress updated normally.  Eventually the progress bar progressed but once it
reached 100 per-cent the VM crashed.

I've attached a copy of the hs_err_pid*.log, core and .log files.

Brendan
Created attachment 439
hs_err_pidNNN.log - second attempt
Created attachment 440
eclipse metadata log file
Having looked further at the .log file, I noticed the messages:
Remote resource has a path which is not supported blah, blah, blah.
I've removed those files from the repository and tried again with the
same VM crash result.
VM crash is in OS.iconv(), called by StyledText. Moving to SWT team for insight.
(Oh, and note OS is Solaris).
This looks suspiciously like the RH6.2 versus RH7.1 incompatibility. SSQ to 
investigate.

Brendan: Which version of Solaris are you running, and what locale are you in?
Solaris 7 (SunOS 5.7)
Created attachment 444
locale
Created attachment 445
locale -a
This problem dissapeared when I upgraded to the first release that incorporated 
Team 2.0 code (not suprisingly).  Sorry for not adding this extra info sooner.
*** Bug 12968 has been marked as a duplicate of this bug. ***
Fixed &gt; 0408 by Silenio.  There was a Solaris-specific problem in the Converter 
that was causing it to not always find the appropriate code page.  Changed the 
report title to reflect this.</WithStack>
    <WithOutStack>This error occured after doing the following to try to read a current project
from our cvs repository into eclipse.
1. Checked-out the project from the cvs server (I did this with smartcvs 
but I have also done this in the past with eclipse with the same eventual
result).
2. Created a new java project in eclipse pointing to the checked-out project
(with the correct src path and the correct build path).  After this, I could
see, in eclipse, all the src code previously checked.
3. I edited the project properties and set the repository to be our 
cvs repository.
4. I then selected the project and did a Team-&gt;Synchronize with Stream.

The synchronize took a very long time to complete (5 minutes or so).  This in
itself isn't suprising as we have not only our source code but also all the
jdom, junit and jgo (a graphics package) source code in the repository as well.
During this time the synchronize progress bar was unchanged but the text
progress updated normally.  Eventually the progress bar progressed but once it
reached 100 per-cent the VM crashed.

I've attached a copy of the hs_err_pid*.log, core and .log files.

Brendan
Created attachment 439
hs_err_pidNNN.log - second attempt
Created attachment 440
eclipse metadata log file
Having looked further at the .log file, I noticed the messages:
Remote resource has a path which is not supported blah, blah, blah.
I've removed those files from the repository and tried again with the
same VM crash result.
VM crash is in OS.iconv(), called by StyledText. Moving to SWT team for insight.
(Oh, and note OS is Solaris).
This looks suspiciously like the RH6.2 versus RH7.1 incompatibility. SSQ to 
investigate.

Brendan: Which version of Solaris are you running, and what locale are you in?
Solaris 7 (SunOS 5.7)
Created attachment 444
locale
Created attachment 445
locale -a
This problem dissapeared when I upgraded to the first release that incorporated 
Team 2.0 code (not suprisingly).  Sorry for not adding this extra info sooner.
*** Bug 12968 has been marked as a duplicate of this bug. ***
Fixed &gt; 0408 by Silenio.  There was a Solaris-specific problem in the Converter 
that was causing it to not always find the appropriate code page.  Changed the 
report title to reflect this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10938" />
    <CreationDate amount="2002-03-07 06:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Template for &lt;code&gt;null&lt;/code&gt; is incorrectly displayed in codeassist popup</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build 20020305

When selecting the &lt;code&gt;null&lt;/code&gt; template, it displays 
incorrectly "&lt;code&gt;&lt;/code&gt;null", and then inserts "&lt;code&gt;null&lt;/code&gt;".
??? It works for me just as it should. Have you tried doing a 'restore 
defaults' in the template preference page?
I guess you mean the display string of the proposal is incorrect? Can you check 
if the description of the template itself is incorrect?

Philippe, can you comment on this? Tnx.
It works fine now. I swore I saw it working incorrectly...
worksforme</WithStack>
    <WithOutStack>Build 20020305

When selecting the &lt;code&gt;null&lt;/code&gt; template, it displays 
incorrectly "&lt;code&gt;&lt;/code&gt;null", and then inserts "&lt;code&gt;null&lt;/code&gt;".
??? It works for me just as it should. Have you tried doing a 'restore 
defaults' in the template preference page?
I guess you mean the display string of the proposal is incorrect? Can you check 
if the description of the template itself is incorrect?

Philippe, can you comment on this? Tnx.
It works fine now. I swore I saw it working incorrectly...
worksforme</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10939" />
    <CreationDate amount="2002-03-07 07:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Method declaration completion is missing javadoc and curly braces</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020305

When requesting a method declaration completion, it should be inserted a 
Javadoc and some curly braces at the end (with cursor located in between).
We shouldn't add JavaDoc automatically since this can supress the javadoc 
feature for inheriting the spec from base classes (there is a preference for 
this).

What would also be nice as well is to generate a stub with the super call.
fixed &gt; 20020411
The code snippet inserted for method declarations is now generated by jdt.ui
(includes comments/super call)</WithStack>
    <WithOutStack>Build 20020305

When requesting a method declaration completion, it should be inserted a 
Javadoc and some curly braces at the end (with cursor located in between).
We shouldn't add JavaDoc automatically since this can supress the javadoc 
feature for inheriting the spec from base classes (there is a preference for 
this).

What would also be nice as well is to generate a stub with the super call.
fixed &gt; 20020411
The code snippet inserted for method declarations is now generated by jdt.ui
(includes comments/super call)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10940" />
    <CreationDate amount="2002-03-07 07:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="critical" />
    <Summery>Need an API to open multiple editors side by side</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I have been discussing this feature request thru Julian Jones with OTI. This 
feature request is to formalize it.

In our XSL debugger, we would like to see the XSL source and the XML source 
together (side by side), so that when we single step thru, it will highlight 
the line in the XSL source editor and the corresponding line in the XML source 
editor.

Right now there is no programatic way to open the editors and position them 
side by side. The user has to manually drag one editor and drop it to the edge 
of the WB window.

Would like an API to do it. Also would be nice if the settings can be 
remembered, and if the same source can be stacked together. That is, if 2 XML 
source and 2 XSL source are needed, the XML sources stacked behind each other, 
and the XSL sources stacked together.

But if I can just get the API to position them side by side in 2.0, I will 
already be very happy.
Support has been added to MultiEditor. 
See Bug 42641 for an example.</WithStack>
    <WithOutStack>I have been discussing this feature request thru Julian Jones with OTI. This 
feature request is to formalize it.

In our XSL debugger, we would like to see the XSL source and the XML source 
together (side by side), so that when we single step thru, it will highlight 
the line in the XSL source editor and the corresponding line in the XML source 
editor.

Right now there is no programatic way to open the editors and position them 
side by side. The user has to manually drag one editor and drop it to the edge 
of the WB window.

Would like an API to do it. Also would be nice if the settings can be 
remembered, and if the same source can be stacked together. That is, if 2 XML 
source and 2 XSL source are needed, the XML sources stacked behind each other, 
and the XSL sources stacked together.

But if I can just get the API to position them side by side in 2.0, I will 
already be very happy.
Support has been added to MultiEditor. 
See Bug 42641 for an example.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10941" />
    <CreationDate amount="2002-03-07 08:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[EditorMgmt] tabs: Editor view for managing editors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- we can force the dialog to become a view so that it can be left opened</Line>
          <Line>- the view can show the opened editors in the folder/package context where the edited resource lives, so that with 15/20 opened editors, expecially when working on branches of the same project, where resources name are the same, we can stop hunting for the right editor..</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>The current means of editor management - the scrollable arrow keys next to the
editor tabs and the ctrl+f6 pop-up - are insufficient. Both of these mechanisms
require the user to perform on the order of N operations to switch editors,
where N is the number of open editors.

To alleviate the problem, I propose the creation of an "Editor view" which
displays a flat list of the open editors. Single-clicking an editor in the
editor view would activate the selected editor. I believe this would require the
user to perform a constant number of operations (1 or 2) to switch editors.
This has come up before and is a very good idea. It's unlikely that we will be 
able to implement this enhancement for the 2.0 release. 
If this is considered an approved feature (that is, it will be added to the
repository if implemented), I'll take a look at this if I find some spare time.
I've done a preliminary implementation of an "EditorList" view. It does the
basics - displays the currently opened editors and activates editors when selected.

To make this feature *really* useful, I'm going to explore adding the notion of
working sets. I would personally find it handy to be able to define sets of
editors to display when I'm working on a particular problem. For example, I'd
like to define a "breakpoints" set that would open editors on the breakpoint
hierarchy.
I have a very rough cut of working sets working. For now, I just copied and
modified the Search Working Sets to work in the Platform UI and used that. I'll
use the official working set support (Bug 11044) when it is completed.

I've also added "sort by name" functionality and forward and back history
navigation.
Jared, 

   This is great news. As soon as you feel it is ready to be tried by other 
Eclipse UI developers please create an attachment to this PR and let us know on 
the UI team developer mailing list. 


Created attachment 513
Created attachment 514
Created two attachments.
editorlist.tar.gz - Contains the editorlist package. This file should be
decompressed and the resulting directory ("editorlist") copied into the
org/eclipse/ui/views directory of the org.eclipse.ui project

icons.tar.gz - Contains two icons used by the EditorList. editor_list.gif, which
is the icon used on the view's title bar, should be copied into
org.eclipse.ui/icons/full/cview16. editor_workingset.gif, which is the icon used
for the working set action on the view's toolbar, should be copied into
org.eclipse.ui/icons/full/clcl16.
org.eclipse.ui/plugin.xml needs to be manually tweaked to enable this view.
Under the org.eclipse.ui.views extension area, add:
&lt;view
   id="org.eclipse.ui.views.EditorList"
   name="%Views.EditorList"
   category="org.eclipse.ui"
   class="org.eclipse.ui.views.editorlist.EditorList"
   icon="icons/full/cview16/editor_list.gif"&gt;
&lt;/view&gt;Finally, add the following to org.eclipse.ui/plugin.properties:
Views.EditorList = Editors
It would be good to avoid duplicate functionality with the Switch to Editor 
dialog.  Ideally, the same functionality could be opened either as a view, or 
just on demand as a dialog.  (Note that a competing product allows dialogs to 
be docked as views).  We're planning on adding some extra management actions to 
the Switch to Editor dialog.

Also, it would be good to support drag and drop to add to working sets if you 
don't already.


I've migrated the working set support to the official support that is being
worked on in Bug 11044. 

It appears to work well, though there are some issues around the fact that the
platform working set support allows projects and folders to be added to working
sets. It *could* be useful to specify a folder; for instance, I might specify my
"breakpoints" working set by selecting the breakpoints package.

The question that follows is whether or not to traverse the directory structure.
Opening all files in selected folders recursively could cause a real mess. Then
again, we might just want to say that if a user adds a project to a working set
and then chooses to open that working set, they'll get what they asked for.

As a first pass, I think I'll traverse the directory structure in the background
to determine how many files are available to be opened. If the number is greater
than some threshold (20?), I can pop up a dialog (where N is the number of files
found):
Message: This working set contains N files. Do you really want to open all files?
Buttons: Yes | No

Is there anything I can do to help for this bug?
Created attachment 714
I've made a plugin out of this so that it can be easily dropped into an Eclipse
install and tested.

There is a problem with Bugzilla such that it will try to save the file as
"showattachment.cgi" The attached file should be saved as "EditorList.zip"

For now, the working set support is extremely lightweight. It will only open
files which are explicitly defined in the working set and it won't give any
errors if your working set does not contain any files. If the editor sets are
considered useful, I'll polish the support up to production quality.
Note that the view listed as "Editors" under "Basic" with the navigator and such.
The latest attachment doesn't download properly, all I can get is a file 154 
bytes long, probably truncated.
Created attachment 715
Created attachment 716
Please grab the latest EditorList.zip (20020426). My original zip was corrupted. Joe was kind enough to zip up the contents for me, but his archive 
("New EditorList.zip") doesn't have the correct directory structure (it lacks the enclosing folder).

To install this plugin, unzip the latest EditorList.zip and drop the resultant directory ("EditorList") into the plugins directory of your Eclipse 
install. This version should be compatible with the last two stable builds and all integration builds in between.

Sorry about the mess. The attachments are small and I hope to have the Bugzilla maintainers delete the old ones soon.

Created attachment 1865
Enhancement request:
 If the editor list is not sorted alphabetically, order the list so it 
matches the editors left-to-right.  It is possible to move an editor tab, and it would be nice if the 
editor list updated as editor tabs were moved.  Barring this, a 'refresh' button would be nice.
Added the ability to create working sets from the EditorList view. I've found 
this is useful when I'm working on one problem and decide to go work on 
another for a bit, but I want to "save my place" in the original context. You 
can now multiselect editors in the view, right click and choose "Create 
Working Set" to create a working set that contains the selected files.
The editor list shows error icon overlays, but when the errors are fixed, the error overlays don't 
disappear from the editor list.
Created attachment 1874
EditorList.zip version 20020822
This latest version adds a menu item to "Refresh" the view. This allows users 
to work around any problems that still exist with updating.

Also, opened Bug 22722 "Editor references not returned in tab order." If 
this bug is addressed, the Joe's enhancement request (displaying the editors 
in the tab order) will just work.
Created attachment 1886
EditorList.zip - Version 20020823
The latest version fixes the bug with error markers not being updated 
correctly. The image in the view now correctly mirrors the image on the editor 
tab.

Added ALT+LEFT/RIGHT history navigation to the view.

Supported hotkeys now:
DELETE - Close selected editors
F5 - Refresh view contents
ALT+LEFT - Previous editor
ALT+RIGHT - Next editor
Opened Bug 23032 requesting that the UI's editor reference implementation 
support the IAdaptable interface. If this change is made, the editor view will 
support the Team menu. I've already got this working in my workspace where I 
made the necessary change to the UI for testing.
Like it, use it every day now.  Thank you.

Enhancement request:  I've played with using the view as a fast view.  Idea was 
to click, find editor, and then double-click; the view would return to the fast 
view icon mode and the editor would have focus.  

View does not minimized back to an icon when in fast view mode.

Thanks again.
+1 to Pat's suggestion.
I've implemented the double-click behavior. Unfortunately, I can't share the 
latest code until my patch to Bug 23032 is checked into CVS. Hopefully, this 
can happen for the 20020910 integration build.
Created attachment 1954
EditorList.zip - Version 20020909
This version contains the double-click behavior and the Team menu support.

The Team menu support will not work without the IAdaptable change requested in 
Bug 23032. Until that bug is resolved, I've added a simple defense so that the 
code will work with or without the IAdaptable patch.

This version also contains a workaround to a UI problem whereby some key 
notifications (DEL, F5, etc.) aren't being sent on keyPressed. The workaround 
is to perform these actions on keyRelease.
Created attachment 1956
EditorList.zip - Version 20020909a
Version 20020909 contained a bug I introduced in a refactoring (doh!). The 
problem was that the history wasn't properly initialized if the view was 
created with no editors open in the workbench. This resulted in an NPE when an 
editor was opened and the view tried to add it to the uninitialized history.

The problem is fixed in Version 20020909a.
In the interest of convenience, I've made a SourceForge project to host this
plug-in. Future development (bug reports, discussions, releases) will happen
there. The URL is:
http://www.sourceforge.net/projects/editorlist/
There are no plans for the UI team to work on this defect for 2.1. Reasign to 
inbox.  
*** Bug 15928 has been marked as a duplicate of this bug. ***
*** Bug 15431 has been marked as a duplicate of this bug. ***
Is this still being worked on as an Eclipse view, or is the sf plugin where it's
going to stay?
I hope this will eventually be included in Eclipse, but it is starting to look 
more pessimistic for 3.1. 
 
Not for 3.1
(In reply to comment #42)
&gt; Not for 3.1

Hmmm... this is bad news :-(

Would it be possible to know the reason(s) why the implementation of this view
is postponed and postponed again since 2002 !?

Isn't it an interesting feature ??
It is interesting, but it is not a plan item and so can only really be done if
time permits.  While I (as a lowly committer) can suggest plan items, it is
ultimately the PMC that decides what stuff is truly important.  As the look of
editors were changed during the 3.0 cycle, it doesn't seem important to devote a
lot of time to changing them again during 3.1.  Perhaps we will be able to look
at this again sometime after 3.1....

And, just so you don't feel completely neglected, Platform/UI (a team of six
full-time committers) currently has 3064 open bugs.  Many wonderful things don't
get implemented just because of the load.  :(

*** Bug 63802 has been marked as a duplicate of this bug. ***
Bug 63802 is not exactly a duplicate of this bug because i was talking about
http://editorviewer.sourceforge.net plugin.
I tried both, editorlist and editorviewer and i found the latter much more
useful because it can show the edited files in the exact project directory
context where they live.
Please consider editorviewer fatures for inclusion in eclipse.
*** Bug 132707 has been marked as a duplicate of this bug. ***
Moving Dougs bugs
Does anyone feel this feature is still necessary given the improvements made to the ctrl-e dialog?
The ctrl+e dialog is nice and may be a valid alternative...

But - have you tried creating two stacks of editors and using that dialog?

I sometimes make one editor stack where I edit and another where I read.
Or I stack plugin.xml files in one area and java code in the other.

Only one stack is shown with Ctrl+e.  I tried hitting ctrl+e twice thinking it would bump up to a full list of open editors... no joy.

Ctrl+F6 shows them all, but does not have the typing filter....

Just an observation.  The function available in Ctrl+E and/or Ctrl+F6 seems to work fine when you have only one editor stack and hints that this view is not as useful now.

My external thought.
Pat: have you tried ctrl-e in the 3.3 stream?  It shows editors from all stacks... (as well as buckets of other functionality)
re ctrl-e, nope - still using 3.2.1+.... :-)

Then I'll love 3.3!
Well, i didn't see yet 3.3 but if:
- we can force the dialog to become a view so that it can be left opened
- the view can show the opened editors in the folder/package context where the edited resource lives, so that with 15/20 opened editors, expecially when working on branches of the same project, where resources name are the same, we can stop hunting for the right editor..

we do not need any longer this feature.

I switched to eclipse after using jbuilder and netbeans, and i'd never go back to them, but if i can point out a single drawback that sometimes makes me hate it, it is the editor management point (read MRU stuff...)
Until there's a switch that allows to toggle MRU tab management so that ALL the editor tabs can be visible on multiple rows MAINTAINING their relative places IMO the only way to avoid hunting for editors is to have a view that shows the edited resource context.
By those criteria we're not yet there.  Passing to Boris.
(In reply to comment #51)
&gt; Pat: have you tried ctrl-e in the 3.3 stream?  It shows editors from all
&gt; stacks... (as well as buckets of other functionality)
&gt; 
I use Europa but CTRL-e shows only editors in current stack. CTRL-E, E doesn't show editors from all editor stacks. 
CTRL-SHIFT-e show a dialog with all editors, but unfortunately it doesn't support   filtering.  

Remy is now responsible for watching the [EditorMgmt] component area.</WithStack>
    <WithOutStack>The current means of editor management - the scrollable arrow keys next to the
editor tabs and the ctrl+f6 pop-up - are insufficient. Both of these mechanisms
require the user to perform on the order of N operations to switch editors,
where N is the number of open editors.

To alleviate the problem, I propose the creation of an "Editor view" which
displays a flat list of the open editors. Single-clicking an editor in the
editor view would activate the selected editor. I believe this would require the
user to perform a constant number of operations (1 or 2) to switch editors.
This has come up before and is a very good idea. It's unlikely that we will be 
able to implement this enhancement for the 2.0 release. 
If this is considered an approved feature (that is, it will be added to the
repository if implemented), I'll take a look at this if I find some spare time.
I've done a preliminary implementation of an "EditorList" view. It does the
basics - displays the currently opened editors and activates editors when selected.

To make this feature *really* useful, I'm going to explore adding the notion of
working sets. I would personally find it handy to be able to define sets of
editors to display when I'm working on a particular problem. For example, I'd
like to define a "breakpoints" set that would open editors on the breakpoint
hierarchy.
I have a very rough cut of working sets working. For now, I just copied and
modified the Search Working Sets to work in the Platform UI and used that. I'll
use the official working set support (Bug 11044) when it is completed.

I've also added "sort by name" functionality and forward and back history
navigation.
Jared, 

   This is great news. As soon as you feel it is ready to be tried by other 
Eclipse UI developers please create an attachment to this PR and let us know on 
the UI team developer mailing list. 


Created attachment 513
Created attachment 514
Created two attachments.
editorlist.tar.gz - Contains the editorlist package. This file should be
decompressed and the resulting directory ("editorlist") copied into the
org/eclipse/ui/views directory of the org.eclipse.ui project

icons.tar.gz - Contains two icons used by the EditorList. editor_list.gif, which
is the icon used on the view's title bar, should be copied into
org.eclipse.ui/icons/full/cview16. editor_workingset.gif, which is the icon used
for the working set action on the view's toolbar, should be copied into
org.eclipse.ui/icons/full/clcl16.
org.eclipse.ui/plugin.xml needs to be manually tweaked to enable this view.
Under the org.eclipse.ui.views extension area, add:
&lt;view
   id="org.eclipse.ui.views.EditorList"
   name="%Views.EditorList"
   category="org.eclipse.ui"
   class="org.eclipse.ui.views.editorlist.EditorList"
   icon="icons/full/cview16/editor_list.gif"&gt;
&lt;/view&gt;Finally, add the following to org.eclipse.ui/plugin.properties:
Views.EditorList = Editors
It would be good to avoid duplicate functionality with the Switch to Editor 
dialog.  Ideally, the same functionality could be opened either as a view, or 
just on demand as a dialog.  (Note that a competing product allows dialogs to 
be docked as views).  We're planning on adding some extra management actions to 
the Switch to Editor dialog.

Also, it would be good to support drag and drop to add to working sets if you 
don't already.


I've migrated the working set support to the official support that is being
worked on in Bug 11044. 

It appears to work well, though there are some issues around the fact that the
platform working set support allows projects and folders to be added to working
sets. It *could* be useful to specify a folder; for instance, I might specify my
"breakpoints" working set by selecting the breakpoints package.

The question that follows is whether or not to traverse the directory structure.
Opening all files in selected folders recursively could cause a real mess. Then
again, we might just want to say that if a user adds a project to a working set
and then chooses to open that working set, they'll get what they asked for.

As a first pass, I think I'll traverse the directory structure in the background
to determine how many files are available to be opened. If the number is greater
than some threshold (20?), I can pop up a dialog (where N is the number of files
found):
Message: This working set contains N files. Do you really want to open all files?
Buttons: Yes | No

Is there anything I can do to help for this bug?
Created attachment 714
I've made a plugin out of this so that it can be easily dropped into an Eclipse
install and tested.

There is a problem with Bugzilla such that it will try to save the file as
"showattachment.cgi" The attached file should be saved as "EditorList.zip"

For now, the working set support is extremely lightweight. It will only open
files which are explicitly defined in the working set and it won't give any
errors if your working set does not contain any files. If the editor sets are
considered useful, I'll polish the support up to production quality.
Note that the view listed as "Editors" under "Basic" with the navigator and such.
The latest attachment doesn't download properly, all I can get is a file 154 
bytes long, probably truncated.
Created attachment 715
Created attachment 716
Please grab the latest EditorList.zip (20020426). My original zip was corrupted. Joe was kind enough to zip up the contents for me, but his archive 
("New EditorList.zip") doesn't have the correct directory structure (it lacks the enclosing folder).

To install this plugin, unzip the latest EditorList.zip and drop the resultant directory ("EditorList") into the plugins directory of your Eclipse 
install. This version should be compatible with the last two stable builds and all integration builds in between.

Sorry about the mess. The attachments are small and I hope to have the Bugzilla maintainers delete the old ones soon.

Created attachment 1865
Enhancement request:
 If the editor list is not sorted alphabetically, order the list so it 
matches the editors left-to-right.  It is possible to move an editor tab, and it would be nice if the 
editor list updated as editor tabs were moved.  Barring this, a 'refresh' button would be nice.
Added the ability to create working sets from the EditorList view. I've found 
this is useful when I'm working on one problem and decide to go work on 
another for a bit, but I want to "save my place" in the original context. You 
can now multiselect editors in the view, right click and choose "Create 
Working Set" to create a working set that contains the selected files.
The editor list shows error icon overlays, but when the errors are fixed, the error overlays don't 
disappear from the editor list.
Created attachment 1874
EditorList.zip version 20020822
This latest version adds a menu item to "Refresh" the view. This allows users 
to work around any problems that still exist with updating.

Also, opened Bug 22722 "Editor references not returned in tab order." If 
this bug is addressed, the Joe's enhancement request (displaying the editors 
in the tab order) will just work.
Created attachment 1886
EditorList.zip - Version 20020823
The latest version fixes the bug with error markers not being updated 
correctly. The image in the view now correctly mirrors the image on the editor 
tab.

Added ALT+LEFT/RIGHT history navigation to the view.

Supported hotkeys now:
DELETE - Close selected editors
F5 - Refresh view contents
ALT+LEFT - Previous editor
ALT+RIGHT - Next editor
Opened Bug 23032 requesting that the UI's editor reference implementation 
support the IAdaptable interface. If this change is made, the editor view will 
support the Team menu. I've already got this working in my workspace where I 
made the necessary change to the UI for testing.
Like it, use it every day now.  Thank you.

Enhancement request:  I've played with using the view as a fast view.  Idea was 
to click, find editor, and then double-click; the view would return to the fast 
view icon mode and the editor would have focus.  

View does not minimized back to an icon when in fast view mode.

Thanks again.
+1 to Pat's suggestion.
I've implemented the double-click behavior. Unfortunately, I can't share the 
latest code until my patch to Bug 23032 is checked into CVS. Hopefully, this 
can happen for the 20020910 integration build.
Created attachment 1954
EditorList.zip - Version 20020909
This version contains the double-click behavior and the Team menu support.

The Team menu support will not work without the IAdaptable change requested in 
Bug 23032. Until that bug is resolved, I've added a simple defense so that the 
code will work with or without the IAdaptable patch.

This version also contains a workaround to a UI problem whereby some key 
notifications (DEL, F5, etc.) aren't being sent on keyPressed. The workaround 
is to perform these actions on keyRelease.
Created attachment 1956
EditorList.zip - Version 20020909a
Version 20020909 contained a bug I introduced in a refactoring (doh!). The 
problem was that the history wasn't properly initialized if the view was 
created with no editors open in the workbench. This resulted in an NPE when an 
editor was opened and the view tried to add it to the uninitialized history.

The problem is fixed in Version 20020909a.
In the interest of convenience, I've made a SourceForge project to host this
plug-in. Future development (bug reports, discussions, releases) will happen
there. The URL is:
http://www.sourceforge.net/projects/editorlist/
There are no plans for the UI team to work on this defect for 2.1. Reasign to 
inbox.  
*** Bug 15928 has been marked as a duplicate of this bug. ***
*** Bug 15431 has been marked as a duplicate of this bug. ***
Is this still being worked on as an Eclipse view, or is the sf plugin where it's
going to stay?
I hope this will eventually be included in Eclipse, but it is starting to look 
more pessimistic for 3.1. 
 
Not for 3.1
(In reply to comment #42)
&gt; Not for 3.1

Hmmm... this is bad news :-(

Would it be possible to know the reason(s) why the implementation of this view
is postponed and postponed again since 2002 !?

Isn't it an interesting feature ??
It is interesting, but it is not a plan item and so can only really be done if
time permits.  While I (as a lowly committer) can suggest plan items, it is
ultimately the PMC that decides what stuff is truly important.  As the look of
editors were changed during the 3.0 cycle, it doesn't seem important to devote a
lot of time to changing them again during 3.1.  Perhaps we will be able to look
at this again sometime after 3.1....

And, just so you don't feel completely neglected, Platform/UI (a team of six
full-time committers) currently has 3064 open bugs.  Many wonderful things don't
get implemented just because of the load.  :(

*** Bug 63802 has been marked as a duplicate of this bug. ***
Bug 63802 is not exactly a duplicate of this bug because i was talking about
http://editorviewer.sourceforge.net plugin.
I tried both, editorlist and editorviewer and i found the latter much more
useful because it can show the edited files in the exact project directory
context where they live.
Please consider editorviewer fatures for inclusion in eclipse.
*** Bug 132707 has been marked as a duplicate of this bug. ***
Moving Dougs bugs
Does anyone feel this feature is still necessary given the improvements made to the ctrl-e dialog?
The ctrl+e dialog is nice and may be a valid alternative...

But - have you tried creating two stacks of editors and using that dialog?

I sometimes make one editor stack where I edit and another where I read.
Or I stack plugin.xml files in one area and java code in the other.

Only one stack is shown with Ctrl+e.  I tried hitting ctrl+e twice thinking it would bump up to a full list of open editors... no joy.

Ctrl+F6 shows them all, but does not have the typing filter....

Just an observation.  The function available in Ctrl+E and/or Ctrl+F6 seems to work fine when you have only one editor stack and hints that this view is not as useful now.

My external thought.
Pat: have you tried ctrl-e in the 3.3 stream?  It shows editors from all stacks... (as well as buckets of other functionality)
re ctrl-e, nope - still using 3.2.1+.... :-)

Then I'll love 3.3!
Well, i didn't see yet 3.3 but if:
- we can force the dialog to become a view so that it can be left opened
- the view can show the opened editors in the folder/package context where the edited resource lives, so that with 15/20 opened editors, expecially when working on branches of the same project, where resources name are the same, we can stop hunting for the right editor..

we do not need any longer this feature.

I switched to eclipse after using jbuilder and netbeans, and i'd never go back to them, but if i can point out a single drawback that sometimes makes me hate it, it is the editor management point (read MRU stuff...)
Until there's a switch that allows to toggle MRU tab management so that ALL the editor tabs can be visible on multiple rows MAINTAINING their relative places IMO the only way to avoid hunting for editors is to have a view that shows the edited resource context.
By those criteria we're not yet there.  Passing to Boris.
(In reply to comment #51)
&gt; Pat: have you tried ctrl-e in the 3.3 stream?  It shows editors from all
&gt; stacks... (as well as buckets of other functionality)
&gt; 
I use Europa but CTRL-e shows only editors in current stack. CTRL-E, E doesn't show editors from all editor stacks. 
CTRL-SHIFT-e show a dialog with all editors, but unfortunately it doesn't support   filtering.  

Remy is now responsible for watching the [EditorMgmt] component area.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10942" />
    <CreationDate amount="2002-03-07 08:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Launcher should autodetect gtk only installation.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If the eclipse launcher is invoked in an environment where there is no motif 
install, it should look for some other window system to run. Currently this 
means that, if there is no "motif" ws direction, it should look for a "gtk" 
one and start it if possible.
The launcher now determines the -ws (window system) switch dynamically. Each 
platform module (win32, motif, photon) has a list of available GUIs for the -ws 
switch and the main launcher module chooses the first GUI that is supported by 
the given Eclipse installation. A GUI is supported if the file 
&lt;homeDir&gt;/plugins/org.eclipse.swt/ws/&lt;GUI&gt;/swt.jar exists.

The win32 and photon launchers each support only one GUI but motif launcher 
supports two: "motif" and "gtk". If a supported GUI cannot be determined, a 
message is displayed.</WithStack>
    <WithOutStack>If the eclipse launcher is invoked in an environment where there is no motif 
install, it should look for some other window system to run. Currently this 
means that, if there is no "motif" ws direction, it should look for a "gtk" 
one and start it if possible.
The launcher now determines the -ws (window system) switch dynamically. Each 
platform module (win32, motif, photon) has a list of available GUIs for the -ws 
switch and the main launcher module chooses the first GUI that is supported by 
the given Eclipse installation. A GUI is supported if the file 
&lt;homeDir&gt;/plugins/org.eclipse.swt/ws/&lt;GUI&gt;/swt.jar exists.

The win32 and photon launchers each support only one GUI but motif launcher 
supports two: "motif" and "gtk". If a supported GUI cannot be determined, a 
message is displayed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10943" />
    <CreationDate amount="2002-03-07 09:05:00 -0500" />
    <DupId amount="19738" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>Pos1 - Key, aka "Home" - Key</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I find that the pos1 key doesn't do that, what a programmer expects.

When I hit the pos1-key the cursor jumps to the beginning of the line, but I 
think the cursor should jump to the first character(!) of the line and only on 
a second hit on "pos1" the cursor jump to the beginning of the line.

Other java-IDEs do so and I think the worlds best java-ide should do as well :-)
AFAIK the "Pos1" key is called "home" on non-german keyboards.
sorry my keyboard is - unfortunately - a german one :-)
This is also referred to as Smart Home, Smart End. 

sorry, not for 2.0
opening to close as duplicate



*** This bug has been marked as a duplicate of 19738 ***</WithStack>
    <WithOutStack>I find that the pos1 key doesn't do that, what a programmer expects.

When I hit the pos1-key the cursor jumps to the beginning of the line, but I 
think the cursor should jump to the first character(!) of the line and only on 
a second hit on "pos1" the cursor jump to the beginning of the line.

Other java-IDEs do so and I think the worlds best java-ide should do as well :-)
AFAIK the "Pos1" key is called "home" on non-german keyboards.
sorry my keyboard is - unfortunately - a german one :-)
This is also referred to as Smart Home, Smart End. 

sorry, not for 2.0
opening to close as duplicate



*** This bug has been marked as a duplicate of 19738 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10944" />
    <CreationDate amount="2002-03-07 09:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Exception in line painter when deleting text</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437330576442">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>Index out of bounds</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:1873)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:1819)</Frame>
          <Frame depth="2">org.eclipse.swt.custom.StyledText.redrawRange(StyledText.java:5913)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.javaeditor.LinePainter.drawHighlightLine(LinePainter.java:82)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.javaeditor.LinePainter.paint(LinePainter.java:114)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.javaeditor.PaintManager.paint(PaintManager.java:167)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.javaeditor.PaintManager.selectionChanged(PaintManager.java:213)</Frame>
          <Frame depth="7">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:147)</Frame>
          <Frame depth="8">org.eclipse.jface.text.TextViewer.selectionChanged(TextViewer.java:999)</Frame>
          <Frame depth="9">org.eclipse.jface.text.TextViewer$4.widgetSelected(TextViewer.java:572)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:488)</Frame>
          <Frame depth="13">org.eclipse.swt.custom.StyledText.sendSelectionEvent(StyledText.java:6280)</Frame>
          <Frame depth="14">org.eclipse.swt.custom.StyledText.clearSelection(StyledText.java:1464)</Frame>
          <Frame depth="15">org.eclipse.swt.custom.StyledText.internalSetSelection(StyledText.java:7074)</Frame>
          <Frame depth="16">org.eclipse.swt.custom.StyledText.updateSelection(StyledText.java:7777)</Frame>
          <Frame depth="17">org.eclipse.swt.custom.StyledText.handleTextChanged(StyledText.java:5215)</Frame>
          <Frame depth="18">org.eclipse.swt.custom.StyledText$6.textChanged(StyledText.java:4785)</Frame>
          <Frame depth="19">org.eclipse.jface.text.DocumentAdapter.fireTextChanged(DocumentAdapter.java:220)</Frame>
          <Frame depth="20">org.eclipse.jface.text.DocumentAdapter.documentChanged(DocumentAdapter.java:199)</Frame>
          <Frame depth="21">org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java:517)</Frame>
          <Frame depth="22">org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:812)</Frame>
          <Frame depth="23">org.eclipse.jface.text.DocumentAdapter.replaceTextRange(DocumentAdapter.java:136)</Frame>
          <Frame depth="24">org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5569)</Frame>
          <Frame depth="25">org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6270)</Frame>
          <Frame depth="26">org.eclipse.swt.custom.StyledText.doBackspace(StyledText.java:1873)</Frame>
          <Frame depth="27">org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:5454)</Frame>
          <Frame depth="28">org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5094)</Frame>
          <Frame depth="29">org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5066)</Frame>
          <Frame depth="30">org.eclipse.swt.custom.StyledText$8.handleEvent(StyledText.java:4826)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:488)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1557)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1399)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:700)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.run(Workbench.java:683)</Frame>
          <Frame depth="37">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)</Frame>
          <Frame depth="38">org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)</Frame>
          <Frame depth="39">SlimLauncher.main(SlimLauncher.java:14)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437330576442">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>Index out of bounds</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:1873)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:1819)</Frame>
          <Frame depth="2">org.eclipse.swt.custom.StyledText.redrawRange(StyledText.java:5913)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.javaeditor.LinePainter.drawHighlightLine(LinePainter.java:82)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.javaeditor.LinePainter.paint(LinePainter.java:114)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.javaeditor.PaintManager.paint(PaintManager.java:167)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.javaeditor.PaintManager.keyReleased(PaintManager.java:187)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:120)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:488)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1557)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1399)</Frame>
          <Frame depth="12">org.eclipse.jface.window.Window.runEventLoop(Window.java:538)</Frame>
          <Frame depth="13">org.eclipse.jface.window.Window.open(Window.java:525)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.dialogs.InternalErrorDialog.openQuestion(InternalErrorDialog.java:171)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.ExceptionHandler.openQuestionDialog(ExceptionHandler.java:140)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.ExceptionHandler.handleException(ExceptionHandler.java:60)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:703)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.Workbench.run(Workbench.java:683)</Frame>
          <Frame depth="19">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)</Frame>
          <Frame depth="20">org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)</Frame>
          <Frame depth="21">SlimLauncher.main(SlimLauncher.java:14)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I was coding away in my editor and hit ctrl+space to bring up code assist.
Unfortunately, the only valid proposal was a template so it dumped a bunch of
garbage into my code. 

I hit shift+end to highlight to the end of the line, then tapped the left arrow
key a few times to highlight only the newly added code, then hit backspace to
delete it. 

I got an internal error dialog and the following was dumped to my log:

Log: Thu Mar 07 08:13:43 CST 2002
1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Log: Thu Mar 07 08:13:43 CST 2002
4 org.eclipse.ui 0 Index out of bounds
java.lang.IllegalArgumentException: Index out of bounds
	at org.eclipse.swt.SWT.error(SWT.java:1873)
	at org.eclipse.swt.SWT.error(SWT.java:1819)
	at org.eclipse.swt.custom.StyledText.redrawRange(StyledText.java:5913)
	at
org.eclipse.jdt.internal.ui.javaeditor.LinePainter.drawHighlightLine(LinePainter.java:82)
	at org.eclipse.jdt.internal.ui.javaeditor.LinePainter.paint(LinePainter.java:114)
	at org.eclipse.jdt.internal.ui.javaeditor.PaintManager.paint(PaintManager.java:167)
	at
org.eclipse.jdt.internal.ui.javaeditor.PaintManager.selectionChanged(PaintManager.java:213)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:147)
	at org.eclipse.jface.text.TextViewer.selectionChanged(TextViewer.java:999)
	at org.eclipse.jface.text.TextViewer$4.widgetSelected(TextViewer.java:572)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:488)
	at org.eclipse.swt.custom.StyledText.sendSelectionEvent(StyledText.java:6280)
	at org.eclipse.swt.custom.StyledText.clearSelection(StyledText.java:1464)
	at org.eclipse.swt.custom.StyledText.internalSetSelection(StyledText.java:7074)
	at org.eclipse.swt.custom.StyledText.updateSelection(StyledText.java:7777)
	at org.eclipse.swt.custom.StyledText.handleTextChanged(StyledText.java:5215)
	at org.eclipse.swt.custom.StyledText$6.textChanged(StyledText.java:4785)
	at org.eclipse.jface.text.DocumentAdapter.fireTextChanged(DocumentAdapter.java:220)
	at org.eclipse.jface.text.DocumentAdapter.documentChanged(DocumentAdapter.java:199)
	at
org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java:517)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:812)
	at org.eclipse.jface.text.DocumentAdapter.replaceTextRange(DocumentAdapter.java:136)
	at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5569)
	at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6270)
	at org.eclipse.swt.custom.StyledText.doBackspace(StyledText.java:1873)
	at org.eclipse.swt.custom.StyledText.invokeAction(StyledText.java:5454)
	at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5094)
	at org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5066)
	at org.eclipse.swt.custom.StyledText$8.handleEvent(StyledText.java:4826)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:488)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1557)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1399)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:700)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:683)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)
	at SlimLauncher.main(SlimLauncher.java:14)
Log: Thu Mar 07 08:13:43 CST 2002
1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Log: Thu Mar 07 08:13:43 CST 2002
4 org.eclipse.ui 0 Index out of bounds
java.lang.IllegalArgumentException: Index out of bounds
	at org.eclipse.swt.SWT.error(SWT.java:1873)
	at org.eclipse.swt.SWT.error(SWT.java:1819)
	at org.eclipse.swt.custom.StyledText.redrawRange(StyledText.java:5913)
	at
org.eclipse.jdt.internal.ui.javaeditor.LinePainter.drawHighlightLine(LinePainter.java:82)
	at org.eclipse.jdt.internal.ui.javaeditor.LinePainter.paint(LinePainter.java:114)
	at org.eclipse.jdt.internal.ui.javaeditor.PaintManager.paint(PaintManager.java:167)
	at
org.eclipse.jdt.internal.ui.javaeditor.PaintManager.keyReleased(PaintManager.java:187)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:120)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:74)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:488)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1557)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1399)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:538)
	at org.eclipse.jface.window.Window.open(Window.java:525)
	at
org.eclipse.ui.internal.dialogs.InternalErrorDialog.openQuestion(InternalErrorDialog.java:171)
	at
org.eclipse.ui.internal.ExceptionHandler.openQuestionDialog(ExceptionHandler.java:140)
	at org.eclipse.ui.internal.ExceptionHandler.handleException(ExceptionHandler.java:60)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:703)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:683)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)
	at SlimLauncher.main(SlimLauncher.java:14)
Build 20020312.</WithStack>
    <WithOutStack>I was coding away in my editor and hit ctrl+space to bring up code assist.
Unfortunately, the only valid proposal was a template so it dumped a bunch of
garbage into my code. 

I hit shift+end to highlight to the end of the line, then tapped the left arrow
key a few times to highlight only the newly added code, then hit backspace to
delete it. 

I got an internal error dialog and the following was dumped to my log:

Log: Thu Mar 07 08:13:43 CST 2002
1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Log: Thu Mar 07 08:13:43 CST 2002
4 org.eclipse.ui 0 Index out of bounds
Log: Thu Mar 07 08:13:43 CST 2002
1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Log: Thu Mar 07 08:13:43 CST 2002
4 org.eclipse.ui 0 Index out of bounds

Build 20020312.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10945" />
    <CreationDate amount="2002-03-07 09:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Automatic insertion of single proposals shouldn't insert templates</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Summary says it all.

The automatic insertion of single proposal option is very handy, but I never
want it to insert a template without an explicit request. The option to
automatically insert single proposals shouldn't apply to templates.
Not only templates should not be inserted directly, but also anonymous inner 
type completions. 
No action for 2.0
+1. Only pure name completions should be inserted automatically. Templates and
more complex completions such as generating a method stub or an anonymous class
should show a list of choices even when automatic completion features are enabled.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Summary says it all.

The automatic insertion of single proposal option is very handy, but I never
want it to insert a template without an explicit request. The option to
automatically insert single proposals shouldn't apply to templates.
Not only templates should not be inserted directly, but also anonymous inner 
type completions. 
No action for 2.0
+1. Only pure name completions should be inserted automatically. Templates and
more complex completions such as generating a method stub or an anonymous class
should show a list of choices even when automatic completion features are enabled.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10946" />
    <CreationDate amount="2002-03-07 09:48:00 -0500" />
    <DupId amount="10273" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Keyboard expand in PropertySheet (TableTreeViewer?) causes NPE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Select the first column of a composed property in the property sheet.  Press 
the right-arrow key to expand that property.  Exception occurs.


*** This bug has been marked as a duplicate of 10273 ***</WithStack>
    <WithOutStack>Select the first column of a composed property in the property sheet.  Press 
the right-arrow key to expand that property.  Exception occurs.


*** This bug has been marked as a duplicate of 10273 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10947" />
    <CreationDate amount="2002-03-07 09:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Cell Editors] Clicking in white space on property sheet doesn't commit change</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Make a change in a text cell editor in the property sheet.  click on the table 
somewhere below the last table item.  The change is not committed.

02-14 build
This is a case of "cell editor doesn't commit when losing focus". This is a
pernicious bug that every application developer is forced to fixed; should be a
generic behavior.


*** This bug has been marked as a duplicate of 10949 ***
Not a dup of 10949.  Should fix for 2.1.

*** Bug 12039 has been marked as a duplicate of this bug. ***
Fixed in N20030228
*** Bug 10948 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Make a change in a text cell editor in the property sheet.  click on the table 
somewhere below the last table item.  The change is not committed.

02-14 build
This is a case of "cell editor doesn't commit when losing focus". This is a
pernicious bug that every application developer is forced to fixed; should be a
generic behavior.


*** This bug has been marked as a duplicate of 10949 ***
Not a dup of 10949.  Should fix for 2.1.

*** Bug 12039 has been marked as a duplicate of this bug. ***
Fixed in N20030228
*** Bug 10948 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10948" />
    <CreationDate amount="2002-03-07 09:57:00 -0500" />
    <DupId amount="10947" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Cell Editors] PropertySheet flips pages and loses focus without commit on celleditor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Activate a cell editor on the propertysheet demo editor.
Select a file in the navigator.
The propertysheet flips pages and does not commit the CellEditor's change.

Now select the Tab for the IEditorPart for the demo.  The PS page is flipped 
back, and at that point the cell editor is committed.


*** This bug has been marked as a duplicate of 10949 ***
Not a duplicate of bug #10949, duplicate of bug #10947


*** This bug has been marked as a duplicate of 10947 ***</WithStack>
    <WithOutStack>Activate a cell editor on the propertysheet demo editor.
Select a file in the navigator.
The propertysheet flips pages and does not commit the CellEditor's change.

Now select the Tab for the IEditorPart for the demo.  The PS page is flipped 
back, and at that point the cell editor is committed.


*** This bug has been marked as a duplicate of 10949 ***
Not a duplicate of bug #10949, duplicate of bug #10947


*** This bug has been marked as a duplicate of 10947 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10949" />
    <CreationDate amount="2002-03-07 10:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Cell Editors] PropertySheet View does not commit changes on close/save of editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Make a change in the propertysheet, leaving the cell editor active.  Now, 
select save from the file menu (if you have previously dirtied the editor).  
Or, if you have not dirtied the editor, close it, in which case it should be 
dirty because of the property change that was made (but not yet committed).

This is a general Ipartservice problem in JFace.  Editors have the ability to 
spread themself out all over the place in other views such as the propertysheet 
or outline view, or some custom view.  These views are typically pagebooks like 
the propertysheet.  When the user closes the current editor, the satellite 
views don't get notification until after the editor is closed.  They need 
notification **BEFORE** the editor is closed, because they may have uncommitted 
changes.  This is common to more than just the property sheet.  For example, 
direct editing of a TreeItem in the OutlineView.  Or some custom property view.
perhaps could be fixed by committing cell editor changes when focus is lost?
*** Bug 10948 has been marked as a duplicate of this bug. ***
*** Bug 10947 has been marked as a duplicate of this bug. ***
*** Bug 23122 has been marked as a duplicate of this bug. ***
*** Bug 17735 has been marked as a duplicate of this bug. ***
*** Bug 12039 has been marked as a duplicate of this bug. ***
10947 (and probably others) are not duplicates of this bug, at least as it is
written. In fact, 10947 seems to have nothing to do with this bug. If you intend
this (later) bug to be a catch-all for the general problem that losing focus in
a table doesn't commit changes, fine. But please say so.
I believe that 10947, as well as 12039, 17735, 23122 and 10948 are all the same 
root cause, that is changes are not committed when focus is lost.  In the event 
that any of these other issues are not addressed when the focus lost issue is 
fixed, then we can re-open the outstanding PRs and continue the investigation.

I choose PR 10947 to track the issue as it was one of the 3 oldest PRs on this 
issue; I do not understand your 'later' comment with respect to this PR.
In fact, you chose 10949, yes? Which is later than 10947. What's not to
understand? Who cares?

I just wanted to make sure you were onto the real problem, not some special case
of it. Seems you are. Great!
I don't see how this is related to bug 10947 (focus lost doesn't commit 
change).  It is possible to close and save the editor without the cell editor 
losing focus.
There is danger of introducing a breaking change here.
Suggest deferring.
Agree that applying cell editor changes on close/save is not a problem with 
focus tracking.  Will investigate for RC2, in addition to addressing the focus 
problem (bug 10947).

Created attachment 3878
Tab Traversal for PropertySheetView
Missing required lifecycle events from workbench to handle this properly.
Defer.

Marking as LATER please respond if you think this is critical for 3.0
fixing
really marking as LATER :-)
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Make a change in the propertysheet, leaving the cell editor active.  Now, 
select save from the file menu (if you have previously dirtied the editor).  
Or, if you have not dirtied the editor, close it, in which case it should be 
dirty because of the property change that was made (but not yet committed).

This is a general Ipartservice problem in JFace.  Editors have the ability to 
spread themself out all over the place in other views such as the propertysheet 
or outline view, or some custom view.  These views are typically pagebooks like 
the propertysheet.  When the user closes the current editor, the satellite 
views don't get notification until after the editor is closed.  They need 
notification **BEFORE** the editor is closed, because they may have uncommitted 
changes.  This is common to more than just the property sheet.  For example, 
direct editing of a TreeItem in the OutlineView.  Or some custom property view.
perhaps could be fixed by committing cell editor changes when focus is lost?
*** Bug 10948 has been marked as a duplicate of this bug. ***
*** Bug 10947 has been marked as a duplicate of this bug. ***
*** Bug 23122 has been marked as a duplicate of this bug. ***
*** Bug 17735 has been marked as a duplicate of this bug. ***
*** Bug 12039 has been marked as a duplicate of this bug. ***
10947 (and probably others) are not duplicates of this bug, at least as it is
written. In fact, 10947 seems to have nothing to do with this bug. If you intend
this (later) bug to be a catch-all for the general problem that losing focus in
a table doesn't commit changes, fine. But please say so.
I believe that 10947, as well as 12039, 17735, 23122 and 10948 are all the same 
root cause, that is changes are not committed when focus is lost.  In the event 
that any of these other issues are not addressed when the focus lost issue is 
fixed, then we can re-open the outstanding PRs and continue the investigation.

I choose PR 10947 to track the issue as it was one of the 3 oldest PRs on this 
issue; I do not understand your 'later' comment with respect to this PR.
In fact, you chose 10949, yes? Which is later than 10947. What's not to
understand? Who cares?

I just wanted to make sure you were onto the real problem, not some special case
of it. Seems you are. Great!
I don't see how this is related to bug 10947 (focus lost doesn't commit 
change).  It is possible to close and save the editor without the cell editor 
losing focus.
There is danger of introducing a breaking change here.
Suggest deferring.
Agree that applying cell editor changes on close/save is not a problem with 
focus tracking.  Will investigate for RC2, in addition to addressing the focus 
problem (bug 10947).

Created attachment 3878
Tab Traversal for PropertySheetView
Missing required lifecycle events from workbench to handle this properly.
Defer.

Marking as LATER please respond if you think this is critical for 3.0
fixing
really marking as LATER :-)
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10950" />
    <CreationDate amount="2002-03-07 10:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[breakpoints] Need watchpoint overlays for fields</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>We should show overlays on fields that have watchpoints set on them. This
includes fields that appear in the outliner, variables view, expression view, etc.
Deferred currently
re-open for 3.1. (Need to show breakpoint overlays for watchpoints, method 
breakpoints, class load breakpoints, exception breakpoints).
*** Bug 53173 has been marked as a duplicate of this bug. ***
Deferred
So, it will not go into 3.1 now?
Patches from the community are welcome. I'm deferring this because the reality 
is that we likely will not get to this in the 3.1 time frame with our current 
work load and available resources.
reopening to close
marking as wontfix, but contributions are always welcome</WithStack>
    <WithOutStack>We should show overlays on fields that have watchpoints set on them. This
includes fields that appear in the outliner, variables view, expression view, etc.
Deferred currently
re-open for 3.1. (Need to show breakpoint overlays for watchpoints, method 
breakpoints, class load breakpoints, exception breakpoints).
*** Bug 53173 has been marked as a duplicate of this bug. ***
Deferred
So, it will not go into 3.1 now?
Patches from the community are welcome. I'm deferring this because the reality 
is that we likely will not get to this in the 3.1 time frame with our current 
work load and available resources.
reopening to close
marking as wontfix, but contributions are always welcome</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10951" />
    <CreationDate amount="2002-03-07 10:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Viewers] Table UI should indicate when a CellEditor is active or not</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>There are several cases where the CellEditor stays active although the user may 
have expected it to have been closed and his changes committed.  Some of these 
cases may be working as designed, or due to technical limitations of some sort.

Given that this *does* happen, the user should be able to see that it 
happened.  Currently, a TextCellEditor is indistinguishable from the Table cell 
below it.  They are the same color, the font the same, etc.  The UI should 
indicate that a CellEditor is active.  I know that the text on windows is 
shifted 1-pixel up and to the left, but perhaps a drop-shadow border and/or 
highlighting the table cell could be done as well.
Defer
Reopen to investigate
There are no plans for the UI team to work on this defect until higher priority 
items are addressed. 
There are currently no plans to work on this feature</WithStack>
    <WithOutStack>There are several cases where the CellEditor stays active although the user may 
have expected it to have been closed and his changes committed.  Some of these 
cases may be working as designed, or due to technical limitations of some sort.

Given that this *does* happen, the user should be able to see that it 
happened.  Currently, a TextCellEditor is indistinguishable from the Table cell 
below it.  They are the same color, the font the same, etc.  The UI should 
indicate that a CellEditor is active.  I know that the text on windows is 
shifted 1-pixel up and to the left, but perhaps a drop-shadow border and/or 
highlighting the table cell could be done as well.
Defer
Reopen to investigate
There are no plans for the UI team to work on this defect until higher priority 
items are addressed. 
There are currently no plans to work on this feature</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10952" />
    <CreationDate amount="2002-03-07 10:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Feature: (briefly?) highlight line when breakpoint is set</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>When adding a breakpoint (by double-clicking the margin or via the context 
menu), it can be hard to tell which line you are on.  This is a common 
occurrence in nested code, when it is indented far from the margin.  This can 
be an annoyance leading to breakpoints being set on unintended lines. 

It would be quite helpful if when a breakpoint was added, the entire 
corresponding line of code could be highlighted, perhaps only for a brief 
moment, just as a visual cue as to which line has just been set as a 
breakpoint.
Deferred currently.
Do not intend to fix. An image appears in the editor ruler.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>When adding a breakpoint (by double-clicking the margin or via the context 
menu), it can be hard to tell which line you are on.  This is a common 
occurrence in nested code, when it is indented far from the margin.  This can 
be an annoyance leading to breakpoints being set on unintended lines. 

It would be quite helpful if when a breakpoint was added, the entire 
corresponding line of code could be highlighted, perhaps only for a brief 
moment, just as a visual cue as to which line has just been set as a 
breakpoint.
Deferred currently.
Do not intend to fix. An image appears in the editor ruler.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10953" />
    <CreationDate amount="2002-03-07 10:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Halt does not work for multi-threaded applications</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>With TestC, halt does not work when the testcase is running in a loop.
Process id obtained by "info program" is not parsed correctly for multi-
threaded applications.
Fixed GdbDebugSession.java.</WithStack>
    <WithOutStack>With TestC, halt does not work when the testcase is running in a loop.
Process id obtained by "info program" is not parsed correctly for multi-
threaded applications.
Fixed GdbDebugSession.java.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10954" />
    <CreationDate amount="2002-03-07 10:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>IMember::getFlags semantics on interface members</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>getFlags on interface members currently returns not the real visibility 
but the visibility as declared in the source

what is the reason for that and can it be changed?

i can start writting workarounds for that but then, 
someone else will forget to use my util class and call 
Flags.isPublic(method.getFlags())
i stumbled upon it a number of times 
http://bugs.eclipse.org/bugs/show_bug.cgi?id=10669
is another case when the current behavior is causing problems  
All modifiers in the JavaModel reflect the source modifiers (same as on the 
ASTs). Remember that the Model is a structured source model, nothing resolved, 
no modifier inference or fix-up.

Bindings have the right information.</WithStack>
    <WithOutStack>getFlags on interface members currently returns not the real visibility 
but the visibility as declared in the source

what is the reason for that and can it be changed?

i can start writting workarounds for that but then, 
someone else will forget to use my util class and call 
Flags.isPublic(method.getFlags())
i stumbled upon it a number of times 
http://bugs.eclipse.org/bugs/show_bug.cgi?id=10669
is another case when the current behavior is causing problems  
All modifiers in the JavaModel reflect the source modifiers (same as on the 
ASTs). Remember that the Model is a structured source model, nothing resolved, 
no modifier inference or fix-up.

Bindings have the right information.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10955" />
    <CreationDate amount="2002-03-07 10:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>DCR - search: too limiting api of IJavaSearchScope</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="27" end="70" />
        <code>public boolean encloses(IResource element);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="592" end="638" />
        <code>public boolean encloses(IJavaElement element);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>currently, it only has a 

public boolean encloses(IResource element);

method, which makes it somewhat difficult to use.

if i add only 1 file to the scope and pass the scope to somebody else
they have no efficient way to retrieve that information
so, in order to do sth in that scope, they have to iterate thru _all_ files and 
call the 'encloses' method.

there should be a way to get the information that was used to create the scope -
now, it's a kind of black hole'ish - you put stuff and can get it out only with 
great difficulty.
the description and title were bogus
it should say:

public boolean encloses(IJavaElement element);
We cannot augment the search scope API without breaking our 1.0 customers who 
could have implemented it.
Jerome - please check spec'ed comment, and close. We cannot add any new API.
Yes, spec says that clients may choose to implement this interface, so it is 
too late to add new methods to IJavaSearchScope.
Closing.</WithStack>
    <WithOutStack>currently, it only has a 

public boolean encloses(IResource element);

method, which makes it somewhat difficult to use.

if i add only 1 file to the scope and pass the scope to somebody else
they have no efficient way to retrieve that information
so, in order to do sth in that scope, they have to iterate thru _all_ files and 
call the 'encloses' method.

there should be a way to get the information that was used to create the scope -
now, it's a kind of black hole'ish - you put stuff and can get it out only with 
great difficulty.
the description and title were bogus
it should say:

public boolean encloses(IJavaElement element);
We cannot augment the search scope API without breaking our 1.0 customers who 
could have implemented it.
Jerome - please check spec'ed comment, and close. We cannot add any new API.
Yes, spec says that clients may choose to implement this interface, so it is 
too late to add new methods to IJavaSearchScope.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10956" />
    <CreationDate amount="2002-03-07 10:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Default watchpoint settings</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>By default, watchpoints should be initialized to both access and modification.

Initializing them to modification-only is confusing ("I put a watchpoint on this
field. Why didn't it suspend?").
Implemented. Please verify.
Verified</WithStack>
    <WithOutStack>By default, watchpoints should be initialized to both access and modification.

Initializing them to modification-only is confusing ("I put a watchpoint on this
field. Why didn't it suspend?").
Implemented. Please verify.
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10957" />
    <CreationDate amount="2002-03-07 10:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>IllegalArgumentException from drawing Highlight Line</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="1199" end="1277" />
        <code>org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. create new project with 2 classes pack.A &amp; pack.B</Line>
          <Line>2. add a long comment to B</Line>
          <Line>3. Open Browser perspective, no editors open</Line>
          <Line>4. Select B (opens editor), select comment, now switch to A -&gt;IAE</Line>
          <Line>(Editor is reused)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20020305
Dont know if reproducible:
1. create new project with 2 classes pack.A &amp; pack.B
2. add a long comment to B
3. Open Browser perspective, no editors open
4. Select B (opens editor), select comment, now switch to A -&gt;IAE
(Editor is reused)

java.lang.IllegalArgumentException: Index out of bounds

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/swt/SWT.error(ILjava/lang/Throwable;)V
   org/eclipse/swt/SWT.error(I)V
   org/eclipse/swt/custom/StyledText.redrawRange(IIZ)V
   org/eclipse/jdt/internal/ui/javaeditor/LinePainter.drawHighlightLine()V
   org/eclipse/jdt/internal/ui/javaeditor/LinePainter.paint()V
   org/eclipse/jdt/internal/ui/javaeditor/PaintManager.paint()V
   org/eclipse/jdt/internal/ui/javaeditor/PaintManager.access$2
(Lorg/eclipse/jdt/internal/ui/javaeditor/PaintManager;)V
   org/eclipse/jdt/internal/ui/javaeditor/PaintManager$1.run()V
   org/eclipse/swt/widgets/RunnableLock.run()V
   org/eclipse/swt/widgets/Synchronizer.runAsyncMessages()Z
   org/eclipse/swt/widgets/Display.runAsyncMessages()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   SlimLauncher.main([Ljava/lang/String;)V
&gt; 20020307.</WithStack>
    <WithOutStack>20020305
Dont know if reproducible:
1. create new project with 2 classes pack.A &amp; pack.B
2. add a long comment to B
3. Open Browser perspective, no editors open
4. Select B (opens editor), select comment, now switch to A -&gt;IAE
(Editor is reused)

java.lang.IllegalArgumentException: Index out of bounds

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/swt/SWT.error(ILjava/lang/Throwable;)V
   org/eclipse/swt/SWT.error(I)V
   org/eclipse/swt/custom/StyledText.redrawRange(IIZ)V
   org/eclipse/jdt/internal/ui/javaeditor/LinePainter.drawHighlightLine()V
   org/eclipse/jdt/internal/ui/javaeditor/LinePainter.paint()V
   org/eclipse/jdt/internal/ui/javaeditor/PaintManager.paint()V
   org/eclipse/jdt/internal/ui/javaeditor/PaintManager.access$2
(Lorg/eclipse/jdt/internal/ui/javaeditor/PaintManager;)V
   org/eclipse/jdt/internal/ui/javaeditor/PaintManager$1.run()V
   org/eclipse/swt/widgets/RunnableLock.run()V
   org/eclipse/swt/widgets/Synchronizer.runAsyncMessages()Z
   org/eclipse/swt/widgets/Display.runAsyncMessages()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   SlimLauncher.main([Ljava/lang/String;)V
&gt; 20020307.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10958" />
    <CreationDate amount="2002-03-07 10:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>create getter without setter</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I can click on a variable in the outline, and get a menu item to create
the getter and setter.  I often want to just create a public getter without
the corresponding public setter.  I would like a "create getter" menu entry as
well.
this would require a dialog and we didn't like a dialog.

I'd suggest to add a dialog and the dialog should show me all the fields of a 
type with the selection in the outliner initially selected. However, this is 
time permitting only.
moving to Adam since he has adopted the getter/setter UI
added a dialog - opens whan you invoke the action on a type or a compilation 
unit
give you the requested functionality (you cen select which methods you want 
created)</WithStack>
    <WithOutStack>I can click on a variable in the outline, and get a menu item to create
the getter and setter.  I often want to just create a public getter without
the corresponding public setter.  I would like a "create getter" menu entry as
well.
this would require a dialog and we didn't like a dialog.

I'd suggest to add a dialog and the dialog should show me all the fields of a 
type with the selection in the outliner initially selected. However, this is 
time permitting only.
moving to Adam since he has adopted the getter/setter UI
added a dialog - opens whan you invoke the action on a type or a compilation 
unit
give you the requested functionality (you cen select which methods you want 
created)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10959" />
    <CreationDate amount="2002-03-07 10:59:00 -0500" />
    <DupId amount="85" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Accepting changes in compare browser does not work</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Select a recently changed java source file.</Line>
          <Line>2. Compare to Repository Contents (CVS team provider)</Line>
          <Line>3. Select changed method in Java Structure Compare</Line>
          <Line>4. Copy current change from right to left, to restore method to prior state.</Line>
          <Line>5. Context menu Save on left pane.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 2002-02-26

1. Select a recently changed java source file.
2. Compare to Repository Contents (CVS team provider)
3. Select changed method in Java Structure Compare
4. Copy current change from right to left, to restore method to prior state.
5. Context menu Save on left pane.

Observe: Changes are not saved to workspace.
Expectation: The file in the workspace should be changed.


*** This bug has been marked as a duplicate of 85 ***</WithStack>
    <WithOutStack>Build 2002-02-26

1. Select a recently changed java source file.
2. Compare to Repository Contents (CVS team provider)
3. Select changed method in Java Structure Compare
4. Copy current change from right to left, to restore method to prior state.
5. Context menu Save on left pane.

Observe: Changes are not saved to workspace.
Expectation: The file in the workspace should be changed.


*** This bug has been marked as a duplicate of 85 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10960" />
    <CreationDate amount="2002-03-07 10:59:00 -0500" />
    <DupId amount="10637" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Should make it easy to set the working directory to the current project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>There has been a bit of traffic on the newsgroup on setting the working 
directory to the project that the main class is a member of. 

With the current launch configuration this is possible but not overly easy.
We could add a checkbox on the arguments page that stated "Set working 
directory to project folder".  

Without this option the user must know the structure of the Eclipse and the 
project on the file system.


*** This bug has been marked as a duplicate of 10637 ***</WithStack>
    <WithOutStack>There has been a bit of traffic on the newsgroup on setting the working 
directory to the project that the main class is a member of. 

With the current launch configuration this is possible but not overly easy.
We could add a checkbox on the arguments page that stated "Set working 
directory to project folder".  

Without this option the user must know the structure of the Eclipse and the 
project on the file system.


*** This bug has been marked as a duplicate of 10637 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10961" />
    <CreationDate amount="2002-03-07 11:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Ability to add a separator/newline in organize imports preferences</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="8">
      <source_code type="import">
        <location start="863" end="909" />
        <code>import com.ibm.etools.common.command.Command;</code>
      </source_code>
      <source_code type="import">
        <location start="910" end="945" />
        <code>import com.ibm.etools.draw2d.Label;</code>
      </source_code>
      <source_code type="import">
        <location start="946" end="1002" />
        <code>import com.ibm.etools.gef.editpolicies.DirectEditPolicy;</code>
      </source_code>
      <source_code type="import">
        <location start="1003" end="1056" />
        <code>import com.ibm.etools.gef.requests.DirectEditRequest;</code>
      </source_code>
      <source_code type="import">
        <location start="2045" end="2090" />
        <code>import com.ibm.etools.common.command.Command;</code>
      </source_code>
      <source_code type="import">
        <location start="2091" end="2127" />
        <code>import com.ibm.etools.draw2d.Label;</code>
      </source_code>
      <source_code type="import">
        <location start="2128" end="2184" />
        <code>import com.ibm.etools.gef.editpolicies.DirectEditPolicy;</code>
      </source_code>
      <source_code type="import">
        <location start="2185" end="2238" />
        <code>import com.ibm.etools.gef.requests.DirectEditRequest;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) java</Line>
          <Line>2) com.ibm.etools.common</Line>
          <Line>3) com</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I would like to be able to add a newline between certain groups of imports.  
For example, between imports from the JDK, imports from pre-reqqed plugins, and 
imports from within the plugin itself.
Martin you have done some investigations on this, was the outcome not for 2.0?
If yes pls defer the bug
Currently an empty line is added after every group. I wanted to show the 
newline explicitly in the prefpage.
Infrastructure is there, and I had the UI, but never released it. In the pref 
page, the order import table then gets twice as many entries (a spacer after 
every block), which makes the table huge and ugly. 

Randy, do you ask for an additional spacer (2 empty lines)?. I could do this, 
that would not blow up the size of the list.
I currently have my groups defined as:
1) java
2) com.ibm.etools.common
3) com

Yet, my import list looks like this:

import com.ibm.etools.common.command.Command;
import com.ibm.etools.draw2d.Label;
import com.ibm.etools.gef.editpolicies.DirectEditPolicy;
import com.ibm.etools.gef.requests.DirectEditRequest;

If what you are saying is true, there is a missing new line after the first 
import.  The algorithm must be finding "com" before "com.ibm.etools.common", 
and thus making the mistake.

The newline by default between groups is probably a good idea.  For users with 
a small number of groups, it makes sense.  If I want really fine control of the 
ordering, I want to insert newlines only between certain groups.  For users 
like me, showing the --Separator-- in the Table would be required.  For users 
with small numbers of groups (such as the default 2), showing the --Separator-- 
would not take up too much space.  That table is big enough to display about 8 
groups with 7 separators between them (at least on my computer), assuming that 
you add separators by default.

Organize imports is really great, but I think I'll only be able to use it when 
it matches imports to the most specific group to which they belong, and I can 
control newlines.  Thanks a lot.
it should look like
import com.ibm.etools.common.command.Command;

import com.ibm.etools.draw2d.Label;
import com.ibm.etools.gef.editpolicies.DirectEditPolicy;
import com.ibm.etools.gef.requests.DirectEditRequest;

There must be a bug in the algorithm. com should be the best match for the last 
3 entries.

Our (ZRH and MIN) default import organize file has 17 entries, so it would blow 
up to 34. What hurts me is that the table look stange as it would be very 
sparsly filled. Only every second line is information.

I will look into it again, as I said I originally also wanted this but could 
not find a nice UI.


I have the answer:
Don't display it as a TableItem.  Instead, make it a property of each TableItem 
group entry.  The property would be rather to insert a newline after the 
group.  You could indicate the properties state using a different Icon or some 
change in the way you display the Text.

Or, you could not display it at all and have a Checkbox at the bottom 
labeled "Insert newline below group".  The checkbox would show you the value of 
the currently selected group, or be disabled.
fixed the problem in the algoritm (com matches to com.ibm.etools.draw2d.Label 
more than com.ibm.etools.common)

&gt; 20020508

Have to move the separator issue to later.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I would like to be able to add a newline between certain groups of imports.  
For example, between imports from the JDK, imports from pre-reqqed plugins, and 
imports from within the plugin itself.
Martin you have done some investigations on this, was the outcome not for 2.0?
If yes pls defer the bug
Currently an empty line is added after every group. I wanted to show the 
newline explicitly in the prefpage.
Infrastructure is there, and I had the UI, but never released it. In the pref 
page, the order import table then gets twice as many entries (a spacer after 
every block), which makes the table huge and ugly. 

Randy, do you ask for an additional spacer (2 empty lines)?. I could do this, 
that would not blow up the size of the list.
I currently have my groups defined as:
1) java
2) com.ibm.etools.common
3) com

Yet, my import list looks like this:

import com.ibm.etools.common.command.Command;
import com.ibm.etools.draw2d.Label;
import com.ibm.etools.gef.editpolicies.DirectEditPolicy;
import com.ibm.etools.gef.requests.DirectEditRequest;

If what you are saying is true, there is a missing new line after the first 
import.  The algorithm must be finding "com" before "com.ibm.etools.common", 
and thus making the mistake.

The newline by default between groups is probably a good idea.  For users with 
a small number of groups, it makes sense.  If I want really fine control of the 
ordering, I want to insert newlines only between certain groups.  For users 
like me, showing the --Separator-- in the Table would be required.  For users 
with small numbers of groups (such as the default 2), showing the --Separator-- 
would not take up too much space.  That table is big enough to display about 8 
groups with 7 separators between them (at least on my computer), assuming that 
you add separators by default.

Organize imports is really great, but I think I'll only be able to use it when 
it matches imports to the most specific group to which they belong, and I can 
control newlines.  Thanks a lot.
it should look like
import com.ibm.etools.common.command.Command;

import com.ibm.etools.draw2d.Label;
import com.ibm.etools.gef.editpolicies.DirectEditPolicy;
import com.ibm.etools.gef.requests.DirectEditRequest;

There must be a bug in the algorithm. com should be the best match for the last 
3 entries.

Our (ZRH and MIN) default import organize file has 17 entries, so it would blow 
up to 34. What hurts me is that the table look stange as it would be very 
sparsly filled. Only every second line is information.

I will look into it again, as I said I originally also wanted this but could 
not find a nice UI.


I have the answer:
Don't display it as a TableItem.  Instead, make it a property of each TableItem 
group entry.  The property would be rather to insert a newline after the 
group.  You could indicate the properties state using a different Icon or some 
change in the way you display the Text.

Or, you could not display it at all and have a Checkbox at the bottom 
labeled "Insert newline below group".  The checkbox would show you the value of 
the currently selected group, or be disabled.
fixed the problem in the algoritm (com matches to com.ibm.etools.draw2d.Label 
more than com.ibm.etools.common)

&gt; 20020508

Have to move the separator issue to later.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10962" />
    <CreationDate amount="2002-03-07 11:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Creating a branch tags all files in repository</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you create a branch and chose to version the root, the console will appear 
and shows that all files in the repo are being tagged. Of course, this is very 
unfortunate.
Fixed</WithStack>
    <WithOutStack>If you create a branch and chose to version the root, the console will appear 
and shows that all files in the repo are being tagged. Of course, this is very 
unfortunate.
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10963" />
    <CreationDate amount="2002-03-07 11:02:00 -0500" />
    <DupId amount="7846" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Integration with native desktop color appearance</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I changed the desktop appearance in Windows NT by changing the title bar
color and the 
selection color. (by right clicking on the desktop, select
Appearance).
Eclipse changed 
the color of its title bar and the color of the editor view vertical bar on the left hand side (I had 
the method selected through the outline perspective in the editor window.) But it did not change 
the color of the title bar of the views (viz Packages, Outline) and the tabs for the files opened in 
the editor view.
When I restart eclipse I see the desired effect.
There is no callback for System color changes so there is currently no way for 
CLabel to detect this change.

Another option is for CLabel to provide new API that would exclusively use the 
System gradient colors (e.g. setGradient(boolean on)) - check the system colors 
each time and draw using the latest value for the color.  All senders of 
setGradient(Color[], int[]) would then call the new method.


*** This bug has been marked as a duplicate of 7846 ***</WithStack>
    <WithOutStack>I changed the desktop appearance in Windows NT by changing the title bar
color and the 
selection color. (by right clicking on the desktop, select
Appearance).
Eclipse changed 
the color of its title bar and the color of the editor view vertical bar on the left hand side (I had 
the method selected through the outline perspective in the editor window.) But it did not change 
the color of the title bar of the views (viz Packages, Outline) and the tabs for the files opened in 
the editor view.
When I restart eclipse I see the desired effect.
There is no callback for System color changes so there is currently no way for 
CLabel to detect this change.

Another option is for CLabel to provide new API that would exclusively use the 
System gradient colors (e.g. setGradient(boolean on)) - check the system colors 
each time and draw using the latest value for the color.  All senders of 
setGradient(Color[], int[]) would then call the new method.


*** This bug has been marked as a duplicate of 7846 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10964" />
    <CreationDate amount="2002-03-07 11:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Shift lines left"-hotkey doesn't work..</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>On the versions of Windows I've tried Eclipse on, the "shift line left" hotkey 
doesn't work.
I've tried Windows 2000 Pro Danish and English (American) versions, with 
danish keyboard.
I've also tried Windows XP English with danish keyboard.

The "shift line right" key works perfectly on any version.
Moving to Platform/UI for comment.
Oops...I mean JDT/UI.
works in 2.0 stream (tab key)</WithStack>
    <WithOutStack>On the versions of Windows I've tried Eclipse on, the "shift line left" hotkey 
doesn't work.
I've tried Windows 2000 Pro Danish and English (American) versions, with 
danish keyboard.
I've also tried Windows XP English with danish keyboard.

The "shift line right" key works perfectly on any version.
Moving to Platform/UI for comment.
Oops...I mean JDT/UI.
works in 2.0 stream (tab key)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10965" />
    <CreationDate amount="2002-03-07 11:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Working directory for JavaSnippetEditor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The user should be able to set the working directory of the snippet editor.

This could be a settable persistent property on the actual IFile associated 
with the snippet page.
Want to re-use some of the existing launch config tabs (e.g., Arguments, 
Environment, Source Lookup (when added)).  This will be a Property page that 
picks and chooses the launch config tabs it wants.  

Will wait until launch config tab API is finalized.
*** Bug 3690 has been marked as a duplicate of this bug. ***
Fixed. Exposed working directory as a property of the scrapbook page (i.e. pop-
up menu properties).
please verify (Darin S)
A few small things:
browsing for a local directory, the default directory (the root of the 
install), is not selected in the tree (the name is filled in).

You have to hit Apply, hitting OK does not apply any changes

You do not have to select any workspace relative folder and you can still hit OK
Didn't see any good way to change the browsing behavior.
Fixed the apply/ok problem
Set the container dialog to not show closed projects.
Please verify (darinw)
Verified</WithStack>
    <WithOutStack>The user should be able to set the working directory of the snippet editor.

This could be a settable persistent property on the actual IFile associated 
with the snippet page.
Want to re-use some of the existing launch config tabs (e.g., Arguments, 
Environment, Source Lookup (when added)).  This will be a Property page that 
picks and chooses the launch config tabs it wants.  

Will wait until launch config tab API is finalized.
*** Bug 3690 has been marked as a duplicate of this bug. ***
Fixed. Exposed working directory as a property of the scrapbook page (i.e. pop-
up menu properties).
please verify (Darin S)
A few small things:
browsing for a local directory, the default directory (the root of the 
install), is not selected in the tree (the name is filled in).

You have to hit Apply, hitting OK does not apply any changes

You do not have to select any workspace relative folder and you can still hit OK
Didn't see any good way to change the browsing behavior.
Fixed the apply/ok problem
Set the container dialog to not show closed projects.
Please verify (darinw)
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10966" />
    <CreationDate amount="2002-03-07 11:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[prefs] Would like per-project formatter settings</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Developers working on a single project might have different preferences setup 
for how code formatting works.  Same for organize imports, etc.  This can cause 
some difficult merges, but that's really unimportant.  A project should have a 
consistent format scenario (For clients reading the code).  I think each Java 
project should be able to override the global user preferences for formatting, 
organizing, etc.  AND, those preferences should be in the project itself, not 
the meta-area, so that all members of the team end up using the same prefernces.

One could argue that a .java-preferences file would pollute the project, but so 
does .classpath, .cvsignore, .vcm...

Maybe this should be addressed in core, with a .META resource folder in the 
project itself, where all files of this nature could be moved.
per project sharable preference settings make sense, but the basic mechanism 
should be provided by the Platform UI and not by JDT so that no every plugin 
has to reinvent sharing the mechanism.

We are investigating into making some Java core options per project but we will 
not solve the sharability problem in JDT.


Consider as a post 2.0 enhancement
Should have been marked 'later'
Consider as a post 2.0 enhancement
Reopen to investigate
Please consider for 2.1.
Some compile settings like "Non-externalized Strings" will generate 1000s of 
warnings if you have someone else's project loaded as source.  It would be nice 
to turn such warning on only for your projects, not the entire workspace.
Any news from JDT team on per-project compiler settings?
Compiler settings per project are available. Select Project-&gt;Properties-&gt;Java 
Compiler. As Erich said, sharing these settings envolve support from the 
platform. 

Moving PR back to platform inbox since there is nothing JDT-UI can currently do.
The ".project" file has an &lt;arguments&gt; tag. Can JDT put their per-project 
compiler settings in this tag?

Another issue is which settings are actually overridden in the project, and 
which are inherited from the workspace.  Since there is no way to share the 
workspace compiler settings via Team environiment, how can I be sure that other 
team members are using exactly the same compiler settings for a given project?  
In other words, do you share the delta of the compiler settings, or do you 
share every setting, since you don't know what the workspace settings are?
I would rather edge for a separate properties file, so as to avoid mixing 
concerns. However, some metadata folder would be much appreciated to 
encapsulate these. This is currently the main reason refraining us to add 
support for sharing these settings.

Given compiler settings are headless, the shareable project properties should 
come from platform/core. I think all we would need is some shareable metadata 
location we could use, instead of cluttering the project root folder 
with .files. 

What about a .metadata folder at the project level ?
I would reassign this defect to platform/core (if I was owning it &lt;g&gt;).

I think the workspace vs project preference is a pretty expansive problem.  For
instance under preferences Java-Code Generation-Code and Comments, it is often
desirable to to have different headers on top of class files since every project
has different copyright notices, etc.  Under Java-Code Generation-Code Formatter
it seems that every project I work on has its own formatting conventions.  I
think some thought needs to be put into deciding which preferences would be
candidates for per project modification.

I was extremely happy when I saw the Java-Compiler settings were made available
on a per project basis and would love to see some of these other settings made
available also.  Thanks for the great work!
The Java compiler settings are now available on a per-project basis as well as
being shareable in a repository.

Other plug-in developers (e.g. PDE compiler, etc) are being encouraged to
convert their preferences to be available on a per-project basis.

If there are certain preferences which you wish to be per-project, please open a
bug report against the team owning those preferences.
Which build is this avialable?  What is the bugzilla which tracks the change 
you are talking about?
Per-project shareable compiler settings were made available in Eclipe 3.0.
Encoding settings as well.

Per-project shareable PDE compiler settings were released to Eclipse 3.1 M3.
(bug 77042)


Erratum: compiler shareable settings were made available in 3.1M1, see bug 59258
bug 59258 should have been a dupe.  Sharing code formatting settings has not 
been addressed. Compiler settings are moved into a ".settings" folder without 
telling the user that this is happening. This might be confusing.
Actually, I can't set formatting setting per project at all.
Old Summary:
[Preferences] Some java preferences should be like .classpath, project scope and
'teamable'

Philippe, is there already a bug report for per-project formatter settings? I
looked quickly but didn't see anything.
I think I see a potential problem.  A set of projects should share the same 
formatting or compiler settings.  Currently, there is a complete copy of the 
compiler settings in every project.  This means if I make a change in one 
place, it is not propagated.  Maybe a project should be able to inherit another 
project's compiler settings if present.  In which case it's preference page 
would be disabled with a link to edit the base project's settings.

Same for formatting of course.
The problem is how to present this to the user. The infrastructure is there,
(even to inherit from the workspace level at a per-setting basis) but how do you
display that to the user in a simple manner?
Just another radio button I guess.  And then a drop-down combo which get's 
enabled and presents existing (or maybe just project on which the given project 
depends)
To make the problem more complex, you can have per-project, per-workspace, and
per-configuration settings. The framework also allows plug-in developers to
create their own "project scopes" so the question is how to show these to the
user as well? The list goes on and on.

Anyway, discussions about the presentation of the preference scopes to the user
in the UI should be discussed in Bug 71124. We'll leave this report for the
enhancement of having per-project shareable formatter settings.
per-workspace and per-config settings are not committed to CVS.  Since compiler 
preferences are now dumped into CVS by default, it only makes sense to allow 
users access to settings which live in CVS, no?
*** Bug 84534 has been marked as a duplicate of this bug. ***
(In reply to comment #20)
&gt; The problem is how to present this to the user. The infrastructure is there,
&gt; (even to inherit from the workspace level at a per-setting basis) but how do you
&gt; display that to the user in a simple manner?

Why not add a mirror of the entire preferences hierarchy under each project,
named Project Preferences.  The default would be to use workspace settings, with
a UI exactly as the java compiler settings are now.  So the two buttons on top
(Use workspace settings/Use project settings) and the tab to configure workspace
settings.  Underneath would be whatever was normally in the corresponding
workspace preferences region.  Seems like you're headed in the right direction
UI wise.

I'm not familiar with your codebase, so I can't state specific suggestions on
code/plugin implementation.  
Moving to UI for further analysis
Per project formatter settings are available in 3.1. If someone disagrees with
the current solution please open a separate bug report.</WithStack>
    <WithOutStack>Developers working on a single project might have different preferences setup 
for how code formatting works.  Same for organize imports, etc.  This can cause 
some difficult merges, but that's really unimportant.  A project should have a 
consistent format scenario (For clients reading the code).  I think each Java 
project should be able to override the global user preferences for formatting, 
organizing, etc.  AND, those preferences should be in the project itself, not 
the meta-area, so that all members of the team end up using the same prefernces.

One could argue that a .java-preferences file would pollute the project, but so 
does .classpath, .cvsignore, .vcm...

Maybe this should be addressed in core, with a .META resource folder in the 
project itself, where all files of this nature could be moved.
per project sharable preference settings make sense, but the basic mechanism 
should be provided by the Platform UI and not by JDT so that no every plugin 
has to reinvent sharing the mechanism.

We are investigating into making some Java core options per project but we will 
not solve the sharability problem in JDT.


Consider as a post 2.0 enhancement
Should have been marked 'later'
Consider as a post 2.0 enhancement
Reopen to investigate
Please consider for 2.1.
Some compile settings like "Non-externalized Strings" will generate 1000s of 
warnings if you have someone else's project loaded as source.  It would be nice 
to turn such warning on only for your projects, not the entire workspace.
Any news from JDT team on per-project compiler settings?
Compiler settings per project are available. Select Project-&gt;Properties-&gt;Java 
Compiler. As Erich said, sharing these settings envolve support from the 
platform. 

Moving PR back to platform inbox since there is nothing JDT-UI can currently do.
The ".project" file has an &lt;arguments&gt; tag. Can JDT put their per-project 
compiler settings in this tag?

Another issue is which settings are actually overridden in the project, and 
which are inherited from the workspace.  Since there is no way to share the 
workspace compiler settings via Team environiment, how can I be sure that other 
team members are using exactly the same compiler settings for a given project?  
In other words, do you share the delta of the compiler settings, or do you 
share every setting, since you don't know what the workspace settings are?
I would rather edge for a separate properties file, so as to avoid mixing 
concerns. However, some metadata folder would be much appreciated to 
encapsulate these. This is currently the main reason refraining us to add 
support for sharing these settings.

Given compiler settings are headless, the shareable project properties should 
come from platform/core. I think all we would need is some shareable metadata 
location we could use, instead of cluttering the project root folder 
with .files. 

What about a .metadata folder at the project level ?
I would reassign this defect to platform/core (if I was owning it &lt;g&gt;).

I think the workspace vs project preference is a pretty expansive problem.  For
instance under preferences Java-Code Generation-Code and Comments, it is often
desirable to to have different headers on top of class files since every project
has different copyright notices, etc.  Under Java-Code Generation-Code Formatter
it seems that every project I work on has its own formatting conventions.  I
think some thought needs to be put into deciding which preferences would be
candidates for per project modification.

I was extremely happy when I saw the Java-Compiler settings were made available
on a per project basis and would love to see some of these other settings made
available also.  Thanks for the great work!
The Java compiler settings are now available on a per-project basis as well as
being shareable in a repository.

Other plug-in developers (e.g. PDE compiler, etc) are being encouraged to
convert their preferences to be available on a per-project basis.

If there are certain preferences which you wish to be per-project, please open a
bug report against the team owning those preferences.
Which build is this avialable?  What is the bugzilla which tracks the change 
you are talking about?
Per-project shareable compiler settings were made available in Eclipe 3.0.
Encoding settings as well.

Per-project shareable PDE compiler settings were released to Eclipse 3.1 M3.
(bug 77042)


Erratum: compiler shareable settings were made available in 3.1M1, see bug 59258
bug 59258 should have been a dupe.  Sharing code formatting settings has not 
been addressed. Compiler settings are moved into a ".settings" folder without 
telling the user that this is happening. This might be confusing.
Actually, I can't set formatting setting per project at all.
Old Summary:
[Preferences] Some java preferences should be like .classpath, project scope and
'teamable'

Philippe, is there already a bug report for per-project formatter settings? I
looked quickly but didn't see anything.
I think I see a potential problem.  A set of projects should share the same 
formatting or compiler settings.  Currently, there is a complete copy of the 
compiler settings in every project.  This means if I make a change in one 
place, it is not propagated.  Maybe a project should be able to inherit another 
project's compiler settings if present.  In which case it's preference page 
would be disabled with a link to edit the base project's settings.

Same for formatting of course.
The problem is how to present this to the user. The infrastructure is there,
(even to inherit from the workspace level at a per-setting basis) but how do you
display that to the user in a simple manner?
Just another radio button I guess.  And then a drop-down combo which get's 
enabled and presents existing (or maybe just project on which the given project 
depends)
To make the problem more complex, you can have per-project, per-workspace, and
per-configuration settings. The framework also allows plug-in developers to
create their own "project scopes" so the question is how to show these to the
user as well? The list goes on and on.

Anyway, discussions about the presentation of the preference scopes to the user
in the UI should be discussed in Bug 71124. We'll leave this report for the
enhancement of having per-project shareable formatter settings.
per-workspace and per-config settings are not committed to CVS.  Since compiler 
preferences are now dumped into CVS by default, it only makes sense to allow 
users access to settings which live in CVS, no?
*** Bug 84534 has been marked as a duplicate of this bug. ***
(In reply to comment #20)
&gt; The problem is how to present this to the user. The infrastructure is there,
&gt; (even to inherit from the workspace level at a per-setting basis) but how do you
&gt; display that to the user in a simple manner?

Why not add a mirror of the entire preferences hierarchy under each project,
named Project Preferences.  The default would be to use workspace settings, with
a UI exactly as the java compiler settings are now.  So the two buttons on top
(Use workspace settings/Use project settings) and the tab to configure workspace
settings.  Underneath would be whatever was normally in the corresponding
workspace preferences region.  Seems like you're headed in the right direction
UI wise.

I'm not familiar with your codebase, so I can't state specific suggestions on
code/plugin implementation.  
Moving to UI for further analysis
Per project formatter settings are available in 3.1. If someone disagrees with
the current solution please open a separate bug report.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10967" />
    <CreationDate amount="2002-03-07 11:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>DOM/AST: AnonymousClassDeclaration</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I don't like the name of the new type 'AnonymousClassDeclaration'.
I think 'AnonymousTypeDeclaration' would be more consistent with the rest of the
API.
Jim - any comment?
Where ever possible, we use standard terminology as per the Java Language 
Specification. In JLS 15.9.5 they are referred to as "anonymous class 
declarations".

Besides, "type" is more general than required here - there is no 
such thing as an anonymous interface.


OK to close?
OK.
The explanation is good.
Closed. This was not a bug.</WithStack>
    <WithOutStack>I don't like the name of the new type 'AnonymousClassDeclaration'.
I think 'AnonymousTypeDeclaration' would be more consistent with the rest of the
API.
Jim - any comment?
Where ever possible, we use standard terminology as per the Java Language 
Specification. In JLS 15.9.5 they are referred to as "anonymous class 
declarations".

Besides, "type" is more general than required here - there is no 
such thing as an anonymous interface.


OK to close?
OK.
The explanation is good.
Closed. This was not a bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10968" />
    <CreationDate amount="2002-03-07 11:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Editor Mgmt] Clicking 'X' button on EditorPane does not cause focus change</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Pressing (without releasing) on the 'X' button on a View causes that ViewPart 
to gain Part activation.  Doing the same thing on an EditorTab (when some other 
view has focus) does not cause part activation/SWT focus to switch to the 
EditorPane.
Not activating the editor is expected. Releasing the button will close the 
editor without activating it. Apart from the inconsistency, is this causing a 
problem?
I was just noting the inconsistency.
Did not mean to close
Defer to consider making the view close button act like the editor close 
button.
Reopen to investigate
current behaviour is desired</WithStack>
    <WithOutStack>Pressing (without releasing) on the 'X' button on a View causes that ViewPart 
to gain Part activation.  Doing the same thing on an EditorTab (when some other 
view has focus) does not cause part activation/SWT focus to switch to the 
EditorPane.
Not activating the editor is expected. Releasing the button will close the 
editor without activating it. Apart from the inconsistency, is this causing a 
problem?
I was just noting the inconsistency.
Did not mean to close
Defer to consider making the view close button act like the editor close 
button.
Reopen to investigate
current behaviour is desired</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10969" />
    <CreationDate amount="2002-03-07 11:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>No busy cursor shown when advancing through changes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 20020305

When advancing through changes with Ctrl+E, no busy cursor is shown when it 
goes to retrieve the next file.  This may take a long time (e.g. I'm working 
from home).
after 2.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Build 20020305

When advancing through changes with Ctrl+E, no busy cursor is shown when it 
goes to retrieve the next file.  This may take a long time (e.g. I'm working 
from home).
after 2.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10970" />
    <CreationDate amount="2002-03-07 11:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>Index out of bounds exception when deleting code</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="3150" end="3228" />
        <code>org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- created a new file using the create CU wizard</Line>
          <Line>- selected the copyright using the shift down key combination</Line>
          <Line>- deleted it</Line>
          <Line>- selected the class comment using the shift down combination</Line>
          <Line>- deleted it</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020305 with latest stuff from 20020307 (catchup)

- created a new file using the create CU wizard
- selected the copyright using the shift down key combination
- deleted it
- selected the class comment using the shift down combination
- deleted it

Got the following exception:

java.lang.IllegalArgumentException: Index out of bounds

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/swt/SWT.error(ILjava/lang/Throwable;)V
   org/eclipse/swt/SWT.error(I)V
   org/eclipse/swt/custom/StyledText.redrawRange(IIZ)V
   org/eclipse/jdt/internal/ui/javaeditor/LinePainter.drawHighlightLine()V
   org/eclipse/jdt/internal/ui/javaeditor/LinePainter.paint()V
   org/eclipse/jdt/internal/ui/javaeditor/PaintManager.paint()V
   org/eclipse/jdt/internal/ui/javaeditor/PaintManager.selectionChanged
(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V
   org/eclipse/jface/viewers/Viewer.fireSelectionChanged
(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V
   org/eclipse/jface/text/TextViewer.selectionChanged(II)V
   org/eclipse/jface/text/TextViewer$4.widgetSelected
(Lorg/eclipse/swt/events/SelectionEvent;)V
   org/eclipse/swt/widgets/TypedListener.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)
V
   org/eclipse/swt/widgets/Widget.notifyListeners
(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/StyledText.sendSelectionEvent()V
   org/eclipse/swt/custom/StyledText.clearSelection(Z)V
   org/eclipse/swt/custom/StyledText.internalSetSelection(IIZ)V
   org/eclipse/swt/custom/StyledText.updateSelection(III)V
   org/eclipse/swt/custom/StyledText.handleTextChanged
(Lorg/eclipse/swt/custom/TextChangedEvent;)V
   org/eclipse/swt/custom/StyledText$6.textChanged
(Lorg/eclipse/swt/custom/TextChangedEvent;)V
   org/eclipse/jface/text/DocumentAdapter.fireTextChanged()V
   org/eclipse/jface/text/DocumentAdapter.documentChanged
(Lorg/eclipse/jface/text/DocumentEvent;)V
   org/eclipse/jface/text/AbstractDocument.fireDocumentChanged
(Lorg/eclipse/jface/text/DocumentEvent;)V
   org/eclipse/jface/text/AbstractDocument.replace(IILjava/lang/String;)V
   org/eclipse/jface/text/DocumentAdapter.replaceTextRange(IILjava/lang/String;)
V
   org/eclipse/swt/custom/StyledText.modifyContent
(Lorg/eclipse/swt/widgets/Event;Z)V
   org/eclipse/swt/custom/StyledText.sendKeyEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/StyledText.doDelete()V
   org/eclipse/swt/custom/StyledText.invokeAction(I)V
   org/eclipse/swt/custom/StyledText.handleKey(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/StyledText.handleKeyDown
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/StyledText$8.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)
V
   org/eclipse/swt/widgets/Widget.notifyListeners
(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   SlimLauncher.main([Ljava/lang/String;)V
in head.</WithStack>
    <WithOutStack>Build 20020305 with latest stuff from 20020307 (catchup)

- created a new file using the create CU wizard
- selected the copyright using the shift down key combination
- deleted it
- selected the class comment using the shift down combination
- deleted it

Got the following exception:

java.lang.IllegalArgumentException: Index out of bounds

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/swt/SWT.error(ILjava/lang/Throwable;)V
   org/eclipse/swt/SWT.error(I)V
   org/eclipse/swt/custom/StyledText.redrawRange(IIZ)V
   org/eclipse/jdt/internal/ui/javaeditor/LinePainter.drawHighlightLine()V
   org/eclipse/jdt/internal/ui/javaeditor/LinePainter.paint()V
   org/eclipse/jdt/internal/ui/javaeditor/PaintManager.paint()V
   org/eclipse/jdt/internal/ui/javaeditor/PaintManager.selectionChanged
(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V
   org/eclipse/jface/viewers/Viewer.fireSelectionChanged
(Lorg/eclipse/jface/viewers/SelectionChangedEvent;)V
   org/eclipse/jface/text/TextViewer.selectionChanged(II)V
   org/eclipse/jface/text/TextViewer$4.widgetSelected
(Lorg/eclipse/swt/events/SelectionEvent;)V
   org/eclipse/swt/widgets/TypedListener.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)
V
   org/eclipse/swt/widgets/Widget.notifyListeners
(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/StyledText.sendSelectionEvent()V
   org/eclipse/swt/custom/StyledText.clearSelection(Z)V
   org/eclipse/swt/custom/StyledText.internalSetSelection(IIZ)V
   org/eclipse/swt/custom/StyledText.updateSelection(III)V
   org/eclipse/swt/custom/StyledText.handleTextChanged
(Lorg/eclipse/swt/custom/TextChangedEvent;)V
   org/eclipse/swt/custom/StyledText$6.textChanged
(Lorg/eclipse/swt/custom/TextChangedEvent;)V
   org/eclipse/jface/text/DocumentAdapter.fireTextChanged()V
   org/eclipse/jface/text/DocumentAdapter.documentChanged
(Lorg/eclipse/jface/text/DocumentEvent;)V
   org/eclipse/jface/text/AbstractDocument.fireDocumentChanged
(Lorg/eclipse/jface/text/DocumentEvent;)V
   org/eclipse/jface/text/AbstractDocument.replace(IILjava/lang/String;)V
   org/eclipse/jface/text/DocumentAdapter.replaceTextRange(IILjava/lang/String;)
V
   org/eclipse/swt/custom/StyledText.modifyContent
(Lorg/eclipse/swt/widgets/Event;Z)V
   org/eclipse/swt/custom/StyledText.sendKeyEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/StyledText.doDelete()V
   org/eclipse/swt/custom/StyledText.invokeAction(I)V
   org/eclipse/swt/custom/StyledText.handleKey(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/StyledText.handleKeyDown
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/StyledText$8.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)
V
   org/eclipse/swt/widgets/Widget.notifyListeners
(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   SlimLauncher.main([Ljava/lang/String;)V
in head.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10971" />
    <CreationDate amount="2002-03-07 11:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Stepping resumes instead</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="13">
        <Lines>
          <Line>1. Unzip workspace10971.zip to d:\eclipse\workspace</Line>
          <Line>2. Unzip test10971.zip to d:\eclipse\test</Line>
          <Line>3. Install IVE 03/05/2002 to d:\ive03052002</Line>
          <Line>4. Start up Eclipse on d:\eclipse\workspace</Line>
          <Line>5. Debug With -&gt; Runtime Workbench</Line>
          <Line>(make sure that d:\eclipse\test and IVE 03/05/2002 are selected)</Line>
          <Line>6. Finish</Line>
          <Line>7. In the target workspace, select B in Outline and Open Type hierarchy</Line>
          <Line>8. A first breakpoint is hit in IndexBasedHierarchyBuilder. Press F8.</Line>
          <Line>9. A second breakpoint is hit in HierarchyResolver</Line>
          <Line>10. Press F6 twice.</Line>
          <Line>Observe: On the second F6, it resumes and hit the breakpoint in</Line>
          <Line>IndexBasedHierarchyBuilder instead of going to the caller.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 20020305
Target JRE: IVE 03/05/2002

While stepping over my code, it often resumes instead of stopping at the next 
line.
To reproduce:
1. Unzip workspace10971.zip to d:\eclipse\workspace
2. Unzip test10971.zip to d:\eclipse\test
3. Install IVE 03/05/2002 to d:\ive03052002
4. Start up Eclipse on d:\eclipse\workspace
5. Debug With -&gt; Runtime Workbench
   (make sure that d:\eclipse\test and IVE 03/05/2002 are selected)
6. Finish
7. In the target workspace, select B in Outline and Open Type hierarchy
8. A first breakpoint is hit in IndexBasedHierarchyBuilder. Press F8.
9. A second breakpoint is hit in HierarchyResolver
10. Press F6 twice.
Observe: On the second F6, it resumes and hit the breakpoint in 
IndexBasedHierarchyBuilder instead of going to the caller.

I can provide the 2 zip files on demand.
Ftping the two zip files as we speak.
Downloaded the latest ive and we have the latest j9.
Problem occurs on J9 (ive 03052002 and J9 02062002) but not on Sun 1.3.1 or Sun 
1.4.1.
*** Bug 11495 has been marked as a duplicate of this bug. ***
To reproduce I have to alter the test case slightly (item 10)
10. Press F6 three time.
Observe: On the third F6, it resumes and hit the breakpoint in 
IndexBasedHierarchyBuilder instead of going to the caller.


This is very annoying thing, and makes debugging very hard.
Possibly bugs 8441 and 8743 have the same cause as this one. I get lots of 
different strange outcomes from hitting F6, preferrably in deep nested 
structures when using Visitor patterns (anonymous classes). Stepping into 
usually works O.K.. My environment: Sun JDK 1.4.0 JRE on NT 4.0. Eclipse 
20020321 binaries running on Sun JDK 1.3.1. The behaviour did not change 
through the last two stable builds but I am pretty sure it was not there 
before. A possible hint: Previously I was running the JDK 1.3.1 JRE only.
For me this bug is absolutely "major".
We are working with the J9 people to get this fixed.  We believe that this is a 
VM problem.  Similar situation with bug 8441 (which we have shown to be a 
JDK1.4 VM problem).
I just noticed that if I don't show the detail pane, I don't get the 'step 
resumes instead' behavior. Could it be a concurency problem between the toString
() invocation and the step?
Since I spend at least 50 hours a month in the debugger, this bug has been 
short of driving me mad. I wonder, why there is no more feedback from other 
Eclipse users? I have been trying to change to all JDKs available for my NT 4.0 
with the -VM parameter, I have tried praying, I have been running around the 
house screaming, nothing helped. The debugger was great until January. How come 
it's broken now with no fix? Sun's JDK 1.4 ? Damn. I would be glad to help, if 
you would tell me how.
This is a major problem for me too -- please post a Sun Bug Parade number, if
you have one, so that we can all vote for it.  I'm using Eclipse M5, JDK 1.4.0,
Win2k.  Do you know if this is fixed with 1.4.1?
Closing as has been indicated to be a J9 vm problem.</WithStack>
    <WithOutStack>Build 20020305
Target JRE: IVE 03/05/2002

While stepping over my code, it often resumes instead of stopping at the next 
line.
To reproduce:
1. Unzip workspace10971.zip to d:\eclipse\workspace
2. Unzip test10971.zip to d:\eclipse\test
3. Install IVE 03/05/2002 to d:\ive03052002
4. Start up Eclipse on d:\eclipse\workspace
5. Debug With -&gt; Runtime Workbench
   (make sure that d:\eclipse\test and IVE 03/05/2002 are selected)
6. Finish
7. In the target workspace, select B in Outline and Open Type hierarchy
8. A first breakpoint is hit in IndexBasedHierarchyBuilder. Press F8.
9. A second breakpoint is hit in HierarchyResolver
10. Press F6 twice.
Observe: On the second F6, it resumes and hit the breakpoint in 
IndexBasedHierarchyBuilder instead of going to the caller.

I can provide the 2 zip files on demand.
Ftping the two zip files as we speak.
Downloaded the latest ive and we have the latest j9.
Problem occurs on J9 (ive 03052002 and J9 02062002) but not on Sun 1.3.1 or Sun 
1.4.1.
*** Bug 11495 has been marked as a duplicate of this bug. ***
To reproduce I have to alter the test case slightly (item 10)
10. Press F6 three time.
Observe: On the third F6, it resumes and hit the breakpoint in 
IndexBasedHierarchyBuilder instead of going to the caller.


This is very annoying thing, and makes debugging very hard.
Possibly bugs 8441 and 8743 have the same cause as this one. I get lots of 
different strange outcomes from hitting F6, preferrably in deep nested 
structures when using Visitor patterns (anonymous classes). Stepping into 
usually works O.K.. My environment: Sun JDK 1.4.0 JRE on NT 4.0. Eclipse 
20020321 binaries running on Sun JDK 1.3.1. The behaviour did not change 
through the last two stable builds but I am pretty sure it was not there 
before. A possible hint: Previously I was running the JDK 1.3.1 JRE only.
For me this bug is absolutely "major".
We are working with the J9 people to get this fixed.  We believe that this is a 
VM problem.  Similar situation with bug 8441 (which we have shown to be a 
JDK1.4 VM problem).
I just noticed that if I don't show the detail pane, I don't get the 'step 
resumes instead' behavior. Could it be a concurency problem between the toString
() invocation and the step?
Since I spend at least 50 hours a month in the debugger, this bug has been 
short of driving me mad. I wonder, why there is no more feedback from other 
Eclipse users? I have been trying to change to all JDKs available for my NT 4.0 
with the -VM parameter, I have tried praying, I have been running around the 
house screaming, nothing helped. The debugger was great until January. How come 
it's broken now with no fix? Sun's JDK 1.4 ? Damn. I would be glad to help, if 
you would tell me how.
This is a major problem for me too -- please post a Sun Bug Parade number, if
you have one, so that we can all vote for it.  I'm using Eclipse M5, JDK 1.4.0,
Win2k.  Do you know if this is fixed with 1.4.1?
Closing as has been indicated to be a J9 vm problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10972" />
    <CreationDate amount="2002-03-07 12:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Solaris" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Core dump drag and droppping from inline text</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) Open Eclipse</Line>
          <Line>2) Select something in the resource navigator</Line>
          <Line>3) Select Rename</Line>
          <Line>4) The inline editor will pop up - drag it's contents out of the editor</Line>
          <Line>5) When you drop Eclipse will Core dump</Line>
          <Line>Can not reproduce in 0529.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you open an inline text and then drag the contents Eclipse will crash with a 
core when you drop.

STEPS
1) Open Eclipse
2) Select something in the resource navigator
3) Select Rename
4) The inline editor will pop up - drag it's contents out of the editor
5) When you drop Eclipse will Core dump
Can not reproduce in 0529.

Appears to have been fixed by improvements to use Converter code and improved 
focus lost notification.</WithStack>
    <WithOutStack>If you open an inline text and then drag the contents Eclipse will crash with a 
core when you drop.

STEPS
1) Open Eclipse
2) Select something in the resource navigator
3) Select Rename
4) The inline editor will pop up - drag it's contents out of the editor
5) When you drop Eclipse will Core dump
Can not reproduce in 0529.

Appears to have been fixed by improvements to use Converter code and improved 
focus lost notification.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10973" />
    <CreationDate amount="2002-03-07 12:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Scoping JavaExceptionBreakpoints not working correctly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="301" end="488" />
        <code>public class NPEThrower {
   public static void main(String[] args) {
       try {
             throw new NullPointerException();
       } catch (NullPointerException e) {
       }
   }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Create an exception breakpoint for NullPointerException (caught and uncaught)
Add two pages: my.*  and org.eclipse.debug.core.*

Debug the my.test.NPEThrower

The exception breakpoint is not hit.

Removing the org.eclipse.debug.core.* entry and the scoping works as expected.

Source
package my.test

public class NPEThrower {
   public static void main(String[] args) {
       try {
             throw new NullPointerException();
       } catch (NullPointerException e) {
       }
   }
}
Our JDI client allows you to add multiple and it fires them across the wire.
The JDWP only allows for a single class pattern to be set.  If multiple are 
sent the request (breakpoint) no longer works.

Filed bug 10982.

Propose that currently we restrict scoping Java exception breakpoints to either 
a single type, a packages or a restricted regular expression.
Over lunch with discussion I have changed my mind...would like to try 
implementing multiple class filters on our side.
Implemented emulation in JavaExceptionBreakpoint.
If there is only one filter, this is added to the request.
If there is more than one filter, the greatest common pattern is determined and 
added to the request.
handleEvent and isExceptionEventExcluded do the rest of the work
Please verify.
I am unable to add two filters. I when I try to add the second, it replaces the 
first.
I am unable to reproduce the problem...the only time a replace occurs is if you 
specify the same filter.
Noticed incoming changes that fix the problem I was having
Verified.</WithStack>
    <WithOutStack>Create an exception breakpoint for NullPointerException (caught and uncaught)
Add two pages: my.*  and org.eclipse.debug.core.*

Debug the my.test.NPEThrower

The exception breakpoint is not hit.

Removing the org.eclipse.debug.core.* entry and the scoping works as expected.

Source
package my.test

public class NPEThrower {
   public static void main(String[] args) {
       try {
             throw new NullPointerException();
       } catch (NullPointerException e) {
       }
   }
}
Our JDI client allows you to add multiple and it fires them across the wire.
The JDWP only allows for a single class pattern to be set.  If multiple are 
sent the request (breakpoint) no longer works.

Filed bug 10982.

Propose that currently we restrict scoping Java exception breakpoints to either 
a single type, a packages or a restricted regular expression.
Over lunch with discussion I have changed my mind...would like to try 
implementing multiple class filters on our side.
Implemented emulation in JavaExceptionBreakpoint.
If there is only one filter, this is added to the request.
If there is more than one filter, the greatest common pattern is determined and 
added to the request.
handleEvent and isExceptionEventExcluded do the rest of the work
Please verify.
I am unable to add two filters. I when I try to add the second, it replaces the 
first.
I am unable to reproduce the problem...the only time a replace occurs is if you 
specify the same filter.
Noticed incoming changes that fix the problem I was having
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10974" />
    <CreationDate amount="2002-03-07 12:08:00 -0500" />
    <DupId amount="10481" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Resize of a view is ignored on UNIX</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Open Eclipse</Line>
          <Line>2) Select the Resource navigator</Line>
          <Line>3) In the Pop down select Size-Right</Line>
          <Line>4) The entry is ignored</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When you select the Size entry in a view menu on an Solaris 8.0 or Linux the 
selection is ignored.

STEPS
1) Open Eclipse
2) Select the Resource navigator
3) In the Pop down select Size-Right
4) The entry is ignored


*** This bug has been marked as a duplicate of 10481 ***</WithStack>
    <WithOutStack>When you select the Size entry in a view menu on an Solaris 8.0 or Linux the 
selection is ignored.

STEPS
1) Open Eclipse
2) Select the Resource navigator
3) In the Pop down select Size-Right
4) The entry is ignored


*** This bug has been marked as a duplicate of 10481 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10975" />
    <CreationDate amount="2002-03-07 12:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Dialogs open on wrong monitor in Dual Monitor environments</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>On a Dual Monitor system, the find/replace dialog open always on the last 
monitor it was closed, not on the monitor, on which the editor, that opens the 
dialog, is shown.

I'd guess, this bug is related to #7232.
Find/change UI is contributed by Platform UI - moving bug
Is there SWT API that we should be calling?
Not sure what SWT should do here.  We currently have no explicit API support 
for multi-monitors.  There is another PR (19824) that captures this.

If Eclipse positions the find/replace dialog at the last location it was closed 
and that location is on another monitor, then SWT will open the find/replace 
dialog on the other monitor.  If Eclipse does not position the find/replace 
dialog, it will open on the same monitor as it's parent window.

So, when new API is added, Eclipse can attempt to use the API to decide where 
to open the dialog.  Even then, I'm not sure how Eclipse can decide whether the 
user wants the dialog at the last position where the user left it or at a new 
position.

Stefan?  Can I close this PR?
Stefan, you out there?
Please close it (sorry, I was out of town).  It seems there's nothing one can do
right now.  
Given that there is another PR that captures the multi-monitor API issue and 
that it's not clear that Eclipse is behaving incorrectly by opening the 
Find/Replace dialog where the user left it, I'm closing this PR.</WithStack>
    <WithOutStack>On a Dual Monitor system, the find/replace dialog open always on the last 
monitor it was closed, not on the monitor, on which the editor, that opens the 
dialog, is shown.

I'd guess, this bug is related to #7232.
Find/change UI is contributed by Platform UI - moving bug
Is there SWT API that we should be calling?
Not sure what SWT should do here.  We currently have no explicit API support 
for multi-monitors.  There is another PR (19824) that captures this.

If Eclipse positions the find/replace dialog at the last location it was closed 
and that location is on another monitor, then SWT will open the find/replace 
dialog on the other monitor.  If Eclipse does not position the find/replace 
dialog, it will open on the same monitor as it's parent window.

So, when new API is added, Eclipse can attempt to use the API to decide where 
to open the dialog.  Even then, I'm not sure how Eclipse can decide whether the 
user wants the dialog at the last position where the user left it or at a new 
position.

Stefan?  Can I close this PR?
Stefan, you out there?
Please close it (sorry, I was out of town).  It seems there's nothing one can do
right now.  
Given that there is another PR that captures the multi-monitor API issue and 
that it's not clear that Eclipse is behaving incorrectly by opening the 
Find/Replace dialog where the user left it, I'm closing this PR.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10976" />
    <CreationDate amount="2002-03-07 12:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="minor" />
    <Summery>Workbench windows don't reopen correctly in Dual Monitor environments</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>On a Dual Monitor system, when saving Eclipse, it doesn't remember on which 
monitor the windows were located.  So, if Eclipse is started again, all 
windows open on the first monitor.

I'd guess, this bug is related to #7232.
moving down to Platform UI
Is there support in SWT to implement this feature?
Moving to SWT for comment.
The windows no longer open on the first monitor.  This has been fixed for some 
time however there are still issues open wrt multiple monitors and SWT API.  
This particular problem is fixed.</WithStack>
    <WithOutStack>On a Dual Monitor system, when saving Eclipse, it doesn't remember on which 
monitor the windows were located.  So, if Eclipse is started again, all 
windows open on the first monitor.

I'd guess, this bug is related to #7232.
moving down to Platform UI
Is there support in SWT to implement this feature?
Moving to SWT for comment.
The windows no longer open on the first monitor.  This has been fixed for some 
time however there are still issues open wrt multiple monitors and SWT API.  
This particular problem is fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10977" />
    <CreationDate amount="2002-03-07 12:52:00 -0500" />
    <DupId amount="93652" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Safearray support for ActiveX-Integration</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="10">
      <source_code type="singlecomment">
        <location start="943" end="1010" />
        <code>// obtained through some IDispatch call</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1010" end="1061" />
        <code>// or as a property get.</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1061" end="1138" />
        <code>// In this example the safearray contains data of</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1138" end="1216" />
        <code>// type VT_UI1 (or unsigned shorts) with a size of</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1216" end="1258" />
        <code>// 2 bits each.</code>
      </source_code>
      <source_code type="assignment">
        <location start="1258" end="1302" />
        <code>int pPostData = variantByRef.getByRef();</code>
      </source_code>
      <source_code type="assignment">
        <location start="1303" end="1338" />
        <code>short[] vt_type = new short[1];</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1339" end="1380" />
        <code>OS.MoveMemory(vt_type, pPostData, 2);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1381" end="1430" />
        <code>System.out.println("vt type is "+vt_type[0]);</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="1431" end="2861" />
        <code>if (vt_type[0] == (short)(OLE.VT_BYREF | OLE.VT_VARIANT)) {
        int[] pVariant = new int[1];
        OS.MoveMemory(pVariant, pPostData + 8, 4);
        vt_type = new short[1];
        OS.MoveMemory(vt_type, pVariant[0], 2);
        System.out.println("second vt type is "+vt_type[0]);
        if (vt_type[0] == (short)(OLE.VT_ARRAY | OLE.VT_UI1)) {
            int[] pSafearray = new int[1];
            OS.MoveMemory(pSafearray, pVariant[0] + 8, 4);
            short[] cDims = new short[1];
            OS.MoveMemory(cDims, pSafearray[0], 2);
            System.out.println("dimension of array is "+cDims[0]);
            int[] pvData = new int[1];
            OS.MoveMemory(pvData, pSafearray[0] + 12, 4);
            int offset = 0;
            int safearrayboundOffset = 0;
            for (int i = 0; i &lt; cDims[0]; i++) {
                int[] cElements = new int[1];
                OS.MoveMemory(cElements, pSafearray[0] + 16 +
safearrayboundOffset, 4);
                safearrayboundOffset += 8;
                System.out.println("element count for dimension "+i+" is
"+cElements[0]);
                for (int j = 0; j &lt; cElements[0]; j++) {
                    char[] ui1_data = new char[1];
                    OS.MoveMemory(ui1_data, pvData[0]+offset, 1);
                    System.out.println("data at "+j+" is "+ui1_data[0]);
                    offset += 1;
                }
            }
        }
    }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I have got the problem that I integrated the Internet Explorer like in the
example. Now I have registered for the event BeforeNavigate2 in the
interface DWebBrowserEvents2. When I submit a form in the IE control I run
into the event handler but now I want to look what information is in
PostData.
When I take a look at the type of the Variant it is of VT_BYREF |
VT_VARIANT.

Veronika Irvine answered:
Variant only supports a small bit of functionality required to make the
basic ActiveX stuff work.

So the short answer is that there is no "nice" way to do this - one day I
will get around to it but there is a large number of types defined in
VARIANT and I really prefer to have a test case for each type, and ...

Please can someone implement these functionality?
Will look at after R2.0.
Here is a workaround for accessing a variant that contains an array:

    Varinat variantByRef; // variantByRef is a VT_BYREF reference to a safearray
                          // obtained through some IDispatch call 
                          // or as a property get.
                          // In this example the safearray contains data of 
                          // type VT_UI1 (or unsigned shorts) with a size of 
                          // 2 bits each.
    int pPostData = variantByRef.getByRef();
    short[] vt_type = new short[1];
    OS.MoveMemory(vt_type, pPostData, 2);
    System.out.println("vt type is "+vt_type[0]);
    if (vt_type[0] == (short)(OLE.VT_BYREF | OLE.VT_VARIANT)) {
        int[] pVariant = new int[1];
        OS.MoveMemory(pVariant, pPostData + 8, 4);
        vt_type = new short[1];
        OS.MoveMemory(vt_type, pVariant[0], 2);
        System.out.println("second vt type is "+vt_type[0]);
        if (vt_type[0] == (short)(OLE.VT_ARRAY | OLE.VT_UI1)) {
            int[] pSafearray = new int[1];
            OS.MoveMemory(pSafearray, pVariant[0] + 8, 4);
            short[] cDims = new short[1];
            OS.MoveMemory(cDims, pSafearray[0], 2);
            System.out.println("dimension of array is "+cDims[0]);
            int[] pvData = new int[1];
            OS.MoveMemory(pvData, pSafearray[0] + 12, 4);
            int offset = 0;
            int safearrayboundOffset = 0;
            for (int i = 0; i &lt; cDims[0]; i++) {
                int[] cElements = new int[1];
                OS.MoveMemory(cElements, pSafearray[0] + 16 +
safearrayboundOffset, 4);
                safearrayboundOffset += 8;
                System.out.println("element count for dimension "+i+" is
"+cElements[0]);
                for (int j = 0; j &lt; cElements[0]; j++) {
                    char[] ui1_data = new char[1];
                    OS.MoveMemory(ui1_data, pvData[0]+offset, 1);
                    System.out.println("data at "+j+" is "+ui1_data[0]);
                    offset += 1;
                }
            }
        }
    }





Please also support safearrays as input arguments. For example, if you need to
set the context menu of Microsoft's DHTML edit control, you need to supply two
arrays. This seems to be impossible (for me) with the current implementation.
The problem described is a bug which will not be fixed in the current version 
of eclipse.

If you would like to contribute a fix for this problem, please attach a patch 
file and reopen this bug report.

Created attachment 15024
Class Bug10977 - example showing how to read from and write to a SAFEARRAY

The attached file contains an example which reads from a PostData object in a
BeforeNavigate2 event and creates a PostData object in a call to Navigate.

PostData is an example of a SAFEARRAY which contains a one dimensional array of
VT_UI1 (bytes).
The following URL is useful for testing PostData interaction.  It contains a 
text field which gets updated from the contents of the PostData field:

http://snowwhite.it.brighton.ac.uk/~mas/mas/courses/html/html3.html

(scroll down towards the bottom of the page to the section on "Post")
Has there been any effort to fix this bug?  will the post data appear on the 
data field on the event object when fixed?  is there any way of getting the 
original event whilst using the browser control to get at the variant 
containing the post data?
Can someone tell me the status of this bug.
Status: RESOLVED. Is that mean , it has been fixed?
Moreover the workaround given here doesn't work for me as when i am using the 
 OS.XXX
i am getting a warning message restricted access on package org.eclipse.swt.internal.win32.
Do i need to add this function in the org.eclipse.swt.internal.win32 package itself?



*** This bug has been marked as a duplicate of bug 93652 ***</WithStack>
    <WithOutStack>I have got the problem that I integrated the Internet Explorer like in the
example. Now I have registered for the event BeforeNavigate2 in the
interface DWebBrowserEvents2. When I submit a form in the IE control I run
into the event handler but now I want to look what information is in
PostData.
When I take a look at the type of the Variant it is of VT_BYREF |
VT_VARIANT.

Veronika Irvine answered:
Variant only supports a small bit of functionality required to make the
basic ActiveX stuff work.

So the short answer is that there is no "nice" way to do this - one day I
will get around to it but there is a large number of types defined in
VARIANT and I really prefer to have a test case for each type, and ...

Please can someone implement these functionality?
Will look at after R2.0.
Here is a workaround for accessing a variant that contains an array:

    Varinat variantByRef; // variantByRef is a VT_BYREF reference to a safearray
                          // obtained through some IDispatch call 
                          // or as a property get.
                          // In this example the safearray contains data of 
                          // type VT_UI1 (or unsigned shorts) with a size of 
                          // 2 bits each.
    int pPostData = variantByRef.getByRef();
    short[] vt_type = new short[1];
    OS.MoveMemory(vt_type, pPostData, 2);
    System.out.println("vt type is "+vt_type[0]);
    if (vt_type[0] == (short)(OLE.VT_BYREF | OLE.VT_VARIANT)) {
        int[] pVariant = new int[1];
        OS.MoveMemory(pVariant, pPostData + 8, 4);
        vt_type = new short[1];
        OS.MoveMemory(vt_type, pVariant[0], 2);
        System.out.println("second vt type is "+vt_type[0]);
        if (vt_type[0] == (short)(OLE.VT_ARRAY | OLE.VT_UI1)) {
            int[] pSafearray = new int[1];
            OS.MoveMemory(pSafearray, pVariant[0] + 8, 4);
            short[] cDims = new short[1];
            OS.MoveMemory(cDims, pSafearray[0], 2);
            System.out.println("dimension of array is "+cDims[0]);
            int[] pvData = new int[1];
            OS.MoveMemory(pvData, pSafearray[0] + 12, 4);
            int offset = 0;
            int safearrayboundOffset = 0;
            for (int i = 0; i &lt; cDims[0]; i++) {
                int[] cElements = new int[1];
                OS.MoveMemory(cElements, pSafearray[0] + 16 +
safearrayboundOffset, 4);
                safearrayboundOffset += 8;
                System.out.println("element count for dimension "+i+" is
"+cElements[0]);
                for (int j = 0; j &lt; cElements[0]; j++) {
                    char[] ui1_data = new char[1];
                    OS.MoveMemory(ui1_data, pvData[0]+offset, 1);
                    System.out.println("data at "+j+" is "+ui1_data[0]);
                    offset += 1;
                }
            }
        }
    }





Please also support safearrays as input arguments. For example, if you need to
set the context menu of Microsoft's DHTML edit control, you need to supply two
arrays. This seems to be impossible (for me) with the current implementation.
The problem described is a bug which will not be fixed in the current version 
of eclipse.

If you would like to contribute a fix for this problem, please attach a patch 
file and reopen this bug report.

Created attachment 15024
Class Bug10977 - example showing how to read from and write to a SAFEARRAY

The attached file contains an example which reads from a PostData object in a
BeforeNavigate2 event and creates a PostData object in a call to Navigate.

PostData is an example of a SAFEARRAY which contains a one dimensional array of
VT_UI1 (bytes).
The following URL is useful for testing PostData interaction.  It contains a 
text field which gets updated from the contents of the PostData field:

http://snowwhite.it.brighton.ac.uk/~mas/mas/courses/html/html3.html

(scroll down towards the bottom of the page to the section on "Post")
Has there been any effort to fix this bug?  will the post data appear on the 
data field on the event object when fixed?  is there any way of getting the 
original event whilst using the browser control to get at the variant 
containing the post data?
Can someone tell me the status of this bug.
Status: RESOLVED. Is that mean , it has been fixed?
Moreover the workaround given here doesn't work for me as when i am using the 
 OS.XXX
i am getting a warning message restricted access on package org.eclipse.swt.internal.win32.
Do i need to add this function in the org.eclipse.swt.internal.win32 package itself?



*** This bug has been marked as a duplicate of bug 93652 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10978" />
    <CreationDate amount="2002-03-07 12:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Open Junit in special perspective</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It would be very nice if it was possible to set a preference for JUnit to open 
in a specified perspective. I now try to do this manually, by having a 
perspective that I've named JUnit, having turned off the functionality to 
switch to debug perspective on run/debug, and trying to remember to switch to 
the JUnit perspective before launching JUnit. 

The last part is troublesome, however, as I tend to forget about switching 
perspectives. Or, if I have a class selected in the Navigator in my Java 
perspective, that I want to run with JUnit. In that case, I have to find that 
class in the JUnit perspective first, before running it, which takes some 
manual work regardless of how I do it.
with the new launch configuration mechanism (JUnit support shows up in the next 
integration build) you can specify the target perspective (see the Common Tab 
item)</WithStack>
    <WithOutStack>It would be very nice if it was possible to set a preference for JUnit to open 
in a specified perspective. I now try to do this manually, by having a 
perspective that I've named JUnit, having turned off the functionality to 
switch to debug perspective on run/debug, and trying to remember to switch to 
the JUnit perspective before launching JUnit. 

The last part is troublesome, however, as I tend to forget about switching 
perspectives. Or, if I have a class selected in the Navigator in my Java 
perspective, that I want to run with JUnit. In that case, I have to find that 
class in the JUnit perspective first, before running it, which takes some 
manual work regardless of how I do it.
with the new launch configuration mechanism (JUnit support shows up in the next 
integration build) you can specify the target perspective (see the Common Tab 
item)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10979" />
    <CreationDate amount="2002-03-07 12:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>JDOM/add superinterface format problem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="10">
      <source_code type="assignment">
        <location start="11" end="45" />
        <code>DOMFactory df = new DOMFactory();</code>
      </source_code>
      <source_code type="assignment">
        <location start="46" end="104" />
        <code>IDOMType t = df.createType("class A implements I1 {\n}");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="105" end="133" />
        <code>df.addSuperInterface("I2");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="134" end="171" />
        <code>System.out.println(t.getContents());</code>
      </source_code>
      <source_code type="class">
        <location start="201" end="231" />
        <code>class A implements I1, I2{
 }</code>
      </source_code>
      <source_code type="assignment">
        <location start="422" end="456" />
        <code>DOMFactory df = new DOMFactory();</code>
      </source_code>
      <source_code type="assignment">
        <location start="457" end="514" />
        <code>IDOMType t = df.createType("class A implements I1{\n}");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="515" end="543" />
        <code>df.addSuperInterface("I2");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="544" end="581" />
        <code>System.out.println(t.getContents());</code>
      </source_code>
      <source_code type="class">
        <location start="602" end="630" />
        <code>class A implements I1, I2{
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This code

 DOMFactory df = new DOMFactory();
 IDOMType t = df.createType("class A implements I1 {\n}");
 df.addSuperInterface("I2");
 System.out.println(t.getContents());

lacks a space as it prints

 class A implements I1, I2{
 }

instead of "I1, I2 {".
This is due to a bug in the DOMBuilder for settings the source end for interfaces names.
Fixed and 
released in HEAD. Regression tests added.
Note that if you write:
 DOMFactory df = new DOMFactory();
 IDOMType t = df.createType("class A implements I1{\n}");
 df.addSuperInterface("I2");
 System.out.println(t.getContents());

Then you will get:
class A implements I1, I2{
}

The right behavior is to preserve the original space between interface names and 
the beginning of the class body.</WithStack>
    <WithOutStack>This code

 DOMFactory df = new DOMFactory();
 IDOMType t = df.createType("class A implements I1 {\n}");
 df.addSuperInterface("I2");
 System.out.println(t.getContents());

lacks a space as it prints

 class A implements I1, I2{
 }

instead of "I1, I2 {".
This is due to a bug in the DOMBuilder for settings the source end for interfaces names.
Fixed and 
released in HEAD. Regression tests added.
Note that if you write:
 DOMFactory df = new DOMFactory();
 IDOMType t = df.createType("class A implements I1{\n}");
 df.addSuperInterface("I2");
 System.out.println(t.getContents());

Then you will get:
class A implements I1, I2{
}

The right behavior is to preserve the original space between interface names and 
the beginning of the class body.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10980" />
    <CreationDate amount="2002-03-07 13:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>JDT / factory for new interfaces would be nice</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="260" end="354" />
        <code>public IType createInterface() {
   return createType("public interface AnInterface ...");
 }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>There're two ways to create a new type with a DOMFactory: createType() and 
createType(String).  The first always creates a new class, the latter can 
create either interfaces or classes from an existing source.

It would be nice, if you'd add an additional 

 public IType createInterface() {
   return createType("public interface AnInterface ...");
 }

factory method.  Renaming createType() to createClass() could also be an 
improvement.
Fixed and released in HEAD.</WithStack>
    <WithOutStack>There're two ways to create a new type with a DOMFactory: createType() and 
createType(String).  The first always creates a new class, the latter can 
create either interfaces or classes from an existing source.

It would be nice, if you'd add an additional 

 public IType createInterface() {
   return createType("public interface AnInterface ...");
 }

factory method.  Renaming createType() to createClass() could also be an 
improvement.
Fixed and released in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10981" />
    <CreationDate amount="2002-03-07 13:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Problem with new nature tests</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330576473">
        <Exception>junit.framework.AssertionFailedError</Exception>
        <Reason>1.0 expected:&lt;9&gt; but was:&lt;12&gt;</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.tests.resources.IWorkspaceTest.testGetNatureDescriptors(IWorkspaceTest.java:325)</Frame>
          <Frame depth="1">org.eclipse.core.tests.harness.EclipseTestHarnessApplication.run(EclipseTestHarnessApplication.java:142)</Frame>
          <Frame depth="2">org.eclipse.core.tests.harness.EclipseTestHarnessApplication.run(EclipseTestHarnessApplication.java:138)</Frame>
          <Frame depth="3">org.eclipse.core.tests.harness.EclipseTestHarnessApplication.run(EclipseTestHarnessApplication.java:120)</Frame>
          <Frame depth="4">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)</Frame>
          <Frame depth="5">org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.basicRun(Main.java:151)</Frame>
          <Frame depth="7">org.eclipse.core.launcher.Main.run(Main.java:502)</Frame>
          <Frame depth="8">org.eclipse.core.tests.harness.launcher.Main.main(Main.java:91)</Frame>
          <Frame depth="9">com.dj.RunTests.main(RunTests.java:47)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I ran the tests in a full Eclipse Platform + JDT + PDE workspace.

One of the tests failed, presumably because it was expecting only the
natures declared in a minimal Core workspace.

There was 1 failure:
1) testGetNatureDescriptors(org.eclipse.core.tests.resources.IWorkspaceTest)
junit.framework.AssertionFailedError: 1.0 expected:&lt;9&gt; but was:&lt;12&gt;
	at 
org.eclipse.core.tests.resources.IWorkspaceTest.testGetNatureDescriptors
(IWorkspaceTest.java:325)
	at org.eclipse.core.tests.harness.EclipseTestHarnessApplication.run
(EclipseTestHarnessApplication.java:142)
	at org.eclipse.core.tests.harness.EclipseTestHarnessApplication.run
(EclipseTestHarnessApplication.java:138)
	at org.eclipse.core.tests.harness.EclipseTestHarnessApplication.run
(EclipseTestHarnessApplication.java:120)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:777)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:502)
	at org.eclipse.core.tests.harness.launcher.Main.main(Main.java:91)
	at com.dj.RunTests.main(RunTests.java:47)
Fixed</WithStack>
    <WithOutStack>I ran the tests in a full Eclipse Platform + JDT + PDE workspace.

One of the tests failed, presumably because it was expecting only the
natures declared in a minimal Core workspace.

There was 1 failure:
1) testGetNatureDescriptors(org.eclipse.core.tests.resources.IWorkspaceTest)

Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10982" />
    <CreationDate amount="2002-03-07 13:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JDI client event request and add* API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>The JDI client implementation of event requests does not match the JDWP 
specification for how/what modifiers can be set on requests.

For example, EventRequestImpl allows the addition of numerous class filters and 
class exclusion filters.  Only 1 class filter or class exclusion filter can be 
set (and I am not sure if both can be set at the same time?).

A review needs to be done to find these mismatches and fix the implementation.
I interpret the spec to allow for multiple filters. Testing with step filters, 
it appears to work.
My error in interpreting test cases.  From the JDWP spec "Only events that 
satisfy all modifiers are reported", so specifying two inclusion filters (or 
two thread filters) does not work as I expected...ie cumulative.</WithStack>
    <WithOutStack>The JDI client implementation of event requests does not match the JDWP 
specification for how/what modifiers can be set on requests.

For example, EventRequestImpl allows the addition of numerous class filters and 
class exclusion filters.  Only 1 class filter or class exclusion filter can be 
set (and I am not sure if both can be set at the same time?).

A review needs to be done to find these mismatches and fix the implementation.
I interpret the spec to allow for multiple filters. Testing with step filters, 
it appears to work.
My error in interpreting test cases.  From the JDWP spec "Only events that 
satisfy all modifiers are reported", so specifying two inclusion filters (or 
two thread filters) does not work as I expected...ie cumulative.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10983" />
    <CreationDate amount="2002-03-07 13:53:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>NullPointerException in JavaBuilder during Save</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330576473">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.finishedWith(IncrementalImageBuilder.java:383)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(AbstractImageBuilder.java(Compiled Code))</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java(Compiled Code))</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:209)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java(Compiled Code))</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java(Compiled Code))</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:152)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:104)</Frame>
          <Frame depth="8">org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:351)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java(Compiled Code))</Frame>
          <Frame depth="10">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java(Compiled Code))</Frame>
          <Frame depth="11">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java(Compiled Code))</Frame>
          <Frame depth="12">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java(Compiled Code))</Frame>
          <Frame depth="13">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java(Compiled Code))</Frame>
          <Frame depth="14">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java(Compiled Code))</Frame>
          <Frame depth="15">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java(Compiled Code))</Frame>
          <Frame depth="16">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java(Compiled Code))</Frame>
          <Frame depth="17">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java(Compiled Code))</Frame>
          <Frame depth="18">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java(Compiled Code))</Frame>
          <Frame depth="19">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java(Compiled Code))</Frame>
          <Frame depth="20">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1237)</Frame>
          <Frame depth="21">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:78)</Frame>
          <Frame depth="22">org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation(AbstractTextEditor.java:1546)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperation(CompilationUnitEditor.java:627)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:675)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:745)</Frame>
          <Frame depth="26">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:296)</Frame>
          <Frame depth="27">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)</Frame>
          <Frame depth="28">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:335)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:628)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.EditorManager.saveEditor(EditorManager.java:750)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:1431)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.SaveAction.run(SaveAction.java:32)</Frame>
          <Frame depth="33">org.eclipse.jface.action.Action.runWithEvent(Action.java:452)</Frame>
          <Frame depth="34">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="35">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))</Frame>
          <Frame depth="36">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))</Frame>
          <Frame depth="37">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="42">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="43">org.eclipse.ui.internal.Workbench.run(Workbench.java:683)</Frame>
          <Frame depth="44">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)</Frame>
          <Frame depth="45">org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)</Frame>
          <Frame depth="46">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="47">org.eclipse.core.launcher.Main.basicRun(Main.java:151)</Frame>
          <Frame depth="48">org.eclipse.core.launcher.Main.run(Main.java:502)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.main(Main.java:362)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="assignment">
        <location start="231" end="308" />
        <code>char[][] previousTypeNames = newState.getDefinedTypeNamesFor(sourceLocation);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Win32 0305 Stable build

I modified one line of code to fix an error and hit save.

2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-
in: org.eclipse.core.resources.
java.lang.NullPointerException
        at 
org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.finishedWith
(IncrementalImageBuilder.java:383)
        at 
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult
(AbstractImageBuilder.java(Compiled Code))
        at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java
(Compiled Code))
        at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile
(AbstractImageBuilder.java:209)
        at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile
(AbstractImageBuilder.java(Compiled Code))
        at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build
(IncrementalImageBuilder.java(Compiled Code))
        at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas
(JavaBuilder.java:152)
        at org.eclipse.jdt.internal.core.builder.JavaBuilder.build
(JavaBuilder.java:104)
        at org.eclipse.core.internal.events.BuildManager$2.run
(BuildManager.java:351)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
        at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java(Compiled Code))
        at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java(Compiled Code))
        at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java(Compiled Code))
        at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java(Compiled Code))
        at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java(Compiled Code))
        at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java(Compiled Code))
        at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java(Compiled Code))
        at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java(Compiled Code))
        at org.eclipse.core.internal.events.BuildManager.build
(BuildManager.java(Compiled Code))
        at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java(Compiled Code))
        at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1237)
        at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:78)
        at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation
(AbstractTextEditor.java:1546)
        at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperati
on(CompilationUnitEditor.java:627)
        at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave
(CompilationUnitEditor.java:675)
        at org.eclipse.ui.internal.EditorManager$9.run(EditorManager.java:745)
        at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
        at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
        at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation
(EditorManager.java:628)
        at org.eclipse.ui.internal.EditorManager.saveEditor
(EditorManager.java:750)
        at org.eclipse.ui.internal.WorkbenchPage.saveEditor
(WorkbenchPage.java:1431)
        at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:32)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:452)
        at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
        at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java(Compiled Code))
        at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java(Compiled Code))
        at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java(Compiled Code))
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
        at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled 
Code))
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:683)
        at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:777)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)
        at java.lang.reflect.Method.invoke(Native Method)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
        at org.eclipse.core.launcher.Main.run(Main.java:502)
        at org.eclipse.core.launcher.Main.main(Main.java:362)
The line number 383 is this line:

char[][] previousTypeNames = newState.getDefinedTypeNamesFor(sourceLocation);

The 'newState' is initialized in the AbstractImageBuilder constructor and is 
never reset to null. Without a reproducable case, I do not see how this is 
possible.

Do you remember which VM &amp; version you were running?

We have found some repeatable NPE that are caused by jit bugs in the VM.
I have just picked up the latest JDK 1.3.1 image and so far so good.  It has 
fixed some other problems I was experiencing.  You can close this bug report 
and I will reopen it if I see the problem again on this "fixed" JIT.
Unable to reproduce.</WithStack>
    <WithOutStack>Win32 0305 Stable build

I modified one line of code to fix an error and hit save.

2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-
in: org.eclipse.core.resources.

The line number 383 is this line:

char[][] previousTypeNames = newState.getDefinedTypeNamesFor(sourceLocation);

The 'newState' is initialized in the AbstractImageBuilder constructor and is 
never reset to null. Without a reproducable case, I do not see how this is 
possible.

Do you remember which VM &amp; version you were running?

We have found some repeatable NPE that are caused by jit bugs in the VM.
I have just picked up the latest JDK 1.3.1 image and so far so good.  It has 
fixed some other problems I was experiencing.  You can close this bug report 
and I will reopen it if I see the problem again on this "fixed" JIT.
Unable to reproduce.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10984" />
    <CreationDate amount="2002-03-07 13:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>DOM/AST: CU with syntax errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="package">
        <location start="28" end="46" />
        <code>package errors_in;</code>
      </source_code>
      <source_code type="class">
        <location start="48" end="141" />
        <code>public class A_test800 {
	public void fails() {
		foo()
	}
	public void foo() {
		foo();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020305

For the CU

package errors_in;

public class A_test800 {
	public void fails() {
		foo()
	}
	public void foo() {
		foo();
	}
}

the block for the method foo has the positions [-1, 0]. Although the CU has 
compiler errors in method fails I don't understand why the positions of the 
method foo's block are incorrect. The method foo itself has positions but I 
didn't check if they are valid
I could not reproduce that specific problem, but I found another bug for the 
length of the method declaration.For the 'foo' method, you won't be able to 
retrieve the statements. No statements are built if there is a syntax error in 
the source. We agreed that the AST tree might be incomplete in case of syntax 
error in the source.
Fixed and released in HEAD.
I hope this is a typo &lt;g&gt;. You wrote:

For the 'foo' method, you won't be able to retrieve the statements. No 
statements are built if there is a syntax error in  the source. 

The method foo doesn't have any errors. Only the method fails does. What is the 
rational behind not having nodes for method foo.

And can you please outline in which situations the AST tree is corrent even if 
the CU has errors.
No this problem is closed.
When a syntax error occurs in the code, the parser retrieves only headers 
(method, fields, initializers, member classes). So in your example, the two 
methods 'foo' and 'fails' won't have any statement, because of the syntax error 
in 'fails'. It is like that. Syntax errors are the worst errors for the parser.
I closed this PR as the initial problem is fixed.
The second method should have its statements.
In order to be able to retrieve statements for the second method, I have to do a dietParse followed 
by a getMethodBodies instead of a full parse.
Now the second method contains its statements even if the first method contains a syntax error. 
This change requires latest changes in the parser, compiler, error reporting.
Fixed and 
released in HEAD.</WithStack>
    <WithOutStack>Build 20020305

For the CU

package errors_in;

public class A_test800 {
	public void fails() {
		foo()
	}
	public void foo() {
		foo();
	}
}

the block for the method foo has the positions [-1, 0]. Although the CU has 
compiler errors in method fails I don't understand why the positions of the 
method foo's block are incorrect. The method foo itself has positions but I 
didn't check if they are valid
I could not reproduce that specific problem, but I found another bug for the 
length of the method declaration.For the 'foo' method, you won't be able to 
retrieve the statements. No statements are built if there is a syntax error in 
the source. We agreed that the AST tree might be incomplete in case of syntax 
error in the source.
Fixed and released in HEAD.
I hope this is a typo &lt;g&gt;. You wrote:

For the 'foo' method, you won't be able to retrieve the statements. No 
statements are built if there is a syntax error in  the source. 

The method foo doesn't have any errors. Only the method fails does. What is the 
rational behind not having nodes for method foo.

And can you please outline in which situations the AST tree is corrent even if 
the CU has errors.
No this problem is closed.
When a syntax error occurs in the code, the parser retrieves only headers 
(method, fields, initializers, member classes). So in your example, the two 
methods 'foo' and 'fails' won't have any statement, because of the syntax error 
in 'fails'. It is like that. Syntax errors are the worst errors for the parser.
I closed this PR as the initial problem is fixed.
The second method should have its statements.
In order to be able to retrieve statements for the second method, I have to do a dietParse followed 
by a getMethodBodies instead of a full parse.
Now the second method contains its statements even if the first method contains a syntax error. 
This change requires latest changes in the parser, compiler, error reporting.
Fixed and 
released in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10985" />
    <CreationDate amount="2002-03-07 14:02:00 -0500" />
    <DupId amount="10819" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Incorrect NLS binding for task error message</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="109" end="127" />
        <code>class file for {0}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I got a task with the message:
"The project was not built since its classpath is incorrect. Can not find the
class file for {0}..."
It looks like {0} is not getting bound to the actual name.
Kent - Is this still another duplicate ?


*** This bug has been marked as a duplicate of 10819 ***</WithStack>
    <WithOutStack>I got a task with the message:
"The project was not built since its classpath is incorrect. Can not find the
class file for {0}..."
It looks like {0} is not getting bound to the actual name.
Kent - Is this still another duplicate ?


*** This bug has been marked as a duplicate of 10819 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10986" />
    <CreationDate amount="2002-03-07 14:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>DOM/AST: NPE when trying to resolve a binding</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="package">
        <location start="28" end="46" />
        <code>package errors_in;</code>
      </source_code>
      <source_code type="class">
        <location start="48" end="142" />
        <code>public class A_test802 {
	public List g() {
		return null;
	}
	public void foo() {
		g();
	}
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="556" end="634" />
        <code>(Lorg/eclipse/jdt/core/dom/Expression;)Lorg/eclipse/jdt/core/dom/ITypeBinding;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="820" end="857" />
        <code>Type()Lorg/eclipse/jdt/core/dom/Type;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="943" end="987" />
        <code>nature(Ljava/lang/String;)Ljava/lang/String;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1398" end="1468" />
        <code>(Lorg/eclipse/swt/widgets/Composite;)Lorg/eclipse/swt/widgets/Control;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2880" end="2958" />
        <code>org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020305

Test Case:

package errors_in;

public class A_test802 {
	public List g() {
		return null;
	}
	public void foo() {
		g();
	}
}

You get a NPE when trying to resolve the type binding for the expression 
representing the method call g(). 

Note that the CU has compile errors


java.lang.NullPointerException

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/NullPointerException.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/jdt/core/dom/DefaultBindingResolver.resolveExpressionType
(Lorg/eclipse/jdt/core/dom/Expression;)Lorg/eclipse/jdt/core/dom/ITypeBinding;
   org/eclipse/jdt/core/dom/Expression.resolveTypeBinding()
Lorg/eclipse/jdt/core/dom/ITypeBinding;
   
org/eclipse/jdt/internal/corext/refactoring/code/ExtractMethodAnalyzer.getReturn
Type()Lorg/eclipse/jdt/core/dom/Type;
   
org/eclipse/jdt/internal/corext/refactoring/code/ExtractMethodRefactoring.getSig
nature(Ljava/lang/String;)Ljava/lang/String;
   
org/eclipse/jdt/internal/ui/refactoring/code/ExtractMethodInputPage.updatePrevie
w(Ljava/lang/String;)V
   
org/eclipse/jdt/internal/ui/refactoring/code/ExtractMethodInputPage.textModified
(Ljava/lang/String;)V
   org/eclipse/jdt/internal/ui/refactoring/TextInputWizardPage.setVisible(Z)V
   org/eclipse/jface/wizard/WizardDialog.showStartingPage()V
   org/eclipse/jface/wizard/WizardDialog.createContents
(Lorg/eclipse/swt/widgets/Composite;)Lorg/eclipse/swt/widgets/Control;
   org/eclipse/jface/window/Window.create()V
   org/eclipse/jface/window/Window.open()I
   org/eclipse/jdt/internal/ui/refactoring/actions/RefactoringStarter.activate
(Lorg/eclipse/jdt/internal/corext/refactoring/base/Refactoring;Lorg/eclipse/jdt/
internal/ui/refactoring/RefactoringWizard;Ljava/lang/String;Z)V
   
org/eclipse/jdt/internal/ui/refactoring/actions/TextSelectionBasedRefactoringAct
ion.run()V
   org/eclipse/jdt/internal/ui/refactoring/actions/TextSelectionAction.run
(Lorg/eclipse/jface/action/IAction;)V
   org/eclipse/ui/internal/PluginAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.access$0
(Lorg/eclipse/jface/action/ActionContributionItem;Lorg/eclipse/swt/widgets/Event
;)V
   org/eclipse/jface/action/ActionContributionItem$ActionListener.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)
V
   org/eclipse/swt/widgets/Widget.notifyListeners
(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   SlimLauncher.main([Ljava/lang/String;)V
g() was linked to a problem method binding. Then when I tried to get the IMethodBinding 
corresponding to g() I got null (which is the expected result). Then asking for the return type 
causes the NPE.
Fixed and released in HEAD.</WithStack>
    <WithOutStack>Build 20020305

Test Case:

package errors_in;

public class A_test802 {
	public List g() {
		return null;
	}
	public void foo() {
		g();
	}
}

You get a NPE when trying to resolve the type binding for the expression 
representing the method call g(). 

Note that the CU has compile errors


java.lang.NullPointerException

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/NullPointerException.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/jdt/core/dom/DefaultBindingResolver.resolveExpressionType
(Lorg/eclipse/jdt/core/dom/Expression;)Lorg/eclipse/jdt/core/dom/ITypeBinding;
   org/eclipse/jdt/core/dom/Expression.resolveTypeBinding()
Lorg/eclipse/jdt/core/dom/ITypeBinding;
   
org/eclipse/jdt/internal/corext/refactoring/code/ExtractMethodAnalyzer.getReturn
Type()Lorg/eclipse/jdt/core/dom/Type;
   
org/eclipse/jdt/internal/corext/refactoring/code/ExtractMethodRefactoring.getSig
nature(Ljava/lang/String;)Ljava/lang/String;
   
org/eclipse/jdt/internal/ui/refactoring/code/ExtractMethodInputPage.updatePrevie
w(Ljava/lang/String;)V
   
org/eclipse/jdt/internal/ui/refactoring/code/ExtractMethodInputPage.textModified
(Ljava/lang/String;)V
   org/eclipse/jdt/internal/ui/refactoring/TextInputWizardPage.setVisible(Z)V
   org/eclipse/jface/wizard/WizardDialog.showStartingPage()V
   org/eclipse/jface/wizard/WizardDialog.createContents
(Lorg/eclipse/swt/widgets/Composite;)Lorg/eclipse/swt/widgets/Control;
   org/eclipse/jface/window/Window.create()V
   org/eclipse/jface/window/Window.open()I
   org/eclipse/jdt/internal/ui/refactoring/actions/RefactoringStarter.activate
(Lorg/eclipse/jdt/internal/corext/refactoring/base/Refactoring;Lorg/eclipse/jdt/
internal/ui/refactoring/RefactoringWizard;Ljava/lang/String;Z)V
   
org/eclipse/jdt/internal/ui/refactoring/actions/TextSelectionBasedRefactoringAct
ion.run()V
   org/eclipse/jdt/internal/ui/refactoring/actions/TextSelectionAction.run
(Lorg/eclipse/jface/action/IAction;)V
   org/eclipse/ui/internal/PluginAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.access$0
(Lorg/eclipse/jface/action/ActionContributionItem;Lorg/eclipse/swt/widgets/Event
;)V
   org/eclipse/jface/action/ActionContributionItem$ActionListener.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)
V
   org/eclipse/swt/widgets/Widget.notifyListeners
(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   SlimLauncher.main([Ljava/lang/String;)V
g() was linked to a problem method binding. Then when I tried to get the IMethodBinding 
corresponding to g() I got null (which is the expected result). Then asking for the return type 
causes the NPE.
Fixed and released in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10987" />
    <CreationDate amount="2002-03-07 14:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Compiler should skip CU if package declaration is wrong</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- copied 6 moderate-sized CUs to another package (not a refactoring)</Line>
          <Line>- built</Line>
          <Line>- got over 1000 errors</Line>
          <Line>- the underlying cause was that each CU had an mismatched package declaration</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 20020305

- copied 6 moderate-sized CUs to another package (not a refactoring)
- built
- got over 1000 errors
- the underlying cause was that each CU had an mismatched package declaration

It would be better to just generate a single error for each CU.
This would burn other tools not expecting this to occur, like codeassist.



Will reconsider post 2.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Build 20020305

- copied 6 moderate-sized CUs to another package (not a refactoring)
- built
- got over 1000 errors
- the underlying cause was that each CU had an mismatched package declaration

It would be better to just generate a single error for each CU.
This would burn other tools not expecting this to occur, like codeassist.



Will reconsider post 2.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10988" />
    <CreationDate amount="2002-03-07 14:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Compare plugin is activated early</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>In the latest 2.0 build (0307) it appears that the compare plugin is being 
activated too early.

	To recreate:

		Take a fresh build
		Turn on debugging support to track plugin activation, launch 
with the -debug option
		Create a simple project
		Popup the menu in the navigator

	Notice the following gets logged to the console

Starting plugin: org.eclipse.compare
Finished plugin startup for org.eclipse.compare time: 60ms
Loader [org.eclipse.compare_1.0.0]^1efb05 Exit activation for 
org.eclipse.compare
Loading of the CompareUIPlugin is triggered by the 
org.eclipse.vcm.internal.ui.merge.MergeAction which is VCM.

The following stacktrace shows the context:

Thread [main] (Suspended (breakpoint at line 112 in 
org.eclipse.compare.internal.CompareUIPlugin))
	org.eclipse.compare.internal.CompareUIPlugin.&lt;init&gt;
(org.eclipse.core.runtime.IPluginDescriptor) line: 112
	java.lang.reflect.Constructor.newInstance(java.lang.Object[]) line: not 
available [native method]
	org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActiv
ation() line: 687
	org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation() 
line: 184
	org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin
(java.lang.String) line: 52
	org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf
(java.lang.String, boolean, 
org.eclipse.core.internal.boot.DelegatingURLClassLoader, boolean) line: 130
	org.eclipse.core.internal.plugins.PluginClassLoader
(org.eclipse.core.internal.boot.DelegatingURLClassLoader).loadClass
(java.lang.String, boolean, 
org.eclipse.core.internal.boot.DelegatingURLClassLoader, java.util.Vector, 
boolean) line: 771
	org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0
(org.eclipse.core.internal.boot.DelegatingURLClassLoader, java.lang.String, 
boolean, org.eclipse.core.internal.boot.DelegatingURLClassLoader, 
java.util.Vector, boolean) line: 765
	org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.l
oadClass(java.lang.String, 
org.eclipse.core.internal.boot.DelegatingURLClassLoader, 
org.eclipse.core.internal.boot.DelegatingURLClassLoader, java.util.Vector) 
line: 65
	org.eclipse.core.internal.plugins.PluginClassLoader
(org.eclipse.core.internal.boot.DelegatingURLClassLoader).findClassPrerequisites
(java.lang.String, org.eclipse.core.internal.boot.DelegatingURLClassLoader, 
java.util.Vector) line: 425
	org.eclipse.core.internal.plugins.PluginClassLoader
(org.eclipse.core.internal.boot.DelegatingURLClassLoader).loadClass
(java.lang.String, boolean, 
org.eclipse.core.internal.boot.DelegatingURLClassLoader, java.util.Vector, 
boolean) line: 779
	org.eclipse.core.internal.plugins.PluginClassLoader
(org.eclipse.core.internal.boot.DelegatingURLClassLoader).loadClass
(java.lang.String, boolean) line: 751
	org.eclipse.core.internal.plugins.PluginClassLoader
(java.lang.ClassLoader).loadClass(java.lang.String) line: 255 [local variables 
unavailable]
	org.eclipse.core.internal.plugins.PluginClassLoader
(java.lang.ClassLoader).loadClassInternal(java.lang.String) line: 315
	java.lang.Class.newInstance0() line: not available [native method]
	java.lang.Class.newInstance() line: 237
	org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExten
sion(java.lang.String, java.lang.Object, 
org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 136
	org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExten
sion(java.lang.String, java.lang.String, java.lang.Object, 
org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 165
	org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableE
xtension(java.lang.String) line: 96
	org.eclipse.ui.internal.WorkbenchPlugin.createExtension
(org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 103
	org.eclipse.ui.internal.ObjectPluginAction
(org.eclipse.ui.internal.PluginAction).createDelegate() line: 84
	org.eclipse.ui.internal.ObjectPluginAction
(org.eclipse.ui.internal.PluginAction).selectionChanged
(org.eclipse.jface.viewers.ISelection) line: 224
	org.eclipse.ui.internal.ObjectPluginAction
(org.eclipse.ui.internal.PluginAction).&lt;init&gt;
(org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 74
	org.eclipse.ui.internal.ObjectPluginAction.&lt;init&gt;
(org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 19
	org.eclipse.ui.internal.ActionDescriptor.createAction(int, 
org.eclipse.core.runtime.IConfigurationElement, java.lang.Object) line: 156
	org.eclipse.ui.internal.ActionDescriptor.&lt;init&gt;
(org.eclipse.core.runtime.IConfigurationElement, int, java.lang.Object) line: 
111
	org.eclipse.ui.internal.ActionDescriptor.&lt;init&gt;
(org.eclipse.core.runtime.IConfigurationElement, int) line: 53
	org.eclipse.ui.internal.ObjectActionContributor.createActionDescriptor
(org.eclipse.core.runtime.IConfigurationElement) line: 107
	org.eclipse.ui.internal.ObjectActionContributor
(org.eclipse.ui.internal.PluginActionBuilder).readElement
(org.eclipse.core.runtime.IConfigurationElement) line: 295
	org.eclipse.ui.internal.ObjectActionContributor.readElement
(org.eclipse.core.runtime.IConfigurationElement) line: 158
	org.eclipse.ui.internal.ObjectActionContributor
(org.eclipse.ui.internal.registry.RegistryReader).readElements
(org.eclipse.core.runtime.IConfigurationElement[]) line: 119
	org.eclipse.ui.internal.ObjectActionContributor
(org.eclipse.ui.internal.registry.RegistryReader).readElementChildren
(org.eclipse.core.runtime.IConfigurationElement) line: 109
	org.eclipse.ui.internal.ObjectActionContributor.readConfigElement() 
line: 138
	org.eclipse.ui.internal.ObjectActionContributor.isApplicableTo
(java.lang.Object) line: 116
	org.eclipse.ui.internal.ObjectActionContributorManager
(org.eclipse.ui.internal.ObjectContributorManager).isApplicableTo
(java.util.List, org.eclipse.ui.internal.IObjectContributor) line: 216
	org.eclipse.ui.internal.ObjectActionContributorManager.contributeObjectA
ctions(org.eclipse.ui.IWorkbenchPart, org.eclipse.jface.action.IMenuManager, 
org.eclipse.jface.viewers.ISelectionProvider) line: 99
	org.eclipse.ui.internal.PopupMenuExtender.addObjectActions
(org.eclipse.jface.action.IMenuManager) line: 48
	org.eclipse.ui.internal.PopupMenuExtender.menuAboutToShow
(org.eclipse.jface.action.IMenuManager) line: 68
	org.eclipse.jface.action.MenuManager.fireAboutToShow
(org.eclipse.jface.action.IMenuManager) line: 220
	org.eclipse.jface.action.MenuManager.handleAboutToShow() line: 253
	org.eclipse.jface.action.MenuManager.access$0
(org.eclipse.jface.action.MenuManager) line: 250
	org.eclipse.jface.action.MenuManager$1.menuShown
(org.eclipse.swt.events.MenuEvent) line: 280
	org.eclipse.swt.widgets.TypedListener.handleEvent
(org.eclipse.swt.widgets.Event) line: 112
	org.eclipse.swt.widgets.EventTable.sendEvent
(org.eclipse.swt.widgets.Event) line: 74
	org.eclipse.swt.widgets.Menu(org.eclipse.swt.widgets.Widget).sendEvent
(int, org.eclipse.swt.widgets.Event) line: 841
	org.eclipse.swt.widgets.Menu(org.eclipse.swt.widgets.Widget).sendEvent
(int) line: 827
	org.eclipse.swt.widgets.Shell
(org.eclipse.swt.widgets.Control).WM_INITMENUPOPUP(int, int) line: 2979
	org.eclipse.swt.widgets.Shell
(org.eclipse.swt.widgets.Control).windowProc(int, int, int) line: 2662
	org.eclipse.swt.widgets.Shell
(org.eclipse.swt.widgets.Decorations).windowProc(int, int, int) line: 1334
	org.eclipse.swt.widgets.Display.windowProc(int, int, int, int) line: 
1806
	org.eclipse.swt.internal.win32.OS.TrackPopupMenu(int, int, int, int, 
int, int, org.eclipse.swt.internal.win32.RECT) line: not available [native 
method]
	org.eclipse.swt.widgets.Menu.setVisible(boolean) line: 803
	org.eclipse.swt.widgets.Tree
(org.eclipse.swt.widgets.Control).WM_CONTEXTMENU(int, int) line: 2796
	org.eclipse.swt.widgets.Tree(org.eclipse.swt.widgets.Control).windowProc
(int, int, int) line: 2645
	org.eclipse.swt.widgets.Display.windowProc(int, int, int, int) line: 
1806
	org.eclipse.swt.internal.win32.OS.CallWindowProcW(int, int, int, int, 
int) line: not available [native method]
	org.eclipse.swt.internal.win32.OS.CallWindowProc(int, int, int, int, 
int) line: 1129
	org.eclipse.swt.widgets.Tree.callWindowProc(int, int, int) line: 144
	org.eclipse.swt.widgets.Tree
(org.eclipse.swt.widgets.Control).WM_RBUTTONUP(int, int) line: 3645
	org.eclipse.swt.widgets.Tree(org.eclipse.swt.widgets.Control).windowProc
(int, int, int) line: 2694
	org.eclipse.swt.widgets.Display.windowProc(int, int, int, int) line: 
1806
	org.eclipse.swt.internal.win32.OS.DispatchMessageW
(org.eclipse.swt.internal.win32.MSG) line: not available [native method]
	org.eclipse.swt.internal.win32.OS.DispatchMessage
(org.eclipse.swt.internal.win32.MSG) line: 1196
	org.eclipse.swt.widgets.Display.readAndDispatch() line: 1206
	org.eclipse.ui.internal.Workbench.runEventLoop() line: 788
	org.eclipse.ui.internal.Workbench.run(java.lang.Object) line: 771
	org.eclipse.core.internal.boot.InternalBootLoader.run(java.lang.String, 
java.net.URL, java.lang.String, java.lang.String[]) line: 777
	org.eclipse.core.boot.BootLoader.run(java.lang.String, java.net.URL, 
java.lang.String, java.lang.String[]) line: 319
	SlimLauncher.main(java.lang.String[]) line: 14

This is VCM and is obsolete. However, we should make sure that the same thing
does not happen with Team.
I've asked Desktop to do their profiling with Team enabled.
There are tracing options for finding out when plugins are being activated.
Please check if this is still happening.  If it is, find out why.
No longer relevant.  Does not happen in Team 2.0.</WithStack>
    <WithOutStack>In the latest 2.0 build (0307) it appears that the compare plugin is being 
activated too early.

	To recreate:

		Take a fresh build
		Turn on debugging support to track plugin activation, launch 
with the -debug option
		Create a simple project
		Popup the menu in the navigator

	Notice the following gets logged to the console

Starting plugin: org.eclipse.compare
Finished plugin startup for org.eclipse.compare time: 60ms
Loader [org.eclipse.compare_1.0.0]^1efb05 Exit activation for 
org.eclipse.compare
Loading of the CompareUIPlugin is triggered by the 
org.eclipse.vcm.internal.ui.merge.MergeAction which is VCM.

The following stacktrace shows the context:

Thread [main] (Suspended (breakpoint at line 112 in 
org.eclipse.compare.internal.CompareUIPlugin))
	org.eclipse.compare.internal.CompareUIPlugin.&lt;init&gt;
(org.eclipse.core.runtime.IPluginDescriptor) line: 112
	java.lang.reflect.Constructor.newInstance(java.lang.Object[]) line: not 
available [native method]
	org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActiv
ation() line: 687
	org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation() 
line: 184
	org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin
(java.lang.String) line: 52
	org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf
(java.lang.String, boolean, 
org.eclipse.core.internal.boot.DelegatingURLClassLoader, boolean) line: 130
	org.eclipse.core.internal.plugins.PluginClassLoader
(org.eclipse.core.internal.boot.DelegatingURLClassLoader).loadClass
(java.lang.String, boolean, 
org.eclipse.core.internal.boot.DelegatingURLClassLoader, java.util.Vector, 
boolean) line: 771
	org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0
(org.eclipse.core.internal.boot.DelegatingURLClassLoader, java.lang.String, 
boolean, org.eclipse.core.internal.boot.DelegatingURLClassLoader, 
java.util.Vector, boolean) line: 765
	org.eclipse.core.internal.boot.DelegatingURLClassLoader$DelegateLoader.l
oadClass(java.lang.String, 
org.eclipse.core.internal.boot.DelegatingURLClassLoader, 
org.eclipse.core.internal.boot.DelegatingURLClassLoader, java.util.Vector) 
line: 65
	org.eclipse.core.internal.plugins.PluginClassLoader
(org.eclipse.core.internal.boot.DelegatingURLClassLoader).findClassPrerequisites
(java.lang.String, org.eclipse.core.internal.boot.DelegatingURLClassLoader, 
java.util.Vector) line: 425
	org.eclipse.core.internal.plugins.PluginClassLoader
(org.eclipse.core.internal.boot.DelegatingURLClassLoader).loadClass
(java.lang.String, boolean, 
org.eclipse.core.internal.boot.DelegatingURLClassLoader, java.util.Vector, 
boolean) line: 779
	org.eclipse.core.internal.plugins.PluginClassLoader
(org.eclipse.core.internal.boot.DelegatingURLClassLoader).loadClass
(java.lang.String, boolean) line: 751
	org.eclipse.core.internal.plugins.PluginClassLoader
(java.lang.ClassLoader).loadClass(java.lang.String) line: 255 [local variables 
unavailable]
	org.eclipse.core.internal.plugins.PluginClassLoader
(java.lang.ClassLoader).loadClassInternal(java.lang.String) line: 315
	java.lang.Class.newInstance0() line: not available [native method]
	java.lang.Class.newInstance() line: 237
	org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExten
sion(java.lang.String, java.lang.Object, 
org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 136
	org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExten
sion(java.lang.String, java.lang.String, java.lang.Object, 
org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 165
	org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableE
xtension(java.lang.String) line: 96
	org.eclipse.ui.internal.WorkbenchPlugin.createExtension
(org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 103
	org.eclipse.ui.internal.ObjectPluginAction
(org.eclipse.ui.internal.PluginAction).createDelegate() line: 84
	org.eclipse.ui.internal.ObjectPluginAction
(org.eclipse.ui.internal.PluginAction).selectionChanged
(org.eclipse.jface.viewers.ISelection) line: 224
	org.eclipse.ui.internal.ObjectPluginAction
(org.eclipse.ui.internal.PluginAction).&lt;init&gt;
(org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 74
	org.eclipse.ui.internal.ObjectPluginAction.&lt;init&gt;
(org.eclipse.core.runtime.IConfigurationElement, java.lang.String) line: 19
	org.eclipse.ui.internal.ActionDescriptor.createAction(int, 
org.eclipse.core.runtime.IConfigurationElement, java.lang.Object) line: 156
	org.eclipse.ui.internal.ActionDescriptor.&lt;init&gt;
(org.eclipse.core.runtime.IConfigurationElement, int, java.lang.Object) line: 
111
	org.eclipse.ui.internal.ActionDescriptor.&lt;init&gt;
(org.eclipse.core.runtime.IConfigurationElement, int) line: 53
	org.eclipse.ui.internal.ObjectActionContributor.createActionDescriptor
(org.eclipse.core.runtime.IConfigurationElement) line: 107
	org.eclipse.ui.internal.ObjectActionContributor
(org.eclipse.ui.internal.PluginActionBuilder).readElement
(org.eclipse.core.runtime.IConfigurationElement) line: 295
	org.eclipse.ui.internal.ObjectActionContributor.readElement
(org.eclipse.core.runtime.IConfigurationElement) line: 158
	org.eclipse.ui.internal.ObjectActionContributor
(org.eclipse.ui.internal.registry.RegistryReader).readElements
(org.eclipse.core.runtime.IConfigurationElement[]) line: 119
	org.eclipse.ui.internal.ObjectActionContributor
(org.eclipse.ui.internal.registry.RegistryReader).readElementChildren
(org.eclipse.core.runtime.IConfigurationElement) line: 109
	org.eclipse.ui.internal.ObjectActionContributor.readConfigElement() 
line: 138
	org.eclipse.ui.internal.ObjectActionContributor.isApplicableTo
(java.lang.Object) line: 116
	org.eclipse.ui.internal.ObjectActionContributorManager
(org.eclipse.ui.internal.ObjectContributorManager).isApplicableTo
(java.util.List, org.eclipse.ui.internal.IObjectContributor) line: 216
	org.eclipse.ui.internal.ObjectActionContributorManager.contributeObjectA
ctions(org.eclipse.ui.IWorkbenchPart, org.eclipse.jface.action.IMenuManager, 
org.eclipse.jface.viewers.ISelectionProvider) line: 99
	org.eclipse.ui.internal.PopupMenuExtender.addObjectActions
(org.eclipse.jface.action.IMenuManager) line: 48
	org.eclipse.ui.internal.PopupMenuExtender.menuAboutToShow
(org.eclipse.jface.action.IMenuManager) line: 68
	org.eclipse.jface.action.MenuManager.fireAboutToShow
(org.eclipse.jface.action.IMenuManager) line: 220
	org.eclipse.jface.action.MenuManager.handleAboutToShow() line: 253
	org.eclipse.jface.action.MenuManager.access$0
(org.eclipse.jface.action.MenuManager) line: 250
	org.eclipse.jface.action.MenuManager$1.menuShown
(org.eclipse.swt.events.MenuEvent) line: 280
	org.eclipse.swt.widgets.TypedListener.handleEvent
(org.eclipse.swt.widgets.Event) line: 112
	org.eclipse.swt.widgets.EventTable.sendEvent
(org.eclipse.swt.widgets.Event) line: 74
	org.eclipse.swt.widgets.Menu(org.eclipse.swt.widgets.Widget).sendEvent
(int, org.eclipse.swt.widgets.Event) line: 841
	org.eclipse.swt.widgets.Menu(org.eclipse.swt.widgets.Widget).sendEvent
(int) line: 827
	org.eclipse.swt.widgets.Shell
(org.eclipse.swt.widgets.Control).WM_INITMENUPOPUP(int, int) line: 2979
	org.eclipse.swt.widgets.Shell
(org.eclipse.swt.widgets.Control).windowProc(int, int, int) line: 2662
	org.eclipse.swt.widgets.Shell
(org.eclipse.swt.widgets.Decorations).windowProc(int, int, int) line: 1334
	org.eclipse.swt.widgets.Display.windowProc(int, int, int, int) line: 
1806
	org.eclipse.swt.internal.win32.OS.TrackPopupMenu(int, int, int, int, 
int, int, org.eclipse.swt.internal.win32.RECT) line: not available [native 
method]
	org.eclipse.swt.widgets.Menu.setVisible(boolean) line: 803
	org.eclipse.swt.widgets.Tree
(org.eclipse.swt.widgets.Control).WM_CONTEXTMENU(int, int) line: 2796
	org.eclipse.swt.widgets.Tree(org.eclipse.swt.widgets.Control).windowProc
(int, int, int) line: 2645
	org.eclipse.swt.widgets.Display.windowProc(int, int, int, int) line: 
1806
	org.eclipse.swt.internal.win32.OS.CallWindowProcW(int, int, int, int, 
int) line: not available [native method]
	org.eclipse.swt.internal.win32.OS.CallWindowProc(int, int, int, int, 
int) line: 1129
	org.eclipse.swt.widgets.Tree.callWindowProc(int, int, int) line: 144
	org.eclipse.swt.widgets.Tree
(org.eclipse.swt.widgets.Control).WM_RBUTTONUP(int, int) line: 3645
	org.eclipse.swt.widgets.Tree(org.eclipse.swt.widgets.Control).windowProc
(int, int, int) line: 2694
	org.eclipse.swt.widgets.Display.windowProc(int, int, int, int) line: 
1806
	org.eclipse.swt.internal.win32.OS.DispatchMessageW
(org.eclipse.swt.internal.win32.MSG) line: not available [native method]
	org.eclipse.swt.internal.win32.OS.DispatchMessage
(org.eclipse.swt.internal.win32.MSG) line: 1196
	org.eclipse.swt.widgets.Display.readAndDispatch() line: 1206
	org.eclipse.ui.internal.Workbench.runEventLoop() line: 788
	org.eclipse.ui.internal.Workbench.run(java.lang.Object) line: 771
	org.eclipse.core.internal.boot.InternalBootLoader.run(java.lang.String, 
java.net.URL, java.lang.String, java.lang.String[]) line: 777
	org.eclipse.core.boot.BootLoader.run(java.lang.String, java.net.URL, 
java.lang.String, java.lang.String[]) line: 319
	SlimLauncher.main(java.lang.String[]) line: 14

This is VCM and is obsolete. However, we should make sure that the same thing
does not happen with Team.
I've asked Desktop to do their profiling with Team enabled.
There are tracing options for finding out when plugins are being activated.
Please check if this is still happening.  If it is, find out why.
No longer relevant.  Does not happen in Team 2.0.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10989" />
    <CreationDate amount="2002-03-07 15:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Finding markers on a resource has problems if includeSubType is true</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="15">
      <source_code type="assignment">
        <location start="241" end="286" />
        <code>List result = new ArrayList(markers.size());</code>
      </source_code>
      <source_code type="assignment">
        <location start="287" end="338" />
        <code>IMarkerSetElement[] elements = markers.elements();</code>
      </source_code>
      <source_code type="functiondef">
        <location start="339" end="742" />
        <code>for (int i = 0; i &lt; elements.length; i++) {
		MarkerInfo marker = (MarkerInfo) elements[i];
		// if the type is null then we are looking for all types of 
markers
		if (type == null)
			result.add(marker);
		else {
			if (includeSubtypes) {
				if (cache.isSubtype(marker.getType(), type))
					result.add(marker);
			} else {
				if (marker.getType().equals(type))
					result.add(marker);
			}
		}
	}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="743" end="812" />
        <code>return (MarkerInfo[]) result.toArray(new MarkerInfo[result.size()]);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2030" end="2098" />
        <code>IProject project = getWorkspace().getRoot().getProject("MyProject");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2099" end="2120" />
        <code>project.create(null);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2121" end="2140" />
        <code>project.open(null);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2141" end="2181" />
        <code>IFile file = project.getFile("foo.txt");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2182" end="2227" />
        <code>file.create(getRandomContents(), true, null);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2228" end="2280" />
        <code>IMarker marker = file.createMarker(IMarker.PROBLEM);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2281" end="2361" />
        <code>IMarker[] found = file.findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_ZERO);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2362" end="2399" />
        <code>assertEquals("1.0", 1, found.length);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2400" end="2474" />
        <code>found = file.findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_INFINITE);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2475" end="2512" />
        <code>assertEquals("1.1", 1, found.length);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2513" end="2546" />
        <code>project.delete(true, true, null);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When you call findMarkers with includeSubType true, it omits all markers that 
are of the supertype. Here is the code in MarkerManager.java:

private MarkerInfo[] basicFindMatching(MarkerSet markers, String type, boolean 
includeSubtypes) {
	List result = new ArrayList(markers.size());
	IMarkerSetElement[] elements = markers.elements();
	for (int i = 0; i &lt; elements.length; i++) {
		MarkerInfo marker = (MarkerInfo) elements[i];
		// if the type is null then we are looking for all types of 
markers
		if (type == null)
			result.add(marker);
		else {
			if (includeSubtypes) {
				if (cache.isSubtype(marker.getType(), type))
					result.add(marker);
			} else {
				if (marker.getType().equals(type))
					result.add(marker);
			}
		}
	}
	return (MarkerInfo[]) result.toArray(new MarkerInfo[result.size()]);
}

It seems we only check if the marker type is equal to supertype if 
includeSubType is false. I think the else statement should be inside the if 
statement and should be executed if includeSubTypes is true.
The "if" clause below is broken into 2 parts:

if (includeSubtypes) then
  match on type or subtype
else
  match on exact type only
endif

The marker type definition cache contains sets of marker types and their 
subtypes, with the sets including the root type itself.

Closing bug.

If you have a concrete example or test case with this failing, please re-open.

Okay, perhaps that is what is supposed to happen, but 
cache.isSubtype(marker.getType(), type) is returning false, due to set being 
null in that method.

Easy to produce this bug: create markers on a IFile of a certain type. Then do 
findMarker with includeSubTypes set to true. It doesn't find the markers that 
were created even though they exist. I am quite sure of this as I ran a debug 
session and saw that the markers were inside the ResourceInfo object.
Here is my test case. It passes with no problems. Please annotate bug report 
with a test case that fails or tell me what I am doing wrong in the code below. 
Thanks.
-------------
IProject project = getWorkspace().getRoot().getProject("MyProject");
project.create(null);
project.open(null);
IFile file = project.getFile("foo.txt");
file.create(getRandomContents(), true, null);
IMarker marker = file.createMarker(IMarker.PROBLEM);
IMarker[] found = file.findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_ZERO);
assertEquals("1.0", 1, found.length);
found = file.findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_INFINITE);
assertEquals("1.1", 1, found.length);
project.delete(true, true, null);

No further information from originator.
Closing bug.
Please re-open if you have a reproducable test case.</WithStack>
    <WithOutStack>When you call findMarkers with includeSubType true, it omits all markers that 
are of the supertype. Here is the code in MarkerManager.java:

private MarkerInfo[] basicFindMatching(MarkerSet markers, String type, boolean 
includeSubtypes) {
	List result = new ArrayList(markers.size());
	IMarkerSetElement[] elements = markers.elements();
	for (int i = 0; i &lt; elements.length; i++) {
		MarkerInfo marker = (MarkerInfo) elements[i];
		// if the type is null then we are looking for all types of 
markers
		if (type == null)
			result.add(marker);
		else {
			if (includeSubtypes) {
				if (cache.isSubtype(marker.getType(), type))
					result.add(marker);
			} else {
				if (marker.getType().equals(type))
					result.add(marker);
			}
		}
	}
	return (MarkerInfo[]) result.toArray(new MarkerInfo[result.size()]);
}

It seems we only check if the marker type is equal to supertype if 
includeSubType is false. I think the else statement should be inside the if 
statement and should be executed if includeSubTypes is true.
The "if" clause below is broken into 2 parts:

if (includeSubtypes) then
  match on type or subtype
else
  match on exact type only
endif

The marker type definition cache contains sets of marker types and their 
subtypes, with the sets including the root type itself.

Closing bug.

If you have a concrete example or test case with this failing, please re-open.

Okay, perhaps that is what is supposed to happen, but 
cache.isSubtype(marker.getType(), type) is returning false, due to set being 
null in that method.

Easy to produce this bug: create markers on a IFile of a certain type. Then do 
findMarker with includeSubTypes set to true. It doesn't find the markers that 
were created even though they exist. I am quite sure of this as I ran a debug 
session and saw that the markers were inside the ResourceInfo object.
Here is my test case. It passes with no problems. Please annotate bug report 
with a test case that fails or tell me what I am doing wrong in the code below. 
Thanks.
-------------
IProject project = getWorkspace().getRoot().getProject("MyProject");
project.create(null);
project.open(null);
IFile file = project.getFile("foo.txt");
file.create(getRandomContents(), true, null);
IMarker marker = file.createMarker(IMarker.PROBLEM);
IMarker[] found = file.findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_ZERO);
assertEquals("1.0", 1, found.length);
found = file.findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_INFINITE);
assertEquals("1.1", 1, found.length);
project.delete(true, true, null);

No further information from originator.
Closing bug.
Please re-open if you have a reproducable test case.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10990" />
    <CreationDate amount="2002-03-07 15:29:00 -0500" />
    <DupId amount="7507" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Debug shortcuts do not work at the first time</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>build 20020307

It's not a new problem from what I remember. The first time in an Eclipse 
session the debug perspective opens it hits a breakpoint, I'm not able to use 
shortcuts like F5, F5, F7... After I select/unselect the debug menu, it works. 
It is annoying having to do that everytime I restart Eclipse.


*** This bug has been marked as a duplicate of 7507 ***</WithStack>
    <WithOutStack>build 20020307

It's not a new problem from what I remember. The first time in an Eclipse 
session the debug perspective opens it hits a breakpoint, I'm not able to use 
shortcuts like F5, F5, F7... After I select/unselect the debug menu, it works. 
It is annoying having to do that everytime I restart Eclipse.


*** This bug has been marked as a duplicate of 7507 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10991" />
    <CreationDate amount="2002-03-07 15:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Launch configuration: double click to edit environment vars</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>To be consistent with the rest of Eclipse, double clicking on an environment 
variable entry on a launch configuration tab should realize the "edit" dialog.
Fixed.
please verify
Verified.</WithStack>
    <WithOutStack>To be consistent with the rest of Eclipse, double clicking on an environment 
variable entry on a launch configuration tab should realize the "edit" dialog.
Fixed.
please verify
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10992" />
    <CreationDate amount="2002-03-07 15:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Export wizard: "Overwrite file" question dialog doesn't show file name</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>build 20020228

I'm exporting files to the directory
D:\Images\Eclipse\dev\eclipse\plugins\org.eclipse.swt\bin\org\eclipse\swt\custom
The files already exist and I'm asked whether I want to overwrite.
The question dialog doesn't have enough space to show the complete file name 
including directories and only shows the beginning of the path.
It should truncate the directory names so that the file name and as many 
directories as possible are visible.
This is a result of the text wrapping problem from PR 9866.
Changing dependency from bug 9866 to bug 14528. The platform Label clips "non-
breaking words" that are too long for the label. You may need to work around 
platform behavior (by knowing you have a too-long string, and manually breaking 
it) to fix this. Alternatively, make the dialog resizable.
Marking as WONT FIX as this is platform behaviour
What about the workaround Carolyn suggests? We should truncate long path names 
in general. Other dialogs have the same problem.
I'd settle for a "Later" fix.
There is a general truncation strategy we could consider in the future. The 
with something like info is where to truncate - i.e. what is the interesting 
part.

I'll mark as Later as you suggest so that we can discuss it as part of an 
overall truncation strategy.
Reopening to consider truncation utility
Rather than a truncation facility which defeats the purpose of wrapping on 
platforms that do it properly. The message can be reworded as

 Overwrite {0} in folder {1}? where {0} is the file name and {1} is the path. 
In cases where this cannot be split up this way we will use the old message.

Released into current HEAD.
*** Bug 26911 has been marked as a duplicate of this bug. ***
Marking closed</WithStack>
    <WithOutStack>build 20020228

I'm exporting files to the directory
D:\Images\Eclipse\dev\eclipse\plugins\org.eclipse.swt\bin\org\eclipse\swt\custom
The files already exist and I'm asked whether I want to overwrite.
The question dialog doesn't have enough space to show the complete file name 
including directories and only shows the beginning of the path.
It should truncate the directory names so that the file name and as many 
directories as possible are visible.
This is a result of the text wrapping problem from PR 9866.
Changing dependency from bug 9866 to bug 14528. The platform Label clips "non-
breaking words" that are too long for the label. You may need to work around 
platform behavior (by knowing you have a too-long string, and manually breaking 
it) to fix this. Alternatively, make the dialog resizable.
Marking as WONT FIX as this is platform behaviour
What about the workaround Carolyn suggests? We should truncate long path names 
in general. Other dialogs have the same problem.
I'd settle for a "Later" fix.
There is a general truncation strategy we could consider in the future. The 
with something like info is where to truncate - i.e. what is the interesting 
part.

I'll mark as Later as you suggest so that we can discuss it as part of an 
overall truncation strategy.
Reopening to consider truncation utility
Rather than a truncation facility which defeats the purpose of wrapping on 
platforms that do it properly. The message can be reworded as

 Overwrite {0} in folder {1}? where {0} is the file name and {1} is the path. 
In cases where this cannot be split up this way we will use the old message.

Released into current HEAD.
*** Bug 26911 has been marked as a duplicate of this bug. ***
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10993" />
    <CreationDate amount="2002-03-07 16:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[CVS Sync View] Synchronize with Repository will not use "Synchronize View" in another window</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Build v20020305 / Team 2.0

In past versions (v20020214 / Team 1.0) if I did "Synchronzie with Stream" it 
would open a new perpsective with the Synchronize View.  I understand this is 
removed, since the Team perspective is gone in Team 2.0.  (I like this design 
change).

What I would like to have, however, is to have an option to have "Synchronize 
with Repository" to use a open "Synchronize View" even if it is in a different 
window (previously cloned perspective).
I don't think you can do this in Eclipse.
If you open a view, it looks for one with that ID in your current perspective.
Most people find the perspective switching annoying.

I guess this means you can't replicate a "Sync" perspective like we used to.
Investigate post 2.0
Reopening
No longer valid with the new sync view. The sync action is gone and the view is
live.</WithStack>
    <WithOutStack>Build v20020305 / Team 2.0

In past versions (v20020214 / Team 1.0) if I did "Synchronzie with Stream" it 
would open a new perpsective with the Synchronize View.  I understand this is 
removed, since the Team perspective is gone in Team 2.0.  (I like this design 
change).

What I would like to have, however, is to have an option to have "Synchronize 
with Repository" to use a open "Synchronize View" even if it is in a different 
window (previously cloned perspective).
I don't think you can do this in Eclipse.
If you open a view, it looks for one with that ID in your current perspective.
Most people find the perspective switching annoying.

I guess this means you can't replicate a "Sync" perspective like we used to.
Investigate post 2.0
Reopening
No longer valid with the new sync view. The sync action is gone and the view is
live.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10994" />
    <CreationDate amount="2002-03-07 16:06:00 -0500" />
    <DupId amount="28158" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Startup times</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>On an empty workspace, it takes the Resources plugin roughly 20% of the total 
time to startup. (750ms out of 5sec)

Why is this? 

(note that this is resources only, and not Runtime, etc)
Actually it's closer to 12-15% of the total time.  An average over five runs was 
13.7%.  In optimizeit, it showed ResourcesPlugin.startup() as 12% of the time, 
breaking down as follows (omitted classloading times, which was most of it):

Workspace.open 10.9%
  Workspace.startup 5.55%
    MarkerManager.init 4.1%
      MarkerTypeDefinitionCache.init 4.05%
        ResourceBundle.getBundle 3.83%
    SaveManager.restore 0.41% (this is all the workspace I/O)
  LocalMetaArea.readWorkspace 3.61%
    ModelObjectReader.read 3.38%
      -&gt; All the time in here was loading XML framework classes
  Policy.clinit 1.66%
    ResourceBundle.getBundle() 1.66%

In short, half the time is loading resource bundles, and the other half is 
classloading.  The only easy opportunity I see is to use a hand-crafted XML 
reader to avoid loading the dozens of classes involved in firing up Xerces.  We 
could make the marker type cache initialize lazily, but it has to happen 
eventually so it doesn't gain anything in the end.

We can't do anything about the ResourceBundle code.
We need the Xerces classes to parse the XML files.

Although this won't buy us a lot of time, consider moving to SAX-based parsing 
post 2.0. (see bug 3012)

Reopening for investigation.
See bug 3012 re: DOM vs SAX parsing.
See bug 28158 re: general resources plug-in startup analysis.

*** This bug has been marked as a duplicate of 28158 ***</WithStack>
    <WithOutStack>On an empty workspace, it takes the Resources plugin roughly 20% of the total 
time to startup. (750ms out of 5sec)

Why is this? 

(note that this is resources only, and not Runtime, etc)
Actually it's closer to 12-15% of the total time.  An average over five runs was 
13.7%.  In optimizeit, it showed ResourcesPlugin.startup() as 12% of the time, 
breaking down as follows (omitted classloading times, which was most of it):

Workspace.open 10.9%
  Workspace.startup 5.55%
    MarkerManager.init 4.1%
      MarkerTypeDefinitionCache.init 4.05%
        ResourceBundle.getBundle 3.83%
    SaveManager.restore 0.41% (this is all the workspace I/O)
  LocalMetaArea.readWorkspace 3.61%
    ModelObjectReader.read 3.38%
      -&gt; All the time in here was loading XML framework classes
  Policy.clinit 1.66%
    ResourceBundle.getBundle() 1.66%

In short, half the time is loading resource bundles, and the other half is 
classloading.  The only easy opportunity I see is to use a hand-crafted XML 
reader to avoid loading the dozens of classes involved in firing up Xerces.  We 
could make the marker type cache initialize lazily, but it has to happen 
eventually so it doesn't gain anything in the end.

We can't do anything about the ResourceBundle code.
We need the Xerces classes to parse the XML files.

Although this won't buy us a lot of time, consider moving to SAX-based parsing 
post 2.0. (see bug 3012)

Reopening for investigation.
See bug 3012 re: DOM vs SAX parsing.
See bug 28158 re: general resources plug-in startup analysis.

*** This bug has been marked as a duplicate of 28158 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10995" />
    <CreationDate amount="2002-03-07 16:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>-plugins option missing from readme\running.html</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The -plugins commandline option is missing from the readme\running.html doc.
Now available in the SDK doc under: Workbench User's Guide -&gt; Tasks.
Closing.</WithStack>
    <WithOutStack>The -plugins commandline option is missing from the readme\running.html doc.
Now available in the SDK doc under: Workbench User's Guide -&gt; Tasks.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10996" />
    <CreationDate amount="2002-03-07 16:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>createCompilationUnit doesn't behave as described in the documentation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="50" end="118" />
        <code>IPackageFragment.createCompilationUnit("test.java", "", true, null);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>From EC:
"When I create a compilation unit using:
IPackageFragment.createCompilationUnit("test.java", "", true, null);
and "test.java" already exists, it does not overwrite it and instead
throws a CoreException. My understanding of the force flag was that if it
was set to true, it would automatically overwrite any compilation units of
the same name, if they existed. However, when I set the flag to either
false or true, it complains about "test.java" already existing."

This is still true in latest. If the flag force is true, the existing 
compilation unit should be overriden. If false, the actual behavior is correct.
The operation used is a CreateCompilationUnit operation. The documentation says 
that this operation will fail if the compilation unit already exists. The flag 
force is passed to the IFile.create method where the meaning is the way the 
plaform should handle files which are not synchronized with the local file 
system. So I guess there is a confusion in the meaning of the flag force between 
the JDT/Core API and the Platform/Core API.
CreateCompilationUnitOperation should not fail if the compilation unit already 
exists and the flag is true. It should simply override the contents of the 
existing compilation unit.
Agreed.
Fixed and released in HEAD. Model tests updated.
&gt;&gt; Fixed and released in HEAD. Model tests updated.
What do you mean by this? What should I download to get this fix?
It means that the fix is ready for the next integration build or night build. 
So wait for the next integration build and you will get the fix. Is this ok for 
you?
I'm currently using IBM WebSphere Application Developer, which is built on the 
Eclipse platform. Thus, I don't think I can just download the newest build, 
right? Is there a way I can just replace the newest eclipse jar (for that 
class) on top of the one I currently have?</WithStack>
    <WithOutStack>From EC:
"When I create a compilation unit using:
IPackageFragment.createCompilationUnit("test.java", "", true, null);
and "test.java" already exists, it does not overwrite it and instead
throws a CoreException. My understanding of the force flag was that if it
was set to true, it would automatically overwrite any compilation units of
the same name, if they existed. However, when I set the flag to either
false or true, it complains about "test.java" already existing."

This is still true in latest. If the flag force is true, the existing 
compilation unit should be overriden. If false, the actual behavior is correct.
The operation used is a CreateCompilationUnit operation. The documentation says 
that this operation will fail if the compilation unit already exists. The flag 
force is passed to the IFile.create method where the meaning is the way the 
plaform should handle files which are not synchronized with the local file 
system. So I guess there is a confusion in the meaning of the flag force between 
the JDT/Core API and the Platform/Core API.
CreateCompilationUnitOperation should not fail if the compilation unit already 
exists and the flag is true. It should simply override the contents of the 
existing compilation unit.
Agreed.
Fixed and released in HEAD. Model tests updated.
&gt;&gt; Fixed and released in HEAD. Model tests updated.
What do you mean by this? What should I download to get this fix?
It means that the fix is ready for the next integration build or night build. 
So wait for the next integration build and you will get the fix. Is this ok for 
you?
I'm currently using IBM WebSphere Application Developer, which is built on the 
Eclipse platform. Thus, I don't think I can just download the newest build, 
right? Is there a way I can just replace the newest eclipse jar (for that 
class) on top of the one I currently have?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10997" />
    <CreationDate amount="2002-03-07 16:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>All Views are in 'Other' category</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20020307

Show View-&gt;Other

Expand all the categories. They are all empty except 'Other' which contains
*all* views.
Changed code to return category ID if parent hierarchy not specified. Code was 
lost during refactoring. Fix in build &gt; 2002-03-08
*** Bug 11139 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>I20020307

Show View-&gt;Other

Expand all the categories. They are all empty except 'Other' which contains
*all* views.
Changed code to return category ID if parent hierarchy not specified. Code was 
lost during refactoring. Fix in build &gt; 2002-03-08
*** Bug 11139 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10998" />
    <CreationDate amount="2002-03-07 16:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Clarify IResource.getLocation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="multicomment">
        <location start="1241" end="1728" />
        <code>/**
 * Returns the path in the local file system to this resource, or
 * &lt;code&gt;null&lt;/code&gt; if this resource is a project that does not exist, or is 
 * a member of a project that does not exist.  
 * 
 * &lt;p&gt;
 * If this resource is a project, this returns a path to the
 * project's local content area.  If this resource is not a 
 * project, it need not exist.
 * &lt;/p&gt;
 *
 * @return the path of this resource in the local file system, or null
 * @see IProjectDescription#setLocation
 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="1794" end="2508" />
        <code>/**
 * Returns the path in the local file system to this resource, or
 * &lt;code&gt;null&lt;/code&gt;. 
 *
 * &lt;p&gt;
 * If this resource is a project, this method returns a path to the
 * project's local content area. The location for files and folders 
 * which do not exist in the workspace is always non-null if the 
 * project itself exists. (the location is computed based on the project's
 * location)
 * &lt;/p&gt;
 * &lt;p&gt;
 * Returns &lt;code&gt;null&lt;/code&gt; if:
 * &lt;ul&gt;
 * &lt;li&gt; if this resource is a project that does not exist
 * &lt;li&gt; if this resource is a member of a project that does not exist
 * &lt;/ul&gt;
 * &lt;/p&gt;
 * 
 * @return the path of this resource in the local file system, or null
 * @see IProjectDescription#setLocation
 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="2536" end="3700" />
        <code>/**
 * Returns the absolute path in the local file system to this resource, 
 * or &lt;code&gt;null&lt;/code&gt; if no path can be determined.
 * &lt;p&gt;
 * If this resource is a project that exists in the workspace, this
 * method returns the path to the project's local content area. 
 * This is true regardless of whether the project is open or closed.
 * &lt;/p&gt;
 * &lt;p&gt;
 * If this resource is a file or folder under a project that exists,
 * this method returns a (non-&lt;code&gt;null&lt;/code&gt;) path computed from
 * the location of project's local content area and the project-relative
 * path of the file or folder. This is true regardless of whether the 
 * file or folders exists, or whether the project is open or closed.
 * &lt;/p&gt;
 * &lt;p&gt;
 * If this resource is a project that does not exist in the workspace,
 * or a file or folder below such a project, this method returns
 * &lt;code&gt;null&lt;/code&gt;.
 * &lt;/p&gt;
 * &lt;p&gt;
 * This method also returns &lt;code&gt;null&lt;/code&gt; if this resource is the
 * workspace root.
 * &lt;/p&gt;
 * 
 * @return the absolute path of this resource in the local file system,
 *  or &lt;code&gt;null&lt;/code&gt; if no path can be determined
 * @see IProjectDescription#setLocation
 */</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>IResource.getLocation should be clarified to say exactly what happens when the 
resource does not exist in the workspace.

It is currently unclear and could be interpreted in a couple of ways since 
(even thought the resource may not exist) the resource location can be computed 
from the project root content location.
I suggest we change the javadoc to be aligned with the implementation.  If the 
project does not exist, it would be misleading for us to guess that it would be 
at the default location.  I suggest adding the following sentence to the 
javadoc:

"Returns null if this resource is a project that does not exist, or is a member 
of a project that does not exist."

I'll release this fix if it sounds reasonable to you.
The suggested wording does a good job of the case where the project does 
not exist.

It should also say what happens when the project does exist but the
resource does not. In this case, it the local file system path of
the file or folder can still be calculated and returned. I think this
method should be spec'd to do this.

Ok, then we should just specify the exact case where null is returned.  Then it 
is clear that all other cases return a non-null value.  Here is the suggested 
complete javadoc:

/**
 * Returns the path in the local file system to this resource, or
 * &lt;code&gt;null&lt;/code&gt; if this resource is a project that does not exist, or is 
 * a member of a project that does not exist.  
 * 
 * &lt;p&gt;
 * If this resource is a project, this returns a path to the
 * project's local content area.  If this resource is not a 
 * project, it need not exist.
 * &lt;/p&gt;
 *
 * @return the path of this resource in the local file system, or null
 * @see IProjectDescription#setLocation
 */
I find the wording a little confusing. How about something like:

/**
 * Returns the path in the local file system to this resource, or
 * &lt;code&gt;null&lt;/code&gt;. 
 *
 * &lt;p&gt;
 * If this resource is a project, this method returns a path to the
 * project's local content area. The location for files and folders 
 * which do not exist in the workspace is always non-null if the 
 * project itself exists. (the location is computed based on the project's
 * location)
 * &lt;/p&gt;
 * &lt;p&gt;
 * Returns &lt;code&gt;null&lt;/code&gt; if:
 * &lt;ul&gt;
 * &lt;li&gt; if this resource is a project that does not exist
 * &lt;li&gt; if this resource is a member of a project that does not exist
 * &lt;/ul&gt;
 * &lt;/p&gt;
 * 
 * @return the path of this resource in the local file system, or null
 * @see IProjectDescription#setLocation
 */
Let me take a crack at it.

/**
 * Returns the absolute path in the local file system to this resource, 
 * or &lt;code&gt;null&lt;/code&gt; if no path can be determined.
 * &lt;p&gt;
 * If this resource is a project that exists in the workspace, this
 * method returns the path to the project's local content area. 
 * This is true regardless of whether the project is open or closed.
 * &lt;/p&gt;
 * &lt;p&gt;
 * If this resource is a file or folder under a project that exists,
 * this method returns a (non-&lt;code&gt;null&lt;/code&gt;) path computed from
 * the location of project's local content area and the project-relative
 * path of the file or folder. This is true regardless of whether the 
 * file or folders exists, or whether the project is open or closed.
 * &lt;/p&gt;
 * &lt;p&gt;
 * If this resource is a project that does not exist in the workspace,
 * or a file or folder below such a project, this method returns
 * &lt;code&gt;null&lt;/code&gt;.
 * &lt;/p&gt;
 * &lt;p&gt;
 * This method also returns &lt;code&gt;null&lt;/code&gt; if this resource is the
 * workspace root.
 * &lt;/p&gt;
 * 
 * @return the absolute path of this resource in the local file system,
 *  or &lt;code&gt;null&lt;/code&gt; if no path can be determined
 * @see IProjectDescription#setLocation
 */
Jeem's wording sounds good, except for the workspace root case.  We currently 
return the location of the workspace content area for the root case.  This seems 
reasonable, as it is the only way to find out the location of the workspace 
content area.  This means we need something like,

 * &lt;p&gt;
 * If this resource is the workspace root, this method returns
 * the path of the workspace local content area.
 * &lt;/p&gt;
I disagree. I think it is more appropraite to say that the workspace root has
no location in the file system than to equate it with the default location
for projects.  Platform.getLocation returns the location of the Eclipse
platform working directory (which we think of as the workspace, but is
technically a core runtime notion rather than a core resources notion).

Then we'd also have to change the API and implementation for the reciprocal 
method, IWorkspaceRoot#getContainerForLocation(IPath).  It says,

/**
 * Returns a handle to the  workspace root, project or folder 
 * which is mapped to the given path
 * in the local file system, or &lt;code&gt;null&lt;/code&gt; if none.
 * If the path maps to the platform working location, the returned object
 * will be of type &lt;code&gt;ROOT&lt;/code&gt;.  
 ...


Good point. Given that the API is already committed to getLocation returning
non-null for the workspace root, I'd change IResource.getLocation to say

 * &lt;p&gt;
 * If this resource is the workspace root, this method returns
 * the absolute local file system path of the platform working area.
 * &lt;/p&gt;
 
and add

 * @see Platform#getLocation

Released fix with Jeem's suggested wording.</WithStack>
    <WithOutStack>IResource.getLocation should be clarified to say exactly what happens when the 
resource does not exist in the workspace.

It is currently unclear and could be interpreted in a couple of ways since 
(even thought the resource may not exist) the resource location can be computed 
from the project root content location.
I suggest we change the javadoc to be aligned with the implementation.  If the 
project does not exist, it would be misleading for us to guess that it would be 
at the default location.  I suggest adding the following sentence to the 
javadoc:

"Returns null if this resource is a project that does not exist, or is a member 
of a project that does not exist."

I'll release this fix if it sounds reasonable to you.
The suggested wording does a good job of the case where the project does 
not exist.

It should also say what happens when the project does exist but the
resource does not. In this case, it the local file system path of
the file or folder can still be calculated and returned. I think this
method should be spec'd to do this.

Ok, then we should just specify the exact case where null is returned.  Then it 
is clear that all other cases return a non-null value.  Here is the suggested 
complete javadoc:

/**
 * Returns the path in the local file system to this resource, or
 * &lt;code&gt;null&lt;/code&gt; if this resource is a project that does not exist, or is 
 * a member of a project that does not exist.  
 * 
 * &lt;p&gt;
 * If this resource is a project, this returns a path to the
 * project's local content area.  If this resource is not a 
 * project, it need not exist.
 * &lt;/p&gt;
 *
 * @return the path of this resource in the local file system, or null
 * @see IProjectDescription#setLocation
 */
I find the wording a little confusing. How about something like:

/**
 * Returns the path in the local file system to this resource, or
 * &lt;code&gt;null&lt;/code&gt;. 
 *
 * &lt;p&gt;
 * If this resource is a project, this method returns a path to the
 * project's local content area. The location for files and folders 
 * which do not exist in the workspace is always non-null if the 
 * project itself exists. (the location is computed based on the project's
 * location)
 * &lt;/p&gt;
 * &lt;p&gt;
 * Returns &lt;code&gt;null&lt;/code&gt; if:
 * &lt;ul&gt;
 * &lt;li&gt; if this resource is a project that does not exist
 * &lt;li&gt; if this resource is a member of a project that does not exist
 * &lt;/ul&gt;
 * &lt;/p&gt;
 * 
 * @return the path of this resource in the local file system, or null
 * @see IProjectDescription#setLocation
 */
Let me take a crack at it.

/**
 * Returns the absolute path in the local file system to this resource, 
 * or &lt;code&gt;null&lt;/code&gt; if no path can be determined.
 * &lt;p&gt;
 * If this resource is a project that exists in the workspace, this
 * method returns the path to the project's local content area. 
 * This is true regardless of whether the project is open or closed.
 * &lt;/p&gt;
 * &lt;p&gt;
 * If this resource is a file or folder under a project that exists,
 * this method returns a (non-&lt;code&gt;null&lt;/code&gt;) path computed from
 * the location of project's local content area and the project-relative
 * path of the file or folder. This is true regardless of whether the 
 * file or folders exists, or whether the project is open or closed.
 * &lt;/p&gt;
 * &lt;p&gt;
 * If this resource is a project that does not exist in the workspace,
 * or a file or folder below such a project, this method returns
 * &lt;code&gt;null&lt;/code&gt;.
 * &lt;/p&gt;
 * &lt;p&gt;
 * This method also returns &lt;code&gt;null&lt;/code&gt; if this resource is the
 * workspace root.
 * &lt;/p&gt;
 * 
 * @return the absolute path of this resource in the local file system,
 *  or &lt;code&gt;null&lt;/code&gt; if no path can be determined
 * @see IProjectDescription#setLocation
 */
Jeem's wording sounds good, except for the workspace root case.  We currently 
return the location of the workspace content area for the root case.  This seems 
reasonable, as it is the only way to find out the location of the workspace 
content area.  This means we need something like,

 * &lt;p&gt;
 * If this resource is the workspace root, this method returns
 * the path of the workspace local content area.
 * &lt;/p&gt;
I disagree. I think it is more appropraite to say that the workspace root has
no location in the file system than to equate it with the default location
for projects.  Platform.getLocation returns the location of the Eclipse
platform working directory (which we think of as the workspace, but is
technically a core runtime notion rather than a core resources notion).

Then we'd also have to change the API and implementation for the reciprocal 
method, IWorkspaceRoot#getContainerForLocation(IPath).  It says,

/**
 * Returns a handle to the  workspace root, project or folder 
 * which is mapped to the given path
 * in the local file system, or &lt;code&gt;null&lt;/code&gt; if none.
 * If the path maps to the platform working location, the returned object
 * will be of type &lt;code&gt;ROOT&lt;/code&gt;.  
 ...


Good point. Given that the API is already committed to getLocation returning
non-null for the workspace root, I'd change IResource.getLocation to say

 * &lt;p&gt;
 * If this resource is the workspace root, this method returns
 * the absolute local file system path of the platform working area.
 * &lt;/p&gt;
 
and add

 * @see Platform#getLocation

Released fix with Jeem's suggested wording.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="10999" />
    <CreationDate amount="2002-03-07 16:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[Perspectives] Feature Request: ability to change perspective icon</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>When you create a new perspective, the icon of the current perspective is the 
icon used for the newly created perspective.  Currently, there is no way to 
change this icon to a new icon.  

I would like this new icon to be a selection of the existing icons with the 
ability to add icons.
Interesting idea. Would you be willing to contribute the code that implements 
this feature?
When I get some time, I might be able to take a look at this.
Niel,

If you implement this feature, please attach it as a patch to this defect 
report. 
When you save a perspective, it appears that it is saved in workbench.xml in
your .metadata folder.  Specifically, under org.eclipse.ui.workbench.  The new
perspective contains the ID of the perspective it came from, and that is where
the icon is pulled from.

Perhaps a new attribute named "icon" could be added to this XML (or perhaps
already is supported).  This would allow a user to edit the file to point to a
new icon, and eventually someone could add UI that does the same?

Icon, would probably need to be able to accept an arbitrary full path to the image.

So I guess I am asking for the infrastructure to allow this feature to be put in
place.  The UI can come later.
See also bug 65318.
*** Bug 112111 has been marked as a duplicate of this bug. ***
There are currently no plans to work on this feature
Tod, no plans to work on this means WONTFIX?? Sorry but i think the helpwanted keyword is better in this case. Maybe I'll look at this the next days
Just shaking the trees to see who is still interested. I'll reopen and add the helpwanted.
Tod, shouldn't this bug depend on bug 118296? Just want to note this...
It might do - lets add the dependency anyways so that we can track it (a "related to" field in Bugzilla would be nice...).
There are currently no plans to work on this feature.

PW

Changes requested on bug 193523
I just wanted to give this issue a bump.

Tied to this is my desire (currently unsupported) for the programmatic specification of the perspective icon.  It would seem that in the current implementation (Eclipse 3.3), the *only* way to associate an icon with a perspective is via the extension spec in the plugin's manifest.

The problem with this is that the specified icon must exist somewhere in the plugin bundle.  This introduces an inefficency in which icon images must exist as copies all over the place in many plugins just to reuse the same image.  In my particular case, for example, I have product branding icons in a plugin dedicted to such product related things.  I have other plugins that specify perspectives for my particular tool application.  There is no way to have these other plugins reference the icons in my product bundle... I am forced to copy my product branding icons to every such bundle in which they are needed.

Even something as simple as a "public Image getImage()" method in the IPerspectiveFactory interface (which is then employed by the workbench) might go a long way to solving the problem.  This would allow the workbench to obtain the image dynamically, instead of once at startup from the associated extension spec, and allow the client implementation of IPerspectiveFactory some flexibility in terms of the location from which the image is retrieved.

There are no plans to work on this or bug 118296 in 3.4.  However, I would consider patches if submitted.

PW</WithStack>
    <WithOutStack>When you create a new perspective, the icon of the current perspective is the 
icon used for the newly created perspective.  Currently, there is no way to 
change this icon to a new icon.  

I would like this new icon to be a selection of the existing icons with the 
ability to add icons.
Interesting idea. Would you be willing to contribute the code that implements 
this feature?
When I get some time, I might be able to take a look at this.
Niel,

If you implement this feature, please attach it as a patch to this defect 
report. 
When you save a perspective, it appears that it is saved in workbench.xml in
your .metadata folder.  Specifically, under org.eclipse.ui.workbench.  The new
perspective contains the ID of the perspective it came from, and that is where
the icon is pulled from.

Perhaps a new attribute named "icon" could be added to this XML (or perhaps
already is supported).  This would allow a user to edit the file to point to a
new icon, and eventually someone could add UI that does the same?

Icon, would probably need to be able to accept an arbitrary full path to the image.

So I guess I am asking for the infrastructure to allow this feature to be put in
place.  The UI can come later.
See also bug 65318.
*** Bug 112111 has been marked as a duplicate of this bug. ***
There are currently no plans to work on this feature
Tod, no plans to work on this means WONTFIX?? Sorry but i think the helpwanted keyword is better in this case. Maybe I'll look at this the next days
Just shaking the trees to see who is still interested. I'll reopen and add the helpwanted.
Tod, shouldn't this bug depend on bug 118296? Just want to note this...
It might do - lets add the dependency anyways so that we can track it (a "related to" field in Bugzilla would be nice...).
There are currently no plans to work on this feature.

PW

Changes requested on bug 193523
I just wanted to give this issue a bump.

Tied to this is my desire (currently unsupported) for the programmatic specification of the perspective icon.  It would seem that in the current implementation (Eclipse 3.3), the *only* way to associate an icon with a perspective is via the extension spec in the plugin's manifest.

The problem with this is that the specified icon must exist somewhere in the plugin bundle.  This introduces an inefficency in which icon images must exist as copies all over the place in many plugins just to reuse the same image.  In my particular case, for example, I have product branding icons in a plugin dedicted to such product related things.  I have other plugins that specify perspectives for my particular tool application.  There is no way to have these other plugins reference the icons in my product bundle... I am forced to copy my product branding icons to every such bundle in which they are needed.

Even something as simple as a "public Image getImage()" method in the IPerspectiveFactory interface (which is then employed by the workbench) might go a long way to solving the problem.  This would allow the workbench to obtain the image dynamically, instead of once at startup from the associated extension spec, and allow the client implementation of IPerspectiveFactory some flexibility in terms of the location from which the image is retrieved.

There are no plans to work on this or bug 118296 in 3.4.  However, I would consider patches if submitted.

PW</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="11000" />
    <CreationDate amount="2002-03-07 17:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JUnit supportfor TestSuites</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>A few of Eclipse 2.0 revs ago, the JUnit UI supported running TestSuites from 
within the Eclipse JUnit framework.  The 20020307 integration build reports 
that no test cases were found within the selected test suite.
cannot reproduce anymore.</WithStack>
    <WithOutStack>A few of Eclipse 2.0 revs ago, the JUnit UI supported running TestSuites from 
within the Eclipse JUnit framework.  The 20020307 integration build reports 
that no test cases were found within the selected test suite.
cannot reproduce anymore.</WithOutStack>
  </Bug>
</infozilla-output>

