<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="110001" />
    <CreationDate amount="2005-09-20 08:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Autocompletion takes up to 15 sec for proposal</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="assignment">
        <location start="28" end="62" />
        <code>JLabel myLabel=new JLabel("test");</code>
      </source_code>
      <source_code type="import">
        <location start="418" end="444" />
        <code>import javax.swing.JLabel;</code>
      </source_code>
      <source_code type="class">
        <location start="445" end="533" />
        <code>public class CABug {
	void foo() {
		JLabel myLabel=new JLabel("test");
		myLabel.s
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When I type the following:

JLabel myLabel=new JLabel("test");
myLabel.s

then I have to wait at least 10 secs till the first proposal arrives. The 's'
brings a blank toolTip and then I have to wait till the scrollbar is shown which
indicates: 'Something will appear within the next few secs.'

Isn't there a way to speed up this process?
Using I20050920-0010 the list comes immediately using the following test case:
import javax.swing.JLabel;
public class CABug {
	void foo() {
		JLabel myLabel=new JLabel("test");
		myLabel.s
	}
}

Please provide reproducible steps. See also:
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-text-home/development/bug-incomplete.htm</WithStack>
    <WithOutStack>When I type the following:

JLabel myLabel=new JLabel("test");
myLabel.s

then I have to wait at least 10 secs till the first proposal arrives. The 's'
brings a blank toolTip and then I have to wait till the scrollbar is shown which
indicates: 'Something will appear within the next few secs.'

Isn't there a way to speed up this process?
Using I20050920-0010 the list comes immediately using the following test case:
import javax.swing.JLabel;
public class CABug {
	void foo() {
		JLabel myLabel=new JLabel("test");
		myLabel.s
	}
}

Please provide reproducible steps. See also:
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-text-home/development/bug-incomplete.htm</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110002" />
    <CreationDate amount="2005-09-20 08:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>rename package caused error</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="import">
        <location start="777" end="820" />
        <code>import com.sac.qweb.data.x.NonPerturbative;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>setup: i have two source folders, qweb and qweb-api. in each, there is a package
named com.sac.qweb.data. in qweb-api/com.sac.qweb.data there is interface
IAccountData. each method of interface has @NonPerturbative annotation, where
@NonPerturbative is in other source folder but same package qweb/com.sac.qweb.data. 

i renamed qweb-api/com.sac.qweb.data to qweb-api/com.sac.qweb.data.x and
resulting error was "NonPerturbative cannot be resolved to a type". thus,
refactoring (renaming package) failed to find existing reference to annotation
com.sac.qweb.cache.NonPerturbative in the other source directory (qweb).
I've tried with Refactor-&gt;Rename and it works well (using 3.1 official build
I20050627-1435). Refactor operation includes an import in IAccoundData interface:
import com.sac.qweb.data.x.NonPerturbative;
and everything is OK after the rename...

How do you rename your package? If you renamed it in editor, it's clear it could
not work properly...

Closing as REMIND since no feedback for comment 1.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>setup: i have two source folders, qweb and qweb-api. in each, there is a package
named com.sac.qweb.data. in qweb-api/com.sac.qweb.data there is interface
IAccountData. each method of interface has @NonPerturbative annotation, where
@NonPerturbative is in other source folder but same package qweb/com.sac.qweb.data. 

i renamed qweb-api/com.sac.qweb.data to qweb-api/com.sac.qweb.data.x and
resulting error was "NonPerturbative cannot be resolved to a type". thus,
refactoring (renaming package) failed to find existing reference to annotation
com.sac.qweb.cache.NonPerturbative in the other source directory (qweb).
I've tried with Refactor-&gt;Rename and it works well (using 3.1 official build
I20050627-1435). Refactor operation includes an import in IAccoundData interface:
import com.sac.qweb.data.x.NonPerturbative;
and everything is OK after the rename...

How do you rename your package? If you renamed it in editor, it's clear it could
not work properly...

Closing as REMIND since no feedback for comment 1.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110003" />
    <CreationDate amount="2005-09-20 08:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[content assist] Strange cycling behaviour</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- in the Java editor type for and press Ctrl + Shift + Space</Line>
          <Line>- templates show up</Line>
          <Line>The dialog reads: Press 'Ctrl + Space' for templates</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20050920

- Go to the keys preference page and configure Ctrl + Shift + Space to
'Specific Content Assist (type: Template proposals)', change the normal Content
Assist from Ctrl + Space to somthing else

- in the Java editor type for and press Ctrl + Shift + Space
- templates show up
  The dialog reads: Press 'Ctrl + Space' for templates

-&gt; Should probably be 'Ctrl + Shift + Space', 'Ctrl + Space' isn't doing
anything anymore (as I redefied the setting)
-&gt; Switching to templates isn't really that useful




  move the cursor one back. Suddly you get all proposals
- the key binding is only read out when the editor is created, not every time
code assist is invoked (for performance reasons)

- the second problem is more serious: when invoking a specific content assist
command, cycling will continue as usual with the next proposal categories. It
would be better if the content assistant would detect the rank of the current
category in the iteration order and continue from there.
Ignore the last line of the bug description, this is a different bug I will file.



&gt;- the key binding is only read out when the editor is created, not every time
&gt;code assist is invoked (for performance reasons)
Is performance really an issue here?

Tom, please investigate a fix for M2.
investigating...
The key binding display has been fixed and can be included into M2.

Still investigating the second item.
re comment 5: this is handled by bug 110165.
fixed &gt; 20050922

When invoking a specific proposal category directly, no cycling affordance is
shown and cycling mode is turned off.
Verified in I20051102-1600</WithStack>
    <WithOutStack>20050920

- Go to the keys preference page and configure Ctrl + Shift + Space to
'Specific Content Assist (type: Template proposals)', change the normal Content
Assist from Ctrl + Space to somthing else

- in the Java editor type for and press Ctrl + Shift + Space
- templates show up
  The dialog reads: Press 'Ctrl + Space' for templates

-&gt; Should probably be 'Ctrl + Shift + Space', 'Ctrl + Space' isn't doing
anything anymore (as I redefied the setting)
-&gt; Switching to templates isn't really that useful




  move the cursor one back. Suddly you get all proposals
- the key binding is only read out when the editor is created, not every time
code assist is invoked (for performance reasons)

- the second problem is more serious: when invoking a specific content assist
command, cycling will continue as usual with the next proposal categories. It
would be better if the content assistant would detect the rank of the current
category in the iteration order and continue from there.
Ignore the last line of the bug description, this is a different bug I will file.



&gt;- the key binding is only read out when the editor is created, not every time
&gt;code assist is invoked (for performance reasons)
Is performance really an issue here?

Tom, please investigate a fix for M2.
investigating...
The key binding display has been fixed and can be included into M2.

Still investigating the second item.
re comment 5: this is handled by bug 110165.
fixed &gt; 20050922

When invoking a specific proposal category directly, no cycling affordance is
shown and cycling mode is turned off.
Verified in I20051102-1600</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110004" />
    <CreationDate amount="2005-09-20 08:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Sync Info] file delete failure on update causes files to be added as new</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>My project has a lib dir in which we keep our jar files checked in (yes,
i know this isn't a great idea). Our project relies on a second project
within our organization. Regularly, we rebuild and replace the second
project jar file. When we do this, we remove the existing file
"jstor-common-20050916.jar" from CVS and then add a new file
"jstor-common-DATE.jar".

Now, we also use the patch mechanism. We create a patch and then apply
it on a developer integration machine. When applying the patch, it shows
that the jar file should be removed, but then it fails to remove
it.(This might be a windows file issue) Regardless, I do whatever I need
to remove the file and then commit the changes to CVS.

Here's where the problem happens. On another developers machine, they
synchronize with the checked in files. This also seems to fail removing
the jar file. Now, however, as soon as this other developer creates a
patch, Eclipse tries to re-checkin the deleted jar file as if they had
added it. I don't see this problem with .java files, so maybe it's just
a binary file problem, or maybe windows is just preventing the file from
being deleted and the synch doesn't show the error.

UPDATE: The Error Log does show that Eclipse could not delete the jar file.


Here's the email response I received:

Could you log a bug for this against Platform CVS. I suspect what is happening
is that the remove fails because the file is probably in use by the OS. What is
troubling is that the sync info for the file is then lost, causing it to become
an outgoing addition.

Michael
We do not plan to address this in 3.3.
I am not able to reproduce this failure.</WithStack>
    <WithOutStack>My project has a lib dir in which we keep our jar files checked in (yes,
i know this isn't a great idea). Our project relies on a second project
within our organization. Regularly, we rebuild and replace the second
project jar file. When we do this, we remove the existing file
"jstor-common-20050916.jar" from CVS and then add a new file
"jstor-common-DATE.jar".

Now, we also use the patch mechanism. We create a patch and then apply
it on a developer integration machine. When applying the patch, it shows
that the jar file should be removed, but then it fails to remove
it.(This might be a windows file issue) Regardless, I do whatever I need
to remove the file and then commit the changes to CVS.

Here's where the problem happens. On another developers machine, they
synchronize with the checked in files. This also seems to fail removing
the jar file. Now, however, as soon as this other developer creates a
patch, Eclipse tries to re-checkin the deleted jar file as if they had
added it. I don't see this problem with .java files, so maybe it's just
a binary file problem, or maybe windows is just preventing the file from
being deleted and the synch doesn't show the error.

UPDATE: The Error Log does show that Eclipse could not delete the jar file.


Here's the email response I received:

Could you log a bug for this against Platform CVS. I suspect what is happening
is that the remove fails because the file is probably in use by the OS. What is
troubling is that the sync info for the file is then lost, causing it to become
an outgoing addition.

Michael
We do not plan to address this in 3.3.
I am not able to reproduce this failure.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110005" />
    <CreationDate amount="2005-09-20 08:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Shift F10 - using context menu key makes menu pop up in wrong place</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1) Select an element in the treeview on the left</Line>
          <Line>(Outlook's folder tree, Eclipse's navigator)</Line>
          <Line>2) Position the mouse pointer out in the view to the right</Line>
          <Line>(Outlook's mail header list, Eclipse's editor pane)</Line>
          <Line>3) Press the context menu key on the keyboard.</Line>
          <Line>Outlook: popup menu displays below the selected folder</Line>
          <Line>Eclipse: popup menu displays below the mouse pointer in the editor pane</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>There is a behavioral quirk in the handling of the context menu "right mouse 
button" keyboard key located to the right of the space bar. In Eclipse, when 
pressing this key, the corresponding menu pops up under the mouse pointer 
instead of below the focused element which is the standard behaviour.
Compare f ex with Outlook:
1) Select an element in the treeview on the left 
   (Outlook's folder tree, Eclipse's navigator)
2) Position the mouse pointer out in the view to the right 
   (Outlook's mail header list, Eclipse's editor pane)
3) Press the context menu key on the keyboard.
   Outlook: popup menu displays below the selected folder
   Eclipse: popup menu displays below the mouse pointer in the editor pane

Showing the popup menu belonging to the navigator pane inside the editor pane 
may be confusing and is also non-standard comparing with major Windows 
applications.

This quirk is related, but not equivalent to, 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=75766 as there may need to be a 
discussion on whether SWT should mimic the exact API behaviour of win32 (and 
the fixes should go into Eclipse code) or whether it should do what 
applications normally want to do.
See bug 5892, bug 100557.
*** Bug 100557 has been marked as a duplicate of this bug. ***
*** Bug 71883 has been marked as a duplicate of this bug. ***
*** Bug 180092 has been marked as a duplicate of this bug. ***
How hard is it to fix this? Isn't it just a matter of recognizing that the menu request came from the keyboard rather than the mouse and using the view bounds rather than the mouse position when popping it up?

The current behavior is actually irritating if you are driving Eclipse entirely via the keyboard.
We don't know the bounds of the selection so it's difficult for us to place the menu in the correct location. In the future we could add API to let MenuDetect listeners know that the event is coming from the keyboard so that the location of the menu could be set at the application level. Not for 3.4 though.
(In reply to comment #6)
&gt; We don't know the bounds of the selection...
&gt;
I'm not sure I understand this. All I was asking for was to get the menu to pop up centered over the *control* that it is associated with. 
&gt; All I was asking for was to get the menu to pop
&gt; up centered over the *control* that it is associated with. 

-1 for centering over the control. This would often make the menu overlap the selected item. I wouldn't start playing with this so late in the game...

Note that e.g. the Refactoring and Show In quick menus (Alt+Shift+R/W) already implement this request (Plat/UI API request is bug 151711), but only for a limited set of controls (StyledText, Tree, Table).
(In reply to comment #7)
&gt; (In reply to comment #6)
&gt; &gt; We don't know the bounds of the selection...
&gt; &gt;
&gt; I'm not sure I understand this. All I was asking for was to get 
&gt; the menu to pop up centered over the *control* that it is 
&gt; associated with. 

[Nice name, Mike :-)]
I think what Kevin refers to is the functionality you can see in f ex Outlook, that when pressing the context meny key the menu will pop up just below the selected item in the focused control.
Your suggestion is certainly an ok compromise on the way to that goal.

(In reply to comment #6)
&gt; We don't know the bounds of the selection so it's difficult for 
&gt; us to place the menu in the correct location. In the future we 
&gt; could add API to let MenuDetect listeners know that the event is 
&gt; coming from the keyboard so that the location of the menu could 
&gt; be set at the application level. Not for 3.4 though.

IMO this API should involve the application as little as possible
and the SWT widget as much as possible, as the respective widget
(f ex List, Tree or DateTime) has the best chance of saying where
the menu should be placed depending on selection.
Without being an SWT expert, I am thinking about something like
having the widget fill these coordinates into the MenuDetectEvent, 
either in the existing x/y members or in new ones.
The doc for WM_CONTEXTMENU Notification states that the menu should be placed at the location of the current selection when the context menu is opened from the keyboard. In my previous comment I was essentially saying that we don't always know where the selection is so we can't always locate the menu in the correct place. API would be needed in this case to tell users in the Show event that the menu was opened from the keyboard.

Centering the menu over the control is a potential workaround, but as Markus stated, this could obscure the current selection. I don't know if that would be more or less disruptive to users than our current situation. To be honest, I just don't open context menus from the keyboard enough to have an opinion either way.

I'll try making a patch that centers the menu over the control.
(In reply to comment #9)
&gt; [Nice name, Mike :-)]
&gt;
Indeed! That's one of the reasons why I ended up being called "McQ" -- there seem to be lots of those in the world too, but many fewer than the number of Mike Wilsons.



Because a menu can be opened in a number of different ways, this is more complicated than just detecting a key press and using a different location. We tried to find a solution, but feel it's too late to make this change for 3.4.
Ok, bad luck, but I'm still very happy that you have started working on it. 
(hey, getting it fixed in 3.5 will just be an 0.4 increment since I reported it ;-)

When you do plan your design changes I would you suggest you look at
https://bugs.eclipse.org/bugs/show_bug.cgi?id=75766
at the same time, as there may be some overlapping concerns on how to distribute widget vs framework responsibilities.

Best regards
Mike
So can we put the 3.5 target on this?


Sure.
&gt; I am thinking about something like
&gt; having the widget fill these coordinates into the MenuDetectEvent, 
&gt; either in the existing x/y members or in new ones.

My thoughts as well.  We'll need to implement something for each native control.  To implement this for custom controls, they can listen for MenuDetect and set the x and y fields in the event for subsequent listeners in the chain.
Hi Steve,

Is there an outlook for this defect?  Is it going to be fixed in Eclipse 3.5 (as it's currently targeted at)?  This is currently affecting our accessibility test.

Thanks,
Kathy
Actually, this problem was found during our accessibility test but does not really affect accessibility.  So you could ignore comment #17.
As a first step in fixing this bug, new API was added so that custom controls can tell if the menu detect is from the mouse or keyboard. This lets them set the x, y location of the context menu based on control-specific selection or focus.
This will be in 3.8/4.2 M6 (API freeze milestone).
See bug 374147 for details.
(In reply to comment #19)
I've released bug 374320, so that the new API will be used in the Open Context Menu command. Filed bug 375723 and bug 375721 for follow-up problems.
(In reply to comment #20)
Thanks, Markus. I am just getting to these today. I really appreciate that you have given inspirational sample code in those 2 bugs.  :)  I'll be in touch.
In 3.8/4.2 M7, Windows 7, custom context menus are now placed at the control's desired location when I press the menu key or Shift+F10.

The native Text menu always opens centered on the Text control and doesn't use the same location as a custom menu (which opens below the caret). This may just be OS behavior.


But non-native menus are not all handled the same:

- On Table, Tree and Text, Shift+F10 uses SWT's location, but the ContextMenuHandler doesn't get SWT's location when it sends the SWT.MenuDetect event as suggested in bug 374320.

- In contrast, StyledText handles the SWT.MenuDetect event and thus places both the Shift+F10 menu as well as the ContextMenuHandler's menu at SWT's location.

The behavior of native control and custom controls should be the same, preferably that both us SWT's location all the time.</WithStack>
    <WithOutStack>There is a behavioral quirk in the handling of the context menu "right mouse 
button" keyboard key located to the right of the space bar. In Eclipse, when 
pressing this key, the corresponding menu pops up under the mouse pointer 
instead of below the focused element which is the standard behaviour.
Compare f ex with Outlook:
1) Select an element in the treeview on the left 
   (Outlook's folder tree, Eclipse's navigator)
2) Position the mouse pointer out in the view to the right 
   (Outlook's mail header list, Eclipse's editor pane)
3) Press the context menu key on the keyboard.
   Outlook: popup menu displays below the selected folder
   Eclipse: popup menu displays below the mouse pointer in the editor pane

Showing the popup menu belonging to the navigator pane inside the editor pane 
may be confusing and is also non-standard comparing with major Windows 
applications.

This quirk is related, but not equivalent to, 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=75766 as there may need to be a 
discussion on whether SWT should mimic the exact API behaviour of win32 (and 
the fixes should go into Eclipse code) or whether it should do what 
applications normally want to do.
See bug 5892, bug 100557.
*** Bug 100557 has been marked as a duplicate of this bug. ***
*** Bug 71883 has been marked as a duplicate of this bug. ***
*** Bug 180092 has been marked as a duplicate of this bug. ***
How hard is it to fix this? Isn't it just a matter of recognizing that the menu request came from the keyboard rather than the mouse and using the view bounds rather than the mouse position when popping it up?

The current behavior is actually irritating if you are driving Eclipse entirely via the keyboard.
We don't know the bounds of the selection so it's difficult for us to place the menu in the correct location. In the future we could add API to let MenuDetect listeners know that the event is coming from the keyboard so that the location of the menu could be set at the application level. Not for 3.4 though.
(In reply to comment #6)
&gt; We don't know the bounds of the selection...
&gt;
I'm not sure I understand this. All I was asking for was to get the menu to pop up centered over the *control* that it is associated with. 
&gt; All I was asking for was to get the menu to pop
&gt; up centered over the *control* that it is associated with. 

-1 for centering over the control. This would often make the menu overlap the selected item. I wouldn't start playing with this so late in the game...

Note that e.g. the Refactoring and Show In quick menus (Alt+Shift+R/W) already implement this request (Plat/UI API request is bug 151711), but only for a limited set of controls (StyledText, Tree, Table).
(In reply to comment #7)
&gt; (In reply to comment #6)
&gt; &gt; We don't know the bounds of the selection...
&gt; &gt;
&gt; I'm not sure I understand this. All I was asking for was to get 
&gt; the menu to pop up centered over the *control* that it is 
&gt; associated with. 

[Nice name, Mike :-)]
I think what Kevin refers to is the functionality you can see in f ex Outlook, that when pressing the context meny key the menu will pop up just below the selected item in the focused control.
Your suggestion is certainly an ok compromise on the way to that goal.

(In reply to comment #6)
&gt; We don't know the bounds of the selection so it's difficult for 
&gt; us to place the menu in the correct location. In the future we 
&gt; could add API to let MenuDetect listeners know that the event is 
&gt; coming from the keyboard so that the location of the menu could 
&gt; be set at the application level. Not for 3.4 though.

IMO this API should involve the application as little as possible
and the SWT widget as much as possible, as the respective widget
(f ex List, Tree or DateTime) has the best chance of saying where
the menu should be placed depending on selection.
Without being an SWT expert, I am thinking about something like
having the widget fill these coordinates into the MenuDetectEvent, 
either in the existing x/y members or in new ones.
The doc for WM_CONTEXTMENU Notification states that the menu should be placed at the location of the current selection when the context menu is opened from the keyboard. In my previous comment I was essentially saying that we don't always know where the selection is so we can't always locate the menu in the correct place. API would be needed in this case to tell users in the Show event that the menu was opened from the keyboard.

Centering the menu over the control is a potential workaround, but as Markus stated, this could obscure the current selection. I don't know if that would be more or less disruptive to users than our current situation. To be honest, I just don't open context menus from the keyboard enough to have an opinion either way.

I'll try making a patch that centers the menu over the control.
(In reply to comment #9)
&gt; [Nice name, Mike :-)]
&gt;
Indeed! That's one of the reasons why I ended up being called "McQ" -- there seem to be lots of those in the world too, but many fewer than the number of Mike Wilsons.



Because a menu can be opened in a number of different ways, this is more complicated than just detecting a key press and using a different location. We tried to find a solution, but feel it's too late to make this change for 3.4.
Ok, bad luck, but I'm still very happy that you have started working on it. 
(hey, getting it fixed in 3.5 will just be an 0.4 increment since I reported it ;-)

When you do plan your design changes I would you suggest you look at
https://bugs.eclipse.org/bugs/show_bug.cgi?id=75766
at the same time, as there may be some overlapping concerns on how to distribute widget vs framework responsibilities.

Best regards
Mike
So can we put the 3.5 target on this?


Sure.
&gt; I am thinking about something like
&gt; having the widget fill these coordinates into the MenuDetectEvent, 
&gt; either in the existing x/y members or in new ones.

My thoughts as well.  We'll need to implement something for each native control.  To implement this for custom controls, they can listen for MenuDetect and set the x and y fields in the event for subsequent listeners in the chain.
Hi Steve,

Is there an outlook for this defect?  Is it going to be fixed in Eclipse 3.5 (as it's currently targeted at)?  This is currently affecting our accessibility test.

Thanks,
Kathy
Actually, this problem was found during our accessibility test but does not really affect accessibility.  So you could ignore comment #17.
As a first step in fixing this bug, new API was added so that custom controls can tell if the menu detect is from the mouse or keyboard. This lets them set the x, y location of the context menu based on control-specific selection or focus.
This will be in 3.8/4.2 M6 (API freeze milestone).
See bug 374147 for details.
(In reply to comment #19)
I've released bug 374320, so that the new API will be used in the Open Context Menu command. Filed bug 375723 and bug 375721 for follow-up problems.
(In reply to comment #20)
Thanks, Markus. I am just getting to these today. I really appreciate that you have given inspirational sample code in those 2 bugs.  :)  I'll be in touch.
In 3.8/4.2 M7, Windows 7, custom context menus are now placed at the control's desired location when I press the menu key or Shift+F10.

The native Text menu always opens centered on the Text control and doesn't use the same location as a custom menu (which opens below the caret). This may just be OS behavior.


But non-native menus are not all handled the same:

- On Table, Tree and Text, Shift+F10 uses SWT's location, but the ContextMenuHandler doesn't get SWT's location when it sends the SWT.MenuDetect event as suggested in bug 374320.

- In contrast, StyledText handles the SWT.MenuDetect event and thus places both the Shift+F10 menu as well as the ContextMenuHandler's menu at SWT's location.

The behavior of native control and custom controls should be the same, preferably that both us SWT's location all the time.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110006" />
    <CreationDate amount="2005-09-20 08:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Common Logging" />
    <component amount="Platform.Execution.CBELogging" />
    <Version amount="4.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Guid algorithm hangs when the user's temp directory does not have write privileges.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Guid algorithm hangs when the user's temp directory does not have write 
privileges.

The Guid.getUniqueTimeStamp() method creates a unique time stamp (per host) by 
using a locking file since creating a file is the only truly atomic operation 
in Java.  The call to File.createNewFile() is blocking indefinitely when the 
current user does not have write privileges to the user's temp directory.

Consider checking if the file can be created before calling File.createNewFile
().
P2 Highly desirable and planned for this release, but not stop ship 
normal A problem making a function difficult to use but no special work around 
is required
Not sufficient resources to complete in TPTP v4.1 (i2).  As such, moving to 
TPTP 4.2.
Changing target to 4.1 (i2) since this defect is causing a problem for a 
consuming product.
Although this defect was not able to be reproduced, I have refactored the 
Guid#getUniqueTimeStamp() method to eliminate the possibility of hanging.  
However, the File#createNewFile() is a blocking call that may hang on some 
platforms.  Unfortunately, there is no method in the File class to determine if 
the caller has sufficient access on the local file system to write to 
particular directory.  For example, File#canWrite() is for a specific file and 
that file must exist.  As such, I have documented the requirement for write 
access on the local file system to the user's temporary directory and added a 
JUnit test for this condition.

Code and JUnit tests (Guid.java and GuidTest.java) checked in on October 20, 
2005 to CVS (HEAD).
Verified in TPTP_v4_1_0_200510220100.</WithStack>
    <WithOutStack>Guid algorithm hangs when the user's temp directory does not have write 
privileges.

The Guid.getUniqueTimeStamp() method creates a unique time stamp (per host) by 
using a locking file since creating a file is the only truly atomic operation 
in Java.  The call to File.createNewFile() is blocking indefinitely when the 
current user does not have write privileges to the user's temp directory.

Consider checking if the file can be created before calling File.createNewFile
().
P2 Highly desirable and planned for this release, but not stop ship 
normal A problem making a function difficult to use but no special work around 
is required
Not sufficient resources to complete in TPTP v4.1 (i2).  As such, moving to 
TPTP 4.2.
Changing target to 4.1 (i2) since this defect is causing a problem for a 
consuming product.
Although this defect was not able to be reproduced, I have refactored the 
Guid#getUniqueTimeStamp() method to eliminate the possibility of hanging.  
However, the File#createNewFile() is a blocking call that may hang on some 
platforms.  Unfortunately, there is no method in the File class to determine if 
the caller has sufficient access on the local file system to write to 
particular directory.  For example, File#canWrite() is for a specific file and 
that file must exist.  As such, I have documented the requirement for write 
access on the local file system to the user's temporary directory and added a 
JUnit test for this condition.

Code and JUnit tests (Guid.java and GuidTest.java) checked in on October 20, 
2005 to CVS (HEAD).
Verified in TPTP_v4_1_0_200510220100.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110007" />
    <CreationDate amount="2005-09-20 09:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="Core" />
    <Version amount="1.2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Create Ant build file with AJ support not working</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Since the creation of the new org.aspectj.weaver plugin, the create build.xml
support is broken.

There is a warning in the generated file:

taskdef A class needed by class org.aspectj.tools.ant.taskdefs.AjcTask cannot be
found: org/aspectj/bridge/IMessageHandler

And a similar error is given when the build is run.
The generated classpath needs to include aspectjweaver.jar
Need to update AJCTask.java
Fixed and test added</WithStack>
    <WithOutStack>Since the creation of the new org.aspectj.weaver plugin, the create build.xml
support is broken.

There is a warning in the generated file:

taskdef A class needed by class org.aspectj.tools.ant.taskdefs.AjcTask cannot be
found: org/aspectj/bridge/IMessageHandler

And a similar error is given when the build is run.
The generated classpath needs to include aspectjweaver.jar
Need to update AJCTask.java
Fixed and test added</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110008" />
    <CreationDate amount="2005-09-20 09:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Markers] Problems view preferences missing mnemonics</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>20050920

There are no mnemonics on the problems view preference dialog
*** Bug 110055 has been marked as a duplicate of this bug. ***
This is fixed in 3.2 M6</WithStack>
    <WithOutStack>20050920

There are no mnemonics on the problems view preference dialog
*** Bug 110055 has been marked as a duplicate of this bug. ***
This is fixed in 3.2 M6</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110009" />
    <CreationDate amount="2005-09-20 09:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[implementation] Java editor updates two marker annotation models</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050920-0010

The file buffer creates is resource marker annotation model which listens to
deltas and the CU document provider creates its own CU annotation model which 
also processes the same marker deltas.
Will try to find a fix for M2.
This has been fixed yesterday and went into I20050921-0010.
Verified in I20050921-0010.</WithStack>
    <WithOutStack>I20050920-0010

The file buffer creates is resource marker annotation model which listens to
deltas and the CU document provider creates its own CU annotation model which 
also processes the same marker deltas.
Will try to find a fix for M2.
This has been fixed yesterday and went into I20050921-0010.
Verified in I20050921-0010.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110010" />
    <CreationDate amount="2005-09-20 09:43:00 -0400" />
    <DupId amount="89610" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[KeyBindings] IllegalArgumentException in KeySequenceText</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437330579395">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>All triggers in a trigger sequence must be
an instance of Trigger</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jface.bindings.TriggerSequence.&lt;init&gt;(TriggerSequence.java:72)</Frame>
          <Frame depth="1">org.eclipse.jface.bindings.keys.KeySequence.&lt;init&gt;(KeySequence.java:190)</Frame>
          <Frame depth="2">org.eclipse.jface.bindings.keys.KeySequence.getInstance(KeySequence.java:129)</Frame>
          <Frame depth="3">org.eclipse.jface.bindings.keys.KeySequenceText$KeyTrapListener.handleEvent(KeySequenceText.java:127)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1050)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1074)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1086)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.gtk_key_press_event(Widget.java:640)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:1965)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Text.gtk_key_press_event(Text.java:1188)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1395)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.windowProc(Display.java:3490)</Frame>
          <Frame depth="14">org.eclipse.swt.internal.gtk.OS._gtk_main_do_event(Native Method)</Frame>
          <Frame depth="15">org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(OS.java:4891)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Display.eventProc(Display.java:1059)</Frame>
          <Frame depth="17">org.eclipse.swt.internal.gtk.OS._g_main_context_iteration(Native Method)</Frame>
          <Frame depth="18">org.eclipse.swt.internal.gtk.OS.g_main_context_iteration(OS.java:1271)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2603)</Frame>
          <Frame depth="20">org.eclipse.jface.window.Window.runEventLoop(Window.java:809)</Frame>
          <Frame depth="21">org.eclipse.jface.window.Window.open(Window.java:787)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:66)</Frame>
          <Frame depth="23">org.eclipse.jface.action.Action.runWithEvent(Action.java:996)</Frame>
          <Frame depth="24">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)</Frame>
          <Frame depth="25">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)</Frame>
          <Frame depth="26">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1050)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2909)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2605)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1755)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1719)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:368)</Frame>
          <Frame depth="34">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)</Frame>
          <Frame depth="36">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="37">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:377)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:164)</Frame>
          <Frame depth="39">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="40">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="41">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="42">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)</Frame>
          <Frame depth="44">org.eclipse.core.launcher.Main.basicRun(Main.java:282)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.run(Main.java:977)</Frame>
          <Frame depth="46">org.eclipse.core.launcher.Main.main(Main.java:952)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437330579395">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason>The triggers cannot be null</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jface.bindings.TriggerSequence.&lt;init&gt;(TriggerSequence.java:67)</Frame>
          <Frame depth="1">org.eclipse.jface.bindings.keys.KeySequence.&lt;init&gt;(KeySequence.java:190)</Frame>
          <Frame depth="2">org.eclipse.jface.bindings.keys.KeySequence.getInstance(KeySequence.java:129)</Frame>
          <Frame depth="3">org.eclipse.jface.bindings.keys.KeySequenceText$KeyTrapListener.handleEvent(KeySequenceText.java:127)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>- not sure what exactly I did</Line>
          <Line>- I modified some key bindings on the keys preference page</Line>
          <Line>- found this in the log</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- I20050920-0010</Line>
          <Line>- legacy keys preference page</Line>
          <Line>- in the KeySequenceTest, enter a key binding (eg. Ctrl+8)</Line>
          <Line>- using the mouse, place the caret at the beginning of the text field</Line>
          <Line>- press a modifier key (e.g. Ctrl)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>3.2 M2 test pass

- not sure what exactly I did
- I modified some key bindings on the keys preference page
- found this in the log

!ENTRY org.eclipse.ui 4 0 2005-09-20 15:24:58.080
!MESSAGE All triggers in a trigger sequence must be an instance of Trigger
!STACK 0
java.lang.IllegalArgumentException: All triggers in a trigger sequence must be
an instance of Trigger
	at org.eclipse.jface.bindings.TriggerSequence.&lt;init&gt;(TriggerSequence.java:72)
	at org.eclipse.jface.bindings.keys.KeySequence.&lt;init&gt;(KeySequence.java:190)
	at org.eclipse.jface.bindings.keys.KeySequence.getInstance(KeySequence.java:129)
	at
org.eclipse.jface.bindings.keys.KeySequenceText$KeyTrapListener.handleEvent(KeySequenceText.java:127)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1050)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1074)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1059)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1086)
	at org.eclipse.swt.widgets.Widget.gtk_key_press_event(Widget.java:640)
	at org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:1965)
	at org.eclipse.swt.widgets.Text.gtk_key_press_event(Text.java:1188)
	at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1395)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3490)
	at org.eclipse.swt.internal.gtk.OS._gtk_main_do_event(Native Method)
	at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(OS.java:4891)
	at org.eclipse.swt.widgets.Display.eventProc(Display.java:1059)
	at org.eclipse.swt.internal.gtk.OS._g_main_context_iteration(Native Method)
	at org.eclipse.swt.internal.gtk.OS.g_main_context_iteration(OS.java:1271)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2603)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:809)
	at org.eclipse.jface.window.Window.open(Window.java:787)
	at org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:66)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:996)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1050)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2909)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2605)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1755)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1719)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:368)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:377)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:164)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:282)
	at org.eclipse.core.launcher.Main.run(Main.java:977)
	at org.eclipse.core.launcher.Main.main(Main.java:952)
here are the steps:

- I20050920-0010
- legacy keys preference page
- in the KeySequenceTest, enter a key binding (eg. Ctrl+8)
- using the mouse, place the caret at the beginning of the text field
- press a modifier key (e.g. Ctrl)

&gt; boom with a slightly different error (but probably related):

!ENTRY org.eclipse.ui 4 0 2005-09-20 17:50:22.534
!MESSAGE The triggers cannot be null
!STACK 0
java.lang.NullPointerException: The triggers cannot be null
	at org.eclipse.jface.bindings.TriggerSequence.&lt;init&gt;(TriggerSequence.java:67)
	at org.eclipse.jface.bindings.keys.KeySequence.&lt;init&gt;(KeySequence.java:190)
	at org.eclipse.jface.bindings.keys.KeySequence.getInstance(KeySequence.java:129)
	at
org.eclipse.jface.bindings.keys.KeySequenceText$KeyTrapListener.handleEvent(KeySequenceText.java:127)
[etc.]


&gt; the exception reported in comment 0 can be produced by selecting the previous
key binding with the mouse (as opposed to setting the caret to position 0)


*** This bug has been marked as a duplicate of 89610 ***</WithStack>
    <WithOutStack>3.2 M2 test pass

- not sure what exactly I did
- I modified some key bindings on the keys preference page
- found this in the log

!ENTRY org.eclipse.ui 4 0 2005-09-20 15:24:58.080
!MESSAGE All triggers in a trigger sequence must be an instance of Trigger
!STACK 0
here are the steps:

- I20050920-0010
- legacy keys preference page
- in the KeySequenceTest, enter a key binding (eg. Ctrl+8)
- using the mouse, place the caret at the beginning of the text field
- press a modifier key (e.g. Ctrl)

&gt; boom with a slightly different error (but probably related):

!ENTRY org.eclipse.ui 4 0 2005-09-20 17:50:22.534
!MESSAGE The triggers cannot be null
!STACK 0

[etc.]


&gt; the exception reported in comment 0 can be produced by selecting the previous
key binding with the mouse (as opposed to setting the caret to position 0)


*** This bug has been marked as a duplicate of 89610 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110011" />
    <CreationDate amount="2005-09-20 09:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[content assist] code assist not correctly exited</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>R3.1

While reproducing bug 108700 with enabled argument guessing we found out that
code assist isn't terminated correctly and linked mode left enabled. The patch
attached to bug 108700 fixes this.
Applied the patch has been applied to R3_1_maintenance.
Verified in M20050923-1430.</WithStack>
    <WithOutStack>R3.1

While reproducing bug 108700 with enabled argument guessing we found out that
code assist isn't terminated correctly and linked mode left enabled. The patch
attached to bug 108700 fixes this.
Applied the patch has been applied to R3_1_maintenance.
Verified in M20050923-1430.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110012" />
    <CreationDate amount="2005-09-20 09:56:00 -0400" />
    <DupId amount="8886" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[WorkbenchParts] detach editor window</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hi all,

I have two monitors and I miss the feature to detach the editor window from
eclipse. I would be great to use the editor window on the second monitor.
(like the help window)

Regards

  Stephan
EditorPane is UI
(In reply to comment #1)
&gt; EditorPane is UI

But there is no Bugzilla: UI

But there is Platform UI :-)

PW

OK I add my request to Platform.UI
See https://bugs.eclipse.org/bugs/show_bug.cgi?id=110161

*** Bug 110161 has been marked as a duplicate of this bug. ***
A dup of bug 8886?
There are currently no plans to work on this feature.

PW

*** Bug 161375 has been marked as a duplicate of this bug. ***
Changes requested on bug 193523
Really a dup of bug 8886.

*** This bug has been marked as a duplicate of bug 8886 ***</WithStack>
    <WithOutStack>Hi all,

I have two monitors and I miss the feature to detach the editor window from
eclipse. I would be great to use the editor window on the second monitor.
(like the help window)

Regards

  Stephan
EditorPane is UI
(In reply to comment #1)
&gt; EditorPane is UI

But there is no Bugzilla: UI

But there is Platform UI :-)

PW

OK I add my request to Platform.UI
See https://bugs.eclipse.org/bugs/show_bug.cgi?id=110161

*** Bug 110161 has been marked as a duplicate of this bug. ***
A dup of bug 8886?
There are currently no plans to work on this feature.

PW

*** Bug 161375 has been marked as a duplicate of this bug. ***
Changes requested on bug 193523
Really a dup of bug 8886.

*** This bug has been marked as a duplicate of bug 8886 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110013" />
    <CreationDate amount="2005-09-20 09:58:00 -0400" />
    <DupId amount="123707" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Framework" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Fragments manifest should support dependencies on fragments</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>It seems that currently only plugins (and not other fragments) are valid
dependencies in fragment manifests. While this behaviour seems reasonable on the
first sight, its also an annoying limitation.

Consider a patch is needed for the Spinner widget from org.eclipse.swt, which
must access a Spinner method of package visibility. Currently this is not
solvable by means of the fragment approach. Reason is, that Spinner itself is
defined inside a fragment, namely in the package org.eclipse.swt.widgets from
the fragment org.eclipse.swt.win32.win32.x86.

Now, although I can construct a fragment with the following manifest

Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: %fragment.name
Bundle-Vendor: %provider.name
Bundle-SymbolicName: de.bdal.org.eclipse.swt.patch; singleton:=true
Bundle-Version: 1.0.0
Fragment-Host: org.eclipse.swt;bundle-version="3.1.0"
Bundle-Localization: plugin
Export-Package: org.eclipse.swt.widgets
Require-Bundle: org.eclipse.swt

this is not enough for creation of an exportable RCP app. Following the
discussion from thread "Export problems (fragment related)" in the
eclipse.platform.rcp newsgroup the only actual limitation is that I cannot
express org.eclipse.swt.win32.win32.x86 as a requirement for this fragment (The
editor forbids this). Because this dependency is missing I cannot export the
RCP product, because resolving the dependency to org.eclipse.swt.win32.win32.x86
fails. But interestingly the plugin-dependency view of the PackageExplorer does
list org.eclipse.swt.win32.win32.x86, so the such provided fragment compiles
successfully (and runs successfully if started by the run configuration).
It is now possible for a fragment to "require" another fragment.  You must use the new generic matching headers from bug 123707.

In this case the org.eclipse.swt.win32.win32.x86 bundle need to describe a generic capability header

Eclipse-GenericCapabilty: win32.win32.x86:swt-platform-fragment

And your swt fragment would have the following generic requirement header specifying that it required the capability from the org.eclipse.swt.win32.win32.x86 fragment.

Eclipse-GenericRequire: win32.win32.x86:swt-platform-fragment

This is just an example, you may be able to come up with better names for the capabilities.

*** This bug has been marked as a duplicate of 123707 ***</WithStack>
    <WithOutStack>It seems that currently only plugins (and not other fragments) are valid
dependencies in fragment manifests. While this behaviour seems reasonable on the
first sight, its also an annoying limitation.

Consider a patch is needed for the Spinner widget from org.eclipse.swt, which
must access a Spinner method of package visibility. Currently this is not
solvable by means of the fragment approach. Reason is, that Spinner itself is
defined inside a fragment, namely in the package org.eclipse.swt.widgets from
the fragment org.eclipse.swt.win32.win32.x86.

Now, although I can construct a fragment with the following manifest

Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: %fragment.name
Bundle-Vendor: %provider.name
Bundle-SymbolicName: de.bdal.org.eclipse.swt.patch; singleton:=true
Bundle-Version: 1.0.0
Fragment-Host: org.eclipse.swt;bundle-version="3.1.0"
Bundle-Localization: plugin
Export-Package: org.eclipse.swt.widgets
Require-Bundle: org.eclipse.swt

this is not enough for creation of an exportable RCP app. Following the
discussion from thread "Export problems (fragment related)" in the
eclipse.platform.rcp newsgroup the only actual limitation is that I cannot
express org.eclipse.swt.win32.win32.x86 as a requirement for this fragment (The
editor forbids this). Because this dependency is missing I cannot export the
RCP product, because resolving the dependency to org.eclipse.swt.win32.win32.x86
fails. But interestingly the plugin-dependency view of the PackageExplorer does
list org.eclipse.swt.win32.win32.x86, so the such provided fragment compiles
successfully (and runs successfully if started by the run configuration).
It is now possible for a fragment to "require" another fragment.  You must use the new generic matching headers from bug 123707.

In this case the org.eclipse.swt.win32.win32.x86 bundle need to describe a generic capability header

Eclipse-GenericCapabilty: win32.win32.x86:swt-platform-fragment

And your swt fragment would have the following generic requirement header specifying that it required the capability from the org.eclipse.swt.win32.win32.x86 fragment.

Eclipse-GenericRequire: win32.win32.x86:swt-platform-fragment

This is just an example, you may be able to come up with better names for the capabilities.

*** This bug has been marked as a duplicate of 123707 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110014" />
    <CreationDate amount="2005-09-20 09:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[expressions] Assign value action should not be visible in context menu when disabled</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>From bug 109938, the assign value action in the details pane of the 
expressions view should not be visible when disabled (due to the fact that a 
value cannot currnetly be assigned to an expression).
Deferred
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>From bug 109938, the assign value action in the details pane of the 
expressions view should not be visible when disabled (due to the fact that a 
value cannot currnetly be assigned to an expression).
Deferred
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110015" />
    <CreationDate amount="2005-09-20 10:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>context menu in search view should show all actions for Java elements</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Version: 3.1.0
Build id: I20050920-0010

Context menu in search view should show all actions for Java elements 
(refactorings, source actions...)

Only refactor is shown.
Fixed for RC1.</WithStack>
    <WithOutStack>Version: 3.1.0
Build id: I20050920-0010

Context menu in search view should show all actions for Java elements 
(refactorings, source actions...)

Only refactor is shown.
Fixed for RC1.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110016" />
    <CreationDate amount="2005-09-20 10:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>UI for watchpoints on local variables in CDT 3.0</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Adding watchpoints for local variables was available in CDT 2.1.1 via the "Add
Watchpoint (C/C++)" but seems to be missing in CDT 3.0.

Searching the newsgroup suggests that the only way of setting a watchpoint on a
local varaible is to use the GDB command line.

This seems to be a repeat of bug 84165, but I have not seen any discussion on
why to drop the support on the development mailing list.
Speaking more generally we should allow to set a watchpoint on any expression 
that evaluates to address. But the reason why the "Add Watchpoint" feature is 
left out is because we currently can't catch the moment when the expression 
comes back to scope. So if you set a watchpoint on a local variable and it goes 
out of scope, the watchpoint seats in the Breakpoint view and will never be set 
on any session again.

I think the watchpoint will be tied to the address that the expression is resolved to. So even if the expression is out of scope, the watchpoint is still alive but will just give user false alarm. But that seems fine as user can tell it's false alarm from the watchpoint even message and can go ahead remove/disable that watchpoint. That's what we do in CodeWarrior debugger.
What do you think ?</WithStack>
    <WithOutStack>Adding watchpoints for local variables was available in CDT 2.1.1 via the "Add
Watchpoint (C/C++)" but seems to be missing in CDT 3.0.

Searching the newsgroup suggests that the only way of setting a watchpoint on a
local varaible is to use the GDB command line.

This seems to be a repeat of bug 84165, but I have not seen any discussion on
why to drop the support on the development mailing list.
Speaking more generally we should allow to set a watchpoint on any expression 
that evaluates to address. But the reason why the "Add Watchpoint" feature is 
left out is because we currently can't catch the moment when the expression 
comes back to scope. So if you set a watchpoint on a local variable and it goes 
out of scope, the watchpoint seats in the Breakpoint view and will never be set 
on any session again.

I think the watchpoint will be tied to the address that the expression is resolved to. So even if the expression is out of scope, the watchpoint is still alive but will just give user false alarm. But that seems fine as user can tell it's false alarm from the watchpoint even message and can go ahead remove/disable that watchpoint. That's what we do in CodeWarrior debugger.
What do you think ?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110017" />
    <CreationDate amount="2005-09-20 10:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>eclipse 3.1 gtk is not compitable with gtk2 2.4.14 level</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Use eclipse 3.1 with SLES NLD 9 SP2, it fails to start eclipse runtime. Due to
incompatible GTK level. If I switch GTK 2 back to 2.2.4 level, then I can start
up eclipse. should make eclipse 3.1 GTK compatible with new GTK level. For
eclipse 3.2 M build is same, it could not start in GTK 2 2.4.14 level.
What happens when it does not start?  What is the error you get?

Eclipse has definitely been well tested on GTK+ 2.4.14 ...
Did someone test it in Novell Linux Desktop 9 SP2?
Here is the errors.
./eclipse: error while loading shared libraries:
/opt/gnome/lib/libgdk-x11-2.0.so.0: undefined symbol: g_unsetenv
Can you attach the output of "nm -D eclipse" and also "ldd eclipse"
on your system?

g_unsetenv is a new symbol in GTK+ 2.4, it did not exist in GTK+ 2.2.4.
Furthermore, it is not used by Eclipse.

I suspect something else is wrong on your system -- could it be that
you have some libraries which depend on GTK+ 2.4, but have a GTK+
2.2 install in your library path somehow?
It might. But I import a clean Novell Linux Desktop 9 SP2. 
Here you go:
0804d750 A __bss_start
         U calloc
0804d4a0 D consoleVM
0804d4a4 D defaultVM
0804d430 D dirSeparator
0804d4e8 A _DYNAMIC
0804d750 A _edata
0804d754 A _end
         U __errno_location
         U execv
         U exit
         U _exit
         U fclose
         U fgets
         U fileno
0804bf30 T _fini
         U fopen
         U fork
         U fread
         U free
         U gdk_pixbuf_get_height
         U gdk_pixbuf_get_width
         U gdk_pixbuf_new_from_file
         U gdk_set_program_class
         U gdk_window_set_back_pixmap
         U getcwd
         U getenv
         U getpid
0804d5e4 A _GLOBAL_OFFSET_TABLE_
         w __gmon_start__
         U gtk_container_add
         U gtk_container_get_type
         U gtk_dialog_get_type
         U gtk_dialog_run
         U gtk_fixed_get_type
         U gtk_fixed_move
         U gtk_fixed_new
         U gtk_image_new_from_pixbuf
         U gtk_init
         U gtk_label_get_type
         U gtk_label_new
         U gtk_label_set_justify
         U gtk_label_set_text
         U gtk_main
         U gtk_main_quit
         U gtk_message_dialog_new
         U gtk_misc_get_type
         U gtk_misc_set_alignment
         U gtk_progress_bar_get_type
         U gtk_progress_bar_new
         U gtk_progress_bar_set_fraction
         U gtk_set_locale
         U gtk_timeout_add
         U gtk_widget_destroy
         U gtk_widget_get_parent
         U gtk_widget_get_type
         U gtk_widget_hide
         U gtk_widget_modify_fg
         U gtk_widget_realize
         U gtk_widget_set_size_request
         U gtk_widget_show_all
         U gtk_window_get_type
         U gtk_window_new
         U gtk_window_set_decorated
         U gtk_window_set_position
         U gtk_window_set_title
         U g_type_check_instance_cast
080493e0 T _init
         U ioctl
0804bf54 R _IO_stdin_used
         w _Jv_RegisterClasses
         U __libc_start_main
         U malloc
         U memcpy
0804d2cc D officialName
0804d431 D pathSeparator
         U printf
         U realloc
         U setenv
0804d4a8 D shippedVMDir
         U shmat
         U shmctl
         U shmdt
         U shmget
         U sprintf
         U sscanf
         U stdin
         U strcasecmp
         U strcat
         U strchr
         U strcpy
         U __strdup
         U strncpy
         U strrchr
         U __strtol_internal
         U wait
         U __xstat


Hmm, I misread the error a bit.  It's not the eclipse
executable that's looking for g_unsetenv, it's
/opt/gnome/lib/libgdk-x11-2.0.so.0

So, the problem is that you're using GTK+ 2.4.14, but
it's picking up glib 2.2.

The ldd output should clarify.
ldd output
        linux-gate.so.1 =&gt;  (0xffffe000)
        libgtk-x11-2.0.so.0 =&gt; /opt/gnome/lib/libgtk-x11-2.0.so.0 (0x40027000)
        libgdk_pixbuf-2.0.so.0 =&gt; /opt/gnome/lib/libgdk_pixbuf-2.0.so.0 (0x402f1
000)
        libgobject-2.0.so.0 =&gt; /opt/gnome/lib/libgobject-2.0.so.0 (0x40306000)
        libgdk-x11-2.0.so.0 =&gt; /opt/gnome/lib/libgdk-x11-2.0.so.0 (0x4033b000)
        libc.so.6 =&gt; /lib/tls/libc.so.6 (0x403aa000)
        libX11.so.6 =&gt; /usr/X11R6/lib/libX11.so.6 (0x404c0000)
        libpangoxft-1.0.so.0 =&gt; /opt/gnome/lib/libpangoxft-1.0.so.0 (0x405bc000)
        libpangox-1.0.so.0 =&gt; /opt/gnome/lib/libpangox-1.0.so.0 (0x405dd000)
        libpango-1.0.so.0 =&gt; /opt/gnome/lib/libpango-1.0.so.0 (0x405ea000)
        libatk-1.0.so.0 =&gt; /opt/gnome/lib/libatk-1.0.so.0 (0x4061c000)
        libgmodule-2.0.so.0 =&gt; /opt/gnome/lib/libgmodule-2.0.so.0 (0x40636000)
        libdl.so.2 =&gt; /lib/libdl.so.2 (0x4063b000)
        libglib-2.0.so.0 =&gt; /opt/gnome/lib/libglib-2.0.so.0 (0x4063e000)
        libm.so.6 =&gt; /lib/tls/libm.so.6 (0x406aa000)
        libXrandr.so.2 =&gt; /usr/X11R6/lib/libXrandr.so.2 (0x406cc000)
        libXi.so.6 =&gt; /usr/X11R6/lib/libXi.so.6 (0x406d0000)
        libXext.so.6 =&gt; /usr/X11R6/lib/libXext.so.6 (0x406d8000)
        libXft.so.2 =&gt; /usr/X11R6/lib/libXft.so.2 (0x406e8000)
        libfreetype.so.6 =&gt; /usr/lib/libfreetype.so.6 (0x406fb000)
        libXrender.so.1 =&gt; /usr/X11R6/lib/libXrender.so.1 (0x40765000)
        libfontconfig.so.1 =&gt; /usr/lib/libfontconfig.so.1 (0x4076d000)
        /lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x40000000)
        libexpat.so.0 =&gt; /usr/lib/libexpat.so.0 (0x40797000)
Hi, Billy 
 
   I don't know gtk+ well, so is this a bug of SuSE? I have a clean installation
of Novell Linux Desktop 9 sp2 in my intel box. and do you know how I can get
this fix? Thanks a lot.

What you're seeing is very strange so I'm still trying to figure it out.

The g_unsetenv symbol should be defined in libglib-2.0.so.0.  Can
you run this command and see what you get:

 nm -D /opt/gnome/lib/libglib-2.0.so.0  | grep g_unsetenv

However, I suspect that the symbol will be there.  The only other thing
I can think of is your mozilla install.  If your mozilla directory contains
an older copy of glib, this may end up on the library path and overriding
the normal GTK+ install.  Try this:

  export MOZILLA_FIVE_HOME=/nowhere
  ./eclipse

Federico: I remember you mentioned something about a bugfix in NLD
for mozilla relating to GTK+ 2.2.  Do you have any insight here?
nm -D /opt/gnome/lib/libglib-2.0.so.0  | grep g_unsetenv 
nothing found. 
nm -D /opt/gnome/lib/libgdk-x11-2.0.so.0 | gerp g_unsetenv
U g_unsetenv

  export MOZILLA_FIVE_HOME=/nowhere
  ./eclipse 
same errors. 

So I think the problem is comming from libglib-2.0.so.0. 
What's the output of:

  ls /opt/gnome/lib/libglib-2.0.so*

This should indicate the version of glib installed.  Also post the output of
'rpm -q glib2'.

If that symbol really isn't in that version of glib, I don't see how you're able
to run any GTK+ application.
:/usr/gtk/eclipse&gt; ls /opt/gnome/lib/libglib-2.0.so*
/opt/gnome/lib/libglib-2.0.so.0  /opt/gnome/lib/libglib-2.0.so.0.200.3
:/usr/gtk/eclipse&gt; rpm -q glib2
glib2-2.2.3-117.1
So, that's clearly something different from the normal NLD install.  You can't
use GTK+ 2.4.14 with glib 2.2.3.  You need glib 2.4.x or newer.

Any ideas how you got yourself in that situation?  Can you run any other GTK+
applications like 'gedit' or 'gimp'?
I just do a clean bootup from cd with Novell Linux Desktop 9 SP 2 cds, and it
will  prompt to SuSE Enperprise Linux Server 9. Following the steps to install
clean NLD 9 SP2. That is how I get into this situation. I think I could not run
any gtk+ app. I have problem to install firefox too. Agian is it possible a bug
of NLD?

If firefox dies with the same error, then clearly this is a problem with your
NLD install.
Now I think I figured out the real problem. I use SLES 9 as my base to install
NLD 9 SP2. The installation process does not complaint, it dragged me into this
wired situation.  Novell should do a better job to warning me not to do that, do
you think this is a bug? Thanks a lot for your help.

I'm glad it's sorted out.  I think you should file a bug about this problem in
the Novell bug tracker (bugzilla.novell.com).
Yeah, if no other GTK+ programs work, this sounds like an installation/upgrade
problem.  Just to check - what's the output of "rpm -qa | grep gtk"?

Close.</WithStack>
    <WithOutStack>Use eclipse 3.1 with SLES NLD 9 SP2, it fails to start eclipse runtime. Due to
incompatible GTK level. If I switch GTK 2 back to 2.2.4 level, then I can start
up eclipse. should make eclipse 3.1 GTK compatible with new GTK level. For
eclipse 3.2 M build is same, it could not start in GTK 2 2.4.14 level.
What happens when it does not start?  What is the error you get?

Eclipse has definitely been well tested on GTK+ 2.4.14 ...
Did someone test it in Novell Linux Desktop 9 SP2?
Here is the errors.
./eclipse: error while loading shared libraries:
/opt/gnome/lib/libgdk-x11-2.0.so.0: undefined symbol: g_unsetenv
Can you attach the output of "nm -D eclipse" and also "ldd eclipse"
on your system?

g_unsetenv is a new symbol in GTK+ 2.4, it did not exist in GTK+ 2.2.4.
Furthermore, it is not used by Eclipse.

I suspect something else is wrong on your system -- could it be that
you have some libraries which depend on GTK+ 2.4, but have a GTK+
2.2 install in your library path somehow?
It might. But I import a clean Novell Linux Desktop 9 SP2. 
Here you go:
0804d750 A __bss_start
         U calloc
0804d4a0 D consoleVM
0804d4a4 D defaultVM
0804d430 D dirSeparator
0804d4e8 A _DYNAMIC
0804d750 A _edata
0804d754 A _end
         U __errno_location
         U execv
         U exit
         U _exit
         U fclose
         U fgets
         U fileno
0804bf30 T _fini
         U fopen
         U fork
         U fread
         U free
         U gdk_pixbuf_get_height
         U gdk_pixbuf_get_width
         U gdk_pixbuf_new_from_file
         U gdk_set_program_class
         U gdk_window_set_back_pixmap
         U getcwd
         U getenv
         U getpid
0804d5e4 A _GLOBAL_OFFSET_TABLE_
         w __gmon_start__
         U gtk_container_add
         U gtk_container_get_type
         U gtk_dialog_get_type
         U gtk_dialog_run
         U gtk_fixed_get_type
         U gtk_fixed_move
         U gtk_fixed_new
         U gtk_image_new_from_pixbuf
         U gtk_init
         U gtk_label_get_type
         U gtk_label_new
         U gtk_label_set_justify
         U gtk_label_set_text
         U gtk_main
         U gtk_main_quit
         U gtk_message_dialog_new
         U gtk_misc_get_type
         U gtk_misc_set_alignment
         U gtk_progress_bar_get_type
         U gtk_progress_bar_new
         U gtk_progress_bar_set_fraction
         U gtk_set_locale
         U gtk_timeout_add
         U gtk_widget_destroy
         U gtk_widget_get_parent
         U gtk_widget_get_type
         U gtk_widget_hide
         U gtk_widget_modify_fg
         U gtk_widget_realize
         U gtk_widget_set_size_request
         U gtk_widget_show_all
         U gtk_window_get_type
         U gtk_window_new
         U gtk_window_set_decorated
         U gtk_window_set_position
         U gtk_window_set_title
         U g_type_check_instance_cast
080493e0 T _init
         U ioctl
0804bf54 R _IO_stdin_used
         w _Jv_RegisterClasses
         U __libc_start_main
         U malloc
         U memcpy
0804d2cc D officialName
0804d431 D pathSeparator
         U printf
         U realloc
         U setenv
0804d4a8 D shippedVMDir
         U shmat
         U shmctl
         U shmdt
         U shmget
         U sprintf
         U sscanf
         U stdin
         U strcasecmp
         U strcat
         U strchr
         U strcpy
         U __strdup
         U strncpy
         U strrchr
         U __strtol_internal
         U wait
         U __xstat


Hmm, I misread the error a bit.  It's not the eclipse
executable that's looking for g_unsetenv, it's
/opt/gnome/lib/libgdk-x11-2.0.so.0

So, the problem is that you're using GTK+ 2.4.14, but
it's picking up glib 2.2.

The ldd output should clarify.
ldd output
        linux-gate.so.1 =&gt;  (0xffffe000)
        libgtk-x11-2.0.so.0 =&gt; /opt/gnome/lib/libgtk-x11-2.0.so.0 (0x40027000)
        libgdk_pixbuf-2.0.so.0 =&gt; /opt/gnome/lib/libgdk_pixbuf-2.0.so.0 (0x402f1
000)
        libgobject-2.0.so.0 =&gt; /opt/gnome/lib/libgobject-2.0.so.0 (0x40306000)
        libgdk-x11-2.0.so.0 =&gt; /opt/gnome/lib/libgdk-x11-2.0.so.0 (0x4033b000)
        libc.so.6 =&gt; /lib/tls/libc.so.6 (0x403aa000)
        libX11.so.6 =&gt; /usr/X11R6/lib/libX11.so.6 (0x404c0000)
        libpangoxft-1.0.so.0 =&gt; /opt/gnome/lib/libpangoxft-1.0.so.0 (0x405bc000)
        libpangox-1.0.so.0 =&gt; /opt/gnome/lib/libpangox-1.0.so.0 (0x405dd000)
        libpango-1.0.so.0 =&gt; /opt/gnome/lib/libpango-1.0.so.0 (0x405ea000)
        libatk-1.0.so.0 =&gt; /opt/gnome/lib/libatk-1.0.so.0 (0x4061c000)
        libgmodule-2.0.so.0 =&gt; /opt/gnome/lib/libgmodule-2.0.so.0 (0x40636000)
        libdl.so.2 =&gt; /lib/libdl.so.2 (0x4063b000)
        libglib-2.0.so.0 =&gt; /opt/gnome/lib/libglib-2.0.so.0 (0x4063e000)
        libm.so.6 =&gt; /lib/tls/libm.so.6 (0x406aa000)
        libXrandr.so.2 =&gt; /usr/X11R6/lib/libXrandr.so.2 (0x406cc000)
        libXi.so.6 =&gt; /usr/X11R6/lib/libXi.so.6 (0x406d0000)
        libXext.so.6 =&gt; /usr/X11R6/lib/libXext.so.6 (0x406d8000)
        libXft.so.2 =&gt; /usr/X11R6/lib/libXft.so.2 (0x406e8000)
        libfreetype.so.6 =&gt; /usr/lib/libfreetype.so.6 (0x406fb000)
        libXrender.so.1 =&gt; /usr/X11R6/lib/libXrender.so.1 (0x40765000)
        libfontconfig.so.1 =&gt; /usr/lib/libfontconfig.so.1 (0x4076d000)
        /lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x40000000)
        libexpat.so.0 =&gt; /usr/lib/libexpat.so.0 (0x40797000)
Hi, Billy 
 
   I don't know gtk+ well, so is this a bug of SuSE? I have a clean installation
of Novell Linux Desktop 9 sp2 in my intel box. and do you know how I can get
this fix? Thanks a lot.

What you're seeing is very strange so I'm still trying to figure it out.

The g_unsetenv symbol should be defined in libglib-2.0.so.0.  Can
you run this command and see what you get:

 nm -D /opt/gnome/lib/libglib-2.0.so.0  | grep g_unsetenv

However, I suspect that the symbol will be there.  The only other thing
I can think of is your mozilla install.  If your mozilla directory contains
an older copy of glib, this may end up on the library path and overriding
the normal GTK+ install.  Try this:

  export MOZILLA_FIVE_HOME=/nowhere
  ./eclipse

Federico: I remember you mentioned something about a bugfix in NLD
for mozilla relating to GTK+ 2.2.  Do you have any insight here?
nm -D /opt/gnome/lib/libglib-2.0.so.0  | grep g_unsetenv 
nothing found. 
nm -D /opt/gnome/lib/libgdk-x11-2.0.so.0 | gerp g_unsetenv
U g_unsetenv

  export MOZILLA_FIVE_HOME=/nowhere
  ./eclipse 
same errors. 

So I think the problem is comming from libglib-2.0.so.0. 
What's the output of:

  ls /opt/gnome/lib/libglib-2.0.so*

This should indicate the version of glib installed.  Also post the output of
'rpm -q glib2'.

If that symbol really isn't in that version of glib, I don't see how you're able
to run any GTK+ application.
:/usr/gtk/eclipse&gt; ls /opt/gnome/lib/libglib-2.0.so*
/opt/gnome/lib/libglib-2.0.so.0  /opt/gnome/lib/libglib-2.0.so.0.200.3
:/usr/gtk/eclipse&gt; rpm -q glib2
glib2-2.2.3-117.1
So, that's clearly something different from the normal NLD install.  You can't
use GTK+ 2.4.14 with glib 2.2.3.  You need glib 2.4.x or newer.

Any ideas how you got yourself in that situation?  Can you run any other GTK+
applications like 'gedit' or 'gimp'?
I just do a clean bootup from cd with Novell Linux Desktop 9 SP 2 cds, and it
will  prompt to SuSE Enperprise Linux Server 9. Following the steps to install
clean NLD 9 SP2. That is how I get into this situation. I think I could not run
any gtk+ app. I have problem to install firefox too. Agian is it possible a bug
of NLD?

If firefox dies with the same error, then clearly this is a problem with your
NLD install.
Now I think I figured out the real problem. I use SLES 9 as my base to install
NLD 9 SP2. The installation process does not complaint, it dragged me into this
wired situation.  Novell should do a better job to warning me not to do that, do
you think this is a bug? Thanks a lot for your help.

I'm glad it's sorted out.  I think you should file a bug about this problem in
the Novell bug tracker (bugzilla.novell.com).
Yeah, if no other GTK+ programs work, this sounds like an installation/upgrade
problem.  Just to check - what's the output of "rpm -qa | grep gtk"?

Close.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110018" />
    <CreationDate amount="2005-09-20 10:28:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="jst.jsp" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[preferences] Link JSP preference pages to Java where appropriate</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- formatting options (for JSP/Java sections).</Line>
          <Line>- Java highlighting style in JSPs</Line>
          <Line>- content assist proposal order</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Many  of users would likely go to JSP preferences first to configure things such as:

- formatting options (for JSP/Java sections).
- Java highlighting style in JSPs
- content assist proposal order

We can take advantage of the linking feature in preference pages to "redirect"
users to the appropriate place to change the "shared" Java options.

We can put the links on their own page, or on the page where users would likely
go to find the JSP preference (eg. JSP Styles page to change JSP-Java
highlighting) (maybe both?).

Of course the underlying language isn't always Java , but it usually is...
if (contents.contains(preferences))
   assign = Amy 

:)

This is a great idea, but we don't have people to work on this just now.  I don't know how much tracking down of pages would be involved.  We might still find time for it for 3.0, but we'd accept high quality patches.
reassigning to inbox
There are links on the "Web-&gt;JSP Files-&gt;Editor" preference page that send users to the HTML and XML preferences pages but none for Java, this is probably the best place to add links.</WithStack>
    <WithOutStack>Many  of users would likely go to JSP preferences first to configure things such as:

- formatting options (for JSP/Java sections).
- Java highlighting style in JSPs
- content assist proposal order

We can take advantage of the linking feature in preference pages to "redirect"
users to the appropriate place to change the "shared" Java options.

We can put the links on their own page, or on the page where users would likely
go to find the JSP preference (eg. JSP Styles page to change JSP-Java
highlighting) (maybe both?).

Of course the underlying language isn't always Java , but it usually is...
if (contents.contains(preferences))
   assign = Amy 

:)

This is a great idea, but we don't have people to work on this just now.  I don't know how much tracking down of pages would be involved.  We might still find time for it for 3.0, but we'd accept high quality patches.
reassigning to inbox
There are links on the "Web-&gt;JSP Files-&gt;Editor" preference page that send users to the HTML and XML preferences pages but none for Java, this is probably the best place to add links.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110019" />
    <CreationDate amount="2005-09-20 10:30:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>new Launch configurations broken</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330579410">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.launching.ExecutionArguments.&lt;init&gt;(ExecutionArguments.java:37)</Frame>
          <Frame depth="1">org.eclipse.pde.internal.ui.launcher.JUnitLaunchConfiguration.getVMArgumentsArray(JUnitLaunchConfiguration.java:349)</Frame>
          <Frame depth="2">org.eclipse.pde.internal.ui.launcher.JUnitLaunchConfiguration.createVMRunner(JUnitLaunchConfiguration.java:134)</Frame>
          <Frame depth="3">org.eclipse.pde.internal.ui.launcher.JUnitLaunchConfiguration.launch(JUnitLaunchConfiguration.java:93)</Frame>
          <Frame depth="4">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:590)</Frame>
          <Frame depth="5">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:515)</Frame>
          <Frame depth="6">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:733)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.DebugUIPlugin$6.run(DebugUIPlugin.java:931)</Frame>
          <Frame depth="8">org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>For build I20050920-0010

I created a workspace, checked out platform-ui and platform-ui-tests.  I
selected UiTestSuite in the package explorer and brought up the run/launch
dialog.  I selected Junit plugin test and clicked New.

When I try to run the launch configuration, it won't work and gives me errors in
the log (attached next).

PW
Created attachment 27288
error log

An Illegal argument exception.

If I then create a vanilla Eclipse Application launch configuration and try to
run it, it states that the workspace is already in use although nothing else is
running.  This doesn't generate an error in the log, though.

PW
I am seeing the illegal argument exception for the test suites but I am able to create a new eclipse launch.
Looks like null is being passed for pgm or vm args where it should not be.
This happens on Motif for me as well.  I think it is very important
*** Bug 110068 has been marked as a duplicate of this bug. ***
I'll take a look. 
In the meantime, you could launch JUnit tests via the shortcut.

ie. select a class/package and then from the context menu Run As &gt; JUnit 
Plugin Test.
That has the same effect for me.
another workaround for now:
put a dummy VM argument on the Arguments tab (e.g -Xmx256M)
There is no Arguments tab for the JUnit test plugin debug configuration.  see 
bug 110062
The first work around works for me. Had to delete existing launch configs so
that a new one would be created for me.
Fixed.
Verified in I20050912-0010, but check out bug 110159

PW

*** Bug 110499 has been marked as a duplicate of this bug. ***
Pasting the stack trace here so it will be found when people try to query before
filing duplicates. :-)

java.lang.IllegalArgumentException
at org.eclipse.jdt.launching.ExecutionArguments.&lt;init&gt;(ExecutionArguments.java:37)
at
org.eclipse.pde.internal.ui.launcher.JUnitLaunchConfiguration.getVMArgumentsArray(JUnitLaunchConfiguration.java:349)
at
org.eclipse.pde.internal.ui.launcher.JUnitLaunchConfiguration.createVMRunner(JUnitLaunchConfiguration.java:134)
at
org.eclipse.pde.internal.ui.launcher.JUnitLaunchConfiguration.launch(JUnitLaunchConfiguration.java:93)
at
org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:590)
at
org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:515)
at
org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:733)
at org.eclipse.debug.internal.ui.DebugUIPlugin$6.run(DebugUIPlugin.java:931)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)</WithStack>
    <WithOutStack>For build I20050920-0010

I created a workspace, checked out platform-ui and platform-ui-tests.  I
selected UiTestSuite in the package explorer and brought up the run/launch
dialog.  I selected Junit plugin test and clicked New.

When I try to run the launch configuration, it won't work and gives me errors in
the log (attached next).

PW
Created attachment 27288
error log

An Illegal argument exception.

If I then create a vanilla Eclipse Application launch configuration and try to
run it, it states that the workspace is already in use although nothing else is
running.  This doesn't generate an error in the log, though.

PW
I am seeing the illegal argument exception for the test suites but I am able to create a new eclipse launch.
Looks like null is being passed for pgm or vm args where it should not be.
This happens on Motif for me as well.  I think it is very important
*** Bug 110068 has been marked as a duplicate of this bug. ***
I'll take a look. 
In the meantime, you could launch JUnit tests via the shortcut.

ie. select a class/package and then from the context menu Run As &gt; JUnit 
Plugin Test.
That has the same effect for me.
another workaround for now:
put a dummy VM argument on the Arguments tab (e.g -Xmx256M)
There is no Arguments tab for the JUnit test plugin debug configuration.  see 
bug 110062
The first work around works for me. Had to delete existing launch configs so
that a new one would be created for me.
Fixed.
Verified in I20050912-0010, but check out bug 110159

PW

*** Bug 110499 has been marked as a duplicate of this bug. ***
Pasting the stack trace here so it will be found when people try to query before
filing duplicates. :-)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110020" />
    <CreationDate amount="2005-09-20 10:39:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="jst.jsp" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[formatting] Need better formatting (and formatting prefs) for JSPs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="assignment">
        <location start="150" end="174" />
        <code>&lt;% String test = "test";</code>
      </source_code>
      <source_code type="assignment">
        <location start="236" end="261" />
        <code>String test = "test";</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="378" end="400" />
        <code>// code here</code>
      </source_code>
      <source_code type="assignment">
        <location start="863" end="887" />
        <code>&lt;% String test = "test";</code>
      </source_code>
      <source_code type="assignment">
        <location start="920" end="945" />
        <code>String test = "test";</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- newline before/after delimiters (&lt;% %&gt;)</Line>
          <Line>(code on same line as delimieters)</Line>
          <Line>- controllable for partition type</Line>
          <Line>(eg. attr value would be on same line, between elements you might just make it</Line>
          <Line>flush w/ the preceding element)</Line>
          <Line>- indent before/after delimiters (flush w/ preceding tags or not)</Line>
          <Line>In 3.2 the following is true:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We need better formatting for JSPs, especially for the delimiters of
JSP-Java Regions (&lt;% %&gt;).

They're currently formatted erratically for example:

&lt;% String test = "test";
       %&gt;

Instead of:

&lt;% String test = "test"; %&gt;

or:

&lt;%
    String test = "test";
%&gt;
Also the amount of indent is important.
You may want to be flush w/ the tag above:

&lt;table&gt;
&lt;tr&gt;
    &lt;td&gt;
    &lt;%
        // code here 
    %&gt;
    &lt;/td&gt;
...

or it may be an attribute value
&lt;a href="&lt;%= val%&gt;"&gt;

We might need preferences for these things (probably others):

- newline before/after delimiters (&lt;% %&gt;)
  (code on same line as delimieters)
- controllable for partition type 
  (eg. attr value would be on same line, between elements you might just make it
flush w/ the preceding element)
- indent before/after delimiters (flush w/ preceding tags or not)
In 3.2 the following is true:

&lt;% String test = "test";
       %&gt;

is formatted as 

&lt;%
    String test = "test";
%&gt;

Thus I vote this is safe to close
JSP formatter also does not seem to recognize &lt;label&gt; or many JSTL tags such as &lt;fmt:msg ...

Formatter seems to remove all newlines from unrecognized tags, leading to multiple long lines of concatenated tags.
I think we can consolidate the work into Bug 203252. Scriptlet code seems to be formatted better these days, but as Tom has mentioned, sometimes these long chains of elements just butt up against each other.

Bug 203252 seems to be more focused on fixing tags so that they are nested properly.</WithStack>
    <WithOutStack>We need better formatting for JSPs, especially for the delimiters of
JSP-Java Regions (&lt;% %&gt;).

They're currently formatted erratically for example:

&lt;% String test = "test";
       %&gt;

Instead of:

&lt;% String test = "test"; %&gt;

or:

&lt;%
    String test = "test";
%&gt;
Also the amount of indent is important.
You may want to be flush w/ the tag above:

&lt;table&gt;
&lt;tr&gt;
    &lt;td&gt;
    &lt;%
        // code here 
    %&gt;
    &lt;/td&gt;
...

or it may be an attribute value
&lt;a href="&lt;%= val%&gt;"&gt;

We might need preferences for these things (probably others):

- newline before/after delimiters (&lt;% %&gt;)
  (code on same line as delimieters)
- controllable for partition type 
  (eg. attr value would be on same line, between elements you might just make it
flush w/ the preceding element)
- indent before/after delimiters (flush w/ preceding tags or not)
In 3.2 the following is true:

&lt;% String test = "test";
       %&gt;

is formatted as 

&lt;%
    String test = "test";
%&gt;

Thus I vote this is safe to close
JSP formatter also does not seem to recognize &lt;label&gt; or many JSTL tags such as &lt;fmt:msg ...

Formatter seems to remove all newlines from unrecognized tags, leading to multiple long lines of concatenated tags.
I think we can consolidate the work into Bug 203252. Scriptlet code seems to be formatted better these days, but as Tom has mentioned, sometimes these long chains of elements just butt up against each other.

Bug 203252 seems to be more focused on fixing tags so that they are nested properly.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110021" />
    <CreationDate amount="2005-09-20 10:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Java 5 inconsistency</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>the compareTo method has been change in Java 5; from compareTo(Object) to 
compareTo(TypedObject) where a TypedObject is the type of the class invoking 
compareTo i.e. Character.compareTo(Character), Integer.compareTo(Integer), etc.
Created attachment 27289
fix

fixed the problem by adding the appropriate type casting
please verify Kevin
Released Patch.
The potential ClassCastException when casting obj has been considered. Each of
the Java 1.4 compareTo(Object) methods being called explicitly state that they
will throw a CCE when the parameter is not of the expected type.
verified</WithStack>
    <WithOutStack>the compareTo method has been change in Java 5; from compareTo(Object) to 
compareTo(TypedObject) where a TypedObject is the type of the class invoking 
compareTo i.e. Character.compareTo(Character), Integer.compareTo(Integer), etc.
Created attachment 27289
fix

fixed the problem by adding the appropriate type casting
please verify Kevin
Released Patch.
The potential ClassCastException when casting obj has been considered. Each of
the Java 1.4 compareTo(Object) methods being called explicitly state that they
will throw a CCE when the parameter is not of the expected type.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110022" />
    <CreationDate amount="2005-09-20 10:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.2" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Decoration terminology (outgoing change versus dirty)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) You have changed the name of a preference key. This is OK as long as you still look for any value assigned to the old preference key and assign it to the new preference key. For example, if the user changed the dirty flag character to "!", then they would expect that to remain when upgrading from 3.2 to 3.3.</Line>
          <Line />
          <Line>2) The decorator configuration strings for file, folder and project(e.g ICVSUIConstants.PREF_FILETEXT_DECORATION, etc.) will have dirty_flag as a variable name. If the user never provided a customized string, we don't need to take any special action. However, if the strings we're customized, we need to convert all occurrences of dirty_flag to outgoing_change_flag when the preference is read.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>On the Team -&gt; CVS -&gt; Label Decorations preference page, on the Text Decorations tab, the term "Dirty 
flag:" is used to indicate that there is an outgoing change. This is somewhat odd, since a user would 
typically expect a "dirty" file to be one that has been changed but not saved locally, rather than the current 
way it is used (saved locally, but not released to the repo).

On the Team -&gt; CVS -&gt; Icon Decorations preference page, the check box to display an icon for outgoing 
changes is labeled "Outgoing changes". This seems like a clearer term, and this should probably be used 
on the Label Decorations page as well.
We should change the variable {dirty_flag} to {outgoing_change_flag} and the "Dirty flag" label should be changed accordingly. When loading saved decoration strings, we need to convert all instances of {dirty_flag} to {outgoing_change_flag}. The flag is defined in CVSDecoratorConfiguration.
Created attachment 66257
Patch
What we need to do here is make sure that, even though we are changing the variable name from dirty_flag to outgoing_change_flag, users who have configured their decorators do not need to take any actions when they upgrade. I see a few problems in the patch in respect to this.

1) You have changed the name of a preference key. This is OK as long as you still look for any value assigned to the old preference key and assign it to the new preference key. For example, if the user changed the dirty flag character to "!", then they would expect that to remain when upgrading from 3.2 to 3.3.

2) The decorator configuration strings for file, folder and project(e.g ICVSUIConstants.PREF_FILETEXT_DECORATION, etc.) will have dirty_flag as a variable name. If the user never provided a customized string, we don't need to take any special action. However, if the strings we're customized, we need to convert all occurrences of dirty_flag to outgoing_change_flag when the preference is read.


In this case changing property names does not seem to be a good move, because in order to be compatible I have to maintain both, old and new names. So, maybe should I just replace strings visible to the user?
That would be acceptable.
Created attachment 66491
Patch 2
That looks better but I think the conversion from the old flag to the new flag needs to happen in both the preference page (which you have) and the CVSDecoration#initialize method because the user will expect the decorator to be configured properly without needing the visit the preference page.
Created attachment 66816
Patch 3
Patch reviewed and release to HEAD. I did make one modification. Instead of marking the parent folders as clean to trigger the decorator refresh, I just added the file to the list of modifiedResources. This triggers a redecoration of the file and it's parent folders.
Ignore my previous comment. It was for a different bug.

I have reviewed and released the patch for this bug as well. I made a slight modification to CVSDecoration since the flag needed to be converted before the values were assigned to the instance variables.
Created attachment 67012
Screen

I have noticed, that now CVS label look pretty strange. Is this connected with my patch? Or should I open a  new bug report?
Comment on attachment 67012
Screen

fixed mime type
I think this was caused by a slight modification I made to the patch. I made the modification to fix a small error but it looks like I introduced another error. Given tat this fix is not vital for 3.3, I'm going to back out of the patch and postpone the fix until 3.4.
Actually, I spoke to soon. It was my fault. It was a copy/paste error but is easy to fix.</WithStack>
    <WithOutStack>On the Team -&gt; CVS -&gt; Label Decorations preference page, on the Text Decorations tab, the term "Dirty 
flag:" is used to indicate that there is an outgoing change. This is somewhat odd, since a user would 
typically expect a "dirty" file to be one that has been changed but not saved locally, rather than the current 
way it is used (saved locally, but not released to the repo).

On the Team -&gt; CVS -&gt; Icon Decorations preference page, the check box to display an icon for outgoing 
changes is labeled "Outgoing changes". This seems like a clearer term, and this should probably be used 
on the Label Decorations page as well.
We should change the variable {dirty_flag} to {outgoing_change_flag} and the "Dirty flag" label should be changed accordingly. When loading saved decoration strings, we need to convert all instances of {dirty_flag} to {outgoing_change_flag}. The flag is defined in CVSDecoratorConfiguration.
Created attachment 66257
Patch
What we need to do here is make sure that, even though we are changing the variable name from dirty_flag to outgoing_change_flag, users who have configured their decorators do not need to take any actions when they upgrade. I see a few problems in the patch in respect to this.

1) You have changed the name of a preference key. This is OK as long as you still look for any value assigned to the old preference key and assign it to the new preference key. For example, if the user changed the dirty flag character to "!", then they would expect that to remain when upgrading from 3.2 to 3.3.

2) The decorator configuration strings for file, folder and project(e.g ICVSUIConstants.PREF_FILETEXT_DECORATION, etc.) will have dirty_flag as a variable name. If the user never provided a customized string, we don't need to take any special action. However, if the strings we're customized, we need to convert all occurrences of dirty_flag to outgoing_change_flag when the preference is read.


In this case changing property names does not seem to be a good move, because in order to be compatible I have to maintain both, old and new names. So, maybe should I just replace strings visible to the user?
That would be acceptable.
Created attachment 66491
Patch 2
That looks better but I think the conversion from the old flag to the new flag needs to happen in both the preference page (which you have) and the CVSDecoration#initialize method because the user will expect the decorator to be configured properly without needing the visit the preference page.
Created attachment 66816
Patch 3
Patch reviewed and release to HEAD. I did make one modification. Instead of marking the parent folders as clean to trigger the decorator refresh, I just added the file to the list of modifiedResources. This triggers a redecoration of the file and it's parent folders.
Ignore my previous comment. It was for a different bug.

I have reviewed and released the patch for this bug as well. I made a slight modification to CVSDecoration since the flag needed to be converted before the values were assigned to the instance variables.
Created attachment 67012
Screen

I have noticed, that now CVS label look pretty strange. Is this connected with my patch? Or should I open a  new bug report?
Comment on attachment 67012
Screen

fixed mime type
I think this was caused by a slight modification I made to the patch. I made the modification to fix a small error but it looks like I introduced another error. Given tat this fix is not vital for 3.3, I'm going to back out of the patch and postpone the fix until 3.4.
Actually, I spoke to soon. It was my fault. It was a copy/paste error but is easy to fix.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110023" />
    <CreationDate amount="2005-09-20 10:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.2" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Sync view does not display outgoing change colors.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Go to the Team -&gt; CVS -&gt; Label Decorations page, select the General tab, and select "Enable font and 
color decorations", then go to the General -&gt; Appearance -&gt; Colors and Fonts preference page and 
change the "Outgoing Change (Background)" color to something other than the default.

Now outgoing changes show up with a colored background in both the Navigator and the Package 
Explorer, but do not show up in the Synchronize view. The decorators in the sync view should also be 
colored consistantly with the uses in the other areas.
This was fixed in RC1
Verified</WithStack>
    <WithOutStack>Go to the Team -&gt; CVS -&gt; Label Decorations page, select the General tab, and select "Enable font and 
color decorations", then go to the General -&gt; Appearance -&gt; Colors and Fonts preference page and 
change the "Outgoing Change (Background)" color to something other than the default.

Now outgoing changes show up with a colored background in both the Navigator and the Package 
Explorer, but do not show up in the Synchronize view. The decorators in the sync view should also be 
colored consistantly with the uses in the other areas.
This was fixed in RC1
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110024" />
    <CreationDate amount="2005-09-20 10:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[WorkbenchParts] toolbars being punted to another line</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>I20050920-0010

The toolbar for the junit view is being pushed to a second line despite there being more than enough 
room for it in the first line.  I need to resize the view to an obscene width in order for it to be moved up.  
Will attach screenshots.
Created attachment 27292
Toolbar on second line unnecessarily
Created attachment 27293
Toolbar on first line as expected
Is this still a problem in 3.3?

PW

Changes requested on bug 193523
Sounds like the reverse of bug 93878. Maybe due to the same underlying layouting issue.</WithStack>
    <WithOutStack>I20050920-0010

The toolbar for the junit view is being pushed to a second line despite there being more than enough 
room for it in the first line.  I need to resize the view to an obscene width in order for it to be moved up.  
Will attach screenshots.
Created attachment 27292
Toolbar on second line unnecessarily
Created attachment 27293
Toolbar on first line as expected
Is this still a problem in 3.3?

PW

Changes requested on bug 193523
Sounds like the reverse of bug 93878. Maybe due to the same underlying layouting issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110025" />
    <CreationDate amount="2005-09-20 10:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE calling Team.setAllIgnores()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330579426">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.team.core.Team.setAllIgnores(Team.java:235)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>3.2M1

An NPE will occur in Team.setAllIgnores() because Team.pluginIgnore has not been
initialized yet. This variable is lazily initialized by the getAllIgnores()
method. But if this method is not (directly or indirectly) called before
setAllIgnores is called, an NPE occurs.

java.lang.NullPointerException
	at org.eclipse.team.core.Team.setAllIgnores(Team.java:235)
...
This is an easy fix so I'll put it into M2.
Fix released to HEAD</WithStack>
    <WithOutStack>3.2M1

An NPE will occur in Team.setAllIgnores() because Team.pluginIgnore has not been
initialized yet. This variable is lazily initialized by the getAllIgnores()
method. But if this method is not (directly or indirectly) called before
setAllIgnores is called, an NPE occurs.


...
This is an easy fix so I'll put it into M2.
Fix released to HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110026" />
    <CreationDate amount="2005-09-20 10:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[generate constructor] generate constructor from fields adds illegal super call to enum [code generation]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>3.2 M2 test pass

enum Color {
	;
	private int fColorCode;
}

- Source&gt;Generate ctors using fields

&lt; expected: "Omit call to default ctor 'super'" is checked and disabled
&gt; actual: checkbox can be unchecked, resulting in an error in the code
*** Bug 110881 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>3.2 M2 test pass

enum Color {
	;
	private int fColorCode;
}

- Source&gt;Generate ctors using fields

&lt; expected: "Omit call to default ctor 'super'" is checked and disabled
&gt; actual: checkbox can be unchecked, resulting in an error in the code
*** Bug 110881 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110027" />
    <CreationDate amount="2005-09-20 10:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[refactoring] preview labels inconsistent</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- rename a type and select to renam also strings</Line>
          <Line>- open preview</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20050920

- rename a type and select to renam also strings
- open preview

see screenshot: Once it's 'Update' then its 'update'
Created attachment 27294
screenshot
Moving to M4
Fixed for build &gt;= I20051122.

Both are now upper case.
Verified in I20051213-0010.</WithStack>
    <WithOutStack>20050920

- rename a type and select to renam also strings
- open preview

see screenshot: Once it's 'Update' then its 'update'
Created attachment 27294
screenshot
Moving to M4
Fixed for build &gt;= I20051122.

Both are now upper case.
Verified in I20051213-0010.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110028" />
    <CreationDate amount="2005-09-20 11:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>log-viewer: show last log on top instead of bottom</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- when launch fails and user chooses to display the log in the log view it</Line>
          <Line>automatically sorts the view by date in descending order</Line>
          <Line>- modified column headers to indicate the direction of the sorting</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>there's a dialog sometimes popping up, showing an error-message and offering to show the log.
if one clicks ok, the log is shown in a scrollable composite, but unfortunately the last entry is 
always at bottom -- so if there are many entries one has to scroll a lot only to read a message 
sometimes og little use. it's frustrating :-)
i think the order of entries should by newest entry on top or at least the view should scroll to 
the most recent entry automatically.
Fixed
 - when launch fails and user chooses to display the log in the log view it
automatically sorts the view by date in descending order
 - modified column headers to indicate the direction of the sorting</WithStack>
    <WithOutStack>there's a dialog sometimes popping up, showing an error-message and offering to show the log.
if one clicks ok, the log is shown in a scrollable composite, but unfortunately the last entry is 
always at bottom -- so if there are many entries one has to scroll a lot only to read a message 
sometimes og little use. it's frustrating :-)
i think the order of entries should by newest entry on top or at least the view should scroll to 
the most recent entry automatically.
Fixed
 - when launch fails and user chooses to display the log in the log view it
automatically sorts the view by date in descending order
 - modified column headers to indicate the direction of the sorting</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110029" />
    <CreationDate amount="2005-09-20 11:02:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[import/export] Finish does not disable for exisitng EJB Jar on import</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Using the I-build from 09/09.

Use the EJB Jar Import wizard to import an existing EJB 2.0 jar file.

After clicking finish in the EJB Jar import wizard, the wizard does not go away,
but displays the error "A project already exists with this name and location".

However, the jar did seem to be imported propertly.
The ejb jar wizard works if you dont have that jar already imported.
On a second try, the problem is finish does not disable when it shows an error
for project location already exists.
Adopter issue deferring to R101
This is fixed and released for the 03/07/06 WTP 1.5 M6 driver.
verified
Closing.</WithStack>
    <WithOutStack>Using the I-build from 09/09.

Use the EJB Jar Import wizard to import an existing EJB 2.0 jar file.

After clicking finish in the EJB Jar import wizard, the wizard does not go away,
but displays the error "A project already exists with this name and location".

However, the jar did seem to be imported propertly.
The ejb jar wizard works if you dont have that jar already imported.
On a second try, the problem is finish does not disable when it shows an error
for project location already exists.
Adopter issue deferring to R101
This is fixed and released for the 03/07/06 WTP 1.5 M6 driver.
verified
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110030" />
    <CreationDate amount="2005-09-20 11:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[plan][compiler] Provide support for null reference analysis</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="ifstatement">
        <location start="1034" end="1245" />
        <code>if (strings != null) {
  int length = strings == null ? 0 : strings.length; // 1 - complain
  for (int i = 0; i &lt; length; i++) {
    System.out.println(strings[i]);                  // 2 - used to complain
  }
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2087" end="2109" />
        <code>Assert.isNotNull(o);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>o.toString(); // warning</Line>
          <Line>}</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050919

Compiler should provide support for null reference analysis, coupled with use of
@NonNull annotation.
See also bug 96063
Created attachment 30700
Null checks stage1: provides checks upon locals.

No way to selectively suppress the warnings yet.
User preferences should include the following line to get the warnings activated within Eclipse:
org.eclipse.jdt.core.compiler.problem.nullReference=warning
Batch compiler added a new warning toggle option, which name is 'null'.
*** Bug 80252 has been marked as a duplicate of this bug. ***
Created attachment 33507
Experimental version for checks upon locals

Released as v_634a. May have to roll back depending on the results of an experimentation run within the team.
Created attachment 33699
Patch to change the behavior on second error - applies to v_634a

Following a remark from Frédéric about the fact that the warning on line 2 below was annoying, prototyped a version in which in case of error in a test against null, the null status of a variable is no more changed.
if (strings != null) {
  int length = strings == null ? 0 : strings.length; // 1 - complain
  for (int i = 0; i &lt; length; i++) {
    System.out.println(strings[i]);                  // 2 - used to complain
  }
}
By the new behavior, we complain on line 1 and no more modify strings status, which means that it remains known as being non null (and 2 is OK).
This changes quite a few test cases diagnostics, which can be seen in the patch. But this only affects second and following situations (never the first diagnostic for a given variable) and the results seem rather OK.
Feedback will be appreciated.
Committed a couple of cleanup changes in preparation for integration build of tomorrow.
Did not release the suggestion of comment #5. Feedback welcome.
I understand that this request may go over the aim of analyzing local variables, but here it comes anyway:

A frequent pattern is to rely on methods throwing an exception if a null check fails, but this is not recognized by the analysis; the following code triggers a warning:

void m(Object o) {
  Assert.isNotNull(o);
  o.toString(); // warning
}

To solve this, the analysis would have to find out under what circumstances the exception is thrown...
(In reply to comment #7)
Thanks for your feedback.
What  is due to stretch what we've done so far quite a bit indeed.
This is part of inter procedural analysis, for which we may consider a separate effort. Moreover, this calls for something we had not thought much about yet: tell the system that a given method warranties that one of its operands is non null or else  the normal control flow gets broken (here it is an exception, but it could be a call to System#exit).
Would you please file a separate bug?

(In reply to comment #8)
&gt; Would you please file a separate bug?

Bug 126551 


(In reply to comment #9)
&gt; (In reply to comment #8)
&gt; &gt; Would you please file a separate bug?
&gt; 
&gt; Bug 126551 
&gt; 
thx

Released in HEAD.
NullReferenceTest provides lots of examples of the feature behavior.

The following paper might be relevant for this bug:
P. Chalin and F. Rioux, "Non-null References by Default in the Java Modeling Language."
Can be downloaded at: http://www.cs.concordia.ca/~chalin/main.html

The authors argue (correctly, I think) that by default, one should assume that a method argument is meant to *not* be null. If not, you tag it (say, with @AllowNull). This would be the opposite of how the suggested @NonNull annotation would be used. 

this paper seems even more relevant (no JML):
www.cs.umd.edu/~jspacco/marmoset/papers/hovemeyer-paste2005.pdf

this last one is also on the subject:
research.microsoft.com/~leino/papers/krml109.pdf
(repeating for easier clicking)

this paper seems even more relevant (no JML):
http://www.cs.umd.edu/~jspacco/marmoset/papers/hovemeyer-paste2005.pdf

this last one is also on the subject:
http://research.microsoft.com/~leino/papers/krml109.pdf
Thanks for the input.
I suggest that further comments regarding null reference analysis be added to one of the following bugs, or to new ones if appropriate:
bug 126551: [compiler] null reference analysis: add interprocedural analysis
bug  96063: [compiler] Null pointer analysis needed in autoboxing/autounboxing
bug 123399: [compiler] missing null ref warning upon specific if/do while case
bug 127244: [compiler] Null reference analysis doesn't understand assertions
Verified for 3.2 M5 using build I20060214-0010
Is this the right bug report to lobby for a @NotNull annotation? If not, please excuse my bold attempt to comment a "fixed" bug.

IDEA has recently introduced @NotNull and @Nullable annotations which come quite handy as the help to fix the "static" type system of Java and help to combat NPEs. While the solution is not perfect, it adds value and it would be nice, if Eclipse would also recognise the same annotation because that would help to make code more portable between IDEs.

See http://www.jetbrains.com/idea/documentation/howto.html for details on the semantics of IDEAs annotations.
(In reply to comment #17)
&gt; Is this the right bug report to lobby for a @NotNull annotation?
I would suggest that you use https://bugs.eclipse.org/bugs/show_bug.cgi?id=126551 instead.
*** Bug 107804 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>I20050919

Compiler should provide support for null reference analysis, coupled with use of
@NonNull annotation.
See also bug 96063
Created attachment 30700
Null checks stage1: provides checks upon locals.

No way to selectively suppress the warnings yet.
User preferences should include the following line to get the warnings activated within Eclipse:
org.eclipse.jdt.core.compiler.problem.nullReference=warning
Batch compiler added a new warning toggle option, which name is 'null'.
*** Bug 80252 has been marked as a duplicate of this bug. ***
Created attachment 33507
Experimental version for checks upon locals

Released as v_634a. May have to roll back depending on the results of an experimentation run within the team.
Created attachment 33699
Patch to change the behavior on second error - applies to v_634a

Following a remark from Frédéric about the fact that the warning on line 2 below was annoying, prototyped a version in which in case of error in a test against null, the null status of a variable is no more changed.
if (strings != null) {
  int length = strings == null ? 0 : strings.length; // 1 - complain
  for (int i = 0; i &lt; length; i++) {
    System.out.println(strings[i]);                  // 2 - used to complain
  }
}
By the new behavior, we complain on line 1 and no more modify strings status, which means that it remains known as being non null (and 2 is OK).
This changes quite a few test cases diagnostics, which can be seen in the patch. But this only affects second and following situations (never the first diagnostic for a given variable) and the results seem rather OK.
Feedback will be appreciated.
Committed a couple of cleanup changes in preparation for integration build of tomorrow.
Did not release the suggestion of comment #5. Feedback welcome.
I understand that this request may go over the aim of analyzing local variables, but here it comes anyway:

A frequent pattern is to rely on methods throwing an exception if a null check fails, but this is not recognized by the analysis; the following code triggers a warning:

void m(Object o) {
  Assert.isNotNull(o);
  o.toString(); // warning
}

To solve this, the analysis would have to find out under what circumstances the exception is thrown...
(In reply to comment #7)
Thanks for your feedback.
What  is due to stretch what we've done so far quite a bit indeed.
This is part of inter procedural analysis, for which we may consider a separate effort. Moreover, this calls for something we had not thought much about yet: tell the system that a given method warranties that one of its operands is non null or else  the normal control flow gets broken (here it is an exception, but it could be a call to System#exit).
Would you please file a separate bug?

(In reply to comment #8)
&gt; Would you please file a separate bug?

Bug 126551 


(In reply to comment #9)
&gt; (In reply to comment #8)
&gt; &gt; Would you please file a separate bug?
&gt; 
&gt; Bug 126551 
&gt; 
thx

Released in HEAD.
NullReferenceTest provides lots of examples of the feature behavior.

The following paper might be relevant for this bug:
P. Chalin and F. Rioux, "Non-null References by Default in the Java Modeling Language."
Can be downloaded at: http://www.cs.concordia.ca/~chalin/main.html

The authors argue (correctly, I think) that by default, one should assume that a method argument is meant to *not* be null. If not, you tag it (say, with @AllowNull). This would be the opposite of how the suggested @NonNull annotation would be used. 

this paper seems even more relevant (no JML):
www.cs.umd.edu/~jspacco/marmoset/papers/hovemeyer-paste2005.pdf

this last one is also on the subject:
research.microsoft.com/~leino/papers/krml109.pdf
(repeating for easier clicking)

this paper seems even more relevant (no JML):
http://www.cs.umd.edu/~jspacco/marmoset/papers/hovemeyer-paste2005.pdf

this last one is also on the subject:
http://research.microsoft.com/~leino/papers/krml109.pdf
Thanks for the input.
I suggest that further comments regarding null reference analysis be added to one of the following bugs, or to new ones if appropriate:
bug 126551: [compiler] null reference analysis: add interprocedural analysis
bug  96063: [compiler] Null pointer analysis needed in autoboxing/autounboxing
bug 123399: [compiler] missing null ref warning upon specific if/do while case
bug 127244: [compiler] Null reference analysis doesn't understand assertions
Verified for 3.2 M5 using build I20060214-0010
Is this the right bug report to lobby for a @NotNull annotation? If not, please excuse my bold attempt to comment a "fixed" bug.

IDEA has recently introduced @NotNull and @Nullable annotations which come quite handy as the help to fix the "static" type system of Java and help to combat NPEs. While the solution is not perfect, it adds value and it would be nice, if Eclipse would also recognise the same annotation because that would help to make code more portable between IDEs.

See http://www.jetbrains.com/idea/documentation/howto.html for details on the semantics of IDEAs annotations.
(In reply to comment #17)
&gt; Is this the right bug report to lobby for a @NotNull annotation?
I would suggest that you use https://bugs.eclipse.org/bugs/show_bug.cgi?id=126551 instead.
*** Bug 107804 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110031" />
    <CreationDate amount="2005-09-20 11:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[KeyBindings] misc: replacement for CommandEvent.haveKeySequenceBindingsChanged</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>3.2 preM2

The deprecated CommandEvent from o.e.ui.commands carried information about the
command's key binding having changed.

This info is not available in the non-deprecated version, nor from a different
facility (e.g. an IBindingListener that could be registered with the
IBindingService or similar). There is no way that an interested party (for
example a user affordance) can be notified when the key binding of the relevant
command changes.

Querying IBindingService#getActiveBindingsFor is not always an option:
- if the binding is displayed in a context other than where the user executes
it, e.g. on a preference page, getActiveBindingsFor may return nothing.
Dani, this will also affect a deprecation-free implementation of
AbstractInformationControl
Moving Dougs bugs</WithStack>
    <WithOutStack>3.2 preM2

The deprecated CommandEvent from o.e.ui.commands carried information about the
command's key binding having changed.

This info is not available in the non-deprecated version, nor from a different
facility (e.g. an IBindingListener that could be registered with the
IBindingService or similar). There is no way that an interested party (for
example a user affordance) can be notified when the key binding of the relevant
command changes.

Querying IBindingService#getActiveBindingsFor is not always an option:
- if the binding is displayed in a context other than where the user executes
it, e.g. on a preference page, getActiveBindingsFor may return nothing.
Dani, this will also affect a deprecation-free implementation of
AbstractInformationControl
Moving Dougs bugs</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110032" />
    <CreationDate amount="2005-09-20 11:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[64] Run as Java Application crashes on GTK 64</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>1. Import eclipse.swt and eclipse.swt.gtk.linux.x86_64 from fragment and</Line>
          <Line>eclipse.swt.examples.* from CVS.</Line>
          <Line>2. Select the org.eclipse.swt.examples.browser project.</Line>
          <Line>3. Bring up the context menu and use Run As -&gt; Java Application</Line>
          <Line>crash! 3 times out of 3 tries.</Line>
          <Line>Created attachment 27295</Line>
          <Line>stacktrace</Line>
          <Line>works fine on linux 32bits</Line>
          <Line>Created attachment 27531</Line>
          <Line>javacore file</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build id: I20050920-0010
GTK 64 bits.

1. Import eclipse.swt and eclipse.swt.gtk.linux.x86_64 from fragment and
eclipse.swt.examples.* from CVS.
2. Select the org.eclipse.swt.examples.browser project.
3. Bring up the context menu and use Run As -&gt; Java Application
crash! 3 times out of 3 tries.
Created attachment 27295
stacktrace
works fine on linux 32bits
Created attachment 27531
javacore file

I have been having a very similar error on Windows 2000.   If I select Run
As... for a package and then cancel the dialog once the progress bar starts
showing some progress I get a javacore almost every time.

I was using a J9 VM:

Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2) Classic VM
(build 1.4.2, J2RE 1.4.2 IBM Windows 32 build cn142-20040908 (JIT enabled:
jitc))

I have attached an example javacore.

I switched to the following Sun VM and no longer get the problem:

Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.
Java HotSpot(TM) Client VM (build 1.4.2_03-b02, mixed mode)
The Windows 2K build I was using was:

Version: 3.1.1
Build id: M20050923-1430
The code base has changed significantly since this bug was reported.  If it is still happening for you, please reopen this bug report.</WithStack>
    <WithOutStack>Build id: I20050920-0010
GTK 64 bits.

1. Import eclipse.swt and eclipse.swt.gtk.linux.x86_64 from fragment and
eclipse.swt.examples.* from CVS.
2. Select the org.eclipse.swt.examples.browser project.
3. Bring up the context menu and use Run As -&gt; Java Application
crash! 3 times out of 3 tries.
Created attachment 27295
stacktrace
works fine on linux 32bits
Created attachment 27531
javacore file

I have been having a very similar error on Windows 2000.   If I select Run
As... for a package and then cancel the dialog once the progress bar starts
showing some progress I get a javacore almost every time.

I was using a J9 VM:

Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2) Classic VM
(build 1.4.2, J2RE 1.4.2 IBM Windows 32 build cn142-20040908 (JIT enabled:
jitc))

I have attached an example javacore.

I switched to the following Sun VM and no longer get the problem:

Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.
Java HotSpot(TM) Client VM (build 1.4.2_03-b02, mixed mode)
The Windows 2K build I was using was:

Version: 3.1.1
Build id: M20050923-1430
The code base has changed significantly since this bug was reported.  If it is still happening for you, please reopen this bug report.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110033" />
    <CreationDate amount="2005-09-20 11:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>parser confuses cursor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>i regulary experience three issues with parser:
- i type something and after that i select something with shift+arrow.
now the code is parsed and suddenly the cursor from my ongoing selection jumps back to the 
startposition plus 2 or 3 characters corrupting my selection, so that i have to go to the start 
again and start selecting.

- i have lines of code longer than the editor's width. scrolled to the right and inserted 
something,  went with the arrow-key to the left to change some letters -- the parser passed 
and ... whoosh ... the editor scrolled to the start of the line moving the cursor out of sight.

- i have most of my code folded. type something which clearly is most of the time of my typing 
not sytactically correct. now while i type the parser passes ... and whoosh ... all my folded code 
unfolds thereby shaking the editor's content so that the "absolute" position of the cursor 
changes (i e relative to my desktop, not to the context inside the editor). at least the cursor's 
position is out of sight very seldom (happend very often with eclipse 3.0).
Please do not report more than one bug per bug report.

Problem 1: cannot reproduce using I20050921-0010. Please file a separate bug
with detailed steps to reproduce, see also the following link for information we
need:
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-text-home/development/bug-incomplete.htm

Problem 2:  cannot reproduce using I20050921-0010. Please file a separate bug
with detailed steps to reproduce, see also the following link for information we
need:
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-text-home/development/bug-incomplete.htm

Problem 3: is a duplicate of bug 80000

&gt; Please do not report more than one bug per bug report.
i'm assuming the problems have the same cause.

could you please doublecheck problem 1 and 2 on a, uhm, cheaper computer?
i'm using here a sempron3200+ w/ 768mb ram and experience a lot of faltering while using 
eclipse not experienced with better hardware.
For that you have to provide more detailed steps and also answer the questions
mentioned in the attached link, e.g. which build you're using.</WithStack>
    <WithOutStack>i regulary experience three issues with parser:
- i type something and after that i select something with shift+arrow.
now the code is parsed and suddenly the cursor from my ongoing selection jumps back to the 
startposition plus 2 or 3 characters corrupting my selection, so that i have to go to the start 
again and start selecting.

- i have lines of code longer than the editor's width. scrolled to the right and inserted 
something,  went with the arrow-key to the left to change some letters -- the parser passed 
and ... whoosh ... the editor scrolled to the start of the line moving the cursor out of sight.

- i have most of my code folded. type something which clearly is most of the time of my typing 
not sytactically correct. now while i type the parser passes ... and whoosh ... all my folded code 
unfolds thereby shaking the editor's content so that the "absolute" position of the cursor 
changes (i e relative to my desktop, not to the context inside the editor). at least the cursor's 
position is out of sight very seldom (happend very often with eclipse 3.0).
Please do not report more than one bug per bug report.

Problem 1: cannot reproduce using I20050921-0010. Please file a separate bug
with detailed steps to reproduce, see also the following link for information we
need:
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-text-home/development/bug-incomplete.htm

Problem 2:  cannot reproduce using I20050921-0010. Please file a separate bug
with detailed steps to reproduce, see also the following link for information we
need:
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-text-home/development/bug-incomplete.htm

Problem 3: is a duplicate of bug 80000

&gt; Please do not report more than one bug per bug report.
i'm assuming the problems have the same cause.

could you please doublecheck problem 1 and 2 on a, uhm, cheaper computer?
i'm using here a sempron3200+ w/ 768mb ram and experience a lot of faltering while using 
eclipse not experienced with better hardware.
For that you have to provide more detailed steps and also answer the questions
mentioned in the attached link, e.g. which build you're using.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110034" />
    <CreationDate amount="2005-09-20 11:19:00 -0400" />
    <DupId amount="92948" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Webtools.WST.Javascript" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JS syntax highlight change non on-the-fly for JSP</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When I change syntax highlighting prefs for JS, with a JSP open,
the changes don't appear in the live editor.
This only happens when the content type of the file isn't JS 
(eg. HTML, JSP)

This works fine for a standalone JS file.
LineStyleProviderForJavaScript doesnt look like it's listening to javascript 
style preference changes.

This probably broke when I changed viewerconfiguration.  Please assign to me. 
Thanks.
Actually, I spoke too soon.  This is actually a dup of an older bug, bug 92948.

*** This bug has been marked as a duplicate of 92948 ***
This bug was moved to 'closed' state, since it is so old is is assumed its dup, invalid, or worksforme resolution is no longer in qustion and the bugzilla needs no further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error in this case.</WithStack>
    <WithOutStack>When I change syntax highlighting prefs for JS, with a JSP open,
the changes don't appear in the live editor.
This only happens when the content type of the file isn't JS 
(eg. HTML, JSP)

This works fine for a standalone JS file.
LineStyleProviderForJavaScript doesnt look like it's listening to javascript 
style preference changes.

This probably broke when I changed viewerconfiguration.  Please assign to me. 
Thanks.
Actually, I spoke too soon.  This is actually a dup of an older bug, bug 92948.

*** This bug has been marked as a duplicate of 92948 ***
This bug was moved to 'closed' state, since it is so old is is assumed its dup, invalid, or worksforme resolution is no longer in qustion and the bugzilla needs no further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error in this case.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110035" />
    <CreationDate amount="2005-09-20 11:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Graphics] icons should scale with dpi and resolution</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="REOPENED" />
    <resolution amount="" />
    <WithStack>I am running my desktop at 1280x1024 on a 17" monitor - the toolbar icons end up
very small - actually, pretty much all of the icons end up too small.

Ideally, the icons be scaled to maintain a constant physical size, which would
require calculating the real DPI.

Or perhaps scaled by the height of the current default system font, which would
also be a good indicator of the users "desired physical size", and perhaps
easier to achieve than digging in the OS internals for monitor physical size.
This is a UI problem, not SWT.  We will display the icons we are given.
Could you point us at some examples (snap shots) of other applications that do
this well?
To be honest, the only ones I know off are Linux/KDE based, and that is because
they make extensive use of SVG for their icons. I seem to remember they render
the icon to the right size and cache the rendered bitmap. And they use a
specialised rendering library (ksvg) that only does renderering, none of the
other SVG stuff.

Go here
http://www.everaldo.com/crystal.html 
for screenshots of KDE Crystal, an SVG-based icon theme.

I think Windows and Mac let you define icon sets, where you can have a set of
different size icons with the same name e.g. a 16x16, a 32x32 and a 48x48 icon.

I would think that an icon set approach would be the best for now.
Have a 32x32 icon, and 256x256 icon. If the needed size is small enough, use the
32x32 icon, otherwise take the 256x256 icon and downsample/upsample to the
correct size.

There is a proposed java icon set file format (JIC/JIconFile) being discussed in
the SwingLabs/JDNC incubator project.
https://jdnc-incubator.dev.java.net/source/browse/jdnc-incubator/src/dleuck/java/org/jdesktop/jdnc/incubator/dleuck/icon/
This includes code for manipulating an icon "bundle" and scaling images.
There is currently no plan to work on this request
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.
We need some SWT support to make this happen.

PW
Obviously a very old bug, that was "kicked back to UI" from SWT, but I agree with Paul, that some SWT support is needed ... and due to our quirky Luna icons, believe there is a scenario that makes it apparent the OS is doing more than SWT is doing to accommodate non-standard resolutions or DPIs, so opened bug 433098.
See bug 382972 for discussions about Retina on Mac OS X.
I have a lot of DPI problems with Eclipse on my laptop:
2880x1620 at 15.4" display. 
Recently there are more and more high-DPI displays on the market. And I give +1 for this to be resolved sooner.</WithStack>
    <WithOutStack>I am running my desktop at 1280x1024 on a 17" monitor - the toolbar icons end up
very small - actually, pretty much all of the icons end up too small.

Ideally, the icons be scaled to maintain a constant physical size, which would
require calculating the real DPI.

Or perhaps scaled by the height of the current default system font, which would
also be a good indicator of the users "desired physical size", and perhaps
easier to achieve than digging in the OS internals for monitor physical size.
This is a UI problem, not SWT.  We will display the icons we are given.
Could you point us at some examples (snap shots) of other applications that do
this well?
To be honest, the only ones I know off are Linux/KDE based, and that is because
they make extensive use of SVG for their icons. I seem to remember they render
the icon to the right size and cache the rendered bitmap. And they use a
specialised rendering library (ksvg) that only does renderering, none of the
other SVG stuff.

Go here
http://www.everaldo.com/crystal.html 
for screenshots of KDE Crystal, an SVG-based icon theme.

I think Windows and Mac let you define icon sets, where you can have a set of
different size icons with the same name e.g. a 16x16, a 32x32 and a 48x48 icon.

I would think that an icon set approach would be the best for now.
Have a 32x32 icon, and 256x256 icon. If the needed size is small enough, use the
32x32 icon, otherwise take the 256x256 icon and downsample/upsample to the
correct size.

There is a proposed java icon set file format (JIC/JIconFile) being discussed in
the SwingLabs/JDNC incubator project.
https://jdnc-incubator.dev.java.net/source/browse/jdnc-incubator/src/dleuck/java/org/jdesktop/jdnc/incubator/dleuck/icon/
This includes code for manipulating an icon "bundle" and scaling images.
There is currently no plan to work on this request
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.
We need some SWT support to make this happen.

PW
Obviously a very old bug, that was "kicked back to UI" from SWT, but I agree with Paul, that some SWT support is needed ... and due to our quirky Luna icons, believe there is a scenario that makes it apparent the OS is doing more than SWT is doing to accommodate non-standard resolutions or DPIs, so opened bug 433098.
See bug 382972 for discussions about Retina on Mac OS X.
I have a lot of DPI problems with Eclipse on my laptop:
2880x1620 at 15.4" display. 
Recently there are more and more high-DPI displays on the market. And I give +1 for this to be resolved sooner.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110036" />
    <CreationDate amount="2005-09-20 11:21:00 -0400" />
    <DupId amount="81437" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="wst.css" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CSS bold highlight preference not working in JSP,HTML</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The bold preference isn't honored at all for CSS in another contnet type such as
JSP or HTML.

This works find for standalone CSS
I probably broke this with viewerconfiguration changes.  Please assign to me.  
Thanks.
Amy, since these "viewer config" problems could be counted as "regressions", 
and since this is an API we want to say is "done" (soon) please consider 
if a fix for M8 if possible and warrented. 
Thanks for volunteering :) 

Actually, this is a dup of a pretty old bug, bug 81437.  So this is 
technically not a regression.

*** This bug has been marked as a duplicate of 81437 ***
This bug was moved to 'closed' state, since it is so old is is assumed its dup, invalid, or worksforme resolution is no longer in qustion and the bugzilla needs no further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error in this case.</WithStack>
    <WithOutStack>The bold preference isn't honored at all for CSS in another contnet type such as
JSP or HTML.

This works find for standalone CSS
I probably broke this with viewerconfiguration changes.  Please assign to me.  
Thanks.
Amy, since these "viewer config" problems could be counted as "regressions", 
and since this is an API we want to say is "done" (soon) please consider 
if a fix for M8 if possible and warrented. 
Thanks for volunteering :) 

Actually, this is a dup of a pretty old bug, bug 81437.  So this is 
technically not a regression.

*** This bug has been marked as a duplicate of 81437 ***
This bug was moved to 'closed' state, since it is so old is is assumed its dup, invalid, or worksforme resolution is no longer in qustion and the bugzilla needs no further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error in this case.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110037" />
    <CreationDate amount="2005-09-20 11:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="UI" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[context] find referencing tasks/contexts for an element</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Given an element, search all contexts to identify those that refer to the element.
Any plans to work on this one?
Yes, this needs to be part of the next rev of the context model, which will provide both this search UI, and the ability to maintain handles in inactive contexts.  But it is a big task, so not sure yet if it will make 0.7.
This feature would be very useful for determing all the bugs that are associated with an element.  For example, you can determine which classes have the most bugs.  With a little more work you can determine which "features" or "requirements" have the most bugs (this is what I'm doing).
Need to postpone due to 2.0 focus on APIs and rename overhead.
Please vote if interested in this feature.</WithStack>
    <WithOutStack>Given an element, search all contexts to identify those that refer to the element.
Any plans to work on this one?
Yes, this needs to be part of the next rev of the context model, which will provide both this search UI, and the ability to maintain handles in inactive contexts.  But it is a big task, so not sure yet if it will make 0.7.
This feature would be very useful for determing all the bugs that are associated with an element.  For example, you can determine which classes have the most bugs.  With a little more work you can determine which "features" or "requirements" have the most bugs (this is what I'm doing).
Need to postpone due to 2.0 focus on APIs and rename overhead.
Please vote if interested in this feature.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110038" />
    <CreationDate amount="2005-09-20 11:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.UI.URLTest" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception during Test Execution</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>While executing a test, the following exception was received:

java.lang.Exception: 

For input string: "/div&gt;"
                at
test.LocalUsrLoginLogout.executeRequest(LocalUsrLoginLogout.java:3436)at       
         test.LocalUsrLoginLogout.c2GETLocalhost(LocalUsrLoginLogout.java:389)
at                sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at
sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at
sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at
java.lang.reflect.Method.invoke(Unknown Source)at
junit.framework.TestCase.runTest(TestCase.java:154) at
junit.framework.TestCase.runBare(TestCase.java:127) at
junit.framework.TestResult$1.protect(TestResult.java:106) at
junit.framework.TestResult.runProtected(TestResult.java:124) at
junit.framework.TestResult.run(TestResult.java:109) at
junit.framework.TestCase.run(TestCase.java:118) at
org.eclipse.hyades.test.common.junit.HyadesTestCase.run(HyadesTestCase.java:173)
at junit.framework.TestSuite.runTest(TestSuite.java:208) at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.runTest(HyadesTestSuite.java:428)
at junit.framework.TestSuite.run(TestSuite.java:203)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.doRun(HyadesTestSuite.java:396)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.run(HyadesTestSuite.java:311)
                at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)
                at junit.extensions.TestDecorator.run(TestDecorator.java:28)
                at junit.extensions.RepeatedTest.run(RepeatedTest.java:25)
                at junit.framework.TestSuite.runTest(TestSuite.java:208)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.runTest(HyadesTestSuite.java:428)
                at junit.framework.TestSuite.run(TestSuite.java:203)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.doRun(HyadesTestSuite.java:396)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.run(HyadesTestSuite.java:311)
                at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)
                at junit.extensions.TestDecorator.run(TestDecorator.java:28)
                at junit.extensions.RepeatedTest.run(RepeatedTest.java:25)
                at junit.framework.TestSuite.runTest(TestSuite.java:208)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.runTest(HyadesTestSuite.java:428)
                at junit.framework.TestSuite.run(TestSuite.java:203)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.doRun(HyadesTestSuite.java:396)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.run(HyadesTestSuite.java:311)
                at
org.eclipse.hyades.test.common.junit.HyadesTestRunner.run(HyadesTestRunner.java:281)
                at
org.eclipse.hyades.test.java.runner.HyadesJUnitRunner.main(HyadesJUnitRunner.java:150)
This is likely an exception thrown via the connection.

With the provided example files, I'm unable to reproduce because the recording 
refers to the relative hostname "testserver."

In my case, all methods returned an error string of "testserver."

Upon further investigate, this was found to be an UnknownHostException, but 
only the localized message was being reported to the user.

In my case, with the deliveries made in 4.1, the error is now being reported 
as "java.net.UnknownHostException: testserver" which is infinitely more 
helpful.

In the initial case of the "/div&gt;" error string, this improved error reporting 
should aid the user in diagnosing the problem.  

If this still appears to be the problem of TPTP URL execution, please reopen 
this defect with the additional information.

ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithStack>
    <WithOutStack>While executing a test, the following exception was received:

java.lang.Exception: 

For input string: "/div&gt;"
                at
test.LocalUsrLoginLogout.executeRequest(LocalUsrLoginLogout.java:3436)at       
         test.LocalUsrLoginLogout.c2GETLocalhost(LocalUsrLoginLogout.java:389)
at                sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at
sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at
sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at
java.lang.reflect.Method.invoke(Unknown Source)at
junit.framework.TestCase.runTest(TestCase.java:154) at
junit.framework.TestCase.runBare(TestCase.java:127) at
junit.framework.TestResult$1.protect(TestResult.java:106) at
junit.framework.TestResult.runProtected(TestResult.java:124) at
junit.framework.TestResult.run(TestResult.java:109) at
junit.framework.TestCase.run(TestCase.java:118) at
org.eclipse.hyades.test.common.junit.HyadesTestCase.run(HyadesTestCase.java:173)
at junit.framework.TestSuite.runTest(TestSuite.java:208) at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.runTest(HyadesTestSuite.java:428)
at junit.framework.TestSuite.run(TestSuite.java:203)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.doRun(HyadesTestSuite.java:396)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.run(HyadesTestSuite.java:311)
                at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)
                at junit.extensions.TestDecorator.run(TestDecorator.java:28)
                at junit.extensions.RepeatedTest.run(RepeatedTest.java:25)
                at junit.framework.TestSuite.runTest(TestSuite.java:208)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.runTest(HyadesTestSuite.java:428)
                at junit.framework.TestSuite.run(TestSuite.java:203)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.doRun(HyadesTestSuite.java:396)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.run(HyadesTestSuite.java:311)
                at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)
                at junit.extensions.TestDecorator.run(TestDecorator.java:28)
                at junit.extensions.RepeatedTest.run(RepeatedTest.java:25)
                at junit.framework.TestSuite.runTest(TestSuite.java:208)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.runTest(HyadesTestSuite.java:428)
                at junit.framework.TestSuite.run(TestSuite.java:203)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.doRun(HyadesTestSuite.java:396)
                at
org.eclipse.hyades.test.common.junit.HyadesTestSuite.run(HyadesTestSuite.java:311)
                at
org.eclipse.hyades.test.common.junit.HyadesTestRunner.run(HyadesTestRunner.java:281)
                at
org.eclipse.hyades.test.java.runner.HyadesJUnitRunner.main(HyadesJUnitRunner.java:150)
This is likely an exception thrown via the connection.

With the provided example files, I'm unable to reproduce because the recording 
refers to the relative hostname "testserver."

In my case, all methods returned an error string of "testserver."

Upon further investigate, this was found to be an UnknownHostException, but 
only the localized message was being reported to the user.

In my case, with the deliveries made in 4.1, the error is now being reported 
as "java.net.UnknownHostException: testserver" which is infinitely more 
helpful.

In the initial case of the "/div&gt;" error string, this improved error reporting 
should aid the user in diagnosing the problem.  

If this still appears to be the problem of TPTP URL execution, please reopen 
this defect with the additional information.

ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110039" />
    <CreationDate amount="2005-09-20 11:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="Community" />
    <component amount="Website" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>kudos page on eclipse.org</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Hi

Perhaps there should be a kudos page on eclipse.org where postings of this
nature could be aggregated.  

I looked on the website today but couldn't find such a page.  It could be linked
from the main page with the "Welcome to eclipse.org: Eclipse is an open source
community etc....section

This would also help illustrate to the newbie what eclipse is all about.

----- Forwarded by Kim Moir/Ottawa/IBM on 20/09/2005 11:19 AM -----
"Mike Milinkovich" &lt;mike.milinkovich@eclipse.org&gt; 
Sent by: eclipse.org-committers-bounces@eclipse.org
19/09/2005 08:39 AM
Please respond to
Eclipse Committers
	
To
&lt;eclipse.org-committers@eclipse.org&gt;
cc

Subject
[eclipse.org-committers] FW: Wow
	

	


 
All,

This email came in to info@eclipse.org, and I thought I would pass it along.
It is definitely nice to see this kind of recognition for your efforts.
Congratulations to all.

-----Original Message-----
Sent: September 16, 2005 9:39 PM
To: info@eclipse.org
Subject: Wow


Having been a professional Java programmer for about 5 or so years, and in
the midst of a pretty large OpenGL/Java application, I recently tried
Eclipse after the most recent of my friends recommended that I try it, and
I've been using it for about a month now.

I very rarely write to authors of software - mostly I don't feel the need -
but with Eclipse I feel that I must make an exception.

This is categorically the single best piece of software I've ever seen, and
I am absolutely blown away by it.  Having been someone who has always
programmed in vim + command line, I never thought that I'd really enjoy
using an IDE, and have tried about 5 without success until this one.

The tight integration with JUnit is simply amazing - and I've fallen in love
with the hit-test-button-look-for-green-bar cycle.  The debugger is
absolutely second-to-none - I love it.  The integration with CVS is utterly
seamless, and whilst the SubClipse plugin has a little way to go, it's
really already quite excellent.  The configurability of Eclipse, with
respect to tieing it in to my coding style, leaves me with my jaw hanging.
An avid perl-hacker many of my Java-projects require a fair amount of
perl-maintenance, and Eclipse integrates with my Cygwin environment in an
exceptionally intuitive manner.  I could go on and on, but won't bore you -
you're well aware of the quality of the software having written it
yourself...

So I'll just say - a big thank you to all on the Eclipse team.  I take my
hat off to you.

A very happy Coder.

_______________________________________________
eclipse.org-committers mailing list
eclipse.org-committers@eclipse.org
https://dev.eclipse.org/mailman/listinfo/eclipse.org-committers
I like the idea.  I wonder if there are any legal/process implications to
posting e-mails that come in to webmaster@eclipse.org.

Adding Bjorn, Susan and Janet for comment.

D.
I created a Wiki page for the Kudos: http://wiki.eclipse.org/index.php/Kudos

I'll see if we can link to it from the www.eclipse.org homepage.

D.</WithStack>
    <WithOutStack>Hi

Perhaps there should be a kudos page on eclipse.org where postings of this
nature could be aggregated.  

I looked on the website today but couldn't find such a page.  It could be linked
from the main page with the "Welcome to eclipse.org: Eclipse is an open source
community etc....section

This would also help illustrate to the newbie what eclipse is all about.

----- Forwarded by Kim Moir/Ottawa/IBM on 20/09/2005 11:19 AM -----
"Mike Milinkovich" &lt;mike.milinkovich@eclipse.org&gt; 
Sent by: eclipse.org-committers-bounces@eclipse.org
19/09/2005 08:39 AM
Please respond to
Eclipse Committers
	
To
&lt;eclipse.org-committers@eclipse.org&gt;
cc

Subject
[eclipse.org-committers] FW: Wow
	

	


 
All,

This email came in to info@eclipse.org, and I thought I would pass it along.
It is definitely nice to see this kind of recognition for your efforts.
Congratulations to all.

-----Original Message-----
Sent: September 16, 2005 9:39 PM
To: info@eclipse.org
Subject: Wow


Having been a professional Java programmer for about 5 or so years, and in
the midst of a pretty large OpenGL/Java application, I recently tried
Eclipse after the most recent of my friends recommended that I try it, and
I've been using it for about a month now.

I very rarely write to authors of software - mostly I don't feel the need -
but with Eclipse I feel that I must make an exception.

This is categorically the single best piece of software I've ever seen, and
I am absolutely blown away by it.  Having been someone who has always
programmed in vim + command line, I never thought that I'd really enjoy
using an IDE, and have tried about 5 without success until this one.

The tight integration with JUnit is simply amazing - and I've fallen in love
with the hit-test-button-look-for-green-bar cycle.  The debugger is
absolutely second-to-none - I love it.  The integration with CVS is utterly
seamless, and whilst the SubClipse plugin has a little way to go, it's
really already quite excellent.  The configurability of Eclipse, with
respect to tieing it in to my coding style, leaves me with my jaw hanging.
An avid perl-hacker many of my Java-projects require a fair amount of
perl-maintenance, and Eclipse integrates with my Cygwin environment in an
exceptionally intuitive manner.  I could go on and on, but won't bore you -
you're well aware of the quality of the software having written it
yourself...

So I'll just say - a big thank you to all on the Eclipse team.  I take my
hat off to you.

A very happy Coder.

_______________________________________________
eclipse.org-committers mailing list
eclipse.org-committers@eclipse.org
https://dev.eclipse.org/mailman/listinfo/eclipse.org-committers
I like the idea.  I wonder if there are any legal/process implications to
posting e-mails that come in to webmaster@eclipse.org.

Adding Bjorn, Susan and Janet for comment.

D.
I created a Wiki page for the Kudos: http://wiki.eclipse.org/index.php/Kudos

I'll see if we can link to it from the www.eclipse.org homepage.

D.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110040" />
    <CreationDate amount="2005-09-20 11:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>Should not be able to put non VM arguments into VM</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>In the launch configurations dialog you can set VM variables which the VM 
cannot accept (using the select variable dialog). 

There should be some form of filtering of the list of available variables to 
only show the ones you can use for your VM. Not terribly important, since you 
could simply type in bad variables in the area provided; but if we provide a 
list of variables some people might think that they can be used simply because 
Eclipse provides them. Causing no end of pain and confusion.
VM arguments are VM specific, and there are no VM options that we can use to 
query valid VM args before launching (i.e. so we can dynamically determine if 
the args may be valid). 

Propose to close.</WithStack>
    <WithOutStack>In the launch configurations dialog you can set VM variables which the VM 
cannot accept (using the select variable dialog). 

There should be some form of filtering of the list of available variables to 
only show the ones you can use for your VM. Not terribly important, since you 
could simply type in bad variables in the area provided; but if we provide a 
list of variables some people might think that they can be used simply because 
Eclipse provides them. Causing no end of pain and confusion.
VM arguments are VM specific, and there are no VM options that we can use to 
query valid VM args before launching (i.e. so we can dynamically determine if 
the args may be valid). 

Propose to close.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110041" />
    <CreationDate amount="2005-09-20 11:34:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>label in preference page looks ugly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. make that textform to be transperent.</Line>
          <Line>2. use a real SWT widget: Link or Label</Line>
          <Line>Dejan, what can we do here with FormText.setBackground()?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build id: I20050920-0010

This looks worse in gtk but it can be seem in win32 as well.
go to preference page, plug-in development, source code locations.
check the label right above the table (the one that says: "PDE searches...").

I'm guessing it is a TextForm or some other emulated text widget, anyhow, it has
a white backgrond what contrasts against the dark gray background of its parent
looking out of place.

If you try to set the background of TextForm to match the background of the
parent it will fail on win32 cause the background can be gradient.
The options are:
1. make that textform to be transperent.
2. use a real SWT widget: Link or Label
Dejan, what can we do here with FormText.setBackground()?

setting the background to null causes a problem on XP with the new tab look

not setting at all is a problem on all platforms.
There is no reason to use FormText here - it is an overkill. Link widget from 
SWT can do all you want without any penalty.
fixed by using the Link widget.</WithStack>
    <WithOutStack>Build id: I20050920-0010

This looks worse in gtk but it can be seem in win32 as well.
go to preference page, plug-in development, source code locations.
check the label right above the table (the one that says: "PDE searches...").

I'm guessing it is a TextForm or some other emulated text widget, anyhow, it has
a white backgrond what contrasts against the dark gray background of its parent
looking out of place.

If you try to set the background of TextForm to match the background of the
parent it will fail on win32 cause the background can be gradient.
The options are:
1. make that textform to be transperent.
2. use a real SWT widget: Link or Label
Dejan, what can we do here with FormText.setBackground()?

setting the background to null causes a problem on XP with the new tab look

not setting at all is a problem on all platforms.
There is no reason to use FormText here - it is an overkill. Link widget from 
SWT can do all you want without any penalty.
fixed by using the Link widget.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110042" />
    <CreationDate amount="2005-09-20 11:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Core" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>consider limiting size of active search matches</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The default could be something like a dozen for each provider, but should be
configurable via preference.  If more is found in earlier degrees than the further
out ones won't be searched.  This will reduce performance degradation and active
search view overload.
Eugene accurately points out that this is not inline with current Eclipse search behavior, so lowering
priority until we have a better understanding of the problem:

-----
Interestingly, but neither
standard search or quick-type popup (from Ctrl-T) allows to limit results and can cause similar
freeze effect (e.g. try to use Ctrl-T on Object.toString() method)
-----

Active Search is now in the sandbox and will get redesigned.</WithStack>
    <WithOutStack>The default could be something like a dozen for each provider, but should be
configurable via preference.  If more is found in earlier degrees than the further
out ones won't be searched.  This will reduce performance degradation and active
search view overload.
Eugene accurately points out that this is not inline with current Eclipse search behavior, so lowering
priority until we have a better understanding of the problem:

-----
Interestingly, but neither
standard search or quick-type popup (from Ctrl-T) allows to limit results and can cause similar
freeze effect (e.g. try to use Ctrl-T on Object.toString() method)
-----

Active Search is now in the sandbox and will get redesigned.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110043" />
    <CreationDate amount="2005-09-20 11:36:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Scrollbars appear when opening a GEF editor on Windows</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When you open foo.text, the horizontal scrollbar temporarily appears indicating
that the flowpage was layed out using -1 as its width hint, which causes the
paragraph to layout on a single line.

Why is this happening??
The vertical scrollbar appears as well.
That's strange. Why does the editor get a chance to paint before we layout? 
Perhaps just sizing the canvas causes the scrollbars to show up with their 
default ranges.
Apparently, this is nothing new.  It happens with all the editors and I was 
able to reproduce the problem in 3.0.  This does not happen on GTK, though.
Fixed.

The problem is that the scrollbars become visible with the default values before FigureCanvas gets a chance to adjust them.  The fix was to hide the scrollbars initially.</WithStack>
    <WithOutStack>When you open foo.text, the horizontal scrollbar temporarily appears indicating
that the flowpage was layed out using -1 as its width hint, which causes the
paragraph to layout on a single line.

Why is this happening??
The vertical scrollbar appears as well.
That's strange. Why does the editor get a chance to paint before we layout? 
Perhaps just sizing the canvas causes the scrollbars to show up with their 
default ranges.
Apparently, this is nothing new.  It happens with all the editors and I was 
able to reproduce the problem in 3.0.  This does not happen on GTK, though.
Fixed.

The problem is that the scrollbars become visible with the default values before FigureCanvas gets a chance to adjust them.  The fix was to hide the scrollbars initially.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110044" />
    <CreationDate amount="2005-09-20 11:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Profiling" />
    <component amount="Trace.UI" />
    <Version amount="4.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>UML2 Trace Interactions (Thread Interactions) View does not display cross-thread method invocations.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="1075" end="1155" />
        <code>System.out.println(Thread.currentThread().getName()+" in ClassOne.methodOne()");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1160" end="1240" />
        <code>System.out.println(Thread.currentThread().getName()+" in ClassTwo.methodTwo()");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>UML2 Trace Interactions (Thread Interactions) View does not display cross-
thread method invocations.

Using the enclosed test classes, the two method invocations (two per class) 
should be displayed in the UML2 Trace Interactions (Thread Interactions) View 
as cross-thread method invocations.  However, they are currently displayed as 
call-backs on the same thread.
Created attachment 27297
Screen capture.
Created attachment 27298
Profile file.
Created attachment 27299
ClassOne.java
Created attachment 27300
ClassTwo.java
Created attachment 27335
TraceContents-Wednesday__September_21__2005_9_57_39_AM_EDT.xml
Created attachment 27336
Trace.java
Using another test class (https://bugs.eclipse.org/bugs/attachment.cgi?
id=27336), the generated profile file 
(https://bugs.eclipse.org/bugs/attachment.cgi?id=27335) illustrates (see line 
83) that a method invocation (methodOne()) to ThreadTwo (threadIdRef="9") is 
made from ThreadOne (threadIdRef="8").


Hi Paul,
In order to better understand, I've changed the methodOne() and methodTwo() 
contents with the following:
System.out.println(Thread.currentThread().getName()+" in ClassOne.methodOne()");
and
System.out.println(Thread.currentThread().getName()+" in ClassTwo.methodTwo()");
respectevely.
The output is now:
ClassOne in ClassTwo.methodTwo()
ClassTwo in ClassOne.methodOne()
ClassOne in ClassTwo.methodTwo()
ClassTwo in ClassOne.methodOne()

That means that the executing thread of ClassTwo.methodTwo() is ClassOne.
Isn't there some confusion between class instance and running thread? Nothing 
forbids them to actually differ like in your example.
BTW, Java is not designed for cross-thread calls. 
Do not hesitate if you think I'm wrong.

As Dominique mentioned there is no such thing as cross thread calls in Java,
what you want to see is a fake link between the thread objects, just because it
happens that one thread object calls the other (calls that basically happens in
different JVM threads as you can see in the trace).

We can get thread interactions in the distributed case where we use the
InvocationContext to link two method invocations that comes from different JVMs,
and that's basically a real interaction which is shown in the
host/agent/thread/class/object interaction views.

After reviewing the documentation on the JVM threading model, this is defect is 
invalid since cross-thread method invocations are not supported.  As such, 
closing.  However, the JVMPI trace data appears to contain sufficient 
information (see comment #7) to create the logical links between thread 
objects.  Consider revising the UML2 Trace Interactions (Thread Interactions) 
view to toggle these logical links on/off.</WithStack>
    <WithOutStack>UML2 Trace Interactions (Thread Interactions) View does not display cross-
thread method invocations.

Using the enclosed test classes, the two method invocations (two per class) 
should be displayed in the UML2 Trace Interactions (Thread Interactions) View 
as cross-thread method invocations.  However, they are currently displayed as 
call-backs on the same thread.
Created attachment 27297
Screen capture.
Created attachment 27298
Profile file.
Created attachment 27299
ClassOne.java
Created attachment 27300
ClassTwo.java
Created attachment 27335
TraceContents-Wednesday__September_21__2005_9_57_39_AM_EDT.xml
Created attachment 27336
Trace.java
Using another test class (https://bugs.eclipse.org/bugs/attachment.cgi?
id=27336), the generated profile file 
(https://bugs.eclipse.org/bugs/attachment.cgi?id=27335) illustrates (see line 
83) that a method invocation (methodOne()) to ThreadTwo (threadIdRef="9") is 
made from ThreadOne (threadIdRef="8").


Hi Paul,
In order to better understand, I've changed the methodOne() and methodTwo() 
contents with the following:
System.out.println(Thread.currentThread().getName()+" in ClassOne.methodOne()");
and
System.out.println(Thread.currentThread().getName()+" in ClassTwo.methodTwo()");
respectevely.
The output is now:
ClassOne in ClassTwo.methodTwo()
ClassTwo in ClassOne.methodOne()
ClassOne in ClassTwo.methodTwo()
ClassTwo in ClassOne.methodOne()

That means that the executing thread of ClassTwo.methodTwo() is ClassOne.
Isn't there some confusion between class instance and running thread? Nothing 
forbids them to actually differ like in your example.
BTW, Java is not designed for cross-thread calls. 
Do not hesitate if you think I'm wrong.

As Dominique mentioned there is no such thing as cross thread calls in Java,
what you want to see is a fake link between the thread objects, just because it
happens that one thread object calls the other (calls that basically happens in
different JVM threads as you can see in the trace).

We can get thread interactions in the distributed case where we use the
InvocationContext to link two method invocations that comes from different JVMs,
and that's basically a real interaction which is shown in the
host/agent/thread/class/object interaction views.

After reviewing the documentation on the JVM threading model, this is defect is 
invalid since cross-thread method invocations are not supported.  As such, 
closing.  However, the JVMPI trace data appears to contain sufficient 
information (see comment #7) to create the logical links between thread 
objects.  Consider revising the UML2 Trace Interactions (Thread Interactions) 
view to toggle these logical links on/off.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110045" />
    <CreationDate amount="2005-09-20 11:43:00 -0400" />
    <DupId amount="129796" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Markers] Multiple duplicated mnemonics in Problems Filters dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Tasks view, drop down menu, select Configure Filters..., hit Alt key.

I is used for Filters list and Info checkbox
E is used for New Filter button and Error checkbox


*** This bug has been marked as a duplicate of 129796 ***</WithStack>
    <WithOutStack>Tasks view, drop down menu, select Configure Filters..., hit Alt key.

I is used for Filters list and Info checkbox
E is used for New Filter button and Error checkbox


*** This bug has been marked as a duplicate of 129796 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110046" />
    <CreationDate amount="2005-09-20 11:43:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Problem occured: Update Operation  failed"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>above error was yielded by an update i just tried. what is it supposed to mean?
the should at least be an information about the plugin concerned and possible causes of the 
failure.
tried again today, same result. a look into .log gave

[Server returned HTTP response code:
 "404 Not Found" for URL: http://download.eclipse.org/tools/uml2/updates/plugins/org.
eclipse.uml2.examples_1.1.1.jar.]

-- but ... i _did_not_ chose http://download.eclipse.org but the german server of innoopract. 
so, where does that url come from?
This is a mass update of Platform Update bugs that have had no activity in three years. Platform Update was replaced in Eclipse 3.4 (2008) by a new provisioning system called Equinox p2. If this bug or enhancement is not already addressed in p2 please enter a new bug report against p2 (RT &gt; Equinox &gt; p2). If you still want to see this bug addressed in the deprecated Platform Update component, please reopen this bug. Patches welcome.</WithStack>
    <WithOutStack>above error was yielded by an update i just tried. what is it supposed to mean?
the should at least be an information about the plugin concerned and possible causes of the 
failure.
tried again today, same result. a look into .log gave

[Server returned HTTP response code:
 "404 Not Found" for URL: http://download.eclipse.org/tools/uml2/updates/plugins/org.
eclipse.uml2.examples_1.1.1.jar.]

-- but ... i _did_not_ chose http://download.eclipse.org but the german server of innoopract. 
so, where does that url come from?
This is a mass update of Platform Update bugs that have had no activity in three years. Platform Update was replaced in Eclipse 3.4 (2008) by a new provisioning system called Equinox p2. If this bug or enhancement is not already addressed in p2 please enter a new bug report against p2 (RT &gt; Equinox &gt; p2). If you still want to see this bug addressed in the deprecated Platform Update component, please reopen this bug. Patches welcome.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110047" />
    <CreationDate amount="2005-09-20 11:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Flashing on one set of SWT File Viewer example</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>1. Import eclipse.swt and org.eclipse.swt.win32.win32.x86 from fragment and</Line>
          <Line>eclipse.swt.examples.* from CVS.</Line>
          <Line>2. Select the org.eclipse.swt.examples.fileviewer project.</Line>
          <Line>3. Run As -&gt; Run -&gt; SWT Application</Line>
          <Line>4. Resize the windown using the right bottom corner.</Line>
          <Line>Note that the is a square that constantly flashes on the top right side of the</Line>
          <Line>application.</Line>
          <Line>Please show me.</Line>
          <Line>You ever going to show me?</Line>
          <Line>Never showed me.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>1. Import eclipse.swt and org.eclipse.swt.win32.win32.x86 from fragment and
eclipse.swt.examples.* from CVS.
2. Select the org.eclipse.swt.examples.fileviewer project.
3. Run As -&gt; Run -&gt; SWT Application
4. Resize the windown using the right bottom corner. 
Note that the is a square that constantly flashes on the top right side of the 
application.
Please show me.
You ever going to show me?
Never showed me.</WithStack>
    <WithOutStack>1. Import eclipse.swt and org.eclipse.swt.win32.win32.x86 from fragment and
eclipse.swt.examples.* from CVS.
2. Select the org.eclipse.swt.examples.fileviewer project.
3. Run As -&gt; Run -&gt; SWT Application
4. Resize the windown using the right bottom corner. 
Note that the is a square that constantly flashes on the top right side of the 
application.
Please show me.
You ever going to show me?
Never showed me.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110048" />
    <CreationDate amount="2005-09-20 11:52:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>API to get the list of folders touched by a Java builder clean</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="7656" end="8160" />
        <code>/**
 * Returns the output folders that will be cleaned by the next Clean operation.
 * The result is null if the project's output folders are shared with other tools and
 * the option JavaCore.CORE_JAVA_BUILD_CLEAN_OUTPUT_FOLDER is false.
 * 
 * @return different groups of output folders to be cleaned, currently:
 * the first array contains the output folders which are cleaned entirely, and
 * the second array contains the output folders in which only the .class files are cleaned.
 * @since 3.2
 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="8161" end="8200" />
        <code>IContainer[][] computeCleanedFolders();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>a. Either the builder can communicate a list of files/folders and we make a</Line>
          <Line>dialog out of it</Line>
          <Line>b. The builder can return a status string that we just show.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>1. before changing a classpath: API similar to validateClasspath</Line>
          <Line>2. a callback that is invoked while or just before build.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="REOPENED" />
    <resolution amount="" />
    <WithStack>I20050920

An API that returns the list of folders touched by the Java builder during a
clean is needed on IJavaProject.
Martin, you're only interested in output folders, not the files?

Also not the source folders either?
a. Either the builder can communicate a list of files/folders and we make a
dialog out of it
b. The builder can return a status string that we just show. 

Note that we are only concerned about 'user files'. Files that might belong to
the user (not interested about the .class files that are just going to be
regenerated by the builder)

I see two places where the builder could communicate this information:
1. before changing a classpath: API similar to validateClasspath
2. a callback that is invoked while or just before build.

In case 1. a dialog showing information is enough. The user can then decide to
not change the build path to avoid the file deletion.
In case 2. The user must be able to say yes/no to the deletion of files (I guess
we can't keep the build on hold)


A list of files does not scale.

What if the user had 1000's of additional random files? What's the point in 
displaying those?

As for .class files, I thought that's what you wanted... since users complain 
when we delete their .class files and they didn't expect it.

In this case, if they had no additional files, then they wouldn't get any 
message at all.
We can present the 100 files in a resource tree structure, so this should be
possible.
Also .class files can be user files. As written, not interesting are only .class
files that will be recreated by the builder again. But there's always these
people who start copying files in their output folders (or put their output
folders to a folder that already contains library).

Just to make sure we agree on that: The worst thing an IDE can do is to delete
files that it shouldn't. So I think we better show a list of 1000 files and let
the user click OK, as that puts the blame back on the user. Sure, something like
'all files in folder 'zzz' mostly would do as well, but what if somebody created
a linked folder 'zzz' to its 'My Documents' folder?
Well in that case he is an idiot! ;)
So what if we gave you IResource[] that contained all files that are NOT 
marked as derived?

These should be all files that the user wrote, that we think we'll delete 
without 'their permission'.
Sound good!

Do you want to be able to report that while building?
I never want to report it.

I suspect you're the only person who will ever call this... and it won't be 
fast.

It could take quite a while to walk all resources looking for nothing.
At some point of the build you will remove files. Why not giving a callback then?
The builder cannot give callbacks that may delay the build forever.

What if the user starts a build and leaves for the night?

Personally, I think all we need is to confirm with the user that he knows 
we're about the delete the output folders.

I don't think we even have to tell him what we're deleting.

Computing this list of resources is a waste of time in my opinion.
What about scenarios where the output folder is the same as a source folder? 
We can solve this problem also by improving the builder so that it would never
ever delete a file that it didn't build itself. As long as you can't guarantee
that you better ask the user.
If that's a dialog that stops the build for a night that might be worth it if it
is about deleting something that the user will never regret you for :-)
We disagree.

There is an explicit option for users to say they do not want us to clean the 
output folder.

They can turn it on and pay the performance penalty.

For everyone else, we'll continue to clean it as quickly as possible.
Then let's disable the 'auto scrub option' by default. We shouldn't
unnecessarely expose unexperienced users.

Absolutely NOT!

Let's be very clear - its much slower with that option.

We will not make every user pay because very few users do not understand their 
own project setup.

All we need is a generic confirmation in the UI that forces them to look at 
their output folders to see what we're about to delete.
No way. Managing the output folder is the expected behavior by default.

I would picture the API as such:
IJavaProject#computeCleanedFolders()

It would tell about the root folders about to be cleaned, and give an indication
whether they are going to be entirely cleaned or only .class files are going to
be deleted (we may have more modes in the future, e.g. only clean managed
content, so the API should allow evolutions).

Re: deleting only contents we created. This is a separate topic which got stated 
a long time ago, and results in the current behavior. It is not obvious what a
preferrable scenario is. Keeping crap around for ever is often an issue; "clean"
is supposed to make things clean.

Also, the builder shouldn't do callback on a per file basis, but rather UI
should prompt user (offering an option to never prompt again) when he hit the
clean/build button. This wouldn't answer the case where an incremental build is
actually performing a full build for certain reasons (classpath change), but
maybe we could handle this case separately. A callback in the builder has the
disadvantage that the build process may already be half-way through, so
cancelling the build in the middle may leave busted state. Additionnally, a
build is intended to be allowed to perform fully in background, so the prompting
should be reserved to UI interactions.
My previous comment relates to comment 14.
List of folders is fine too.
There's still the open question: When do we prompt.
Obviouly, when the user changes the classpath.
The more difficult scenarios are: New classpath from CVS-catchup. User manually
changes the classpath. User changes a folder to an external folder (not straigth
forward but possible). These cases can only be detected on build. Kent says, no
dialogs on build. I agree with Philipp, for sure we don't show a dialog per
file, all at once of course.


Whichever user on the team makes a change thru the UI &amp; agrees to the clean 
speaks for everyone on his team. Very likely, he is also the only one who 
knows how the project is setup in the first place.

Its a waste of time to prompt a new team member whether he wants a clean to 
happen because of a CVS update.

The only change we should be making is to prompt the user (and remember that 
he told you to buzz off) the first time he chooses Project-&gt;Clean... &amp; explain 
to him what folders are about to be cleaned.
So before I release this, I would like to know when you expect to call it.

When I do a Clean... its on my entire workspace, so does that mean I'm going to see dozens of dialogs telling me what output folders are about to be cleaned?

What if I have 100 source projects in my workspace, will you prompt me 100 times before the build starts?


If so, I think this is a waste of time &amp; we should just do a single confirmation to make sure users are aware of the 'clean output folder' option.
I assumed the dialog would initially be shown when user changes the classpath for a project through the UI.
Including it in true clean UI action would require a hook in the UI/build manager which Martin was going to ask... but this feels a bit more advanced. Now this doesn't handle nicely the case where you get a classpath change from CVS, but you can still hope that whoever changed it got prompted for confirmation.
Added CleanOutputFolderTests
What's the new API?
Kent: PRs are meant to be self-contained.


From build notes:

Added an API method on IJavaProject to compute the output folders that will be cleaned by the next Clean operation.

/**
 * Returns the output folders that will be cleaned by the next Clean operation.
 * The result is null if the project's output folders are shared with other tools and
 * the option JavaCore.CORE_JAVA_BUILD_CLEAN_OUTPUT_FOLDER is false.
 * 
 * @return different groups of output folders to be cleaned, currently:
 * the first array contains the output folders which are cleaned entirely, and
 * the second array contains the output folders in which only the .class files are cleaned.
 * @since 3.2
 */
IContainer[][] computeCleanedFolders();

Would it be possible to have an API where I pass the classpath and outputfolder that I am going to set? (Similar to JavaConventions.validateClasspath(...)).

The idea is to show the information to the user before it is to late.
Makes total sense. Reopening.
It would have helped a lot if that was mentioned 3 weeks ago.

So you have no use for this API method? If not, we'll remove it.
I think I did, see Comment 2:

&gt; I see two places where the builder could communicate this information:
&gt; 1. before changing a classpath: API similar to validateClasspath

Yes, you can remove the API without arguments.
So comment #18 was someone else?

Removed the new API.

No idea when we'll get around to adding this other API.
Reconsider for 3.3
Deferring post 3.4</WithStack>
    <WithOutStack>I20050920

An API that returns the list of folders touched by the Java builder during a
clean is needed on IJavaProject.
Martin, you're only interested in output folders, not the files?

Also not the source folders either?
a. Either the builder can communicate a list of files/folders and we make a
dialog out of it
b. The builder can return a status string that we just show. 

Note that we are only concerned about 'user files'. Files that might belong to
the user (not interested about the .class files that are just going to be
regenerated by the builder)

I see two places where the builder could communicate this information:
1. before changing a classpath: API similar to validateClasspath
2. a callback that is invoked while or just before build.

In case 1. a dialog showing information is enough. The user can then decide to
not change the build path to avoid the file deletion.
In case 2. The user must be able to say yes/no to the deletion of files (I guess
we can't keep the build on hold)


A list of files does not scale.

What if the user had 1000's of additional random files? What's the point in 
displaying those?

As for .class files, I thought that's what you wanted... since users complain 
when we delete their .class files and they didn't expect it.

In this case, if they had no additional files, then they wouldn't get any 
message at all.
We can present the 100 files in a resource tree structure, so this should be
possible.
Also .class files can be user files. As written, not interesting are only .class
files that will be recreated by the builder again. But there's always these
people who start copying files in their output folders (or put their output
folders to a folder that already contains library).

Just to make sure we agree on that: The worst thing an IDE can do is to delete
files that it shouldn't. So I think we better show a list of 1000 files and let
the user click OK, as that puts the blame back on the user. Sure, something like
'all files in folder 'zzz' mostly would do as well, but what if somebody created
a linked folder 'zzz' to its 'My Documents' folder?
Well in that case he is an idiot! ;)
So what if we gave you IResource[] that contained all files that are NOT 
marked as derived?

These should be all files that the user wrote, that we think we'll delete 
without 'their permission'.
Sound good!

Do you want to be able to report that while building?
I never want to report it.

I suspect you're the only person who will ever call this... and it won't be 
fast.

It could take quite a while to walk all resources looking for nothing.
At some point of the build you will remove files. Why not giving a callback then?
The builder cannot give callbacks that may delay the build forever.

What if the user starts a build and leaves for the night?

Personally, I think all we need is to confirm with the user that he knows 
we're about the delete the output folders.

I don't think we even have to tell him what we're deleting.

Computing this list of resources is a waste of time in my opinion.
What about scenarios where the output folder is the same as a source folder? 
We can solve this problem also by improving the builder so that it would never
ever delete a file that it didn't build itself. As long as you can't guarantee
that you better ask the user.
If that's a dialog that stops the build for a night that might be worth it if it
is about deleting something that the user will never regret you for :-)
We disagree.

There is an explicit option for users to say they do not want us to clean the 
output folder.

They can turn it on and pay the performance penalty.

For everyone else, we'll continue to clean it as quickly as possible.
Then let's disable the 'auto scrub option' by default. We shouldn't
unnecessarely expose unexperienced users.

Absolutely NOT!

Let's be very clear - its much slower with that option.

We will not make every user pay because very few users do not understand their 
own project setup.

All we need is a generic confirmation in the UI that forces them to look at 
their output folders to see what we're about to delete.
No way. Managing the output folder is the expected behavior by default.

I would picture the API as such:
IJavaProject#computeCleanedFolders()

It would tell about the root folders about to be cleaned, and give an indication
whether they are going to be entirely cleaned or only .class files are going to
be deleted (we may have more modes in the future, e.g. only clean managed
content, so the API should allow evolutions).

Re: deleting only contents we created. This is a separate topic which got stated 
a long time ago, and results in the current behavior. It is not obvious what a
preferrable scenario is. Keeping crap around for ever is often an issue; "clean"
is supposed to make things clean.

Also, the builder shouldn't do callback on a per file basis, but rather UI
should prompt user (offering an option to never prompt again) when he hit the
clean/build button. This wouldn't answer the case where an incremental build is
actually performing a full build for certain reasons (classpath change), but
maybe we could handle this case separately. A callback in the builder has the
disadvantage that the build process may already be half-way through, so
cancelling the build in the middle may leave busted state. Additionnally, a
build is intended to be allowed to perform fully in background, so the prompting
should be reserved to UI interactions.
My previous comment relates to comment 14.
List of folders is fine too.
There's still the open question: When do we prompt.
Obviouly, when the user changes the classpath.
The more difficult scenarios are: New classpath from CVS-catchup. User manually
changes the classpath. User changes a folder to an external folder (not straigth
forward but possible). These cases can only be detected on build. Kent says, no
dialogs on build. I agree with Philipp, for sure we don't show a dialog per
file, all at once of course.


Whichever user on the team makes a change thru the UI &amp; agrees to the clean 
speaks for everyone on his team. Very likely, he is also the only one who 
knows how the project is setup in the first place.

Its a waste of time to prompt a new team member whether he wants a clean to 
happen because of a CVS update.

The only change we should be making is to prompt the user (and remember that 
he told you to buzz off) the first time he chooses Project-&gt;Clean... &amp; explain 
to him what folders are about to be cleaned.
So before I release this, I would like to know when you expect to call it.

When I do a Clean... its on my entire workspace, so does that mean I'm going to see dozens of dialogs telling me what output folders are about to be cleaned?

What if I have 100 source projects in my workspace, will you prompt me 100 times before the build starts?


If so, I think this is a waste of time &amp; we should just do a single confirmation to make sure users are aware of the 'clean output folder' option.
I assumed the dialog would initially be shown when user changes the classpath for a project through the UI.
Including it in true clean UI action would require a hook in the UI/build manager which Martin was going to ask... but this feels a bit more advanced. Now this doesn't handle nicely the case where you get a classpath change from CVS, but you can still hope that whoever changed it got prompted for confirmation.
Added CleanOutputFolderTests
What's the new API?
Kent: PRs are meant to be self-contained.


From build notes:

Added an API method on IJavaProject to compute the output folders that will be cleaned by the next Clean operation.

/**
 * Returns the output folders that will be cleaned by the next Clean operation.
 * The result is null if the project's output folders are shared with other tools and
 * the option JavaCore.CORE_JAVA_BUILD_CLEAN_OUTPUT_FOLDER is false.
 * 
 * @return different groups of output folders to be cleaned, currently:
 * the first array contains the output folders which are cleaned entirely, and
 * the second array contains the output folders in which only the .class files are cleaned.
 * @since 3.2
 */
IContainer[][] computeCleanedFolders();

Would it be possible to have an API where I pass the classpath and outputfolder that I am going to set? (Similar to JavaConventions.validateClasspath(...)).

The idea is to show the information to the user before it is to late.
Makes total sense. Reopening.
It would have helped a lot if that was mentioned 3 weeks ago.

So you have no use for this API method? If not, we'll remove it.
I think I did, see Comment 2:

&gt; I see two places where the builder could communicate this information:
&gt; 1. before changing a classpath: API similar to validateClasspath

Yes, you can remove the API without arguments.
So comment #18 was someone else?

Removed the new API.

No idea when we'll get around to adding this other API.
Reconsider for 3.3
Deferring post 3.4</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110049" />
    <CreationDate amount="2005-09-20 11:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="IDE" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Markers] BiDi: label with &lt;&gt; displays incorrectly in Filter dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Run eclipse with program argument -dir rtl or -nl ar
In Tasks view drop down menu select Configure Filters... menu.
BUG: look at the On working set: label - it shows two &lt; instead of &lt;label&gt;
I will attach a pic
Created attachment 27301
Filters dialog in rtl orientation
Created attachment 27304
Filters dialog in LTR orientation
Need to insert LRM markers into the strings.  
LRM=\u200e
RLM=\u200f
Also see bug 119904
see bug 119685 comment 8
Note: that solution will only work for strings that have translations in properties files.  I believe in this case the string is translated, not built dynamically.
A programmatic solution is provided in bug 130587.  However, I believe the text should render correctly when the string is translated, without having to insert directional markers into the translated files.  
"As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009"</WithStack>
    <WithOutStack>Run eclipse with program argument -dir rtl or -nl ar
In Tasks view drop down menu select Configure Filters... menu.
BUG: look at the On working set: label - it shows two &lt; instead of &lt;label&gt;
I will attach a pic
Created attachment 27301
Filters dialog in rtl orientation
Created attachment 27304
Filters dialog in LTR orientation
Need to insert LRM markers into the strings.  
LRM=\u200e
RLM=\u200f
Also see bug 119904
see bug 119685 comment 8
Note: that solution will only work for strings that have translations in properties files.  I believe in this case the string is translated, not built dynamically.
A programmatic solution is provided in bug 130587.  However, I believe the text should render correctly when the string is translated, without having to insert directional markers into the translated files.  
"As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009"</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110050" />
    <CreationDate amount="2005-09-20 11:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Preferences] Buttons on Linked Resources preference page are not visible</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>[3.2M2 test candidate]

On Linux/GTK, the Linked Resources preference page layout is broken - the
New/Edit/Remove buttons are clipped. See screenshot (to follow).
Created attachment 27302
screenshot
Boris did you resize the dialog at any time?
No, I don't think I resized the dialog.
Paul is this OK in 3.3?
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009</WithStack>
    <WithOutStack>[3.2M2 test candidate]

On Linux/GTK, the Linked Resources preference page layout is broken - the
New/Edit/Remove buttons are clipped. See screenshot (to follow).
Created attachment 27302
screenshot
Boris did you resize the dialog at any time?
No, I don't think I resized the dialog.
Paul is this OK in 3.3?
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110051" />
    <CreationDate amount="2005-09-20 11:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[KeyBindings] preference page: tab order (accessibility)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>I20050920-0010

- on the legacy key bindings page, there is no way to tab further once the
button for the special keys (Tab, Backspace etc) is reached. Pressing Tab or
Ctrl+Tab is a noop
Moving Dougs bugs
Is this still a problem in 3.3?

PW

Changes requested on bug 193523</WithStack>
    <WithOutStack>I20050920-0010

- on the legacy key bindings page, there is no way to tab further once the
button for the special keys (Tab, Backspace etc) is reached. Pressing Tab or
Ctrl+Tab is a noop
Moving Dougs bugs
Is this still a problem in 3.3?

PW

Changes requested on bug 193523</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110052" />
    <CreationDate amount="2005-09-20 11:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Webtools.WST.Javascript" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Next/Previous Annotation works funny after add new task</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="15">
        <Lines>
          <Line>1. open a js file</Line>
          <Line>2. make it so next/previous annotation goes to next/previous tasks</Line>
          <Line>3. add some tasks</Line>
          <Line>4. click on next annotation</Line>
          <Line />
          <Line>5. notice it looks like selection is going to next annotation, but nothing is</Line>
          <Line>selected in editor.  if you keep clicking next annotation, it does not wrap</Line>
          <Line>around to beginning of file like it should when it reaches last annotation.</Line>
          <Line>if you click on previous annotation, it seems to work slightly better in that</Line>
          <Line>it does wrap around, but text is still not selected, though it does look like</Line>
          <Line>cursor is moving.</Line>
          <Line />
          <Line>6. click in the editor somewhere.</Line>
          <Line>7. now do next/previous annotation again and it looks like everything's</Line>
          <Line>behaving correctly.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>WTP 1.0 M8 9/17/2005

1. open a js file
2. make it so next/previous annotation goes to next/previous tasks
3. add some tasks
4. click on next annotation

5. notice it looks like selection is going to next annotation, but nothing is 
selected in editor.  if you keep clicking next annotation, it does not wrap 
around to beginning of file like it should when it reaches last annotation.  
if you click on previous annotation, it seems to work slightly better in that 
it does wrap around, but text is still not selected, though it does look like 
cursor is moving.

6. click in the editor somewhere.
7. now do next/previous annotation again and it looks like everything's 
behaving correctly.

For some reason, the problem only seems to appear after you click on add task 
(add bookmark is fine) and you do not click in the editor.  And this problem 
only seems to be in the javascript multipage editor.  The xml multipage editor 
seems to be fine.
Maybe I don't understand step 3 (add how?), but the navigation seems fine when I
glance at it.  *All* of our editors are using
org.eclipse.wst.sse.ui.internal.GotoAnnotationAction, so it should be visible in
others as well.
I added tasks by selecting some text, and then either doing edit-&gt;add task or 
add task from the vertical ruler context menu.
I'm doing a mass resolve of all open bugs in the wst.javascript component. 
Resolving to "won't fix". 

The reason is that the old wst.javascript component is being removed this release, and replaced by the wst.jsdt component. 

So ... if any owners of these wst.javascript bugs see the same problem in the wst.jsdt code, then please open a new bug on that component. 

Apologies we can't check each ourselves, but there's just too many (and too few people) so we'll need community help. Just glancing, I know for sure many will no longer be bugs but some may still be legitimate requests even in the new JSDT code. 


verified in wtp3.0M4 20080105091323 that this doesnt happen in new jsdt editor</WithStack>
    <WithOutStack>WTP 1.0 M8 9/17/2005

1. open a js file
2. make it so next/previous annotation goes to next/previous tasks
3. add some tasks
4. click on next annotation

5. notice it looks like selection is going to next annotation, but nothing is 
selected in editor.  if you keep clicking next annotation, it does not wrap 
around to beginning of file like it should when it reaches last annotation.  
if you click on previous annotation, it seems to work slightly better in that 
it does wrap around, but text is still not selected, though it does look like 
cursor is moving.

6. click in the editor somewhere.
7. now do next/previous annotation again and it looks like everything's 
behaving correctly.

For some reason, the problem only seems to appear after you click on add task 
(add bookmark is fine) and you do not click in the editor.  And this problem 
only seems to be in the javascript multipage editor.  The xml multipage editor 
seems to be fine.
Maybe I don't understand step 3 (add how?), but the navigation seems fine when I
glance at it.  *All* of our editors are using
org.eclipse.wst.sse.ui.internal.GotoAnnotationAction, so it should be visible in
others as well.
I added tasks by selecting some text, and then either doing edit-&gt;add task or 
add task from the vertical ruler context menu.
I'm doing a mass resolve of all open bugs in the wst.javascript component. 
Resolving to "won't fix". 

The reason is that the old wst.javascript component is being removed this release, and replaced by the wst.jsdt component. 

So ... if any owners of these wst.javascript bugs see the same problem in the wst.jsdt code, then please open a new bug on that component. 

Apologies we can't check each ourselves, but there's just too many (and too few people) so we'll need community help. Just glancing, I know for sure many will no longer be bugs but some may still be legitimate requests even in the new JSDT code. 


verified in wtp3.0M4 20080105091323 that this doesnt happen in new jsdt editor</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110053" />
    <CreationDate amount="2005-09-20 11:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Addition of nl fragments requires -clean</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="12">
        <Lines>
          <Line>1. The problem shows only during the first run after the bundles were added in 3.1.2. Closing Eclipse and starting it again produces correct translated list without "-clean". To re-create the problem, I had to manually delete content of the configuration directory (interestingly, deleting just the org.eclipse.core.runtime portion from the configuration directory was not enough to trigger the problem).</Line>
          <Line />
          <Line>2. To create test environment for 3.2, I used language pack from 3.1.1 and modified Manifest.mf from org.eclipse.jdt.ui.nl*.jar so that it does not require specific version of the bundle to be hosted by. This plugin contributes new class wizard, new interface wizard and a few other entries.</Line>
          <Line />
          <Line>3. In case this problem resurfaces again, the UI code can be found in the following classes:</Line>
          <Line>NewWizardAction</Line>
          <Line>NewWizardRegistry</Line>
          <Line>WizardsRegistryReader</Line>
          <Line>WorkbenchWizardElement (note that this one stores IConfigurationElement)</Line>
          <Line>in the org.eclipse.ui.workbench</Line>
          <Line />
          <Line>4. There are few places that could contribute to the problem: a) registry code or OSGi not realizing that bundles have been modified [unlikely]; b) notification mechanism from registry to UI code has not been followed through [likely].</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- install 3.1 Eclipse</Line>
          <Line>- start Eclipse</Line>
          <Line>- exit Eclipse</Line>
          <Line>- install the 3.1 translations</Line>
          <Line>- start Eclipse with -nl zh</Line>
          <Line>- File -&gt; New -&gt; Other</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>20050920

We had problems seeing changes when installing the NL fragments.

Setup:
- install 3.1 Eclipse
- start Eclipse
- exit Eclipse
- install the 3.1 translations
- start Eclipse with -nl zh
- File -&gt; New -&gt; Other

Note that the "General" category is not translated. Also if you expand it, the
File, Folder, etc are not translated.

Running with -clean fixes the problem.
I can even reproduce that in french ! :-)
Any thoughts on a fix?

One possiblity is when listening to RESOLVED events in the extension registry; if a new fragment becomes resolved then you flush the registry cache elements for the host of the fragment and re-translate the host elements.
I just assigned it to Oleg a few minutes ago :-)
The problem we are facing is over restart not dynamic installation of fragments. 
We normally cache the language in which the registry has been translated and check on startup.
I can duplicate the problem in Eclipse 3.1.2, but not in Eclipse 3.2.

Notes:

1. The problem shows only during the first run after the bundles were added in 3.1.2. Closing Eclipse and starting it again produces correct translated list without "-clean". To re-create the problem, I had to manually delete content of the configuration directory (interestingly, deleting just the org.eclipse.core.runtime portion from the configuration directory was not enough to trigger the problem).

2. To create test environment for 3.2, I used language pack from 3.1.1 and modified Manifest.mf from org.eclipse.jdt.ui.nl*.jar so that it does not require specific version of the bundle to be hosted by. This plugin contributes new class wizard, new interface wizard and a few other entries.

3. In case this problem resurfaces again, the UI code can be found in the following classes:
 NewWizardAction
 NewWizardRegistry
 WizardsRegistryReader
 WorkbenchWizardElement (note that this one stores IConfigurationElement)
in the org.eclipse.ui.workbench

4. There are few places that could contribute to the problem: a) registry code or OSGi not realizing that bundles have been modified [unlikely]; b) notification mechanism from registry to UI code has not been followed through [likely].

As a I can't duplicate it in the 3.2 I am marking it as "Worksforme". Should you find a scenario to reproduce this issue in 3.2, please feel free to add it and re-open this bug.</WithStack>
    <WithOutStack>20050920

We had problems seeing changes when installing the NL fragments.

Setup:
- install 3.1 Eclipse
- start Eclipse
- exit Eclipse
- install the 3.1 translations
- start Eclipse with -nl zh
- File -&gt; New -&gt; Other

Note that the "General" category is not translated. Also if you expand it, the
File, Folder, etc are not translated.

Running with -clean fixes the problem.
I can even reproduce that in french ! :-)
Any thoughts on a fix?

One possiblity is when listening to RESOLVED events in the extension registry; if a new fragment becomes resolved then you flush the registry cache elements for the host of the fragment and re-translate the host elements.
I just assigned it to Oleg a few minutes ago :-)
The problem we are facing is over restart not dynamic installation of fragments. 
We normally cache the language in which the registry has been translated and check on startup.
I can duplicate the problem in Eclipse 3.1.2, but not in Eclipse 3.2.

Notes:

1. The problem shows only during the first run after the bundles were added in 3.1.2. Closing Eclipse and starting it again produces correct translated list without "-clean". To re-create the problem, I had to manually delete content of the configuration directory (interestingly, deleting just the org.eclipse.core.runtime portion from the configuration directory was not enough to trigger the problem).

2. To create test environment for 3.2, I used language pack from 3.1.1 and modified Manifest.mf from org.eclipse.jdt.ui.nl*.jar so that it does not require specific version of the bundle to be hosted by. This plugin contributes new class wizard, new interface wizard and a few other entries.

3. In case this problem resurfaces again, the UI code can be found in the following classes:
 NewWizardAction
 NewWizardRegistry
 WizardsRegistryReader
 WorkbenchWizardElement (note that this one stores IConfigurationElement)
in the org.eclipse.ui.workbench

4. There are few places that could contribute to the problem: a) registry code or OSGi not realizing that bundles have been modified [unlikely]; b) notification mechanism from registry to UI code has not been followed through [likely].

As a I can't duplicate it in the 3.2 I am marking it as "Worksforme". Should you find a scenario to reproduce this issue in 3.2, please feel free to add it and re-open this bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110054" />
    <CreationDate amount="2005-09-20 12:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Workbench] Initial Eclipse window size with GTK panel</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>The initial size of the eclipse window when starting extends under the gnome
panel at the bottom of the screen (and sometimes off the display) under linux
when the display resolution is low (1024x768). This makes the status bar not
visible. A new user might be confused if they do not alter the window position
since loading progress is shown in the status bar. A user may believe that the
application is frozen or not actually perfoming the action they requested.

If the user's screen resolution is higher, the entire eclipse window starts
onscreen and everything is visible. I suggest that the window be maximized
initially if the display resolution is too small to show the screen readably.

The issue here is that the display may be large enough to contain the window,
but the gnome panel could be hiding a portion of it, so it is not simply a check
to see if the window fits within the current screen resolution.
I'm going to forward this to SWT first to see if we can detect this situation.
The issue is described in bug 33659, and the problem is that there's no way to
get the information we need from the window manager. However, _NET_WORKAREA from
the freedesktop.org wm-spec is "close enough", so I have given up and checked in
my fix.  In 3.2M3 and up, on a non-Xinerama display, and under a compliant
window manager (kwin and metacity work), Eclipse will always open fully visible.

However, I think the initial window size of Eclipse is too large, and with the
fix, the window now opens slightly-unmaximized which looks a little odd. A
better strategy may be to open maximized at 1024x768 and lower. Note that many
Linux machines default to 1024x768 with large panels. I'm moving this bug back
to UI to please consider a smaller default size or a maximization strategy.
There are currently no plans to do this but we would be happy to look at a patch</WithStack>
    <WithOutStack>The initial size of the eclipse window when starting extends under the gnome
panel at the bottom of the screen (and sometimes off the display) under linux
when the display resolution is low (1024x768). This makes the status bar not
visible. A new user might be confused if they do not alter the window position
since loading progress is shown in the status bar. A user may believe that the
application is frozen or not actually perfoming the action they requested.

If the user's screen resolution is higher, the entire eclipse window starts
onscreen and everything is visible. I suggest that the window be maximized
initially if the display resolution is too small to show the screen readably.

The issue here is that the display may be large enough to contain the window,
but the gnome panel could be hiding a portion of it, so it is not simply a check
to see if the window fits within the current screen resolution.
I'm going to forward this to SWT first to see if we can detect this situation.
The issue is described in bug 33659, and the problem is that there's no way to
get the information we need from the window manager. However, _NET_WORKAREA from
the freedesktop.org wm-spec is "close enough", so I have given up and checked in
my fix.  In 3.2M3 and up, on a non-Xinerama display, and under a compliant
window manager (kwin and metacity work), Eclipse will always open fully visible.

However, I think the initial window size of Eclipse is too large, and with the
fix, the window now opens slightly-unmaximized which looks a little odd. A
better strategy may be to open maximized at 1024x768 and lower. Note that many
Linux machines default to 1024x768 with large panels. I'm moving this bug back
to UI to please consider a smaller default size or a maximization strategy.
There are currently no plans to do this but we would be happy to look at a patch</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110055" />
    <CreationDate amount="2005-09-20 12:14:00 -0400" />
    <DupId amount="110008" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Markers] No mnemonics in Tasks &gt; Preferences dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In Tasks view go to drop down menu and select Preferences.
Set Limits dialog comes up.
Hit Alt.
BUG: there are no mnemonics for the checkbox or the text's label.


*** This bug has been marked as a duplicate of 11008 ***
Wrong bug


*** This bug has been marked as a duplicate of 110008 ***</WithStack>
    <WithOutStack>In Tasks view go to drop down menu and select Preferences.
Set Limits dialog comes up.
Hit Alt.
BUG: there are no mnemonics for the checkbox or the text's label.


*** This bug has been marked as a duplicate of 11008 ***
Wrong bug


*** This bug has been marked as a duplicate of 110008 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110056" />
    <CreationDate amount="2005-09-20 12:15:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Java] Request for standard images in structured compare tree</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Eclipse 3.2 M2

I was comparing all changes in a project since M1 and I particularly wanted to 
notice which public methods had changes. The structured compare tree shows a 
grey dot for every method, no matter what its visibility. Having the standard 
set of images (green dot for public, blue triangle for package private, etc) 
would be nice. If the visibility of a method or field has changed, I think 
using the image that represents the visibility of the item in the workspace is 
intuitive enough - it would not be necessary to blend them.</WithStack>
    <WithOutStack>Eclipse 3.2 M2

I was comparing all changes in a project since M1 and I particularly wanted to 
notice which public methods had changes. The structured compare tree shows a 
grey dot for every method, no matter what its visibility. Having the standard 
set of images (green dot for public, blue triangle for package private, etc) 
would be nice. If the visibility of a method or field has changed, I think 
using the image that represents the visibility of the item in the workspace is 
intuitive enough - it would not be necessary to blend them.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110057" />
    <CreationDate amount="2005-09-20 12:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>[browser] crash whenever a Browser is disposed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- run eclipse</Line>
          <Line>- open the javadoc view</Line>
          <Line>- close it by pressing the 'X' on its tab, and eclipse will shut down with the</Line>
          <Line>error message below</Line>
          <Line>- this problem has appeared as a side effect of M2 work that changed the order</Line>
          <Line>of things that are done at dispose time (in an effort to keep widgets 'valid'</Line>
          <Line>during dispose callbacks)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>3.2M2 test build (does not happen on linux-gtk)

- run eclipse
- open the javadoc view
- close it by pressing the 'X' on its tab, and eclipse will shut down with the
error message below
- this problem has appeared as a side effect of M2 work that changed the order
of things that are done at dispose time (in an effort to keep widgets 'valid'
during dispose callbacks)

sh-3.00$ The program '&lt;unknown&gt;' received an X Window System error.
This probably reflects a bug in the program.
The error was 'BadWindow (invalid Window parameter)'.
  (Details: serial 19210 error_code 3 request_code 10 minor_code 0)
  (Note to programmers: normally, X errors are reported asynchronously;
   that is, you will receive the error a while after causing it.
   To debug your program, run it with the --sync command line
   option to change this behavior. You can then get a meaningful
   backtrace from your debugger if you break on the gdk_x_error() function.)
fixed with SN for 0921 8:00pm build</WithStack>
    <WithOutStack>3.2M2 test build (does not happen on linux-gtk)

- run eclipse
- open the javadoc view
- close it by pressing the 'X' on its tab, and eclipse will shut down with the
error message below
- this problem has appeared as a side effect of M2 work that changed the order
of things that are done at dispose time (in an effort to keep widgets 'valid'
during dispose callbacks)

sh-3.00$ The program '&lt;unknown&gt;' received an X Window System error.
This probably reflects a bug in the program.
The error was 'BadWindow (invalid Window parameter)'.
  (Details: serial 19210 error_code 3 request_code 10 minor_code 0)
  (Note to programmers: normally, X errors are reported asynchronously;
   that is, you will receive the error a while after causing it.
   To debug your program, run it with the --sync command line
   option to change this behavior. You can then get a meaningful
   backtrace from your debugger if you break on the gdk_x_error() function.)
fixed with SN for 0921 8:00pm build</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110058" />
    <CreationDate amount="2005-09-20 12:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="MDT.UML2" />
    <component amount="Core" />
    <Version amount="1.1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Update Manager attempts to load a plugin that doesn't exist on filesytem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437330579457">
        <Exception>java.io.IOException</Exception>
        <Reason>Server returned HTTP response code: "404 Not Found" for
URL:
http://emf.torolab.ibm.com/tools/uml2/updates/plugins/org.eclipse.uml2.examples_2.0.0.jar.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.update.internal.core.UpdateManagerUtils.checkConnectionResult(UpdateManagerUtils.java:524)</Frame>
          <Frame depth="1">org.eclipse.update.core.ContentReference.getInputSize(ContentReference.java:193)</Frame>
          <Frame depth="2">org.eclipse.update.core.FeatureContentProvider.asLocalReference(FeatureContentProvider.java:214)</Frame>
          <Frame depth="3">org.eclipse.update.internal.core.FeaturePackagedContentProvider.getPluginEntryArchiveReferences(FeaturePackagedContentProvider.java:165)</Frame>
          <Frame depth="4">org.eclipse.update.internal.operations.UpdateUtils.downloadFeatureContent(UpdateUtils.java:627)</Frame>
          <Frame depth="5">org.eclipse.update.internal.ui.wizards.InstallWizard2.download(InstallWizard2.java:405)</Frame>
          <Frame depth="6">org.eclipse.update.internal.ui.wizards.InstallWizard2.access$3(InstallWizard2.java:394)</Frame>
          <Frame depth="7">org.eclipse.update.internal.ui.wizards.InstallWizard2$4.run(InstallWizard2.java:350)</Frame>
          <Frame depth="8">org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437330579457">
        <Exception>java.io.IOException</Exception>
        <Reason>Server returned HTTP response code: "404 Not Found" for
URL:
http://download.eclipse.org/tools/uml2/updates/plugins/org.eclipse.uml2.examples_1.1.1.jar.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.update.internal.core.UpdateManagerUtils.checkConnectionResult(UpdateManagerUtils.java:524)</Frame>
          <Frame depth="1">org.eclipse.update.core.ContentReference.getInputSize(ContentReference.java:193)</Frame>
          <Frame depth="2">org.eclipse.update.core.FeatureContentProvider.asLocalReference(FeatureContentProvider.java:214)</Frame>
          <Frame depth="3">org.eclipse.update.internal.core.FeaturePackagedContentProvider.getPluginEntryArchiveReferences(FeaturePackagedContentProvider.java:165)</Frame>
          <Frame depth="4">org.eclipse.update.internal.operations.UpdateUtils.downloadFeatureContent(UpdateUtils.java:627)</Frame>
          <Frame depth="5">org.eclipse.update.internal.ui.wizards.InstallWizard2.download(InstallWizard2.java:405)</Frame>
          <Frame depth="6">org.eclipse.update.internal.ui.wizards.InstallWizard2.access$3(InstallWizard2.java:394)</Frame>
          <Frame depth="7">org.eclipse.update.internal.ui.wizards.InstallWizard2$4.run(InstallWizard2.java:350)</Frame>
          <Frame depth="8">org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When the update manager starts to download latest updates the error message 
pops up saying 
"Problem occurred.
Update operation has failed".
The file downloaded was "plugins/org.eclipse.uml2.examples_1.1.1.jar".
After click on OK, the update closes.
Created attachment 27306
Screen shot
Is there still a bug with 4th part JARs?
I still get the same messages that are in the attachment...
The update fails...
In /home/data/httpd/download.eclipse.org/tools/uml2/updates/plugins on the
download1.eclipse.org server, there's no file
org.eclipse.uml2.examples_1.1.1.jar - which is perhaps why the update is
failing. ;-) Checking
http://download.eclipse.org/tools/uml2/updates/site-release.xml and
http://download.eclipse.org/tools/uml2/updates/site.xml, I don't see a reference
to a "*1.1.1.jar" file either. 

So... I'm stumped. Not sure where UM is getting the note about needing that
file. It should be either looking for *1.1.0.jar or else
org.eclipse.uml2.examples_1.1.1.M200509151108.jar, for example.

How are you launching UM? What version of Eclipse? Which UM site/mirror?
Created attachment 27350
My Eclipse version
Created attachment 27351
How I do updates - 1
Created attachment 27352
How I do updates - 2
Created attachment 27353
How I do Updates - 3
Created attachment 27354
How I do Updates - 4
Created attachment 27355
How I do Updates - 5
Created attachment 27356
How I do Updates - 6
Created attachment 27357
How I do Updates - 7
I've got it updated after I unchecked on step 5 the 'Samples", but, after, 
when the automatic update started and tried to install this update, it failed 
again...
Looks like the problem is with org.eclipse.uml2.examples_x.y.z.jar

Still investigating why, but in running some tests, I get:

!ENTRY org.eclipse.update.core 4 0 2005-09-21 19:03:15.721
!MESSAGE Error retrieving "plugins/org.eclipse.uml2.examples_2.0.0.jar". [Server
returned HTTP response code: "404 Not Found" for URL:
http://emf.torolab.ibm.com/tools/uml2/updates/plugins/org.eclipse.uml2.examples_2.0.0.jar.]
!STACK 0
java.io.IOException: Server returned HTTP response code: "404 Not Found" for
URL:
http://emf.torolab.ibm.com/tools/uml2/updates/plugins/org.eclipse.uml2.examples_2.0.0.jar.
	at
org.eclipse.update.internal.core.UpdateManagerUtils.checkConnectionResult(UpdateManagerUtils.java:524)
	at org.eclipse.update.core.ContentReference.getInputSize(ContentReference.java:193)
	at
org.eclipse.update.core.FeatureContentProvider.asLocalReference(FeatureContentProvider.java:214)
	at
org.eclipse.update.internal.core.FeaturePackagedContentProvider.getPluginEntryArchiveReferences(FeaturePackagedContentProvider.java:165)
	at
org.eclipse.update.internal.operations.UpdateUtils.downloadFeatureContent(UpdateUtils.java:627)
	at
org.eclipse.update.internal.ui.wizards.InstallWizard2.download(InstallWizard2.java:405)
	at
org.eclipse.update.internal.ui.wizards.InstallWizard2.access$3(InstallWizard2.java:394)
	at
org.eclipse.update.internal.ui.wizards.InstallWizard2$4.run(InstallWizard2.java:350)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)

I think this may be a consequence of the UM jar builder parser not finding the
text to replace when scanning the feature.xml files, so it only replaces SOME of
the &lt;plugin/&gt; tags:

   &lt;plugin
      id="org.eclipse.uml2.examples"
      download-size="0"
      install-size="0"
      unpack="false"
      version="2.0.0"/&gt;

should become:

   &lt;plugin
      id="org.eclipse.uml2.examples"
      download-size="0"
      install-size="0"
      version="2.0.0.N200509151456"
      unpack="false"/&gt;

but isn't. I have a vague memory that this is due to the addition of the
unpack="false" attribute - the UM jar builder expects that version="" will be
the last attribute of the &lt;plugin/&gt; tag. I think we hit this problem w/ EMF too
when we jarred our plugins. 
Error retrieving "plugins/org.eclipse.uml2.examples_1.1.1.jar". [Server returned
HTTP response code: "404 Not Found" for URL:
http://download.eclipse.org/tools/uml2/updates/plugins/org.eclipse.uml2.examples_1.1.1.jar.]

java.io.IOException: Server returned HTTP response code: "404 Not Found" for
URL:
http://download.eclipse.org/tools/uml2/updates/plugins/org.eclipse.uml2.examples_1.1.1.jar.
at
org.eclipse.update.internal.core.UpdateManagerUtils.checkConnectionResult(UpdateManagerUtils.java:524)
at org.eclipse.update.core.ContentReference.getInputSize(ContentReference.java:193)
at
org.eclipse.update.core.FeatureContentProvider.asLocalReference(FeatureContentProvider.java:214)
at
org.eclipse.update.internal.core.FeaturePackagedContentProvider.getPluginEntryArchiveReferences(FeaturePackagedContentProvider.java:165)
at
org.eclipse.update.internal.operations.UpdateUtils.downloadFeatureContent(UpdateUtils.java:627)
at
org.eclipse.update.internal.ui.wizards.InstallWizard2.download(InstallWizard2.java:405)
at
org.eclipse.update.internal.ui.wizards.InstallWizard2.access$3(InstallWizard2.java:394)
at
org.eclipse.update.internal.ui.wizards.InstallWizard2$4.run(InstallWizard2.java:350)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)
That's exactly what I figured out...
The fix has been committed to CVS.
Actually, the problem was with the update builder script - it was scanning for
hte &lt;includes&gt; first, then continuing from that point downward looking for
&lt;plugin&gt; tags, which were above. So, we reset the starting index point after
doing &lt;includes&gt; and it appears to be happy again.

Fixed in 1.1.1.M200509221052.
Thanks, guys!
The update has been successfully installed....</WithStack>
    <WithOutStack>When the update manager starts to download latest updates the error message 
pops up saying 
"Problem occurred.
Update operation has failed".
The file downloaded was "plugins/org.eclipse.uml2.examples_1.1.1.jar".
After click on OK, the update closes.
Created attachment 27306
Screen shot
Is there still a bug with 4th part JARs?
I still get the same messages that are in the attachment...
The update fails...
In /home/data/httpd/download.eclipse.org/tools/uml2/updates/plugins on the
download1.eclipse.org server, there's no file
org.eclipse.uml2.examples_1.1.1.jar - which is perhaps why the update is
failing. ;-) Checking
http://download.eclipse.org/tools/uml2/updates/site-release.xml and
http://download.eclipse.org/tools/uml2/updates/site.xml, I don't see a reference
to a "*1.1.1.jar" file either. 

So... I'm stumped. Not sure where UM is getting the note about needing that
file. It should be either looking for *1.1.0.jar or else
org.eclipse.uml2.examples_1.1.1.M200509151108.jar, for example.

How are you launching UM? What version of Eclipse? Which UM site/mirror?
Created attachment 27350
My Eclipse version
Created attachment 27351
How I do updates - 1
Created attachment 27352
How I do updates - 2
Created attachment 27353
How I do Updates - 3
Created attachment 27354
How I do Updates - 4
Created attachment 27355
How I do Updates - 5
Created attachment 27356
How I do Updates - 6
Created attachment 27357
How I do Updates - 7
I've got it updated after I unchecked on step 5 the 'Samples", but, after, 
when the automatic update started and tried to install this update, it failed 
again...
Looks like the problem is with org.eclipse.uml2.examples_x.y.z.jar

Still investigating why, but in running some tests, I get:

!ENTRY org.eclipse.update.core 4 0 2005-09-21 19:03:15.721
!MESSAGE Error retrieving "plugins/org.eclipse.uml2.examples_2.0.0.jar". [Server
returned HTTP response code: "404 Not Found" for URL:
http://emf.torolab.ibm.com/tools/uml2/updates/plugins/org.eclipse.uml2.examples_2.0.0.jar.]
!STACK 0

I think this may be a consequence of the UM jar builder parser not finding the
text to replace when scanning the feature.xml files, so it only replaces SOME of
the &lt;plugin/&gt; tags:

   &lt;plugin
      id="org.eclipse.uml2.examples"
      download-size="0"
      install-size="0"
      unpack="false"
      version="2.0.0"/&gt;

should become:

   &lt;plugin
      id="org.eclipse.uml2.examples"
      download-size="0"
      install-size="0"
      version="2.0.0.N200509151456"
      unpack="false"/&gt;

but isn't. I have a vague memory that this is due to the addition of the
unpack="false" attribute - the UM jar builder expects that version="" will be
the last attribute of the &lt;plugin/&gt; tag. I think we hit this problem w/ EMF too
when we jarred our plugins. 
Error retrieving "plugins/org.eclipse.uml2.examples_1.1.1.jar". [Server returned
HTTP response code: "404 Not Found" for URL:
http://download.eclipse.org/tools/uml2/updates/plugins/org.eclipse.uml2.examples_1.1.1.jar.]


That's exactly what I figured out...
The fix has been committed to CVS.
Actually, the problem was with the update builder script - it was scanning for
hte &lt;includes&gt; first, then continuing from that point downward looking for
&lt;plugin&gt; tags, which were above. So, we reset the starting index point after
doing &lt;includes&gt; and it appears to be happy again.

Fixed in 1.1.1.M200509221052.
Thanks, guys!
The update has been successfully installed....</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110059" />
    <CreationDate amount="2005-09-20 12:52:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[ast rewrite] strange formatting after change to enhanced for loop</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="functiondef">
        <location start="52" end="205" />
        <code>public void endTest(Test test) throws CloneNotSupportedException {
		for (TestListener nextElement : cloneListeners()) {
nextElement.endTest(test);
}
	}</code>
      </source_code>
      <source_code type="package">
        <location start="302" end="316" />
        <code>package test1;</code>
      </source_code>
      <source_code type="import">
        <location start="317" end="344" />
        <code>import java.util.Iterator;</code>
      </source_code>
      <source_code type="import">
        <location start="345" end="367" />
        <code>import java.util.List;</code>
      </source_code>
      <source_code type="class">
        <location start="369" end="736" />
        <code>public class E {
    public void m(List&lt;? extends Number&gt; nums) {
        for (Iterator&lt;? extends Number&gt; iterator = nums.iterator(); iterator
                .hasNext();) {
            Number number = iterator.next();
            System.out.println(number.doubleValue());
            // comment
            System.out.println(number.doubleValue());
        }
    }
}</code>
      </source_code>
      <source_code type="class">
        <location start="911" end="1118" />
        <code>public class E {
    public void m(List&lt;? extends Number&gt; nums) {
        for (Number number : nums) {
System.out.println(number.doubleValue());
// comment
System.out.println(number.doubleValue());
}
    }
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1120" end="1175" />
        <code>The problem does not occur when the entire "for (...) {</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="2">
        <Lines>
          <Line>- new workspace</Line>
          <Line>- paste into Package Explorer:</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- format the whole CU (using the default profile)</Line>
          <Line>- put caret into 'for'</Line>
          <Line>- apply quick assist "Convert to enhanced 'for' loop"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>20050920-0010

code in attachment 26800 results in

	public void endTest(Test test) throws CloneNotSupportedException {
		for (TestListener nextElement : cloneListeners()) {
nextElement.endTest(test);
}
	}
HEAD, probably a similar problem as bug 350285

- new workspace
- paste into Package Explorer:

package test1;

import java.util.Iterator;
import java.util.List;

public class E {
    public void m(List&lt;? extends Number&gt; nums) {
        for (Iterator&lt;? extends Number&gt; iterator = nums.iterator(); iterator
                .hasNext();) {
            Number number = iterator.next();
            System.out.println(number.doubleValue());
            // comment
            System.out.println(number.doubleValue());
        }
    }
}

- format the whole CU (using the default profile)
- put caret into 'for'
- apply quick assist "Convert to enhanced 'for' loop"

=&gt; result has non-indented body statements:

public class E {
    public void m(List&lt;? extends Number&gt; nums) {
        for (Number number : nums) {
System.out.println(number.doubleValue());
// comment
System.out.println(number.doubleValue());
}
    }
}

The problem does not occur when the entire "for (...) {" header is on a single line.

In ConvertIterableLoopOperation#convert(..) line 314, we set the body of the new EnhancedForStatement to the result of ASTRewrite#createMoveTarget(..). I suspect the ASTRewrite gets confused because the indentation of the starting line of the block is larger than the indentation of the body statements.
In the original string, the line where the blocks starts
has an indentation of 4. In the modified string, the line where the block
starts has an indentation of 2. Thus, the indentation logic thinks that the
code needs to be moved left by 2 and so the problem.
(In reply to comment #2)
Test case provided at bug 350285 comment 12 fails for the same reason as this.</WithStack>
    <WithOutStack>20050920-0010

code in attachment 26800 results in

	public void endTest(Test test) throws CloneNotSupportedException {
		for (TestListener nextElement : cloneListeners()) {
nextElement.endTest(test);
}
	}
HEAD, probably a similar problem as bug 350285

- new workspace
- paste into Package Explorer:

package test1;

import java.util.Iterator;
import java.util.List;

public class E {
    public void m(List&lt;? extends Number&gt; nums) {
        for (Iterator&lt;? extends Number&gt; iterator = nums.iterator(); iterator
                .hasNext();) {
            Number number = iterator.next();
            System.out.println(number.doubleValue());
            // comment
            System.out.println(number.doubleValue());
        }
    }
}

- format the whole CU (using the default profile)
- put caret into 'for'
- apply quick assist "Convert to enhanced 'for' loop"

=&gt; result has non-indented body statements:

public class E {
    public void m(List&lt;? extends Number&gt; nums) {
        for (Number number : nums) {
System.out.println(number.doubleValue());
// comment
System.out.println(number.doubleValue());
}
    }
}

The problem does not occur when the entire "for (...) {" header is on a single line.

In ConvertIterableLoopOperation#convert(..) line 314, we set the body of the new EnhancedForStatement to the result of ASTRewrite#createMoveTarget(..). I suspect the ASTRewrite gets confused because the indentation of the starting line of the block is larger than the indentation of the body statements.
In the original string, the line where the blocks starts
has an indentation of 4. In the modified string, the line where the block
starts has an indentation of 2. Thus, the indentation logic thinks that the
code needs to be moved left by 2 and so the problem.
(In reply to comment #2)
Test case provided at bug 350285 comment 12 fails for the same reason as this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110060" />
    <CreationDate amount="2005-09-20 12:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[plan][search] Add support for Camel Case search pattern</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="435" end="1787" />
        <code>/**
 * Match rule: The search pattern contains a Camel Case expression.
 * For example, &lt;code&gt;NPE&lt;/code&gt; type string pattern will match
 * &lt;code&gt;NullPointerException&lt;/code&gt; type.
 * @see CharOperation#camelCaseMatch(char[], char[]) for a detailed explanation
 * of Camel Case matching.
 *&lt;br&gt;
 * Can be combined to {@link #R_PREFIX_MATCH} match rule. For example,
 * when prefix match rule is combined with Camel Case match rule,
 * &lt;code&gt;"npE"&lt;/code&gt; pattern will match &lt;code&gt;npException&lt;/code&gt;.
 *&lt;br&gt;
 * Match rule {@link #R_PATTERN_MATCH} may also be specified but will not be 
 * combined with Camel Case match rule as these two rules are mutually 
 * exclusive.
 * Used match rule depends on whether string pattern contains specific pattern 
 * characters (e.g. '*' or '?') or not. If it does not, then Camel Case match 
 * rule will override Pattern one, otherwise Pattern match rule will override 
 * Camel Case one.
 * For example, with &lt;code&gt;"NPE"&lt;/code&gt; string pattern, search will only use
 * Camel Case match rule. With &lt;code&gt;Nu*Po*Ex*&lt;/code&gt; string pattern, it will 
 * use only Pattern match rule.
 *&lt;br&gt;
 * Note that {@link #R_CASE_SENSITIVE} match rule will not have any effect 
 * combined with Camel Case one. This is due to the fact that Camel Case match 
 * rule already uses case sensitive comparison.
 *&lt;br&gt;
 * 
 * @since 3.2
 */</code>
      </source_code>
      <source_code type="assignment">
        <location start="1788" end="1839" />
        <code>public static final int R_CAMELCASE_MATCH = 0x0080;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="17">
        <Lines>
          <Line>1) Clients will always set R_CAMELCASE_MATCH, R_PATTERN_MATCH and R_PREFIX_MATCH</Line>
          <Line>bits for match rule. SearchPattern will then choose the best match depending on</Line>
          <Line>string pattern contents. The reason to do so is to avoid algorithm duplication.</Line>
          <Line>That means that there won't be new API method getPatternType() on SearchPattern.</Line>
          <Line />
          <Line>2) "npe" will not be considered as a Camel Case for first place (it currently</Line>
          <Line>does not in Open Type dialog implementation). Not sure if we really agreed on</Line>
          <Line>this point but it sounds more reasonable to defer this kind of behavior after</Line>
          <Line>initial support implementation and come back after having played with it a</Line>
          <Line>little bit.</Line>
          <Line />
          <Line>3) SearchEngine will return pattern rule used while finding the SearchMatch (ie.</Line>
          <Line>R_CAMELCASE_MATCH, R_PREFIX_MATCH or R_PATTERN_MATCH). It will be stored in</Line>
          <Line>SearchMatch.rule field and will be accessible using already existing API getter</Line>
          <Line>getRule(). Note that this point is handled by bug 79886 and may be addressed</Line>
          <Line>later (milestone M4 or M5).</Line>
          <Line>Of course, please read bug 79866 instead of 79886 in previous comment...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050920

Search should provide a match rule that is a Camel Case rule so that a user can
search for references to "NPE" in Camel Case mode, and references to
NullPointerException will be returned.
All types of search should support this: declaration, references, search all
types, etc ...
Dirk,
I'm working on this new Camel Case search, pattern.

Here's following additional constant value I'm thinking to add to SearchPattern API:
/**
 * Match rule: The search pattern contains a Camel Case expression.
 * For example, &lt;code&gt;NPE&lt;/code&gt; type string pattern will match
 * &lt;code&gt;NullPointerException&lt;/code&gt; type.
 * @see CharOperation#camelCaseMatch(char[], char[]) for a detailed explanation
 * of Camel Case matching.
 *&lt;br&gt;
 * Can be combined to {@link #R_PREFIX_MATCH} match rule. For example,
 * when prefix match rule is combined with Camel Case match rule,
 * &lt;code&gt;"npE"&lt;/code&gt; pattern will match &lt;code&gt;npException&lt;/code&gt;.
 *&lt;br&gt;
 * Match rule {@link #R_PATTERN_MATCH} may also be specified but will not be 
 * combined with Camel Case match rule as these two rules are mutually 
 * exclusive.
 * Used match rule depends on whether string pattern contains specific pattern 
 * characters (e.g. '*' or '?') or not. If it does not, then Camel Case match 
 * rule will override Pattern one, otherwise Pattern match rule will override 
 * Camel Case one.
 * For example, with &lt;code&gt;"NPE"&lt;/code&gt; string pattern, search will only use
 * Camel Case match rule. With &lt;code&gt;Nu*Po*Ex*&lt;/code&gt; string pattern, it will 
 * use only Pattern match rule.
 *&lt;br&gt;
 * Note that {@link #R_CASE_SENSITIVE} match rule will not have any effect 
 * combined with Camel Case one. This is due to the fact that Camel Case match 
 * rule already uses case sensitive comparison.
 *&lt;br&gt;
 * 
 * @since 3.2
 */
public static final int R_CAMELCASE_MATCH = 0x0080;

I think that this should match requirement for Open Type Dialog if you use
combined rule SearchPattern.R_CAMELCASE_MATCH | SearchPattern.R_PREFIX_MATCH.

Please confirm or comment if you think I'm missing something, thx

Jim,

May you review my Javadoc comment for this new API?

Thanks

Frederic, a couple of comments:

can you explain the following sentence:

 * Can be combined to {@link #R_PREFIX_MATCH} match rule. For example,
 * when prefix match rule is combined with Camel Case match rule,
 * &lt;code&gt;"npE"&lt;/code&gt; pattern will match &lt;code&gt;npException&lt;/code&gt;.

For me npE using *only* prefix match would already find npExcption.

From the PRs I got regarding camel case there are two additional requests where
we should interpret patterns as camel case as well:

o "NuPoEx": should be interpreted as a camel case pattern as well. I discussed 
  this already with Philippe and we decided to not support it in the first 
  place.

o "npe": should be interpreted as a camel case pattern as well. Although this
  is handy it will result in lots of matches since almost every pattern the 
  user types in will be more or less a camel case pattern. What is your take
  here ?

Additionally to be able to specify the camel case pattern, results should be
annotated to show if they are a camel case match or a normal prefix match. For
example if the user types "IMethod" as a pattern we will interpret it as a camel
case pattern and it will match InnerMethod as well. However since IMethod is an
exact match the match should appear in the open type dialog before any camel
case matches.

We would also need API to find out what kind a certain pattern is. Otherwise UI
has to implement this and the algorithm might end up being different from the
core one (especially for camel case). Something like

int SearchPattern#getPatternType(String pattern) 

The method would return R_CAMELCASE_MATCH for NPE, R_PATTERN_MATCH for N*P*E and
R_PREFIX_MATCH for all other strings.
(In reply to comment #4)
&gt; can you explain the following sentence:
&gt; 
&gt;  * Can be combined to {@link #R_PREFIX_MATCH} match rule. For example,
&gt;  * when prefix match rule is combined with Camel Case match rule,
&gt;  * &lt;code&gt;"npE"&lt;/code&gt; pattern will match &lt;code&gt;npException&lt;/code&gt;.
&gt; 
&gt; For me npE using *only* prefix match would already find npExcption.
Sorry, my example was not good enough. Let take "nPE" for pattern. If you
combine R_CAMELCASE_MATCH and R_PREFIX_MATCH match rule values, you can get
"nullPointerException" and "nPException" results with only one search request.
First result matches only camel case pattern and second result matches only
prefix one...

&gt; 
&gt; From the PRs I got regarding camel case there are two additional requests where
&gt; we should interpret patterns as camel case as well:
&gt; 
&gt; o "NuPoEx": should be interpreted as a camel case pattern as well. I discussed 
&gt;   this already with Philippe and we decided to not support it in the first 
&gt;   place.
Agree
&gt; 
&gt; o "npe": should be interpreted as a camel case pattern as well. Although this
&gt;   is handy it will result in lots of matches since almost every pattern the 
&gt;   user types in will be more or less a camel case pattern. What is your take
&gt;   here ?
Currently, for pattern match (ie. with '*' or '?' characters), this is not
SearchPattern but clients which look at string patterns and set R_PATTERN_MATCH
bit accordingly. I think it should be the same for Camel Case pattern: that is
clients responsibility to let SearchPattern know that a Camel Case search must
be done and not SearchPattern to infer it from string.
So, if clients want to specify that "npe" is a Camel Case pattern then
R_CAMELCASE_MATCH bit must be set explicitely in given matchRule parameter.

&gt; 
&gt; Additionally to be able to specify the camel case pattern, results should be
&gt; annotated to show if they are a camel case match or a normal prefix match. For
&gt; example if the user types "IMethod" as a pattern we will interpret it as a camel
&gt; case pattern and it will match InnerMethod as well. However since IMethod is an
&gt; exact match the match should appear in the open type dialog before any camel
&gt; case matches.
Hmm, we do not have implemented this support yet. Currently, CharOperation
implements camelCase methods which only returns true or false. There's no way to
know, when these methods return true, whether the match was exact, prefix or
camel...
Modify this behavior may have performance impact and I'm not sure this is
absolutely necessary to have this result in first place.
Perhaps, this may be considered while implementing bug 79866...
&gt; 
&gt; We would also need API to find out what kind a certain pattern is. Otherwise UI
&gt; has to implement this and the algorithm might end up being different from the
&gt; core one (especially for camel case). Something like
&gt; 
&gt; int SearchPattern#getPatternType(String pattern) 
&gt; 
&gt; The method would return R_CAMELCASE_MATCH for NPE, R_PATTERN_MATCH for N*P*E and
&gt; R_PREFIX_MATCH for all other strings.
OK, sounds a good idea to centralize this in SearchPattern. Furthermore, I think
we need to verify that match rule bits and string are compatible.
For example, match rule R_PATTERN_MATCH set without any '*' or '?' character.
Or R_CAMELCASE_MATCH and R_PATTERN_MATCH bits set simultaneously.
SearchPattern could simply return null when a string and/or match rule pattern
are invalid or try the best rule which can be applied on given string...

I have another questions regarding CharOperation#camelCaseMatch: it is specified
that the tail after the sequence of the upper case characters is matched case
sensitive. I would prefer matching at case insensitive. e.g NPExCeption should
match NullPointerException. Any reason why it is defined to be case sensitive ?
Current behavior is matching existing implementation for open type dialog.
Did you get many complaint for this behavior ?
Dirk, here's the summary of our conf'call (please let me know if I missed
something):

1) Clients will always set R_CAMELCASE_MATCH, R_PATTERN_MATCH and R_PREFIX_MATCH
bits for match rule. SearchPattern will then choose the best match depending on
string pattern contents. The reason to do so is to avoid algorithm duplication.
That means that there won't be new API method getPatternType() on SearchPattern.

2) "npe" will not be considered as a Camel Case for first place (it currently
does not in Open Type dialog implementation). Not sure if we really agreed on
this point but it sounds more reasonable to defer this kind of behavior after
initial support implementation and come back after having played with it a
little bit.

3) SearchEngine will return pattern rule used while finding the SearchMatch (ie.
R_CAMELCASE_MATCH, R_PREFIX_MATCH or R_PATTERN_MATCH). It will be stored in
SearchMatch.rule field and will be accessible using already existing API getter
getRule(). Note that this point is handled by bug 79886 and may be addressed
later (milestone M4 or M5).
Of course, please read bug 79866 instead of 79886 in previous comment...

Here is what the open type dialog currently does: NPException matches
NullPointerExCeption however NPExCeption doesn't match NullPointerException. The
current implementation only treats a pattern as a camel case pattern and a tail
if the tail is all lower case, but the actual matching is then done case
insensitive. 

However, now that I am thinking of xCeption could be interperted as a tail as
well in pattern NPExCeption. What do you think ?
One little addition: the functionality described has to be provided for the all
types search as well, not only for reference and declaration search (which
already have the concept of a search match).
Fixed and released in HEAD.

Dirk, I've added an reminder in bug 79866 to be sure to address the point you
highlighted in comment 11...

Verified for 3.2 M3 using build I20051031-0010</WithStack>
    <WithOutStack>I20050920

Search should provide a match rule that is a Camel Case rule so that a user can
search for references to "NPE" in Camel Case mode, and references to
NullPointerException will be returned.
All types of search should support this: declaration, references, search all
types, etc ...
Dirk,
I'm working on this new Camel Case search, pattern.

Here's following additional constant value I'm thinking to add to SearchPattern API:
/**
 * Match rule: The search pattern contains a Camel Case expression.
 * For example, &lt;code&gt;NPE&lt;/code&gt; type string pattern will match
 * &lt;code&gt;NullPointerException&lt;/code&gt; type.
 * @see CharOperation#camelCaseMatch(char[], char[]) for a detailed explanation
 * of Camel Case matching.
 *&lt;br&gt;
 * Can be combined to {@link #R_PREFIX_MATCH} match rule. For example,
 * when prefix match rule is combined with Camel Case match rule,
 * &lt;code&gt;"npE"&lt;/code&gt; pattern will match &lt;code&gt;npException&lt;/code&gt;.
 *&lt;br&gt;
 * Match rule {@link #R_PATTERN_MATCH} may also be specified but will not be 
 * combined with Camel Case match rule as these two rules are mutually 
 * exclusive.
 * Used match rule depends on whether string pattern contains specific pattern 
 * characters (e.g. '*' or '?') or not. If it does not, then Camel Case match 
 * rule will override Pattern one, otherwise Pattern match rule will override 
 * Camel Case one.
 * For example, with &lt;code&gt;"NPE"&lt;/code&gt; string pattern, search will only use
 * Camel Case match rule. With &lt;code&gt;Nu*Po*Ex*&lt;/code&gt; string pattern, it will 
 * use only Pattern match rule.
 *&lt;br&gt;
 * Note that {@link #R_CASE_SENSITIVE} match rule will not have any effect 
 * combined with Camel Case one. This is due to the fact that Camel Case match 
 * rule already uses case sensitive comparison.
 *&lt;br&gt;
 * 
 * @since 3.2
 */
public static final int R_CAMELCASE_MATCH = 0x0080;

I think that this should match requirement for Open Type Dialog if you use
combined rule SearchPattern.R_CAMELCASE_MATCH | SearchPattern.R_PREFIX_MATCH.

Please confirm or comment if you think I'm missing something, thx

Jim,

May you review my Javadoc comment for this new API?

Thanks

Frederic, a couple of comments:

can you explain the following sentence:

 * Can be combined to {@link #R_PREFIX_MATCH} match rule. For example,
 * when prefix match rule is combined with Camel Case match rule,
 * &lt;code&gt;"npE"&lt;/code&gt; pattern will match &lt;code&gt;npException&lt;/code&gt;.

For me npE using *only* prefix match would already find npExcption.

From the PRs I got regarding camel case there are two additional requests where
we should interpret patterns as camel case as well:

o "NuPoEx": should be interpreted as a camel case pattern as well. I discussed 
  this already with Philippe and we decided to not support it in the first 
  place.

o "npe": should be interpreted as a camel case pattern as well. Although this
  is handy it will result in lots of matches since almost every pattern the 
  user types in will be more or less a camel case pattern. What is your take
  here ?

Additionally to be able to specify the camel case pattern, results should be
annotated to show if they are a camel case match or a normal prefix match. For
example if the user types "IMethod" as a pattern we will interpret it as a camel
case pattern and it will match InnerMethod as well. However since IMethod is an
exact match the match should appear in the open type dialog before any camel
case matches.

We would also need API to find out what kind a certain pattern is. Otherwise UI
has to implement this and the algorithm might end up being different from the
core one (especially for camel case). Something like

int SearchPattern#getPatternType(String pattern) 

The method would return R_CAMELCASE_MATCH for NPE, R_PATTERN_MATCH for N*P*E and
R_PREFIX_MATCH for all other strings.
(In reply to comment #4)
&gt; can you explain the following sentence:
&gt; 
&gt;  * Can be combined to {@link #R_PREFIX_MATCH} match rule. For example,
&gt;  * when prefix match rule is combined with Camel Case match rule,
&gt;  * &lt;code&gt;"npE"&lt;/code&gt; pattern will match &lt;code&gt;npException&lt;/code&gt;.
&gt; 
&gt; For me npE using *only* prefix match would already find npExcption.
Sorry, my example was not good enough. Let take "nPE" for pattern. If you
combine R_CAMELCASE_MATCH and R_PREFIX_MATCH match rule values, you can get
"nullPointerException" and "nPException" results with only one search request.
First result matches only camel case pattern and second result matches only
prefix one...

&gt; 
&gt; From the PRs I got regarding camel case there are two additional requests where
&gt; we should interpret patterns as camel case as well:
&gt; 
&gt; o "NuPoEx": should be interpreted as a camel case pattern as well. I discussed 
&gt;   this already with Philippe and we decided to not support it in the first 
&gt;   place.
Agree
&gt; 
&gt; o "npe": should be interpreted as a camel case pattern as well. Although this
&gt;   is handy it will result in lots of matches since almost every pattern the 
&gt;   user types in will be more or less a camel case pattern. What is your take
&gt;   here ?
Currently, for pattern match (ie. with '*' or '?' characters), this is not
SearchPattern but clients which look at string patterns and set R_PATTERN_MATCH
bit accordingly. I think it should be the same for Camel Case pattern: that is
clients responsibility to let SearchPattern know that a Camel Case search must
be done and not SearchPattern to infer it from string.
So, if clients want to specify that "npe" is a Camel Case pattern then
R_CAMELCASE_MATCH bit must be set explicitely in given matchRule parameter.

&gt; 
&gt; Additionally to be able to specify the camel case pattern, results should be
&gt; annotated to show if they are a camel case match or a normal prefix match. For
&gt; example if the user types "IMethod" as a pattern we will interpret it as a camel
&gt; case pattern and it will match InnerMethod as well. However since IMethod is an
&gt; exact match the match should appear in the open type dialog before any camel
&gt; case matches.
Hmm, we do not have implemented this support yet. Currently, CharOperation
implements camelCase methods which only returns true or false. There's no way to
know, when these methods return true, whether the match was exact, prefix or
camel...
Modify this behavior may have performance impact and I'm not sure this is
absolutely necessary to have this result in first place.
Perhaps, this may be considered while implementing bug 79866...
&gt; 
&gt; We would also need API to find out what kind a certain pattern is. Otherwise UI
&gt; has to implement this and the algorithm might end up being different from the
&gt; core one (especially for camel case). Something like
&gt; 
&gt; int SearchPattern#getPatternType(String pattern) 
&gt; 
&gt; The method would return R_CAMELCASE_MATCH for NPE, R_PATTERN_MATCH for N*P*E and
&gt; R_PREFIX_MATCH for all other strings.
OK, sounds a good idea to centralize this in SearchPattern. Furthermore, I think
we need to verify that match rule bits and string are compatible.
For example, match rule R_PATTERN_MATCH set without any '*' or '?' character.
Or R_CAMELCASE_MATCH and R_PATTERN_MATCH bits set simultaneously.
SearchPattern could simply return null when a string and/or match rule pattern
are invalid or try the best rule which can be applied on given string...

I have another questions regarding CharOperation#camelCaseMatch: it is specified
that the tail after the sequence of the upper case characters is matched case
sensitive. I would prefer matching at case insensitive. e.g NPExCeption should
match NullPointerException. Any reason why it is defined to be case sensitive ?
Current behavior is matching existing implementation for open type dialog.
Did you get many complaint for this behavior ?
Dirk, here's the summary of our conf'call (please let me know if I missed
something):

1) Clients will always set R_CAMELCASE_MATCH, R_PATTERN_MATCH and R_PREFIX_MATCH
bits for match rule. SearchPattern will then choose the best match depending on
string pattern contents. The reason to do so is to avoid algorithm duplication.
That means that there won't be new API method getPatternType() on SearchPattern.

2) "npe" will not be considered as a Camel Case for first place (it currently
does not in Open Type dialog implementation). Not sure if we really agreed on
this point but it sounds more reasonable to defer this kind of behavior after
initial support implementation and come back after having played with it a
little bit.

3) SearchEngine will return pattern rule used while finding the SearchMatch (ie.
R_CAMELCASE_MATCH, R_PREFIX_MATCH or R_PATTERN_MATCH). It will be stored in
SearchMatch.rule field and will be accessible using already existing API getter
getRule(). Note that this point is handled by bug 79886 and may be addressed
later (milestone M4 or M5).
Of course, please read bug 79866 instead of 79886 in previous comment...

Here is what the open type dialog currently does: NPException matches
NullPointerExCeption however NPExCeption doesn't match NullPointerException. The
current implementation only treats a pattern as a camel case pattern and a tail
if the tail is all lower case, but the actual matching is then done case
insensitive. 

However, now that I am thinking of xCeption could be interperted as a tail as
well in pattern NPExCeption. What do you think ?
One little addition: the functionality described has to be provided for the all
types search as well, not only for reference and declaration search (which
already have the concept of a search match).
Fixed and released in HEAD.

Dirk, I've added an reminder in bug 79866 to be sure to address the point you
highlighted in comment 11...

Verified for 3.2 M3 using build I20051031-0010</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110061" />
    <CreationDate amount="2005-09-20 12:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Tasks" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>previous task history should be persistent</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330579473">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.mylar.tasklist.ui.views.TaskActivationHistory.isDuplicate(TaskActivationHistory.java:73)</Frame>
          <Frame depth="1">org.eclipse.mylar.tasklist.ui.views.TaskActivationHistory.loadPersistentHistory(TaskActivationHistory.java:54)</Frame>
          <Frame depth="2">org.eclipse.mylar.tasklist.ui.views.TaskActivationHistory.hasPrevious(TaskActivationHistory.java:121)</Frame>
          <Frame depth="3">org.eclipse.mylar.tasklist.ui.views.TaskListView$TaskListCellModifier.modify(TaskListView.java:642)</Frame>
          <Frame depth="4">org.eclipse.jface.viewers.TreeEditorImpl.saveEditorValue(TreeEditorImpl.java:310)</Frame>
          <Frame depth="5">org.eclipse.jface.viewers.TreeEditorImpl.applyEditorValue(TreeEditorImpl.java:161)</Frame>
          <Frame depth="6">org.eclipse.jface.viewers.TreeEditorImpl$3.applyEditorValue(TreeEditorImpl.java:286)</Frame>
          <Frame depth="7">org.eclipse.jface.viewers.CellEditor$1.run(CellEditor.java:304)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:783)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44)</Frame>
          <Frame depth="11">org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:148)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.CellEditor.fireApplyEditorValue(CellEditor.java:302)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.CheckboxCellEditor.activate(CheckboxCellEditor.java:84)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.TreeEditorImpl.activateCellEditor(TreeEditorImpl.java:83)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.TreeEditorImpl.activateCellEditor(TreeEditorImpl.java:145)</Frame>
          <Frame depth="16">org.eclipse.jface.viewers.TreeEditorImpl.handleMouseDown(TreeEditorImpl.java:271)</Frame>
          <Frame depth="17">org.eclipse.jface.viewers.TreeViewer$1.mouseDown(TreeViewer.java:435)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:133)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="2171" end="2226" />
        <code>MylarPlugin.getContextManager().resetActivityHistory();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We have a mechanism for going to the previously activated task, etc, but currently
it's stuck on the task list view.  This state should be stored, since it is
key for things like weekly task activity in the planning game report.
Does it make sense to write a test for this in TaskListUiTest.java? I couldn't 
find an existing test.


On second thought, if there is no existing test case I think I'll make a new 
test file because TaskListUiTest is unnecessarily complicated for this.
Yup, a new test would be fine, and feel free to cut-and-paste stuff from the
TaskListUITest--if it makes sense to have a common abstract test we can do that
later.
Created attachment 27372
Patch file 1 of 2

Here's a stab at using the persistent task selection structure for the next and
previous task buttons.
Created attachment 27373
Patch file 2 of 2

Test case for the proposed persistent next/previous code
Good stuff!  It does has an interesting bug though--when activating a task by hitting back, this
event is added to the interaction history.  You can notice this by setting up three tasks, activating
eacy, and noting that you can never get back to the beginning.  What I've done is added a setActivationHistorySuppressed
method to MylarContextManager.  Just set that to true sure to set it to false when the activation
is done.  This should probably get a new test in your TaskHistoryTest.

When creating new classes,
like the test case, always put "@author &lt;your name&gt;" on them.  It's important to properly attribute
credit to yourself.  The way you did it for task history test is right.

I know what you mean
about your implementation seeming more round-about than it needed to be.  But that's ok, because
the issue is that the InteractionEvent list is not a thing that's easy to query this sort of information
from.  What I imagine we'll end up doing is continuing to improve this TaskHistory class, and maybe
moving some of the functionality into mylar.core so that we have a convenient way of querying history.

Wes, the test was failing when run as a part of the whole suite, so I added the following line to
your setUp, which makes it behavre correctly in the suite.

MylarPlugin.getContextManager().resetActivityHistory();


Created attachment 27462
Patch for bug fix (mylar.tasklist)

This patch fixes a bug where some tasks are repeated when navigating back
before the back button is disabled. It might be still be possible for tasks to
be re-visited while moving forward and I'm going to test this case and see if I
can add a bit more logic to correct this. Note that this patch does not use
MylarContextManager.setActivityHistorySuppressed(..), which would be good not
to use so that we can see which tasks are revisited even when using
back/forward navigation.
Applying now.  

Good point, I wonder if I should remove those supporess methods?  I guess that
they could be useful for a "don't watch me" mode... I'll leave them for now.
Works great, nice work.  
Created attachment 27477
mylar.tasklist patch

I was still getting some strange behaviour with the previous code and the code
was already getting ugly. This patch is plan B: it uses the same logic as the
previous code by Ken but it loads the previous five tasks into the history
(There's a constant at the top if you want to change this the number of items
to load). This approach is a lot simpler and it seems to be working better.
Created attachment 27478
tasklist.tests patch

Slightly re-arranged test case.
This patch causes the following exceptions when I try to activate a task in my
runtime workspace.  Note that you should wrap anything that you do an a big try
catch so that failures in this code don't prevent task activation.

java.lang.NullPointerException
	at
org.eclipse.mylar.tasklist.ui.views.TaskActivationHistory.isDuplicate(TaskActivationHistory.java:73)
	at
org.eclipse.mylar.tasklist.ui.views.TaskActivationHistory.loadPersistentHistory(TaskActivationHistory.java:54)
	at
org.eclipse.mylar.tasklist.ui.views.TaskActivationHistory.hasPrevious(TaskActivationHistory.java:121)
	at
org.eclipse.mylar.tasklist.ui.views.TaskListView$TaskListCellModifier.modify(TaskListView.java:642)
	at
org.eclipse.jface.viewers.TreeEditorImpl.saveEditorValue(TreeEditorImpl.java:310)
	at
org.eclipse.jface.viewers.TreeEditorImpl.applyEditorValue(TreeEditorImpl.java:161)
	at
org.eclipse.jface.viewers.TreeEditorImpl$3.applyEditorValue(TreeEditorImpl.java:286)
	at org.eclipse.jface.viewers.CellEditor$1.run(CellEditor.java:304)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)
	at org.eclipse.core.runtime.Platform.run(Platform.java:783)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:148)
	at org.eclipse.jface.viewers.CellEditor.fireApplyEditorValue(CellEditor.java:302)
	at
org.eclipse.jface.viewers.CheckboxCellEditor.activate(CheckboxCellEditor.java:84)
	at
org.eclipse.jface.viewers.TreeEditorImpl.activateCellEditor(TreeEditorImpl.java:83)
	at
org.eclipse.jface.viewers.TreeEditorImpl.activateCellEditor(TreeEditorImpl.java:145)
	at
org.eclipse.jface.viewers.TreeEditorImpl.handleMouseDown(TreeEditorImpl.java:271)
	at org.eclipse.jface.viewers.TreeViewer$1.mouseDown(TreeViewer.java:435)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:133)
Created attachment 27479
mylar.tasklist patch

This patch should fix the NPE and has try catches around all public method
implementations.
Works very nicely for the manually testing I did, and this does look like a
better approach.  All I'm going to change is the printStackTrace calls to fail.
 When you synch up again check those out so that you see the convention (there's
a short note on this at the bottom of the http://eclipse.org/mylar/dev.html
page, checked in code should never print to the console).
Created attachment 27480
mylar.tasklist patch

This patch includes calls to fail in the catch blocks.
Created attachment 27481
mylar.tasklist patch

Sans stack trace output.
All checked in now (except the last patch since I had already taken out the
e.printStackTrace calls).
This is a test post for bug #108305.</WithStack>
    <WithOutStack>We have a mechanism for going to the previously activated task, etc, but currently
it's stuck on the task list view.  This state should be stored, since it is
key for things like weekly task activity in the planning game report.
Does it make sense to write a test for this in TaskListUiTest.java? I couldn't 
find an existing test.


On second thought, if there is no existing test case I think I'll make a new 
test file because TaskListUiTest is unnecessarily complicated for this.
Yup, a new test would be fine, and feel free to cut-and-paste stuff from the
TaskListUITest--if it makes sense to have a common abstract test we can do that
later.
Created attachment 27372
Patch file 1 of 2

Here's a stab at using the persistent task selection structure for the next and
previous task buttons.
Created attachment 27373
Patch file 2 of 2

Test case for the proposed persistent next/previous code
Good stuff!  It does has an interesting bug though--when activating a task by hitting back, this
event is added to the interaction history.  You can notice this by setting up three tasks, activating
eacy, and noting that you can never get back to the beginning.  What I've done is added a setActivationHistorySuppressed
method to MylarContextManager.  Just set that to true sure to set it to false when the activation
is done.  This should probably get a new test in your TaskHistoryTest.

When creating new classes,
like the test case, always put "@author &lt;your name&gt;" on them.  It's important to properly attribute
credit to yourself.  The way you did it for task history test is right.

I know what you mean
about your implementation seeming more round-about than it needed to be.  But that's ok, because
the issue is that the InteractionEvent list is not a thing that's easy to query this sort of information
from.  What I imagine we'll end up doing is continuing to improve this TaskHistory class, and maybe
moving some of the functionality into mylar.core so that we have a convenient way of querying history.

Wes, the test was failing when run as a part of the whole suite, so I added the following line to
your setUp, which makes it behavre correctly in the suite.

MylarPlugin.getContextManager().resetActivityHistory();


Created attachment 27462
Patch for bug fix (mylar.tasklist)

This patch fixes a bug where some tasks are repeated when navigating back
before the back button is disabled. It might be still be possible for tasks to
be re-visited while moving forward and I'm going to test this case and see if I
can add a bit more logic to correct this. Note that this patch does not use
MylarContextManager.setActivityHistorySuppressed(..), which would be good not
to use so that we can see which tasks are revisited even when using
back/forward navigation.
Applying now.  

Good point, I wonder if I should remove those supporess methods?  I guess that
they could be useful for a "don't watch me" mode... I'll leave them for now.
Works great, nice work.  
Created attachment 27477
mylar.tasklist patch

I was still getting some strange behaviour with the previous code and the code
was already getting ugly. This patch is plan B: it uses the same logic as the
previous code by Ken but it loads the previous five tasks into the history
(There's a constant at the top if you want to change this the number of items
to load). This approach is a lot simpler and it seems to be working better.
Created attachment 27478
tasklist.tests patch

Slightly re-arranged test case.
This patch causes the following exceptions when I try to activate a task in my
runtime workspace.  Note that you should wrap anything that you do an a big try
catch so that failures in this code don't prevent task activation.


Created attachment 27479
mylar.tasklist patch

This patch should fix the NPE and has try catches around all public method
implementations.
Works very nicely for the manually testing I did, and this does look like a
better approach.  All I'm going to change is the printStackTrace calls to fail.
 When you synch up again check those out so that you see the convention (there's
a short note on this at the bottom of the http://eclipse.org/mylar/dev.html
page, checked in code should never print to the console).
Created attachment 27480
mylar.tasklist patch

This patch includes calls to fail in the catch blocks.
Created attachment 27481
mylar.tasklist patch

Sans stack trace output.
All checked in now (except the last patch since I had already taken out the
e.printStackTrace calls).
This is a test post for bug #108305.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110062" />
    <CreationDate amount="2005-09-20 13:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cannot add arguments to the configuration for junit plug-in tests</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20050920

When you try and run something as a JUnit plug-in test the arguments page is
missing so you cannot add vm or program arguments
Fixed.</WithStack>
    <WithOutStack>20050920

When you try and run something as a JUnit plug-in test the arguments page is
missing so you cannot add vm or program arguments
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110063" />
    <CreationDate amount="2005-09-20 13:19:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Help]  Help view is not dynamic-aware</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Help plug-in has the support for ITocChangedListener but none of the pages of 
the Dynamic Help view react to it. This support should be added to handle 
bundles being added or removed dynamically.
ehm ehm... tags on each defect please ;-) 
This interface no longer exists.

Is there still any interest to have this functionality supported? If so, to what end? What's the use case?
ITocChangedListener no loneger exists - WONTFIX</WithStack>
    <WithOutStack>Help plug-in has the support for ITocChangedListener but none of the pages of 
the Dynamic Help view react to it. This support should be added to handle 
bundles being added or removed dynamically.
ehm ehm... tags on each defect please ;-) 
This interface no longer exists.

Is there still any interest to have this functionality supported? If so, to what end? What's the use case?
ITocChangedListener no loneger exists - WONTFIX</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110064" />
    <CreationDate amount="2005-09-20 13:37:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="jst.jsp" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[content model] some pref changes not on-the-fly changing Content Type in JSP</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="5">
        <Lines>
          <Line>1. create jsp with html content</Line>
          <Line>2. you have html_content as partition type for the html tags</Line>
          <Line>3. change contentType to text/xml</Line>
          <Line>4. you still have html_content as partition type for tags</Line>
          <Line>5. when you close/reopen, you now have xml_content</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- source validation (stops working altogether)</Line>
          <Line>- syntax highlighting</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>We may have bugs for some of these...

When you change the content type in a JSP file 
(eg. &lt;%@page contentType="text/xml; charset=UTF-8"%&gt;
to &lt;%@page contentType="text/html; charset=UTF-8"%&gt;)

some of the preference changes aren't effective immediately in the live editor
They are effective if you close/open the editor again.

here a couple I noticed:

- source validation (stops working altogether)
- syntax highlighting

It might help if re-initialization of the editor "features" were more
standardized (if possible).  

That all might depend on what is being changed though (content assist,
highlight, source validation, actions, etc...), and if they can be swapped out
on the fly or have some dependency where they can't be... not sure of the
limitations there...
Amy, can you please consider design alternatives and make a recommendation?

Fundamentally we need a JSP Conent Type Changed event/notification, 
and wonder if we should/could handle (or "present to the world" as generic
contentType/preferences/config change ... or, if just need to leave everyone to
their own devices? I'd prefer 
not this later solution, since fundamentally if processor was made to handle
"text/html" specifically, we wouldn't want them to have to "know about"
text/xml, etc. In most cases, I think the action would best be handled in ways
similar to 
what we do for "save as" from HTML file to JSP file. 

Most if not all of our processors are specific to partition type.  So the 
processors know if they are handling html or xml content.

The underlying problem may be the fact that the partitions are not changed 
when the jsp content type changes.  For example:
1. create jsp with html content
2. you have html_content as partition type for the html tags
3. change contentType to text/xml
4. you still have html_content as partition type for tags
5. when you close/reopen, you now have xml_content

I haven't done much more digging, but 

Nitin, do you have any insight on why the partition types are not changing 
when content type changes?  Does the JSP partitioner need to react better to 
JSP content type changes?  I agree there should be some sort of JSP Content 
type changed event, but we should have as few listeners as possible.  Maybe 
only the partitioner needs to listen for content type changes and afterwards, 
the correct processors will be retrieved.
Thanks Amy, and yes, the partitioner should be changed when inner content type
changes. 

And I assume, somehow, should interact with
getConfiguredContentTypes(ISourceViewer)
getConfiguredDocumentPartitioning(ISourceViewer)

Almost seem like our default behavior should be to get this info from the
document itself?
[just thinking outloud, and didn't want to forget this interaction]


reassigning to inbox
Created attachment 156797
Error Log

There appears to now be some mechanism for detecting when the inner model changes but it explodes epically when you change text/html to text/xml.  See attached for logged messages.
*** Bug 187701 has been marked as a duplicate of this bug. ***
*** Bug 423296 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>We may have bugs for some of these...

When you change the content type in a JSP file 
(eg. &lt;%@page contentType="text/xml; charset=UTF-8"%&gt;
to &lt;%@page contentType="text/html; charset=UTF-8"%&gt;)

some of the preference changes aren't effective immediately in the live editor
They are effective if you close/open the editor again.

here a couple I noticed:

- source validation (stops working altogether)
- syntax highlighting

It might help if re-initialization of the editor "features" were more
standardized (if possible).  

That all might depend on what is being changed though (content assist,
highlight, source validation, actions, etc...), and if they can be swapped out
on the fly or have some dependency where they can't be... not sure of the
limitations there...
Amy, can you please consider design alternatives and make a recommendation?

Fundamentally we need a JSP Conent Type Changed event/notification, 
and wonder if we should/could handle (or "present to the world" as generic
contentType/preferences/config change ... or, if just need to leave everyone to
their own devices? I'd prefer 
not this later solution, since fundamentally if processor was made to handle
"text/html" specifically, we wouldn't want them to have to "know about"
text/xml, etc. In most cases, I think the action would best be handled in ways
similar to 
what we do for "save as" from HTML file to JSP file. 

Most if not all of our processors are specific to partition type.  So the 
processors know if they are handling html or xml content.

The underlying problem may be the fact that the partitions are not changed 
when the jsp content type changes.  For example:
1. create jsp with html content
2. you have html_content as partition type for the html tags
3. change contentType to text/xml
4. you still have html_content as partition type for tags
5. when you close/reopen, you now have xml_content

I haven't done much more digging, but 

Nitin, do you have any insight on why the partition types are not changing 
when content type changes?  Does the JSP partitioner need to react better to 
JSP content type changes?  I agree there should be some sort of JSP Content 
type changed event, but we should have as few listeners as possible.  Maybe 
only the partitioner needs to listen for content type changes and afterwards, 
the correct processors will be retrieved.
Thanks Amy, and yes, the partitioner should be changed when inner content type
changes. 

And I assume, somehow, should interact with
getConfiguredContentTypes(ISourceViewer)
getConfiguredDocumentPartitioning(ISourceViewer)

Almost seem like our default behavior should be to get this info from the
document itself?
[just thinking outloud, and didn't want to forget this interaction]


reassigning to inbox
Created attachment 156797
Error Log

There appears to now be some mechanism for detecting when the inner model changes but it explodes epically when you change text/html to text/xml.  See attached for logged messages.
*** Bug 187701 has been marked as a duplicate of this bug. ***
*** Bug 423296 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110065" />
    <CreationDate amount="2005-09-20 13:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.UI.AutoGUIUI" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Give users the ability to change the linkage to a verification hook class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>This is opened as a defect because it's a major limitation when using the auto
gui test suite.

Users should be given the option of changing the verification class linkage to a
test suite after it's been created.  Currently we take the source location and
store it into the data model when the user creates the test suite.  The user
doesn't have the option of changing this location after the test suite is created.
Fix in cvs
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithStack>
    <WithOutStack>This is opened as a defect because it's a major limitation when using the auto
gui test suite.

Users should be given the option of changing the verification class linkage to a
test suite after it's been created.  Currently we take the source location and
store it into the data model when the user creates the test suite.  The user
doesn't have the option of changing this location after the test suite is created.
Fix in cvs
ACTION: Please verify/close this defect.
Closing by default since not closed by the originator in the 7+ months since being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the resolution is not correct.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110066" />
    <CreationDate amount="2005-09-20 13:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Log Analyzer" />
    <component amount="Platform.UI.LogView" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Log view - "Export data" and "Export Records to XML file" options</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>In the Log view, the "Export data" dialog returns "No exporters available for
this viewer".

In the Log view "Export Records to XML file" dialog, the "Files of type" field
shows *.html as the file type instead of xml.
fixed
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>In the Log view, the "Export data" dialog returns "No exporters available for
this viewer".

In the Log view "Export Records to XML file" dialog, the "Files of type" field
shows *.html as the file type instead of xml.
fixed
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110067" />
    <CreationDate amount="2005-09-20 13:57:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="jst.jsp" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[content assist] in JSP, switch content type and proposals are uppercase</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>if you have a JSP file w/ xml content type:

    &lt;%@page contentType="text/xml charset=UTF-8"%&gt;

then change content type to html on the fly:

    &lt;%@page contentType="text/html charset=UTF-8"%&gt;

the proposals are uppercase (not honoring the case preference?)

If you save then close/reopen the file, the proposals are now lowercase
(honoring the case preference now?)
Amy, this may be a dup of related "JSP Conent type" bugs, 
bug please suggest a solution.
reassigning to inbox
This no longer seems to be a problem, must have been addressed in the past 5 years.</WithStack>
    <WithOutStack>if you have a JSP file w/ xml content type:

    &lt;%@page contentType="text/xml charset=UTF-8"%&gt;

then change content type to html on the fly:

    &lt;%@page contentType="text/html charset=UTF-8"%&gt;

the proposals are uppercase (not honoring the case preference?)

If you save then close/reopen the file, the proposals are now lowercase
(honoring the case preference now?)
Amy, this may be a dup of related "JSP Conent type" bugs, 
bug please suggest a solution.
reassigning to inbox
This no longer seems to be a problem, must have been addressed in the past 5 years.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110068" />
    <CreationDate amount="2005-09-20 14:02:00 -0400" />
    <DupId amount="110019" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>cannot run JUnit tests as plug-in</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330579473">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.launching.ExecutionArguments.&lt;init&gt;(ExecutionArguments.java:37)</Frame>
          <Frame depth="1">org.eclipse.pde.internal.ui.launcher.JUnitLaunchConfiguration.getVMArgumentsArray(JUnitLaunchConfiguration.java:349)</Frame>
          <Frame depth="2">org.eclipse.pde.internal.ui.launcher.JUnitLaunchConfiguration.createVMRunner(JUnitLaunchConfiguration.java:134)</Frame>
          <Frame depth="3">org.eclipse.pde.internal.ui.launcher.JUnitLaunchConfiguration.launch(JUnitLaunchConfiguration.java:93)</Frame>
          <Frame depth="4">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:590)</Frame>
          <Frame depth="5">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:515)</Frame>
          <Frame depth="6">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:733)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.DebugUIPlugin$6.run(DebugUIPlugin.java:931)</Frame>
          <Frame depth="8">org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1. Load org.eclipse.ui.tests from the dev.eclipse.org /home/eclipse repository.</Line>
          <Line>2. Select UiTestSuite class.</Line>
          <Line>3.From toolbar choose Debug...</Line>
          <Line>4. Select JUnit plugin test and click New button.</Line>
          <Line>5. Take note of settings on Test page and Main page.</Line>
          <Line>6. Click Debug button.</Line>
          <Line>Error dialog: An internal error occurred during: "Launching"</Line>
          <Line>Stack trace:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>On Windows 200, using Sun 1.4.2 VM, build 0920:
1. Load org.eclipse.ui.tests from the dev.eclipse.org /home/eclipse repository.
2. Select UiTestSuite class.
3.From toolbar choose Debug...
4. Select JUnit plugin test and click New button.
5. Take note of settings on Test page and Main page.
6. Click Debug button.
Error dialog: An internal error occurred during: "Launching"
Stack trace:
java.lang.IllegalArgumentException
	at org.eclipse.jdt.launching.ExecutionArguments.&lt;init&gt;
(ExecutionArguments.java:37)
	at 
org.eclipse.pde.internal.ui.launcher.JUnitLaunchConfiguration.getVMArgumentsArra
y(JUnitLaunchConfiguration.java:349)
	at 
org.eclipse.pde.internal.ui.launcher.JUnitLaunchConfiguration.createVMRunner
(JUnitLaunchConfiguration.java:134)
	at org.eclipse.pde.internal.ui.launcher.JUnitLaunchConfiguration.launch
(JUnitLaunchConfiguration.java:93)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:590)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:515)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:733)
	at org.eclipse.debug.internal.ui.DebugUIPlugin$6.run
(DebugUIPlugin.java:931)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)

NOTE:
If I select the UITestSuite class in the package explorer and from the context 
menu choose Run As &gt; JUnit Plugin test the tests will launch.  I guess the 
settings are different when you run this way, versus creating the launch 
configuration manually?


*** This bug has been marked as a duplicate of 110019 ***</WithStack>
    <WithOutStack>On Windows 200, using Sun 1.4.2 VM, build 0920:
1. Load org.eclipse.ui.tests from the dev.eclipse.org /home/eclipse repository.
2. Select UiTestSuite class.
3.From toolbar choose Debug...
4. Select JUnit plugin test and click New button.
5. Take note of settings on Test page and Main page.
6. Click Debug button.
Error dialog: An internal error occurred during: "Launching"
Stack trace:


NOTE:
If I select the UITestSuite class in the package explorer and from the context 
menu choose Run As &gt; JUnit Plugin test the tests will launch.  I guess the 
settings are different when you run this way, versus creating the launch 
configuration manually?


*** This bug has been marked as a duplicate of 110019 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110069" />
    <CreationDate amount="2005-09-20 14:04:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>External dependencies errors not refreshed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="17">
        <Lines>
          <Line>a. Right click on the project</Line>
          <Line>b. Properties</Line>
          <Line>c. Java build path</Line>
          <Line>d. Libraries tab</Line>
          <Line>e. Add external JARs…</Line>
          <Line>f. Explore up to T:\myjar.jar</Line>
          <Line>g. OK</Line>
          <Line>3. Close Eclipse</Line>
          <Line>4. Disconnect T: network drive</Line>
          <Line>5. Open Eclipse</Line>
          <Line>6. At this point you will see the error: Project myProject  is missing required</Line>
          <Line>library: T:\myjar.jar '</Line>
          <Line>7. Close Eclipse</Line>
          <Line>8. Reconnect network drive to the correct location.</Line>
          <Line>9. Open Eclipse</Line>
          <Line>10. You will see the error message persists. Refreshing or rebuilding the</Line>
          <Line>project does not remove the error.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="19">
        <Lines>
          <Line>1. Mount an UNC driver (ie; T: -&gt; \\server\dir\)</Line>
          <Line>2. Take any Java project and add an external JAR over a network drive.</Line>
          <Line>a. Right click on the project</Line>
          <Line>b. Properties</Line>
          <Line>c. Java build path</Line>
          <Line>d. Libraries tab</Line>
          <Line>e. Add external JARs…</Line>
          <Line>f. Explore up to T:\myjar.jar</Line>
          <Line>g. OK</Line>
          <Line>3. Close Eclipse</Line>
          <Line>4. Disconnect T: network drive</Line>
          <Line>5. Open Eclipse</Line>
          <Line>6. At this point you will see the error: Project myProject  is missing required</Line>
          <Line>library: T:\myjar.jar '</Line>
          <Line>7. Close Eclipse</Line>
          <Line>8. Reconnect network drive to the correct location.</Line>
          <Line>9. Open Eclipse</Line>
          <Line>10. You will see the error message persists. Refreshing or rebuilding the</Line>
          <Line>project does not remove the error.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Given a network connected drive T:

After getting an error like "Project MyProject is missing required library:
'T:\myjar\anyjar.jar'" caused by a network failure and restoring the connection,
there is no way of refreshing the project and making the error disappear.

The error message persists upon the external jar is removed and inserted again.
I assume this is referring to libraries added to the build path of a Java project.
(In reply to comment #1)
&gt; I assume this is referring to libraries added to the build path of a Java project.

Yes, it is.
Please provide Eclipse build ID and steps to reproduce, then reopen.
Eclipse SDK

Version: 3.1.0
Build id: I20050627-1435

1. Mount an UNC driver (ie; T: -&gt; \\server\dir\)
2. Take any Java project and add an external JAR over a network drive.
  a. Right click on the project
  b. Properties
  c. Java build path
  d. Libraries tab
  e. Add external JARs…
  f. Explore up to T:\myjar.jar
  g. OK
3. Close Eclipse
4. Disconnect T: network drive
5. Open Eclipse
6. At this point you will see the error: Project myProject  is missing required
library: T:\myjar.jar '
7. Close Eclipse
8. Reconnect network drive to the correct location.
9. Open Eclipse
10. You will see the error message persists. Refreshing or rebuilding the
project does not remove the error.

Note: if you reconnect the drive in step 7 without closing Eclipse, the error
messages goes away.

Thanks for the steps. I will investigate.
Sorry I cannot reproduce. Right after startup (step 9) I briefly see the error
message but it disappears after the Java tooling has been initialized.

Do you have more details ?
(In reply to comment #6)
&gt; Sorry I cannot reproduce. Right after startup (step 9) I briefly see the error
&gt; message but it disappears after the Java tooling has been initialized.
&gt; 
&gt; Do you have more details ?

No, the only difference between the test I did for writting the steps and the
original problem is I was using a SUBST command over a local directory.

SUBST T: =&gt; C:\localdir\

But, as long as I remember, the reproduction was over a network drive.
Please reopen if you have more details.</WithStack>
    <WithOutStack>Given a network connected drive T:

After getting an error like "Project MyProject is missing required library:
'T:\myjar\anyjar.jar'" caused by a network failure and restoring the connection,
there is no way of refreshing the project and making the error disappear.

The error message persists upon the external jar is removed and inserted again.
I assume this is referring to libraries added to the build path of a Java project.
(In reply to comment #1)
&gt; I assume this is referring to libraries added to the build path of a Java project.

Yes, it is.
Please provide Eclipse build ID and steps to reproduce, then reopen.
Eclipse SDK

Version: 3.1.0
Build id: I20050627-1435

1. Mount an UNC driver (ie; T: -&gt; \\server\dir\)
2. Take any Java project and add an external JAR over a network drive.
  a. Right click on the project
  b. Properties
  c. Java build path
  d. Libraries tab
  e. Add external JARs…
  f. Explore up to T:\myjar.jar
  g. OK
3. Close Eclipse
4. Disconnect T: network drive
5. Open Eclipse
6. At this point you will see the error: Project myProject  is missing required
library: T:\myjar.jar '
7. Close Eclipse
8. Reconnect network drive to the correct location.
9. Open Eclipse
10. You will see the error message persists. Refreshing or rebuilding the
project does not remove the error.

Note: if you reconnect the drive in step 7 without closing Eclipse, the error
messages goes away.

Thanks for the steps. I will investigate.
Sorry I cannot reproduce. Right after startup (step 9) I briefly see the error
message but it disappears after the Java tooling has been initialized.

Do you have more details ?
(In reply to comment #6)
&gt; Sorry I cannot reproduce. Right after startup (step 9) I briefly see the error
&gt; message but it disappears after the Java tooling has been initialized.
&gt; 
&gt; Do you have more details ?

No, the only difference between the test I did for writting the steps and the
original problem is I was using a SUBST command over a local directory.

SUBST T: =&gt; C:\localdir\

But, as long as I remember, the reproduction was over a network drive.
Please reopen if you have more details.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110070" />
    <CreationDate amount="2005-09-20 14:04:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="wst.wsdl" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Need new WSDL validation performance test case</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>We need an additional JUnit test case that will measure WSDL validation 
performance at a project level. This test case will perform WSDL validation at 
the Eclipse project level.
*** Bug 110077 has been marked as a duplicate of this bug. ***
Created attachment 27340
This patch needs to be applied to the plugin

The input project folder name to be validated can be provided through the
argument: -DprojectDir=fullyQualifiedFolderName
Created attachment 27365
updated test.xml

Hi Jeff,
As discussed, I updated test.xml. Please review and check in.
Patch applied and released.
The patch has been checked in.

The patch has been checked in and functional.
Re-opening just for updated test.xml
Created attachment 28257
new test.xml

Hi Jeff,
I attached a new test.xml as discussed. Please review and check in.
Thanks,
- Kihup
Patch committed and released.
The patch has been checked in.
The patch has been checked in.</WithStack>
    <WithOutStack>We need an additional JUnit test case that will measure WSDL validation 
performance at a project level. This test case will perform WSDL validation at 
the Eclipse project level.
*** Bug 110077 has been marked as a duplicate of this bug. ***
Created attachment 27340
This patch needs to be applied to the plugin

The input project folder name to be validated can be provided through the
argument: -DprojectDir=fullyQualifiedFolderName
Created attachment 27365
updated test.xml

Hi Jeff,
As discussed, I updated test.xml. Please review and check in.
Patch applied and released.
The patch has been checked in.

The patch has been checked in and functional.
Re-opening just for updated test.xml
Created attachment 28257
new test.xml

Hi Jeff,
I attached a new test.xml as discussed. Please review and check in.
Thanks,
- Kihup
Patch committed and released.
The patch has been checked in.
The patch has been checked in.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110071" />
    <CreationDate amount="2005-09-20 14:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.UI.ManualTestClient" />
    <Version amount="4.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>WI8: Add test execution contextual information to a test log.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>It would be useful to know who ran a particular test if there are questions
about the results (e.g., the verdict is inconclusive but there's no comment
explaining why).
Please transfer this defect to the Test.UI.ManualTestClient componet and assign 
it to paules@ca.ibm.com to include as a work item for feature 
http://www.eclipse.org/tptp/groups/Architecture/documents/features/hf_74841.html
.  
Add support for adding a the following contextual information to a test case 
execution result: 

Defect(s) (e.g. one or more defect numbers for failed test cases). 

Driver (e.g. product build date or driver number). 

Tester(s) (e.g. one or more testers). 

Platform(s) (e.g. one or more execution platforms either programmatically set 
of set by the tester) 

Note: This defect covers work item 7 of enhancement #74841 
(https://bugs.eclipse.org/bugs/show_bug.cgi?id=74841) to provide a RCP/SWT-
based Manual Test Client to replace the existing Swing-based Manual Test Client.

P1 Cannot ship without this enhancement 
normal A problem making a function difficult to use but no special work around 
is required
This feature will be added to the new  RCP/SWT-
based Manual Test Client.  However, this function will not be provided for the 
remaining TPTP test types since there is no tester as such to determine defects 
and the testers do not cause a inconclusive/failure verdict for the automated 
test types.  However, capturing the platform and driver information would be 
relevant for the automated test types.  As such, this information will be have 
to be added to the common execution harness.
I should have opened this as an enhancement; sorry about that.
(In reply to comment #2)

CORRECTION:  This is work item #8.
(In reply to comment #5)

You did!  However, this is a defect since it is a work item of enhancement 
#74841.

[Comment by Ruth Lee]

I hadn't thought about the automated test types; you're right that we wouldn't 
need a tester name, unless we wanted to know that it was automated? The tester 
name could literally be "automated" and pre-filled in?

Harm has decided that adding a 'configuration' type of test case to each TPTP 
manual test suite in the test-results module is the best approach to solve this 
defect.  For example, the description of the 'configuration' type of test case 
would ask the tester to enter the following information in a structured format 
in the 'Information' field of the Manual Test Client:

Driver (e.g. product build date or driver number). 

Tester(s) (e.g. one or more testers). 

Platform(s) (e.g. one or more execution platforms either programmatically set 
of set by the tester) 

We will create a single 'configuration' type of test suite and add an 
invocation to the behavior of each TPTP manual test suite in the test-results 
module.

Since we have already started the TPTP v4.1 (i2) test pass and committing a 
mass changed to all TPTP manual test suites in the test-results module may 
introduce a delay in the test pass in the event of an error, we will wait and 
do this change for the TPTP v4.1 (i3) test pass.  As such, updating the target 
and severity.
Cannot contain in TPTP V4.2.0 (i3).

Based on priority and available resources, this defect is being considered for deferral from 4.3.  If you object to this deferral, please provide a comment
ASAP explaining the reason that you need this in 4.3 and we will take that into
consideration.

Retargeting to 4.4 as decided in today's AG call (only permitting blocking and critical defects in 4.3 i3).
Targeting to future since cannot be contained in 4.4.
Targeting to future since cannot be contained in 4.4.
As discussed on this week's Test Project call (January 22, 2007), the Test Project will focus on existing P1 - P2/Blocker - Major and P1/Normal and test creation/automation defects (omitting defects dependant on outstanding features) in TPTP 4.4.  All other Test Project defects have been targeted to future.

If this defect has been targeted to future and you/originator feel it should be completed in 4.4, please provide the necessary reason as a reply to this comment or a post to the Test Project mailing list (tptp-test-tooling-dev@eclipse.org).  We will collectively triage and assess our resources to determine a case-by-case decision. 
Correction:  The Test Project mailing list is tptp-testing-tools-dev@eclipse.org.
In TPTP 4.5, the Manual Test type was moved from a General Availability (GA) component to an As-Is component. As-Is components are primarily provided for prior users but imply no support (for example, defects, news group, and mailing lists) or commitment to triage or resolve opened defects. For this defect to be considered, please re-open with an attached patch including code to resolve the symptom and test cases to test the fix.
Closing by default since not closed by the originator in the 7+ months since
being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the
resolution is not correct.</WithStack>
    <WithOutStack>It would be useful to know who ran a particular test if there are questions
about the results (e.g., the verdict is inconclusive but there's no comment
explaining why).
Please transfer this defect to the Test.UI.ManualTestClient componet and assign 
it to paules@ca.ibm.com to include as a work item for feature 
http://www.eclipse.org/tptp/groups/Architecture/documents/features/hf_74841.html
.  
Add support for adding a the following contextual information to a test case 
execution result: 

Defect(s) (e.g. one or more defect numbers for failed test cases). 

Driver (e.g. product build date or driver number). 

Tester(s) (e.g. one or more testers). 

Platform(s) (e.g. one or more execution platforms either programmatically set 
of set by the tester) 

Note: This defect covers work item 7 of enhancement #74841 
(https://bugs.eclipse.org/bugs/show_bug.cgi?id=74841) to provide a RCP/SWT-
based Manual Test Client to replace the existing Swing-based Manual Test Client.

P1 Cannot ship without this enhancement 
normal A problem making a function difficult to use but no special work around 
is required
This feature will be added to the new  RCP/SWT-
based Manual Test Client.  However, this function will not be provided for the 
remaining TPTP test types since there is no tester as such to determine defects 
and the testers do not cause a inconclusive/failure verdict for the automated 
test types.  However, capturing the platform and driver information would be 
relevant for the automated test types.  As such, this information will be have 
to be added to the common execution harness.
I should have opened this as an enhancement; sorry about that.
(In reply to comment #2)

CORRECTION:  This is work item #8.
(In reply to comment #5)

You did!  However, this is a defect since it is a work item of enhancement 
#74841.

[Comment by Ruth Lee]

I hadn't thought about the automated test types; you're right that we wouldn't 
need a tester name, unless we wanted to know that it was automated? The tester 
name could literally be "automated" and pre-filled in?

Harm has decided that adding a 'configuration' type of test case to each TPTP 
manual test suite in the test-results module is the best approach to solve this 
defect.  For example, the description of the 'configuration' type of test case 
would ask the tester to enter the following information in a structured format 
in the 'Information' field of the Manual Test Client:

Driver (e.g. product build date or driver number). 

Tester(s) (e.g. one or more testers). 

Platform(s) (e.g. one or more execution platforms either programmatically set 
of set by the tester) 

We will create a single 'configuration' type of test suite and add an 
invocation to the behavior of each TPTP manual test suite in the test-results 
module.

Since we have already started the TPTP v4.1 (i2) test pass and committing a 
mass changed to all TPTP manual test suites in the test-results module may 
introduce a delay in the test pass in the event of an error, we will wait and 
do this change for the TPTP v4.1 (i3) test pass.  As such, updating the target 
and severity.
Cannot contain in TPTP V4.2.0 (i3).

Based on priority and available resources, this defect is being considered for deferral from 4.3.  If you object to this deferral, please provide a comment
ASAP explaining the reason that you need this in 4.3 and we will take that into
consideration.

Retargeting to 4.4 as decided in today's AG call (only permitting blocking and critical defects in 4.3 i3).
Targeting to future since cannot be contained in 4.4.
Targeting to future since cannot be contained in 4.4.
As discussed on this week's Test Project call (January 22, 2007), the Test Project will focus on existing P1 - P2/Blocker - Major and P1/Normal and test creation/automation defects (omitting defects dependant on outstanding features) in TPTP 4.4.  All other Test Project defects have been targeted to future.

If this defect has been targeted to future and you/originator feel it should be completed in 4.4, please provide the necessary reason as a reply to this comment or a post to the Test Project mailing list (tptp-test-tooling-dev@eclipse.org).  We will collectively triage and assess our resources to determine a case-by-case decision. 
Correction:  The Test Project mailing list is tptp-testing-tools-dev@eclipse.org.
In TPTP 4.5, the Manual Test type was moved from a General Availability (GA) component to an As-Is component. As-Is components are primarily provided for prior users but imply no support (for example, defects, news group, and mailing lists) or commitment to triage or resolve opened defects. For this defect to be considered, please re-open with an attached patch including code to resolve the symptom and test cases to test the fix.
Closing by default since not closed by the originator in the 7+ months since
being resolved.  

Please reopen if the issue is still present in the latest TPTP release or the
resolution is not correct.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110072" />
    <CreationDate amount="2005-09-20 14:21:00 -0400" />
    <DupId amount="99358" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>NPE in AnonymousTypeCompletionProposal</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330579473">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.ui.text.java.AnonymousTypeCompletionProposal.updateReplacementString(AnonymousTypeCompletionProposal.java:278)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.ui.text.java.JavaTypeCompletionProposal.apply(JavaTypeCompletionProposal.java:95)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.ui.text.java.JavaCompletionProposal.apply(JavaCompletionProposal.java:566)</Frame>
          <Frame depth="3">org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:588)</Frame>
          <Frame depth="4">org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:536)</Frame>
          <Frame depth="5">org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$26(CompletionProposalPopup.java:532)</Frame>
          <Frame depth="6">org.eclipse.jface.text.contentassist.CompletionProposalPopup$5.widgetDefaultSelected(CompletionProposalPopup.java:457)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:97)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:884)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3194)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2823)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1755)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1719)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:368)</Frame>
          <Frame depth="15">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)</Frame>
          <Frame depth="17">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="18">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:377)</Frame>
          <Frame depth="19">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:164)</Frame>
          <Frame depth="20">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="21">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="22">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="23">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)</Frame>
          <Frame depth="25">org.eclipse.core.launcher.Main.basicRun(Main.java:282)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.run(Main.java:977)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.main(Main.java:952)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="package">
        <location start="127" end="137" />
        <code>package p;</code>
      </source_code>
      <source_code type="class">
        <location start="139" end="267" />
        <code>public class Anon {
	void test() {
		class Type&lt;S, T&gt; {
			Type&lt;String, String&gt; t= new Type&lt;String, String&gt;(/*caret*/);
		}
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1) create a java project with a compilation unit containing:</Line>
          <Line />
          <Line />
          <Line />
          <Line>2) Put the cursor before the /*caret*/ comment.</Line>
          <Line>3) Do code assist and select the second entry to create an anonymous entry. You</Line>
          <Line>should get the stack trace.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Using I20050920-0010, I got this exception.
java.lang.NullPointerException
	at
org.eclipse.jdt.internal.ui.text.java.AnonymousTypeCompletionProposal.updateReplacementString(AnonymousTypeCompletionProposal.java:278)
	at
org.eclipse.jdt.internal.ui.text.java.JavaTypeCompletionProposal.apply(JavaTypeCompletionProposal.java:95)
	at
org.eclipse.jdt.internal.ui.text.java.JavaCompletionProposal.apply(JavaCompletionProposal.java:566)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:588)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertSelectedProposalWithMask(CompletionProposalPopup.java:536)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$26(CompletionProposalPopup.java:532)
	at
org.eclipse.jface.text.contentassist.CompletionProposalPopup$5.widgetDefaultSelected(CompletionProposalPopup.java:457)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:97)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:884)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3194)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2823)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1755)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1719)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:368)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:377)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:164)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:282)
	at org.eclipse.core.launcher.Main.run(Main.java:977)
	at org.eclipse.core.launcher.Main.main(Main.java:952)

STEPS TO REPRODUCE:
1) create a java project with a compilation unit containing:
package p;

public class Anon {
	void test() {
		class Type&lt;S, T&gt; {
			Type&lt;String, String&gt; t= new Type&lt;String, String&gt;(/*caret*/);
		}
	}
}
2) Put the cursor before the /*caret*/ comment.
3) Do code assist and select the second entry to create an anonymous entry. You
should get the stack trace.


*** This bug has been marked as a duplicate of 99358 ***</WithStack>
    <WithOutStack>Using I20050920-0010, I got this exception.


STEPS TO REPRODUCE:
1) create a java project with a compilation unit containing:
package p;

public class Anon {
	void test() {
		class Type&lt;S, T&gt; {
			Type&lt;String, String&gt; t= new Type&lt;String, String&gt;(/*caret*/);
		}
	}
}
2) Put the cursor before the /*caret*/ comment.
3) Do code assist and select the second entry to create an anonymous entry. You
should get the stack trace.


*** This bug has been marked as a duplicate of 99358 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110073" />
    <CreationDate amount="2005-09-20 14:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>perspective button goes blank after closing perspective</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>- drag the CBanner's separator to ~ the 50% mark</Line>
          <Line>- press its "Open Perspective" button, switch to the Debug perspective</Line>
          <Line>- after the perspective switch is done, right-click the Debug button in the</Line>
          <Line>CBanner and select Close</Line>
          <Line>- this returns you to the previous perspective, but its button in the CBanner</Line>
          <Line>now appears blank</Line>
          <Line>- will attach screenshot next</Line>
          <Line>Created attachment 27307</Line>
          <Line>screenshot</Line>
          <Line>- this problem has appeared as a side effect of M2 work that changed the order</Line>
          <Line>of things that are done at dispose time (in an effort to keep widgets 'valid'</Line>
          <Line>during dispose callbacks)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>3.2M2
observed on linux-motif and hpux, but not on gtk, so appears to be swt problem

- drag the CBanner's separator to ~ the 50% mark
- press its "Open Perspective" button, switch to the Debug perspective
- after the perspective switch is done, right-click the Debug button in the 
CBanner and select Close
- this returns you to the previous perspective, but its button in the CBanner 
now appears blank
- will attach screenshot next
Created attachment 27307
screenshot
- this problem has appeared as a side effect of M2 work that changed the order
of things that are done at dispose time (in an effort to keep widgets 'valid'
during dispose callbacks)

fixed for 0921 4:00pm build</WithStack>
    <WithOutStack>3.2M2
observed on linux-motif and hpux, but not on gtk, so appears to be swt problem

- drag the CBanner's separator to ~ the 50% mark
- press its "Open Perspective" button, switch to the Debug perspective
- after the perspective switch is done, right-click the Debug button in the 
CBanner and select Close
- this returns you to the previous perspective, but its button in the CBanner 
now appears blank
- will attach screenshot next
Created attachment 27307
screenshot
- this problem has appeared as a side effect of M2 work that changed the order
of things that are done at dispose time (in an effort to keep widgets 'valid'
during dispose callbacks)

fixed for 0921 4:00pm build</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110074" />
    <CreationDate amount="2005-09-20 14:30:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Breakpoints are not added to default breakpoint working set</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050920

* create two breakpoint working sets
* set one as default
* create a new breakpoint

-&gt; The breakpoint is placed in the "others (no working set)" category rather 
than the default set
Fixed. Changes to BreakpointSetOrganizer. Added tests in 
BreakpointWorkingSetTests, and refactored common function for breakpoint 
working set tests with ImportBreakpointTests.
Please verify, Michael.
verified</WithStack>
    <WithOutStack>I20050920

* create two breakpoint working sets
* set one as default
* create a new breakpoint

-&gt; The breakpoint is placed in the "others (no working set)" category rather 
than the default set
Fixed. Changes to BreakpointSetOrganizer. Added tests in 
BreakpointWorkingSetTests, and refactored common function for breakpoint 
working set tests with ImportBreakpointTests.
Please verify, Michael.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110075" />
    <CreationDate amount="2005-09-20 14:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Embedded breakpoints view with nested groups does not update check marks properly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050920

* display breakpoints with nested groupings (for example, by breakpoint type 
with breakpoint working sets)
* select a top level breakpoint workings set
* select 'export breakpoints'

&gt; the wizard is opened with the top level item checked, and second level items 
checked, but not the third level. 
&gt; check marks do not update properly - i.e. checking a top level node only 
updates second level nodes, but not 3rd level nodes
The wizard also allows you to export an empty set of breakpoints in this case, 
but checking a top level item, and pressing Finish.
Created attachment 27364
patch

supports all levels of nesting.
please verify Kevin
Removed unused import statements and released patch. 
Reassigning to reporter for verification.
Darin, please verify
Verified.</WithStack>
    <WithOutStack>I20050920

* display breakpoints with nested groupings (for example, by breakpoint type 
with breakpoint working sets)
* select a top level breakpoint workings set
* select 'export breakpoints'

&gt; the wizard is opened with the top level item checked, and second level items 
checked, but not the third level. 
&gt; check marks do not update properly - i.e. checking a top level node only 
updates second level nodes, but not 3rd level nodes
The wizard also allows you to export an empty set of breakpoints in this case, 
but checking a top level item, and pressing Finish.
Created attachment 27364
patch

supports all levels of nesting.
please verify Kevin
Removed unused import statements and released patch. 
Reassigning to reporter for verification.
Darin, please verify
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110076" />
    <CreationDate amount="2005-09-20 14:36:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[Undo] Undo/RedoActionHandler nits</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1. they don't set the DisabledImageDescriptor</Line>
          <Line>2. they don't set the tool tip text to describe the undo/redo about to be performed</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The UndoActionHandler and RedoActionHandler have some small nits.  These come up
when setting the handlers for undo/redo actions on the toolbar.

1. they don't set the DisabledImageDescriptor
2. they don't set the tool tip text to describe the undo/redo about to be performed

The second one is really an OperationHistoryActionHandler nit, I guess.
Fixed &gt;20051010
When disabled, the tooltip for Undo/Redo will be Can't Xxxx.  When enabled, 
the tooltip is the description for the command (without the shortened text).
The fix looks great.  Thanks Susan.

reopening for verification in M3 test pass.
marking fixed so I can verify  ;-)
verified on I20051101-1204 through visual code inspection.
Reporter also verified bug per comment #2.</WithStack>
    <WithOutStack>The UndoActionHandler and RedoActionHandler have some small nits.  These come up
when setting the handlers for undo/redo actions on the toolbar.

1. they don't set the DisabledImageDescriptor
2. they don't set the tool tip text to describe the undo/redo about to be performed

The second one is really an OperationHistoryActionHandler nit, I guess.
Fixed &gt;20051010
When disabled, the tooltip for Undo/Redo will be Can't Xxxx.  When enabled, 
the tooltip is the description for the command (without the shortened text).
The fix looks great.  Thanks Susan.

reopening for verification in M3 test pass.
marking fixed so I can verify  ;-)
verified on I20051101-1204 through visual code inspection.
Reporter also verified bug per comment #2.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110077" />
    <CreationDate amount="2005-09-20 14:39:00 -0400" />
    <DupId amount="110070" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="wst.wsdl" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Need new WSDL validation performance test case</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>We need an additional JUnit test case that will measure WSDL validation 
performance at a project level. This test case will perform WSDL validation at 
the Eclipse project level.


*** This bug has been marked as a duplicate of 110070 ***
Closing this duplicate defect.</WithStack>
    <WithOutStack>We need an additional JUnit test case that will measure WSDL validation 
performance at a project level. This test case will perform WSDL validation at 
the Eclipse project level.


*** This bug has been marked as a duplicate of 110070 ***
Closing this duplicate defect.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110078" />
    <CreationDate amount="2005-09-20 14:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>acclerator conflict in breakpoint import</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050920

* The accelerator for "From file" and "Finish" in the import wizard page 
conflict. 'F' is reserved for the finish button.
Created attachment 27309
fix

changed the accelerator key binding
please verify Darin
Applied 
Verified.</WithStack>
    <WithOutStack>I20050920

* The accelerator for "From file" and "Finish" in the import wizard page 
conflict. 'F' is reserved for the finish button.
Created attachment 27309
fix

changed the accelerator key binding
please verify Darin
Applied 
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110079" />
    <CreationDate amount="2005-09-20 14:45:00 -0400" />
    <DupId amount="5779" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>debugging within a single line should indicate which part of expression is executing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>in the java debugger, if you have a line of source code such as

foo(a.bar(b.baz(), c.qux()), d.quux())

then as each subexpression is evaluated, highlighting a single line to 
indicate execution location is not sufficient to determine whats going on

it would be great if their was some visual indicator as to which part of the 
line was about to be executed as you step through the code
This is not supported by the Java class file debug attributes. You can however 
select a part of an expression and use the "Step into selection" action in the 
Run or context menu to step into the method that is selected.

*** This bug has been marked as a duplicate of 5779 ***</WithStack>
    <WithOutStack>in the java debugger, if you have a line of source code such as

foo(a.bar(b.baz(), c.qux()), d.quux())

then as each subexpression is evaluated, highlighting a single line to 
indicate execution location is not sufficient to determine whats going on

it would be great if their was some visual indicator as to which part of the 
line was about to be executed as you step through the code
This is not supported by the Java class file debug attributes. You can however 
select a part of an expression and use the "Step into selection" action in the 
Run or context menu to step into the method that is selected.

*** This bug has been marked as a duplicate of 5779 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110080" />
    <CreationDate amount="2005-09-20 14:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>breakpoint import updates breakpoint view for each breakpoint</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20050920

The breakpoints view appears to update for each individual breakpoint that is 
imported. Each gets added/selected as it is imported. The import operation is 
a single workspace runnable, so I'm not sure why this happens. It would be 
better to batch the updates and have the breakpoints view update once.
Created attachment 28286
patch for BreakpointManager

this patch file is for the BreakpointManager
Created attachment 28287
patch for ImportOperation

this is the other required patch for the ImportOperation
please verify Darin
Applied patch to ImportOperation. Did not change breakpoint manager to use 
HashSet, as there did not seem to be a need for it.

Removed unused constant IImportExportConstants.METHOD_NAME.
Verified.</WithStack>
    <WithOutStack>I20050920

The breakpoints view appears to update for each individual breakpoint that is 
imported. Each gets added/selected as it is imported. The import operation is 
a single workspace runnable, so I'm not sure why this happens. It would be 
better to batch the updates and have the breakpoints view update once.
Created attachment 28286
patch for BreakpointManager

this patch file is for the BreakpointManager
Created attachment 28287
patch for ImportOperation

this is the other required patch for the ImportOperation
please verify Darin
Applied patch to ImportOperation. Did not change breakpoint manager to use 
HashSet, as there did not seem to be a need for it.

Removed unused constant IImportExportConstants.METHOD_NAME.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110081" />
    <CreationDate amount="2005-09-20 14:50:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Process has delayed update when target shows terminated</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I20050920

Debug a java app with no breakpoints (an app that exits quickly, like Hello 
World). The target appears as &lt;terminated&gt; and the process remains running for 
a couple seconds before it shows as &lt;terminated&gt;.
Appears to be a delay in Process.waitFor() (in RuntimeProcess.run()). I.e. we don't get notified of the process termination immediately.
Closing.
can't fix</WithStack>
    <WithOutStack>I20050920

Debug a java app with no breakpoints (an app that exits quickly, like Hello 
World). The target appears as &lt;terminated&gt; and the process remains running for 
a couple seconds before it shows as &lt;terminated&gt;.
Appears to be a delay in Process.waitFor() (in RuntimeProcess.run()). I.e. we don't get notified of the process termination immediately.
Closing.
can't fix</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110082" />
    <CreationDate amount="2005-09-20 15:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[compiler] Increase compiler performance for "Remove superfluous NLS strings" warnings</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Since v_601 we got around 15% performance regression on test
FullSourceWorkspaceASTTests#testDomAstCreationJLS2

After tracking down what happens, it appears that it was a side effect of fix
for bug 48976. COMPILER_PB_NON_NLS_STRING_LITERAL compiler setting was wrongly
still activated after running FullSourceWorkspaceBuildTests test suite and
increase DOM/AST parse time for Parser.java as there were 334 reported warnings.
I will profile this code.
I need to see where we can speed up the detection.
Created attachment 27348
Proposed improvement

This should improve slightly the performance.
I'll try to confirm your assumption with our performance tests results as soon
as I can...
Fixed and released in HEAD.
No regression tests.
Verified for 3.2 M3 using build I20051025-0800: performance test
FullSourceWorkspaceASTTests#testDomAstCreationJLS2 is now correct</WithStack>
    <WithOutStack>Since v_601 we got around 15% performance regression on test
FullSourceWorkspaceASTTests#testDomAstCreationJLS2

After tracking down what happens, it appears that it was a side effect of fix
for bug 48976. COMPILER_PB_NON_NLS_STRING_LITERAL compiler setting was wrongly
still activated after running FullSourceWorkspaceBuildTests test suite and
increase DOM/AST parse time for Parser.java as there were 334 reported warnings.
I will profile this code.
I need to see where we can speed up the detection.
Created attachment 27348
Proposed improvement

This should improve slightly the performance.
I'll try to confirm your assumption with our performance tests results as soon
as I can...
Fixed and released in HEAD.
No regression tests.
Verified for 3.2 M3 using build I20051025-0800: performance test
FullSourceWorkspaceASTTests#testDomAstCreationJLS2 is now correct</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110083" />
    <CreationDate amount="2005-09-20 15:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Team Synchronize does not honor Ignore White Space for Blank Lines</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When performing Team-&gt;Synchronize with Repository, the Synchronize panel 
displays files that have no differences other than additional or removed blank 
lines even if Ignore White Space is selected as a compare option.  When 
opening these files in the Compare editor, no changes are identified.  Team 
Synchronize should honor Ignore White Space in the same way the Compare Editor 
does and ignore additional or missing blank lines.
This is intentional. The CVS workspace synchronization state shown in the 
synchronize view shows the CVS synchronization state which is based on 
Timestamps (i.e file contents are not considered). For files whose timestamps 
differ but do not contain outgoing changes, there is a Clean Timestamps 
operation available from the context menu in the synchronize view. The 
timstamps will also be corrcted if you perform a Team/Update on the project.</WithStack>
    <WithOutStack>When performing Team-&gt;Synchronize with Repository, the Synchronize panel 
displays files that have no differences other than additional or removed blank 
lines even if Ignore White Space is selected as a compare option.  When 
opening these files in the Compare editor, no changes are identified.  Team 
Synchronize should honor Ignore White Space in the same way the Compare Editor 
does and ignore additional or missing blank lines.
This is intentional. The CVS workspace synchronization state shown in the 
synchronize view shows the CVS synchronization state which is based on 
Timestamps (i.e file contents are not considered). For files whose timestamps 
differ but do not contain outgoing changes, there is a Clean Timestamps 
operation available from the context menu in the synchronize view. The 
timstamps will also be corrcted if you perform a Team/Update on the project.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110084" />
    <CreationDate amount="2005-09-20 15:21:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="wst.wsdl" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>WSDL validator does not correctly handle default namespace</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>I have an xsd that defines a complexType that is not part of a target namespace.
When I try to reference this type from an inlined WSDL &lt;schema&gt; section the
WSDL validator incorrectly assumes that the default namespace is the wsdl
schema namespace and tries to resolve my complexType as if it were part of the
wsdl namespace. This results in an error marker being posted on the wsdl 
resource.

The wsdl and xsd files that illustrate the problem are attached to the defect.
Created attachment 27310
complexType w/o targetNamespace
Created attachment 27311
wsdl referencing the type
Fixed. This fix will be in WTP M9.
This bug is being moved to the "closed" state since it has been in the fixed state for a so long it is being assumed fixed, without explicit verification from the originator. If there is still a problem, in the most recent 1.5.x builds, please reopen or open another bug.</WithStack>
    <WithOutStack>I have an xsd that defines a complexType that is not part of a target namespace.
When I try to reference this type from an inlined WSDL &lt;schema&gt; section the
WSDL validator incorrectly assumes that the default namespace is the wsdl
schema namespace and tries to resolve my complexType as if it were part of the
wsdl namespace. This results in an error marker being posted on the wsdl 
resource.

The wsdl and xsd files that illustrate the problem are attached to the defect.
Created attachment 27310
complexType w/o targetNamespace
Created attachment 27311
wsdl referencing the type
Fixed. This fix will be in WTP M9.
This bug is being moved to the "closed" state since it has been in the fixed state for a so long it is being assumed fixed, without explicit verification from the originator. If there is still a problem, in the most recent 1.5.x builds, please reopen or open another bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110085" />
    <CreationDate amount="2005-09-20 15:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[DnD] Different feedback with mouse vs keyboard moves</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>If you use the menu/arrow leys to move a view/editor/stack the tracking rect 
doesn't 'snap' to the sides by changing to show the eventual drop location (but 
he cursor does change).

I'll handle this in the new DnD feedback...</WithStack>
    <WithOutStack>If you use the menu/arrow leys to move a view/editor/stack the tracking rect 
doesn't 'snap' to the sides by changing to show the eventual drop location (but 
he cursor does change).

I'll handle this in the new DnD feedback...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110086" />
    <CreationDate amount="2005-09-20 15:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="minor" />
    <Summery>[wording] Dialog when unchanged file got deleted could be improved</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>If you create a link to a file "C:\Temp\foo.txt" then it opens in the editor 
area. If you subsequently delete the file from the operating system you get a 
prompt "The file has been deleted from the file system. Do you want to save 
your changes or close the editor without saving?".

This message is somewhat misleading, I haven't made any changes. How about:

"The file has been deleted from the file system. Do you want to save to a new 
file or close the editor without saving?".
Moving bugs to new Platform/IDE component.
Moving to Platform Text.
This is unrelated to linked files. We always show that message when the file got deleted.

Your suggestion sounds good but it might not be 100% clear what gets saved in case where the file got changed in the editor. I could separate the two cases but that seems overkill.

Do you have another suggestion?</WithStack>
    <WithOutStack>If you create a link to a file "C:\Temp\foo.txt" then it opens in the editor 
area. If you subsequently delete the file from the operating system you get a 
prompt "The file has been deleted from the file system. Do you want to save 
your changes or close the editor without saving?".

This message is somewhat misleading, I haven't made any changes. How about:

"The file has been deleted from the file system. Do you want to save to a new 
file or close the editor without saving?".
Moving bugs to new Platform/IDE component.
Moving to Platform Text.
This is unrelated to linked files. We always show that message when the file got deleted.

Your suggestion sounds good but it might not be 100% clear what gets saved in case where the file got changed in the editor. I could separate the two cases but that seems overkill.

Do you have another suggestion?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110087" />
    <CreationDate amount="2005-09-20 15:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="IDE" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Markers] "Filters" menu doesn't remember the last selected filter</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When I was playing with this it was a true pain. I'd change somes ettings to 
see what effect it had and then re-open the dialog to try some other settings I 
had to re-select my filter (it selects the first one always)...
Fixed in build &gt;20071023
Verified in I20071029-0100</WithStack>
    <WithOutStack>When I was playing with this it was a true pain. I'd change somes ettings to 
see what effect it had and then re-open the dialog to try some other settings I 
had to re-select my filter (it selects the first one always)...
Fixed in build &gt;20071023
Verified in I20071029-0100</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110088" />
    <CreationDate amount="2005-09-20 15:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Import/Export] import existing project (from directory) test seems to have unexpected side effect</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>If you run the import existing project test (to import from a directory), then 
refresh the tests plugin project afterward, a .class file appears to be 
rebuilt.  This should not happen.
As part of the "import" in WizardProjectsImportPage.createExistingProject() we 
call project.open().  In the javadoc for this method it states: "This method 
changes resources".  This is likely why we see this side effect.  
This problem no longer occurs because this test has changed since this bug was first reported.  The test used to import java and .class files from a directory in the tests project. This was not the right thing to do.  Now the files are stored in a zip and extracted to a temp directory as part of the setup of the test.</WithStack>
    <WithOutStack>If you run the import existing project test (to import from a directory), then 
refresh the tests plugin project afterward, a .class file appears to be 
rebuilt.  This should not happen.
As part of the "import" in WizardProjectsImportPage.createExistingProject() we 
call project.open().  In the javadoc for this method it states: "This method 
changes resources".  This is likely why we see this side effect.  
This problem no longer occurs because this test has changed since this bug was first reported.  The test used to import java and .class files from a directory in the tests project. This was not the right thing to do.  Now the files are stored in a zip and extracted to a temp directory as part of the setup of the test.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110089" />
    <CreationDate amount="2005-09-20 15:51:00 -0400" />
    <DupId amount="60717" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Themes] Colors and Fonts preference page needs 'preview'</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Currently only the 'Folders' category provides a preview. We should create a 
default preview that shows at least what the current font would look like for 
those entries that are actual fonts.

Extra bonus points for providing a preview that, for color properties 
(eg. "Error text color") that would show the combination of the font that would 
be used for the error text combined with the chosen color.


*** This bug has been marked as a duplicate of 60717 ***</WithStack>
    <WithOutStack>Currently only the 'Folders' category provides a preview. We should create a 
default preview that shows at least what the current font would look like for 
those entries that are actual fonts.

Extra bonus points for providing a preview that, for color properties 
(eg. "Error text color") that would show the combination of the font that would 
be used for the error text combined with the chosen color.


*** This bug has been marked as a duplicate of 60717 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110090" />
    <CreationDate amount="2005-09-20 15:54:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Releng" />
    <component amount="releng" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Port the performance scripts to the new WTP build infrastructure</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Port the performance scripts to the new WTP build infrastructure
Fixed.
Closing bug.</WithStack>
    <WithOutStack>Port the performance scripts to the new WTP build infrastructure
Fixed.
Closing bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110091" />
    <CreationDate amount="2005-09-20 15:55:00 -0400" />
    <DupId amount="22712" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Have an option to visualize tabs in all text modes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Some IDEs have an option to visualize tabs; eclipse appears not to (I've tried
both 3.1.0 direct from eclipse.org, and the 3.1.0 GCJ packages from Red Hat)

I'd like to be able to see all tabs in all files, visualized as right-arrows.  

I'm currently working through a mess of python code that is formatted with a
mixture of spaces and tabs (ugh).  It would be very useful to be able to see
exactly what state things are in.  Between the various code reformatters, vim,
and emacs, I'm resorting to looking at the source code in a hexdump, which is
not fun.

I'm filing this against Platform-&gt;Text, rathe than just the python plugin since
I think this would make sense for all text modes (e.g. comparison views when
synchronizing with CVS and Subversion)


*** This bug has been marked as a duplicate of 22712 ***</WithStack>
    <WithOutStack>Some IDEs have an option to visualize tabs; eclipse appears not to (I've tried
both 3.1.0 direct from eclipse.org, and the 3.1.0 GCJ packages from Red Hat)

I'd like to be able to see all tabs in all files, visualized as right-arrows.  

I'm currently working through a mess of python code that is formatted with a
mixture of spaces and tabs (ugh).  It would be very useful to be able to see
exactly what state things are in.  Between the various code reformatters, vim,
and emacs, I'm resorting to looking at the source code in a hexdump, which is
not fun.

I'm filing this against Platform-&gt;Text, rathe than just the python plugin since
I think this would make sense for all text modes (e.g. comparison views when
synchronizing with CVS and Subversion)


*** This bug has been marked as a duplicate of 22712 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110092" />
    <CreationDate amount="2005-09-20 15:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[WorkbenchLauncher] Progress in splash cannot render in Chinese</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>20050920 using the 3.1.1 catalogs

When you start Eclipse in Chinese with Chinese catalogs (use -nl zh) the Chinese
word for loading is rendered as ??? which indicates that the widget cannot
support the glyph.
Assigning to SWT since this would have to be supported by the launcher.
... yet another reason the splash screen should be written in SWT.
Andrew, this one should be easy now that the splash is done with SWT.
I believe this has now been resolved.  Splash is now written in SWT.  
Closing.</WithStack>
    <WithOutStack>20050920 using the 3.1.1 catalogs

When you start Eclipse in Chinese with Chinese catalogs (use -nl zh) the Chinese
word for loading is rendered as ??? which indicates that the widget cannot
support the glyph.
Assigning to SWT since this would have to be supported by the launcher.
... yet another reason the splash screen should be written in SWT.
Andrew, this one should be easy now that the splash is done with SWT.
I believe this has now been resolved.  Splash is now written in SWT.  
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110093" />
    <CreationDate amount="2005-09-20 16:01:00 -0400" />
    <DupId amount="110095" />
    <classification amount="WebTools" />
    <Product amount="WTP Common Tools" />
    <component amount="wst.common" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Project explorer not initialized content provider not initialized</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Certain actions require the content provider of the project explorer to be 
propertly initialized before the project explorer is fully expanded.
ie. navigate from a diagram element to the project explorer location.

This is a major issue since the content provider is lazily initialized.
Exactly what initialization do you mean?
Don't understand why I'm listed as the reporter for this defect.  I didn't log 
this...
Looks like 110095 has the right originator.

*** This bug has been marked as a duplicate of 110095 ***
This bug was moved to 'closed' state, since it is so old is is assumed its dup, invalid, or worksforme resolution is no longer in qustion and the bugzilla needs no further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error in this case.</WithStack>
    <WithOutStack>Certain actions require the content provider of the project explorer to be 
propertly initialized before the project explorer is fully expanded.
ie. navigate from a diagram element to the project explorer location.

This is a major issue since the content provider is lazily initialized.
Exactly what initialization do you mean?
Don't understand why I'm listed as the reporter for this defect.  I didn't log 
this...
Looks like 110095 has the right originator.

*** This bug has been marked as a duplicate of 110095 ***
This bug was moved to 'closed' state, since it is so old is is assumed its dup, invalid, or worksforme resolution is no longer in qustion and the bugzilla needs no further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error in this case.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110094" />
    <CreationDate amount="2005-09-20 16:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[PropertiesView] Manual component test fails to update outline view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>During the 3.2 M2 testing with the "Manual component tests" for the property 
view; see...

"http://dev.eclipse.org/viewcvs/index.cgi/~checkout~/org.eclipse.ui.tests/Manual
%20Component%20Tests/PropertiesView.txt"

The outline view does NOT change the name to match the new name entered through 
the Propety View.
*** Bug 114636 has been marked as a duplicate of this bug. ***

This is still happening as of the M4 testing...

I also can't seem to get the new values to show up even closing and re-opening the Outline view (regression?).

See also bug 73570...</WithStack>
    <WithOutStack>During the 3.2 M2 testing with the "Manual component tests" for the property 
view; see...

"http://dev.eclipse.org/viewcvs/index.cgi/~checkout~/org.eclipse.ui.tests/Manual
%20Component%20Tests/PropertiesView.txt"

The outline view does NOT change the name to match the new name entered through 
the Propety View.
*** Bug 114636 has been marked as a duplicate of this bug. ***

This is still happening as of the M4 testing...

I also can't seem to get the new values to show up even closing and re-opening the Outline view (regression?).

See also bug 73570...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110095" />
    <CreationDate amount="2005-09-20 16:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[CommonNavigator] Uninitialized content provider</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1. content portion of viewer not expanded (relevant providers not loaded)</Line>
          <Line>2. perform action to show in project explorer from another editor.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Certain actions require the content provider of the project explorer to be 
initialized before the explorer is expanded.
ie navigate to project explorer from diagram element
A usecase we are interested in supporting.

1. content portion of viewer not expanded (relevant providers not loaded)
2. perform action to show in project explorer from another editor.


Is it possible to have the relevant content providers initialized sooner.

*** Bug 110093 has been marked as a duplicate of this bug. ***
Can you elaborate on what you mean by "intiailized sooner"? This is a little
open ended ...

What specifically is the issue that you're having? Why does the timeframe of the
 initialization of the Content Provider have any bearing on showing content in
the navigator?
This problem is described in bugzilla 114940 Comment #2 third paragraph.  We 
wrap our content, so our content provider doesn't properly support getParent
().  Even if we cheat and add the correct enablement for the content provider 
selectAndReval() will still fail, since the orginal element is not in the tree.
The real issue here is the selectAndReveal functionality. The Common Navigator 
does not really support it for wrapped elements - it expects the caller 
(client code) to pass down the actual items displayed in the tree which can be 
challenging in case when the elements in the tree are really wrappers around 
the real semantic elements. I believe this is, to some degree, the topic of 
the Bug 114940.

One work around (that we use) is to have the caller ask the content provider 
to do the mapping. So, the caller has a bunch of semantic elements, calls the 
specific content provider and gets back the corresponding viewer elements that 
can now be used for selectAndReveal functionality. This work around has its 
own problems (like the unfortunate dependency between the selectAndReveal 
client to a specific content provider) but is better than nothing. That is the 
reason why we are interested in the timeframe of the initialization: the CN 
framework might think that the content provider does not need to be 
initialized yet but the selectAndReveal client is already asking for its 
services.

One way to solve this would obviously be not to use wrapping. However, that 
would create other problems for us, more serious than somewhat not functioning 
selectAndReveal.


Why not perform the unmapping before calling selectAndReveal? If its integral to
your model, does it really need to be done in the tree viewer? More
wrapping/unwrapping code in the Common Navigator means work for a case for a
single extension. If your content provider wraps content in a generic way, then
break out the logic to some other unit and wrap it before the call to
selectAndReveal(). Or make your content provider's enablement clause specify
your special wrapping object and update your getParent() method to be smart
enough to return the correct parent whether the input is wrapped or not wrapped? 

I'm just not convinced yet that forcing a call to map/unmap objects into every
Content Provider is justified here. Can you help me understand why it's required
to delegate to the content provider or tell me why you can't just wrap/unwrap
before the call to selectAndReveal()? It sounds like this is what you're doing
in your subclassed viewer -- why not just do it outside of the Common Navigator?

Bug 114940 is really more about the enablement clause matching before content is
contributed, and less about wrapped content. 

So let me try to explain why I haven't bought into your suggestion:

If a content provider handles some mapping layer; should the enablement clauses
specify the wrapping type(s)? If not, then you have call
ICustomContentProviderInterface.getMapping(inputChild) for each content
provider. Each content provider could return a different value; so then do you
select and reveal all of the returned elements? This also means aggressively
loading all extensions; something that we try hard not to do for performance
reasons. If you specify the wrapping type(s) in your enablement clauses, then
you still have to deal with the case where you get back multiple objects of
different types from different content providers. 

One thing that I might open up to debate though is selectAndReveal() checking if
the object is IAdaptable, and then getAdapter(IStructuredSelection.class). Then
I can offload this matching logic to the existing and well-tested semantics of
the adapter mechanism in Eclipse. It also gets around cases where multiple
people want to contribute mappings since the adapter mechanism only allows one
winner. This would only be effective for custom wrapping types. Adding an
IAdapterFactory for IResource to IStructuredSelection wouldn't make much sense
for instance, since everyone could potentially do it. But adding an
IAdapterFactory for IDuskosMappingObject to IStructuredSelection would work
pretty easily. Would this solve your problem?




I'm not sure what the final conclusion was on what functionality you required. Do you have a response for my last comment? 

The framework will not aggressively load extensions for this case. I'm open to working with you to come up with a solution, but the point in time where the content provider is initialized will continue to be the first time that a node is expanded which it describes in its &lt;triggerPoints /&gt; expression. 

Returning this bug as WONTFIX until some more detail can be provided around why setting the mapped version of the element does not work. 
This is really not a big issue for us. Rather, we think that it may be an issue for people providing generic "Select and reveal" functionality.

We do not have our own viewer - we are using what used to be Project Explorer in WTP. So, our mapping is not done by the viewer, it is really very similar to what you suggested. Basically, the client calls a utility class which maps the semantic object to a wrapper element used to represent the object in CN/PE. Then that object is used to call selectAndReveal(...) method. The utility is quite independent from CN/PE code and all our invocations of selectAndReveal(...) go through it.

That means all our client code works and selectAndReveal(...) behaves fine. The real problem is for people who generically iterate/display/use some content and provide "Select in CN/PE" functionality. They cannot be possibly expected to now about our utility and even less to actually depend on our code. The selectAndReveal(...) for them simply won't work.</WithStack>
    <WithOutStack>Certain actions require the content provider of the project explorer to be 
initialized before the explorer is expanded.
ie navigate to project explorer from diagram element
A usecase we are interested in supporting.

1. content portion of viewer not expanded (relevant providers not loaded)
2. perform action to show in project explorer from another editor.


Is it possible to have the relevant content providers initialized sooner.

*** Bug 110093 has been marked as a duplicate of this bug. ***
Can you elaborate on what you mean by "intiailized sooner"? This is a little
open ended ...

What specifically is the issue that you're having? Why does the timeframe of the
 initialization of the Content Provider have any bearing on showing content in
the navigator?
This problem is described in bugzilla 114940 Comment #2 third paragraph.  We 
wrap our content, so our content provider doesn't properly support getParent
().  Even if we cheat and add the correct enablement for the content provider 
selectAndReval() will still fail, since the orginal element is not in the tree.
The real issue here is the selectAndReveal functionality. The Common Navigator 
does not really support it for wrapped elements - it expects the caller 
(client code) to pass down the actual items displayed in the tree which can be 
challenging in case when the elements in the tree are really wrappers around 
the real semantic elements. I believe this is, to some degree, the topic of 
the Bug 114940.

One work around (that we use) is to have the caller ask the content provider 
to do the mapping. So, the caller has a bunch of semantic elements, calls the 
specific content provider and gets back the corresponding viewer elements that 
can now be used for selectAndReveal functionality. This work around has its 
own problems (like the unfortunate dependency between the selectAndReveal 
client to a specific content provider) but is better than nothing. That is the 
reason why we are interested in the timeframe of the initialization: the CN 
framework might think that the content provider does not need to be 
initialized yet but the selectAndReveal client is already asking for its 
services.

One way to solve this would obviously be not to use wrapping. However, that 
would create other problems for us, more serious than somewhat not functioning 
selectAndReveal.


Why not perform the unmapping before calling selectAndReveal? If its integral to
your model, does it really need to be done in the tree viewer? More
wrapping/unwrapping code in the Common Navigator means work for a case for a
single extension. If your content provider wraps content in a generic way, then
break out the logic to some other unit and wrap it before the call to
selectAndReveal(). Or make your content provider's enablement clause specify
your special wrapping object and update your getParent() method to be smart
enough to return the correct parent whether the input is wrapped or not wrapped? 

I'm just not convinced yet that forcing a call to map/unmap objects into every
Content Provider is justified here. Can you help me understand why it's required
to delegate to the content provider or tell me why you can't just wrap/unwrap
before the call to selectAndReveal()? It sounds like this is what you're doing
in your subclassed viewer -- why not just do it outside of the Common Navigator?

Bug 114940 is really more about the enablement clause matching before content is
contributed, and less about wrapped content. 

So let me try to explain why I haven't bought into your suggestion:

If a content provider handles some mapping layer; should the enablement clauses
specify the wrapping type(s)? If not, then you have call
ICustomContentProviderInterface.getMapping(inputChild) for each content
provider. Each content provider could return a different value; so then do you
select and reveal all of the returned elements? This also means aggressively
loading all extensions; something that we try hard not to do for performance
reasons. If you specify the wrapping type(s) in your enablement clauses, then
you still have to deal with the case where you get back multiple objects of
different types from different content providers. 

One thing that I might open up to debate though is selectAndReveal() checking if
the object is IAdaptable, and then getAdapter(IStructuredSelection.class). Then
I can offload this matching logic to the existing and well-tested semantics of
the adapter mechanism in Eclipse. It also gets around cases where multiple
people want to contribute mappings since the adapter mechanism only allows one
winner. This would only be effective for custom wrapping types. Adding an
IAdapterFactory for IResource to IStructuredSelection wouldn't make much sense
for instance, since everyone could potentially do it. But adding an
IAdapterFactory for IDuskosMappingObject to IStructuredSelection would work
pretty easily. Would this solve your problem?




I'm not sure what the final conclusion was on what functionality you required. Do you have a response for my last comment? 

The framework will not aggressively load extensions for this case. I'm open to working with you to come up with a solution, but the point in time where the content provider is initialized will continue to be the first time that a node is expanded which it describes in its &lt;triggerPoints /&gt; expression. 

Returning this bug as WONTFIX until some more detail can be provided around why setting the mapped version of the element does not work. 
This is really not a big issue for us. Rather, we think that it may be an issue for people providing generic "Select and reveal" functionality.

We do not have our own viewer - we are using what used to be Project Explorer in WTP. So, our mapping is not done by the viewer, it is really very similar to what you suggested. Basically, the client calls a utility class which maps the semantic object to a wrapper element used to represent the object in CN/PE. Then that object is used to call selectAndReveal(...) method. The utility is quite independent from CN/PE code and all our invocations of selectAndReveal(...) go through it.

That means all our client code works and selectAndReveal(...) behaves fine. The real problem is for people who generically iterate/display/use some content and provide "Select in CN/PE" functionality. They cannot be possibly expected to now about our utility and even less to actually depend on our code. The selectAndReveal(...) for them simply won't work.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110096" />
    <CreationDate amount="2005-09-20 16:06:00 -0400" />
    <DupId amount="78388" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[DnD] Dragging a file over to an editor opens an editor where current editor has focus, not where it was dragged</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Eclipse 3.2 M1

Start Eclipse.
Open a file e.g. Browser.java
Open a second file, e.g. SWT.java
Drag SWT.java editor below so that both Browser.java and SWT.java editors are 
visible. Give focus to the editor showing SWT.java
Drag a third file (e.g. OS.java) from the package explorer over to the editor 
showing Browser.java. OS.java opens up in the CTabfolder that contains 
SWT.java as opposed to the expected CTabfolder containing  Browser.java.


*** This bug has been marked as a duplicate of bug 78388 ***</WithStack>
    <WithOutStack>Eclipse 3.2 M1

Start Eclipse.
Open a file e.g. Browser.java
Open a second file, e.g. SWT.java
Drag SWT.java editor below so that both Browser.java and SWT.java editors are 
visible. Give focus to the editor showing SWT.java
Drag a third file (e.g. OS.java) from the package explorer over to the editor 
showing Browser.java. OS.java opens up in the CTabfolder that contains 
SWT.java as opposed to the expected CTabfolder containing  Browser.java.


*** This bug has been marked as a duplicate of bug 78388 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110097" />
    <CreationDate amount="2005-09-20 16:07:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="jst.jsp" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Can't find .tld files by filename</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>An oversight on my part fixing bug 87487 left the fix halfway committed.  The
code that builds the CMDocument which exposes information about the custom tag
library was checked in and released, but the changes to correctly represent the
.tld file weren't.  The JSP validators as well as in-editor custom taglib
support are broken as a result for .tld files referenced by their filename of
from the web.xml file.
Created attachment 27312
patch for JSP ProjectDescription class

This patch updates the ProjectDescription class as originally intended.
I can verify that the patch fixes my problems:
validation and Taglib support, that is, custom tags declaring variables
Fix committed to HEAD and released for the Milestone build.
Verified in 1.0rc4 that entries from web.xml work.</WithStack>
    <WithOutStack>An oversight on my part fixing bug 87487 left the fix halfway committed.  The
code that builds the CMDocument which exposes information about the custom tag
library was checked in and released, but the changes to correctly represent the
.tld file weren't.  The JSP validators as well as in-editor custom taglib
support are broken as a result for .tld files referenced by their filename of
from the web.xml file.
Created attachment 27312
patch for JSP ProjectDescription class

This patch updates the ProjectDescription class as originally intended.
I can verify that the patch fixes my problems:
validation and Taglib support, that is, custom tags declaring variables
Fix committed to HEAD and released for the Milestone build.
Verified in 1.0rc4 that entries from web.xml work.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110098" />
    <CreationDate amount="2005-09-20 16:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Workbench] Configurable startup behaviour</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Need system property and/or commandline arguments for:
* splash screen: on/off, or replace the default one with a customized one
* welcome screen: on/off
* perspective: set to a specific perspective
I believe you can do all of these things already via a combination of preference overrides.  MvM?
yes you can do all of these
The options needed are: 

-nosplash command line option
-to provide your own splash you place the image in your product extension point
-to hide the intro use the showIntro preference in your plugincustomization.ini file
-to set a perspective use org.eclipse.ui/defaultPerspectiveId</WithStack>
    <WithOutStack>Need system property and/or commandline arguments for:
* splash screen: on/off, or replace the default one with a customized one
* welcome screen: on/off
* perspective: set to a specific perspective
I believe you can do all of these things already via a combination of preference overrides.  MvM?
yes you can do all of these
The options needed are: 

-nosplash command line option
-to provide your own splash you place the image in your product extension point
-to hide the intro use the showIntro preference in your plugincustomization.ini file
-to set a perspective use org.eclipse.ui/defaultPerspectiveId</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110099" />
    <CreationDate amount="2005-09-20 16:32:00 -0400" />
    <DupId amount="41331" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Show Editors fails after resource history is viewed.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Select a file with change history. 

Team -&gt; Edit.
Team -&gt; Show Resource History.
Open one of the earlier versions of the file.
Team -&gt; Show Editors.

No editors are listed.


*** This bug has been marked as a duplicate of 41331 ***</WithStack>
    <WithOutStack>Select a file with change history. 

Team -&gt; Edit.
Team -&gt; Show Resource History.
Open one of the earlier versions of the file.
Team -&gt; Show Editors.

No editors are listed.


*** This bug has been marked as a duplicate of 41331 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110100" />
    <CreationDate amount="2005-09-20 16:36:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[view management] Automatically opened views don't close when debugging ends</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Found during M2 manual testing. The bug was found by doing the following:

I modified a Java Perspective to include the Debug view. I then closed that
debug view which was added. I ran the debugger on some code and hit a
breakpoint. The added debug view opened as it is supposed to. The debugging
finished, the program closed, but the view didn’t close with it. 
Repeated attempts with the same view and different views produced the same result.
Gary, there is an option on the view management pref page for "Do not 
automatically open/close views that have been manually closed/opened". When 
you uncheck this option (and reset), does this test still fail?
(In reply to comment #1)
&gt; Gary, there is an option on the view management pref page for "Do not 
&gt; automatically open/close views that have been manually closed/opened". When 
&gt; you uncheck this option (and reset), does this test still fail?

Darin, I have indeed tested with the setting on and off, with a restart of
Eclipse in between to ensure proper configuration. The same effect happens
either way. The program stops at the debug point and opens the debug view, I
resume, debugging finishes - but the views which it opened for doing debug
remain open. This happens with the "Do not automatically open/close views that
have been manually closed/opened" enabled and disabled.
*** Bug 119484 has been marked as a duplicate of this bug. ***
addressed by bug 124203
Fixed.
Please verify, Samantha
Verified with I20060214-0010.</WithStack>
    <WithOutStack>Found during M2 manual testing. The bug was found by doing the following:

I modified a Java Perspective to include the Debug view. I then closed that
debug view which was added. I ran the debugger on some code and hit a
breakpoint. The added debug view opened as it is supposed to. The debugging
finished, the program closed, but the view didn’t close with it. 
Repeated attempts with the same view and different views produced the same result.
Gary, there is an option on the view management pref page for "Do not 
automatically open/close views that have been manually closed/opened". When 
you uncheck this option (and reset), does this test still fail?
(In reply to comment #1)
&gt; Gary, there is an option on the view management pref page for "Do not 
&gt; automatically open/close views that have been manually closed/opened". When 
&gt; you uncheck this option (and reset), does this test still fail?

Darin, I have indeed tested with the setting on and off, with a restart of
Eclipse in between to ensure proper configuration. The same effect happens
either way. The program stops at the debug point and opens the debug view, I
resume, debugging finishes - but the views which it opened for doing debug
remain open. This happens with the "Do not automatically open/close views that
have been manually closed/opened" enabled and disabled.
*** Bug 119484 has been marked as a duplicate of this bug. ***
addressed by bug 124203
Fixed.
Please verify, Samantha
Verified with I20060214-0010.</WithOutStack>
  </Bug>
</infozilla-output>

