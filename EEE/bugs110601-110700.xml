<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="110601" />
    <CreationDate amount="2005-09-26 10:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Profiling" />
    <component amount="Platform.UI.Charting" />
    <Version amount="future" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Support multiple scales on charts/graphs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>1. Scaling factors. Pick a narrow ranging data set, plot it, then add scaling</Line>
          <Line>factors to any that don't fit well in that range. Use scaling factors in</Line>
          <Line>multiples of 10; find the one that fits best. For example, if you have CPU %</Line>
          <Line>usage from 0 to 100, and memory availability in bytes, you could use the range</Line>
          <Line>0-100 for the Y axis, and plot memory availability in, say, tens of millions, so</Line>
          <Line>a point at 50 means you have half a gigabyte free. The legend should display</Line>
          <Line>the scaling factor.</Line>
          <Line />
          <Line>2. Multiple Y-axes. Try to group the data sets by range, and for each group, add</Line>
          <Line>a Y-axis the encompasses the entire range of the group. There has to be an easy</Line>
          <Line>way to tell which data is plotted on which axis.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>For any chart/graph that can show multiple sets of data overlayed (for example,
a line graph with two axes), the ranges of the data sets can vary greatly. That
is, one can be in the 1-5 range, while the other is in the -1,000,000 to
+1,000,000 range. We need the graphs to support multiple scales on the graphs,
such that it can display many wide ranges of data on the same graph.

I can suggest two ways of doing this:

1. Scaling factors. Pick a narrow ranging data set, plot it, then add scaling
factors to any that don't fit well in that range. Use scaling factors in
multiples of 10; find the one that fits best. For example, if you have CPU %
usage from 0 to 100, and memory availability in bytes, you could use the range
0-100 for the Y axis, and plot memory availability in, say, tens of millions, so
 a point at 50 means you have half a gigabyte free. The legend should display
the scaling factor.

2. Multiple Y-axes. Try to group the data sets by range, and for each group, add
a Y-axis the encompasses the entire range of the group. There has to be an easy
way to tell which data is plotted on which axis.

I prefer #1.
This is not a simple problem.  I'm not sure if the first solution works for all 
cases.  What if I have one dataset that has values in the range -1 to 0 and I 
have another dataset that has a range from 50,000 to 100,000.  What should the 
axis range be?  Should I have a range between -1 to 100,000?  Scaling the axis 
would not help in this case since the position of the zero axis will not change 
since I'm only applying a scaling factor change.

The best solution is to associate a dataset with it's own axis.  However the 
problem is useablity.  If I have 10 dataset associated with different axis how 
will the end-user know which dataset applies to which axis.  

One idea is to allow the user to interact with the graph so that it displays 
the axis range.  If the user clicks on the dataset in the plot area (or on the 
legend item that represents the dataset) it should make the axis scale visibile 
for that dataset.  Basically the axis values will change depending on which 
dataset is selected in the plot area.  If no data set is selected a default 
scale is shown.  

Is this feature required for both the SWT or SVG renderer?  The work doubles 
since we have to provide support for both renderers.   Also what chart types 
does should this apply to (i.e. bar charts, line charts, area charts, etc.)  As 
you can see providing this support for various chart types can get quite huge.  
Right now I would consider a line graph (that has capability to update itself in
real-time as we collect data).  I'd be thinking of an SWT view in Eclipse.  SVG
may be over the edge at this time.  I would focus on getting the scaling down first.

The data pools we're looking at are all positive values, so we didn't consider
negative values.  We do need a general solution, however, how many users out
there will use it for plotting negative values at this time? or in the near
future?  (Just thinking out loud here).

We're also looking for "good" defaults so that our users don't need to be
snapping all the axis manually.  They can just begin some data collection and it
will show.
Adding Eric to the cc list since he's the developer for the SWT charting 
service.
I believe the "good" default value should be a range that ecompasses all the 
datasets.   

I'm just concerned that what is "good" for one application is not "good" for 
another application.  I want to avoid creating application specific 
requirements in the chart engine.  
Having one range that encompasses all data sets is no good for the case where 
the ranges vary extremely. For example, take CPU usage in percentage, and 
memory usage in bytes, one has 0-100 and the other 0-&lt;some very big number&gt;. If 
you plot these together on a single scale, the CPU usage will be a flat line at 
the bottom and it will be useless.

This kind of variance in the ranges will be very common for us, and needs to be 
handled properly by default.
This only pertains to the default axis range.  If the other datasets are 
associated with another axis they will not be plotted in the default scale 
range.  I'm creating a design description doc that should show some screen shot 
and clarify the design points.
Created attachment 29457
Description document for this feature

Eric, could your review this document and provide any feedback.  Also change
the sizing in the document to the appropriate value.
Created attachment 29458
screen shot for description document
Created attachment 29459
screen shot for description document
Created attachment 29460
screen shot for description document
You may have answered this, but how will the person reading the graph know the 
units of the axis?   I see in your example it only shows "Megabytes".  What if 
I have graph that shows CPU Load % and memory usage (MBs).  How will this be 
conveyed to the user?
On each axis you can either format the axis labels to show the units or you can 
add an axis label that conveys the units.  The sample mock-ups I created 
doesn't show this.  But this is currently supported.
Changed version to "future" as it is included in the plan for 4.2. 
Changing target to future since this is an enhancement for BIRT.  This enhancement is used as a tracker to make sure these requirements are added to the BIRT chart engine.
reassigning owner to new reporting component owner.
Reassigning to the Project Lead until a new Component Lead is found.
Closing this request because it is old and there are no resources are active committers on this component.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>For any chart/graph that can show multiple sets of data overlayed (for example,
a line graph with two axes), the ranges of the data sets can vary greatly. That
is, one can be in the 1-5 range, while the other is in the -1,000,000 to
+1,000,000 range. We need the graphs to support multiple scales on the graphs,
such that it can display many wide ranges of data on the same graph.

I can suggest two ways of doing this:

1. Scaling factors. Pick a narrow ranging data set, plot it, then add scaling
factors to any that don't fit well in that range. Use scaling factors in
multiples of 10; find the one that fits best. For example, if you have CPU %
usage from 0 to 100, and memory availability in bytes, you could use the range
0-100 for the Y axis, and plot memory availability in, say, tens of millions, so
 a point at 50 means you have half a gigabyte free. The legend should display
the scaling factor.

2. Multiple Y-axes. Try to group the data sets by range, and for each group, add
a Y-axis the encompasses the entire range of the group. There has to be an easy
way to tell which data is plotted on which axis.

I prefer #1.
This is not a simple problem.  I'm not sure if the first solution works for all 
cases.  What if I have one dataset that has values in the range -1 to 0 and I 
have another dataset that has a range from 50,000 to 100,000.  What should the 
axis range be?  Should I have a range between -1 to 100,000?  Scaling the axis 
would not help in this case since the position of the zero axis will not change 
since I'm only applying a scaling factor change.

The best solution is to associate a dataset with it's own axis.  However the 
problem is useablity.  If I have 10 dataset associated with different axis how 
will the end-user know which dataset applies to which axis.  

One idea is to allow the user to interact with the graph so that it displays 
the axis range.  If the user clicks on the dataset in the plot area (or on the 
legend item that represents the dataset) it should make the axis scale visibile 
for that dataset.  Basically the axis values will change depending on which 
dataset is selected in the plot area.  If no data set is selected a default 
scale is shown.  

Is this feature required for both the SWT or SVG renderer?  The work doubles 
since we have to provide support for both renderers.   Also what chart types 
does should this apply to (i.e. bar charts, line charts, area charts, etc.)  As 
you can see providing this support for various chart types can get quite huge.  
Right now I would consider a line graph (that has capability to update itself in
real-time as we collect data).  I'd be thinking of an SWT view in Eclipse.  SVG
may be over the edge at this time.  I would focus on getting the scaling down first.

The data pools we're looking at are all positive values, so we didn't consider
negative values.  We do need a general solution, however, how many users out
there will use it for plotting negative values at this time? or in the near
future?  (Just thinking out loud here).

We're also looking for "good" defaults so that our users don't need to be
snapping all the axis manually.  They can just begin some data collection and it
will show.
Adding Eric to the cc list since he's the developer for the SWT charting 
service.
I believe the "good" default value should be a range that ecompasses all the 
datasets.   

I'm just concerned that what is "good" for one application is not "good" for 
another application.  I want to avoid creating application specific 
requirements in the chart engine.  
Having one range that encompasses all data sets is no good for the case where 
the ranges vary extremely. For example, take CPU usage in percentage, and 
memory usage in bytes, one has 0-100 and the other 0-&lt;some very big number&gt;. If 
you plot these together on a single scale, the CPU usage will be a flat line at 
the bottom and it will be useless.

This kind of variance in the ranges will be very common for us, and needs to be 
handled properly by default.
This only pertains to the default axis range.  If the other datasets are 
associated with another axis they will not be plotted in the default scale 
range.  I'm creating a design description doc that should show some screen shot 
and clarify the design points.
Created attachment 29457
Description document for this feature

Eric, could your review this document and provide any feedback.  Also change
the sizing in the document to the appropriate value.
Created attachment 29458
screen shot for description document
Created attachment 29459
screen shot for description document
Created attachment 29460
screen shot for description document
You may have answered this, but how will the person reading the graph know the 
units of the axis?   I see in your example it only shows "Megabytes".  What if 
I have graph that shows CPU Load % and memory usage (MBs).  How will this be 
conveyed to the user?
On each axis you can either format the axis labels to show the units or you can 
add an axis label that conveys the units.  The sample mock-ups I created 
doesn't show this.  But this is currently supported.
Changed version to "future" as it is included in the plan for 4.2. 
Changing target to future since this is an enhancement for BIRT.  This enhancement is used as a tracker to make sure these requirements are added to the BIRT chart engine.
reassigning owner to new reporting component owner.
Reassigning to the Project Lead until a new Component Lead is found.
Closing this request because it is old and there are no resources are active committers on this component.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110602" />
    <CreationDate amount="2005-09-26 10:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[EditorMgmt] Expose EditorRegistry, FileEditorMapping as API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Currently, IEditorRegistry and IFileEditorMapping interfaces do not expose all
the functionality that is required for adding new file types to eclipse
programmatically. The implementation classes are needed in most situations where
file type mapping changes has to be made.
For instance, EditorRegistry.setFileEditorMapping() method is not exposed by the
IEditorRegistry interface. Also, this method takes FileEditorMapping[] array
which is not exposed.

Eclipse should expose the EditorRegistry.setFileEditorMapping() method as an API
and also make FileEditorMapping class external.
Another important method in EditorRegistry is the saveAssociations() which
should be exposed to serialize the changes made to the FileEditorMappings
Doug, I'm poking around in here now but doing this was not part of my plans...
I was wondering if this would be fixed as part of 3.2? I would like to avoid using internal APIs completely and there doesnt seem to be another way of modifying file types.
What's the status of this? I'd also definitely like to see this become API. Our project for language-specific IDE support (SAFARI) uses a single editor to service several languages, with various services contributed via extensions to SAFARI extension points.

I only see two ways of implementing this: (1) pretend that our editor is the default editor by using the ID org.eclipse.ui.DefaultTextEditor (this is obviously bad), or (2) have it register itself as the default editor for each file-name extension that it finds in the contributed SAFARI plugin extensions (much more desirable, this is what we do now).

The latter solution requires everything that was mentioned in the original post.

Also, many/all of FileEditorMapping's methods (e.g. setDefaultEditor()) talk in terms of EditorDescriptor rather than IEditorDescriptor, but none of their implementations seem to need an EditorDescriptor in particular. So, I think all the various method signatures should be changed to use IEditorDescriptor.
This will not be addressed for 3.2 but there is talk of revisiting the editor API in the next release.
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.
my project also need such functionality that dynamically change the default editor according to the perspective. is there any update ? I don't think this two APIs is exposed in indigo release.</WithStack>
    <WithOutStack>Currently, IEditorRegistry and IFileEditorMapping interfaces do not expose all
the functionality that is required for adding new file types to eclipse
programmatically. The implementation classes are needed in most situations where
file type mapping changes has to be made.
For instance, EditorRegistry.setFileEditorMapping() method is not exposed by the
IEditorRegistry interface. Also, this method takes FileEditorMapping[] array
which is not exposed.

Eclipse should expose the EditorRegistry.setFileEditorMapping() method as an API
and also make FileEditorMapping class external.
Another important method in EditorRegistry is the saveAssociations() which
should be exposed to serialize the changes made to the FileEditorMappings
Doug, I'm poking around in here now but doing this was not part of my plans...
I was wondering if this would be fixed as part of 3.2? I would like to avoid using internal APIs completely and there doesnt seem to be another way of modifying file types.
What's the status of this? I'd also definitely like to see this become API. Our project for language-specific IDE support (SAFARI) uses a single editor to service several languages, with various services contributed via extensions to SAFARI extension points.

I only see two ways of implementing this: (1) pretend that our editor is the default editor by using the ID org.eclipse.ui.DefaultTextEditor (this is obviously bad), or (2) have it register itself as the default editor for each file-name extension that it finds in the contributed SAFARI plugin extensions (much more desirable, this is what we do now).

The latter solution requires everything that was mentioned in the original post.

Also, many/all of FileEditorMapping's methods (e.g. setDefaultEditor()) talk in terms of EditorDescriptor rather than IEditorDescriptor, but none of their implementations seem to need an EditorDescriptor in particular. So, I think all the various method signatures should be changed to use IEditorDescriptor.
This will not be addressed for 3.2 but there is talk of revisiting the editor API in the next release.
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.
my project also need such functionality that dynamically change the default editor according to the perspective. is there any update ? I don't think this two APIs is exposed in indigo release.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110603" />
    <CreationDate amount="2005-09-26 10:55:00 -0400" />
    <DupId amount="107009" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>wrong font used in About &gt; Configuration Details dialog?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Some Chinese characters are not displaying correctly in the About Dialog's 
Configuration Details dialog (I will attach a pic).
Steps:
*Help &gt; About Eclipse SDK
*Click Configuration Details button
garbage characters are displayed (see pic)
If you scroll a bit over halfway down you will see more incorrectly rendered 
characters.
Is this because the wrong font is being used?  (It's different than the font 
used in the plugins and features dialogs)?
Created attachment 27515
About &gt; Configuration Details dialog
Testing 3.1.1 20050923-1430 running in simplified chinese, using NLpack1-
eclipse-SDK-M20050816-1400-win32.zip catalogs.
This could very well be an nl build problem - same problem as bug 107009 but 
for other locales.  Awaiting latest catalog build.
This is fixed in the 0923 catalog builds

*** This bug has been marked as a duplicate of 107009 ***</WithStack>
    <WithOutStack>Some Chinese characters are not displaying correctly in the About Dialog's 
Configuration Details dialog (I will attach a pic).
Steps:
*Help &gt; About Eclipse SDK
*Click Configuration Details button
garbage characters are displayed (see pic)
If you scroll a bit over halfway down you will see more incorrectly rendered 
characters.
Is this because the wrong font is being used?  (It's different than the font 
used in the plugins and features dialogs)?
Created attachment 27515
About &gt; Configuration Details dialog
Testing 3.1.1 20050923-1430 running in simplified chinese, using NLpack1-
eclipse-SDK-M20050816-1400-win32.zip catalogs.
This could very well be an nl build problem - same problem as bug 107009 but 
for other locales.  Awaiting latest catalog build.
This is fixed in the 0923 catalog builds

*** This bug has been marked as a duplicate of 107009 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110604" />
    <CreationDate amount="2005-09-26 10:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Resource Monitoring" />
    <component amount="Platform.UI.StatsPerfViewers" />
    <Version amount="future" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Difficult to find the view to change line color, etc</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Users have difficulty figuring out how to change, for example, the color of a
line in the statistical view. They look around in the graph view but cannot find
it. Eventually, they find the Statistical Graph Summaries view, but it takes
time and causes confusion.

I do like the way the views have been split up. I think we just have to make it
more straightforward for the user to bring them up. Perhaps what we can do is
combine the action for opening the 3 views into one action, so that when you
open it, it will automatically open the 3 views; the graph on top and the two
others below it, just like the problems view appears below the java editors in
the java perspective. However, this would be inconsistent with the other
open-with actions.

Any thoughts, Wayne or anyone else?
Batch update of all TPTP platform enhancements that are not part of 4.2 approved plan. Set version to "future" and target milestone to "--". 
The affected code is no longer supported by the commiter community and all change requests are being closed. If you are impacted or feel strongly otherwise, please reopen the bugzilla with comments and suggestions for follow up action.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Users have difficulty figuring out how to change, for example, the color of a
line in the statistical view. They look around in the graph view but cannot find
it. Eventually, they find the Statistical Graph Summaries view, but it takes
time and causes confusion.

I do like the way the views have been split up. I think we just have to make it
more straightforward for the user to bring them up. Perhaps what we can do is
combine the action for opening the 3 views into one action, so that when you
open it, it will automatically open the 3 views; the graph on top and the two
others below it, just like the problems view appears below the java editors in
the java perspective. However, this would be inconsistent with the other
open-with actions.

Any thoughts, Wayne or anyone else?
Batch update of all TPTP platform enhancements that are not part of 4.2 approved plan. Set version to "future" and target milestone to "--". 
The affected code is no longer supported by the commiter community and all change requests are being closed. If you are impacted or feel strongly otherwise, please reopen the bugzilla with comments and suggestions for follow up action.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110605" />
    <CreationDate amount="2005-09-26 11:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Tooling" />
    <component amount="Core" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ResizableComparmentEditPolicy doesn't get the compartment figure properly for ResizableCompartmentEditPart</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This is related to bug 109645  

Attached a patch to fix this problem.
Created attachment 27516
resizableCompartmentEditPolicy.patch

Added instanceof to check for ResizeCompartmentEditPart, and if it is true, use
the getCompartmentFigure() method to get the compartment.
Created attachment 27517
resizableCompartmentEditPolicy.patch

The previous patch wasn't complete. There is another area of this class that
doesn't properly get the compartment figure.
The essence of the patch looks good.  I extracted the logic into a private 
method that does the instance checking.  #getCompartmentFigure().  This is 
then reused by the showSelection / hideSelection and getResizeChildrenRequest 
methods.
Fixed ClassCastException issue in ResizableCompartmentEditPolicy to check for 
ResizableCompartmentEditPart and use api #getCompartmentFigure() to get 
ResizableCompartmentFigure.  Code modified from patch by Mindaugas.
[GMF Restructure] Bug 319140 : product GMF and component
UI was the original product and component for this bug</WithStack>
    <WithOutStack>This is related to bug 109645  

Attached a patch to fix this problem.
Created attachment 27516
resizableCompartmentEditPolicy.patch

Added instanceof to check for ResizeCompartmentEditPart, and if it is true, use
the getCompartmentFigure() method to get the compartment.
Created attachment 27517
resizableCompartmentEditPolicy.patch

The previous patch wasn't complete. There is another area of this class that
doesn't properly get the compartment figure.
The essence of the patch looks good.  I extracted the logic into a private 
method that does the instance checking.  #getCompartmentFigure().  This is 
then reused by the showSelection / hideSelection and getResizeChildrenRequest 
methods.
Fixed ClassCastException issue in ResizableCompartmentEditPolicy to check for 
ResizableCompartmentEditPart and use api #getCompartmentFigure() to get 
ResizableCompartmentFigure.  Code modified from patch by Mindaugas.
[GMF Restructure] Bug 319140 : product GMF and component
UI was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110606" />
    <CreationDate amount="2005-09-26 11:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Implementors of addSelectionListener don't check for duplicates</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="multicomment">
        <location start="12" end="102" />
        <code>/**
 * @see ISelectionProvider#addSelectionChangedListener
(ISelectionChangedListener)
 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="103" end="217" />
        <code>public void addSelectionChangedListener(ISelectionChangedListener listener) {
	selectionListeners.add(listener);
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1081" end="1101" />
        <code>x.addListener(l);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1102" end="1125" />
        <code>x.removeListener(l);</code>
      </source_code>
      <source_code type="assignment">
        <location start="3413" end="3434" />
        <code>int enabledCount = 0;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3435" end="3524" />
        <code>setEnabled(boolean value) {
  if (value)
    enabledCount--;
  else
    enabledCount++;
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3526" end="3593" />
        <code>handleEvent() {
  if (enabledCount &gt; 0)
    return;
  //body here
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="16">
        <Lines>
          <Line>a.stoplistening()</Line>
          <Line>...</Line>
          <Line>a.startlistening()</Line>
          <Line>This was done in more methods m1, m2, ... and problem was that some mi has  called some mj:</Line>
          <Line>so mi realy did</Line>
          <Line>a.stoplistening()</Line>
          <Line>...</Line>
          <Line>a.stoplistening()       &gt;</Line>
          <Line>...                     &gt;&gt; mj code</Line>
          <Line>a.startlistening()      &gt;</Line>
          <Line>...</Line>
          <Line>a.startlistening()</Line>
          <Line>--------------------------</Line>
          <Line>I think both solution: duplicates, not duplicates listeners are OK.</Line>
          <Line>But if you implement some interface method by name but with different method semantics, in every such case write new semantics in method's javadoc (or force author of interface to change interface method's javadoc)and maybe use some bold font - this wasn't done and it was problem(bug).</Line>
          <Line>When I study some method's semantics, I read method javadoc, super method javadoc, super super ..., but I don't read how others implementors understand that semantics. Why to read javadoc for such obvious interface? Because javadoc is "holy" for me and it is not such obvious namespace: org.eclipse. ... .</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hi. Method 
/**
 * @see ISelectionProvider#addSelectionChangedListener
(ISelectionChangedListener)
 */
public void addSelectionChangedListener(ISelectionChangedListener listener) {
	selectionListeners.add(listener);
}
doesn't implements correctly ISelectionProvider#addSelectionChangedListener 
because registers listener if an identical listener is already registered.
A quick look at implementers of this method and you'll find that in reality no 
one is honoring this contract. The interface's javadoc should be changed to 
reflect this.

Hmmm, I disagree. The contract represents the proper implementation and those implementors of the contract should adhere to it (even it it's us...;-).

Not going to happen for 3.2 but something to look at for 3.3 cleanup work.

There's the actual contract, and the implied (by method name) contract. Almost all java APIs allow duplicate listeners. I doubt clients read the javadoc, since most are familiar with the listener pattern.

There are two reasons to allow duplicates.  Performance: No check is required. And "symmetry", the code:
   x.addListener(l);
   x.removeListener(l);
always finishes in the same state it started.

AFAIK, the only reason to not allow multiple adds is to guard against poorly written code.

Randy, BTW most of the implementations use 'ListenerList' which is 'add safe' (adds of dups are trapped in an override of 'add'.).

Also, while it's correct to say that culling duplicate 'adds' wouldn't be necessary except for badly written code there's a second side-effect: you gett a callback for -each- registered listener (which is likely how most people findout that they've added two)....and we get 'badly written code' contributed fairly often...;-).


My first comment may now/might have always been invalid since most are using the utility listener list. I probably saw the method body and assumed the list was java.util.List. (But, pre-3.2, there were many listener list implementations and some might not have checked for dupes)
When I found this "bug", I had some strange problem, probably because of bad coding: 
object a as default listened to object b
but in some situation it needed to stop listening for a while, so I've used inverse symetry 
a.stoplistening()
...
a.startlistening()
This was done in more methods m1, m2, ... and problem was that some mi has  called some mj:
so mi realy did
a.stoplistening()
...
a.stoplistening()       &gt;
...                     &gt;&gt; mj code
a.startlistening()      &gt;
...
a.startlistening()
--------------------------
I think both solution: duplicates, not duplicates listeners are OK.
But if you implement some interface method by name but with different method semantics, in every such case write new semantics in method's javadoc (or force author of interface to change interface method's javadoc)and maybe use some bold font - this wasn't done and it was problem(bug). 
When I study some method's semantics, I read method javadoc, super method javadoc, super super ..., but I don't read how others implementors understand that semantics. Why to read javadoc for such obvious interface? Because javadoc is "holy" for me and it is not such obvious namespace: org.eclipse. ... .  

Tomas Studva
As a recommendation for your code, if you have to disable listening in multiple places, or in a recursive or reentrant way, I recommend you disable your listener instead of removing it:

MyListener {

int enabledCount = 0;
setEnabled(boolean value) {
  if (value)
    enabledCount--;
  else
    enabledCount++;
}

handleEvent() {
  if (enabledCount &gt; 0)
    return;
  //body here
}

}

Regardless of which way GEF maintains listeners, the calls:

remove
  remove
  add
add

will not work as you want them to.  Using either implementation, you will be listening again after the first "add" call, when you don't want to resume listening until after the second add.
Yes, you are right, removing listener wasn't OK. In future I will use this patern.
Thanx   
Changing to RESOLVE WONTFIX based on the above comments.
Reporter to re-open with more information if enhancement is still required.</WithStack>
    <WithOutStack>Hi. Method 
/**
 * @see ISelectionProvider#addSelectionChangedListener
(ISelectionChangedListener)
 */
public void addSelectionChangedListener(ISelectionChangedListener listener) {
	selectionListeners.add(listener);
}
doesn't implements correctly ISelectionProvider#addSelectionChangedListener 
because registers listener if an identical listener is already registered.
A quick look at implementers of this method and you'll find that in reality no 
one is honoring this contract. The interface's javadoc should be changed to 
reflect this.

Hmmm, I disagree. The contract represents the proper implementation and those implementors of the contract should adhere to it (even it it's us...;-).

Not going to happen for 3.2 but something to look at for 3.3 cleanup work.

There's the actual contract, and the implied (by method name) contract. Almost all java APIs allow duplicate listeners. I doubt clients read the javadoc, since most are familiar with the listener pattern.

There are two reasons to allow duplicates.  Performance: No check is required. And "symmetry", the code:
   x.addListener(l);
   x.removeListener(l);
always finishes in the same state it started.

AFAIK, the only reason to not allow multiple adds is to guard against poorly written code.

Randy, BTW most of the implementations use 'ListenerList' which is 'add safe' (adds of dups are trapped in an override of 'add'.).

Also, while it's correct to say that culling duplicate 'adds' wouldn't be necessary except for badly written code there's a second side-effect: you gett a callback for -each- registered listener (which is likely how most people findout that they've added two)....and we get 'badly written code' contributed fairly often...;-).


My first comment may now/might have always been invalid since most are using the utility listener list. I probably saw the method body and assumed the list was java.util.List. (But, pre-3.2, there were many listener list implementations and some might not have checked for dupes)
When I found this "bug", I had some strange problem, probably because of bad coding: 
object a as default listened to object b
but in some situation it needed to stop listening for a while, so I've used inverse symetry 
a.stoplistening()
...
a.startlistening()
This was done in more methods m1, m2, ... and problem was that some mi has  called some mj:
so mi realy did
a.stoplistening()
...
a.stoplistening()       &gt;
...                     &gt;&gt; mj code
a.startlistening()      &gt;
...
a.startlistening()
--------------------------
I think both solution: duplicates, not duplicates listeners are OK.
But if you implement some interface method by name but with different method semantics, in every such case write new semantics in method's javadoc (or force author of interface to change interface method's javadoc)and maybe use some bold font - this wasn't done and it was problem(bug). 
When I study some method's semantics, I read method javadoc, super method javadoc, super super ..., but I don't read how others implementors understand that semantics. Why to read javadoc for such obvious interface? Because javadoc is "holy" for me and it is not such obvious namespace: org.eclipse. ... .  

Tomas Studva
As a recommendation for your code, if you have to disable listening in multiple places, or in a recursive or reentrant way, I recommend you disable your listener instead of removing it:

MyListener {

int enabledCount = 0;
setEnabled(boolean value) {
  if (value)
    enabledCount--;
  else
    enabledCount++;
}

handleEvent() {
  if (enabledCount &gt; 0)
    return;
  //body here
}

}

Regardless of which way GEF maintains listeners, the calls:

remove
  remove
  add
add

will not work as you want them to.  Using either implementation, you will be listening again after the first "add" call, when you don't want to resume listening until after the second add.
Yes, you are right, removing listener wasn't OK. In future I will use this patern.
Thanx   
Changing to RESOLVE WONTFIX based on the above comments.
Reporter to re-open with more information if enhancement is still required.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110607" />
    <CreationDate amount="2005-09-26 11:04:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="PTP" />
    <component amount="Core" />
    <Version amount="unspecified" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Job View - Remove All Terminated (popup) leaves the set selector frame on the right full</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Run a job, watch it in the job view.  Terminate it.  Right click to bring up the popup, click remove all 
terminated jobs.  The job list clears of all jobs that are done.  This is correct.

However, it leaves on the right frame the previously selected job's process grid - but that job is 
now gone.
Thanks for informing me the bug.  I have fixed.  Now the job view will be
deselected after clicked on "remove all terminated jobs".

(In reply to comment #0)
&gt; Run a job, watch it in the job view.  Terminate it.  Right click to bring up
the popup, click remove all 
&gt; terminated jobs.  The job list clears of all jobs that are done.  This is correct.
&gt; 
&gt; However, it leaves on the right frame the previously selected job's process
grid - but that job is 
&gt; now gone.


fixed</WithStack>
    <WithOutStack>Run a job, watch it in the job view.  Terminate it.  Right click to bring up the popup, click remove all 
terminated jobs.  The job list clears of all jobs that are done.  This is correct.

However, it leaves on the right frame the previously selected job's process grid - but that job is 
now gone.
Thanks for informing me the bug.  I have fixed.  Now the job view will be
deselected after clicked on "remove all terminated jobs".

(In reply to comment #0)
&gt; Run a job, watch it in the job view.  Terminate it.  Right click to bring up
the popup, click remove all 
&gt; terminated jobs.  The job list clears of all jobs that are done.  This is correct.
&gt; 
&gt; However, it leaves on the right frame the previously selected job's process
grid - but that job is 
&gt; now gone.


fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110608" />
    <CreationDate amount="2005-09-26 11:06:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="jst.ws" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Port Axis commands to use EnvironmentalOperation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Port Axis commands to use EnvironmentalOperation and change the signature of 
the execute.
Changes committed but not released yet.
Released as v20050927_1715.  
Done and tested in 09/30 I-build.</WithStack>
    <WithOutStack>Port Axis commands to use EnvironmentalOperation and change the signature of 
the execute.
Changes committed but not released yet.
Released as v20050927_1715.  
Done and tested in 09/30 I-build.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110609" />
    <CreationDate amount="2005-09-26 11:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Intense flashing when resizing left bound of ControlExample</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- Download eclipse.org.swt.examples project</Line>
          <Line>- Run Control example as SWT application</Line>
          <Line>- drag the left top corner to resize the window. An intense flashing is</Line>
          <Line>noticed. This same feature was tested a week ago and it wasn't flashing.</Line>
          <Line>Known problem</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Version: 3.1.0
Build id: I20050920-0010
- Download eclipse.org.swt.examples project
- Run Control example as SWT application
- drag the left top corner to resize the window. An intense flashing is 
noticed. This same feature was tested a week ago and it wasn't flashing.
Known problem</WithStack>
    <WithOutStack>Version: 3.1.0
Build id: I20050920-0010
- Download eclipse.org.swt.examples project
- Run Control example as SWT application
- drag the left top corner to resize the window. An intense flashing is 
noticed. This same feature was tested a week ago and it wasn't flashing.
Known problem</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110610" />
    <CreationDate amount="2005-09-26 11:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Resource Monitoring" />
    <component amount="Platform.UI.StatsPerfViewers" />
    <Version amount="future" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Statistical data sets</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>We would like to have the notion of a statistical data set or configuration in
the  TPTP. A set contains a collection of counters from any number of machines.
This is useful when the user has several environments they wish to monitor, and
wish to switch back and forth. For example, user may want to monitor CPU on one
set of machines, then switch to monitoring the memory and disk on another set.
But everytime they switch, they do not want to have to re-do the entire
configuration. They would just create two sets, then select the set they want to
use.

So once I've set up my set, I should be able to click on Profile and it will
automatically start monitoring all the counters I selected on all the machines.
This is the exact same idea as log analysis - see the log import wizard which
has log sets. The two should be consistent with each other.

The data structure for storing the contents of a set should be API so that
anyone can create one and use it, and it should not be bound to a particular
agent. I should be able to create a set that monitors one machine with one
agent, and monitors a different machine with an entirely different agent, so it
should be left open to plugging in any agents, or any other data collection
mechanism. The set should not be storing only the counter descriptor IDs to
identify a counter, as some agents can send different IDs after being restarted.

If you contribute a UI for creating a set up-front, the UI should not be
specific to a particular agent, and should be open-ended enough and API to be
reused by anyone extending TPTP and contributing a new data collection
agent/mechanism.

Hope this is clear; if you have any questions or need clarification, let me know.
Curtis, although I like the idea of preset/dynamically build counters
configurations, you need to understand that SDCounterDescriptors (those of which
name will be in the configuration set) are dynamically build and in most cases
they would differ from session to session or agent type to agent type, so a
statically defined configuration set would be partially applicable and this has
to be clearly presented to the user.

In addition to such mechanism I would also like to see a filtering/selection
capability at Agent Control view level, which should allow the user to quickly
enable/disable the counters.
For the majority of the statistical agents, the counter descriptor ids that are
generated are completely system dependent. For instance, objects in the perfmon
object (the root nodes in the control tree) have objected ids that are dependent
on the number and order of the perfmon objects in a particular windows system. 

This is nearly impossible to predict, and so having counter templates that we
applied to new agents becomes a very difficult task. Also, this requires the
user to know the structure of the tree. This really is agent specific, and so to
perform it generically we need to ask the agents what their particular
settings/variables are. I cannot see the benefit of implementing such a feature
when the Agent Variable Interface would buy us much of this functionality, and
is inherently the correct way to do this.

We are plannig to provide some of this functionality though. The statistical
analysis editor part will support the import and removal of currently running
agents, where each editor will store its current statistical ui configuration.
This allows a set of agents, processes, nodes or monitors to each store their
own UI settings. Such settings might include which boxes are checked in the
graph summary view.For example, consider a single perfmon agent monitoring cpu
and memory. One statistical analysis might adjust the sliders and colours for
the memory statistics while filtering out all the CPU statistics. The second
might do the opposite, and filter out the memory statistics. The views adjust
according to the selection in the editor, so a user can easily switch between
the two (or more) states very simply. 

Marius, I agree that some form of filtering would be a good thing to have in the
 agent control view allowing the user to arbitrarily filter counters and then
switch the filtered subset on.
Changing priority to P2 for consuming IBM product, after discussing with Eric Labadie.
Batch update of all TPTP platform enhancements that are not part of 4.2 approved plan. Set version to "future" and target milestone to "--". 
The affected code is no longer supported by the commiter community and all change requests are being closed. If you are impacted or feel strongly otherwise, please reopen the bugzilla with comments and suggestions for follow up action.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>We would like to have the notion of a statistical data set or configuration in
the  TPTP. A set contains a collection of counters from any number of machines.
This is useful when the user has several environments they wish to monitor, and
wish to switch back and forth. For example, user may want to monitor CPU on one
set of machines, then switch to monitoring the memory and disk on another set.
But everytime they switch, they do not want to have to re-do the entire
configuration. They would just create two sets, then select the set they want to
use.

So once I've set up my set, I should be able to click on Profile and it will
automatically start monitoring all the counters I selected on all the machines.
This is the exact same idea as log analysis - see the log import wizard which
has log sets. The two should be consistent with each other.

The data structure for storing the contents of a set should be API so that
anyone can create one and use it, and it should not be bound to a particular
agent. I should be able to create a set that monitors one machine with one
agent, and monitors a different machine with an entirely different agent, so it
should be left open to plugging in any agents, or any other data collection
mechanism. The set should not be storing only the counter descriptor IDs to
identify a counter, as some agents can send different IDs after being restarted.

If you contribute a UI for creating a set up-front, the UI should not be
specific to a particular agent, and should be open-ended enough and API to be
reused by anyone extending TPTP and contributing a new data collection
agent/mechanism.

Hope this is clear; if you have any questions or need clarification, let me know.
Curtis, although I like the idea of preset/dynamically build counters
configurations, you need to understand that SDCounterDescriptors (those of which
name will be in the configuration set) are dynamically build and in most cases
they would differ from session to session or agent type to agent type, so a
statically defined configuration set would be partially applicable and this has
to be clearly presented to the user.

In addition to such mechanism I would also like to see a filtering/selection
capability at Agent Control view level, which should allow the user to quickly
enable/disable the counters.
For the majority of the statistical agents, the counter descriptor ids that are
generated are completely system dependent. For instance, objects in the perfmon
object (the root nodes in the control tree) have objected ids that are dependent
on the number and order of the perfmon objects in a particular windows system. 

This is nearly impossible to predict, and so having counter templates that we
applied to new agents becomes a very difficult task. Also, this requires the
user to know the structure of the tree. This really is agent specific, and so to
perform it generically we need to ask the agents what their particular
settings/variables are. I cannot see the benefit of implementing such a feature
when the Agent Variable Interface would buy us much of this functionality, and
is inherently the correct way to do this.

We are plannig to provide some of this functionality though. The statistical
analysis editor part will support the import and removal of currently running
agents, where each editor will store its current statistical ui configuration.
This allows a set of agents, processes, nodes or monitors to each store their
own UI settings. Such settings might include which boxes are checked in the
graph summary view.For example, consider a single perfmon agent monitoring cpu
and memory. One statistical analysis might adjust the sliders and colours for
the memory statistics while filtering out all the CPU statistics. The second
might do the opposite, and filter out the memory statistics. The views adjust
according to the selection in the editor, so a user can easily switch between
the two (or more) states very simply. 

Marius, I agree that some form of filtering would be a good thing to have in the
 agent control view allowing the user to arbitrarily filter counters and then
switch the filtered subset on.
Changing priority to P2 for consuming IBM product, after discussing with Eric Labadie.
Batch update of all TPTP platform enhancements that are not part of 4.2 approved plan. Set version to "future" and target milestone to "--". 
The affected code is no longer supported by the commiter community and all change requests are being closed. If you are impacted or feel strongly otherwise, please reopen the bugzilla with comments and suggestions for follow up action.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110611" />
    <CreationDate amount="2005-09-26 11:19:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Profiling" />
    <component amount="Platform.UI" />
    <Version amount="4.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Failed creating association without SWT jar in Portal Log Analyzer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330581645">
        <Exception>java.lang.NoClassDefFoundError</Exception>
        <Reason>org/eclipse/swt/SWTError</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.hyades.logc.internal.extensions.TimeBasedLogRecordCorrelationEngineImpl.correlate(TimeBasedLogRecordCorrelationEngineImpl.java:72)</Frame>
          <Frame depth="1">com.ibm.ac.lta.web.controller.service.associations.AssociationHelper.doAssocationXMI(AssociationHelper.java:94)</Frame>
          <Frame depth="2">com.ibm.ac.lta.web.controller.service.associations.AssociationHelper.doAssociation(AssociationHelper.java:271)</Frame>
          <Frame depth="3">com.ibm.ac.lta.web.controller.service.threads.AssociationThread.run(AssociationThread.java:74)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1.import apache access and error log</Line>
          <Line>2.create an association</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>This problem occur in Portal Log Analyzer
Steps to Reproduce:
1.import apache access and error log
2.create an association 


Actual Results:
Log Interactions view is empty

SystemErr.log
[9/20/05 17:11:05:531 EDT] 0000003a SystemErr     R 
java.lang.NoClassDefFoundError: org/eclipse/swt/SWTError
	at 
org.eclipse.hyades.logc.internal.extensions.TimeBasedLogRecordCorrelationEngineI
mpl.correlate(TimeBasedLogRecordCorrelationEngineImpl.java:72)
	at 
com.ibm.ac.lta.web.controller.service.associations.AssociationHelper.doAssocatio
nXMI(AssociationHelper.java:94)
	at 
com.ibm.ac.lta.web.controller.service.associations.AssociationHelper.doAssociati
on(AssociationHelper.java:271)
	at com.ibm.ac.lta.web.controller.service.threads.AssociationThread.run
(AssociationThread.java:74)

[9/20/05 17:11:05:541 EDT] 0000003a SystemErr     R 	at 
org.eclipse.hyades.logc.internal.extensions.TimeBasedLogRecordCorrelationEngineI
mpl.correlate(TimeBasedLogRecordCorrelationEngineImpl.java:72)
[9/20/05 17:11:05:541 EDT] 0000003a SystemErr     R 	at 
com.ibm.ac.lta.web.controller.service.associations.AssociationHelper.doAssocatio
nXMI(AssociationHelper.java:94)
[9/20/05 17:11:05:541 EDT] 0000003a SystemErr     R 	at 
com.ibm.ac.lta.web.controller.service.associations.AssociationHelper.doAssociati
on(AssociationHelper.java:271)
[9/20/05 17:11:05:541 EDT] 0000003a SystemErr     R 	at 
com.ibm.ac.lta.web.controller.service.threads.AssociationThread.run
(AssociationThread.java:74)

Only one call that make us to add this swt.jar in AC 4.0 Portal Log Analyzer.
This problem does not exist in AC 3.3 even without swt.jar.
This can be fixed and Alex had provided me with the fix which I had tested and 
work fine without adding this swt.jar.
This should be fixed in AC 4.0.1 (TPTP 4.0.1)fix pack in my opinion.

AC BUG : 7136
Update severity to normal; the originator agreed that this is not a stop ship 
issue for TPTP 4.0 and is okay to pick up the fix in TPTP 4.1
This defect has been opened for TPTP 4.0

The code has been changed on TPTP 4.1 so please reopen the defect once you can 
validate the problem on TPTP 4.1 base
INVALID</WithStack>
    <WithOutStack>This problem occur in Portal Log Analyzer
Steps to Reproduce:
1.import apache access and error log
2.create an association 


Actual Results:
Log Interactions view is empty

SystemErr.log
[9/20/05 17:11:05:531 EDT] 0000003a SystemErr     R 


[9/20/05 17:11:05:541 EDT] 0000003a SystemErr     R 	at 
org.eclipse.hyades.logc.internal.extensions.TimeBasedLogRecordCorrelationEngineI
mpl.correlate(TimeBasedLogRecordCorrelationEngineImpl.java:72)
[9/20/05 17:11:05:541 EDT] 0000003a SystemErr     R 	at 
com.ibm.ac.lta.web.controller.service.associations.AssociationHelper.doAssocatio
nXMI(AssociationHelper.java:94)
[9/20/05 17:11:05:541 EDT] 0000003a SystemErr     R 	at 
com.ibm.ac.lta.web.controller.service.associations.AssociationHelper.doAssociati
on(AssociationHelper.java:271)
[9/20/05 17:11:05:541 EDT] 0000003a SystemErr     R 	at 
com.ibm.ac.lta.web.controller.service.threads.AssociationThread.run
(AssociationThread.java:74)

Only one call that make us to add this swt.jar in AC 4.0 Portal Log Analyzer.
This problem does not exist in AC 3.3 even without swt.jar.
This can be fixed and Alex had provided me with the fix which I had tested and 
work fine without adding this swt.jar.
This should be fixed in AC 4.0.1 (TPTP 4.0.1)fix pack in my opinion.

AC BUG : 7136
Update severity to normal; the originator agreed that this is not a stop ship 
issue for TPTP 4.0 and is okay to pick up the fix in TPTP 4.1
This defect has been opened for TPTP 4.0

The code has been changed on TPTP 4.1 so please reopen the defect once you can 
validate the problem on TPTP 4.1 base
INVALID</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110612" />
    <CreationDate amount="2005-09-26 11:19:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[inline] Inline constant removes imports for parameterized types</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="package">
        <location start="50" end="60" />
        <code>package p;</code>
      </source_code>
      <source_code type="import">
        <location start="61" end="89" />
        <code>import java.util.ArrayList;</code>
      </source_code>
      <source_code type="import">
        <location start="90" end="112" />
        <code>import java.util.List;</code>
      </source_code>
      <source_code type="class">
        <location start="114" end="212" />
        <code>public class Foo {
	
	static final List&lt;String&gt; x = new ArrayList&lt;String&gt;();
	{
		x.clear();
	}

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>1. Have this file:</Line>
          <Line />
          <Line>---</Line>
          <Line />
          <Line />
          <Line />
          <Line />
          <Line />
          <Line>---</Line>
          <Line />
          <Line>2. Inline x.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Build id: I20050923-1000

1. Have this file:

---
package p;

import java.util.ArrayList;
import java.util.List;

public class Foo {
	
	static final List&lt;String&gt; x = new ArrayList&lt;String&gt;();
	{
		x.clear();
	}

}
---

2. Inline x.

Observe: Both imports have been removed.
'Delete constant declaration' needs to be enabled.</WithStack>
    <WithOutStack>Build id: I20050923-1000

1. Have this file:

---
package p;

import java.util.ArrayList;
import java.util.List;

public class Foo {
	
	static final List&lt;String&gt; x = new ArrayList&lt;String&gt;();
	{
		x.clear();
	}

}
---

2. Inline x.

Observe: Both imports have been removed.
'Delete constant declaration' needs to be enabled.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110613" />
    <CreationDate amount="2005-09-26 11:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5][compiler] Should not report warnings for nls string inside annotation declaration</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="import">
        <location start="97" end="127" />
        <code>import java.lang.annotation.*;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="384" end="415" />
        <code>String[] value() default {}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="384" end="416" />
        <code>String[] value() default {};</code>
      </source_code>
      <source_code type="functioncall">
        <location start="417" end="455" />
        <code>String justification() default "";</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>From bug 97220, the detection of nls warnings should not be done within
annotation declarations.
import java.lang.annotation.*;

@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD,
         ElementType.PARAMETER, ElementType.CONSTRUCTOR,
         ElementType.LOCAL_VARIABLE, ElementType.PACKAGE})
@Retention(RetentionPolicy.CLASS)
public @interface MySuppressWarnings
{
    String[] value() default {};
    String justification() default "";
}

The default value for justification should not be tagged as non-nls string.
We should consider only the range of each annotation type member declaration.
Fixed and released in HEAD.
Regression test in
org.eclipse.jdt.core.tests.compiler.regression.ExternalizeStringLiterals15Test.test001
Verified for 3.2 M3 using build I20051031-0010</WithStack>
    <WithOutStack>From bug 97220, the detection of nls warnings should not be done within
annotation declarations.
import java.lang.annotation.*;

@Target({ElementType.TYPE, ElementType.FIELD, ElementType.METHOD,
         ElementType.PARAMETER, ElementType.CONSTRUCTOR,
         ElementType.LOCAL_VARIABLE, ElementType.PACKAGE})
@Retention(RetentionPolicy.CLASS)
public @interface MySuppressWarnings
{
    String[] value() default {};
    String justification() default "";
}

The default value for justification should not be tagged as non-nls string.
We should consider only the range of each annotation type member declaration.
Fixed and released in HEAD.
Regression test in
org.eclipse.jdt.core.tests.compiler.regression.ExternalizeStringLiterals15Test.test001
Verified for 3.2 M3 using build I20051031-0010</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110614" />
    <CreationDate amount="2005-09-26 11:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Resource Monitoring" />
    <component amount="Platform.UI.StatsPerfViewers" />
    <Version amount="future" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Allow user to compensate for clock skew</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Currently the statistical UI allows the user to view data from any number of
machines, all overlayed on the same graph. This is useful for correlating data
across the machines. However, this usefulness ends when the clocks on the
machines are out of sync, because the graphs don't line up.

We need a way for the user to adjust this, and "shift" all the timestamps
forward or backward for a particular agent. It should not be on the host node
because an agent on one host can be collecting data from a remote machine. It
should not actually modify the timestamps in the model, but simply add a delta
on the agent, and the view must take that delta into account when plotting the data.

As far as how to do this, I leave it up to you, but this should be done
consistently across TPTP (it is already being done for logs and trace). Please
discuss this with the other component owners as the current way to do it is not
intuitive to users.

If it is possible to automate this task in any way, or help the user determine
the clock skew, this would be a great addition, even if it's not perfectly
accurate. It is a difficult task for users to find the exact skew on their
machines without proper tools.
In the design document, it reads: "This button will be responsible for adjusting the horizontal time offset for each agent so that the data is aligned to the current clock. " Later on it reads "The horizontal time offset for each counter will be adjusted to be the difference between the current workbench time and the last gathered data point time in the model. "

We would like to clarify these: We initially thought that the first statement meant you would be applying a single offset to all the counters in a given agent. The latter statement clarified this, but just to confirm: You are not applying a user-defined offset to all the counters in an agent, but rather applying an offset that's calculated on a per counter basis, correct? 

This leads to questions about how  the offset is calculated.  If you are adjusting every counter in such a  way that it's last data point appears at the current time, there are some issues:

- Suppose the last data point arrives with timestamp x1. This gets adjusted to be the current time on the workbench (say the offset is 'y'). Then the next data point comes in (now becoming the new 'last data point'), and the offset (for whatever reason) is different then y. This means readjusting the times of all the data points prior to the last data point. 

-&gt; It seems like you may have to readjust all the data points every time a new data point  comes in. Is this true? Won't this cause problems? 

- You also lose the relative differences between data collected by different counters. Have you considered allowing a user to apply fixed offsets to groups of counters? This would allow all the data to be shifted by a set amount and the relative differences don't get lost.  

Another major issue is: How will correlation between different views work after the user has shifted the graphs to the current time? (E.g., user should be able to link between the log view and the stats view based on time. The log view won't have its timestamps adjusted, so if a user right clicks and says go to stats view on a particular log message, will it go to the 'adjusted' time in the stats view or will it go to the time that's in the model? In the former case, this is wrong, in the latter case I can see the user being confused about why the stats view is taking it to a time that that UI shows as being different from that of what's written in the log view.)

The purpose of the offsets is to correlate statistical data in a single statistical view. These are no new issues for the statistical views (or for statcon for that matter).

Yes, we are applying an offset that is calculated on a per counter basis. There is no guarantee that the offset is correct (infact, it will almost certainly not be)- it will simply apply a horizontal shift to all data.

No, we will not calculate the offsets for every new data point. The offsets are instantaneous adjustments.

Currently, there is no concept of a relative or absolute shift and we see no real benefit to this. We might consider using a node based shift, much like the profiling views do, but we find this very unintuitive.

We will not alter model data or the way the data is presented to any other views.




*** Bug 108311 has been marked as a duplicate of this bug. ***
requested version changed to 'future'. This feature was not approved for 4.2 plan.
The affected code is no longer supported by the commiter community and all change requests are being closed. If you are impacted or feel strongly otherwise, please reopen the bugzilla with comments and suggestions for follow up action.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Currently the statistical UI allows the user to view data from any number of
machines, all overlayed on the same graph. This is useful for correlating data
across the machines. However, this usefulness ends when the clocks on the
machines are out of sync, because the graphs don't line up.

We need a way for the user to adjust this, and "shift" all the timestamps
forward or backward for a particular agent. It should not be on the host node
because an agent on one host can be collecting data from a remote machine. It
should not actually modify the timestamps in the model, but simply add a delta
on the agent, and the view must take that delta into account when plotting the data.

As far as how to do this, I leave it up to you, but this should be done
consistently across TPTP (it is already being done for logs and trace). Please
discuss this with the other component owners as the current way to do it is not
intuitive to users.

If it is possible to automate this task in any way, or help the user determine
the clock skew, this would be a great addition, even if it's not perfectly
accurate. It is a difficult task for users to find the exact skew on their
machines without proper tools.
In the design document, it reads: "This button will be responsible for adjusting the horizontal time offset for each agent so that the data is aligned to the current clock. " Later on it reads "The horizontal time offset for each counter will be adjusted to be the difference between the current workbench time and the last gathered data point time in the model. "

We would like to clarify these: We initially thought that the first statement meant you would be applying a single offset to all the counters in a given agent. The latter statement clarified this, but just to confirm: You are not applying a user-defined offset to all the counters in an agent, but rather applying an offset that's calculated on a per counter basis, correct? 

This leads to questions about how  the offset is calculated.  If you are adjusting every counter in such a  way that it's last data point appears at the current time, there are some issues:

- Suppose the last data point arrives with timestamp x1. This gets adjusted to be the current time on the workbench (say the offset is 'y'). Then the next data point comes in (now becoming the new 'last data point'), and the offset (for whatever reason) is different then y. This means readjusting the times of all the data points prior to the last data point. 

-&gt; It seems like you may have to readjust all the data points every time a new data point  comes in. Is this true? Won't this cause problems? 

- You also lose the relative differences between data collected by different counters. Have you considered allowing a user to apply fixed offsets to groups of counters? This would allow all the data to be shifted by a set amount and the relative differences don't get lost.  

Another major issue is: How will correlation between different views work after the user has shifted the graphs to the current time? (E.g., user should be able to link between the log view and the stats view based on time. The log view won't have its timestamps adjusted, so if a user right clicks and says go to stats view on a particular log message, will it go to the 'adjusted' time in the stats view or will it go to the time that's in the model? In the former case, this is wrong, in the latter case I can see the user being confused about why the stats view is taking it to a time that that UI shows as being different from that of what's written in the log view.)

The purpose of the offsets is to correlate statistical data in a single statistical view. These are no new issues for the statistical views (or for statcon for that matter).

Yes, we are applying an offset that is calculated on a per counter basis. There is no guarantee that the offset is correct (infact, it will almost certainly not be)- it will simply apply a horizontal shift to all data.

No, we will not calculate the offsets for every new data point. The offsets are instantaneous adjustments.

Currently, there is no concept of a relative or absolute shift and we see no real benefit to this. We might consider using a node based shift, much like the profiling views do, but we find this very unintuitive.

We will not alter model data or the way the data is presented to any other views.




*** Bug 108311 has been marked as a duplicate of this bug. ***
requested version changed to 'future'. This feature was not approved for 4.2 plan.
The affected code is no longer supported by the commiter community and all change requests are being closed. If you are impacted or feel strongly otherwise, please reopen the bugzilla with comments and suggestions for follow up action.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As such, TPTP is not delivering enhancements. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement is resolved as WONTFIX. For this enhancement to be considered, please re-open with an attached patch including the Description Document (see http://www.eclipse.org/tptp/home/documents/process/development/description_documents.html), code (see http://www.eclipse.org/tptp/home/documents/resources/TPTPDevGuide.htm), and test cases (see http://www.eclipse.org/tptp/home/documents/process/TPTP_Testing_Strategy.html).
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110615" />
    <CreationDate amount="2005-09-26 11:28:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="jst.jsp" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="critical" />
    <Summery>JSP Validator validates whole workspace instead of one project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="assignment">
        <location start="11453" end="11488" />
        <code>String[] uris = helper.getURIs();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>1. We really should only be being called as in your stack trace if there is a</Line>
          <Line>JSP in the project.  Tim ... are you * sure * there's no JSP's in there? If so,</Line>
          <Line>then wow, there is a bad bug somewhere.</Line>
          <Line />
          <Line>2. Once called, I see from the trace we might be causing/waiting for a Java</Line>
          <Line>Build to finish (we indirectly cause that to be triggered ... hopefully not</Line>
          <Line>*rebuilt* which would be a true bug, somewhere).  So, we might be simply getting</Line>
          <Line>the created for a Java Build. We'll have to investigate.</Line>
          <Line />
          <Line>3. Our validator does seem to be called twice. (when I simply do a "clean" on</Line>
          <Line>a project) ... not sure about other validators.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>A build started on a new J2EE Web project containing no JSP files. This happened
when I closed the web.xml DD editor without saving, although I presume this was
just a coincidence.

The validation of the project stalled on the JSP validator, and it stayed there
for over 30s before continuing to other validators. 30s for a JSP validator when
I don't have any JSP files yet seems a little excessive...
Problem happened again on the next Web project I created, and this time I
counted - the hang is closer to 60s.
Well, Tim, we are probably just making darn good and sure you really don't have
an JSP's in that project :) 

We'll take a look, but off hand suspect this isn't really JSP Validator ... it
might be the progress message? Where are you reading that from eactly? 

Step by step directions would ease things for me (I know, probably obvious to
you, but not to me). 

A few thread dumps during this excessive operations might help to debug quickly,
but I'd also like us to add some of the "performance blame" hooks into any code
with lots of participants, such as validators, so we can better track. 

Thanks. 

Steps were pretty straightforward - create a new Web project, watch the first
build. My guess on the reason you haven't seen this is either because of my
internet settings (I might have been disconnected at the time) or because I had
about 8 other small projects in the workspace.

I opened the defect here because the message in the Progress view (or in the
dialog when another operation is blocked) says "Validating using JSP Syntax...".
If the validator gives wrong progress messages and you can figure out who else
this would be, feel free to pass it on. :) However, the JSP validator does
appear to be on the stack trace below:

3XMTHREADINFO      "Worker-1" (TID:0x03348D00, sys_thread_t:0x0003604C,
state:CW, native ID:0x00000DA4) prio=5
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JarPackageFragmentRoot.computeChildren(JarPackageFragmentRoot.java:85)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/PackageFragmentRoot.buildStructure(PackageFragmentRoot.java:174)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/Openable.generateInfos(Openable.java:233)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JarPackageFragment.generateInfos(JarPackageFragment.java:113)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaElement.openWhenClosed(JavaElement.java:488)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaElement.getElementInfo(JavaElement.java:232)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaElement.getElementInfo(JavaElement.java:218)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaElement.getChildren(JavaElement.java:173)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaElement.getChildrenOfType(JavaElement.java:187)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JarPackageFragment.getClassFiles(JarPackageFragment.java:120)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/NameLookup.seekTypesInBinaryPackage(NameLookup.java:793)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/NameLookup.seekTypes(NameLookup.java:769)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/NameLookup.findType(NameLookup.java:542)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/NameLookup.findType(NameLookup.java:501)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/SearchableEnvironment.find(SearchableEnvironment.java:85)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/SearchableEnvironment.findType(SearchableEnvironment.java:188)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/CancelableNameEnvironment.findType(CancelableNameEnvironment.java:45)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.askForType(LookupEnvironment.java:119)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/lookup/PackageBinding.getTypeOrPackage(PackageBinding.java:178)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/lookup/Scope.getTypeOrPackage(Scope.java:2392)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/lookup/Scope.getType(Scope.java:2137)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.getTypeBinding(SingleTypeReference.java:39)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/TypeReference.resolveType(TypeReference.java:124)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.resolve(LocalDeclaration.java:147)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/Block.resolveUsing(Block.java:115)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/TryStatement.resolve(TryStatement.java:504)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:418)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.resolveStatements(MethodDeclaration.java:171)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:396)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.resolve(TypeDeclaration.java:1063)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.resolve(TypeDeclaration.java:1112)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:305)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/Compiler.resolve(Compiler.java:560)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/Compiler.resolve(Compiler.java:599)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:165)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:214)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:79)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaModelOperation.run(JavaModelOperation.java:718)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaModelOperation.runOperation(JavaModelOperation.java:777)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/CompilationUnit.reconcile(CompilationUnit.java:1081)
4XESTACKTRACE          at
org/eclipse/jst/jsp/core/internal/java/JSPTranslation.reconcileCompilationUnit(JSPTranslation.java:482)
4XESTACKTRACE          at
org/eclipse/jst/jsp/core/internal/validation/JSPValidator.validateFile(JSPValidator.java:172)
4XESTACKTRACE          at
org/eclipse/jst/jsp/core/internal/validation/JSPValidator.validate(JSPValidator.java:138)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/core/ValidatorLauncher.start(ValidatorLauncher.java:90)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationOperation.launchValidator(ValidationOperation.java:1195)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationOperation.internalValidate(ValidationOperation.java:1021)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationOperation.validate(ValidationOperation.java:927)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationOperation.run(ValidationOperation.java:638)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationBuilder.performFullBuild(ValidationBuilder.java:262)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationBuilder.performFullBuild(ValidationBuilder.java:254)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationBuilder.build(ValidationBuilder.java:195)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager$2.run(BuildManager.java:593)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.run(InternalPlatform.java:1044)
4XESTACKTRACE          at org/eclipse/core/runtime/Platform.run(Platform.java:783)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager.basicBuild(BuildManager.java:168)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager.basicBuild(BuildManager.java:202)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager$1.run(BuildManager.java:231)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.run(InternalPlatform.java:1044)
4XESTACKTRACE          at org/eclipse/core/runtime/Platform.run(Platform.java:783)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager.basicBuild(BuildManager.java:234)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager.basicBuildLoop(BuildManager.java:253)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager.build(BuildManager.java:282)
4XESTACKTRACE          at
org/eclipse/core/internal/events/AutoBuildJob.doBuild(AutoBuildJob.java:139)
4XESTACKTRACE          at
org/eclipse/core/internal/events/AutoBuildJob.run(AutoBuildJob.java:200)
4XESTACKTRACE          at org/eclipse/core/internal/jobs/Worker.run(Worker.java:76)
Here's what I can see so far. 
1. We really should only be being called as in your stack trace if there is a
JSP in the project.  Tim ... are you * sure * there's no JSP's in there? If so, 
then wow, there is a bad bug somewhere. 

2. Once called, I see from the trace we might be causing/waiting for a Java
Build to finish (we indirectly cause that to be triggered ... hopefully not 
*rebuilt* which would be a true bug, somewhere).  So, we might be simply getting 
the created for a Java Build. We'll have to investigate. 

3. Our validator does seem to be called twice. (when I simply do a "clean" on 
a project) ... not sure about other validators. 

Phil, anything some to mind? Is there a way for our JSP validaiton to always 
run after a Java Build is done, so we never have to wait for it, or trigger it? 

Vijay, can you imagine any reason/changes why our JSP validator would be called 
on an non-JSP file? Also, any reason why we would be called twice? 




changing component to validation, for now. 

Please return if/when its confirmed our validator is doing something wrong when
its called. 

Re #1 - just confirming that there isn't a single JSP file in the project. It is
a standard Web project created by the New wizard.
And, how about in other projects? 
Using a breakpoint set at beginning of  
validateFile(IFile f, IReporter reporter)
I did just confirm if I have a exsing project "Test1" with a JSP in it, 
then create a new project "Test2" our validator is called 
on the JSP file in the other Test1 project. 
[Not sure why, if bug in validator, or if it is getting some bogus information]. 

So, the problem *might* come down to we are validating the whole workspace,
instead of projects. 

Yes, there are JSP files in other projects in my workspace, just none in this
project. The validation message specifically says that it is validating this
project, so if that is part of the problem then either the validation should be
fixed or this message should change to reflect the truth.
Just to continue my real time diagnostics :) 

Even when new, empty project created, I see in 
	public void validate(IValidationContext helper, IReporter reporter) 
		String[] uris = helper.getURIs();

The URI's are "null" (well, actually, just zero length). 
Which we interpret as a "there has been a request that a full workspace clean
and re-validation be done". 

Is this no longer true? (was it ever?) 
I can see the IValidationConext has the new project set on it in a private 
variable. Is this supposed to be "exposed" to clients to know only to validate
that one project?

thanks, 

Tim, does the same thing happen in a clean workspace when you create a new
dynamic web project?
Just to clarify from Tim's remark in comment 8, the message is accurate for 
what is supposed to be happening ... we, we won't be changing that. 

We need to fix so we are validating only the project requested.
 
My guess is, that what supposed to be what's returned in getURI's. 
(but still need to confirm with ViJay). 

And, while we we might be able to fix that specific method, for now, it does 
sort of seem to indicate there should be better "flags" for the overall 
types of requests being made, instead of just inferring things from 
a list of URI's. For example, a validateWorkspace() [true or false] method 
on ValidationContext, would seem preferable, to asuming that if getURI's was 
zero length, that just happened ot mean "validate workspace". 

Upping priority since this should be resolved quick. 

re. comment #4

Since the validators are run as a special builder, I don't think we have any say
in the order which we get called, and we're stuck on that builder thread to
completion.  I thought validation framework was supposed to move off being a
"builder" at one point...

Do you mean for our validator to just yield, or not do anything if a Java build
is going on, then be kind of a Java build listener, and run only after a Java
build (as to not interfere)?  Not sure how we're triggering Java build...

From what I see during a workspace "clean" it does look like we get a validate
call from the validation framework w/ uris[0] for EACH web project in the
workspace.  The JSPValidator code is only expecting one validate call.
I would like to do some investigation before..i comment on this problem...I 
will add comments as soom i am done investigating.
re: comment #10

Ok, I think I've narrowed this down. The basic behaviour that I'm seeing is the
following:
  * To validate an empty JSP page takes ~2-3 seconds.
  * To validate an average JSP page takes ~5 seconds.
  * Whenever validation occurs, it is validating every JSP page in the workspace.

I've been able to reproduce this consistently. When I first reported the
problem, I had two Web projects in my workspace and had just created a third.
Even though the new Web project had no JSP files, it was validating the other
two, which contained 10 JSP pages between them (therefore, about 50s of
validation on every build).
From a little investigation, seems even in version 0.7, we were getting the zero
length URI's on a new project, so ... as bad as that scheme is, not sure that
would be the cause of any regressions. (Still needs to be fixed, in design and
implementation, I'm just saying that by itself would not be cause of regression). 

So, I'm moving to P2. Do we have any tests/evidence this is really a regression? 


(In reply to comment #13)
&gt; re. comment #4

from the stack trace in comment #3, it appears Java is "resolving" some very
basic stuff, and getting down into jar's, etc. Not sure if this is "normal", or
only "the first time" that those classes are 'compiled' and/or 'indexed'. 

One *possible* change is just how much has been indexed and 'cached' by "Java
Tools". (or something). So, yes, I am suggesting, Phil, you investigate bailing
out if state indicates Java is not built or indexed yet -- no need for JSP's to
be validated if Java hasn't been "validated" yet. Though, obviously, not the
sole problem in this case. Investigation only. :)  There's much about validation
framework that is "due to change" in future, and I would suggest this is one of
the prime use cases to optimize (by forwarding "requirements" to the validation
framework (in other words, talk to Vijay and you two propose a solution :) 


Just in case there is any confusion, this is not a one-time/caching problem that
gets better on the second run. The 5s per JSP is on every validation, e.g.
everytime I create a new project.
Thanks Tim ... do you happen to have any pristine installs of version 0.7, to
verify if this is indeed a regression? My "breakpoint" debugging indicated it is
not. But ... there could be changes besides where I set breakpoints that would
cause more processing to occur than when using base Eclipse 3.1. If you do see a
regression, then we'll have to dig in to JDT's list of bugs fixed in 3.1.1 to
see what could be affecting it. 

Sorry, deleted my 0.7 last week. I can grab it again, but I'm in the middle of
some other work so it'll take me a while.
After investigation we found that that JSP Validator was validating all the
jsp's in the workspace if no uri's are being passed in by the validation context
which is not the right thing to do. To fix this problem..we are adding api on
the IValidatonContext to pass in the build kind so the each validator can query
the kind of build and take appropriate action if an empty list of uri are being
passed into the validatior for a project. We have implmented this fix and
currently testing it for the jsp validator case. As this is an api change I will
be sending out a note soon after i release the fix so teams implementing the
IValidationContext can react.
Vijay, I think exposing the build type to the validator is a mistake. I don't
see why the validator should have access to the type of build. Building does not
really have to do with validation and validators should not have to know about
different validation levels. This breaks the encapsulation that the validation
framework provides for validators. (Does the notion of a build even exist when
using the framework in WAS?)

Sounds to me like the real problem is the validation framework (the
workbenchcontext) is not passing in the correct list of files to be validated.
Seems like the intuitive usage is for the validator only to validate those
resources in the list. 

I'd vote -1 to changing the API in the way you specified in favour of a
corrective solution.
Lawrence raises some good "API Quality" points in comment 22, and 
I know I wasn't looking that far ahead when Vijay and I discussed. 

The need is still there, however. Instead of only have "list of URI's" to 
validate, there is more needed by an Eclipse validator (and no need to 
discuss other product validators here :)  

In this case we need a flag that says "user has requested to revalidate
everything from scratch that you'd ever want to". [And, just some
miscommunitcation and "current implementaion" led us to assume a list of 
"validate nothing" meant to "validate everything" :) ]

We briefly discussed some other cases that current framework doesn't well handle, 
for example, if a web.xml file changes then we MIGHT have to revalidate some
JSPs. I wouldn't ever expect "the framework" to tell us that. Not to mention
issues like the validation framework being in despirite need of supporting
content types (instead of extensions), and also having better notions of
"dependent validators" .. so some should only run after others, with less
priority, and they'd know not to run if others failed, etc). 

So, point being, this "provisional API" has a ways to go before being an API, so 
do not want to "waste time" coming up with the perfect solution. 

Probably a good compromise is to use
some new IValidationContext constants
instead of IncrementalProjectBuilder
constands, rename the method to "getKind",
and the current framework implementation 
could have some pretty simple rules to 
"encapsulate" build-kind to a validation-kind. 
This would allow for better evolution. 

They call it open development for a reason :) 
thanks for your comments. 

The IWorkbench context includes the current project, right?  I was under the
impression from M5 that an empty list of URIs meant validate the provided
project only?  If so, then the original motivation for this API change would be
false.
(In reply to comment #24)
&gt; The IWorkbench context includes the current project, right?  

Interesting, I didn't even know we got an IWorkbenchContext! So, from the this
method that passes us an IValidationContext, 

public void validate(IValidationContext helper

we are supposed to cast to see if we just happend to get an IWorkbenchConext? If
so, treat that differntly, get its project? and if its not null, then assume the
getURI's method applies only to that project.  

Gee, somebody should write this down :) 




David,

Yes, there is a IWorkbenchContext that has the current project that is being 
validated by the framework. The getURI's on IValidationContext returns the 
uri's of the current project. The IValidationContext that is being pass into 
the validate method is more generic so it can run in headless like WAS. The 
IWorkbenchContext is workbench specific. 

In the JSPValidator now we are casting the IValidationContext passed in to 
WorkbenchContext to get the current project. We can change it to cast it to the 
IWorkbenchContext interface rather than casting it to the concrete 
implmentation. 

If the jsp validator only wants to validate the jsp's in the current project 
only and not in the entire workspace then you can query the project to get all 
the jsp's instead of querying the build kind. We can also move the getBuildKind
() to the IWorkbenchContext as this is workbench specific and a headless 
IValidationContext should not care about it. Does this sound reasonable ?



I'd say no. I don't think the build type should be exposed to validators in any
way, shape, or form. As I said earlier, validators should be shielded from the
fact that the framework runs as a builder.

I still maintain that validators should not have to determine which resources to
validate. This should be left up to the framework. In David's example, if
web.xml changes (can you give an example of when this requires JSPs to be
revalidated?) the JSP validator can be told to run through an extension
mechanism in the framework that contains this rule. Dependent validators should
also be handled by the framework and simply specified in the validator extension
point. (e.g. The JSP validator declares that it depends on the XML validator.
The framework then ensures that the XML validator is run first.)
So we don't really need getBuildKind() to fix this problem..

We just needed to better understand (and document) get getURIs() call.

- if getURIs() length &gt; 0, it's an "incremental build" (just validate those files)

- if getURIs() length == 0, it's a "full build", and we'll get called for EACH 
  project in the workspace.   In this case, we can check if we have an  
  IWorkbenchContext so we can get the project, and validate that (not the entire 
  workspace, which is the orignal bug)

No need to overcomplicate the API w/ getBuildKind(), getKind() etc. at this
point, especially since "build" is a separate idea from validation.


Phil, Try the approach that you have suggested and let me know if it solves the 
JSP Validation performance problem. If it does then I will pull out the 
getBuildKind api and you can give Tim.D a patch for the JSPValidator class only.
Phil has committed the code to fix (and I've released for I builds &gt; 9/29. 

I've opened bug 111031 to track the "backing out" of the "build kind" API change. 

As I've alluded too before, though. I am concerned what Tim D. perceives as
"performance regression" is not really this bug, and something else. The reason
being this code was the same as on 0.7, so this by itself is no regression. 
Plus, I've done a little "armchair benchmarking" with 0.7, and M8 with 3.1.1,
with one project with 80 JSPs (so, not effected by this bug), and in both cases
just took about 10 seconds to validate whole project (using "clean" option). 
While we need to make that faster, Tim's spreading rumors we're much slower :) 
[And, we may be in other cases, due to something as yet not understood that is
not this bug -- such as network connectivity?]. 
BTW, my "example project" was the Tomcat Examples (5.0.28), so, while not
"industrial", not exactly toy either. 

released for I-builds after 9/28. 

Thanks all. 

Created attachment 28011
Patch for M8 version of code, to not re-validate excessively

This is a patch that could be added (re-built) for an M8 version of WTP, 
for the jsp.core plugin .... just in case anyone wants to do some performance 
tests. :)
Closing
Closing</WithStack>
    <WithOutStack>A build started on a new J2EE Web project containing no JSP files. This happened
when I closed the web.xml DD editor without saving, although I presume this was
just a coincidence.

The validation of the project stalled on the JSP validator, and it stayed there
for over 30s before continuing to other validators. 30s for a JSP validator when
I don't have any JSP files yet seems a little excessive...
Problem happened again on the next Web project I created, and this time I
counted - the hang is closer to 60s.
Well, Tim, we are probably just making darn good and sure you really don't have
an JSP's in that project :) 

We'll take a look, but off hand suspect this isn't really JSP Validator ... it
might be the progress message? Where are you reading that from eactly? 

Step by step directions would ease things for me (I know, probably obvious to
you, but not to me). 

A few thread dumps during this excessive operations might help to debug quickly,
but I'd also like us to add some of the "performance blame" hooks into any code
with lots of participants, such as validators, so we can better track. 

Thanks. 

Steps were pretty straightforward - create a new Web project, watch the first
build. My guess on the reason you haven't seen this is either because of my
internet settings (I might have been disconnected at the time) or because I had
about 8 other small projects in the workspace.

I opened the defect here because the message in the Progress view (or in the
dialog when another operation is blocked) says "Validating using JSP Syntax...".
If the validator gives wrong progress messages and you can figure out who else
this would be, feel free to pass it on. :) However, the JSP validator does
appear to be on the stack trace below:

3XMTHREADINFO      "Worker-1" (TID:0x03348D00, sys_thread_t:0x0003604C,
state:CW, native ID:0x00000DA4) prio=5
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JarPackageFragmentRoot.computeChildren(JarPackageFragmentRoot.java:85)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/PackageFragmentRoot.buildStructure(PackageFragmentRoot.java:174)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/Openable.generateInfos(Openable.java:233)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JarPackageFragment.generateInfos(JarPackageFragment.java:113)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaElement.openWhenClosed(JavaElement.java:488)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaElement.getElementInfo(JavaElement.java:232)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaElement.getElementInfo(JavaElement.java:218)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaElement.getChildren(JavaElement.java:173)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaElement.getChildrenOfType(JavaElement.java:187)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JarPackageFragment.getClassFiles(JarPackageFragment.java:120)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/NameLookup.seekTypesInBinaryPackage(NameLookup.java:793)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/NameLookup.seekTypes(NameLookup.java:769)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/NameLookup.findType(NameLookup.java:542)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/NameLookup.findType(NameLookup.java:501)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/SearchableEnvironment.find(SearchableEnvironment.java:85)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/SearchableEnvironment.findType(SearchableEnvironment.java:188)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/CancelableNameEnvironment.findType(CancelableNameEnvironment.java:45)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.askForType(LookupEnvironment.java:119)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/lookup/PackageBinding.getTypeOrPackage(PackageBinding.java:178)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/lookup/Scope.getTypeOrPackage(Scope.java:2392)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/lookup/Scope.getType(Scope.java:2137)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.getTypeBinding(SingleTypeReference.java:39)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/TypeReference.resolveType(TypeReference.java:124)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.resolve(LocalDeclaration.java:147)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/Block.resolveUsing(Block.java:115)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/TryStatement.resolve(TryStatement.java:504)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:418)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.resolveStatements(MethodDeclaration.java:171)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:396)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.resolve(TypeDeclaration.java:1063)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.resolve(TypeDeclaration.java:1112)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:305)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/Compiler.resolve(Compiler.java:560)
4XESTACKTRACE          at
org/eclipse/jdt/internal/compiler/Compiler.resolve(Compiler.java:599)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:165)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:214)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:79)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaModelOperation.run(JavaModelOperation.java:718)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/JavaModelOperation.runOperation(JavaModelOperation.java:777)
4XESTACKTRACE          at
org/eclipse/jdt/internal/core/CompilationUnit.reconcile(CompilationUnit.java:1081)
4XESTACKTRACE          at
org/eclipse/jst/jsp/core/internal/java/JSPTranslation.reconcileCompilationUnit(JSPTranslation.java:482)
4XESTACKTRACE          at
org/eclipse/jst/jsp/core/internal/validation/JSPValidator.validateFile(JSPValidator.java:172)
4XESTACKTRACE          at
org/eclipse/jst/jsp/core/internal/validation/JSPValidator.validate(JSPValidator.java:138)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/core/ValidatorLauncher.start(ValidatorLauncher.java:90)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationOperation.launchValidator(ValidationOperation.java:1195)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationOperation.internalValidate(ValidationOperation.java:1021)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationOperation.validate(ValidationOperation.java:927)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationOperation.run(ValidationOperation.java:638)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationBuilder.performFullBuild(ValidationBuilder.java:262)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationBuilder.performFullBuild(ValidationBuilder.java:254)
4XESTACKTRACE          at
org/eclipse/wst/validation/internal/operations/ValidationBuilder.build(ValidationBuilder.java:195)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager$2.run(BuildManager.java:593)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.run(InternalPlatform.java:1044)
4XESTACKTRACE          at org/eclipse/core/runtime/Platform.run(Platform.java:783)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager.basicBuild(BuildManager.java:168)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager.basicBuild(BuildManager.java:202)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager$1.run(BuildManager.java:231)
4XESTACKTRACE          at
org/eclipse/core/internal/runtime/InternalPlatform.run(InternalPlatform.java:1044)
4XESTACKTRACE          at org/eclipse/core/runtime/Platform.run(Platform.java:783)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager.basicBuild(BuildManager.java:234)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager.basicBuildLoop(BuildManager.java:253)
4XESTACKTRACE          at
org/eclipse/core/internal/events/BuildManager.build(BuildManager.java:282)
4XESTACKTRACE          at
org/eclipse/core/internal/events/AutoBuildJob.doBuild(AutoBuildJob.java:139)
4XESTACKTRACE          at
org/eclipse/core/internal/events/AutoBuildJob.run(AutoBuildJob.java:200)
4XESTACKTRACE          at org/eclipse/core/internal/jobs/Worker.run(Worker.java:76)
Here's what I can see so far. 
1. We really should only be being called as in your stack trace if there is a
JSP in the project.  Tim ... are you * sure * there's no JSP's in there? If so, 
then wow, there is a bad bug somewhere. 

2. Once called, I see from the trace we might be causing/waiting for a Java
Build to finish (we indirectly cause that to be triggered ... hopefully not 
*rebuilt* which would be a true bug, somewhere).  So, we might be simply getting 
the created for a Java Build. We'll have to investigate. 

3. Our validator does seem to be called twice. (when I simply do a "clean" on 
a project) ... not sure about other validators. 

Phil, anything some to mind? Is there a way for our JSP validaiton to always 
run after a Java Build is done, so we never have to wait for it, or trigger it? 

Vijay, can you imagine any reason/changes why our JSP validator would be called 
on an non-JSP file? Also, any reason why we would be called twice? 




changing component to validation, for now. 

Please return if/when its confirmed our validator is doing something wrong when
its called. 

Re #1 - just confirming that there isn't a single JSP file in the project. It is
a standard Web project created by the New wizard.
And, how about in other projects? 
Using a breakpoint set at beginning of  
validateFile(IFile f, IReporter reporter)
I did just confirm if I have a exsing project "Test1" with a JSP in it, 
then create a new project "Test2" our validator is called 
on the JSP file in the other Test1 project. 
[Not sure why, if bug in validator, or if it is getting some bogus information]. 

So, the problem *might* come down to we are validating the whole workspace,
instead of projects. 

Yes, there are JSP files in other projects in my workspace, just none in this
project. The validation message specifically says that it is validating this
project, so if that is part of the problem then either the validation should be
fixed or this message should change to reflect the truth.
Just to continue my real time diagnostics :) 

Even when new, empty project created, I see in 
	public void validate(IValidationContext helper, IReporter reporter) 
		String[] uris = helper.getURIs();

The URI's are "null" (well, actually, just zero length). 
Which we interpret as a "there has been a request that a full workspace clean
and re-validation be done". 

Is this no longer true? (was it ever?) 
I can see the IValidationConext has the new project set on it in a private 
variable. Is this supposed to be "exposed" to clients to know only to validate
that one project?

thanks, 

Tim, does the same thing happen in a clean workspace when you create a new
dynamic web project?
Just to clarify from Tim's remark in comment 8, the message is accurate for 
what is supposed to be happening ... we, we won't be changing that. 

We need to fix so we are validating only the project requested.
 
My guess is, that what supposed to be what's returned in getURI's. 
(but still need to confirm with ViJay). 

And, while we we might be able to fix that specific method, for now, it does 
sort of seem to indicate there should be better "flags" for the overall 
types of requests being made, instead of just inferring things from 
a list of URI's. For example, a validateWorkspace() [true or false] method 
on ValidationContext, would seem preferable, to asuming that if getURI's was 
zero length, that just happened ot mean "validate workspace". 

Upping priority since this should be resolved quick. 

re. comment #4

Since the validators are run as a special builder, I don't think we have any say
in the order which we get called, and we're stuck on that builder thread to
completion.  I thought validation framework was supposed to move off being a
"builder" at one point...

Do you mean for our validator to just yield, or not do anything if a Java build
is going on, then be kind of a Java build listener, and run only after a Java
build (as to not interfere)?  Not sure how we're triggering Java build...

From what I see during a workspace "clean" it does look like we get a validate
call from the validation framework w/ uris[0] for EACH web project in the
workspace.  The JSPValidator code is only expecting one validate call.
I would like to do some investigation before..i comment on this problem...I 
will add comments as soom i am done investigating.
re: comment #10

Ok, I think I've narrowed this down. The basic behaviour that I'm seeing is the
following:
  * To validate an empty JSP page takes ~2-3 seconds.
  * To validate an average JSP page takes ~5 seconds.
  * Whenever validation occurs, it is validating every JSP page in the workspace.

I've been able to reproduce this consistently. When I first reported the
problem, I had two Web projects in my workspace and had just created a third.
Even though the new Web project had no JSP files, it was validating the other
two, which contained 10 JSP pages between them (therefore, about 50s of
validation on every build).
From a little investigation, seems even in version 0.7, we were getting the zero
length URI's on a new project, so ... as bad as that scheme is, not sure that
would be the cause of any regressions. (Still needs to be fixed, in design and
implementation, I'm just saying that by itself would not be cause of regression). 

So, I'm moving to P2. Do we have any tests/evidence this is really a regression? 


(In reply to comment #13)
&gt; re. comment #4

from the stack trace in comment #3, it appears Java is "resolving" some very
basic stuff, and getting down into jar's, etc. Not sure if this is "normal", or
only "the first time" that those classes are 'compiled' and/or 'indexed'. 

One *possible* change is just how much has been indexed and 'cached' by "Java
Tools". (or something). So, yes, I am suggesting, Phil, you investigate bailing
out if state indicates Java is not built or indexed yet -- no need for JSP's to
be validated if Java hasn't been "validated" yet. Though, obviously, not the
sole problem in this case. Investigation only. :)  There's much about validation
framework that is "due to change" in future, and I would suggest this is one of
the prime use cases to optimize (by forwarding "requirements" to the validation
framework (in other words, talk to Vijay and you two propose a solution :) 


Just in case there is any confusion, this is not a one-time/caching problem that
gets better on the second run. The 5s per JSP is on every validation, e.g.
everytime I create a new project.
Thanks Tim ... do you happen to have any pristine installs of version 0.7, to
verify if this is indeed a regression? My "breakpoint" debugging indicated it is
not. But ... there could be changes besides where I set breakpoints that would
cause more processing to occur than when using base Eclipse 3.1. If you do see a
regression, then we'll have to dig in to JDT's list of bugs fixed in 3.1.1 to
see what could be affecting it. 

Sorry, deleted my 0.7 last week. I can grab it again, but I'm in the middle of
some other work so it'll take me a while.
After investigation we found that that JSP Validator was validating all the
jsp's in the workspace if no uri's are being passed in by the validation context
which is not the right thing to do. To fix this problem..we are adding api on
the IValidatonContext to pass in the build kind so the each validator can query
the kind of build and take appropriate action if an empty list of uri are being
passed into the validatior for a project. We have implmented this fix and
currently testing it for the jsp validator case. As this is an api change I will
be sending out a note soon after i release the fix so teams implementing the
IValidationContext can react.
Vijay, I think exposing the build type to the validator is a mistake. I don't
see why the validator should have access to the type of build. Building does not
really have to do with validation and validators should not have to know about
different validation levels. This breaks the encapsulation that the validation
framework provides for validators. (Does the notion of a build even exist when
using the framework in WAS?)

Sounds to me like the real problem is the validation framework (the
workbenchcontext) is not passing in the correct list of files to be validated.
Seems like the intuitive usage is for the validator only to validate those
resources in the list. 

I'd vote -1 to changing the API in the way you specified in favour of a
corrective solution.
Lawrence raises some good "API Quality" points in comment 22, and 
I know I wasn't looking that far ahead when Vijay and I discussed. 

The need is still there, however. Instead of only have "list of URI's" to 
validate, there is more needed by an Eclipse validator (and no need to 
discuss other product validators here :)  

In this case we need a flag that says "user has requested to revalidate
everything from scratch that you'd ever want to". [And, just some
miscommunitcation and "current implementaion" led us to assume a list of 
"validate nothing" meant to "validate everything" :) ]

We briefly discussed some other cases that current framework doesn't well handle, 
for example, if a web.xml file changes then we MIGHT have to revalidate some
JSPs. I wouldn't ever expect "the framework" to tell us that. Not to mention
issues like the validation framework being in despirite need of supporting
content types (instead of extensions), and also having better notions of
"dependent validators" .. so some should only run after others, with less
priority, and they'd know not to run if others failed, etc). 

So, point being, this "provisional API" has a ways to go before being an API, so 
do not want to "waste time" coming up with the perfect solution. 

Probably a good compromise is to use
some new IValidationContext constants
instead of IncrementalProjectBuilder
constands, rename the method to "getKind",
and the current framework implementation 
could have some pretty simple rules to 
"encapsulate" build-kind to a validation-kind. 
This would allow for better evolution. 

They call it open development for a reason :) 
thanks for your comments. 

The IWorkbench context includes the current project, right?  I was under the
impression from M5 that an empty list of URIs meant validate the provided
project only?  If so, then the original motivation for this API change would be
false.
(In reply to comment #24)
&gt; The IWorkbench context includes the current project, right?  

Interesting, I didn't even know we got an IWorkbenchContext! So, from the this
method that passes us an IValidationContext, 

public void validate(IValidationContext helper

we are supposed to cast to see if we just happend to get an IWorkbenchConext? If
so, treat that differntly, get its project? and if its not null, then assume the
getURI's method applies only to that project.  

Gee, somebody should write this down :) 




David,

Yes, there is a IWorkbenchContext that has the current project that is being 
validated by the framework. The getURI's on IValidationContext returns the 
uri's of the current project. The IValidationContext that is being pass into 
the validate method is more generic so it can run in headless like WAS. The 
IWorkbenchContext is workbench specific. 

In the JSPValidator now we are casting the IValidationContext passed in to 
WorkbenchContext to get the current project. We can change it to cast it to the 
IWorkbenchContext interface rather than casting it to the concrete 
implmentation. 

If the jsp validator only wants to validate the jsp's in the current project 
only and not in the entire workspace then you can query the project to get all 
the jsp's instead of querying the build kind. We can also move the getBuildKind
() to the IWorkbenchContext as this is workbench specific and a headless 
IValidationContext should not care about it. Does this sound reasonable ?



I'd say no. I don't think the build type should be exposed to validators in any
way, shape, or form. As I said earlier, validators should be shielded from the
fact that the framework runs as a builder.

I still maintain that validators should not have to determine which resources to
validate. This should be left up to the framework. In David's example, if
web.xml changes (can you give an example of when this requires JSPs to be
revalidated?) the JSP validator can be told to run through an extension
mechanism in the framework that contains this rule. Dependent validators should
also be handled by the framework and simply specified in the validator extension
point. (e.g. The JSP validator declares that it depends on the XML validator.
The framework then ensures that the XML validator is run first.)
So we don't really need getBuildKind() to fix this problem..

We just needed to better understand (and document) get getURIs() call.

- if getURIs() length &gt; 0, it's an "incremental build" (just validate those files)

- if getURIs() length == 0, it's a "full build", and we'll get called for EACH 
  project in the workspace.   In this case, we can check if we have an  
  IWorkbenchContext so we can get the project, and validate that (not the entire 
  workspace, which is the orignal bug)

No need to overcomplicate the API w/ getBuildKind(), getKind() etc. at this
point, especially since "build" is a separate idea from validation.


Phil, Try the approach that you have suggested and let me know if it solves the 
JSP Validation performance problem. If it does then I will pull out the 
getBuildKind api and you can give Tim.D a patch for the JSPValidator class only.
Phil has committed the code to fix (and I've released for I builds &gt; 9/29. 

I've opened bug 111031 to track the "backing out" of the "build kind" API change. 

As I've alluded too before, though. I am concerned what Tim D. perceives as
"performance regression" is not really this bug, and something else. The reason
being this code was the same as on 0.7, so this by itself is no regression. 
Plus, I've done a little "armchair benchmarking" with 0.7, and M8 with 3.1.1,
with one project with 80 JSPs (so, not effected by this bug), and in both cases
just took about 10 seconds to validate whole project (using "clean" option). 
While we need to make that faster, Tim's spreading rumors we're much slower :) 
[And, we may be in other cases, due to something as yet not understood that is
not this bug -- such as network connectivity?]. 
BTW, my "example project" was the Tomcat Examples (5.0.28), so, while not
"industrial", not exactly toy either. 

released for I-builds after 9/28. 

Thanks all. 

Created attachment 28011
Patch for M8 version of code, to not re-validate excessively

This is a patch that could be added (re-built) for an M8 version of WTP, 
for the jsp.core plugin .... just in case anyone wants to do some performance 
tests. :)
Closing
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110616" />
    <CreationDate amount="2005-09-26 11:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Runtime" />
    <component amount="General" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Palette stack is removed if active tool gets removed after capability is disabled.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="21">
        <Lines>
          <Line>1. Create a palette provider that contributes a new palette tool to an existing</Line>
          <Line>palette stack.  Match this provider to a capability.</Line>
          <Line>2. Enable the capability and set this palette tool as the active one on the</Line>
          <Line>stack.</Line>
          <Line>3. Disable the capability.</Line>
          <Line>RESULT: The entire palette stack disappears.  Only the palette tool that was</Line>
          <Line>added should have disappeared.  The palette stack reappears when the diagram is</Line>
          <Line>reopened.</Line>
          <Line>Changing component to "Runtime Diagram"</Line>
          <Line>I am transfering this to GEF.  The GMF layer is adding/removing entries from</Line>
          <Line>the palette depending on whether a capability is enabled or disabled.  The GMF</Line>
          <Line>layer is basically updating the list of children of a palette container</Line>
          <Line>(adding/removing palette entries), by calling setChildren() on the palette</Line>
          <Line>container with the new list of children.  There is an issue in the application</Line>
          <Line>when the active entry is one that was removed in the call to setChildren().</Line>
          <Line>This could be fixed if setChildren() was overridden in PaletteStack to call</Line>
          <Line>checkActiveEntry() after the new children were set.</Line>
          <Line>1) The "on top" entry should get updated whenever remove or setChildren gets</Line>
          <Line>called, or when the on-top entry becomes hidden. If setChildren is called, I</Line>
          <Line>think it is valid to just reset the on top entry to be the first child. To</Line>
          <Line>avoid this behavior clients should just remove the items individually.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- PaletteService.updatePaletteContainerEntries was replacing the list of</Line>
          <Line>children in a palette container with a new merged list that I was creating</Line>
          <Line>based on the new content and existing content.  The call to</Line>
          <Line>PaletteStack.setChildren() was not resetting the active entry.</Line>
          <Line>- I changed the method so that setChildren() is no longer used.  Instead, I am</Line>
          <Line>adding and removing palette entries using the add/remove API.</Line>
          <Line>- Added more test scenarios to PaletteServiceTests.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Steps to reproduce:
1. Create a palette provider that contributes a new palette tool to an existing 
palette stack.  Match this provider to a capability.  
2. Enable the capability and set this palette tool as the active one on the 
stack.
3. Disable the capability.
RESULT: The entire palette stack disappears.  Only the palette tool that was 
added should have disappeared.  The palette stack reappears when the diagram is 
reopened.
Changing component to "Runtime Diagram"
I am transfering this to GEF.  The GMF layer is adding/removing entries from 
the palette depending on whether a capability is enabled or disabled.  The GMF 
layer is basically updating the list of children of a palette container 
(adding/removing palette entries), by calling setChildren() on the palette 
container with the new list of children.  There is an issue in the application 
when the active entry is one that was removed in the call to setChildren().  
This could be fixed if setChildren() was overridden in PaletteStack to call 
checkActiveEntry() after the new children were set.
1) The "on top" entry should get updated whenever remove or setChildren gets 
called, or when the on-top entry becomes hidden. If setChildren is called, I 
think it is valid to just reset the on top entry to be the first child. To 
avoid this behavior clients should just remove the items individually.

2) In general, we should verify that removing or hiding the active entry 
results in the default entry being selected (or null if no default).
In my case, the "on top" entry may still be in the list of children being set 
in which case I want it to remain as the "on top" entry.  I only want the "on 
top" entry to change to the first entry if the previous "on top" entry is not 
in the list of new children.  However, now that I think about it more, I should 
probably be using the add(index, entry) and remove API instead recreating the 
children list myself.  I think I will change this on my end afterall, but the 
first point made my Randy still stands.  I will confirm that removing that 
active entry (Randy's second point) works as it should (looking at the code I 
think it will).
Created attachment 28309
PaletteService and PaletteServiceTest patches

Contributed by: Cherie Mahoney
See attached patch.

Purpose: 
Bugzilla 110616 Palette stack is removed if active tool gets removed after 
capability is disabled.
- PaletteService.updatePaletteContainerEntries was replacing the list of 
children in a palette container with a new merged list that I was creating 
based on the new content and existing content.  The call to 
PaletteStack.setChildren() was not resetting the active entry.
- I changed the method so that setChildren() is no longer used.  Instead, I am 
adding and removing palette entries using the add/remove API.
- Added more test scenarios to PaletteServiceTests.

Activities: 
Bugzilla 110616 gmf_head sshaw 051014 Palette stack is removed if active tool 
gets removed after capability is disabled

Code Reviewed by:
Steve

How tested: 
JUnit Tests:  
diagram.ui: 65/65

[GMF Restructure] Bug 319140 : product GMF and component
Runtime Diagram was the original product and component for this bug</WithStack>
    <WithOutStack>Steps to reproduce:
1. Create a palette provider that contributes a new palette tool to an existing 
palette stack.  Match this provider to a capability.  
2. Enable the capability and set this palette tool as the active one on the 
stack.
3. Disable the capability.
RESULT: The entire palette stack disappears.  Only the palette tool that was 
added should have disappeared.  The palette stack reappears when the diagram is 
reopened.
Changing component to "Runtime Diagram"
I am transfering this to GEF.  The GMF layer is adding/removing entries from 
the palette depending on whether a capability is enabled or disabled.  The GMF 
layer is basically updating the list of children of a palette container 
(adding/removing palette entries), by calling setChildren() on the palette 
container with the new list of children.  There is an issue in the application 
when the active entry is one that was removed in the call to setChildren().  
This could be fixed if setChildren() was overridden in PaletteStack to call 
checkActiveEntry() after the new children were set.
1) The "on top" entry should get updated whenever remove or setChildren gets 
called, or when the on-top entry becomes hidden. If setChildren is called, I 
think it is valid to just reset the on top entry to be the first child. To 
avoid this behavior clients should just remove the items individually.

2) In general, we should verify that removing or hiding the active entry 
results in the default entry being selected (or null if no default).
In my case, the "on top" entry may still be in the list of children being set 
in which case I want it to remain as the "on top" entry.  I only want the "on 
top" entry to change to the first entry if the previous "on top" entry is not 
in the list of new children.  However, now that I think about it more, I should 
probably be using the add(index, entry) and remove API instead recreating the 
children list myself.  I think I will change this on my end afterall, but the 
first point made my Randy still stands.  I will confirm that removing that 
active entry (Randy's second point) works as it should (looking at the code I 
think it will).
Created attachment 28309
PaletteService and PaletteServiceTest patches

Contributed by: Cherie Mahoney
See attached patch.

Purpose: 
Bugzilla 110616 Palette stack is removed if active tool gets removed after 
capability is disabled.
- PaletteService.updatePaletteContainerEntries was replacing the list of 
children in a palette container with a new merged list that I was creating 
based on the new content and existing content.  The call to 
PaletteStack.setChildren() was not resetting the active entry.
- I changed the method so that setChildren() is no longer used.  Instead, I am 
adding and removing palette entries using the add/remove API.
- Added more test scenarios to PaletteServiceTests.

Activities: 
Bugzilla 110616 gmf_head sshaw 051014 Palette stack is removed if active tool 
gets removed after capability is disabled

Code Reviewed by:
Steve

How tested: 
JUnit Tests:  
diagram.ui: 65/65

[GMF Restructure] Bug 319140 : product GMF and component
Runtime Diagram was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110617" />
    <CreationDate amount="2005-09-26 11:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="trivial" />
    <Summery>[Repo View] Cancelling change of repository path leaves OK button disabled</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>- have a CVS connection like :extssh:mkeller@dev.eclipse.org:/home/eclipse</Line>
          <Line>- context menu &gt; Properties &gt; CVS</Line>
          <Line>- change path to "/cvsroot/eclipse"</Line>
          <Line>- click OK</Line>
          <Line>- in the "Confirm Host or Path Change" dialog, click Cancel</Line>
          <Line>=&gt; OK button in Properties dialog is disabled, should be enabled</Line>
          <Line>We do not plan to address this in 3.3.</Line>
          <Line>Works for me in 3.4M1 .</Line>
          <Line>Due to the comment #2, I'm marking it as WORKSFORME.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>M20050923-1430

- have a CVS connection like :extssh:mkeller@dev.eclipse.org:/home/eclipse
- context menu &gt; Properties &gt; CVS
- change path to "/cvsroot/eclipse"
- click OK
- in the "Confirm Host or Path Change" dialog, click Cancel
=&gt; OK button in Properties dialog is disabled, should be enabled
We do not plan to address this in 3.3.
Works for me in 3.4M1 .
Due to the comment #2, I'm marking it as WORKSFORME.</WithStack>
    <WithOutStack>M20050923-1430

- have a CVS connection like :extssh:mkeller@dev.eclipse.org:/home/eclipse
- context menu &gt; Properties &gt; CVS
- change path to "/cvsroot/eclipse"
- click OK
- in the "Confirm Host or Path Change" dialog, click Cancel
=&gt; OK button in Properties dialog is disabled, should be enabled
We do not plan to address this in 3.3.
Works for me in 3.4M1 .
Due to the comment #2, I'm marking it as WORKSFORME.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110618" />
    <CreationDate amount="2005-09-26 11:36:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Common Tools" />
    <component amount="wst.common" />
    <Version amount="0.7.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>issues with validators accessing internet during builds</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="5">
      <Enumeration lines="5">
        <Lines>
          <Line>(a) yes</Line>
          <Line>(b) no</Line>
          <Line>(b.1) references to remote resources should be treated as errors</Line>
          <Line>(b.2) references to remote resources should be treated as warnings</Line>
          <Line>(b.3) references to remote resources should be ignored</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>109788.  It's really easy to use and it'll provide a stack trace to help</Line>
          <Line>diagnose the problems.  Once we have a stack it's usually much easier to</Line>
          <Line>identify the offending code and fix it.</Line>
          <Line>If we agree that this is bad behaviour and there was just a validator or two</Line>
          <Line>that accessed the internet, I'd go off and run this tool. The main reason this</Line>
          <Line>defect was opened was that this appears to be a fairly standard practise among</Line>
          <Line>validators.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>1) Restrict all validators from accessing the internet.</Line>
          <Line>2) Move validators out of the build.</Line>
          <Line>3) Some sort of hybrid solution. e.g., if a validator needs a schema file it</Line>
          <Line>would start a job and return immediately. The job would download the schema and</Line>
          <Line>then kick off another build.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="9">
        <Lines>
          <Line>1. Only When requested</Line>
          <Line>2. During Builds</Line>
          <Line>3. During Resource Changes</Line>
          <Line>4. While typing</Line>
          <Line>The later three would not need to be mutually exclusive</Line>
          <Line>(some might want to run all, when typing, when resources changes, and when doing</Line>
          <Line>a build). (And we could highly recommend they really don't want to validate a</Line>
          <Line>whole EAR evertime they type .. but .. I could imagine someday even that will be</Line>
          <Line>fast enough some users might want it (incrementally, at least).</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- have a separate 'validate' operation that triggers the validation of resources</Line>
          <Line>(insteady of piggy backing on 'build')</Line>
          <Line>- continue to use the 'clean' operation to remove validation problems</Line>
          <Line>- use a resource change listener to (optionally) revalidate changed resources</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Opening against this component for lack of a better place.

It looks like several validators currently access the internet during
validation. I assume that this is due to the fact that schema files are not
present in the workspace and they need to be cached, but this should never
happen as part of normal validation. Since validation occurs within during
builds *there should be no internet access*.

Going to the internet is many times slower than local processing at the best of
times, and this leads to problems when the machine is disconnected, the schema
is not available, timeouts, etc. Builds should be quick, so this causes severe
performance issues. There are many ways around this - doing minimal validation
until the schema are present, kicking off a background job to download the
schema and then rerun validation, etc.
Hi Craig,   Push this if its not you, but the XML validator does the actual
schema validation......  
Actually the XML validation retieves an appropiate DTD file according to the 
in DOCTYPE defined URL. It seems for me to be an advantage but not with the 
jail-like or wrong dimensioned firewalling. 

For such cases a checkbox "Do not retreive external resources" in the 
Preferences/Validation can introduce a desirable denying of the full DTD based 
validation.
Dropping to major.
For those experiencing 'going of to the internet' kinds of problems, it would be
helful to utilize the "HTTP Connection Tracer" utility that's attached to bug
109788.  It's really easy to use and it'll provide a stack trace to help
diagnose the problems.  Once we have a stack it's usually much easier to
identify the offending code and fix it.
If we agree that this is bad behaviour and there was just a validator or two
that accessed the internet, I'd go off and run this tool. The main reason this
defect was opened was that this appears to be a fairly standard practise among
validators.

Since this came up on the build call today with some questions, let me try to
explain my position again. Builds are supposed to complete as soon as possible
and lock the workspace (stopping the user from doing lots of things). Accessing
the internet is a relatively slow task even with a good connection (e.g. a ping
to a remote server takes the equivalent time as running several thousand lines
of code), so therefore it should never be done as part of a build.

Given that validators currently run as part of the build, there are a couple
solutions:
1) Restrict all validators from accessing the internet.
2) Move validators out of the build.
3) Some sort of hybrid solution. e.g., if a validator needs a schema file it
would start a job and return immediately. The job would download the schema and
then kick off another build.

After talking to Lawrence today, I think an underlying problem here is that
several of the validators have multiple purposes or also act like builders. For
instance, the JSP syntax validator actually reports JSP "compile" errors similar
to other language builders. In cases like this it may make more sense to split
the validator or run part of it as a regular builder instead.
Ok if I understand this correctly, this appears to be an enhancement request as
apposed to a bug.  It sounds like the main issue here is that validators are
slowing builds down by attempting to fetch grammars from the internet and the
suggestion is that we can change our designs to avoid this.

Here's my response to your suggestions..

&gt;&gt; 1) Restrict all validators from accessing the internet.

I'd support a validation preference to disable validators from going of the
internet (by default). This would support a development practise where necessary
grammars are always provided on the local filesystem and if they're not... well
then its probably an error (e.g. the user forget to extract some required
grammars).  If our validators encountered referenced resources that could only
be obtained by going off to the internet, we could skip validation and 
optionally produce an error or warning message on the artifact.  

Here's the prefences I propose.  I think (b.2) would be a reasonable default.

  retrieve remote resources from the internet when required
  (a) yes
  (b) no 
     (b.1) references to remote resources should be treated as errors
     (b.2) references to remote resources should be treated as warnings 
     (b.3) references to remote resources should be ignored

&gt;&gt; 2) Move validators out of the build.

Hmm.. we've talked about this in the past (should validators really be builders
or just resource listeners).  Different users have different view points here. 
Some users have builders to codegen Java code from their XML.  This is a usecase
where users expect validation to be run along with their codegen builders (they
only want to codegen if the file is valid). 

&gt;&gt;3) Some sort of hybrid solution. e.g., if a validator needs a schema file it
&gt;&gt; would start a job and return immediately. The job would download the schema
&gt;&gt;and then kick off another build.

Yuck! Sounds spooky.

I'm marking this as a P1 enhancement request.  Tim, do you think the solution I
propose for (1) would solve the issue as you see it?

One additional thing to consider is that XML artifacts such as XML Schemas are
also used in other models and editors that are unrelated to our validators. 
Should other tools abide by these same preferences in a consistent manner?  

I have a feeling that the underlying issue here relates to fact that XML's lofty
'distributed' design is colliding with _real_ software development practices
where everything required at development time is made available on a local
filesystem.
I've opened bug 112970 to propose the development mode which I believe Tim and
several others are seeking.  Tim, let me know if this proposal will satisfy the
issues that you describe in this defect.

If there's a more fundamental issue related to separating validators and builds
I'd like to understand that too.
Yup, 112970 should cover this and I've added some comments there. Comment 1)
above does not cover it alone, because I'm the kind of user that is sometimes
connected and sometimes not. I have no problem with the tools being able to use
an internet connection when it is available to provide better support or cache
resources for future use - my main problem is just in the numerous performance
problems we've seen in these cases when not connected, and the fact that this
happens during the build.

If the performance and usability problems are fixed, the issue with validators
running as builders will be less of an issue and maybe even a moot point. The
main problem from my perspective is that builders must be fast, and internet
connections are slow. We should never mix the two, so if validators are running
as part of the build then they should never access the internet.
Wasn't Validation moving away from being done using a builder at one point?
We started discussing this. I believe Vijay had some concerns with this
approach. We need to visit this when we speak about the validation framework,
how it is structured, how we'd like it to be structured, and all of this wrt the
API it will define.
Just renaming this (again) to distinguish it from bug 112970.  
Here's an alternative (to running validators in the build) that I can think of 

- have a separate 'validate' operation that triggers the validation of resources
  (insteady of piggy backing on 'build')
- continue to use the 'clean' operation to remove validation problems
- use a resource change listener to (optionally) revalidate changed resources

It's interesting though, if we were to add something like XML Schema -&gt; Java
code generation into the picture we'd probably want to keep validation as part
of the build to preceed code generation.  If a file doesn't validate, its
probably not worth generating code for it.  In this sense validator + code
generator = compiler.  

Any thoughts?  
Isn't the right conceptual design point to better build in user's choices? 
Granted, we might have different defaults and/or recommendations. 

But seems an easy first step is to be able to set validators to run 
  1. Only When requested
  2. During Builds
  3. During Resource Changes
  4. While typing
The later three would not need to be mutually exclusive
(some might want to run all, when typing, when resources changes, and when doing
a build). (And we could highly recommend they really don't want to validate a
whole EAR evertime they type .. but .. I could imagine someday even that will be
fast enough some users might want it (incrementally, at least). 

And, I agree with Craig, we need a "Dependent Operations" API (Similar to Tim's
DependentJob API).  I suspect some validators would use this narrowly (e.g. do
ValidationEJB operation, if and only if validate web.xml file validates as XML),
but other broder ones (e.g. do code gen if and only if all schema validate)  



I see that it was created to be a separate bug, but isn't this bug just a
specific use case for bug 112970?
In response to Craig's comments in 12,

We discussed using a resource change listener. Again, I think Vijay had some
concerns. I'd like to see validation changed to run in a way disconnected from
the build. If run on resource change events we may be able to drop the idea of a
full validation once we have referenced file validation implemented (probably
tied in with refactoring support).

WRT code generation, will that run as part of the build? If not, it should be
able to check whether any error markers exist on the file before running. This
will prevent validation from having to be run again.

In respone to David's comments in 13,

I don't think we should allow the user the choice of running validation as part
of the build or on resource changes. This seems like added confusion. How will
the typical user know which option to choose? Ideally we pick the best way to
run validation and implement that solution for our users.
Retarget to 1.5
Correct target milestone
I'd like to propose that at least the progress view shows the file that is currently validated, and the URL of the resource that needs to be fetched. The current situation that the build process just hangs forever because of an unresponsive server is not really acceptable.

It would be great if this very simple enhancement could make it into 1.0.
changing target from 1.5 M1 to 1.5 M5 to reflect new numbering system as we join Collisto. 
We will address this in 1.5M6
Given the fact that we now have support to configure validators to run as a part of the build or not (via manual invocation) I'm reducing the priority of this bug. 

Tim, given the valdiator config preferences what problems do you feel remain unaddressed?  
Just to relate the importance of this, I'll document a funny antidote here. 

While the details have not been tracked down, yet, (and may not be possible to track down completely) I've recently been made aware that occasionally the w3c.org web site detects possible "DoS attacks" on their site, and hence blocks certain IP address from access for a certain period of time to prevent "thousands of requests" for certain schemas and dtds from swamping their site. 

Some of these IP addresses led back to some IBM sites, and some of those were related to an IBM sub net on which I sometimes run "local builds" and JUnit tests. 

While it's not necessarily my machine, and while there are other possible causes, one might be that our JUnit tests end up making thousands of requests for schemas, in the course of a few minutes, instead of using cached versions. 

Another possible cause is someone using some old, buggy version of WTP when I think we did have known bugs where the cached version was not used. 

And, note, this is not always an obvious bug ... in some cases, for example, Xerces itself will access the internet version, unless clients go to extra work to prevent it. 

If I learn specific details, I'll open specific bugs (or add to this one) I just thought it was worth noting here that this sometimes goes beyond a simple WTP performance issue!  



I'm going to mark this as 'fixed' as I think all the major issues/abuses have been resolved. I've recently looked at http access logs from running junit tests, and there's only a few "fishy" looking cases. I'll open specific bugs on those but don't seem related to validators. There still many accesses for some tests, ... such as wsi ... but think that's intentional for those cases. 

Please reopen if I've misunderstood.
I opened bug 296545 and bug 296544 to document cases I've seen recently.
Closing.</WithStack>
    <WithOutStack>Opening against this component for lack of a better place.

It looks like several validators currently access the internet during
validation. I assume that this is due to the fact that schema files are not
present in the workspace and they need to be cached, but this should never
happen as part of normal validation. Since validation occurs within during
builds *there should be no internet access*.

Going to the internet is many times slower than local processing at the best of
times, and this leads to problems when the machine is disconnected, the schema
is not available, timeouts, etc. Builds should be quick, so this causes severe
performance issues. There are many ways around this - doing minimal validation
until the schema are present, kicking off a background job to download the
schema and then rerun validation, etc.
Hi Craig,   Push this if its not you, but the XML validator does the actual
schema validation......  
Actually the XML validation retieves an appropiate DTD file according to the 
in DOCTYPE defined URL. It seems for me to be an advantage but not with the 
jail-like or wrong dimensioned firewalling. 

For such cases a checkbox "Do not retreive external resources" in the 
Preferences/Validation can introduce a desirable denying of the full DTD based 
validation.
Dropping to major.
For those experiencing 'going of to the internet' kinds of problems, it would be
helful to utilize the "HTTP Connection Tracer" utility that's attached to bug
109788.  It's really easy to use and it'll provide a stack trace to help
diagnose the problems.  Once we have a stack it's usually much easier to
identify the offending code and fix it.
If we agree that this is bad behaviour and there was just a validator or two
that accessed the internet, I'd go off and run this tool. The main reason this
defect was opened was that this appears to be a fairly standard practise among
validators.

Since this came up on the build call today with some questions, let me try to
explain my position again. Builds are supposed to complete as soon as possible
and lock the workspace (stopping the user from doing lots of things). Accessing
the internet is a relatively slow task even with a good connection (e.g. a ping
to a remote server takes the equivalent time as running several thousand lines
of code), so therefore it should never be done as part of a build.

Given that validators currently run as part of the build, there are a couple
solutions:
1) Restrict all validators from accessing the internet.
2) Move validators out of the build.
3) Some sort of hybrid solution. e.g., if a validator needs a schema file it
would start a job and return immediately. The job would download the schema and
then kick off another build.

After talking to Lawrence today, I think an underlying problem here is that
several of the validators have multiple purposes or also act like builders. For
instance, the JSP syntax validator actually reports JSP "compile" errors similar
to other language builders. In cases like this it may make more sense to split
the validator or run part of it as a regular builder instead.
Ok if I understand this correctly, this appears to be an enhancement request as
apposed to a bug.  It sounds like the main issue here is that validators are
slowing builds down by attempting to fetch grammars from the internet and the
suggestion is that we can change our designs to avoid this.

Here's my response to your suggestions..

&gt;&gt; 1) Restrict all validators from accessing the internet.

I'd support a validation preference to disable validators from going of the
internet (by default). This would support a development practise where necessary
grammars are always provided on the local filesystem and if they're not... well
then its probably an error (e.g. the user forget to extract some required
grammars).  If our validators encountered referenced resources that could only
be obtained by going off to the internet, we could skip validation and 
optionally produce an error or warning message on the artifact.  

Here's the prefences I propose.  I think (b.2) would be a reasonable default.

  retrieve remote resources from the internet when required
  (a) yes
  (b) no 
     (b.1) references to remote resources should be treated as errors
     (b.2) references to remote resources should be treated as warnings 
     (b.3) references to remote resources should be ignored

&gt;&gt; 2) Move validators out of the build.

Hmm.. we've talked about this in the past (should validators really be builders
or just resource listeners).  Different users have different view points here. 
Some users have builders to codegen Java code from their XML.  This is a usecase
where users expect validation to be run along with their codegen builders (they
only want to codegen if the file is valid). 

&gt;&gt;3) Some sort of hybrid solution. e.g., if a validator needs a schema file it
&gt;&gt; would start a job and return immediately. The job would download the schema
&gt;&gt;and then kick off another build.

Yuck! Sounds spooky.

I'm marking this as a P1 enhancement request.  Tim, do you think the solution I
propose for (1) would solve the issue as you see it?

One additional thing to consider is that XML artifacts such as XML Schemas are
also used in other models and editors that are unrelated to our validators. 
Should other tools abide by these same preferences in a consistent manner?  

I have a feeling that the underlying issue here relates to fact that XML's lofty
'distributed' design is colliding with _real_ software development practices
where everything required at development time is made available on a local
filesystem.
I've opened bug 112970 to propose the development mode which I believe Tim and
several others are seeking.  Tim, let me know if this proposal will satisfy the
issues that you describe in this defect.

If there's a more fundamental issue related to separating validators and builds
I'd like to understand that too.
Yup, 112970 should cover this and I've added some comments there. Comment 1)
above does not cover it alone, because I'm the kind of user that is sometimes
connected and sometimes not. I have no problem with the tools being able to use
an internet connection when it is available to provide better support or cache
resources for future use - my main problem is just in the numerous performance
problems we've seen in these cases when not connected, and the fact that this
happens during the build.

If the performance and usability problems are fixed, the issue with validators
running as builders will be less of an issue and maybe even a moot point. The
main problem from my perspective is that builders must be fast, and internet
connections are slow. We should never mix the two, so if validators are running
as part of the build then they should never access the internet.
Wasn't Validation moving away from being done using a builder at one point?
We started discussing this. I believe Vijay had some concerns with this
approach. We need to visit this when we speak about the validation framework,
how it is structured, how we'd like it to be structured, and all of this wrt the
API it will define.
Just renaming this (again) to distinguish it from bug 112970.  
Here's an alternative (to running validators in the build) that I can think of 

- have a separate 'validate' operation that triggers the validation of resources
  (insteady of piggy backing on 'build')
- continue to use the 'clean' operation to remove validation problems
- use a resource change listener to (optionally) revalidate changed resources

It's interesting though, if we were to add something like XML Schema -&gt; Java
code generation into the picture we'd probably want to keep validation as part
of the build to preceed code generation.  If a file doesn't validate, its
probably not worth generating code for it.  In this sense validator + code
generator = compiler.  

Any thoughts?  
Isn't the right conceptual design point to better build in user's choices? 
Granted, we might have different defaults and/or recommendations. 

But seems an easy first step is to be able to set validators to run 
  1. Only When requested
  2. During Builds
  3. During Resource Changes
  4. While typing
The later three would not need to be mutually exclusive
(some might want to run all, when typing, when resources changes, and when doing
a build). (And we could highly recommend they really don't want to validate a
whole EAR evertime they type .. but .. I could imagine someday even that will be
fast enough some users might want it (incrementally, at least). 

And, I agree with Craig, we need a "Dependent Operations" API (Similar to Tim's
DependentJob API).  I suspect some validators would use this narrowly (e.g. do
ValidationEJB operation, if and only if validate web.xml file validates as XML),
but other broder ones (e.g. do code gen if and only if all schema validate)  



I see that it was created to be a separate bug, but isn't this bug just a
specific use case for bug 112970?
In response to Craig's comments in 12,

We discussed using a resource change listener. Again, I think Vijay had some
concerns. I'd like to see validation changed to run in a way disconnected from
the build. If run on resource change events we may be able to drop the idea of a
full validation once we have referenced file validation implemented (probably
tied in with refactoring support).

WRT code generation, will that run as part of the build? If not, it should be
able to check whether any error markers exist on the file before running. This
will prevent validation from having to be run again.

In respone to David's comments in 13,

I don't think we should allow the user the choice of running validation as part
of the build or on resource changes. This seems like added confusion. How will
the typical user know which option to choose? Ideally we pick the best way to
run validation and implement that solution for our users.
Retarget to 1.5
Correct target milestone
I'd like to propose that at least the progress view shows the file that is currently validated, and the URL of the resource that needs to be fetched. The current situation that the build process just hangs forever because of an unresponsive server is not really acceptable.

It would be great if this very simple enhancement could make it into 1.0.
changing target from 1.5 M1 to 1.5 M5 to reflect new numbering system as we join Collisto. 
We will address this in 1.5M6
Given the fact that we now have support to configure validators to run as a part of the build or not (via manual invocation) I'm reducing the priority of this bug. 

Tim, given the valdiator config preferences what problems do you feel remain unaddressed?  
Just to relate the importance of this, I'll document a funny antidote here. 

While the details have not been tracked down, yet, (and may not be possible to track down completely) I've recently been made aware that occasionally the w3c.org web site detects possible "DoS attacks" on their site, and hence blocks certain IP address from access for a certain period of time to prevent "thousands of requests" for certain schemas and dtds from swamping their site. 

Some of these IP addresses led back to some IBM sites, and some of those were related to an IBM sub net on which I sometimes run "local builds" and JUnit tests. 

While it's not necessarily my machine, and while there are other possible causes, one might be that our JUnit tests end up making thousands of requests for schemas, in the course of a few minutes, instead of using cached versions. 

Another possible cause is someone using some old, buggy version of WTP when I think we did have known bugs where the cached version was not used. 

And, note, this is not always an obvious bug ... in some cases, for example, Xerces itself will access the internet version, unless clients go to extra work to prevent it. 

If I learn specific details, I'll open specific bugs (or add to this one) I just thought it was worth noting here that this sometimes goes beyond a simple WTP performance issue!  



I'm going to mark this as 'fixed' as I think all the major issues/abuses have been resolved. I've recently looked at http access logs from running junit tests, and there's only a few "fishy" looking cases. I'll open specific bugs on those but don't seem related to validators. There still many accesses for some tests, ... such as wsi ... but think that's intentional for those cases. 

Please reopen if I've misunderstood.
I opened bug 296545 and bug 296544 to document cases I've seen recently.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110619" />
    <CreationDate amount="2005-09-26 11:38:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>J2EE Project Wizard throws NPE at Finish</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437330581676">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:357)</Frame>
          <Frame depth="1">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)</Frame>
          <Frame depth="2">org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)</Frame>
          <Frame depth="3">org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.performFinish(DataModelWizard.java:245)</Frame>
          <Frame depth="4">org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:676)</Frame>
          <Frame depth="5">org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:349)</Frame>
          <Frame depth="6">org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:844)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3058)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2691)</Frame>
          <Frame depth="12">org.eclipse.jface.window.Window.runEventLoop(Window.java:809)</Frame>
          <Frame depth="13">org.eclipse.jface.window.Window.open(Window.java:787)</Frame>
          <Frame depth="14">org.eclipse.wst.common.navigator.internal.actions.WizardShortcutAction.run(WizardShortcutAction.java:114)</Frame>
          <Frame depth="15">org.eclipse.jface.action.Action.runWithEvent(Action.java:996)</Frame>
          <Frame depth="16">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:844)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3058)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2691)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1716)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1680)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:365)</Frame>
          <Frame depth="26">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="28">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="31">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="33">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="34">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437330581676">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.wst.common.frameworks.internal.operations.ProjectCreationOperation.execute(ProjectCreationOperation.java:42)</Frame>
          <Frame depth="1">org.eclipse.jst.common.jdt.internal.integration.JavaProjectCreationOperation.execute(JavaProjectCreationOperation.java:43)</Frame>
          <Frame depth="2">org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.execute(ExtendableOperationImpl.java:89)</Frame>
          <Frame depth="3">org.eclipse.jst.j2ee.application.internal.operations.FlexibleProjectCreationOperation.createProject(FlexibleProjectCreationOperation.java:49)</Frame>
          <Frame depth="4">org.eclipse.jst.j2ee.application.internal.operations.FlexibleProjectCreationOperation.execute(FlexibleProjectCreationOperation.java:30)</Frame>
          <Frame depth="5">org.eclipse.jst.j2ee.application.internal.operations.FlexibleJavaProjectCreationOperation.execute(FlexibleJavaProjectCreationOperation.java:38)</Frame>
          <Frame depth="6">org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.execute(ExtendableOperationImpl.java:89)</Frame>
          <Frame depth="7">org.eclipse.wst.common.componentcore.internal.operation.ComponentCreationOperation.createProjectIfNeeded(ComponentCreationOperation.java:77)</Frame>
          <Frame depth="8">org.eclipse.wst.common.componentcore.internal.operation.ComponentCreationOperation.execute(ComponentCreationOperation.java:44)</Frame>
          <Frame depth="9">org.eclipse.jst.j2ee.application.internal.operations.EARComponentCreationOperation.execute(EARComponentCreationOperation.java:85)</Frame>
          <Frame depth="10">org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.execute(ExtendableOperationImpl.java:89)</Frame>
          <Frame depth="11">org.eclipse.wst.common.frameworks.internal.ui.RunnableOperationWrapper.run(RunnableOperationWrapper.java:32)</Frame>
          <Frame depth="12">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Clicking 'Finish' in the project wizard for a J2EE project (happened w/ a
Dynamic Web Project, an Enterprise App Project, and Ejb Project) throws up a
dialog that there was an error (stack trace follows).  Nothing gets created. 

Stack Trace:
java.lang.reflect.InvocationTargetException
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:357)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)
	at
org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.performFinish(DataModelWizard.java:245)
	at org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:676)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:349)
	at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:844)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3058)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2691)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:809)
	at org.eclipse.jface.window.Window.open(Window.java:787)
	at
org.eclipse.wst.common.navigator.internal.actions.WizardShortcutAction.run(WizardShortcutAction.java:114)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:996)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:844)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3058)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2691)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1716)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1680)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:365)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)
Caused by: java.lang.NullPointerException
	at
org.eclipse.wst.common.frameworks.internal.operations.ProjectCreationOperation.execute(ProjectCreationOperation.java:42)
	at
org.eclipse.jst.common.jdt.internal.integration.JavaProjectCreationOperation.execute(JavaProjectCreationOperation.java:43)
	at
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.execute(ExtendableOperationImpl.java:89)
	at
org.eclipse.jst.j2ee.application.internal.operations.FlexibleProjectCreationOperation.createProject(FlexibleProjectCreationOperation.java:49)
	at
org.eclipse.jst.j2ee.application.internal.operations.FlexibleProjectCreationOperation.execute(FlexibleProjectCreationOperation.java:30)
	at
org.eclipse.jst.j2ee.application.internal.operations.FlexibleJavaProjectCreationOperation.execute(FlexibleJavaProjectCreationOperation.java:38)
	at
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.execute(ExtendableOperationImpl.java:89)
	at
org.eclipse.wst.common.componentcore.internal.operation.ComponentCreationOperation.createProjectIfNeeded(ComponentCreationOperation.java:77)
	at
org.eclipse.wst.common.componentcore.internal.operation.ComponentCreationOperation.execute(ComponentCreationOperation.java:44)
	at
org.eclipse.jst.j2ee.application.internal.operations.EARComponentCreationOperation.execute(EARComponentCreationOperation.java:85)
	at
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.execute(ExtendableOperationImpl.java:89)
	at
org.eclipse.wst.common.frameworks.internal.ui.RunnableOperationWrapper.run(RunnableOperationWrapper.java:32)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)
	... 38 more
Could not reproduce with 9/23 build, please try with the latest build

This bug was moved to 'closed' state, since it is so old and since it is a dup, worksforme, invalid bug that its unlikely to still be useful or need further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error.</WithStack>
    <WithOutStack>Clicking 'Finish' in the project wizard for a J2EE project (happened w/ a
Dynamic Web Project, an Enterprise App Project, and Ejb Project) throws up a
dialog that there was an error (stack trace follows).  Nothing gets created. 

Stack Trace:


	... 38 more
Could not reproduce with 9/23 build, please try with the latest build

This bug was moved to 'closed' state, since it is so old and since it is a dup, worksforme, invalid bug that its unlikely to still be useful or need further attention. Feel free to re-open, or open a new bug, if this semi-automatic processing was done in error.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110620" />
    <CreationDate amount="2005-09-26 11:47:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Chart" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Can Chart dialogs be made available ?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Standalone Development

We are trying to develop a standalone application which will output a BIRT
'.rptdesign' file. As creating charts in particular requires the user to choose
or set a large number of parameters, would it be possible to add the chart
creation dialog to the API so that other plugins or applications may use it and
thus avoid re-inventing the wheel ?

In truth all of the various dialogs, data source, data set etc would be useful
additions to the API or pluggin set for anyone embedding BIRT into their own
project.

Regards,

Brian Compston
The chart wizard is already reusable outside of BIRT. We need to clean up the 
Eclipse dependencies and provide a documentation/example to explain how to use 
the chart wizard as a standalone builder.
Added a simple chart wizard launcher in package "org.eclipse.birt.chart.examples.builder". Users needs to add VM arguments and specify swt.jar to launch the chart builder according to standalone or eclipse mode.
Verified</WithStack>
    <WithOutStack>Standalone Development

We are trying to develop a standalone application which will output a BIRT
'.rptdesign' file. As creating charts in particular requires the user to choose
or set a large number of parameters, would it be possible to add the chart
creation dialog to the API so that other plugins or applications may use it and
thus avoid re-inventing the wheel ?

In truth all of the various dialogs, data source, data set etc would be useful
additions to the API or pluggin set for anyone embedding BIRT into their own
project.

Regards,

Brian Compston
The chart wizard is already reusable outside of BIRT. We need to clean up the 
Eclipse dependencies and provide a documentation/example to explain how to use 
the chart wizard as a standalone builder.
Added a simple chart wizard launcher in package "org.eclipse.birt.chart.examples.builder". Users needs to add VM arguments and specify swt.jar to launch the chart builder according to standalone or eclipse mode.
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110621" />
    <CreationDate amount="2005-09-26 11:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>SWT should be type-safe</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="functiondef">
        <location start="2959" end="3088" />
        <code>AccessController.doPrivileged(new PrivilegedAction() {
   public Object run() {
    os = new OS();
    return null;
   }   
  }</code>
      </source_code>
      <source_code type="assignment">
        <location start="3767" end="3779" />
        <code>GC gc = ...;</code>
      </source_code>
      <source_code type="assignment">
        <location start="3780" end="3796" />
        <code>Font font = ...;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3797" end="3814" />
        <code>gc.setFont(font);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3815" end="3830" />
        <code>font.dispose();</code>
      </source_code>
      <source_code type="assignment">
        <location start="10989" end="11030" />
        <code>2. Create "static OSCall OS = new OS()..;</code>
      </source_code>
      <source_code type="assignment">
        <location start="11815" end="11856" />
        <code>2. Create "static OSCall OS = new OS()..;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="56">
        <Lines>
          <Line>1. The native layer (OS.java and friends) is exposed for everyone to use. This</Line>
          <Line>is something I'm able to tolerate as otherwise probably we need tons of</Line>
          <Line>abstractions or something related to C++'s "friend" construct in order to</Line>
          <Line>cross package-level boundaries and still preserve private visibility. Note</Line>
          <Line>that there is already a JSR which is supposed to bring a similar facility to</Line>
          <Line>Java. The main problem with the exposed native layer is that everyone is able</Line>
          <Line>to call a static function in OS.java with bogus parameters provided, thus</Line>
          <Line>crashing the JVM process. If this is remedied somehow, the exposure</Line>
          <Line>of "support" structures like LOGFONT, LOGPEN, BITMAP etc. should not be a</Line>
          <Line>problem: the important thing to grok here is that user may create and change</Line>
          <Line>these as he wills, but as long as he is not allowed to directly call functions</Line>
          <Line>of OS.java, he can't crash the JVM, as OS.java represents the "code" of the</Line>
          <Line>operating system, whiule everything else is the "data".</Line>
          <Line />
          <Line>One way OS.java can be protected is by a) marking all natives as package</Line>
          <Line>protected or private and b) creating non-static public wrapper functions for</Line>
          <Line>all the natives. Note that in some X11 ports this is already done (module non-</Line>
          <Line>static) due to the need to lock the calls going into into XLIB.</Line>
          <Line />
          <Line>What are these non-static wrappers going to buy us? Well, if the primary</Line>
          <Line>interface of OS.java becomes non-static, then the constructor of OS.java can</Line>
          <Line>be protected by doing a permission check with AccessController and friends and</Line>
          <Line>throwing exception if the caller's stack does not have enough permissions. The</Line>
          <Line>usage pattern of OS.java from within SWT would be like this:</Line>
          <Line />
          <Line>In the base class of every SWT, package needing native access, i.e. in</Line>
          <Line>Widget.java, Resource.java, Printer.java, etc:</Line>
          <Line />
          <Line>&lt;snip&gt;</Line>
          <Line>static OS os;</Line>
          <Line />
          <Line>static {</Line>
          <Line>);</Line>
          <Line />
          <Line>}</Line>
          <Line>&lt;/snip&gt;</Line>
          <Line />
          <Line>and then all calls to functions in OS in all classes should be prefixed not</Line>
          <Line>with "OS." but with "os."</Line>
          <Line />
          <Line>Note that protecting only the constructor is a) sufficient and b) give</Line>
          <Line>significant performance advantage, as security checks should not be done on</Line>
          <Line>every OS API call; not to mention that having to do the doPrivileged() thing</Line>
          <Line>all the time is inconvenient, at best.</Line>
          <Line />
          <Line>2. public int Control.handle</Line>
          <Line />
          <Line>This is also dangerous, as user is free to change the handle of the control to</Line>
          <Line>bogus value, at will. This can be remedied by instead providing:</Line>
          <Line>public int Control.handle()</Line>
          <Line />
          <Line>3. Resource tracking.</Line>
          <Line />
          <Line>This is nasty. Here's a sample of the problem:</Line>
          <Line />
          <Line>&lt;snip&gt;</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="26">
        <Lines>
          <Line>- GC throws exception immediately when a font being selected in it is</Line>
          <Line>disposed; BUT this will break</Line>
          <Line>code in Eclipse; In my resource tracker I receive tons of warnings coming from</Line>
          <Line>Eclipse for cases where</Line>
          <Line>the font is disposed first and afterwards the GC where the font is selected is</Line>
          <Line>disposed as well.</Line>
          <Line>- GC throws exception when text-related operation is called. BUT this may</Line>
          <Line>become even more complex</Line>
          <Line>than the selection of default font, as you need to know what part of GC can be</Line>
          <Line>safely called as it</Line>
          <Line>will not need valid font.</Line>
          <Line />
          <Line>What I cannot agree with, is that having OS type-safe and no resource tracking</Line>
          <Line>at all is a good solution.</Line>
          <Line>It may be a good start, but in the end, code based security is all-or-nothing.</Line>
          <Line>It is one thing to miss code</Line>
          <Line>protection here and there, and then fix these as-you-go, and another when you</Line>
          <Line>have a whole concept, like</Line>
          <Line>resource selection, which is not type-safe at all.</Line>
          <Line />
          <Line />
          <Line>&gt; There is the further problem of Custom Controls that can have their own</Line>
          <Line>concept of default font.</Line>
          <Line />
          <Line>For all-Java custom controls I don't see the problem at all. Do you?</Line>
          <Line>For native custom controls, user should do the resource tracking thing as well.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>I'm not sure whether "type-safe" is the apropriate term here. In the email 
discussion with Steve Northover that I'll paste below, I've called this 
feature "Sandboxed SWT", which sounded equally silly. The basic idea however, 
is to ensure that users cannot easily call SWT internals that will crash the 
whole JVM.

Here's the original email I've send to platform-swt-dev, the responses will be 
written in the following comments:

===

Inspired by some constructive criticism on a well known Java forum, I'm 
recently thinking of how much effort it would be to achieve code based 
security in SWT. I will use my SWT/Fox port as a playground. 
 
Your thoughts on the following questions are very welcome:
 
Would it be useful? Perhaps, yes. SWT is probably the single Java API that 
currently cannot be sandboxed due to the exposure of various "crash-friendly" 
things like OS.java, Control.handle, etcetera.
 
Would this be easy to achieve, without sacrificing the simplicity of the code 
and without the need for total rework of the SWT internals? Perhaps, yes. 
Please, read on.
 
My plan is as follows:
There are several main sources of crashes in SWT:
 
1. The native layer (OS.java and friends) is exposed for everyone to use. This 
is something I'm able to tolerate as otherwise probably we need tons of 
abstractions or something related to C++'s "friend" construct in order to 
cross package-level boundaries and still preserve private visibility. Note 
that there is already a JSR which is supposed to bring a similar facility to 
Java. The main problem with the exposed native layer is that everyone is able 
to call a static function in OS.java with bogus parameters provided, thus 
crashing the JVM process. If this is remedied somehow, the exposure 
of "support" structures like LOGFONT, LOGPEN, BITMAP etc. should not be a 
problem: the important thing to grok here is that user may create and change 
these as he wills, but as long as he is not allowed to directly call functions 
of OS.java, he can't crash the JVM, as OS.java represents the "code" of the 
operating system, whiule everything else is the "data".
 
One way OS.java can be protected is by a) marking all natives as package 
protected or private and b) creating non-static public wrapper functions for 
all the natives. Note that in some X11 ports this is already done (module non-
static) due to the need to lock the calls going into into XLIB.
 
What are these non-static wrappers going to buy us? Well, if the primary 
interface of OS.java becomes non-static, then the constructor of OS.java can 
be protected by doing a permission check with AccessController and friends and 
throwing exception if the caller's stack does not have enough permissions. The 
usage pattern of OS.java from within SWT would be like this:
 
In the base class of every SWT, package needing native access, i.e. in 
Widget.java, Resource.java, Printer.java, etc:
 
&lt;snip&gt;
static OS os;
 
static {
  AccessController.doPrivileged(new PrivilegedAction() {
   public Object run() {
    os = new OS();
    return null;
   }   
  });
    
}
&lt;/snip&gt;
 
and then all calls to functions in OS in all classes should be prefixed not 
with "OS." but with "os."
 
Note that protecting only the constructor is a) sufficient and b) give 
significant performance advantage, as security checks should not be done on 
every OS API call; not to mention that having to do the doPrivileged() thing 
all the time is inconvenient, at best.
 
2. public int Control.handle
 
This is also dangerous, as user is free to change the handle of the control to 
bogus value, at will. This can be remedied by instead providing:
public int Control.handle()
 
3. Resource tracking.
 
This is nasty. Here's a sample of the problem:
 
&lt;snip&gt;
GC gc = ...;
Font font = ...;
gc.setFont(font);
font.dispose();
gc.drawString("test"); // &lt;-- Crash on platforms based on Toolkits like Fox or 
probably even GTK+, or weird output on Win32
&lt;/snip&gt;
 
The problem here is that after the disposal of the Font instance, there is no 
valid Font object selected in the GC. In SWT ports wrapping toolkits where 
Font is represented by a C++ object, this means that the C++ GC class will try 
to access the C++ Font class, which is already free-d, which leads to memory 
corruption and possible GPF.
 
The best thing for solving this I've come so far is some sort of resource 
tracking utility class. The "selection" of every SWT object in another SWT 
object is tracked there. When the selected object is disposed, the "selector" 
object is signalled so that it has can switch to using another font handle, 
usually the default system one which cannot be freed anyway.
 
 
That's it. I know I've missed a tons of stuff. For one thing I haven't covered 
how in this framework a costom "native" control is supposed to receive native 
callbacks (WM_* on win32).
(Steve's followup:)

===

All of these ideas are excellent and match my current thinking with the 
exception of the resource tracking one. 

The "instance of OS" is a good idea however, I'd probably rename the OS class 
to OSCall or something like that and name the instance OS so that less code 
would change.  Methods that are static final native are highly optimized by 
some JIT's, so we'd be a bit slower. 

In order to get rid of Control.handle(), we'd instead add a method something 
like Widget.getHandleData() (*** insert better name here ***).  This would be 
a class that was platform specific.  On Windows, it could include a field that 
was the HWND and on platforms with multiple handles or wierd clipping (such as 
the Mac), it would return more internal widget "handle" information.  However, 
it would make things somewhat slower. 

Although it is technically feasible, the number of code changes to catch every 
possible place and the overhead in doing this would be prohibitive.  For 
example, disposing a font that is in use would require us to keep a list of 
every place the font is used (both widgets and graphics) and set a default 
system font.  However, setting a font in a widget can cause a redraw, redraws 
cause paint events and behavior is changed.  There is the further problem of 
Custom Controls that can have their own concept of default font. 

Doing any of this work would break binary compatibility, something that SWT 
has not done since version 1.0. 

(My followup to his followup:)

&gt; The "instance of OS" is a good idea however, 
&gt; I'd probably rename the OS class to OSCall or something like that 
&gt; and name the instance OS so that less code would change.  Methods 
&gt; that are static final native are highly optimized by some JIT's, 
&gt; so we'd be a bit slower. 
 
The OSCall-being-the-class and OS-being-the-instance idea will generate 
tons of warnings from ECJ for the static final ints you have in OS 
(like, "you are using a constant through nonstatic instance").
 
&gt; In order to get rid of Control.handle(), we'd instead add a method something 
like 
&gt; Widget.getHandleData() (*** insert better name here ***).  This would be a 
class 
&gt; that was platform specific.  On Windows, it could include a field that was 
the HWND 
&gt; and on platforms with multiple handles or wierd clipping (such as the Mac), 
it would 
&gt; return more internal widget "handle" information.  However, it would make 
things 
&gt; somewhat slower. 
 
That sounds like a good plan. Within org.eclipse.swt.widgets.* the handles can 
be accessed 
directly so no performance hit. In org.eclipse.swt.graphics you have GCData 
anyway, so no 
performance hit there as well. As for org.eclipse.swt.dnd, I doubt there will 
be a huge 
performance hit either.
 
Some other "unsafe" things:
 
Drawable.internal_new_GC(GCData data)
Drawable.internal_dispose_GC(int handle, GCData data)
 
I've rewritten these as 
Drawable.internal_new_GC(OS os, GCData data)
Drawable.internal_dispose_GC(OS os, int handle, GCData data)
 
.. where the caller is supposed to provide non-null os object. The "OS os" 
thing here is 
a proof that the caller has enough permissions to call internal stuff: if he 
can "new" 
the OS class, then, presumably, he can call the internal methods outside OS. 
This technique 
can be re-applied to other cases too, like Font.internal_new(OS os, Device 
device, long handle) 
etc.
 
&gt; Although it is technically feasible, the number of code changes to catch 
every possible 
&gt; place and the overhead in doing this would be prohibitive.  
 
I'm not sure whether you are referring here the "OS os" thing or the resource 
management.
For the first, I agree that it would break binary compatibility, but I doubt 
it will have 
performance overhead or it will be too much work.
 
 
&gt; For example, disposing a font that is in use would require us to keep a list 
of every 
&gt; place the font is used (both widgets and graphics) and set a default system 
font.  
&gt; However, setting a font in a widget can cause a redraw, redraws cause paint 
events and 
&gt; behavior is changed.  
 
I agree. I've thought a bit for strategies alternative to selecting the 
default system font, like:
- GC throws exception immediately when a font being selected in it is 
disposed; BUT this will break 
code in Eclipse; In my resource tracker I receive tons of warnings coming from 
Eclipse for cases where 
the font is disposed first and afterwards the GC where the font is selected is 
disposed as well.
- GC throws exception when text-related operation is called. BUT this may 
become even more complex 
than the selection of default font, as you need to know what part of GC can be 
safely called as it 
will not need valid font.
 
What I cannot agree with, is that having OS type-safe and no resource tracking 
at all is a good solution. 
It may be a good start, but in the end, code based security is all-or-nothing. 
It is one thing to miss code 
protection here and there, and then fix these as-you-go, and another when you 
have a whole concept, like 
resource selection, which is not type-safe at all.
 
 
&gt; There is the further problem of Custom Controls that can have their own 
concept of default font. 
 
For all-Java custom controls I don't see the problem at all. Do you?
For native custom controls, user should do the resource tracking thing as well.

Not sure I quite follow the "OSCall-being-the-class and OS-being-the-instance" 
problem.  The static final methods will all become final methods and OS will 
become an instance of OSCall (or some such name, maybe we should use platform 
specific names for the class Win32, GTK, Carbon, Photon, Motif?).

Anyways, given that these changes break API, they could not be made lightly.
&gt; Not sure I quite follow the "OSCall-being-the-class and 
&gt; OS-being-the-instance" problem.  The static final methods 
&gt; will all become final methods and OS will become an instance 
&gt; of OSCall (or some such name, maybe we should use platform 
&gt; specific names for the class Win32, GTK, Carbon, Photon, Motif?).

OK, here I go again; your plan is to:
1. Rename OS to OSCall.
2. Create "static OSCall OS = new OS()..;


&gt; (or some such name, maybe we should use platform 
&gt; specific names for the class Win32, GTK, Carbon, Photon, Motif?).

I use "Fox" :)



It will work. BUT: every time in the code where you currently 
have "OS.WM_PAINT", you'll get a warning from ECJ that you reference "static 
final int" through nonstatic class instance.



Sorry I messed up the order of my responses in the previous comment. Again:

&gt; Not sure I quite follow the "OSCall-being-the-class and 
&gt; OS-being-the-instance" problem.  The static final methods 
&gt; will all become final methods and OS will become an instance 
&gt; of OSCall (or some such name, maybe we should use platform 
&gt; specific names for the class Win32, GTK, Carbon, Photon, Motif?).

OK, here I go again; your plan is to:
1. Rename OS to OSCall.
2. Create "static OSCall OS = new OS()..;

It will work. BUT: every time in the code where you currently 
have "OS.WM_PAINT", you'll get a warning from ECJ that you reference "static 
final int" through nonstatic class instance.


&gt; (or some such name, maybe we should use platform 
&gt; specific names for the class Win32, GTK, Carbon, Photon, Motif?).

I use "Fox" :)</WithStack>
    <WithOutStack>I'm not sure whether "type-safe" is the apropriate term here. In the email 
discussion with Steve Northover that I'll paste below, I've called this 
feature "Sandboxed SWT", which sounded equally silly. The basic idea however, 
is to ensure that users cannot easily call SWT internals that will crash the 
whole JVM.

Here's the original email I've send to platform-swt-dev, the responses will be 
written in the following comments:

===

Inspired by some constructive criticism on a well known Java forum, I'm 
recently thinking of how much effort it would be to achieve code based 
security in SWT. I will use my SWT/Fox port as a playground. 
 
Your thoughts on the following questions are very welcome:
 
Would it be useful? Perhaps, yes. SWT is probably the single Java API that 
currently cannot be sandboxed due to the exposure of various "crash-friendly" 
things like OS.java, Control.handle, etcetera.
 
Would this be easy to achieve, without sacrificing the simplicity of the code 
and without the need for total rework of the SWT internals? Perhaps, yes. 
Please, read on.
 
My plan is as follows:
There are several main sources of crashes in SWT:
 
1. The native layer (OS.java and friends) is exposed for everyone to use. This 
is something I'm able to tolerate as otherwise probably we need tons of 
abstractions or something related to C++'s "friend" construct in order to 
cross package-level boundaries and still preserve private visibility. Note 
that there is already a JSR which is supposed to bring a similar facility to 
Java. The main problem with the exposed native layer is that everyone is able 
to call a static function in OS.java with bogus parameters provided, thus 
crashing the JVM process. If this is remedied somehow, the exposure 
of "support" structures like LOGFONT, LOGPEN, BITMAP etc. should not be a 
problem: the important thing to grok here is that user may create and change 
these as he wills, but as long as he is not allowed to directly call functions 
of OS.java, he can't crash the JVM, as OS.java represents the "code" of the 
operating system, whiule everything else is the "data".
 
One way OS.java can be protected is by a) marking all natives as package 
protected or private and b) creating non-static public wrapper functions for 
all the natives. Note that in some X11 ports this is already done (module non-
static) due to the need to lock the calls going into into XLIB.
 
What are these non-static wrappers going to buy us? Well, if the primary 
interface of OS.java becomes non-static, then the constructor of OS.java can 
be protected by doing a permission check with AccessController and friends and 
throwing exception if the caller's stack does not have enough permissions. The 
usage pattern of OS.java from within SWT would be like this:
 
In the base class of every SWT, package needing native access, i.e. in 
Widget.java, Resource.java, Printer.java, etc:
 
&lt;snip&gt;
static OS os;
 
static {
  AccessController.doPrivileged(new PrivilegedAction() {
   public Object run() {
    os = new OS();
    return null;
   }   
  });
    
}
&lt;/snip&gt;
 
and then all calls to functions in OS in all classes should be prefixed not 
with "OS." but with "os."
 
Note that protecting only the constructor is a) sufficient and b) give 
significant performance advantage, as security checks should not be done on 
every OS API call; not to mention that having to do the doPrivileged() thing 
all the time is inconvenient, at best.
 
2. public int Control.handle
 
This is also dangerous, as user is free to change the handle of the control to 
bogus value, at will. This can be remedied by instead providing:
public int Control.handle()
 
3. Resource tracking.
 
This is nasty. Here's a sample of the problem:
 
&lt;snip&gt;
GC gc = ...;
Font font = ...;
gc.setFont(font);
font.dispose();
gc.drawString("test"); // &lt;-- Crash on platforms based on Toolkits like Fox or 
probably even GTK+, or weird output on Win32
&lt;/snip&gt;
 
The problem here is that after the disposal of the Font instance, there is no 
valid Font object selected in the GC. In SWT ports wrapping toolkits where 
Font is represented by a C++ object, this means that the C++ GC class will try 
to access the C++ Font class, which is already free-d, which leads to memory 
corruption and possible GPF.
 
The best thing for solving this I've come so far is some sort of resource 
tracking utility class. The "selection" of every SWT object in another SWT 
object is tracked there. When the selected object is disposed, the "selector" 
object is signalled so that it has can switch to using another font handle, 
usually the default system one which cannot be freed anyway.
 
 
That's it. I know I've missed a tons of stuff. For one thing I haven't covered 
how in this framework a costom "native" control is supposed to receive native 
callbacks (WM_* on win32).
(Steve's followup:)

===

All of these ideas are excellent and match my current thinking with the 
exception of the resource tracking one. 

The "instance of OS" is a good idea however, I'd probably rename the OS class 
to OSCall or something like that and name the instance OS so that less code 
would change.  Methods that are static final native are highly optimized by 
some JIT's, so we'd be a bit slower. 

In order to get rid of Control.handle(), we'd instead add a method something 
like Widget.getHandleData() (*** insert better name here ***).  This would be 
a class that was platform specific.  On Windows, it could include a field that 
was the HWND and on platforms with multiple handles or wierd clipping (such as 
the Mac), it would return more internal widget "handle" information.  However, 
it would make things somewhat slower. 

Although it is technically feasible, the number of code changes to catch every 
possible place and the overhead in doing this would be prohibitive.  For 
example, disposing a font that is in use would require us to keep a list of 
every place the font is used (both widgets and graphics) and set a default 
system font.  However, setting a font in a widget can cause a redraw, redraws 
cause paint events and behavior is changed.  There is the further problem of 
Custom Controls that can have their own concept of default font. 

Doing any of this work would break binary compatibility, something that SWT 
has not done since version 1.0. 

(My followup to his followup:)

&gt; The "instance of OS" is a good idea however, 
&gt; I'd probably rename the OS class to OSCall or something like that 
&gt; and name the instance OS so that less code would change.  Methods 
&gt; that are static final native are highly optimized by some JIT's, 
&gt; so we'd be a bit slower. 
 
The OSCall-being-the-class and OS-being-the-instance idea will generate 
tons of warnings from ECJ for the static final ints you have in OS 
(like, "you are using a constant through nonstatic instance").
 
&gt; In order to get rid of Control.handle(), we'd instead add a method something 
like 
&gt; Widget.getHandleData() (*** insert better name here ***).  This would be a 
class 
&gt; that was platform specific.  On Windows, it could include a field that was 
the HWND 
&gt; and on platforms with multiple handles or wierd clipping (such as the Mac), 
it would 
&gt; return more internal widget "handle" information.  However, it would make 
things 
&gt; somewhat slower. 
 
That sounds like a good plan. Within org.eclipse.swt.widgets.* the handles can 
be accessed 
directly so no performance hit. In org.eclipse.swt.graphics you have GCData 
anyway, so no 
performance hit there as well. As for org.eclipse.swt.dnd, I doubt there will 
be a huge 
performance hit either.
 
Some other "unsafe" things:
 
Drawable.internal_new_GC(GCData data)
Drawable.internal_dispose_GC(int handle, GCData data)
 
I've rewritten these as 
Drawable.internal_new_GC(OS os, GCData data)
Drawable.internal_dispose_GC(OS os, int handle, GCData data)
 
.. where the caller is supposed to provide non-null os object. The "OS os" 
thing here is 
a proof that the caller has enough permissions to call internal stuff: if he 
can "new" 
the OS class, then, presumably, he can call the internal methods outside OS. 
This technique 
can be re-applied to other cases too, like Font.internal_new(OS os, Device 
device, long handle) 
etc.
 
&gt; Although it is technically feasible, the number of code changes to catch 
every possible 
&gt; place and the overhead in doing this would be prohibitive.  
 
I'm not sure whether you are referring here the "OS os" thing or the resource 
management.
For the first, I agree that it would break binary compatibility, but I doubt 
it will have 
performance overhead or it will be too much work.
 
 
&gt; For example, disposing a font that is in use would require us to keep a list 
of every 
&gt; place the font is used (both widgets and graphics) and set a default system 
font.  
&gt; However, setting a font in a widget can cause a redraw, redraws cause paint 
events and 
&gt; behavior is changed.  
 
I agree. I've thought a bit for strategies alternative to selecting the 
default system font, like:
- GC throws exception immediately when a font being selected in it is 
disposed; BUT this will break 
code in Eclipse; In my resource tracker I receive tons of warnings coming from 
Eclipse for cases where 
the font is disposed first and afterwards the GC where the font is selected is 
disposed as well.
- GC throws exception when text-related operation is called. BUT this may 
become even more complex 
than the selection of default font, as you need to know what part of GC can be 
safely called as it 
will not need valid font.
 
What I cannot agree with, is that having OS type-safe and no resource tracking 
at all is a good solution. 
It may be a good start, but in the end, code based security is all-or-nothing. 
It is one thing to miss code 
protection here and there, and then fix these as-you-go, and another when you 
have a whole concept, like 
resource selection, which is not type-safe at all.
 
 
&gt; There is the further problem of Custom Controls that can have their own 
concept of default font. 
 
For all-Java custom controls I don't see the problem at all. Do you?
For native custom controls, user should do the resource tracking thing as well.

Not sure I quite follow the "OSCall-being-the-class and OS-being-the-instance" 
problem.  The static final methods will all become final methods and OS will 
become an instance of OSCall (or some such name, maybe we should use platform 
specific names for the class Win32, GTK, Carbon, Photon, Motif?).

Anyways, given that these changes break API, they could not be made lightly.
&gt; Not sure I quite follow the "OSCall-being-the-class and 
&gt; OS-being-the-instance" problem.  The static final methods 
&gt; will all become final methods and OS will become an instance 
&gt; of OSCall (or some such name, maybe we should use platform 
&gt; specific names for the class Win32, GTK, Carbon, Photon, Motif?).

OK, here I go again; your plan is to:
1. Rename OS to OSCall.
2. Create "static OSCall OS = new OS()..;


&gt; (or some such name, maybe we should use platform 
&gt; specific names for the class Win32, GTK, Carbon, Photon, Motif?).

I use "Fox" :)



It will work. BUT: every time in the code where you currently 
have "OS.WM_PAINT", you'll get a warning from ECJ that you reference "static 
final int" through nonstatic class instance.



Sorry I messed up the order of my responses in the previous comment. Again:

&gt; Not sure I quite follow the "OSCall-being-the-class and 
&gt; OS-being-the-instance" problem.  The static final methods 
&gt; will all become final methods and OS will become an instance 
&gt; of OSCall (or some such name, maybe we should use platform 
&gt; specific names for the class Win32, GTK, Carbon, Photon, Motif?).

OK, here I go again; your plan is to:
1. Rename OS to OSCall.
2. Create "static OSCall OS = new OS()..;

It will work. BUT: every time in the code where you currently 
have "OS.WM_PAINT", you'll get a warning from ECJ that you reference "static 
final int" through nonstatic class instance.


&gt; (or some such name, maybe we should use platform 
&gt; specific names for the class Win32, GTK, Carbon, Photon, Motif?).

I use "Fox" :)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110622" />
    <CreationDate amount="2005-09-26 11:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="minor" />
    <Summery>[Preferences] Cancelling change of repository path leaves new unused connection</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>- have a CVS connection like :extssh:mkeller@dev.eclipse.org:/home/eclipse with</Line>
          <Line>some projects in the workspace from that location</Line>
          <Line>- context menu &gt; Properties &gt; CVS</Line>
          <Line>- change path to "/cvsroot/eclipse"</Line>
          <Line>- click OK</Line>
          <Line>- click OK again</Line>
          <Line>- in the "Confirm Project Sharing Changes" dialog, click Cancel</Line>
          <Line>=&gt; action is cancelled, but a new connection</Line>
          <Line>:extssh:mkeller@dev.eclipse.org:/cvsroot/eclipse has been added</Line>
          <Line>=&gt; Since I cancelled, I would expect to have the same connections as before.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>M20050923-1430

- have a CVS connection like :extssh:mkeller@dev.eclipse.org:/home/eclipse with
some projects in the workspace from that location
- context menu &gt; Properties &gt; CVS
- change path to "/cvsroot/eclipse"
- click OK
- click OK again
- in the "Confirm Project Sharing Changes" dialog, click Cancel
=&gt; action is cancelled, but a new connection
:extssh:mkeller@dev.eclipse.org:/cvsroot/eclipse has been added
=&gt; Since I cancelled, I would expect to have the same connections as before.

After this, the OK button in the Properties dialog is disabled (bug 110617).
For me it works properly. You confirmed changes on "Confirm Host or Path Change" dialog all repository changes. Click Cancel button on "Confirm Project Sharing Changes" dialog should cancel only sharing not all changes.
(In reply to comment #1)
That's also a valid point of view, although I would then expect that the Properties dialog is closed after I pressed OK there and confirmed the "Host or Path Change" warning.

But I also won't object if you just close this bug.
&gt;For me it works properly. You confirmed changes on "Confirm Host or Path
&gt;Change" dialog all repository changes.
But not for me ;-) The main thing that I confirmed is that I want to rename the repository path of the selected connection and I did note choose to create a new location. Also, I was not informed that this will happen when pressing 'Cancel'.

&gt;But I also won't object if you just close this bug.
The last dialog could at least tell that 'Cancel' will leave everything as is and add a new connection. But I'd claim that 80% of the users wouldn't want such a new connection.
Krzysztof, I'm afraid I need to agree with both Markus and Daniel. When editing a connection's properties you do not expect a new one to be created. It doesn't matter if you agree or not to change sharing of related project(s). If the action had been named "Duplicate connection" it would have been an expected situation.</WithStack>
    <WithOutStack>M20050923-1430

- have a CVS connection like :extssh:mkeller@dev.eclipse.org:/home/eclipse with
some projects in the workspace from that location
- context menu &gt; Properties &gt; CVS
- change path to "/cvsroot/eclipse"
- click OK
- click OK again
- in the "Confirm Project Sharing Changes" dialog, click Cancel
=&gt; action is cancelled, but a new connection
:extssh:mkeller@dev.eclipse.org:/cvsroot/eclipse has been added
=&gt; Since I cancelled, I would expect to have the same connections as before.

After this, the OK button in the Properties dialog is disabled (bug 110617).
For me it works properly. You confirmed changes on "Confirm Host or Path Change" dialog all repository changes. Click Cancel button on "Confirm Project Sharing Changes" dialog should cancel only sharing not all changes.
(In reply to comment #1)
That's also a valid point of view, although I would then expect that the Properties dialog is closed after I pressed OK there and confirmed the "Host or Path Change" warning.

But I also won't object if you just close this bug.
&gt;For me it works properly. You confirmed changes on "Confirm Host or Path
&gt;Change" dialog all repository changes.
But not for me ;-) The main thing that I confirmed is that I want to rename the repository path of the selected connection and I did note choose to create a new location. Also, I was not informed that this will happen when pressing 'Cancel'.

&gt;But I also won't object if you just close this bug.
The last dialog could at least tell that 'Cancel' will leave everything as is and add a new connection. But I'd claim that 80% of the users wouldn't want such a new connection.
Krzysztof, I'm afraid I need to agree with both Markus and Daniel. When editing a connection's properties you do not expect a new one to be created. It doesn't matter if you agree or not to change sharing of related project(s). If the action had been named "Duplicate connection" it would have been an expected situation.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110623" />
    <CreationDate amount="2005-09-26 11:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>PinEditorAction throws ClassCastException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>If you implement IWorkbenchPartReference yourself (yes, yes, I know, but its a 
problem I can't solve any other way), PinEditorAction will throw a 
ClassCastException because it assumes that getPartReference() returns an 
instance of WorkbenchPartReference. If PinEditorAction could just throw in a 
sanity check to make sure its a WorkbenchPartReference before casting it 
(which appears to be a fairly trivial change), it'd save me a huge amount of 
grief.
Nevermind, not that big a deal. I still think its bad practice to cast from an
interface to a possible implementation of that interface without at least a
sanity check, but in this case I found a way around the problem. Feel free to
just close.
Closing.</WithStack>
    <WithOutStack>If you implement IWorkbenchPartReference yourself (yes, yes, I know, but its a 
problem I can't solve any other way), PinEditorAction will throw a 
ClassCastException because it assumes that getPartReference() returns an 
instance of WorkbenchPartReference. If PinEditorAction could just throw in a 
sanity check to make sure its a WorkbenchPartReference before casting it 
(which appears to be a fairly trivial change), it'd save me a huge amount of 
grief.
Nevermind, not that big a deal. I still think its bad practice to cast from an
interface to a possible implementation of that interface without at least a
sanity check, but in this case I found a way around the problem. Feel free to
just close.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110624" />
    <CreationDate amount="2005-09-26 11:52:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="IDE" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[IDE] Clear-All UI should check all projects for 'Clean all'</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>3.1.1

See screenshot. The radio is on 'Clean all projects'. It would give a more
consistent picture if all checkboxes would be selected while that radio-button
is enabled.
Created attachment 27520
screenshot
Yes!  This one has bitten my backside several times.
Created attachment 77425
Patch to automatically check off all projects if 'Clean all projects' is selected.
Does the selection prior to clicking on 'Clean all projects' need to be preserved?
"As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009"</WithStack>
    <WithOutStack>3.1.1

See screenshot. The radio is on 'Clean all projects'. It would give a more
consistent picture if all checkboxes would be selected while that radio-button
is enabled.
Created attachment 27520
screenshot
Yes!  This one has bitten my backside several times.
Created attachment 77425
Patch to automatically check off all projects if 'Clean all projects' is selected.
Does the selection prior to clicking on 'Clean all projects' need to be preserved?
"As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009"</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110625" />
    <CreationDate amount="2005-09-26 11:52:00 -0400" />
    <DupId amount="193114" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Preferences] "Confirm Project Sharing Changes" dialog does not resize projects list vertically</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- have a CVS connection like :extssh:mkeller@dev.eclipse.org:/home/eclipse with</Line>
          <Line>some projects in the workspace from that location</Line>
          <Line>- context menu &gt; Properties &gt; CVS</Line>
          <Line>- change path to "/cvsroot/eclipse"</Line>
          <Line>- click OK</Line>
          <Line>- click OK again</Line>
          <Line>- in the "Confirm Project Sharing Changes" dialog, click "Details &gt;&gt;" and then</Line>
          <Line>try to resize the dialog to see all projects at once</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>M20050923-1430

- have a CVS connection like :extssh:mkeller@dev.eclipse.org:/home/eclipse with
some projects in the workspace from that location
- context menu &gt; Properties &gt; CVS
- change path to "/cvsroot/eclipse"
- click OK
- click OK again
- in the "Confirm Project Sharing Changes" dialog, click "Details &gt;&gt;" and then
try to resize the dialog to see all projects at once

=&gt; Layouting problem:
   The projects list does not grow higher when the dialog becomes larger.


*** This bug has been marked as a duplicate of bug 72489 ***
Reopening to recheck. This could also be a dup of bug 193114.
Indeed.

*** This bug has been marked as a duplicate of bug 193114 ***</WithStack>
    <WithOutStack>M20050923-1430

- have a CVS connection like :extssh:mkeller@dev.eclipse.org:/home/eclipse with
some projects in the workspace from that location
- context menu &gt; Properties &gt; CVS
- change path to "/cvsroot/eclipse"
- click OK
- click OK again
- in the "Confirm Project Sharing Changes" dialog, click "Details &gt;&gt;" and then
try to resize the dialog to see all projects at once

=&gt; Layouting problem:
   The projects list does not grow higher when the dialog becomes larger.


*** This bug has been marked as a duplicate of bug 72489 ***
Reopening to recheck. This could also be a dup of bug 193114.
Indeed.

*** This bug has been marked as a duplicate of bug 193114 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110626" />
    <CreationDate amount="2005-09-26 11:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Runtime" />
    <component amount="General" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>EMF Indices are not Kept Synchronized after Workbench Restart</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="27">
        <Lines>
          <Line>1) Create a resource</Line>
          <Line>2) Create an EObject in that resource that has a String EAttribute with the</Line>
          <Line>value "foobar" that's not its EDEFAULT value.</Line>
          <Line>3) Save the resource</Line>
          <Line>4) Call the EMF indexing infrastructure to perform a search for any EObject that</Line>
          <Line>has the EAttribute with the value "foobar" in the editing domain and in the</Line>
          <Line>workspace.</Line>
          <Line />
          <Line>Result:</Line>
          <Line>The EObject is found. This is expected.</Line>
          <Line />
          <Line>5) Unload the EMF resource.</Line>
          <Line>6) Repeat the same search.</Line>
          <Line />
          <Line>Result:</Line>
          <Line>A proxy EObject is returned that is resolvable to the saved resource. This is</Line>
          <Line>expected.</Line>
          <Line />
          <Line>7) Ensure that no editors are open (so that they don't reopen when the workbench</Line>
          <Line>is launched) and shut down the workbench</Line>
          <Line>8) Launch the workbench</Line>
          <Line>9) Ensure that the org.eclipse.emf.index plugin will not be loaded (don't open</Line>
          <Line>any views or editors that will load this plugin)</Line>
          <Line>10) Open the saved resource file with a text editor.</Line>
          <Line>11) Manually alter the "foobar" value to read simply "foo"</Line>
          <Line>12) Save the editor</Line>
          <Line>13) Repeat the above search</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>It appears that the indexing support is not keeping track of workspace changes
that occur after a workbench restart but before the index plugin has been started.

Steps to Reproduce:
1) Create a resource
2) Create an EObject in that resource that has a String EAttribute with the
value "foobar" that's not its EDEFAULT value.
3) Save the resource
4) Call the EMF indexing infrastructure to perform a search for any EObject that
has the EAttribute with the value "foobar" in the editing domain and in the
workspace.

Result:
The EObject is found. This is expected.

5) Unload the EMF resource.
6) Repeat the same search.

Result:
A proxy EObject is returned that is resolvable to the saved resource. This is
expected.

7) Ensure that no editors are open (so that they don't reopen when the workbench
is launched) and shut down the workbench
8) Launch the workbench
9) Ensure that the org.eclipse.emf.index plugin will not be loaded (don't open
any views or editors that will load this plugin)
10) Open the saved resource file with a text editor.
11) Manually alter the "foobar" value to read simply "foo"
12) Save the editor
13) Repeat the above search

Result:
A proxy EObject is returned that points to the EObject that had been saved. The
expected result would be not results because there are no EObjects with the
value "foobar" for the EAttribute.
This bug doesn't belong here.
[GMF Restructure] Bug 319140 : product GMF and component
Runtime Common was the original product and component for this bug</WithStack>
    <WithOutStack>It appears that the indexing support is not keeping track of workspace changes
that occur after a workbench restart but before the index plugin has been started.

Steps to Reproduce:
1) Create a resource
2) Create an EObject in that resource that has a String EAttribute with the
value "foobar" that's not its EDEFAULT value.
3) Save the resource
4) Call the EMF indexing infrastructure to perform a search for any EObject that
has the EAttribute with the value "foobar" in the editing domain and in the
workspace.

Result:
The EObject is found. This is expected.

5) Unload the EMF resource.
6) Repeat the same search.

Result:
A proxy EObject is returned that is resolvable to the saved resource. This is
expected.

7) Ensure that no editors are open (so that they don't reopen when the workbench
is launched) and shut down the workbench
8) Launch the workbench
9) Ensure that the org.eclipse.emf.index plugin will not be loaded (don't open
any views or editors that will load this plugin)
10) Open the saved resource file with a text editor.
11) Manually alter the "foobar" value to read simply "foo"
12) Save the editor
13) Repeat the above search

Result:
A proxy EObject is returned that points to the EObject that had been saved. The
expected result would be not results because there are no EObjects with the
value "foobar" for the EAttribute.
This bug doesn't belong here.
[GMF Restructure] Bug 319140 : product GMF and component
Runtime Common was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110627" />
    <CreationDate amount="2005-09-26 11:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[search/replace] Search does not search in sub packages</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I am using the hierarchical layout in the package explorer and try to search for
references of a type.
I selected a package and used "Selected resources".
The search will show only members of the package as result and will not descend
into sub-packages.

This is not the expected behaviour in the hierarchical layout.
Search in a package always means search in the contained files, not in the
'subpackage'. That's regardless of how a view shows the structure. You have to
multi-select packages if you want more than one package.</WithStack>
    <WithOutStack>I am using the hierarchical layout in the package explorer and try to search for
references of a type.
I selected a package and used "Selected resources".
The search will show only members of the package as result and will not descend
into sub-packages.

This is not the expected behaviour in the hierarchical layout.
Search in a package always means search in the contained files, not in the
'subpackage'. That's regardless of how a view shows the structure. You have to
multi-select packages if you want more than one package.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110628" />
    <CreationDate amount="2005-09-26 12:00:00 -0400" />
    <DupId amount="78500" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="TPTP.monitoring" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Provide API to use the statistical agents programmatically</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>We need API to be able to communicate with the statistical agents. If the user
can do something with the agent via the UI, it should also be possible to do
this programmatically. There may already be some API, or it may be all there
already (if the latter, please close), but we need to ensure it's there.

For example, I should be able to write some java code if I'm extending TPTP, to
be able to connect to a local or remote Perfmon agent, query for what counters
are available, request monitoring of a counter, collect the data into the model,
and pause or terminate the agent. All using TPTP public java interfaces/classes
(API).

While Perfmon is the priority, ideally we would be able to do this with the
other agents as well (e.g. apache server status), and that all agents would
follow the same conventions/interfaces for querying and collecting data.
I gather you are asking for a statistical agent framework so a client cna deal 
with them all the same way.
I assert this since all agents can be spoken to via the client apis. The trick 
is that there are potentially custom commands for each agent impl.. I am 
thinking you are asking for some standardization around the commands, and that 
is a good idea.
Correct. Thanks for clarifying.
This is a duplicate of enhancement 78500, which I reported around a year ago and
was pushed out to be considered for the 4.2 plan.
The ability to control generic agents and have the agent expose variables that
can be set to the client is outlined in 78500. Marking as a duplicate.

*** This bug has been marked as a duplicate of 78500 ***
Closing this duplicate.
Adding target when it was resolved as a duplicate.</WithStack>
    <WithOutStack>We need API to be able to communicate with the statistical agents. If the user
can do something with the agent via the UI, it should also be possible to do
this programmatically. There may already be some API, or it may be all there
already (if the latter, please close), but we need to ensure it's there.

For example, I should be able to write some java code if I'm extending TPTP, to
be able to connect to a local or remote Perfmon agent, query for what counters
are available, request monitoring of a counter, collect the data into the model,
and pause or terminate the agent. All using TPTP public java interfaces/classes
(API).

While Perfmon is the priority, ideally we would be able to do this with the
other agents as well (e.g. apache server status), and that all agents would
follow the same conventions/interfaces for querying and collecting data.
I gather you are asking for a statistical agent framework so a client cna deal 
with them all the same way.
I assert this since all agents can be spoken to via the client apis. The trick 
is that there are potentially custom commands for each agent impl.. I am 
thinking you are asking for some standardization around the commands, and that 
is a good idea.
Correct. Thanks for clarifying.
This is a duplicate of enhancement 78500, which I reported around a year ago and
was pushed out to be considered for the 4.2 plan.
The ability to control generic agents and have the agent expose variables that
can be set to the client is outlined in 78500. Marking as a duplicate.

*** This bug has been marked as a duplicate of 78500 ***
Closing this duplicate.
Adding target when it was resolved as a duplicate.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110629" />
    <CreationDate amount="2005-09-26 12:02:00 -0400" />
    <DupId amount="81425" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Restore defaults does not restore current presentation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>3.1.1 RC2, Linux, GTK+, KDE 
 
On the "General &gt; Appearance" page, change "Current Presentation:" to "Eclipse 
2.1 Style Presentation".  Now click "Restore Defaults".  Nothing happens. 
 
As a side note (sorry to double up, but this is a pretty trivial point), could 
we change the name to "Eclipse 2.1 Presentation".  The "Style" seems 
extraneous.


*** This bug has been marked as a duplicate of 81425 ***</WithStack>
    <WithOutStack>3.1.1 RC2, Linux, GTK+, KDE 
 
On the "General &gt; Appearance" page, change "Current Presentation:" to "Eclipse 
2.1 Style Presentation".  Now click "Restore Defaults".  Nothing happens. 
 
As a side note (sorry to double up, but this is a pretty trivial point), could 
we change the name to "Eclipse 2.1 Presentation".  The "Style" seems 
extraneous.


*** This bug has been marked as a duplicate of 81425 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110630" />
    <CreationDate amount="2005-09-26 12:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Java" />
    <Version amount="0.3" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="blocker" />
    <Summery>java.lang.VerifyError with Mylar 0.3.9 on Eclipse 3.2M2</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330581692">
        <Exception>java.lang.VerifyError</Exception>
        <Reason>class
org.eclipse.mylar.java.ui.editor.MylarJavaCompletionProcessor overrides final
method .</Reason>
        <Frames>
          <Frame depth="0">java.lang.ClassLoader.defineClass1(Native Method)</Frame>
          <Frame depth="1">java.lang.ClassLoader.defineClass(ClassLoader.java:620)</Frame>
          <Frame depth="2">org.eclipse.osgi.framework.adaptor.core.DefaultClassLoader.defineClass(DefaultClassLoader.java:370)</Frame>
          <Frame depth="3">org.eclipse.core.runtime.adaptor.EclipseClassLoader.defineClass(EclipseClassLoader.java:233)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.adaptor.core.DefaultClassLoader.findClassImpl(DefaultClassLoader.java:343)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.adaptor.core.DefaultClassLoader.findClass(DefaultClassLoader.java:235)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.findLocalClass(AbstractClassLoader.java:183)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.adaptor.EclipseClassLoader.basicFindLocalClass(EclipseClassLoader.java:141)</Frame>
          <Frame depth="8">org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:68)</Frame>
          <Frame depth="9">org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:337)</Frame>
          <Frame depth="10">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:389)</Frame>
          <Frame depth="11">org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:350)</Frame>
          <Frame depth="12">org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:78)</Frame>
          <Frame depth="13">java.lang.ClassLoader.loadClass(ClassLoader.java:251)</Frame>
          <Frame depth="14">java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)</Frame>
          <Frame depth="15">org.eclipse.mylar.java.ui.editor.MylarJavaSourceViewerConfiguration.getContentAssistant(MylarJavaSourceViewerConfiguration.java:67)</Frame>
          <Frame depth="16">org.eclipse.jface.text.source.SourceViewer.configure(SourceViewer.java:331)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.configure(JavaSourceViewer.java:214)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.configure(CompilationUnitEditor.java:314)</Frame>
          <Frame depth="19">org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:2532)</Frame>
          <Frame depth="20">org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:53)</Frame>
          <Frame depth="21">org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:326)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.createPartControl(JavaEditor.java:2628)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.createPartControl(CompilationUnitEditor.java:1725)</Frame>
          <Frame depth="24">org.eclipse.mylar.java.ui.editor.MylarCompilationUnitEditor.createPartControl(MylarCompilationUnitEditor.java:47)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:599)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:374)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:552)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:213)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2370)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2303)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.WorkbenchPage.access$10(WorkbenchPage.java:2295)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2281)</Frame>
          <Frame depth="33">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2276)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2257)</Frame>
          <Frame depth="36">org.eclipse.ui.ide.IDE.openEditor(IDE.java:372)</Frame>
          <Frame depth="37">org.eclipse.ui.ide.IDE.openEditor(IDE.java:335)</Frame>
          <Frame depth="38">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:251)</Frame>
          <Frame depth="39">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:136)</Frame>
          <Frame depth="40">org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open(OpenActionUtil.java:49)</Frame>
          <Frame depth="41">org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:169)</Frame>
          <Frame depth="42">org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:153)</Frame>
          <Frame depth="43">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:222)</Frame>
          <Frame depth="44">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:198)</Frame>
          <Frame depth="45">org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:296)</Frame>
          <Frame depth="46">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:869)</Frame>
          <Frame depth="47">org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:741)</Frame>
          <Frame depth="48">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)</Frame>
          <Frame depth="49">org.eclipse.core.runtime.Platform.run(Platform.java:783)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44)</Frame>
          <Frame depth="51">org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:148)</Frame>
          <Frame depth="52">org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:739)</Frame>
          <Frame depth="53">org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:968)</Frame>
          <Frame depth="54">org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1067)</Frame>
          <Frame depth="55">org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:243)</Frame>
          <Frame depth="56">org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:238)</Frame>
          <Frame depth="57">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:277)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:884)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3194)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2823)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1755)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1719)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:368)</Frame>
          <Frame depth="65">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="66">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)</Frame>
          <Frame depth="67">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="68">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:377)</Frame>
          <Frame depth="69">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:164)</Frame>
          <Frame depth="70">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="71">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="72">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="73">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="74">org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)</Frame>
          <Frame depth="75">org.eclipse.core.launcher.Main.basicRun(Main.java:282)</Frame>
          <Frame depth="76">org.eclipse.core.launcher.Main.run(Main.java:977)</Frame>
          <Frame depth="77">org.eclipse.core.launcher.Main.main(Main.java:952)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Currently I can't open any java file because of the following exception:

java.lang.VerifyError: class
org.eclipse.mylar.java.ui.editor.MylarJavaCompletionProcessor overrides final
method .
at java.lang.ClassLoader.defineClass1(Native Method)
at java.lang.ClassLoader.defineClass(ClassLoader.java:620)
at
org.eclipse.osgi.framework.adaptor.core.DefaultClassLoader.defineClass(DefaultClassLoader.java:370)
at
org.eclipse.core.runtime.adaptor.EclipseClassLoader.defineClass(EclipseClassLoader.java:233)
at
org.eclipse.osgi.framework.adaptor.core.DefaultClassLoader.findClassImpl(DefaultClassLoader.java:343)
at
org.eclipse.osgi.framework.adaptor.core.DefaultClassLoader.findClass(DefaultClassLoader.java:235)
at
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.findLocalClass(AbstractClassLoader.java:183)
at
org.eclipse.core.runtime.adaptor.EclipseClassLoader.basicFindLocalClass(EclipseClassLoader.java:141)
at
org.eclipse.core.runtime.adaptor.EclipseClassLoader.findLocalClass(EclipseClassLoader.java:68)
at
org.eclipse.osgi.framework.internal.core.BundleLoader.findLocalClass(BundleLoader.java:337)
at
org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:389)
at
org.eclipse.osgi.framework.internal.core.BundleLoader.findClass(BundleLoader.java:350)
at
org.eclipse.osgi.framework.adaptor.core.AbstractClassLoader.loadClass(AbstractClassLoader.java:78)
at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
at
org.eclipse.mylar.java.ui.editor.MylarJavaSourceViewerConfiguration.getContentAssistant(MylarJavaSourceViewerConfiguration.java:67)
at org.eclipse.jface.text.source.SourceViewer.configure(SourceViewer.java:331)
at
org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.configure(JavaSourceViewer.java:214)
at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.configure(CompilationUnitEditor.java:314)
at
org.eclipse.ui.texteditor.AbstractTextEditor.createPartControl(AbstractTextEditor.java:2532)
at
org.eclipse.ui.texteditor.StatusTextEditor.createPartControl(StatusTextEditor.java:53)
at
org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.createPartControl(AbstractDecoratedTextEditor.java:326)
at
org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.createPartControl(JavaEditor.java:2628)
at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.createPartControl(CompilationUnitEditor.java:1725)
at
org.eclipse.mylar.java.ui.editor.MylarCompilationUnitEditor.createPartControl(MylarCompilationUnitEditor.java:47)
at
org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:599)
at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:374)
at
org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:552)
at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:213)
at
org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2370)
at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2303)
at org.eclipse.ui.internal.WorkbenchPage.access$10(WorkbenchPage.java:2295)
at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2281)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2276)
at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2257)
at org.eclipse.ui.ide.IDE.openEditor(IDE.java:372)
at org.eclipse.ui.ide.IDE.openEditor(IDE.java:335)
at
org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:251)
at
org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:136)
at org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open(OpenActionUtil.java:49)
at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:169)
at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:153)
at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:222)
at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:198)
at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:296)
at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:869)
at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:741)
at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)
at org.eclipse.core.runtime.Platform.run(Platform.java:783)
at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:44)
at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:148)
at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:739)
at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:968)
at
org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1067)
at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:243)
at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:238)
at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:277)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:884)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3194)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2823)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1755)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1719)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:368)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)
at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:377)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:164)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)
at org.eclipse.core.launcher.Main.basicRun(Main.java:282)
at org.eclipse.core.launcher.Main.run(Main.java:977)
at org.eclipse.core.launcher.Main.main(Main.java:952)
I'll hope to put out an 0.3.9.1 M2-compatible build early this afternoon.  I'm
definitely not thrilled that this method is now final though, as it may make
supporting content assist in both 3.1 and 3.2 impossible without multiple
downloads. 
The work around for this should be to set that Java Editor to be default for
Java files (not the Mylar editor).
This is now resolved, and there is a branch in CVS for eclipse3.1 support.  I should have
an update site with the 3.2 support available within 3 hours.

Mik, can you please clarify this with Eclipse team? It seems Mylar is not the
only plugin have troubles with 3.2M2. It seems there are some issues with
compatibility because I also have troubles with Subclipse plugin which was
working just fine on 3.2M1
BTW, having 3.1 and 3.2 in different branches may slowdown developement and
adoption of Mylar.
I know :(  and I've done everything to avoid it.  But due to the changes in 3.2
it is no longer possible to have the same source code support both, and even
though most users are on 3.1 I think that it's important to support you and the
others who are on 3.2.  So I don't know what else to do.  Fyi the breaking
changes are in the way that the problems list and Java Editor work.  

The branch will contain only the minimal diff.  This should be easier to work
with doing AJDT's approach of having multiple source folders, but I'm open to
suggestions.</WithStack>
    <WithOutStack>Currently I can't open any java file because of the following exception:


I'll hope to put out an 0.3.9.1 M2-compatible build early this afternoon.  I'm
definitely not thrilled that this method is now final though, as it may make
supporting content assist in both 3.1 and 3.2 impossible without multiple
downloads. 
The work around for this should be to set that Java Editor to be default for
Java files (not the Mylar editor).
This is now resolved, and there is a branch in CVS for eclipse3.1 support.  I should have
an update site with the 3.2 support available within 3 hours.

Mik, can you please clarify this with Eclipse team? It seems Mylar is not the
only plugin have troubles with 3.2M2. It seems there are some issues with
compatibility because I also have troubles with Subclipse plugin which was
working just fine on 3.2M1
BTW, having 3.1 and 3.2 in different branches may slowdown developement and
adoption of Mylar.
I know :(  and I've done everything to avoid it.  But due to the changes in 3.2
it is no longer possible to have the same source code support both, and even
though most users are on 3.1 I think that it's important to support you and the
others who are on 3.2.  So I don't know what else to do.  Fyi the breaking
changes are in the way that the problems list and Java Editor work.  

The branch will contain only the minimal diff.  This should be easier to work
with doing AJDT's approach of having multiple source folders, but I'm open to
suggestions.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110631" />
    <CreationDate amount="2005-09-26 12:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Access rules interfer with code-assist</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I am working with an interface that is currently internal but will become API 
at some point. I like to build a constructor signature and define the instance 
variables from there using CTRL-1 but I cannot because the discouraged access 
advice seems to be overridding and hiding any other advice. Here is the 
example constructor I have defined. Hiting CTRL-1 on either of the varable 
should give you the "configure access rule" advice and no others. It shoudl 
also give you the advice to assign to a field.

	public ResourceMappingScope(ResourceMapping[] mappings, IResource[] 
traversals) {
	}
As soon as we find a quickable problem on the same line, we jump to it. To avoid
that, just make a selection of sice &gt; 0 -&gt; select 'mappings'. You will get the
'assign to a field' then.

Please reopen if that's not the case.
You're right. If I select the entire variable name, I get the option to assign 
it to a new field. However, I think it is still a problem that placing the 
caret in the name works in some cases and doesn't in others. It is fine for 
you to say there is a workaround but the workflow I stated (i.e. click in the 
name and press CTRL-1) does not work.
The behaviour that we jump to the next error on the line is an important feature.
So how could the user express that in the given scenario, he does not want to
jump? I'm open for suggestions. 

Note that the other thing you can do is to assign the 'assign to field' action
to a keyboard shortcut.</WithStack>
    <WithOutStack>I am working with an interface that is currently internal but will become API 
at some point. I like to build a constructor signature and define the instance 
variables from there using CTRL-1 but I cannot because the discouraged access 
advice seems to be overridding and hiding any other advice. Here is the 
example constructor I have defined. Hiting CTRL-1 on either of the varable 
should give you the "configure access rule" advice and no others. It shoudl 
also give you the advice to assign to a field.

	public ResourceMappingScope(ResourceMapping[] mappings, IResource[] 
traversals) {
	}
As soon as we find a quickable problem on the same line, we jump to it. To avoid
that, just make a selection of sice &gt; 0 -&gt; select 'mappings'. You will get the
'assign to a field' then.

Please reopen if that's not the case.
You're right. If I select the entire variable name, I get the option to assign 
it to a new field. However, I think it is still a problem that placing the 
caret in the name works in some cases and doesn't in others. It is fine for 
you to say there is a workaround but the workflow I stated (i.e. click in the 
name and press CTRL-1) does not work.
The behaviour that we jump to the next error on the line is an important feature.
So how could the user express that in the given scenario, he does not want to
jump? I'm open for suggestions. 

Note that the other thing you can do is to assign the 'assign to field' action
to a keyboard shortcut.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110632" />
    <CreationDate amount="2005-09-26 12:21:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Webservices" />
    <component amount="wst.ws" />
    <Version amount="0.7" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Remove dWCommunity-data.txt</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The dWCommunity-data.txt taxonomy is obsolete and should be removed.
Change committed. Will be released after the interim M9 I-build is declared.
Released by Kathy, tag v20051114_1127.
Closed.</WithStack>
    <WithOutStack>The dWCommunity-data.txt taxonomy is obsolete and should be removed.
Change committed. Will be released after the interim M9 I-build is declared.
Released by Kathy, tag v20051114_1127.
Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110633" />
    <CreationDate amount="2005-09-26 12:38:00 -0400" />
    <DupId amount="128834" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[WorkbenchParts] Redraw problem when views are overlapping</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I got a weird redraw problem using a JUnit fast view and the tests dumped some
comment to the console.
The console was underneath the fast view.
I will attach a screenshot.
No steps to reproduce so far. It happens sometimes (at least once a day). I have
seen it for the first about a week ago. Around 3.2M2. It might exist before.
Created attachment 27521
Screenshot
This looks to me like a layout problem rather than a cheese problem because 
the clipping seems consistent with a console that was moved to the top.
Is this still a problem in 3.3?

PW

Yes, I have seen it multiple times. Exactly the same symptoms.
It occurs when you get errors in the console view while running Junit tests and the JUnit view is a fast view.
Occurs the first time your JUnit fast view runs and causes the console view to populate.  We seem to display the console part pane over top of the fast view.

PW


Paul, this is a dup of bug 128834 (or it's a dup of this one...;-). Take a look at the other end for some more info and let's decide who actually gets it.



*** This bug has been marked as a duplicate of bug 128834 ***</WithStack>
    <WithOutStack>I got a weird redraw problem using a JUnit fast view and the tests dumped some
comment to the console.
The console was underneath the fast view.
I will attach a screenshot.
No steps to reproduce so far. It happens sometimes (at least once a day). I have
seen it for the first about a week ago. Around 3.2M2. It might exist before.
Created attachment 27521
Screenshot
This looks to me like a layout problem rather than a cheese problem because 
the clipping seems consistent with a console that was moved to the top.
Is this still a problem in 3.3?

PW

Yes, I have seen it multiple times. Exactly the same symptoms.
It occurs when you get errors in the console view while running Junit tests and the JUnit view is a fast view.
Occurs the first time your JUnit fast view runs and causes the console view to populate.  We seem to display the console part pane over top of the fast view.

PW


Paul, this is a dup of bug 128834 (or it's a dup of this one...;-). Take a look at the other end for some more info and let's decide who actually gets it.



*** This bug has been marked as a duplicate of bug 128834 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110634" />
    <CreationDate amount="2005-09-26 12:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[DetachedViews] Standalone views lose their standalone property when detached</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="570" end="1480" />
        <code>public DetachedWindow(WorkbenchPage workbenchPage, LayoutPart part) {
        this.page = workbenchPage;
        int appearance = PresentationFactoryUtil.ROLE_VIEW;

        // Be sure to change the appearance in case the view is standalone.
        if (part instanceof PartPane) {
          IWorkbenchPartReference ref = ((PartPane) part).getPartReference();
          Perspective persp = page.getActivePerspective();
          if (persp != null &amp;&amp; ref instanceof IViewReference) {
            if (persp.isStandaloneView((IViewReference)ref)) {
              appearance = persp.getShowTitleView((IViewReference)ref) ?
                  PresentationFactoryUtil.ROLE_STANDALONE : 
                  PresentationFactoryUtil.ROLE_STANDALONE_NOTITLE;
            }
          }
        }
        
        folder = new ViewStack(page, false, appearance, null);
        folder.addListener(propertyListener);
    }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Detach a standalone view, then use the detached window context menu to toggle off the Detached menu item. This will reattach your view, but it just adds it to whatever stack is on the bottom right.</Line>
          <Line />
          <Line>2. Detach a standalone view, then grab onto another (non-standalone) view and add it to the detached window. Presumably, if a view is standalone, it should always be alone, even in a detached window.</Line>
          <Line />
          <Line>3. Make your standalone view be a Fast View. When you click on the Fast View icon to re-expand the view, it looks like it loses the standalone property.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>[M20050923-1430], Windows XP

Steps to reproduce:

Open the StandaloneViewPerspective from the UI tests plugin.
Detach the Tasks view.
Drag the Outline view onto the detached Tasks view.
Note that the Outline view ends up in the same part stack as the Tasks view.
From then on, the two views are no longer standalone.

Expected behaviour: You cannot drag a standalone view onto another view (or
another view onto a standalone view), even if the view you are dragging onto is
detached.
Partial fix:

In org.eclipse.ui.internal.DetachedWindow, change the constructor to:

    public DetachedWindow(WorkbenchPage workbenchPage, LayoutPart part) {
        this.page = workbenchPage;
        int appearance = PresentationFactoryUtil.ROLE_VIEW;

        // Be sure to change the appearance in case the view is standalone.
        if (part instanceof PartPane) {
          IWorkbenchPartReference ref = ((PartPane) part).getPartReference();
          Perspective persp = page.getActivePerspective();
          if (persp != null &amp;&amp; ref instanceof IViewReference) {
            if (persp.isStandaloneView((IViewReference)ref)) {
              appearance = persp.getShowTitleView((IViewReference)ref) ?
                  PresentationFactoryUtil.ROLE_STANDALONE : 
                  PresentationFactoryUtil.ROLE_STANDALONE_NOTITLE;
            }
          }
        }
        
        folder = new ViewStack(page, false, appearance, null);
        folder.addListener(propertyListener);
    }

Then in PerspectiveHelper, change all of the constructor calls to DetachedWindow to pass in the LayoutPart.

This fixes the case where you detach a standalone view, then reattach it by dragging the tab. It also fixes the case where you detach the view, close the detached window, re-open it using Window-&gt;Show View, and then reattach it.

Unfortunately, it doesn't fix all of the problems with standalone views. Remaining problems:

1. Detach a standalone view, then use the detached window context menu to toggle off the Detached menu item. This will reattach your view, but it just adds it to whatever stack is on the bottom right.

2. Detach a standalone view, then grab onto another (non-standalone) view and add it to the detached window. Presumably, if a view is standalone, it should always be alone, even in a detached window.

3. Make your standalone view be a Fast View. When you click on the Fast View icon to re-expand the view, it looks like it loses the standalone property.

I'm a novice when it comes to the workbench internals, and I got stuck trying to track down the above problems.

Sorry that I don't have a nice patch attachment with my partial fix. I am currently not set up with the latest CVS sandbox, etc. Hopefully someone can take my code and expand upon it to clear up the other issues as well.


Thanks, I'll take a look...


Hmmm, so the only valid drop target for a stand-alone view would be the ViewSashContainer (i.e. a location that creates a new ViewStack) and a ViewStack that has a standalone view in it cannot be a drop target...

Is there any UI indication that a view is stand-alone? Otherwise we may confuse the user with what they see as inconsistent DnD behaviour...

(In reply to comment #3)
&gt; Hmmm, so the only valid drop target for a stand-alone view would be the
&gt; ViewSashContainer (i.e. a location that creates a new ViewStack) and a
&gt; ViewStack that has a standalone view in it cannot be a drop target...

This sounds correct, although I'm not sure of all the gory details.

&gt; Is there any UI indication that a view is stand-alone? Otherwise we may confuse
&gt; the user with what they see as inconsistent DnD behaviour...

Good point. There is no UI indication. I wonder if this was something that wasn't completely thought out when standalone views were implemented? For example, in my app, I have a "Command Line" view that is only a single-line text widget. In this case, it is fairly simple for the user to understand that they aren't allowed to stack this Command Line view with other views. We thought about using a standalone view without a title, which makes it very obvious that this view is "different" from the other views, but unfortunately, then you can no longer drag the view to a different location within the window...

Maybe there should be a feature/enhancement request to make the view tab look different for standalone views?

Regardless, it seems like this bug is still valid: if we allow standalone views at all, then we need to restrict where they can be dropped.

Moving to M7.


Simply out of cycles...deferring to 3.4.

*** Bug 172151 has been marked as a duplicate of this bug. ***
No chance this could get done in 3.4.2 then?! 8)
Would love this to be fixed, so I can use regular detached views for a certain thing in my product instead of my current hacked-up approach.

Unfortunately no...3.4.2 is already into Release Candidates...


Moving to triaged state.

Chris, if you want to contribute a patch I'd be happy to review it but I'm swamped so this would likely be the only way that a fix might make it into 3.5.</WithStack>
    <WithOutStack>[M20050923-1430], Windows XP

Steps to reproduce:

Open the StandaloneViewPerspective from the UI tests plugin.
Detach the Tasks view.
Drag the Outline view onto the detached Tasks view.
Note that the Outline view ends up in the same part stack as the Tasks view.
From then on, the two views are no longer standalone.

Expected behaviour: You cannot drag a standalone view onto another view (or
another view onto a standalone view), even if the view you are dragging onto is
detached.
Partial fix:

In org.eclipse.ui.internal.DetachedWindow, change the constructor to:

    public DetachedWindow(WorkbenchPage workbenchPage, LayoutPart part) {
        this.page = workbenchPage;
        int appearance = PresentationFactoryUtil.ROLE_VIEW;

        // Be sure to change the appearance in case the view is standalone.
        if (part instanceof PartPane) {
          IWorkbenchPartReference ref = ((PartPane) part).getPartReference();
          Perspective persp = page.getActivePerspective();
          if (persp != null &amp;&amp; ref instanceof IViewReference) {
            if (persp.isStandaloneView((IViewReference)ref)) {
              appearance = persp.getShowTitleView((IViewReference)ref) ?
                  PresentationFactoryUtil.ROLE_STANDALONE : 
                  PresentationFactoryUtil.ROLE_STANDALONE_NOTITLE;
            }
          }
        }
        
        folder = new ViewStack(page, false, appearance, null);
        folder.addListener(propertyListener);
    }

Then in PerspectiveHelper, change all of the constructor calls to DetachedWindow to pass in the LayoutPart.

This fixes the case where you detach a standalone view, then reattach it by dragging the tab. It also fixes the case where you detach the view, close the detached window, re-open it using Window-&gt;Show View, and then reattach it.

Unfortunately, it doesn't fix all of the problems with standalone views. Remaining problems:

1. Detach a standalone view, then use the detached window context menu to toggle off the Detached menu item. This will reattach your view, but it just adds it to whatever stack is on the bottom right.

2. Detach a standalone view, then grab onto another (non-standalone) view and add it to the detached window. Presumably, if a view is standalone, it should always be alone, even in a detached window.

3. Make your standalone view be a Fast View. When you click on the Fast View icon to re-expand the view, it looks like it loses the standalone property.

I'm a novice when it comes to the workbench internals, and I got stuck trying to track down the above problems.

Sorry that I don't have a nice patch attachment with my partial fix. I am currently not set up with the latest CVS sandbox, etc. Hopefully someone can take my code and expand upon it to clear up the other issues as well.


Thanks, I'll take a look...


Hmmm, so the only valid drop target for a stand-alone view would be the ViewSashContainer (i.e. a location that creates a new ViewStack) and a ViewStack that has a standalone view in it cannot be a drop target...

Is there any UI indication that a view is stand-alone? Otherwise we may confuse the user with what they see as inconsistent DnD behaviour...

(In reply to comment #3)
&gt; Hmmm, so the only valid drop target for a stand-alone view would be the
&gt; ViewSashContainer (i.e. a location that creates a new ViewStack) and a
&gt; ViewStack that has a standalone view in it cannot be a drop target...

This sounds correct, although I'm not sure of all the gory details.

&gt; Is there any UI indication that a view is stand-alone? Otherwise we may confuse
&gt; the user with what they see as inconsistent DnD behaviour...

Good point. There is no UI indication. I wonder if this was something that wasn't completely thought out when standalone views were implemented? For example, in my app, I have a "Command Line" view that is only a single-line text widget. In this case, it is fairly simple for the user to understand that they aren't allowed to stack this Command Line view with other views. We thought about using a standalone view without a title, which makes it very obvious that this view is "different" from the other views, but unfortunately, then you can no longer drag the view to a different location within the window...

Maybe there should be a feature/enhancement request to make the view tab look different for standalone views?

Regardless, it seems like this bug is still valid: if we allow standalone views at all, then we need to restrict where they can be dropped.

Moving to M7.


Simply out of cycles...deferring to 3.4.

*** Bug 172151 has been marked as a duplicate of this bug. ***
No chance this could get done in 3.4.2 then?! 8)
Would love this to be fixed, so I can use regular detached views for a certain thing in my product instead of my current hacked-up approach.

Unfortunately no...3.4.2 is already into Release Candidates...


Moving to triaged state.

Chris, if you want to contribute a patch I'd be happy to review it but I'm swamped so this would likely be the only way that a fix might make it into 3.5.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110635" />
    <CreationDate amount="2005-09-26 12:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Runtime" />
    <component amount="General" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Delay configuration of services</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Plugins should not load and configure services on startup: they may never
be used in some runs.

Patches will follow for
  org.eclipse.gmf.runtime.common.ui.services
  org.eclipse.gmf.runtime.common.ui.services.action
  org.eclipse.gmf.runtime.common.ui.services.dnd
  org.eclipse.gmf.runtime.common.ui.services.properties
  org.eclipse.gmf.runtime.diagram.core
  org.eclipse.gmf.runtime.diagram.ui
  org.eclipse.gmf.runtime.emf.core
  org.eclipse.gmf.runtime.emf.ui
Created attachment 27522
org.eclipse.gmf.runtime.common.ui.services-patch.txt
Created attachment 27523
org.eclipse.gmf.runtime.common.ui.services.action-patch.txt
Created attachment 27524
org.eclipse.gmf.runtime.common.ui.services.dnd-patch.txt
Created attachment 27525
org.eclipse.gmf.runtime.common.ui.services.properties-patch.txt
Created attachment 27526
org.eclipse.gmf.runtime.diagram.core-patch.txt
Created attachment 27527
org.eclipse.gmf.runtime.diagram.ui-patch.txt
Created attachment 27528
org.eclipse.gmf.runtime.emf.core-patch.txt
Created attachment 27529
org.eclipse.gmf.runtime.emf.ui-patch.txt
Noted dependency on bug 110485.
Delivered the patches
Created attachment 28681
additional patch for org.eclipse.gmf.runtime.diagram.core

DiagramPlugin
  + PresentationListener is defined by this plugin - stop listening here
    rather than in org.eclipse.gmf.runtime.diagram.ui

PresentationListener
  + avoid race conditions by initializing instance statically
  + start listening in constructor rather than as plugin is loaded
  + streamline addListenersOfNotifier
Created attachment 28682
incremental patch for org.eclipse.gmf.runtime.diagram.ui

DiagramUIPlugin
  + change type of singleton to eliminate need for casts
  + simplify getPluginId
  + PresentationListener is defined by org.eclipse.gmf.runtime.diagram.core:
    listening should be managed there
[GMF Restructure] Bug 319140 : product GMF and component
Runtime Common was the original product and component for this bug</WithStack>
    <WithOutStack>Plugins should not load and configure services on startup: they may never
be used in some runs.

Patches will follow for
  org.eclipse.gmf.runtime.common.ui.services
  org.eclipse.gmf.runtime.common.ui.services.action
  org.eclipse.gmf.runtime.common.ui.services.dnd
  org.eclipse.gmf.runtime.common.ui.services.properties
  org.eclipse.gmf.runtime.diagram.core
  org.eclipse.gmf.runtime.diagram.ui
  org.eclipse.gmf.runtime.emf.core
  org.eclipse.gmf.runtime.emf.ui
Created attachment 27522
org.eclipse.gmf.runtime.common.ui.services-patch.txt
Created attachment 27523
org.eclipse.gmf.runtime.common.ui.services.action-patch.txt
Created attachment 27524
org.eclipse.gmf.runtime.common.ui.services.dnd-patch.txt
Created attachment 27525
org.eclipse.gmf.runtime.common.ui.services.properties-patch.txt
Created attachment 27526
org.eclipse.gmf.runtime.diagram.core-patch.txt
Created attachment 27527
org.eclipse.gmf.runtime.diagram.ui-patch.txt
Created attachment 27528
org.eclipse.gmf.runtime.emf.core-patch.txt
Created attachment 27529
org.eclipse.gmf.runtime.emf.ui-patch.txt
Noted dependency on bug 110485.
Delivered the patches
Created attachment 28681
additional patch for org.eclipse.gmf.runtime.diagram.core

DiagramPlugin
  + PresentationListener is defined by this plugin - stop listening here
    rather than in org.eclipse.gmf.runtime.diagram.ui

PresentationListener
  + avoid race conditions by initializing instance statically
  + start listening in constructor rather than as plugin is loaded
  + streamline addListenersOfNotifier
Created attachment 28682
incremental patch for org.eclipse.gmf.runtime.diagram.ui

DiagramUIPlugin
  + change type of singleton to eliminate need for casts
  + simplify getPluginId
  + PresentationListener is defined by org.eclipse.gmf.runtime.diagram.core:
    listening should be managed there
[GMF Restructure] Bug 319140 : product GMF and component
Runtime Common was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110636" />
    <CreationDate amount="2005-09-26 12:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ant UI does not compile on JDK 1.5</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="376" end="423" />
        <code>[javac] 	return ((String)o1).compareTo(o2);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>In org.eclipse.ant.ui, 
Ant Editor/org/eclipse/ant/internal/ui/dtd/util.SortedMapFactory.java, the
method compareTo(String) in the type String is not applicable for the arguments
(Object)
    [javac] 1. ERROR in /usr/pkgsrc/Eclipse320/eclipse320/work/plugins/org.eclipse.ant.ui/Ant Editor/org/eclipse/ant/internal/ui/dtd/util/SortedMapFactory.java

    [javac]  (at line 25)

    [javac] 	return ((String)o1).compareTo(o2);

    [javac] 	                    ^^^^^^^^^

    [javac] The method compareTo(String) in the type String is not applicable for the arguments (Object)



# java -version
java version "1.5.0_04"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_04-b05)
Java HotSpot(TM) Client VM (build 1.5.0_04-b05, mixed mode)


# uname -a
NetBSD 10.0.2.7 2.1_RC5 NetBSD 2.1_RC5 (GENERIC) #0: Mon Sep 19 16:26:24 UTC 2005  riz@faith.netbsd.org:/home/builds/ab/netbsd-2-1-RC5/i386/200509182312Z-obj/home/builds/ab/netbsd-2-1-RC5/src/sys/arch/i386/compile/GENERIC i386

Fixed by removing the unused code that was causing the problem in SortedMapFactory.
Please verify Kevin.
verified</WithStack>
    <WithOutStack>In org.eclipse.ant.ui, 
Ant Editor/org/eclipse/ant/internal/ui/dtd/util.SortedMapFactory.java, the
method compareTo(String) in the type String is not applicable for the arguments
(Object)
    [javac] 1. ERROR in /usr/pkgsrc/Eclipse320/eclipse320/work/plugins/org.eclipse.ant.ui/Ant Editor/org/eclipse/ant/internal/ui/dtd/util/SortedMapFactory.java

    [javac]  (at line 25)

    [javac] 	return ((String)o1).compareTo(o2);

    [javac] 	                    ^^^^^^^^^

    [javac] The method compareTo(String) in the type String is not applicable for the arguments (Object)



# java -version
java version "1.5.0_04"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_04-b05)
Java HotSpot(TM) Client VM (build 1.5.0_04-b05, mixed mode)


# uname -a
NetBSD 10.0.2.7 2.1_RC5 NetBSD 2.1_RC5 (GENERIC) #0: Mon Sep 19 16:26:24 UTC 2005  riz@faith.netbsd.org:/home/builds/ab/netbsd-2-1-RC5/i386/200509182312Z-obj/home/builds/ab/netbsd-2-1-RC5/src/sys/arch/i386/compile/GENERIC i386

Fixed by removing the unused code that was causing the problem in SortedMapFactory.
Please verify Kevin.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110637" />
    <CreationDate amount="2005-09-26 12:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Dialog open notification</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="28">
      <source_code type="multicomment">
        <location start="836" end="884" />
        <code>/* Make the parent shell be temporary modal */</code>
      </source_code>
      <source_code type="assignment">
        <location start="885" end="908" />
        <code>Shell oldModal = null;</code>
      </source_code>
      <source_code type="assignment">
        <location start="909" end="933" />
        <code>Display display = null;</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="934" end="1121" />
        <code>if ((style &amp; (SWT.APPLICATION_MODAL | SWT.SYSTEM_MODAL)) != 0) {
		display = parent.getDisplay ();
		oldModal = display.getModalDialogShell ();
		display.setModalDialogShell (parent);
	}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1122" end="1192" />
        <code>//  ********************************************************</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1192" end="1251" />
        <code>// send a ShowDialog event just prior to actual open.  LB</code>
      </source_code>
      <source_code type="assignment">
        <location start="1251" end="1278" />
        <code>Event event = new Event();</code>
      </source_code>
      <source_code type="assignment">
        <location start="1279" end="1308" />
        <code>event.type = SWT.ShowDialog;</code>
      </source_code>
      <source_code type="assignment">
        <location start="1309" end="1332" />
        <code>event.widget = parent;</code>
      </source_code>
      <source_code type="assignment">
        <location start="1333" end="1371" />
        <code>event.display = parent.getDisplay ();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1450" end="1485" />
        <code>event.display.filterEvent (event);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1486" end="1555" />
        <code>//  ********************************************************</code>
      </source_code>
      <source_code type="multicomment">
        <location start="1555" end="1678" />
        <code>/*
	* Open the dialog.  If the open fails due to an invalid
	* file name, use an empty file name and open it again.
	*/</code>
      </source_code>
      <source_code type="assignment">
        <location start="1679" end="1765" />
        <code>boolean success = (save) ? OS.GetSaveFileName (struct) : OS.GetOpenFileName (struct);</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="1766" end="1979" />
        <code>if (OS.CommDlgExtendedError () == OS.FNERR_INVALIDFILENAME) {
		OS.MoveMemory (lpstrFile, new TCHAR (0, "", true), TCHAR.sizeof);
		success = (save) ? OS.GetSaveFileName (struct) : OS.GetOpenFileName (struct);
	}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="2025" end="2068" />
        <code>/* Free the memory that was allocated. */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2069" end="2104" />
        <code>OS.HeapFree (hHeap, 0, lpstrFile);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2105" end="2142" />
        <code>OS.HeapFree (hHeap, 0, lpstrFilter);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2143" end="2184" />
        <code>OS.HeapFree (hHeap, 0, lpstrInitialDir);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2185" end="2221" />
        <code>OS.HeapFree (hHeap, 0, lpstrTitle);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2222" end="2281" />
        <code>if (lpstrDefExt != 0) OS.HeapFree (hHeap, 0, lpstrDefExt);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2282" end="2343" />
        <code>// ************************************************</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2343" end="2372" />
        <code>// LB: Add event generation</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2372" end="2414" />
        <code>generateAndSendOpenEvent(fullPath, save);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2415" end="2475" />
        <code>// ************************************************</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2534" end="2601" />
        <code>// LB:  Setup an event that specifies the results from the dialog</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2601" end="2636" />
        <code>//      and send it to the display</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2636" end="3024" />
        <code>private void generateAndSendOpenEvent(String fullPath, boolean save)
{
	Event event = new Event();
	event.display = parent.getDisplay ();
	event.data = this;
	event.text = fullPath;
	if (fullPath == null)  // CANCEL Event
	{
		event.type = SWT.CANCEL;
	}
	else
	{
		if (save) event.type = SWT.SAVE;
		else event.type = SWT.OPEN;
	}
	// send the event
	event.display.filterEvent (event);
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>I'm writing a record/playback automation plugin.  This requires that I register 
for notification of events such as dialog show/hide.  Currently the Dialog 
subclasses (e.g., FileDialog, DirectoryDialog, etc) do not provide 
notification.  I'd suggest a new event, SWT.ShowDialog, that would be issued 
just prior to opening the Dialog.  I have sample code, if desired.

Thanks,
Larry Bergman
What are you using to do this now?
Sorry, Steve, I missed that you requested additional info the day after I posted this!

What we did is hacked a copy of SWT 3.0.  We were using that for quite a while.  Eventually, having a non-vanilla SWT became too painful (for deployment), so we no longer support Dialogs :(  

I'm including some sample code here, showing what we did.  The portions I added are marked with *****

From FileDialog.open():

	/* Make the parent shell be temporary modal */
	Shell oldModal = null;
	Display display = null;
	if ((style &amp; (SWT.APPLICATION_MODAL | SWT.SYSTEM_MODAL)) != 0) {
		display = parent.getDisplay ();
		oldModal = display.getModalDialogShell ();
		display.setModalDialogShell (parent);
	}

        //  ********************************************************
	// send a ShowDialog event just prior to actual open.  LB
	Event event = new Event();
	event.type = SWT.ShowDialog;
	event.widget = parent;
	event.display = parent.getDisplay ();
	event.data = this;  // use application data field to store the dialog itself
	event.display.filterEvent (event);
        //  ********************************************************

	
	/*
	* Open the dialog.  If the open fails due to an invalid
	* file name, use an empty file name and open it again.
	*/
	boolean success = (save) ? OS.GetSaveFileName (struct) : OS.GetOpenFileName (struct);
	if (OS.CommDlgExtendedError () == OS.FNERR_INVALIDFILENAME) {
		OS.MoveMemory (lpstrFile, new TCHAR (0, "", true), TCHAR.sizeof);
		success = (save) ? OS.GetSaveFileName (struct) : OS.GetOpenFileName (struct);
	}


and from near the end of the same routine:

	/* Free the memory that was allocated. */
	OS.HeapFree (hHeap, 0, lpstrFile);
	OS.HeapFree (hHeap, 0, lpstrFilter);
	OS.HeapFree (hHeap, 0, lpstrInitialDir);
	OS.HeapFree (hHeap, 0, lpstrTitle);
	if (lpstrDefExt != 0) OS.HeapFree (hHeap, 0, lpstrDefExt);

        // ************************************************
	// LB: Add event generation
	generateAndSendOpenEvent(fullPath, save);
        // ************************************************


With the newly defined routine generateAndSendOpenEvent:

// LB:  Setup an event that specifies the results from the dialog
//      and send it to the display
private void generateAndSendOpenEvent(String fullPath, boolean save)
{
	Event event = new Event();
	event.display = parent.getDisplay ();
	event.data = this;
	event.text = fullPath;
	if (fullPath == null)  // CANCEL Event
	{
		event.type = SWT.CANCEL;
	}
	else
	{
		if (save) event.type = SWT.SAVE;
		else event.type = SWT.OPEN;
	}
	// send the event
	event.display.filterEvent (event);
}</WithStack>
    <WithOutStack>I'm writing a record/playback automation plugin.  This requires that I register 
for notification of events such as dialog show/hide.  Currently the Dialog 
subclasses (e.g., FileDialog, DirectoryDialog, etc) do not provide 
notification.  I'd suggest a new event, SWT.ShowDialog, that would be issued 
just prior to opening the Dialog.  I have sample code, if desired.

Thanks,
Larry Bergman
What are you using to do this now?
Sorry, Steve, I missed that you requested additional info the day after I posted this!

What we did is hacked a copy of SWT 3.0.  We were using that for quite a while.  Eventually, having a non-vanilla SWT became too painful (for deployment), so we no longer support Dialogs :(  

I'm including some sample code here, showing what we did.  The portions I added are marked with *****

From FileDialog.open():

	/* Make the parent shell be temporary modal */
	Shell oldModal = null;
	Display display = null;
	if ((style &amp; (SWT.APPLICATION_MODAL | SWT.SYSTEM_MODAL)) != 0) {
		display = parent.getDisplay ();
		oldModal = display.getModalDialogShell ();
		display.setModalDialogShell (parent);
	}

        //  ********************************************************
	// send a ShowDialog event just prior to actual open.  LB
	Event event = new Event();
	event.type = SWT.ShowDialog;
	event.widget = parent;
	event.display = parent.getDisplay ();
	event.data = this;  // use application data field to store the dialog itself
	event.display.filterEvent (event);
        //  ********************************************************

	
	/*
	* Open the dialog.  If the open fails due to an invalid
	* file name, use an empty file name and open it again.
	*/
	boolean success = (save) ? OS.GetSaveFileName (struct) : OS.GetOpenFileName (struct);
	if (OS.CommDlgExtendedError () == OS.FNERR_INVALIDFILENAME) {
		OS.MoveMemory (lpstrFile, new TCHAR (0, "", true), TCHAR.sizeof);
		success = (save) ? OS.GetSaveFileName (struct) : OS.GetOpenFileName (struct);
	}


and from near the end of the same routine:

	/* Free the memory that was allocated. */
	OS.HeapFree (hHeap, 0, lpstrFile);
	OS.HeapFree (hHeap, 0, lpstrFilter);
	OS.HeapFree (hHeap, 0, lpstrInitialDir);
	OS.HeapFree (hHeap, 0, lpstrTitle);
	if (lpstrDefExt != 0) OS.HeapFree (hHeap, 0, lpstrDefExt);

        // ************************************************
	// LB: Add event generation
	generateAndSendOpenEvent(fullPath, save);
        // ************************************************


With the newly defined routine generateAndSendOpenEvent:

// LB:  Setup an event that specifies the results from the dialog
//      and send it to the display
private void generateAndSendOpenEvent(String fullPath, boolean save)
{
	Event event = new Event();
	event.display = parent.getDisplay ();
	event.data = this;
	event.text = fullPath;
	if (fullPath == null)  // CANCEL Event
	{
		event.type = SWT.CANCEL;
	}
	else
	{
		if (save) event.type = SWT.SAVE;
		else event.type = SWT.OPEN;
	}
	// send the event
	event.display.filterEvent (event);
}</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110638" />
    <CreationDate amount="2005-09-26 13:12:00 -0400" />
    <DupId amount="110598" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="wst.xml" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>XMLCatalogURIResolverExtension is not participating in "physical" stage of URI resolution</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>This defect is open to track the issue remaining after fixing bug 110356.

XMLCatalogURIResolverExtension was contributed to "postnormalization" 
stage, but not to "physical" stage.  We have to reconcile that.


*** This bug has been marked as a duplicate of 110598 ***
Closing as duplicate of 110598</WithStack>
    <WithOutStack>This defect is open to track the issue remaining after fixing bug 110356.

XMLCatalogURIResolverExtension was contributed to "postnormalization" 
stage, but not to "physical" stage.  We have to reconcile that.


*** This bug has been marked as a duplicate of 110598 ***
Closing as duplicate of 110598</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110639" />
    <CreationDate amount="2005-09-26 13:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5][assist] Type argument of parameterized type declaration should be proposed first while completing in allocation expression</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="31" end="64" />
        <code>Set&lt;String&gt; set = new Set&lt;St|&gt;();</code>
      </source_code>
      <source_code type="assignment">
        <location start="234" end="276" />
        <code>List&lt;String&gt; list = new ArrayList&lt;Str|&gt;();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>In simple following test case:
Set&lt;String&gt; set = new Set&lt;St|&gt;();

I would expect completion proposal "String" to be the first one. Instead I get
"StreamCorruptedException"...

Second following test cases (not as simple as first one):
List&lt;String&gt; list = new ArrayList&lt;Str|&gt;();
or
Test&lt;String&gt; gen = new SubTest&lt;Str|&gt;(); // where SubTest&lt;T&gt; extends Test&lt;T&gt;</WithStack>
    <WithOutStack>In simple following test case:
Set&lt;String&gt; set = new Set&lt;St|&gt;();

I would expect completion proposal "String" to be the first one. Instead I get
"StreamCorruptedException"...

Second following test cases (not as simple as first one):
List&lt;String&gt; list = new ArrayList&lt;Str|&gt;();
or
Test&lt;String&gt; gen = new SubTest&lt;Str|&gt;(); // where SubTest&lt;T&gt; extends Test&lt;T&gt;</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110640" />
    <CreationDate amount="2005-09-26 13:38:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Data" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Multi-pass Aggregate, Sorting and Filtering</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Some queries require multiple passes over the data. For example, a report may
wish to display a listing of top deals. The entry in the report for each deal
might show the size of the deal as a percentage of the total sales for that
quarter. Such "two-pass" aggregates require BIRT to make one pass over the data
to compute the total for the quarter, then a second pass to generate the report.

Cross-tabulated data also requires multiple passes. The first builds up the
cross-tabulation, the second generates detailed entries for the data.

The ability to filter on an aggregate requires this capability (example: if
total sales &gt; 1,000,000)

While multi-pass aggregates can be done in BIRT 1.0 if the data source supports
performing the first aggregate, it is not possible to do this when the data
source has no aggregation capabilities (for example, for flat files). In
addition, a developer may want to use the same data set for two different
sections in the report -- each with a different sort/aggregation. In this case,
the capabilities of the datasource cannot be used.

This project extends BIRT to provide support for multi-pass aggregates for all
data sources.
The cross-tabulate support part of this bug has been moved to bug 115765. The 
other bugs descriped in this report is fixed.
verified in build 20051118</WithStack>
    <WithOutStack>Some queries require multiple passes over the data. For example, a report may
wish to display a listing of top deals. The entry in the report for each deal
might show the size of the deal as a percentage of the total sales for that
quarter. Such "two-pass" aggregates require BIRT to make one pass over the data
to compute the total for the quarter, then a second pass to generate the report.

Cross-tabulated data also requires multiple passes. The first builds up the
cross-tabulation, the second generates detailed entries for the data.

The ability to filter on an aggregate requires this capability (example: if
total sales &gt; 1,000,000)

While multi-pass aggregates can be done in BIRT 1.0 if the data source supports
performing the first aggregate, it is not possible to do this when the data
source has no aggregation capabilities (for example, for flat files). In
addition, a developer may want to use the same data set for two different
sections in the report -- each with a different sort/aggregation. In this case,
the capabilities of the datasource cannot be used.

This project extends BIRT to provide support for multi-pass aggregates for all
data sources.
The cross-tabulate support part of this bug has been moved to bug 115765. The 
other bugs descriped in this report is fixed.
verified in build 20051118</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110641" />
    <CreationDate amount="2005-09-26 13:40:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Data" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Top N / Bottom N Report Layout</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Top N / Bottom N reports display information that is typically sorted by an
aggregated number. For example, the following Top 3 report shows the top
performing sales people:

Rank   Sales Person        Total Sales
1          Jim                        $3,045,000
2          Sally                      $2,945,000
3          Fred                      $1,546,000

Top N / Bottom N reports are often quite difficult for users to create from the
basic listing elements in a report since they involve two passes of the data --
one to do the aggregation and another to sort by the aggregated numbers and only
show the top/bottom N values.

This project is top provide capabilities that allow a user to easily create a
Top N / Bottom N type report section.
(In reply to comment #0)
An "All Other" option is very useful so as to be able to show e.g. top sales 
performers in the context of total sales.  Without this option, it's not easy 
to see the relationship of the Top N to the whole.  Particularly valuable when 
used with pie charts.

&gt; Top N / Bottom N reports display information that is typically sorted by an
&gt; aggregated number. For example, the following Top 3 report shows the top
&gt; performing sales people:
&gt; Rank   Sales Person        Total Sales
&gt; 1          Jim                        $3,045,000
&gt; 2          Sally                      $2,945,000
&gt; 3          Fred                      $1,546,000
&gt; Top N / Bottom N reports are often quite difficult for users to create from 
the
&gt; basic listing elements in a report since they involve two passes of the 
data --
&gt; one to do the aggregation and another to sort by the aggregated numbers and 
only
&gt; show the top/bottom N values.
&gt; This project is top provide capabilities that allow a user to easily create a
&gt; Top N / Bottom N type report section.


Fixed in source.
verified in build 20051118</WithStack>
    <WithOutStack>Top N / Bottom N reports display information that is typically sorted by an
aggregated number. For example, the following Top 3 report shows the top
performing sales people:

Rank   Sales Person        Total Sales
1          Jim                        $3,045,000
2          Sally                      $2,945,000
3          Fred                      $1,546,000

Top N / Bottom N reports are often quite difficult for users to create from the
basic listing elements in a report since they involve two passes of the data --
one to do the aggregation and another to sort by the aggregated numbers and only
show the top/bottom N values.

This project is top provide capabilities that allow a user to easily create a
Top N / Bottom N type report section.
(In reply to comment #0)
An "All Other" option is very useful so as to be able to show e.g. top sales 
performers in the context of total sales.  Without this option, it's not easy 
to see the relationship of the Top N to the whole.  Particularly valuable when 
used with pie charts.

&gt; Top N / Bottom N reports display information that is typically sorted by an
&gt; aggregated number. For example, the following Top 3 report shows the top
&gt; performing sales people:
&gt; Rank   Sales Person        Total Sales
&gt; 1          Jim                        $3,045,000
&gt; 2          Sally                      $2,945,000
&gt; 3          Fred                      $1,546,000
&gt; Top N / Bottom N reports are often quite difficult for users to create from 
the
&gt; basic listing elements in a report since they involve two passes of the 
data --
&gt; one to do the aggregation and another to sort by the aggregated numbers and 
only
&gt; show the top/bottom N values.
&gt; This project is top provide capabilities that allow a user to easily create a
&gt; Top N / Bottom N type report section.


Fixed in source.
verified in build 20051118</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110642" />
    <CreationDate amount="2005-09-26 13:42:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Data" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Provide support for binding Blob/Clob data to report controls</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Many database schema, for example those used for call center or customer support
applications, contain columns defined as character large objects (CLOBs) to
contain "memo" type fields. Fields that will contain, for example, the variable
length and free format text notes that the call center representative takes when
speaking to a customer.

This project will provide easy support for displaying CLOBs in a BIRT report.
Note that it should be considered that some CLOBs may contain HTML formatting tags.
If this bug only concerns Clob, it is solved. Please refer to 102349.
Verified in build 20051018. 
Please note updates to include BLOB support in addition to CLOB support.

Many database schemas, such as those used for call center or customer support applications, contain columns defined as character large objects (CLOBs). These fields contain, for example, the variable length and free format text notes that the call center representative takes when speaking to a customer. In addition, an human resources system might store pictures of employees in a database as binary large objects (BLOBS). This project will provide easy support for displaying BLOBS/CLOBs in a BIRT report.
BPS 3 has been completed. Both Blob and Clob data are now supported.

http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS3

Verified in build 20051226</WithStack>
    <WithOutStack>Many database schema, for example those used for call center or customer support
applications, contain columns defined as character large objects (CLOBs) to
contain "memo" type fields. Fields that will contain, for example, the variable
length and free format text notes that the call center representative takes when
speaking to a customer.

This project will provide easy support for displaying CLOBs in a BIRT report.
Note that it should be considered that some CLOBs may contain HTML formatting tags.
If this bug only concerns Clob, it is solved. Please refer to 102349.
Verified in build 20051018. 
Please note updates to include BLOB support in addition to CLOB support.

Many database schemas, such as those used for call center or customer support applications, contain columns defined as character large objects (CLOBs). These fields contain, for example, the variable length and free format text notes that the call center representative takes when speaking to a customer. In addition, an human resources system might store pictures of employees in a database as binary large objects (BLOBS). This project will provide easy support for displaying BLOBS/CLOBs in a BIRT report.
BPS 3 has been completed. Both Blob and Clob data are now supported.

http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS3

Verified in build 20051226</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110643" />
    <CreationDate amount="2005-09-26 13:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[API] NewClassCreationWizard needs to be API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>We need a Java class creation wizard that we can a) launch programmatically and
b) set and get the new class' name, package fragment, superclass, super
interfaces, etc. (i.e., prime it before launch and retrieve values after
finish).  Unfortunately, in Eclipse 3.1 NewClassCreationWizard is not only
internal (i.e., not API) but also does not provide the needed getters/setters. 
So, our current choices seem to be: a) subclass NewClassCreationWizard anyway
and implement the needed getters/setters ourselves; or b) copy &amp; paste the code
from NewClassCreationWizard (and its superclass, NewElementWizard) to create our
own class creation wizard (and implement the getters/setters we need).  Neither
of these choices are good.  (We currently do the former.)

In Eclipse 3.2 we'd like NewClassCreationWizard to be API and for it to support
the getters/setters we need (i.e., give access to its "model").
NewClassWizardPage and the pages for all other new type wizards are API. The
idea is that clients create their own wizards and reuse and extend our pages.

The NewClassWizardPage has all the getter and setters you need.
Thanks for the quick reply, but please reconsider.  Sure, we could write our own
wizard.  And so could everyone else who has this kind of requirement. (We're not
the only ones to ask for this, are we?)  But that's not a very good option
because it means essentially duplicating the 250+ lines of (working!) code from
NewClassCreationWizard and NewElementWizard.  And NewElementWizard itself uses
several other internal classes, which means even more duplicate code
writing/copying.  That seems like a lot of duplication (and wasted reuse
opportunity) just to get programmatic launching and a few additional getters &amp;
setters.  So why not make the NewClassCreationWizard API?  What are the reasons
not to?
We're just hestitating in adding API that normally is quite some work to build
and especially to maintain.
The question is, do you really need the wizard as is: same label, description,
wizard banner image. Same error dialog message when the creation fails, open an
editor on the created element ect.

If yes, should we just make the action API that opens the wizard?

If no, we would add extra API to override these properties too (plus the extra
setters you want), it seems to me that the code for all the API is just larger
that the code the wizard contains. 

As soon as your wizard is a derivation, e.g. like the 'create Applet' wizard, I
think reimplementing the wizard makes much more sense as you should really have
a different banner image, label ect.

This is the second request (assuming you are unrelated to the VE team), so of
course we can be convinced.
I'd be glad if you could give me feedback on comment 3.
*** Bug 111463 has been marked as a duplicate of this bug. ***
(In reply to comment #3): I understand (and support) being cautious about adding
new API.  In our current use case we do not need to modify the banner,
description, etc.  All we need to be able to do is what I stated in my original
description.  If making the action API gives us what we need, then that's fine
with us.
Others might want to be able to customize it more (including changing the
banner, etc., as you mentioned).  I can imagine lots of ways potential users
might want to  be able to customize it, but you probably don't want to go
creating new API for hypothetical use cases.
Maybe Rich Kulp (VE team) can respond with what their specific requirements are.
We are using most of the JDT wizards (Package, Class, Interface &amp; Enum). Our
requirement is to display the wizard and (if possible) initialize some of the
fields in the wizard page and obviously get the data from the wizard on Finish. 

We DO NOT need to change the look of the wizard (banner, icons etc) and would
like to reuse the error messages etc. So other than wanting to preset some of
the fields in the Wizard, we basically would love to just use the existing wizards.

We tried to move over to using the wizard pages instead but we ended up
duplicating everything that the jdt wizards already have (including image and
message resources). Seemed like a bad idea ... hence the request that the
wizards be refactored into API.


Gary, you mentioned that you want to fill in some default values. Can you
achieve this by creaing a selection (with e.g. a type in it if you want to
extend that type)?
(In reply to comment #8)
&gt; Gary, you mentioned that you want to fill in some default values. Can you
&gt; achieve this by creaing a selection (with e.g. a type in it if you want to
&gt; extend that type)?
We currently initialize it with the IJavaProject (wrapped in a
StructuredSelection).  I can see that if we instead initialized with the
superclass (as an IType) it would also initialize the superclass and package
fragment for us (although I haven't tried this).  But it doesn't seem like it
would let us set the class name.  And we typically want to set the package
fragment different than that of the superclass.  Or do I misunderstand the question?


Ok, I see, that makes sense. You are right, you couldn't do that right now.
added new API in org.eclipse.jdt.ui.actions:
  OpenNewAnnotationWizardAction
  OpenNewClassWizardAction
  OpenNewEnumWizardAction
  OpenNewInterfaceWizardAction
  OpenNewJavaProjectWizardAction
  OpenNewPackageWizardAction
  OpenNewSourceFolderWizardAction

You can configure these action using a selection or using a preconfigured page.

&gt; 20051109
fixed
So you shoudl find the new API's in something like I20051115. Feedback is highly
welcome!
We'll definitely give it a try and let you know.  Thanks very much for this.
Verified using I20051213-0010
The new API is working out fine.  Thanks!
Note that if you want _extend_ the wizard or create a specified wizard, you better create your own wizard and action. In that case you will have the correct images, labels, specific opening strategy: All things that are defined in the wizard.

We're opening the created type with the editor that is currently configured as default, which I think is right thing to do. If you have a better editor, you should probably register your editor as the default editor.

And: The wizard doesn't contain much code: The hard stuff is in the page which are all API. So I think the current solution is the way to go.
(In reply to comment #17)
Agreed.  We're happy campers now, using the OpenNew*WizardAction API.  Thanks again.</WithStack>
    <WithOutStack>We need a Java class creation wizard that we can a) launch programmatically and
b) set and get the new class' name, package fragment, superclass, super
interfaces, etc. (i.e., prime it before launch and retrieve values after
finish).  Unfortunately, in Eclipse 3.1 NewClassCreationWizard is not only
internal (i.e., not API) but also does not provide the needed getters/setters. 
So, our current choices seem to be: a) subclass NewClassCreationWizard anyway
and implement the needed getters/setters ourselves; or b) copy &amp; paste the code
from NewClassCreationWizard (and its superclass, NewElementWizard) to create our
own class creation wizard (and implement the getters/setters we need).  Neither
of these choices are good.  (We currently do the former.)

In Eclipse 3.2 we'd like NewClassCreationWizard to be API and for it to support
the getters/setters we need (i.e., give access to its "model").
NewClassWizardPage and the pages for all other new type wizards are API. The
idea is that clients create their own wizards and reuse and extend our pages.

The NewClassWizardPage has all the getter and setters you need.
Thanks for the quick reply, but please reconsider.  Sure, we could write our own
wizard.  And so could everyone else who has this kind of requirement. (We're not
the only ones to ask for this, are we?)  But that's not a very good option
because it means essentially duplicating the 250+ lines of (working!) code from
NewClassCreationWizard and NewElementWizard.  And NewElementWizard itself uses
several other internal classes, which means even more duplicate code
writing/copying.  That seems like a lot of duplication (and wasted reuse
opportunity) just to get programmatic launching and a few additional getters &amp;
setters.  So why not make the NewClassCreationWizard API?  What are the reasons
not to?
We're just hestitating in adding API that normally is quite some work to build
and especially to maintain.
The question is, do you really need the wizard as is: same label, description,
wizard banner image. Same error dialog message when the creation fails, open an
editor on the created element ect.

If yes, should we just make the action API that opens the wizard?

If no, we would add extra API to override these properties too (plus the extra
setters you want), it seems to me that the code for all the API is just larger
that the code the wizard contains. 

As soon as your wizard is a derivation, e.g. like the 'create Applet' wizard, I
think reimplementing the wizard makes much more sense as you should really have
a different banner image, label ect.

This is the second request (assuming you are unrelated to the VE team), so of
course we can be convinced.
I'd be glad if you could give me feedback on comment 3.
*** Bug 111463 has been marked as a duplicate of this bug. ***
(In reply to comment #3): I understand (and support) being cautious about adding
new API.  In our current use case we do not need to modify the banner,
description, etc.  All we need to be able to do is what I stated in my original
description.  If making the action API gives us what we need, then that's fine
with us.
Others might want to be able to customize it more (including changing the
banner, etc., as you mentioned).  I can imagine lots of ways potential users
might want to  be able to customize it, but you probably don't want to go
creating new API for hypothetical use cases.
Maybe Rich Kulp (VE team) can respond with what their specific requirements are.
We are using most of the JDT wizards (Package, Class, Interface &amp; Enum). Our
requirement is to display the wizard and (if possible) initialize some of the
fields in the wizard page and obviously get the data from the wizard on Finish. 

We DO NOT need to change the look of the wizard (banner, icons etc) and would
like to reuse the error messages etc. So other than wanting to preset some of
the fields in the Wizard, we basically would love to just use the existing wizards.

We tried to move over to using the wizard pages instead but we ended up
duplicating everything that the jdt wizards already have (including image and
message resources). Seemed like a bad idea ... hence the request that the
wizards be refactored into API.


Gary, you mentioned that you want to fill in some default values. Can you
achieve this by creaing a selection (with e.g. a type in it if you want to
extend that type)?
(In reply to comment #8)
&gt; Gary, you mentioned that you want to fill in some default values. Can you
&gt; achieve this by creaing a selection (with e.g. a type in it if you want to
&gt; extend that type)?
We currently initialize it with the IJavaProject (wrapped in a
StructuredSelection).  I can see that if we instead initialized with the
superclass (as an IType) it would also initialize the superclass and package
fragment for us (although I haven't tried this).  But it doesn't seem like it
would let us set the class name.  And we typically want to set the package
fragment different than that of the superclass.  Or do I misunderstand the question?


Ok, I see, that makes sense. You are right, you couldn't do that right now.
added new API in org.eclipse.jdt.ui.actions:
  OpenNewAnnotationWizardAction
  OpenNewClassWizardAction
  OpenNewEnumWizardAction
  OpenNewInterfaceWizardAction
  OpenNewJavaProjectWizardAction
  OpenNewPackageWizardAction
  OpenNewSourceFolderWizardAction

You can configure these action using a selection or using a preconfigured page.

&gt; 20051109
fixed
So you shoudl find the new API's in something like I20051115. Feedback is highly
welcome!
We'll definitely give it a try and let you know.  Thanks very much for this.
Verified using I20051213-0010
The new API is working out fine.  Thanks!
Note that if you want _extend_ the wizard or create a specified wizard, you better create your own wizard and action. In that case you will have the correct images, labels, specific opening strategy: All things that are defined in the wizard.

We're opening the created type with the editor that is currently configured as default, which I think is right thing to do. If you have a better editor, you should probably register your editor as the default editor.

And: The wizard doesn't contain much code: The hard stuff is in the page which are all API. So I think the current solution is the way to go.
(In reply to comment #17)
Agreed.  We're happy campers now, using the OpenNew*WizardAction API.  Thanks again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110644" />
    <CreationDate amount="2005-09-26 13:44:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>BIRT Java Script Objects</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Remove class defintion for ReportDefn,  ElementDefn, PropertyDefn, Color, Dimension from ROM.def</Line>
          <Line />
          <Line>2. Change report.design property type to org.eclipse.birt.report.api.script.IReportDesign. This may require model to move the Report scriptableObject implementation to engine.script package.</Line>
          <Line />
          <Line>3. Support interllisense recursively for global variable "Report" in both expression builder &amp; script editor.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- "this" object for all report items, data source/data set, and all objects that are used in those objects.</Line>
          <Line>- a coompleted implementation for global variable "Report" that provide methods for BIRT script developers to access report item, data seource/data set design and instance.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>BIRT 1.0 included support for many of the scripting object capabilities that are
in JavaScript. This project is intended to add more scripting objects
Reassigning to Rima since it's JavaScript
Can you provide more details what additional java script objects are needed. Thanks.
Please refer to BPS 4
The following javaScript objects are created:
- "this" object for all report items, data source/data set, and all objects that are used in those objects.
- a coompleted implementation for global variable "Report" that provide methods for BIRT script developers to access report item, data seource/data set design and instance.

Required changes are:

1. Remove class defintion for ReportDefn,  ElementDefn, PropertyDefn, Color, Dimension from ROM.def

2. Change report.design property type to org.eclipse.birt.report.api.script.IReportDesign. This may require model to move the Report scriptableObject implementation to engine.script package.

3. Support interllisense recursively for global variable "Report" in both expression builder &amp; script editor.

Reassign to model team to complete 1, 2 first. Will file a new bug for GUI team to support intelisense for "Report" varible.

Created attachment 32131
BIRT 2.0 scripting API - javaScript.
Created attachment 32178
BIRT javascript API
Add the Report script implementation in Engine plugin</WithStack>
    <WithOutStack>BIRT 1.0 included support for many of the scripting object capabilities that are
in JavaScript. This project is intended to add more scripting objects
Reassigning to Rima since it's JavaScript
Can you provide more details what additional java script objects are needed. Thanks.
Please refer to BPS 4
The following javaScript objects are created:
- "this" object for all report items, data source/data set, and all objects that are used in those objects.
- a coompleted implementation for global variable "Report" that provide methods for BIRT script developers to access report item, data seource/data set design and instance.

Required changes are:

1. Remove class defintion for ReportDefn,  ElementDefn, PropertyDefn, Color, Dimension from ROM.def

2. Change report.design property type to org.eclipse.birt.report.api.script.IReportDesign. This may require model to move the Report scriptableObject implementation to engine.script package.

3. Support interllisense recursively for global variable "Report" in both expression builder &amp; script editor.

Reassign to model team to complete 1, 2 first. Will file a new bug for GUI team to support intelisense for "Report" varible.

Created attachment 32131
BIRT 2.0 scripting API - javaScript.
Created attachment 32178
BIRT javascript API
Add the Report script implementation in Engine plugin</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110645" />
    <CreationDate amount="2005-09-26 13:47:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Engine" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Page-on-Demand Navigation API Support</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Page-on-demand, also referred to as demand paging, is a mechanism for dealing
efficiently with large report documents over a remote connection such as the
internet. Instead of reading an entire report into memory or sending an entire
report over a network, pages are requested by the application and sent as
needed. This method of data transfer improves response time for the end user and
optimizes resource usage.

When integrating BIRT into applications, particularly web applications,
page-on-demand capabilities are needed to ensure that the application can be
built with acceptable performance. This project provides the  application
developer with viewing APIs for activities that include:

Retrieve the next or previous page relative to the current page in a report.
Goto a specific page in a report.
Goto first or last pages in a report.
The APi only needs to support get age count and go to specific page. Behavior 
such as go to next page, previous page, etc. is supported by the middle tier 
who uses engine, not the engine itself.
have finished the API.
Verify this bug.</WithStack>
    <WithOutStack>Page-on-demand, also referred to as demand paging, is a mechanism for dealing
efficiently with large report documents over a remote connection such as the
internet. Instead of reading an entire report into memory or sending an entire
report over a network, pages are requested by the application and sent as
needed. This method of data transfer improves response time for the end user and
optimizes resource usage.

When integrating BIRT into applications, particularly web applications,
page-on-demand capabilities are needed to ensure that the application can be
built with acceptable performance. This project provides the  application
developer with viewing APIs for activities that include:

Retrieve the next or previous page relative to the current page in a report.
Goto a specific page in a report.
Goto first or last pages in a report.
The APi only needs to support get age count and go to specific page. Behavior 
such as go to next page, previous page, etc. is supported by the middle tier 
who uses engine, not the engine itself.
have finished the API.
Verify this bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110646" />
    <CreationDate amount="2005-09-26 13:49:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Viewer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Page-on-Demand Navigation viewing framework</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Page-on-demand, also referred to as demand paging, is a mechanism for dealing
efficiently with large report documents over a remote connection such as the
internet. Instead of reading an entire report into memory or sending an entire
report over a network, pages are requested by the application and sent as
needed. This method of data transfer improves response time for the end user and
optimizes resource usage.

When integrating BIRT into applications, particularly web applications,
page-on-demand capabilities are needed to ensure that the application can be
built with acceptable performance. 

This project includes an exemplary implementation of a viewing framework that
allows application developers to easily integrate viewing functionality into
their applications and customize the viewing capabilities they choose.
implemented
Verified in build 20051223.</WithStack>
    <WithOutStack>Page-on-demand, also referred to as demand paging, is a mechanism for dealing
efficiently with large report documents over a remote connection such as the
internet. Instead of reading an entire report into memory or sending an entire
report over a network, pages are requested by the application and sent as
needed. This method of data transfer improves response time for the end user and
optimizes resource usage.

When integrating BIRT into applications, particularly web applications,
page-on-demand capabilities are needed to ensure that the application can be
built with acceptable performance. 

This project includes an exemplary implementation of a viewing framework that
allows application developers to easily integrate viewing functionality into
their applications and customize the viewing capabilities they choose.
implemented
Verified in build 20051223.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110647" />
    <CreationDate amount="2005-09-26 13:50:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Runtime" />
    <component amount="General" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Connectors attaching to borders of figures causes rectilinear routing problems</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="16">
        <Lines>
          <Line>1. Create a geoshapes diagram</Line>
          <Line>2. Create two Shadow Rectangles side by side</Line>
          <Line>3. Connect a line from the shadowed border of the first rectangle to the</Line>
          <Line>shadowed border of the second rectangle.</Line>
          <Line>----   ----</Line>
          <Line>|  |---|  |</Line>
          <Line>----   ----</Line>
          <Line />
          <Line>4. Change the connector routing to rectinilear</Line>
          <Line>5. Reposition the connector by dragging it up and down between the two</Line>
          <Line>rectangles</Line>
          <Line>Expected: Line moves incrementally up and down pixel by pixel</Line>
          <Line>Actual: Line jumps to top or bottom of rectangles</Line>
          <Line>Changing component to "Runtime Diagram"</Line>
          <Line>Created attachment 28728</Line>
          <Line>Patch</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If a connector is created between two figures by attaching the ends of the 
connector to the borders of the figures and the routing is set to rectilinear, 
the connector cannot be repositioned pixel by pixel.

Steps to reproduce:
 1. Create a geoshapes diagram
 2. Create two Shadow Rectangles side by side
 3. Connect a line from the shadowed border of the first rectangle to the 
shadowed border of the second rectangle.
----   ----
|  |---|  |
----   ----

 4. Change the connector routing to rectinilear
 5. Reposition the connector by dragging it up and down between the two 
rectangles
    Expected: Line moves incrementally up and down pixel by pixel
    Actual: Line jumps to top or bottom of rectangles
Changing component to "Runtime Diagram"
Created attachment 28728
Patch

Patch fix for defect in SlidableAnchor class
Created attachment 28729
JUnit test for patch

JUnit test coverage for patch
- SlidableAnchor class wasn't handling special case where reference point to 
calculate the location from was contained in the owner bounding box.  In this 
case, we want to default to ChopBox behavior which will calculate the location 
using the center point as the owner reference instead of the stored reference 
point the Slidable achor utilizes normally.

[GMF Restructure] Bug 319140 : product GMF and component
Runtime Diagram was the original product and component for this bug</WithStack>
    <WithOutStack>If a connector is created between two figures by attaching the ends of the 
connector to the borders of the figures and the routing is set to rectilinear, 
the connector cannot be repositioned pixel by pixel.

Steps to reproduce:
 1. Create a geoshapes diagram
 2. Create two Shadow Rectangles side by side
 3. Connect a line from the shadowed border of the first rectangle to the 
shadowed border of the second rectangle.
----   ----
|  |---|  |
----   ----

 4. Change the connector routing to rectinilear
 5. Reposition the connector by dragging it up and down between the two 
rectangles
    Expected: Line moves incrementally up and down pixel by pixel
    Actual: Line jumps to top or bottom of rectangles
Changing component to "Runtime Diagram"
Created attachment 28728
Patch

Patch fix for defect in SlidableAnchor class
Created attachment 28729
JUnit test for patch

JUnit test coverage for patch
- SlidableAnchor class wasn't handling special case where reference point to 
calculate the location from was contained in the owner bounding box.  In this 
case, we want to default to ChopBox behavior which will calculate the location 
using the center point as the owner reference instead of the stored reference 
point the Slidable achor utilizes normally.

[GMF Restructure] Bug 319140 : product GMF and component
Runtime Diagram was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110648" />
    <CreationDate amount="2005-09-26 13:51:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Hyperlinks to Other Reports</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- DE changes are done</Line>
          <Line>- BIRT designer changes to create hyperlinks with drillthrough options are done.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>BIRT 1.0 allows the report developer to embed links to arbitrary web sites. This
mechanism can be used to embed links to other reports thereby providing report
drill down capability. However, this URL is long and complex and presents a
problem when a report is migrated from a development to a test or a production
environment because the URL needs to be updated.

This project provides the report developer the capability to link easily to
another report while not hard wiring the report to a particular environment.
Additionally, if a user navigates to another report, it also provides the
mechanisms to retain the state of the original report. This is especially
important in the context of interactive viewing of a report where the user may
have sorted data in a table.
- DE changes are done
- BIRT designer changes to create hyperlinks with drillthrough options are done.

- Looks like there is bug in the engine ( https://bugs.eclipse.org/bugs/show_bug.cgi?id=118303 )</WithStack>
    <WithOutStack>BIRT 1.0 allows the report developer to embed links to arbitrary web sites. This
mechanism can be used to embed links to other reports thereby providing report
drill down capability. However, this URL is long and complex and presents a
problem when a report is migrated from a development to a test or a production
environment because the URL needs to be updated.

This project provides the report developer the capability to link easily to
another report while not hard wiring the report to a particular environment.
Additionally, if a user navigates to another report, it also provides the
mechanisms to retain the state of the original report. This is especially
important in the context of interactive viewing of a report where the user may
have sorted data in a table.
- DE changes are done
- BIRT designer changes to create hyperlinks with drillthrough options are done.

- Looks like there is bug in the engine ( https://bugs.eclipse.org/bugs/show_bug.cgi?id=118303 )</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110649" />
    <CreationDate amount="2005-09-26 13:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="EMF" />
    <component amount="Validation" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eroneous references to xtools</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="7">
        <Lines>
          <Line>1) The processing instruction target for EMF Validation plug-in will be renamed</Line>
          <Line>from "xtools-validation" to "emf-validation".</Line>
          <Line>2) The markerType for ValidationMarkerResolution will be renamed</Line>
          <Line>from "com.ibm.xtools.modeler.validationProblem"</Line>
          <Line>to "org.eclipse.emf.validationProblem".</Line>
          <Line>Removed all references to xtools from EMFT.</Line>
          <Line>Move to verified as per bug 206558.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- Select all org.eclipse.emf.* plug-ins in workspace.</Line>
          <Line>- Text search for "xtools" for following file types: "*.html, *.xml, *.java,</Line>
          <Line>*.htm, *.properties"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Steps:
- Select all org.eclipse.emf.* plug-ins in workspace.
- Text search for "xtools" for following file types: "*.html, *.xml, *.java, 
*.htm, *.properties"

Result:
Reference to old xtools plug-ins show up in documentation, java files and 
properties files.
As a result of removing xtools references, two API changes will need to be made:

1) The processing instruction target for EMF Validation plug-in will be renamed 
from "xtools-validation" to "emf-validation".
2) The markerType for ValidationMarkerResolution will be renamed 
from "com.ibm.xtools.modeler.validationProblem" 
to "org.eclipse.emf.validationProblem".
Removed all references to xtools from EMFT.
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>Steps:
- Select all org.eclipse.emf.* plug-ins in workspace.
- Text search for "xtools" for following file types: "*.html, *.xml, *.java, 
*.htm, *.properties"

Result:
Reference to old xtools plug-ins show up in documentation, java files and 
properties files.
As a result of removing xtools references, two API changes will need to be made:

1) The processing instruction target for EMF Validation plug-in will be renamed 
from "xtools-validation" to "emf-validation".
2) The markerType for ValidationMarkerResolution will be renamed 
from "com.ibm.xtools.modeler.validationProblem" 
to "org.eclipse.emf.validationProblem".
Removed all references to xtools from EMFT.
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110650" />
    <CreationDate amount="2005-09-26 13:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Need API for determining Java line delimiter</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="multicomment">
        <location start="346" end="794" />
        <code>/**
	 * Returns the default line delimiter for the given document. This is either
the delimiter of the first line, or the platform line delimiter if it is
	 * a legal line delimiter or the first one of the legal line delimiters. The
default line delimiter should be used when performing document
	 * manipulations that span multiple lines.
	 *
	 * @param document the document
	 * @return the document's default line delimiter
	 * @since 3.0
	 */</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>We need to be able to determine the line delimiter to use when adding code to an
existing Java class.  We currently use
class.org.eclipse.jdt.internal.corext.codemanipulation.StubUtility.getLineDelimiterUsed(IJavaElement),
which is internal.  We need public API for this.
There is org.eclipse.jface.text.TextUtilities in plugin org.eclipse.text.

	/**
	 * Returns the default line delimiter for the given document. This is either
the delimiter of the first line, or the platform line delimiter if it is
	 * a legal line delimiter or the first one of the legal line delimiters. The
default line delimiter should be used when performing document
	 * manipulations that span multiple lines.
	 *
	 * @param document the document
	 * @return the document's default line delimiter
	 * @since 3.0
	 */
	public static String getDefaultLineDelimiter(IDocument document)

Would this do the trick ? Or do you need it to be on an IJavaElement per se ?
Hmm.  I dunno.  We have an IJavaElement in hand, not an IDocument.  Is there a
(quick, efficient) way to get an IDocument given an IJavaElement?
Added API IOpenable#findRecommendedLineSeparator() and tests
JavaModelTests#testFindLineSeparator01/04.
Verified for 3.2 M4 using build I20051212-0010
*** Bug 111464 has been marked as a duplicate of this bug. ***
Thanks!</WithStack>
    <WithOutStack>We need to be able to determine the line delimiter to use when adding code to an
existing Java class.  We currently use
class.org.eclipse.jdt.internal.corext.codemanipulation.StubUtility.getLineDelimiterUsed(IJavaElement),
which is internal.  We need public API for this.
There is org.eclipse.jface.text.TextUtilities in plugin org.eclipse.text.

	/**
	 * Returns the default line delimiter for the given document. This is either
the delimiter of the first line, or the platform line delimiter if it is
	 * a legal line delimiter or the first one of the legal line delimiters. The
default line delimiter should be used when performing document
	 * manipulations that span multiple lines.
	 *
	 * @param document the document
	 * @return the document's default line delimiter
	 * @since 3.0
	 */
	public static String getDefaultLineDelimiter(IDocument document)

Would this do the trick ? Or do you need it to be on an IJavaElement per se ?
Hmm.  I dunno.  We have an IJavaElement in hand, not an IDocument.  Is there a
(quick, efficient) way to get an IDocument given an IJavaElement?
Added API IOpenable#findRecommendedLineSeparator() and tests
JavaModelTests#testFindLineSeparator01/04.
Verified for 3.2 M4 using build I20051212-0010
*** Bug 111464 has been marked as a duplicate of this bug. ***
Thanks!</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110651" />
    <CreationDate amount="2005-09-26 13:52:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Viewer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Bookmarks (Hyperlinks into a Report Body)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="2">
        <Lines>
          <Line>- DE changes are done</Line>
          <Line>- UI changes are done.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- The bookmarks are generated but the URL is not correct.</Line>
          <Line>- Maybe the book mark string needs to encoded.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It is often desirable to hyperlink into a specific point in a report document,
for example, to a chart that has sales summaries for the Western Region. Many
report items can be the target of hyperlinks. The BIRT bookmark feature is a
string that uniquely identifies the item instance within the report. This
project provides support for the bookmark concept in BIRT reports.
For bookmark support
- DE changes are done
- UI changes are done.

For the bookmark feature to work end to end, the report document pagination feature also needs to be done. Reassigning to engine team.
Issue noticed
---------------
- The bookmarks are generated but the URL is not correct.
- Maybe the book mark string needs to encoded.

Example below - 
http://127.0.0.1:53362/viewer/frameset?__report=E%3A%5Cbirt%5Cdemo%5Chyperlink%5CproductsBookmark.rptdesign#La Corne D'abondance, Co.


please provide a sample report.
fixed
Verified in build 20060110.</WithStack>
    <WithOutStack>It is often desirable to hyperlink into a specific point in a report document,
for example, to a chart that has sales summaries for the Western Region. Many
report items can be the target of hyperlinks. The BIRT bookmark feature is a
string that uniquely identifies the item instance within the report. This
project provides support for the bookmark concept in BIRT reports.
For bookmark support
- DE changes are done
- UI changes are done.

For the bookmark feature to work end to end, the report document pagination feature also needs to be done. Reassigning to engine team.
Issue noticed
---------------
- The bookmarks are generated but the URL is not correct.
- Maybe the book mark string needs to encoded.

Example below - 
http://127.0.0.1:53362/viewer/frameset?__report=E%3A%5Cbirt%5Cdemo%5Chyperlink%5CproductsBookmark.rptdesign#La Corne D'abondance, Co.


please provide a sample report.
fixed
Verified in build 20060110.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110652" />
    <CreationDate amount="2005-09-26 13:56:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Engine" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Progressive Viewing API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When a report is large, generating the report could take a long time. It is not
efficient or user friendly to require a user to wait until the whole report is
generated before viewing the first page. Progressive viewing allows a user to
view the first few pages of a report while the remaining pages are still being
generated. This provides a web application with acceptable performance.

This feature consists of providing APIs for the application developer to
progressively generate and view a report.
Progressive viewing is no longer part of the release plan. 
Verify this bug.</WithStack>
    <WithOutStack>When a report is large, generating the report could take a long time. It is not
efficient or user friendly to require a user to wait until the whole report is
generated before viewing the first page. Progressive viewing allows a user to
view the first few pages of a report while the remaining pages are still being
generated. This provides a web application with acceptable performance.

This feature consists of providing APIs for the application developer to
progressively generate and view a report.
Progressive viewing is no longer part of the release plan. 
Verify this bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110653" />
    <CreationDate amount="2005-09-26 13:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Runtime" />
    <component amount="General" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eroneous references to xtools in gmf common namespace</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- Select all org.eclipse.gmf.examples.* plug-ins in workspace.</Line>
          <Line>- Text search for "xtools" for following file types: "*.html, *.xml, *.java,</Line>
          <Line>*.htm, *.properties"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Steps:
- Select all org.eclipse.gmf.examples.* plug-ins in workspace.
- Text search for "xtools" for following file types: "*.html, *.xml, *.java, 
*.htm, *.properties"

Result:
Reference to old xtools plug-ins show up in documentation, java files and 
properties files.
Search also Select all org.eclipse.gmf.runtime.common.* / 
org.eclipse.gmf.tests.runtime.common
Delivered a first set of changes.

Doc.isv still refers to xtools.
We need to resolve XtoolsPlugin and XtoolsUIPlugin.
We need to resolve the CustomDataTransfer utility which defines XTOOLS transfer.
XtoolsPlugin and XtoolsUIPlugin is taken care of by Bug 120387
There are lots of comments / JavaDoc with the words aurora / rational / xtools.
Created attachment 35186
Removed references to aurora, rational and xtools
Created attachment 35250
Sweeped test  and other remaining plugins
Performed one more search and we are done.
[GMF Restructure] Bug 319140 : product GMF and component
Runtime Common was the original product and component for this bug</WithStack>
    <WithOutStack>Steps:
- Select all org.eclipse.gmf.examples.* plug-ins in workspace.
- Text search for "xtools" for following file types: "*.html, *.xml, *.java, 
*.htm, *.properties"

Result:
Reference to old xtools plug-ins show up in documentation, java files and 
properties files.
Search also Select all org.eclipse.gmf.runtime.common.* / 
org.eclipse.gmf.tests.runtime.common
Delivered a first set of changes.

Doc.isv still refers to xtools.
We need to resolve XtoolsPlugin and XtoolsUIPlugin.
We need to resolve the CustomDataTransfer utility which defines XTOOLS transfer.
XtoolsPlugin and XtoolsUIPlugin is taken care of by Bug 120387
There are lots of comments / JavaDoc with the words aurora / rational / xtools.
Created attachment 35186
Removed references to aurora, rational and xtools
Created attachment 35250
Sweeped test  and other remaining plugins
Performed one more search and we are done.
[GMF Restructure] Bug 319140 : product GMF and component
Runtime Common was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110654" />
    <CreationDate amount="2005-09-26 13:58:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Viewer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>Progressive Viewing exemplary implementation of viewing framework</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>When a report is large, generating the report could take a long time. It is not
efficient or user friendly to require a user to wait until the whole report is
generated before viewing the first page. Progressive viewing allows a user to
view the first few pages of a report while the remaining pages are still being
generated. This provides a web application with acceptable performance.

This feature consists of providing an exemplary implementation of a viewing
framework that allows application developers to easily integrate viewing
functionality into their applications and customize the viewing capabilities
they choose.
The progressive viewing is scheduled to BIRT 2.1.
Hello Wenbin He,
Is this feature actually implemented in BIRT 2.1 as per comment#1?
If yes, how can one leverage this feature? 


(In reply to comment #1)
&gt; The progressive viewing is scheduled to BIRT 2.1.

Can you please update when you are planning to fix this?


Hi,
The problem is that the viewer sends all report pages together instead of send an show the first page (test a sample with 5000 or 10000 rows). For performance and usability issues it is needed a progressive view that sends next pages on demand. 
 Is it planned to fix this bug soon? 

thanks,
Mauro

When is this enhancement scheduled?
(In reply to comment #5)
&gt; When is this enhancement scheduled?

This enhancement is not currently scheduled.  I will check with the committers if this can be added to 2.2.  Any help/contributions from the community is welcome.</WithStack>
    <WithOutStack>When a report is large, generating the report could take a long time. It is not
efficient or user friendly to require a user to wait until the whole report is
generated before viewing the first page. Progressive viewing allows a user to
view the first few pages of a report while the remaining pages are still being
generated. This provides a web application with acceptable performance.

This feature consists of providing an exemplary implementation of a viewing
framework that allows application developers to easily integrate viewing
functionality into their applications and customize the viewing capabilities
they choose.
The progressive viewing is scheduled to BIRT 2.1.
Hello Wenbin He,
Is this feature actually implemented in BIRT 2.1 as per comment#1?
If yes, how can one leverage this feature? 


(In reply to comment #1)
&gt; The progressive viewing is scheduled to BIRT 2.1.

Can you please update when you are planning to fix this?


Hi,
The problem is that the viewer sends all report pages together instead of send an show the first page (test a sample with 5000 or 10000 rows). For performance and usability issues it is needed a progressive view that sends next pages on demand. 
 Is it planned to fix this bug soon? 

thanks,
Mauro

When is this enhancement scheduled?
(In reply to comment #5)
&gt; When is this enhancement scheduled?

This enhancement is not currently scheduled.  I will check with the committers if this can be added to 2.2.  Any help/contributions from the community is welcome.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110655" />
    <CreationDate amount="2005-09-26 13:58:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Viewer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Table of Contents Support in Viewer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>A table of contents shows the hierarchical structure of a report to the end user
and allows the user to easily and quickly navigate to sections of the report.
The hierarchy is defined by the report grouping and sub report structure, with
customizations possible by the report developer, such as providing custom text
for each node in the hierarchy. TOC features include: ability to expand the TOC
one level at a time, handle arbitrarily large groups at any node/level in the
hierarchy, and links from the group title jump to the first page of that group.
Note that this project is focused on TOC as a navigational mechanism in the
report viewer, rather than providing a TOC element that can be embedded in a
report. This later item is a separate feature that is not scheduled for this
release.
implemented.
Verified in build 20051223.</WithStack>
    <WithOutStack>A table of contents shows the hierarchical structure of a report to the end user
and allows the user to easily and quickly navigate to sections of the report.
The hierarchy is defined by the report grouping and sub report structure, with
customizations possible by the report developer, such as providing custom text
for each node in the hierarchy. TOC features include: ability to expand the TOC
one level at a time, handle arbitrarily large groups at any node/level in the
hierarchy, and links from the group title jump to the first page of that group.
Note that this project is focused on TOC as a navigational mechanism in the
report viewer, rather than providing a TOC element that can be embedded in a
report. This later item is a separate feature that is not scheduled for this
release.
implemented.
Verified in build 20051223.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110656" />
    <CreationDate amount="2005-09-26 13:59:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Engine" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Memory Usage Efficiency Improvement</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This project intends to enhance the BIRT engine to utilize memory more efficiently.
BPS7 has been completed in M2. The Data Engine now uses disk caching to reduce its memory footprint and can now process data sets of any size.
Verify this bug.</WithStack>
    <WithOutStack>This project intends to enhance the BIRT engine to utilize memory more efficiently.
BPS7 has been completed in M2. The Data Engine now uses disk caching to reduce its memory footprint and can now process data sets of any size.
Verify this bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110657" />
    <CreationDate amount="2005-09-26 14:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[DOM] wrong position for single variable declaration inside enhanced for statement</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="91" end="289" />
        <code>public class X {
    public static void main(String[] args) {
        byte[] b1 = new byte[0];
        byte[] b2 = new byte[0];
        for (byte[] bs : new byte[][] { b1, b2 }) {

        }
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Following bug 104492, the position for byte[] bs in the enhanced for statement
are bogus.

public class X {
    public static void main(String[] args) {
        byte[] b1 = new byte[0];
        byte[] b2 = new byte[0];
        for (byte[] bs : new byte[][] { b1, b2 }) {

        }
    }
}
The bug comes from the wrong position for the compiler's array type reference.
In the case of the enhanced for statement, if the expression after the colon is
an array initializer, the endPosition in the parser is not the end of the array
type reference anymore.
I might be able to fix this in the AST converter, but the positions would remain
boggus for the compiler's node. So if we report errors against the type
reference, the highlighting might be boggus.
This can be addressed with a grammar change.
Changing the rules to consume EnhancedForStatementHeader  to:

EnhancedForStatementHeaderInit ::= 'for' '(' Type PushModifiers Identifier Dimsopt
/.$putCase consumeEnhancedForStatementHeaderInit(false); $break ./
/:$readableName EnhancedForStatementHeaderInit:/

EnhancedForStatementHeaderInit ::= 'for' '(' Modifiers Type PushRealModifiers
Identifier Dimsopt
/.$putCase consumeEnhancedForStatementHeaderInit(true); $break ./
/:$readableName EnhancedForStatementHeaderInit:/

EnhancedForStatementHeader ::= EnhancedForStatementHeaderInit ':' Expression ')'
/.$putCase consumeEnhancedForStatementHeader(); $break ./
/:$readableName EnhancedForStatementHeader:/
/:$compliance 1.5:/

Doing this when EnhancedForStatementHeaderInit is reduced, the this.endPosition
has the right value.
Fixed and released in HEAD.
Regression tests in org.eclipse.jdt.core.tests.dom.ASTConverter15Test.test0199/0201.
Added new regression test in Regression tests in
org.eclipse.jdt.core.tests.dom.ASTConverter15Test.test0202
Verified for 3.2 M3 using ASTView and build I20051025-0800+v_619</WithStack>
    <WithOutStack>Following bug 104492, the position for byte[] bs in the enhanced for statement
are bogus.

public class X {
    public static void main(String[] args) {
        byte[] b1 = new byte[0];
        byte[] b2 = new byte[0];
        for (byte[] bs : new byte[][] { b1, b2 }) {

        }
    }
}
The bug comes from the wrong position for the compiler's array type reference.
In the case of the enhanced for statement, if the expression after the colon is
an array initializer, the endPosition in the parser is not the end of the array
type reference anymore.
I might be able to fix this in the AST converter, but the positions would remain
boggus for the compiler's node. So if we report errors against the type
reference, the highlighting might be boggus.
This can be addressed with a grammar change.
Changing the rules to consume EnhancedForStatementHeader  to:

EnhancedForStatementHeaderInit ::= 'for' '(' Type PushModifiers Identifier Dimsopt
/.$putCase consumeEnhancedForStatementHeaderInit(false); $break ./
/:$readableName EnhancedForStatementHeaderInit:/

EnhancedForStatementHeaderInit ::= 'for' '(' Modifiers Type PushRealModifiers
Identifier Dimsopt
/.$putCase consumeEnhancedForStatementHeaderInit(true); $break ./
/:$readableName EnhancedForStatementHeaderInit:/

EnhancedForStatementHeader ::= EnhancedForStatementHeaderInit ':' Expression ')'
/.$putCase consumeEnhancedForStatementHeader(); $break ./
/:$readableName EnhancedForStatementHeader:/
/:$compliance 1.5:/

Doing this when EnhancedForStatementHeaderInit is reduced, the this.endPosition
has the right value.
Fixed and released in HEAD.
Regression tests in org.eclipse.jdt.core.tests.dom.ASTConverter15Test.test0199/0201.
Added new regression test in Regression tests in
org.eclipse.jdt.core.tests.dom.ASTConverter15Test.test0202
Verified for 3.2 M3 using ASTView and build I20051025-0800+v_619</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110658" />
    <CreationDate amount="2005-09-26 14:00:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Engine" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Concurrent User Scalability Large Numbers of Active Users</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When BIRT is deployed in a production environment with various kinds of
application servers, it is expected that there will be hundreds of users who
concurrently need to run a BIRT report. BIRT needs to be able to scale to handle
running reports concurrently for large numbers of users.
We deployed BIRT 2.0 Viewer on application servers. We created many testing report mixed with simple and complex designs. They included table, listing, chart, image, rptlibrary, cascading parameters, many rows, many pages, parallel reports, etc. They used data source from TPC-H and ClassicModel.

We measured their throughput and response time. Our tests confirmed that BIRT can support running reports concurrently for more than hundreds of users on both Windows and Linux.</WithStack>
    <WithOutStack>When BIRT is deployed in a production environment with various kinds of
application servers, it is expected that there will be hundreds of users who
concurrently need to run a BIRT report. BIRT needs to be able to scale to handle
running reports concurrently for large numbers of users.
We deployed BIRT 2.0 Viewer on application servers. We created many testing report mixed with simple and complex designs. They included table, listing, chart, image, rptlibrary, cascading parameters, many rows, many pages, parallel reports, etc. They used data source from TPC-H and ClassicModel.

We measured their throughput and response time. Our tests confirmed that BIRT can support running reports concurrently for more than hundreds of users on both Windows and Linux.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110659" />
    <CreationDate amount="2005-09-26 14:01:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Engine" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Disk-Based Sorting and Data Manipulation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Reports against large data sets with millions of rows often require the report
engine to sort the data and perform aggregation. To support these scenarios,
this project incorporates a sorting and aggregation capability within the BIRT
Engine, which, due to the potentially large data sets, can use a combination of
memory and disk for the task.
This feature is supported from M1 of 2.0
verified in build 20051018</WithStack>
    <WithOutStack>Reports against large data sets with millions of rows often require the report
engine to sort the data and perform aggregation. To support these scenarios,
this project incorporates a sorting and aggregation capability within the BIRT
Engine, which, due to the potentially large data sets, can use a combination of
memory and disk for the task.
This feature is supported from M1 of 2.0
verified in build 20051018</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110660" />
    <CreationDate amount="2005-09-26 14:02:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Data" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Cache Query Results while Developing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>While designing a report, the developer specifies a data set to report on. If
the number of records in the data set is large, then the iterative process of
making changes to a report followed by previewing those changes slows down
because the large data set has to be fetched for each preview operation. This
slowdown can hinder quick report design and adversely affect the developer
experience and productivity associated with BIRT. This project allows a report
developer to specify a property on a data set that limits the number of records
that are fetched during the development process, and that those results are
cached as much as possible.
Consider as new feature.
Tentatively schedule for 2.0RC.
change to 2.0 Final to avoid confusing RC as M4
Part of BPS 7:
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS7

This has been completed in 2.0.
Verified in build 20051223
    This new feature has been considered and designed in M3. Here we set a data set cache, through this this mechanism you can get the data quickly and efficiently. The detail information are discussed in the 
    BPS 7:
 http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS7</WithStack>
    <WithOutStack>While designing a report, the developer specifies a data set to report on. If
the number of records in the data set is large, then the iterative process of
making changes to a report followed by previewing those changes slows down
because the large data set has to be fetched for each preview operation. This
slowdown can hinder quick report design and adversely affect the developer
experience and productivity associated with BIRT. This project allows a report
developer to specify a property on a data set that limits the number of records
that are fetched during the development process, and that those results are
cached as much as possible.
Consider as new feature.
Tentatively schedule for 2.0RC.
change to 2.0 Final to avoid confusing RC as M4
Part of BPS 7:
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS7

This has been completed in 2.0.
Verified in build 20051223
    This new feature has been considered and designed in M3. Here we set a data set cache, through this this mechanism you can get the data quickly and efficiently. The detail information are discussed in the 
    BPS 7:
 http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS7</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110661" />
    <CreationDate amount="2005-09-26 14:03:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Persistent Storage of Report Output</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It is often desirable to run a report and then store the results of that report
for viewing later. For example, generating a large (1000s of pages) report and
then viewing pages individually as needed. To support this scenario, this
project extends BIRT to offer a way to persistently save a report for viewing at
some point in the future.
Report document is now supported. Some remaining bugs are tracked separately.
Verified in build 20051220.
Report document can be generated.</WithStack>
    <WithOutStack>It is often desirable to run a report and then store the results of that report
for viewing later. For example, generating a large (1000s of pages) report and
then viewing pages individually as needed. To support this scenario, this
project extends BIRT to offer a way to persistently save a report for viewing at
some point in the future.
Report document is now supported. Some remaining bugs are tracked separately.
Verified in build 20051220.
Report document can be generated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110662" />
    <CreationDate amount="2005-09-26 14:03:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Report Template</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- DE changes are done</Line>
          <Line>- UI changes are done.</Line>
          <Line>Verified in build 20051220.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When creating a new report, BIRT provides the ability to select a template for
the report design. With BIRT 1.0, these templates are from a predefined list
that is built into the user interface. In order to support context specific uses
of BIRT, the application developer wants to be able to add new templates into
the user interface. In addition, BIRT will allow templates to be added to the
user interface, and for cheat sheets to be associated with the template. It will
also be possible to include associations to a style sheet and/or library with
the template design. This would allow the developer to provide the person
consuming the template with pre-defined styles and/or visual components from a
library.
- DE changes are done
- UI changes are done.
Verified in build 20051220.</WithStack>
    <WithOutStack>When creating a new report, BIRT provides the ability to select a template for
the report design. With BIRT 1.0, these templates are from a predefined list
that is built into the user interface. In order to support context specific uses
of BIRT, the application developer wants to be able to add new templates into
the user interface. In addition, BIRT will allow templates to be added to the
user interface, and for cheat sheets to be associated with the template. It will
also be possible to include associations to a style sheet and/or library with
the template design. This would allow the developer to provide the person
consuming the template with pre-defined styles and/or visual components from a
library.
- DE changes are done
- UI changes are done.
Verified in build 20051220.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110663" />
    <CreationDate amount="2005-09-26 14:04:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>BIRT Library</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Libraries contain report components or functions for reuse in multiple report
designs. A report or library developer creates a library, then places it in a
shared location for others to use. Libraries improve developer productivity and
promote report design consistency, and maintainability. This project will
provide library support within BIRT. This includes simple components and
compound compounds such as a page header with a logo and address.
I want to make sure about one thing. I'm hoping this would also be available for
RCP applications that aren't necesarrily file based (maybe server based). 

It there going to be a built-in abstraction how a report gets its library? What
if this differs radically design vs runtime? Is there any more elaborate design
docs I can look at for this item?
New library feature is checked in.
Verified in build 20051125.
Specifications and project plan are located at 
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS10</WithStack>
    <WithOutStack>Libraries contain report components or functions for reuse in multiple report
designs. A report or library developer creates a library, then places it in a
shared location for others to use. Libraries improve developer productivity and
promote report design consistency, and maintainability. This project will
provide library support within BIRT. This includes simple components and
compound compounds such as a page header with a logo and address.
I want to make sure about one thing. I'm hoping this would also be available for
RCP applications that aren't necesarrily file based (maybe server based). 

It there going to be a built-in abstraction how a report gets its library? What
if this differs radically design vs runtime? Is there any more elaborate design
docs I can look at for this item?
New library feature is checked in.
Verified in build 20051125.
Specifications and project plan are located at 
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS10</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110664" />
    <CreationDate amount="2005-09-26 14:05:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Ability to import CSS Style Sheets</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When designing a report that is going to be deployed in a corporate application,
the developer of the report should not have to recreate the styles that have
already been defined for the look and feel of the web site. This project allows
the BIRT report developer to "point" to an existing CSS style sheet file and
import this for use within their report design to define various elements of the
report such as fonts, colors, and others. A future project will look at using a
CSS style sheet directly without the need to import.
Add CSS import feature.
Verified in build 20051013.
Refer to project specs at 
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS11</WithStack>
    <WithOutStack>When designing a report that is going to be deployed in a corporate application,
the developer of the report should not have to recreate the styles that have
already been defined for the look and feel of the web site. This project allows
the BIRT report developer to "point" to an existing CSS style sheet file and
import this for use within their report design to define various elements of the
report such as fonts, colors, and others. A future project will look at using a
CSS style sheet directly without the need to import.
Add CSS import feature.
Verified in build 20051013.
Refer to project specs at 
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS11</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110665" />
    <CreationDate amount="2005-09-26 14:05:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Code Editor for BIRT Scripting</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>BIRT supports the ability to script, or code, the behavior of reports in a
number of ways. To improve code editing, BIRT will leverage an Eclipse
perspective for working with code in BIRT.  Perspectives exploit the power of
Eclipse to the report designer’s benefit.  In addition, they are a way to
provide rich functionality by leveraging the Eclipse environment. This project
will provide support for and a perspective for Java Code Editing for BIRT reports.
accepting...
With the new capabilities of scripting in Java using the Eclipse Java perspective, and the improved JavaScript editor (intelli-sense etc), I think this is fixed.
Verified in build 20051231.</WithStack>
    <WithOutStack>BIRT supports the ability to script, or code, the behavior of reports in a
number of ways. To improve code editing, BIRT will leverage an Eclipse
perspective for working with code in BIRT.  Perspectives exploit the power of
Eclipse to the report designer’s benefit.  In addition, they are a way to
provide rich functionality by leveraging the Eclipse environment. This project
will provide support for and a perspective for Java Code Editing for BIRT reports.
accepting...
With the new capabilities of scripting in Java using the Eclipse Java perspective, and the improved JavaScript editor (intelli-sense etc), I think this is fixed.
Verified in build 20051231.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110666" />
    <CreationDate amount="2005-09-26 14:06:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Dynamic Parameter Selection List</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Parameterized BIRT reports can be used to provide a highly personalized
experience. End-users can choose to view the information that matters most to
them when they want to see it. Parameter values change as quickly as the
business itself. For example, a sales manager may want to view total sales
closed by a particular salesperson. In order to support the more complex
scenario, BIRT should allow report developers to specify that the list of values
for a parameter be dynamically populated at run time. The goal of this project
is to provide built-in support for dynamic parameters.
Add dynamic and cascading support for the input parameter dialog
Verified in build 20051220.
Specs are located at 
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS14</WithStack>
    <WithOutStack>Parameterized BIRT reports can be used to provide a highly personalized
experience. End-users can choose to view the information that matters most to
them when they want to see it. Parameter values change as quickly as the
business itself. For example, a sales manager may want to view total sales
closed by a particular salesperson. In order to support the more complex
scenario, BIRT should allow report developers to specify that the list of values
for a parameter be dynamically populated at run time. The goal of this project
is to provide built-in support for dynamic parameters.
Add dynamic and cascading support for the input parameter dialog
Verified in build 20051220.
Specs are located at 
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS14</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110667" />
    <CreationDate amount="2005-09-26 14:07:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Chart" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Chart Builder and Wizard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>BIRT includes support for including charts within a report design. The goal for
this project is to improve the usability of the chart control. Usability
analysis will be included, although we will be looking at both a Wizard/Builder
approach for common usage/charts, in addition to a more advanced capability for
report developers who want to control the chart in more detail.
I'm very interested in what's being done on this item. Charts are very hard to
setup and use and it's almost a gating factor for me to recomend and move
forward with BIRT integration in our product.

Is there any more information about the progress and plans for this item
somewhere on the web?
For additional information about this project, please take a look at the BIRT
Wiki page for it. This can be found at:
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS15
Fixed with new builder
fixed</WithStack>
    <WithOutStack>BIRT includes support for including charts within a report design. The goal for
this project is to improve the usability of the chart control. Usability
analysis will be included, although we will be looking at both a Wizard/Builder
approach for common usage/charts, in addition to a more advanced capability for
report developers who want to control the chart in more detail.
I'm very interested in what's being done on this item. Charts are very hard to
setup and use and it's almost a gating factor for me to recomend and move
forward with BIRT integration in our product.

Is there any more information about the progress and plans for this item
somewhere on the web?
For additional information about this project, please take a look at the BIRT
Wiki page for it. This can be found at:
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS15
Fixed with new builder
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110668" />
    <CreationDate amount="2005-09-26 14:08:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Chart" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Property Editor for Chart Report Item</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>BIRT provides a Property Editor for accessing commonly used properties for
visual and non-visual components in a report. The Property Editor is not
currently available for elements in a chart within a report design. For
consistency and developer productivity reasons, this project aims to allow the
Property Editor to be used for commonly changed properties in a chart.
Fixed. Now Show relative extendedItem properties in the property edit page, the
internal chart properties still be accessed through chart builder.
fixed</WithStack>
    <WithOutStack>BIRT provides a Property Editor for accessing commonly used properties for
visual and non-visual components in a report. The Property Editor is not
currently available for elements in a chart within a report design. For
consistency and developer productivity reasons, this project aims to allow the
Property Editor to be used for commonly changed properties in a chart.
Fixed. Now Show relative extendedItem properties in the property edit page, the
internal chart properties still be accessed through chart builder.
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110669" />
    <CreationDate amount="2005-09-26 14:08:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Chart" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Chart component improvements</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This project looks at the charting component of BIRT to make a number of
significant improvements in chart specification and generation. Examples of
improvements to be made include, the ability to use report styles in charts,
handling the situation when labels on the X-axis overlap, specifying a legend
title, or marker shapes.
Added support in chart engine.
fixed</WithStack>
    <WithOutStack>This project looks at the charting component of BIRT to make a number of
significant improvements in chart specification and generation. Examples of
improvements to be made include, the ability to use report styles in charts,
handling the situation when labels on the X-axis overlap, specifying a legend
title, or marker shapes.
Added support in chart engine.
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110670" />
    <CreationDate amount="2005-09-26 14:09:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Chart" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Scripting of Charts</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Some Report developers will want to customize the behavior of a chart in a
report to meet specific needs requested by their end users. For example, to
highlight specific visual elements in a chart based on data values such as
expanding the pie slice for the median data value. This project will provide the
ability within BIRT to control the behavior of a chart with methods on the chart
control.
*** Bug 117454 has been marked as a duplicate of this bug. ***
Scripting is now available. You can use the same UI as for other report items 
to write the script in JavaScript (select a chart and go to Script tab in 
report designer). Java support is also available.
fixed</WithStack>
    <WithOutStack>Some Report developers will want to customize the behavior of a chart in a
report to meet specific needs requested by their end users. For example, to
highlight specific visual elements in a chart based on data values such as
expanding the pie slice for the median data value. This project will provide the
ability within BIRT to control the behavior of a chart with methods on the chart
control.
*** Bug 117454 has been marked as a duplicate of this bug. ***
Scripting is now available. You can use the same UI as for other report items 
to write the script in JavaScript (select a chart and go to Script tab in 
report designer). Java support is also available.
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110671" />
    <CreationDate amount="2005-09-26 14:09:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Report Paging</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Long reports need to be divided into pages for effective use. This division can
occur either automatically, or with specific page breaks determined by the
report developer. Multi-page report support will allow the report developer to
design reports that have controlled page breaks (such as for each new group
value), or using automatic page breaks, and for the application developer to
integrate page navigation of BIRT reports into the application itself. The
definition of a page in this context needs to be flexible to accommodate
differing physical characteristics, or logical constructs such as a page for
each customer. This project enables BIRT to support multi-page report output.
Engine API now allows accessing report page by page.
Verified in build 20051220.
Engine support report paging now.</WithStack>
    <WithOutStack>Long reports need to be divided into pages for effective use. This division can
occur either automatically, or with specific page breaks determined by the
report developer. Multi-page report support will allow the report developer to
design reports that have controlled page breaks (such as for each new group
value), or using automatic page breaks, and for the application developer to
integrate page navigation of BIRT reports into the application itself. The
definition of a page in this context needs to be flexible to accommodate
differing physical characteristics, or logical constructs such as a page for
each customer. This project enables BIRT to support multi-page report output.
Engine API now allows accessing report page by page.
Verified in build 20051220.
Engine support report paging now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110672" />
    <CreationDate amount="2005-09-26 14:10:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Expression  Builder</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>With the Expression Builder in BIRT 1.0, it is awkward to build the expression
using the user interface. There are a number of improvements that can be made to
make it easier to navigate around the functions, and to provide the user with
help on each of the functions that are available. This project implements those
usability improvements.
New expression builder is ready.
Verified in build 20051220.</WithStack>
    <WithOutStack>With the Expression Builder in BIRT 1.0, it is awkward to build the expression
using the user interface. There are a number of improvements that can be made to
make it easier to navigate around the functions, and to provide the user with
help on each of the functions that are available. This project implements those
usability improvements.
New expression builder is ready.
Verified in build 20051220.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110673" />
    <CreationDate amount="2005-09-26 14:11:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Data Access" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>XML Data Sources</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>With the rapid adoption of XML as the lingua franca for business information
exchange, and for the exchange of information within an application, a large
number of developers would like to report against XML data sources.
Additionally, most ERP and CRM applications now provide interfaces to deliver
data in XML. This project provides an out of the box adapter to access XML data
sources. This can be used "as is" or as an example ODA connector that can be
adapted for other purposes.
This feature is under work for 2.0 version.
The XML data source has been checked in.
The XML data source has been checked in.Some more specified bugs has been 
filed.
Verified in the build 20051220</WithStack>
    <WithOutStack>With the rapid adoption of XML as the lingua franca for business information
exchange, and for the exchange of information within an application, a large
number of developers would like to report against XML data sources.
Additionally, most ERP and CRM applications now provide interfaces to deliver
data in XML. This project provides an out of the box adapter to access XML data
sources. This can be used "as is" or as an example ODA connector that can be
adapted for other purposes.
This feature is under work for 2.0 version.
The XML data source has been checked in.
The XML data source has been checked in.Some more specified bugs has been 
filed.
Verified in the build 20051220</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110674" />
    <CreationDate amount="2005-09-26 14:11:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Common Tools" />
    <component amount="wst.common" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Error exporting WAR file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437330581723">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.wst.common.frameworks.internal.ui.RunnableOperationWrapper.run(RunnableOperationWrapper.java:34)</Frame>
          <Frame depth="1">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)</Frame>
          <Frame depth="2">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)</Frame>
          <Frame depth="3">org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)</Frame>
          <Frame depth="4">org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.performFinish(DataModelWizard.java:243)</Frame>
          <Frame depth="5">org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:676)</Frame>
          <Frame depth="6">org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:349)</Frame>
          <Frame depth="7">org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="13">org.eclipse.jface.window.Window.runEventLoop(Window.java:809)</Frame>
          <Frame depth="14">org.eclipse.jface.window.Window.open(Window.java:787)</Frame>
          <Frame depth="15">org.eclipse.ui.actions.ExportResourcesAction.run(ExportResourcesAction.java:180)</Frame>
          <Frame depth="16">org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:167)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)</Frame>
          <Frame depth="19">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="27">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="29">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="31">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="34">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="35">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="36">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437330581723">
        <Exception>org.eclipse.core.commands.ExecutionException</Exception>
        <Reason>Error exportingWar File</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactExportOperation.execute(J2EEArtifactExportOperation.java:73)</Frame>
          <Frame depth="1">org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.doExecute(ExtendableOperationImpl.java:159)</Frame>
          <Frame depth="2">org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl$1.run(ExtendableOperationImpl.java:127)</Frame>
          <Frame depth="3">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)</Frame>
          <Frame depth="4">org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.execute(ExtendableOperationImpl.java:135)</Frame>
          <Frame depth="5">org.eclipse.wst.common.frameworks.internal.ui.RunnableOperationWrapper.run(RunnableOperationWrapper.java:32)</Frame>
          <Frame depth="6">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)</Frame>
          <Frame depth="7">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)</Frame>
          <Frame depth="8">org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)</Frame>
          <Frame depth="9">org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.performFinish(DataModelWizard.java:243)</Frame>
          <Frame depth="10">org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:676)</Frame>
          <Frame depth="11">org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:349)</Frame>
          <Frame depth="12">org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="18">org.eclipse.jface.window.Window.runEventLoop(Window.java:809)</Frame>
          <Frame depth="19">org.eclipse.jface.window.Window.open(Window.java:787)</Frame>
          <Frame depth="20">org.eclipse.ui.actions.ExportResourcesAction.run(ExportResourcesAction.java:180)</Frame>
          <Frame depth="21">org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:167)</Frame>
          <Frame depth="22">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)</Frame>
          <Frame depth="23">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)</Frame>
          <Frame depth="24">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="32">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="34">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="35">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="36">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="37">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="38">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="39">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="40">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="41">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="42">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="44">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437330581723">
        <Exception>org.eclipse.jst.j2ee.commonarchivecore.internal.exception.SaveFailureException</Exception>
        <Reason>:
Error opening archive for export..
!Stack_trace_of_nested_exce!
java.lang.NullPointerException</Reason>
        <Frames>
          <Frame depth="0">java.util.AbstractCollection.removeAll(AbstractCollection.java:368)</Frame>
          <Frame depth="1">org.eclipse.jst.j2ee.internal.archive.operations.ComponentLoadStrategyImpl.getLoadedMofResources(ComponentLoadStrategyImpl.java:318)</Frame>
          <Frame depth="2">org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.getLoadedMofResources(ArchiveImpl.java:825)</Frame>
          <Frame depth="3">org.eclipse.jst.j2ee.commonarchivecore.internal.strategy.SaveStrategyImpl.saveMofResources(SaveStrategyImpl.java:186)</Frame>
          <Frame depth="4">org.eclipse.jst.j2ee.commonarchivecore.internal.strategy.SaveStrategyImpl.save(SaveStrategyImpl.java:99)</Frame>
          <Frame depth="5">org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.save(ArchiveImpl.java:1221)</Frame>
          <Frame depth="6">org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ModuleFileImpl.save(ModuleFileImpl.java:355)</Frame>
          <Frame depth="7">org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.saveAsNoReopen(ArchiveImpl.java:1316)</Frame>
          <Frame depth="8">org.eclipse.jst.j2ee.internal.web.archive.operations.WebComponentExportOperation.export(WebComponentExportOperation.java:40)</Frame>
          <Frame depth="9">org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactExportOperation.execute(J2EEArtifactExportOperation.java:71)</Frame>
          <Frame depth="10">org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.doExecute(ExtendableOperationImpl.java:159)</Frame>
          <Frame depth="11">org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl$1.run(ExtendableOperationImpl.java:127)</Frame>
          <Frame depth="12">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)</Frame>
          <Frame depth="13">org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.execute(ExtendableOperationImpl.java:135)</Frame>
          <Frame depth="14">org.eclipse.wst.common.frameworks.internal.ui.RunnableOperationWrapper.run(RunnableOperationWrapper.java:32)</Frame>
          <Frame depth="15">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)</Frame>
          <Frame depth="17">org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)</Frame>
          <Frame depth="18">org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.performFinish(DataModelWizard.java:243)</Frame>
          <Frame depth="19">org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:676)</Frame>
          <Frame depth="20">org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:349)</Frame>
          <Frame depth="21">org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="27">org.eclipse.jface.window.Window.runEventLoop(Window.java:809)</Frame>
          <Frame depth="28">org.eclipse.jface.window.Window.open(Window.java:787)</Frame>
          <Frame depth="29">org.eclipse.ui.actions.ExportResourcesAction.run(ExportResourcesAction.java:180)</Frame>
          <Frame depth="30">org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:167)</Frame>
          <Frame depth="31">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)</Frame>
          <Frame depth="32">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)</Frame>
          <Frame depth="33">org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="41">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="43">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="45">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="47">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="48">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="49">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="50">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="53">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="54">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>I received the following error when trying to export a WAR file from a basic web
project:

java.lang.reflect.InvocationTargetException
	at
org.eclipse.wst.common.frameworks.internal.ui.RunnableOperationWrapper.run(RunnableOperationWrapper.java:34)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)
	at
org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.performFinish(DataModelWizard.java:243)
	at org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:676)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:349)
	at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:809)
	at org.eclipse.jface.window.Window.open(Window.java:787)
	at org.eclipse.ui.actions.ExportResourcesAction.run(ExportResourcesAction.java:180)
	at
org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:167)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)
Caused by: org.eclipse.core.commands.ExecutionException: Error exportingWar File
	at
org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactExportOperation.execute(J2EEArtifactExportOperation.java:73)
	at
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.doExecute(ExtendableOperationImpl.java:159)
	at
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl$1.run(ExtendableOperationImpl.java:127)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)
	at
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.execute(ExtendableOperationImpl.java:135)
	at
org.eclipse.wst.common.frameworks.internal.ui.RunnableOperationWrapper.run(RunnableOperationWrapper.java:32)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)
	at
org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.performFinish(DataModelWizard.java:243)
	at org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:676)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:349)
	at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:809)
	at org.eclipse.jface.window.Window.open(Window.java:787)
	at org.eclipse.ui.actions.ExportResourcesAction.run(ExportResourcesAction.java:180)
	at
org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:167)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)
Caused by:
org.eclipse.jst.j2ee.commonarchivecore.internal.exception.SaveFailureException:
Error opening archive for export..
!Stack_trace_of_nested_exce!
java.lang.NullPointerException
	at java.util.AbstractCollection.removeAll(AbstractCollection.java:368)
	at
org.eclipse.jst.j2ee.internal.archive.operations.ComponentLoadStrategyImpl.getLoadedMofResources(ComponentLoadStrategyImpl.java:318)
	at
org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.getLoadedMofResources(ArchiveImpl.java:825)
	at
org.eclipse.jst.j2ee.commonarchivecore.internal.strategy.SaveStrategyImpl.saveMofResources(SaveStrategyImpl.java:186)
	at
org.eclipse.jst.j2ee.commonarchivecore.internal.strategy.SaveStrategyImpl.save(SaveStrategyImpl.java:99)
	at
org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.save(ArchiveImpl.java:1221)
	at
org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ModuleFileImpl.save(ModuleFileImpl.java:355)
	at
org.eclipse.jst.j2ee.commonarchivecore.internal.impl.ArchiveImpl.saveAsNoReopen(ArchiveImpl.java:1316)
	at
org.eclipse.jst.j2ee.internal.web.archive.operations.WebComponentExportOperation.export(WebComponentExportOperation.java:40)
	at
org.eclipse.jst.j2ee.internal.archive.operations.J2EEArtifactExportOperation.execute(J2EEArtifactExportOperation.java:71)
	at
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.doExecute(ExtendableOperationImpl.java:159)
	at
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl$1.run(ExtendableOperationImpl.java:127)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)
	at
org.eclipse.wst.common.frameworks.internal.datamodel.ExtendableOperationImpl.execute(ExtendableOperationImpl.java:135)
	at
org.eclipse.wst.common.frameworks.internal.ui.RunnableOperationWrapper.run(RunnableOperationWrapper.java:32)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:346)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:291)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)
	at
org.eclipse.wst.common.frameworks.internal.datamodel.ui.DataModelWizard.performFinish(DataModelWizard.java:243)
	at org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:676)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:349)
	at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:556)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:809)
	at org.eclipse.jface.window.Window.open(Window.java:787)
	at org.eclipse.ui.actions.ExportResourcesAction.run(ExportResourcesAction.java:180)
	at
org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:167)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:538)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)
	at
org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)
code dropped.
Closing
Closing</WithStack>
    <WithOutStack>I received the following error when trying to export a WAR file from a basic web
project:

Caused by:

code dropped.
Closing
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110675" />
    <CreationDate amount="2005-09-26 14:11:00 -0400" />
    <DupId amount="109350" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Data" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Dataset parameters</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Certain data sources, such as those accessing data in RDBMS's, support the
concept of stored procedures and functions. These constructs provide the
capability to pass in parameters as well as pass out resulting data values. This
project concerns itself with building the capability to access the output
parameters from these types of constructs via BIRT scripting capability.
Input parameter is suppored now, and the comprehensive support for output 
parameter is under work. Duplicated with bug109350.

*** This bug has been marked as a duplicate of 109350 ***
Verified in the build 20051220</WithStack>
    <WithOutStack>Certain data sources, such as those accessing data in RDBMS's, support the
concept of stored procedures and functions. These constructs provide the
capability to pass in parameters as well as pass out resulting data values. This
project concerns itself with building the capability to access the output
parameters from these types of constructs via BIRT scripting capability.
Input parameter is suppored now, and the comprehensive support for output 
parameter is under work. Duplicated with bug109350.

*** This bug has been marked as a duplicate of 109350 ***
Verified in the build 20051220</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110676" />
    <CreationDate amount="2005-09-26 14:12:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Engine" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Report Object Model API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The BIRT Design Engine API allows developers to programmatically manipulate a
report design using an API, rather than manipulating the XML directly. This API
was introduced in BIRT 1.0 and is used extensively within the BIRT project
itself. This project makes some enhancements to the Design Engine API based on
feedback from the community and the BIRT projects own use of the API.
Done in BIRT 2.0 M1
Verify this bug.</WithStack>
    <WithOutStack>The BIRT Design Engine API allows developers to programmatically manipulate a
report design using an API, rather than manipulating the XML directly. This API
was introduced in BIRT 1.0 and is used extensively within the BIRT project
itself. This project makes some enhancements to the Design Engine API based on
feedback from the community and the BIRT projects own use of the API.
Done in BIRT 2.0 M1
Verify this bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110677" />
    <CreationDate amount="2005-09-26 14:13:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Data Access" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Move ODA Runtime Extension Point and Java Interfaces to DTP</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The ODA Runtime Extension Point and Java Interface components will be part of
the Eclipse Data Tools Project (DTP) going forward. This BIRT project will move
these components from the BIRT areas of Eclipse to DTP and make any naming
changes as needed. This includes reviewing and removing any BIRT project
dependency and allowing this to use the DTP project instead. The BIRT project
team members originally working on this component will continue to work on this
project within the DTP project.
See related BPS spec is:
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS30

Verified in the build 20051220</WithStack>
    <WithOutStack>The ODA Runtime Extension Point and Java Interface components will be part of
the Eclipse Data Tools Project (DTP) going forward. This BIRT project will move
these components from the BIRT areas of Eclipse to DTP and make any naming
changes as needed. This includes reviewing and removing any BIRT project
dependency and allowing this to use the DTP project instead. The BIRT project
team members originally working on this component will continue to work on this
project within the DTP project.
See related BPS spec is:
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS30

Verified in the build 20051220</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110678" />
    <CreationDate amount="2005-09-26 14:13:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Data Access" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Provide Plug-in Adapter for BIRT ODA Drivers to DTP ODA</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The ODA Runtime Extension Point and Java Interface components will be part of
the Eclipse Data Tools Project (DTP) going forward. All ODA Consumer
applications are expected to upgrade and adopt the DTP ODA framework and
namespace in lieu of the BIRT ODA namespace. For compatibility with existing
adapters, this project will provide a plug-in adapter for BIRT ODA drivers that
implement the BIRT ODA 2.0.x interfaces. This will allow a DTP ODA consumer
application to consume existing BIRT ODA data providers without any source code
or binary build changes.  However, if an ODA data provider wants to implement
any of the enhancements added to ODA version 3.0 or later, its implementation
must migrate and adopt the DTP ODA interfaces.
See related BPS spec in:
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS30

Verified in the build 20051220</WithStack>
    <WithOutStack>The ODA Runtime Extension Point and Java Interface components will be part of
the Eclipse Data Tools Project (DTP) going forward. All ODA Consumer
applications are expected to upgrade and adopt the DTP ODA framework and
namespace in lieu of the BIRT ODA namespace. For compatibility with existing
adapters, this project will provide a plug-in adapter for BIRT ODA drivers that
implement the BIRT ODA 2.0.x interfaces. This will allow a DTP ODA consumer
application to consume existing BIRT ODA data providers without any source code
or binary build changes.  However, if an ODA data provider wants to implement
any of the enhancements added to ODA version 3.0 or later, its implementation
must migrate and adopt the DTP ODA interfaces.
See related BPS spec in:
http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS30

Verified in the build 20051220</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110679" />
    <CreationDate amount="2005-09-26 14:14:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Data Extraction from a Saved Report</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) Report level 2) Dataset level</Line>
          <Line>3) Report item level for a table, list, or chart items 4) Report item instance.</Line>
          <Line>Extraction at the report level can be achieved by repeatedly retrieving data for</Line>
          <Line>each dataset. Extraction at the report item instance level would include</Line>
          <Line>computed columns as normal columns.</Line>
          <Line>Dataset level support is not possible and drops out from requirements.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This project supports data extraction from a report at several different levels:
1) Report level 2) Dataset level
3) Report item level for a table, list, or chart items 4) Report item instance.
Extraction at the report level can be achieved by repeatedly retrieving data for
each dataset. Extraction at the report item instance level would include
computed columns as normal columns.
Dataset level support is not possible and drops out from requirements.

For 2.0, only report item instance level support is needed. 
Engine now supports the functionality. 
Engine now supports the functionality. 
Verified in build 20051220.
Data extraction is supported now.</WithStack>
    <WithOutStack>This project supports data extraction from a report at several different levels:
1) Report level 2) Dataset level
3) Report item level for a table, list, or chart items 4) Report item instance.
Extraction at the report level can be achieved by repeatedly retrieving data for
each dataset. Extraction at the report item instance level would include
computed columns as normal columns.
Dataset level support is not possible and drops out from requirements.

For 2.0, only report item instance level support is needed. 
Engine now supports the functionality. 
Engine now supports the functionality. 
Verified in build 20051220.
Data extraction is supported now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110680" />
    <CreationDate amount="2005-09-26 14:15:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Ability to Export Report Data as CSV</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Building on the infrastructure of exporting data from a report, this project
allows the end user to extract report data as a CSV formatted file.
Engine will support data extraction as Java data structure. Viewer will implement the CSV output. Reassigned to Jun for CSV implementation.
done.
Verified in build 20051220.
Datacan be exported into CSV file</WithStack>
    <WithOutStack>Building on the infrastructure of exporting data from a report, this project
allows the end user to extract report data as a CSV formatted file.
Engine will support data extraction as Java data structure. Viewer will implement the CSV output. Reassigned to Jun for CSV implementation.
done.
Verified in build 20051220.
Datacan be exported into CSV file</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110681" />
    <CreationDate amount="2005-09-26 14:16:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Viewer" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Reportlet</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. __report=abc.rptdesign&amp;&amp;__itemName="mychart"&amp;&amp;__format=reportlet</Line>
          <Line />
          <Line>This URL will retrieve a chart componment's (named as mychart) content as reportlet format. If mychart is generated multiple times, the first instance will be returned.</Line>
          <Line />
          <Line>2. __document=abc.rptdocument&amp;&amp;__itemiid="mychart1"&amp;&amp;__format=reportlet</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Web pages often use HTML tables instead to organize and position their content.
In order to provide more flexibility for integrating report content into the
customer’ web pages, it becomes necessary to introduce a new set of formats that
return content as “Reportlets” or partial DHTML pages.  These reportlets can
then be included within web pages generated by the customer’s web application.
This project focuses on producing content that is easily embeddable within an
overall HTML page.
This is required feature for BIRT 2.1.
BIRT 2.1 will support reportlet in URL only. A new format type "reportlet" will be supported in BIRT viewer servlet URL.
Synch up with Callisto schedule to rename RC1 as RC2 targeted 5/5/2006.
To support reportlet, the birt viewer URL will support the following two formats:

1. __report=abc.rptdesign&amp;&amp;__itemName="mychart"&amp;&amp;__format=reportlet

This URL will retrieve a chart componment's (named as mychart) content as reportlet format. If mychart is generated multiple times, the first instance will be returned.

2. __document=abc.rptdocument&amp;&amp;__itemiid="mychart1"&amp;&amp;__format=reportlet

This URL will retrieve a chart instance's content as reportlet.



fixed.</WithStack>
    <WithOutStack>Web pages often use HTML tables instead to organize and position their content.
In order to provide more flexibility for integrating report content into the
customer’ web pages, it becomes necessary to introduce a new set of formats that
return content as “Reportlets” or partial DHTML pages.  These reportlets can
then be included within web pages generated by the customer’s web application.
This project focuses on producing content that is easily embeddable within an
overall HTML page.
This is required feature for BIRT 2.1.
BIRT 2.1 will support reportlet in URL only. A new format type "reportlet" will be supported in BIRT viewer servlet URL.
Synch up with Callisto schedule to rename RC1 as RC2 targeted 5/5/2006.
To support reportlet, the birt viewer URL will support the following two formats:

1. __report=abc.rptdesign&amp;&amp;__itemName="mychart"&amp;&amp;__format=reportlet

This URL will retrieve a chart componment's (named as mychart) content as reportlet format. If mychart is generated multiple times, the first instance will be returned.

2. __document=abc.rptdocument&amp;&amp;__itemiid="mychart1"&amp;&amp;__format=reportlet

This URL will retrieve a chart instance's content as reportlet.



fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110682" />
    <CreationDate amount="2005-09-26 14:17:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Data Access" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Pass-through of external context objects - BPS35</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The BIRT engine is often embedded as part of a middle-tier application server,
where the BIRT components are added to the mix of various J2EE components.
During report run-time, some of these other components may instantiate context
objects, which are served to the BIRT engine for its custom data source to use.
The BIRT engine will thus need to pass through such external Java objects into
the BIRT data source components for consumption. These context objects are
assumed to be dynamically instantiated at report run-time, and are not
statically defined in a report design. The scope of this project thus focuses on
data source specific run-time Java objects which are instantiated external to
BIRT, and are passed through to a custom data source provider plugged in the
BIRT engine. Some examples of the types of external context objects that may be
passed through to a BIRT data source provider include, an open JDBC connection,
a pooled connection, user authorization keys, or query parameter values
collected outside of BIRT.
It looks like the bug of 102838.
This enhancement request is BPS35.
The spec is in http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS35

While this enhancement does provide the application context framework needed by
Bugzilla 102838, it requires further implementation to process a context object.
See description in https://bugs.eclipse.org/bugs/show_bug.cgi?id=102838 .
Committed source implementation.
Verified in the build 20051220</WithStack>
    <WithOutStack>The BIRT engine is often embedded as part of a middle-tier application server,
where the BIRT components are added to the mix of various J2EE components.
During report run-time, some of these other components may instantiate context
objects, which are served to the BIRT engine for its custom data source to use.
The BIRT engine will thus need to pass through such external Java objects into
the BIRT data source components for consumption. These context objects are
assumed to be dynamically instantiated at report run-time, and are not
statically defined in a report design. The scope of this project thus focuses on
data source specific run-time Java objects which are instantiated external to
BIRT, and are passed through to a custom data source provider plugged in the
BIRT engine. Some examples of the types of external context objects that may be
passed through to a BIRT data source provider include, an open JDBC connection,
a pooled connection, user authorization keys, or query parameter values
collected outside of BIRT.
It looks like the bug of 102838.
This enhancement request is BPS35.
The spec is in http://www.eclipse.org/birt/wiki/index.php?n=BPS.BPS35

While this enhancement does provide the application context framework needed by
Bugzilla 102838, it requires further implementation to process a context object.
See description in https://bugs.eclipse.org/bugs/show_bug.cgi?id=102838 .
Committed source implementation.
Verified in the build 20051220</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110683" />
    <CreationDate amount="2005-09-26 14:18:00 -0400" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Chart" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Chart Engine API Improvements</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="10">
        <Lines>
          <Line>- Automatic databinding, either through a sql.ResultSet or through a custom row</Line>
          <Line>expression evaluator (IDataRowExpressionEvaluator)</Line>
          <Line>- An external application context can be passed to the engine for scripting</Line>
          <Line>(IExternalContext)</Line>
          <Line>- New prepare method that automatically creates a runtimecontext</Line>
          <Line>- External style processor can be fed to engine to control how the chart</Line>
          <Line>renders with external styles</Line>
          <Line>- IActionRenderer allows the user to customize actions at rendering time. For</Line>
          <Line>instance URLs could need to be modified depending on the url used to access a</Line>
          <Line>chart at runtime.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- New support for dynamic DPI (Dots per inch) resolution</Line>
          <Line>- JPEG renderer supports new compression quality setting</Line>
          <Line>- new IImageMapEmitter interface to allow any renderer to get access to an</Line>
          <Line>ImageMap. Useful for interactive charts.</Line>
          <Line>- New ICallBackNotifier interface to support interactive java callback</Line>
          <Line>mechanism for charts in SWT/Swing</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The Chart Engine API was created in BIRT 1.0 and supports the embedding of and
access to BIRT charting within an application. The BIRT project uses this API
itself when including the charting functionality in report designs. This project
looks at the Charting API to add new methods to expose new functionality in this
and upcoming releases as well as implement a number of improvements based on
feedback from the user community and other BIRT teams.
The changes in the Chart Engine API have been completed, here is a short 
overview of the new methods and interfaces:

Generator API
- Automatic databinding, either through a sql.ResultSet or through a custom row 
expression evaluator (IDataRowExpressionEvaluator)
- An external application context can be passed to the engine for scripting 
(IExternalContext)
- New prepare method that automatically creates a runtimecontext
- External style processor can be fed to engine to control how the chart 
renders with external styles
- IActionRenderer allows the user to customize actions at rendering time. For 
instance URLs could need to be modified depending on the url used to access a 
chart at runtime.

Device renderer API
- New support for dynamic DPI (Dots per inch) resolution
- JPEG renderer supports new compression quality setting
- new IImageMapEmitter interface to allow any renderer to get access to an 
ImageMap. Useful for interactive charts.
- New ICallBackNotifier interface to support interactive java callback 
mechanism for charts in SWT/Swing

Changes will be fully detailed in the final Engine API specifications on the 
wiki (to come).
Verified</WithStack>
    <WithOutStack>The Chart Engine API was created in BIRT 1.0 and supports the embedding of and
access to BIRT charting within an application. The BIRT project uses this API
itself when including the charting functionality in report designs. This project
looks at the Charting API to add new methods to expose new functionality in this
and upcoming releases as well as implement a number of improvements based on
feedback from the user community and other BIRT teams.
The changes in the Chart Engine API have been completed, here is a short 
overview of the new methods and interfaces:

Generator API
- Automatic databinding, either through a sql.ResultSet or through a custom row 
expression evaluator (IDataRowExpressionEvaluator)
- An external application context can be passed to the engine for scripting 
(IExternalContext)
- New prepare method that automatically creates a runtimecontext
- External style processor can be fed to engine to control how the chart 
renders with external styles
- IActionRenderer allows the user to customize actions at rendering time. For 
instance URLs could need to be modified depending on the url used to access a 
chart at runtime.

Device renderer API
- New support for dynamic DPI (Dots per inch) resolution
- JPEG renderer supports new compression quality setting
- new IImageMapEmitter interface to allow any renderer to get access to an 
ImageMap. Useful for interactive charts.
- New ICallBackNotifier interface to support interactive java callback 
mechanism for charts in SWT/Swing

Changes will be fully detailed in the final Engine API specifications on the 
wiki (to come).
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110684" />
    <CreationDate amount="2005-09-26 14:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[PresentationAPI] [RCP] [EditorMgmt] Workbench sometimes restores multiple empty editor folders</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330581739">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>-1</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.presentations.util.AbstractTabFolder.getItem(AbstractTabFolder.java:151)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.presentations.util.ReplaceDragHandler.dragOver(ReplaceDragHandler.java:59)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.dragOver(TabbedStackPresentation.java:398)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.PartStack.getDropTarget(PartStack.java:551)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PartSashContainer.drag(PartSashContainer.java:986)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.dnd.DragUtil.getDropTarget(DragUtil.java:337)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.dnd.DragUtil.getDropTarget(DragUtil.java:360)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.dnd.DragUtil$2.run(DragUtil.java:216)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:152)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:28)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.syncExec(Display.java:3413)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.dnd.DragUtil$1.handleEvent(DragUtil.java:210)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Tracker.wmMouse(Tracker.java:1030)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Tracker.open(Tracker.java:509)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.dnd.DragUtil.dragToTarget(DragUtil.java:291)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.dnd.DragUtil.performDrag(DragUtil.java:123)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.PartStack.dragStart(PartStack.java:1368)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.PartStack$1.dragStart(PartStack.java:107)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.presentations.util.TabbedStackPresentation$1.handleEvent(TabbedStackPresentation.java:111)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:267)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:280)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.presentations.util.AbstractTabFolder.handleDragStarted(AbstractTabFolder.java:364)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.presentations.util.AbstractTabFolder$2.handleEvent(AbstractTabFolder.java:68)</Frame>
          <Frame depth="27">org.eclipse.ui.presentations.PresentationUtil.handleMouseMove(PresentationUtil.java:96)</Frame>
          <Frame depth="28">org.eclipse.ui.presentations.PresentationUtil.access$4(PresentationUtil.java:89)</Frame>
          <Frame depth="29">org.eclipse.ui.presentations.PresentationUtil$2.handleEvent(PresentationUtil.java:61)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="37">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="38">org.eclipse.ui.examples.rcp.adventurebuilder.GoWild.run(GoWild.java:34)</Frame>
          <Frame depth="39">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="40">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="41">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="42">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="43">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="44">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="45">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="46">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="47">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="48">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="5">
      <source_code type="assignment">
        <location start="2212" end="2293" />
        <code>WorkbenchPage activePage = (WorkbenchPage) activeWorkbenchWindow.getActivePage();</code>
      </source_code>
      <source_code type="assignment">
        <location start="2294" end="2365" />
        <code>EditorAreaHelper editorAreaHelper = activePage.getEditorPresentation();</code>
      </source_code>
      <source_code type="assignment">
        <location start="2366" end="2464" />
        <code>EditorSashContainer editorSashContainer =  (EditorSashContainer) editorAreaHelper.getLayoutPart();</code>
      </source_code>
      <source_code type="assignment">
        <location start="2466" end="2520" />
        <code>ArrayList workbooks = editorAreaHelper.getWorkbooks();</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2521" end="2720" />
        <code>for (int i = 0; i &lt; workbooks.size(); i++) {
   EditorStack editorStack = (EditorStack) workbooks.get(i);
   if(editorStack.getChildren().length==0) {
	editorSashContainer.remove(editorStack);
   }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Steps:

Check out the adventurebuilder example, by expanding
platform-ui-home/jaoo/tutorial in the CVS repository explorer, selecting the
following plug-ins and then choosing "Check out" from the context menu.
org.eclipse.ui.examples.rcp.adventurebuilder.feature
org.eclipse.ui.examples.rcp.adventurebuilder.jnlp
org.eclipse.ui.examples.rcp.adventurebuilder.complete
org.eclipse.ui.examples.rcp.adventurebuilder
org.eclipse.ui.examples.rcp.adventurebuilder.axis
org.eclipse.ui.examples.rcp.adventurebuilder.model
org.eclipse.ui.examples.rcp.adventurebuilder.webservices

Start by opening /org.eclipse.ui.examples.rcp.adventurebuilder/Adventure
Builder.product and clicking on "Launch the product."

Expand nodes in the catalog and open two editors by double-clicking on adventure
names.

Put one editor below the other.

Close the application and restart.

Note that there are two empty editor areas (screenshot to follow).

Expected behaviour: just one editor area.
Created attachment 27530
screenshot
I found this in my log, I think it is related and happens when you open an
editor after you restart the application and start to drag it around.

!ENTRY org.eclipse.ui 4 0 2005-09-26 14:30:06.593
!MESSAGE -1
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: -1
	at
org.eclipse.ui.internal.presentations.util.AbstractTabFolder.getItem(AbstractTabFolder.java:151)
	at
org.eclipse.ui.internal.presentations.util.ReplaceDragHandler.dragOver(ReplaceDragHandler.java:59)
	at
org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.dragOver(TabbedStackPresentation.java:398)
	at org.eclipse.ui.internal.PartStack.getDropTarget(PartStack.java:551)
	at org.eclipse.ui.internal.PartSashContainer.drag(PartSashContainer.java:986)
	at org.eclipse.ui.internal.dnd.DragUtil.getDropTarget(DragUtil.java:337)
	at org.eclipse.ui.internal.dnd.DragUtil.getDropTarget(DragUtil.java:360)
	at org.eclipse.ui.internal.dnd.DragUtil$2.run(DragUtil.java:216)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:152)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:28)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:3413)
	at org.eclipse.ui.internal.dnd.DragUtil$1.handleEvent(DragUtil.java:210)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Tracker.wmMouse(Tracker.java:1030)
	at org.eclipse.swt.widgets.Tracker.open(Tracker.java:509)
	at org.eclipse.ui.internal.dnd.DragUtil.dragToTarget(DragUtil.java:291)
	at org.eclipse.ui.internal.dnd.DragUtil.performDrag(DragUtil.java:123)
	at org.eclipse.ui.internal.PartStack.dragStart(PartStack.java:1368)
	at org.eclipse.ui.internal.PartStack$1.dragStart(PartStack.java:107)
	at
org.eclipse.ui.internal.presentations.util.TabbedStackPresentation$1.handleEvent(TabbedStackPresentation.java:111)
	at
org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:267)
	at
org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:280)
	at
org.eclipse.ui.internal.presentations.util.AbstractTabFolder.handleDragStarted(AbstractTabFolder.java:364)
	at
org.eclipse.ui.internal.presentations.util.AbstractTabFolder$2.handleEvent(AbstractTabFolder.java:68)
	at
org.eclipse.ui.presentations.PresentationUtil.handleMouseMove(PresentationUtil.java:96)
	at org.eclipse.ui.presentations.PresentationUtil.access$4(PresentationUtil.java:89)
	at
org.eclipse.ui.presentations.PresentationUtil$2.handleEvent(PresentationUtil.java:61)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3080)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2713)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.examples.rcp.adventurebuilder.GoWild.run(GoWild.java:34)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)

*** Bug 74899 has been marked as a duplicate of this bug. ***
I suspect that this happens because we save the EditorStacks and save the editors ... on restore we restore the editor stacks but if the editor wasn't persistable they're not restored.

I'm not sure what's valid ... right now, we restore what was there.  The DND could be modified to accept the first editor in an empty editor area, but that might not be consistent with current DND (where dragging out the last editor closes the editor stack, right).

Another option would be have post-restore code that closes all editor stacks until there's only one empty one left or all stacks left have editors open in them.

Another option would be to try not to save editor stacks unless we can find at least one matching "part" that is also saved.

That being said, this is not on the plan for 3.4

PW

A workaround is on startup to look for empty editor workbooks and remove them from the editor area.

this appears to work on 3.4.2:

WorkbenchPage activePage = (WorkbenchPage) activeWorkbenchWindow.getActivePage();
EditorAreaHelper editorAreaHelper = activePage.getEditorPresentation();
EditorSashContainer editorSashContainer =  (EditorSashContainer) editorAreaHelper.getLayoutPart();

ArrayList workbooks = editorAreaHelper.getWorkbooks();
for (int i = 0; i &lt; workbooks.size(); i++) {
   EditorStack editorStack = (EditorStack) workbooks.get(i);
   if(editorStack.getChildren().length==0) {
	editorSashContainer.remove(editorStack);
   }
}
Edoardo, would you be able to contribute this as a patch (against the current 3.7 development stream)? See http://wiki.eclipse.org/Platform_UI/How_to_Contribute
(In reply to comment #6)
&gt; Edoardo, would you be able to contribute this as a patch (against the current
&gt; 3.7 development stream)? See

Boris, yes I think so, but ... patch to what ?
I added that code to my RCP's 
WorkbenchWindowAdvisor.postWindowOpen()

would you want it added to the Eclipse SDK IDE's WorkbenchWindowAdvisor ?
It should probably be in org.eclipse.ui.workbench, close to the place that calls postWindowOpen.
(In reply to comment #8)
&gt; It should probably be in org.eclipse.ui.workbench, close to the place that
&gt; calls postWindowOpen.

Ok, will do a patch - cheers
Created attachment 180115
patch for IDEWorkbenchWindowAdvisor
I have attached a patch that I manually tested against one of the latest nightly 3.7 builds, following the approach of the duplicate bug:
Just opened two text editors off a CVS repository and dragged them side by side,
and restarted the SDK.
Without the patch you get two 'ghost' panes, with the patch all is good.

The code is maybe too defensive with redundant NPE checks, but hey that won't hurt performance as this method is invoked once per workbench window being opened.

Edoardo
Sorry, I'll get this in M4
PW
Created attachment 182769
patch for too many editor areas v02

Make the behaviour a protected method in WorkbenchWindowAdvisor, and call it from IDEWorkbenchWindowAdvisor's postWindowRestore() method.
Edoardo, thanx for the patch.  Could you take a look at my revised patch and see that it still addresses your usecase?

Just a note, this will be an opt-in scenario, as a regular RCP app won't get this for free.

PW
(In reply to comment #14)
&gt; Edoardo, thanx for the patch.  Could you take a look at my revised patch and
&gt; see that it still addresses your usecase?
&gt; 
&gt; Just a note, this will be an opt-in scenario, as a regular RCP app won't get
&gt; this for free.
&gt; 
&gt; PW

looks ok to me. I see the need for the explicit call.
Released for M4
PW
In I20101206-1800
PW
*** Bug 339032 has been marked as a duplicate of this bug. ***
*** Bug 362037 has been marked as a duplicate of this bug. ***
*** Bug 365382 has been marked as a duplicate of this bug. ***
*** Bug 369900 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Steps:

Check out the adventurebuilder example, by expanding
platform-ui-home/jaoo/tutorial in the CVS repository explorer, selecting the
following plug-ins and then choosing "Check out" from the context menu.
org.eclipse.ui.examples.rcp.adventurebuilder.feature
org.eclipse.ui.examples.rcp.adventurebuilder.jnlp
org.eclipse.ui.examples.rcp.adventurebuilder.complete
org.eclipse.ui.examples.rcp.adventurebuilder
org.eclipse.ui.examples.rcp.adventurebuilder.axis
org.eclipse.ui.examples.rcp.adventurebuilder.model
org.eclipse.ui.examples.rcp.adventurebuilder.webservices

Start by opening /org.eclipse.ui.examples.rcp.adventurebuilder/Adventure
Builder.product and clicking on "Launch the product."

Expand nodes in the catalog and open two editors by double-clicking on adventure
names.

Put one editor below the other.

Close the application and restart.

Note that there are two empty editor areas (screenshot to follow).

Expected behaviour: just one editor area.
Created attachment 27530
screenshot
I found this in my log, I think it is related and happens when you open an
editor after you restart the application and start to drag it around.

!ENTRY org.eclipse.ui 4 0 2005-09-26 14:30:06.593
!MESSAGE -1
!STACK 0


*** Bug 74899 has been marked as a duplicate of this bug. ***
I suspect that this happens because we save the EditorStacks and save the editors ... on restore we restore the editor stacks but if the editor wasn't persistable they're not restored.

I'm not sure what's valid ... right now, we restore what was there.  The DND could be modified to accept the first editor in an empty editor area, but that might not be consistent with current DND (where dragging out the last editor closes the editor stack, right).

Another option would be have post-restore code that closes all editor stacks until there's only one empty one left or all stacks left have editors open in them.

Another option would be to try not to save editor stacks unless we can find at least one matching "part" that is also saved.

That being said, this is not on the plan for 3.4

PW

A workaround is on startup to look for empty editor workbooks and remove them from the editor area.

this appears to work on 3.4.2:

WorkbenchPage activePage = (WorkbenchPage) activeWorkbenchWindow.getActivePage();
EditorAreaHelper editorAreaHelper = activePage.getEditorPresentation();
EditorSashContainer editorSashContainer =  (EditorSashContainer) editorAreaHelper.getLayoutPart();

ArrayList workbooks = editorAreaHelper.getWorkbooks();
for (int i = 0; i &lt; workbooks.size(); i++) {
   EditorStack editorStack = (EditorStack) workbooks.get(i);
   if(editorStack.getChildren().length==0) {
	editorSashContainer.remove(editorStack);
   }
}
Edoardo, would you be able to contribute this as a patch (against the current 3.7 development stream)? See http://wiki.eclipse.org/Platform_UI/How_to_Contribute
(In reply to comment #6)
&gt; Edoardo, would you be able to contribute this as a patch (against the current
&gt; 3.7 development stream)? See

Boris, yes I think so, but ... patch to what ?
I added that code to my RCP's 
WorkbenchWindowAdvisor.postWindowOpen()

would you want it added to the Eclipse SDK IDE's WorkbenchWindowAdvisor ?
It should probably be in org.eclipse.ui.workbench, close to the place that calls postWindowOpen.
(In reply to comment #8)
&gt; It should probably be in org.eclipse.ui.workbench, close to the place that
&gt; calls postWindowOpen.

Ok, will do a patch - cheers
Created attachment 180115
patch for IDEWorkbenchWindowAdvisor
I have attached a patch that I manually tested against one of the latest nightly 3.7 builds, following the approach of the duplicate bug:
Just opened two text editors off a CVS repository and dragged them side by side,
and restarted the SDK.
Without the patch you get two 'ghost' panes, with the patch all is good.

The code is maybe too defensive with redundant NPE checks, but hey that won't hurt performance as this method is invoked once per workbench window being opened.

Edoardo
Sorry, I'll get this in M4
PW
Created attachment 182769
patch for too many editor areas v02

Make the behaviour a protected method in WorkbenchWindowAdvisor, and call it from IDEWorkbenchWindowAdvisor's postWindowRestore() method.
Edoardo, thanx for the patch.  Could you take a look at my revised patch and see that it still addresses your usecase?

Just a note, this will be an opt-in scenario, as a regular RCP app won't get this for free.

PW
(In reply to comment #14)
&gt; Edoardo, thanx for the patch.  Could you take a look at my revised patch and
&gt; see that it still addresses your usecase?
&gt; 
&gt; Just a note, this will be an opt-in scenario, as a regular RCP app won't get
&gt; this for free.
&gt; 
&gt; PW

looks ok to me. I see the need for the explicit call.
Released for M4
PW
In I20101206-1800
PW
*** Bug 339032 has been marked as a duplicate of this bug. ***
*** Bug 362037 has been marked as a duplicate of this bug. ***
*** Bug 365382 has been marked as a duplicate of this bug. ***
*** Bug 369900 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110685" />
    <CreationDate amount="2005-09-26 14:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.Doc" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Provide user documentation for 89339 and 103825</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="16">
        <Lines>
          <Line>1. renamed the files and/or put them into the "images", "concepts", "tasks",</Line>
          <Line>or "ref" subfolder if necessary.</Line>
          <Line>2. updated the links to point to the new location of the files</Line>
          <Line>3. removed the "feedback" link in the footer of the document because it</Line>
          <Line>pointed to a non-TPTP web site</Line>
          <Line>4. changed one instance of "filename" to "file name"</Line>
          <Line>5. converted the Unix line feeds to MS-DOS line feeds</Line>
          <Line>Lata &amp; Bianca found a problem in the navigation; only one file was appearing in</Line>
          <Line>the TOC, and it wasn't supposed to be in the Reference section.</Line>
          <Line>Fixed and checked in. Removed the other "Analyzing test results" topics and</Line>
          <Line>replaced it with this one. Also added the toc .xml file to the build.properties</Line>
          <Line>so that it would actually show up in the navigation this time.</Line>
          <Line>Reopening as per Lata's comments.</Line>
          <Line>Updated as per Lata's comments.</Line>
          <Line>ACTION: Please verify/close this defect.</Line>
          <Line>Closing</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Please read the other bugzillas,
https://bugs.eclipse.org/bugs/show_bug.cgi?id=89339 and
https://bugs.eclipse.org/bugs/show_bug.cgi?id=103825 to understand the function.
This defect is to provide the documentation in the on-line help to explain the
new function to the users.
Reassign to Bianca as the owner of the two features; Lata Pepin (lmpepin at
us.ibm.com) provided the user docs.
User docs delivered by Lata, reviewed by me, checked in by me.
Created attachment 27579
Contribution from Lata Pepin for this bugzilla

Lata Pepin provided the attachment as a contribution for this bugzilla.
Created attachment 27581
The reviewed &amp; changed contribution

The review of Lata's contribution required the following changes:
   1. renamed the files and/or put them into the "images", "concepts", "tasks",
or "ref" subfolder if necessary. 
   2. updated the links to point to the new location of the files
   3. removed the "feedback" link in the footer of the document because it
pointed to a non-TPTP web site
   4. changed one instance of "filename" to "file name"
   5. converted the Unix line feeds to MS-DOS line feeds
Lata &amp; Bianca found a problem in the navigation; only one file was appearing in
the TOC, and it wasn't supposed to be in the Reference section.
Fixed and checked in. Removed the other "Analyzing test results" topics and
replaced it with this one. Also added the toc .xml file to the build.properties
so that it would actually show up in the navigation this time.
Reopening as per Lata's comments.
Updated as per Lata's comments.
ACTION: Please verify/close this defect.
Closing</WithStack>
    <WithOutStack>Please read the other bugzillas,
https://bugs.eclipse.org/bugs/show_bug.cgi?id=89339 and
https://bugs.eclipse.org/bugs/show_bug.cgi?id=103825 to understand the function.
This defect is to provide the documentation in the on-line help to explain the
new function to the users.
Reassign to Bianca as the owner of the two features; Lata Pepin (lmpepin at
us.ibm.com) provided the user docs.
User docs delivered by Lata, reviewed by me, checked in by me.
Created attachment 27579
Contribution from Lata Pepin for this bugzilla

Lata Pepin provided the attachment as a contribution for this bugzilla.
Created attachment 27581
The reviewed &amp; changed contribution

The review of Lata's contribution required the following changes:
   1. renamed the files and/or put them into the "images", "concepts", "tasks",
or "ref" subfolder if necessary. 
   2. updated the links to point to the new location of the files
   3. removed the "feedback" link in the footer of the document because it
pointed to a non-TPTP web site
   4. changed one instance of "filename" to "file name"
   5. converted the Unix line feeds to MS-DOS line feeds
Lata &amp; Bianca found a problem in the navigation; only one file was appearing in
the TOC, and it wasn't supposed to be in the Reference section.
Fixed and checked in. Removed the other "Analyzing test results" topics and
replaced it with this one. Also added the toc .xml file to the build.properties
so that it would actually show up in the navigation this time.
Reopening as per Lata's comments.
Updated as per Lata's comments.
ACTION: Please verify/close this defect.
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110686" />
    <CreationDate amount="2005-09-26 14:52:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[Wizards] Save password and password warning should be in authentication section</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>When I'm adding a new CVS repository, a wizard-like dialog appears, and it has
an authentication section to specify the username/password, but the save
password checkbox and password warning are not in there, they are at the bottom
of the page.

I think it makes more sense to have them in the authentication section, since
they're related to authentication? Rather than having the options split up in
two parts of the dialog...
Agreed</WithStack>
    <WithOutStack>When I'm adding a new CVS repository, a wizard-like dialog appears, and it has
an authentication section to specify the username/password, but the save
password checkbox and password warning are not in there, they are at the bottom
of the page.

I think it makes more sense to have them in the authentication section, since
they're related to authentication? Rather than having the options split up in
two parts of the dialog...
Agreed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110687" />
    <CreationDate amount="2005-09-26 14:54:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Common Tools" />
    <component amount="wst.validation" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Errors in .log during validation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>The following two errors are in my .log file after validating some fairly simple
projects:

!ENTRY org.eclipse.wst.validation 4 0 2005-09-26 10:51:03.454
!MESSAGE 
*** ERROR ***: Mon Sep 26 10:51:03 EDT 2005    java.lang.NoSuchMethodException

!ENTRY org.eclipse.wst.validation 4 0 2005-09-26 10:55:35.996
!MESSAGE 
*** ERROR ***: Mon Sep 26 10:55:35 EDT 2005   
java.lang.IllegalArgumentException: The class 'Table' is not a valid classifier
*** Bug 123646 has been marked as a duplicate of this bug. ***
The problem was not reproducable, please reopen if you see again.
Created attachment 33300
EAR containing trivial dynamic web project (WAR+EAR)

import this EAR.  contains errors due to bugzilla-124389,
followed by validation error with no text.
Closing.</WithStack>
    <WithOutStack>The following two errors are in my .log file after validating some fairly simple
projects:

!ENTRY org.eclipse.wst.validation 4 0 2005-09-26 10:51:03.454
!MESSAGE 
*** ERROR ***: Mon Sep 26 10:51:03 EDT 2005    java.lang.NoSuchMethodException

!ENTRY org.eclipse.wst.validation 4 0 2005-09-26 10:55:35.996
!MESSAGE 
*** ERROR ***: Mon Sep 26 10:55:35 EDT 2005   
java.lang.IllegalArgumentException: The class 'Table' is not a valid classifier
*** Bug 123646 has been marked as a duplicate of this bug. ***
The problem was not reproducable, please reopen if you see again.
Created attachment 33300
EAR containing trivial dynamic web project (WAR+EAR)

import this EAR.  contains errors due to bugzilla-124389,
followed by validation error with no text.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110688" />
    <CreationDate amount="2005-09-26 14:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Core" />
    <Version amount="unspecified" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>active search causes workbench freeze</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eugene reported this behavior in the following message:
http://dev.eclipse.org/mhonarc/lists/mylar-dev/msg00072.html

I
finally managed to reproduce this by upgrading to Eclipse 3.2.  This issue was not present
in Eclipse 3.1.  I get 2-5 second freeze which is prohibitively annoying.
This appears to have been the result of the slowness of XML node resolution when the search
scope was being created (each interesting XML node was being added to the active search
scope).  The scope creation is now smarter by only including interesting XML resources
(and not their elements) in the scope, and I no longer see this freeze.

Mik, can you please check if it is somehow affects JSP searches?

I have WTP 0.7 installed and I quite often see 5..10 JSP search jobs probably
kicked by Mylar...</WithStack>
    <WithOutStack>Eugene reported this behavior in the following message:
http://dev.eclipse.org/mhonarc/lists/mylar-dev/msg00072.html

I
finally managed to reproduce this by upgrading to Eclipse 3.2.  This issue was not present
in Eclipse 3.1.  I get 2-5 second freeze which is prohibitively annoying.
This appears to have been the result of the slowness of XML node resolution when the search
scope was being created (each interesting XML node was being added to the active search
scope).  The scope creation is now smarter by only including interesting XML resources
(and not their elements) in the scope, and I no longer see this freeze.

Mik, can you please check if it is somehow affects JSP searches?

I have WTP 0.7 installed and I quite often see 5..10 JSP search jobs probably
kicked by Mylar...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110689" />
    <CreationDate amount="2005-09-26 14:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Progress] Run In Background goes wrong direction in BIDI</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>3.1.1 0923

When you select Run In Background with -dir rtl the floating boc goes to the
right not to the left.
There are currently no plans to do this but we would be happy to look at a patch
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009

This defect is no longer reproduced, please close</WithStack>
    <WithOutStack>3.1.1 0923

When you select Run In Background with -dir rtl the floating boc goes to the
right not to the left.
There are currently no plans to do this but we would be happy to look at a patch
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009

This defect is no longer reproduced, please close</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110690" />
    <CreationDate amount="2005-09-26 15:08:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.servlet" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Issues with New Servlet wizard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1) The "Project::" field has two colons.</Line>
          <Line>2) The Project field isn't context sensitive - it should preselect the project</Line>
          <Line>based on the current selection.</Line>
          <Line>3) The Module Name field is not pre-filled when you select a new project.</Line>
          <Line />
          <Line>4) In the WAR export wizard, the current project is not preselected either.</Line>
          <Line>The issues with the servlet wizard are resolved in WTP 1.0.1.</Line>
          <Line>Closing.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Found a few problems while testing with WTP. In the New Servlet wizard:

1) The "Project::" field has two colons.
2) The Project field isn't context sensitive - it should preselect the project
based on the current selection.
3) The Module Name field is not pre-filled when you select a new project.

4) In the WAR export wizard, the current project is not preselected either.
The issues with the servlet wizard are resolved in WTP 1.0.1.
Closing.</WithStack>
    <WithOutStack>Found a few problems while testing with WTP. In the New Servlet wizard:

1) The "Project::" field has two colons.
2) The Project field isn't context sensitive - it should preselect the project
based on the current selection.
3) The Module Name field is not pre-filled when you select a new project.

4) In the WAR export wizard, the current project is not preselected either.
The issues with the servlet wizard are resolved in WTP 1.0.1.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110691" />
    <CreationDate amount="2005-09-26 15:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.UI.JUnit" />
    <Version amount="4.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Description text for JUnit test methods is not used as JavaDoc comment text in generated Java method.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Description text for JUnit test methods is not used as JavaDoc comment text in 
generated Java method.

The test method description text should be used as the JavaDoc comment text in 
generated Java method since it describes the test method.

Using the TPTP_v4_1_0_200509260100 driver, create a TPTP JUnit test, create a 
test method and add some description text.  Add an invocation to the test 
method as a behavior and open the generate Java test suite class.  Note that 
the JavaDoc comment does not contain the test method's description text.
Is this defect still intended for TPTP V4.2.0?  
(In reply to comment #1)
My intent is still to fix it for i2.
After investigation, the fix for this bug cannot be contained in i2, and the changes it implies require architectural changes (see bugzilla 134254).

To be accurate, the method description is used in the javadoc for the generated Java method, only if this method is first created in the model. However, the javadoc comment is not updated if the method description is changed after the java method has been generated. The (ugly) work-around is to delete the method from the code, then save the model again.
Updating the javadoc would require to use another JDT tooling (AST rather than the JDT model).

Retargetting to the next release (because of the dependency on the architectural change).
Fixed
Description in the model is reflected to the java source when the test suite is saved.
And model description is updated if the user modifies the javadoc.
ACTION: Please verify/close this defect.
Verified on TPTP-4.3.0-200611070100 driver.</WithStack>
    <WithOutStack>Description text for JUnit test methods is not used as JavaDoc comment text in 
generated Java method.

The test method description text should be used as the JavaDoc comment text in 
generated Java method since it describes the test method.

Using the TPTP_v4_1_0_200509260100 driver, create a TPTP JUnit test, create a 
test method and add some description text.  Add an invocation to the test 
method as a behavior and open the generate Java test suite class.  Note that 
the JavaDoc comment does not contain the test method's description text.
Is this defect still intended for TPTP V4.2.0?  
(In reply to comment #1)
My intent is still to fix it for i2.
After investigation, the fix for this bug cannot be contained in i2, and the changes it implies require architectural changes (see bugzilla 134254).

To be accurate, the method description is used in the javadoc for the generated Java method, only if this method is first created in the model. However, the javadoc comment is not updated if the method description is changed after the java method has been generated. The (ugly) work-around is to delete the method from the code, then save the model again.
Updating the javadoc would require to use another JDT tooling (AST rather than the JDT model).

Retargetting to the next release (because of the dependency on the architectural change).
Fixed
Description in the model is reflected to the java source when the test suite is saved.
And model description is updated if the user modifies the javadoc.
ACTION: Please verify/close this defect.
Verified on TPTP-4.3.0-200611070100 driver.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110692" />
    <CreationDate amount="2005-09-26 15:16:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.Execution" />
    <Version amount="4.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Usability, Functionality]  No progress indicator for the execution of launched tests.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>No progress indicator for the execution of launched tests.

When a test (e.g. manual, JUnit or HTTP) is executed, there is a progress 
indicator for launching the test but no progress indicator for the execution of 
the test.  For long running JUnit test, users should have an idea on the 
progress of the test without refreshing the Events tab of the Test Log view.

There is a hidden job that displays the existence of a background job executing
the test (can be viewed via the progress view, show hidden and system tasks as a
preference).  Unfortunately there is no a whole lot of progress indication
(running or not).

There is an enhancement for this (but covers more than what is requested here)
-- we should be able to implement just this without having to implement the
larger enhancement in https://bugs.eclipse.org/bugs/show_bug.cgi?id=74923).


I have added lightweight support that turns out to be very useful -- running
tests without this causes much grief for users.  I have made the progress view
job for test execution visible again (removing it as a system job/task) and
through another defect fixed it so the end of tests (including loading the
result models) is now detected and reported to the harness.

Please mark as resolved.

Please re-assign this defect to me.

Delivered in mid October.
Verified in TPTP_v4_1_0_200510260100.</WithStack>
    <WithOutStack>No progress indicator for the execution of launched tests.

When a test (e.g. manual, JUnit or HTTP) is executed, there is a progress 
indicator for launching the test but no progress indicator for the execution of 
the test.  For long running JUnit test, users should have an idea on the 
progress of the test without refreshing the Events tab of the Test Log view.

There is a hidden job that displays the existence of a background job executing
the test (can be viewed via the progress view, show hidden and system tasks as a
preference).  Unfortunately there is no a whole lot of progress indication
(running or not).

There is an enhancement for this (but covers more than what is requested here)
-- we should be able to implement just this without having to implement the
larger enhancement in https://bugs.eclipse.org/bugs/show_bug.cgi?id=74923).


I have added lightweight support that turns out to be very useful -- running
tests without this causes much grief for users.  I have made the progress view
job for test execution visible again (removing it as a system job/task) and
through another defect fixed it so the end of tests (including loading the
result models) is now detected and reported to the harness.

Please mark as resolved.

Please re-assign this defect to me.

Delivered in mid October.
Verified in TPTP_v4_1_0_200510260100.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110693" />
    <CreationDate amount="2005-09-26 15:18:00 -0400" />
    <DupId amount="108706" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>GC.fillRoundRectangle does not work when an alpha value different from 255 has been set.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The graphics context allows to set an alpha value with GC.setAlpha(int) - this
works fine with fill operations like GC.fillRectangle() or GC.fillArc(), but not
with GC.fillRoundRectangle().

Best,
  Robert
This was fixed for 3.2M2 (requires cairo 1.0).

*** This bug has been marked as a duplicate of 108706 ***</WithStack>
    <WithOutStack>The graphics context allows to set an alpha value with GC.setAlpha(int) - this
works fine with fill operations like GC.fillRectangle() or GC.fillArc(), but not
with GC.fillRoundRectangle().

Best,
  Robert
This was fixed for 3.2M2 (requires cairo 1.0).

*** This bug has been marked as a duplicate of 108706 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110694" />
    <CreationDate amount="2005-09-26 15:24:00 -0400" />
    <DupId amount="110536" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.Execution.JUnitRunner" />
    <Version amount="4.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>Launching a JUnit test generates an execution log with no events.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Launching a JUnit test generates an execution log with no events.

Using the TPTP_v4_1_0_200509260100 driver, create a TPTP JUnit test, create a 
test method.  Add an invocation to the test method as a behavior.  Run the 
JUnit test using the local_deployment.  Note that 
the generated test log (see attached) has no events.
Created attachment 27532
MyTest.execution
Duplicate of defect #110536.

*** This bug has been marked as a duplicate of 110536 ***
Verified in TPTP_v4_1_0_200510200100.</WithStack>
    <WithOutStack>Launching a JUnit test generates an execution log with no events.

Using the TPTP_v4_1_0_200509260100 driver, create a TPTP JUnit test, create a 
test method.  Add an invocation to the test method as a behavior.  Run the 
JUnit test using the local_deployment.  Note that 
the generated test log (see attached) has no events.
Created attachment 27532
MyTest.execution
Duplicate of defect #110536.

*** This bug has been marked as a duplicate of 110536 ***
Verified in TPTP_v4_1_0_200510200100.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110695" />
    <CreationDate amount="2005-09-26 15:30:00 -0400" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Common Tools" />
    <component amount="wst.common" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Prebuilder does not get executed in headless mode</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Using our implementation based on WTP 1.0 (20050916 with some patches), we have
come across some situations where the prebuilder does not seem to execute or 
fails after an EJB jar import. Here's a strange entry we saw in our .classpath
which Jason Sholl feels is an indicator of this:

&lt;classpathentry output="bin/pmtestEJB/" kind="src" path="ejbModule"/&gt;

It should be something with .deployables in the output attribute. Jason Sholl 
is already looking into this issue and has access to our testcase.
If this isn't something needed for M8, we are going to close this defect - the
builder has been removed, and the actual output folder is indeed /bin by default.
This can be closed. It does not have the critical impact we originally thought.
Those were the result of other issues.
closing
closing.
While investigating issue bugzilla 114149, we believe that this issue may be
part of the problem.</WithStack>
    <WithOutStack>Using our implementation based on WTP 1.0 (20050916 with some patches), we have
come across some situations where the prebuilder does not seem to execute or 
fails after an EJB jar import. Here's a strange entry we saw in our .classpath
which Jason Sholl feels is an indicator of this:

&lt;classpathentry output="bin/pmtestEJB/" kind="src" path="ejbModule"/&gt;

It should be something with .deployables in the output attribute. Jason Sholl 
is already looking into this issue and has access to our testcase.
If this isn't something needed for M8, we are going to close this defect - the
builder has been removed, and the actual output folder is indeed /bin by default.
This can be closed. It does not have the critical impact we originally thought.
Those were the result of other issues.
closing
closing.
While investigating issue bugzilla 114149, we believe that this issue may be
part of the problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110696" />
    <CreationDate amount="2005-09-26 15:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Testing" />
    <component amount="Test.UI.JUnit" />
    <Version amount="4.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Behavior and Test Methods tab of the TPTP JUnit Test view are not synchronized.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Behavior and Test Methods tab of the TPTP JUnit Test view are not synchronized.

For example, removing a test method from the Test Methods tab does not 
automatically remove the test method from the Behavior tab.  I would imagine 
that the Manual and HTTP test editors both demonstrate the same behavior.
Deferred to 4.2
An EMF adapter has been inserted on test invocations in order to track test cases removal.
If a test case is removed from the test case (or test method in Junit) tab, invocations of this test case are automatically removed from the behavior tab.
Please set the target to 4.2i1.
Using the TPTP-4.2.0-200601160100 driver, removing a test method will switch focus to the Behavior tab and remove the behaviour, but not remove the actual test method which was the original operation.
Don't understand: "removing a test method will switch focus to the Behavior tab"

If I remove a test method in the test suite editor (select test method from the test methods list and click on remove button), the behavior tab is not brought to top. If I change the active tab of the editor by selecting the behavior tab, I notice that the invocation of the test method is no longer in the behavior. 
The editor is marked dirty. After saving the editor content the JUnit java source code of the test is update to reflect the change in the behavior. Then I can notice that the call of my test method in the suite method has been removed as well as the test method itself.

I works as described for me. Have I miss something ?
Thanks
As I mentioned, using the TPTP-4.2.0-200601160100 build, extract the test-results/platform/org.eclipse.hyades.use.cases plugin from CVS, open the org.eclipse.hyades.use.cases\junit\Profiling_and_Logging\Java_Profiler.testsuite test suite and select the Test Methods tab.  Select any test, click Remove and notice that the focus will switch to the Behavior tab and the behavior for the removed test will be removed.  However, the user has to re-select the Test Methods tab and remove the test again.    
fixed
Verified in the TPTP-4.2.0-200603060100 driver for JUnit, URL and manual test types.</WithStack>
    <WithOutStack>Behavior and Test Methods tab of the TPTP JUnit Test view are not synchronized.

For example, removing a test method from the Test Methods tab does not 
automatically remove the test method from the Behavior tab.  I would imagine 
that the Manual and HTTP test editors both demonstrate the same behavior.
Deferred to 4.2
An EMF adapter has been inserted on test invocations in order to track test cases removal.
If a test case is removed from the test case (or test method in Junit) tab, invocations of this test case are automatically removed from the behavior tab.
Please set the target to 4.2i1.
Using the TPTP-4.2.0-200601160100 driver, removing a test method will switch focus to the Behavior tab and remove the behaviour, but not remove the actual test method which was the original operation.
Don't understand: "removing a test method will switch focus to the Behavior tab"

If I remove a test method in the test suite editor (select test method from the test methods list and click on remove button), the behavior tab is not brought to top. If I change the active tab of the editor by selecting the behavior tab, I notice that the invocation of the test method is no longer in the behavior. 
The editor is marked dirty. After saving the editor content the JUnit java source code of the test is update to reflect the change in the behavior. Then I can notice that the call of my test method in the suite method has been removed as well as the test method itself.

I works as described for me. Have I miss something ?
Thanks
As I mentioned, using the TPTP-4.2.0-200601160100 build, extract the test-results/platform/org.eclipse.hyades.use.cases plugin from CVS, open the org.eclipse.hyades.use.cases\junit\Profiling_and_Logging\Java_Profiler.testsuite test suite and select the Test Methods tab.  Select any test, click Remove and notice that the focus will switch to the Behavior tab and the behavior for the removed test will be removed.  However, the user has to re-select the Test Methods tab and remove the test again.    
fixed
Verified in the TPTP-4.2.0-200603060100 driver for JUnit, URL and manual test types.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110697" />
    <CreationDate amount="2005-09-26 15:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="Examples [GEF 3.x / Zest 1.x]" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Manually add eDiagram example to 3.1.1 download page</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Done.</WithStack>
    <WithOutStack>Done.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110698" />
    <CreationDate amount="2005-09-26 15:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Runtime" />
    <component amount="General" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Auto-layout doesn't layout out connections between nested nodes and top level nodes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Auto-layout doesn't work for an Edge from a nested node and another top level
node. The default auto-layout should handle this situation. This is a very 
important feature for us since all of our edges are edges of this type.
Is this use case describable in the context of the logic example?  Currently 
the default layout only considers the immediate children of the targetted 
container and doesn't lay-out recursively.  There are plans to consider this 
in context to a grouping feature and possibly shape compartments, however 
individual domain clients may wish to specialize layout for their own needs.

There is an example of how to construct a custom layout provider in 
org.eclipse.gmf.examples.runtime.diagram.layout.
I have a node that has a list compartment. This list compartment item's has a
modified text edit part that allows connections to be attached to it.
(Implements INodeEditPart in addition to ListItemCompartmentEditPart.) When I do
an arrange-all, all of the nodes sourced from the list items are layed out in a
horizontal line. 

I do not want to layout the contents of the node. (It doesn't make sense to
layout the contents of a list compartment anyways, since it is already layed out
according to list index.) I'd like for the layout algorithm to behave as if the
edges were sourced to the top-level edit part. When the edges are sourced to the
top level edit part, the diagram is laid out properly.


I've attached two logic diagram files that show what I mean. Run auto-layout on
each of these diagrams. 

I'd like the result of auto-laying nestedDiagram.logic2 to look like the result
of auto-laying nonNested.logic2. (Well, I mean the placement of the top level
edit parts should be the same)
Created attachment 27781
nestedDiagram.logic2
Created attachment 27782
nonNested.logic2
This is an enhancement request.  We will try to schedule this in an upcoming 
iteration for 3.2.  As mentioned below, this will coordinate well with our 
planned group/ungroup feature which will need this enhanced layout capability 
to integrate with the arrange-all functionality.
Changing component to "Runtime Diagram"
I'd like to request this to be moved to M4. My editor uses these types of edges almost exclusively. The sooner it is done, the more time I will have to address any possible issues. 
Fixed by Providing a composite graph layout.
The Composite layout is not enabled by default (it is enabled only on the logic diagram); clients need to enable it if it is needed.
To check the output of the composite layout you can try the logic diagram 
for an example on how to enable the composite layout on your diagram check the LogicLayoutProvider class.
I finally got a chance to look at GMF 1.0M5. Now it seems that auto-layout will auto-layout the top level graph, and for any container node it finds, it will also auto-layout it recursively. This is not what this bug was asking for. 

Scenerio:

Container (A) has a nested node (N1) that has an edge (E1) that targets container node (B). It has a nested node (N2) that has an edge (E2) that targets container node (C). 

When you auto-layout, the layout algorithm puts containers (A),(B) and (C) next to each other in a row. (This is incorrect behavior)

The proper behavior should be that (A) is at the top of the diagram and (B) and (C) are underneath (looks like a binary tree.)

In other words, the layout algorithm should behave AS IF (E1) and (E2) were connected to container (A) directly. Put another way, if (N1) and (N2) didn't exist, and (E1) and (E2) were directly connected to (A), containers (B) and (C) would be put underneath (A) in a tree shape. 

If it helps I can attach a picture. 

Since it is now very late in this release cycle, I am bumping up severity to major. 


I believe what you described is what the CompositeLayoutProvider accommodates.  It will map connections between nodes contained inside outer nodes to the outer nodes for the purposes of the layout.  Did you instrument the CompositeLayoutProvider or the CompoundLayoutProvider?  The CompoundLayoutProvider won't accommodate the use case you describe.

Yes please attach a picture.
After doing a closer examination the fix does solve my problem. Marking as fixed. Thanks!
[target cleanup] 1.0 M5 was the original target milestone for this bug
[GMF Restructure] Bug 319140 : product GMF and component Runtime Diagram was the original product and component for this bug</WithStack>
    <WithOutStack>Auto-layout doesn't work for an Edge from a nested node and another top level
node. The default auto-layout should handle this situation. This is a very 
important feature for us since all of our edges are edges of this type.
Is this use case describable in the context of the logic example?  Currently 
the default layout only considers the immediate children of the targetted 
container and doesn't lay-out recursively.  There are plans to consider this 
in context to a grouping feature and possibly shape compartments, however 
individual domain clients may wish to specialize layout for their own needs.

There is an example of how to construct a custom layout provider in 
org.eclipse.gmf.examples.runtime.diagram.layout.
I have a node that has a list compartment. This list compartment item's has a
modified text edit part that allows connections to be attached to it.
(Implements INodeEditPart in addition to ListItemCompartmentEditPart.) When I do
an arrange-all, all of the nodes sourced from the list items are layed out in a
horizontal line. 

I do not want to layout the contents of the node. (It doesn't make sense to
layout the contents of a list compartment anyways, since it is already layed out
according to list index.) I'd like for the layout algorithm to behave as if the
edges were sourced to the top-level edit part. When the edges are sourced to the
top level edit part, the diagram is laid out properly.


I've attached two logic diagram files that show what I mean. Run auto-layout on
each of these diagrams. 

I'd like the result of auto-laying nestedDiagram.logic2 to look like the result
of auto-laying nonNested.logic2. (Well, I mean the placement of the top level
edit parts should be the same)
Created attachment 27781
nestedDiagram.logic2
Created attachment 27782
nonNested.logic2
This is an enhancement request.  We will try to schedule this in an upcoming 
iteration for 3.2.  As mentioned below, this will coordinate well with our 
planned group/ungroup feature which will need this enhanced layout capability 
to integrate with the arrange-all functionality.
Changing component to "Runtime Diagram"
I'd like to request this to be moved to M4. My editor uses these types of edges almost exclusively. The sooner it is done, the more time I will have to address any possible issues. 
Fixed by Providing a composite graph layout.
The Composite layout is not enabled by default (it is enabled only on the logic diagram); clients need to enable it if it is needed.
To check the output of the composite layout you can try the logic diagram 
for an example on how to enable the composite layout on your diagram check the LogicLayoutProvider class.
I finally got a chance to look at GMF 1.0M5. Now it seems that auto-layout will auto-layout the top level graph, and for any container node it finds, it will also auto-layout it recursively. This is not what this bug was asking for. 

Scenerio:

Container (A) has a nested node (N1) that has an edge (E1) that targets container node (B). It has a nested node (N2) that has an edge (E2) that targets container node (C). 

When you auto-layout, the layout algorithm puts containers (A),(B) and (C) next to each other in a row. (This is incorrect behavior)

The proper behavior should be that (A) is at the top of the diagram and (B) and (C) are underneath (looks like a binary tree.)

In other words, the layout algorithm should behave AS IF (E1) and (E2) were connected to container (A) directly. Put another way, if (N1) and (N2) didn't exist, and (E1) and (E2) were directly connected to (A), containers (B) and (C) would be put underneath (A) in a tree shape. 

If it helps I can attach a picture. 

Since it is now very late in this release cycle, I am bumping up severity to major. 


I believe what you described is what the CompositeLayoutProvider accommodates.  It will map connections between nodes contained inside outer nodes to the outer nodes for the purposes of the layout.  Did you instrument the CompositeLayoutProvider or the CompoundLayoutProvider?  The CompoundLayoutProvider won't accommodate the use case you describe.

Yes please attach a picture.
After doing a closer examination the fix does solve my problem. Marking as fixed. Thanks!
[target cleanup] 1.0 M5 was the original target milestone for this bug
[GMF Restructure] Bug 319140 : product GMF and component Runtime Diagram was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110699" />
    <CreationDate amount="2005-09-26 15:34:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="Examples [GEF 3.x / Zest 1.x]" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>add EMF as optional requirement for examples feature</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The examples feature should contain the ediagram example for 3.2. Can we get it
in the GEF build, and add the example to the examples feature?
*** Bug 104845 has been marked as a duplicate of this bug. ***
As the EDiagram example has not been included in 3.2 (and never after) and it doesn't make sense to do this in the future, closing this as wontfix.</WithStack>
    <WithOutStack>The examples feature should contain the ediagram example for 3.2. Can we get it
in the GEF build, and add the example to the examples feature?
*** Bug 104845 has been marked as a duplicate of this bug. ***
As the EDiagram example has not been included in 3.2 (and never after) and it doesn't make sense to do this in the future, closing this as wontfix.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="110700" />
    <CreationDate amount="2005-09-26 15:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Properties] Manual Test script for Properties View has an incorrectly worded step</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>If the current script there is a step with the wording..."Close last editor to 
see default blank page in the view.".

This only show s a change if the currently active editor actually provides 
property handling. If not (i.e. java files) then the propety view is simply 
showing the last active part's property info and won't update no matter how 
many files you open.

We might change this to say: "Open a schema file, select some attribute (props 
appear) and close the file to see the default, empty, Property View."

Come see me if this isn't clear.
There are currently no plans to do this</WithStack>
    <WithOutStack>If the current script there is a step with the wording..."Close last editor to 
see default blank page in the view.".

This only show s a change if the currently active editor actually provides 
property handling. If not (i.e. java files) then the propety view is simply 
showing the last active part's property info and won't update no matter how 
many files you open.

We might change this to say: "Open a schema file, select some attribute (props 
appear) and close the file to see the default, empty, Property View."

Come see me if this isn't clear.
There are currently no plans to do this</WithOutStack>
  </Bug>
</infozilla-output>

