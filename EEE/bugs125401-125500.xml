<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="125401" />
    <CreationDate amount="2006-01-26 16:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Chkpii errors in ui.navigator extension points</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>From build N200601260010, this error is reported:
ECLIPSE\PLUGINS\ORG.ECLIPSE.PLATFORM.DOC.ISV_3.2.0.N20060126-0010_JAR\REFERENCE\EXTENSION-POINTS\
  ORG_ECLIPSE_UI_NAVIGATOR_NAVIGATORCONTENT.HTML                  HTML-40     801   Either '&lt;actionProvider' is an unsupported tag or replace '&lt;' with '&amp;lt;'.  Line: 98
                                                                              801   Either '&lt;viewerActionBinding' is an unsupported tag or replace '&lt;' with '&amp;lt;'.  Line: 98
                                                                              801   Either '&lt;actionProvider' is an unsupported tag or replace '&lt;' with '&amp;lt;'.  Line: 98
Created attachment 33670
Proposed patch

This would fix these errors according to the preview.
Fixed.
Cleaning up bugs
Sorry about the noise
Now finally, I can mark as verified. No chkpii errors for ui.navigator were reported recently.</WithStack>
    <WithOutStack>From build N200601260010, this error is reported:
ECLIPSE\PLUGINS\ORG.ECLIPSE.PLATFORM.DOC.ISV_3.2.0.N20060126-0010_JAR\REFERENCE\EXTENSION-POINTS\
  ORG_ECLIPSE_UI_NAVIGATOR_NAVIGATORCONTENT.HTML                  HTML-40     801   Either '&lt;actionProvider' is an unsupported tag or replace '&lt;' with '&amp;lt;'.  Line: 98
                                                                              801   Either '&lt;viewerActionBinding' is an unsupported tag or replace '&lt;' with '&amp;lt;'.  Line: 98
                                                                              801   Either '&lt;actionProvider' is an unsupported tag or replace '&lt;' with '&amp;lt;'.  Line: 98
Created attachment 33670
Proposed patch

This would fix these errors according to the preview.
Fixed.
Cleaning up bugs
Sorry about the noise
Now finally, I can mark as verified. No chkpii errors for ui.navigator were reported recently.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125402" />
    <CreationDate amount="2006-01-26 16:53:00 -0500" />
    <DupId amount="134269" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Crash while debugging in gtk_tree_store_*</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I recently upgraded to Debian's GTK+2.8.10-1. Since then I started getting frequent crashes in Eclipse, especially when debugging.

I'm attaching the JVM's output from a session where I was debugging an application with JDT. The last thing I did before the crash was to press F6 to "step over the next line."
Created attachment 33671
JVM crash information
Is there any way you can try with a recent 3.2 milestone build?
I will try with 3.2M5a, unless you indicate otherwise.

Lately it's been happening less frequently, maybe because I've been more "careful," or I just haven't been using the debugger as much, but I believe that in a week or so I'll be able to reproduce it.
Please reopen this bug report if it happens again.
asdf
Created attachment 40149
JVM crash report - Eclipse 3.2RC2

Eclipse crashed twice on me today. Although the crashes are not as frequent as before, they still seem to occur.
Changing version number, summary and status.
The latest crash occured in a different gtk_tree_store_ function than my original report, but they may be related.
SSQ, didn't we this particular crash involving the tree store recently?
SSQ, didn't we fix (yes, the missing word was "fix") this particular crash involving the tree store recently?

This could be a dup of Bug 134269. Javier, is this still happening to you on 3.2?
No, I haven't seen this in a while.
Thanks for asking.


*** This bug has been marked as a duplicate of 134269 ***</WithStack>
    <WithOutStack>I recently upgraded to Debian's GTK+2.8.10-1. Since then I started getting frequent crashes in Eclipse, especially when debugging.

I'm attaching the JVM's output from a session where I was debugging an application with JDT. The last thing I did before the crash was to press F6 to "step over the next line."
Created attachment 33671
JVM crash information
Is there any way you can try with a recent 3.2 milestone build?
I will try with 3.2M5a, unless you indicate otherwise.

Lately it's been happening less frequently, maybe because I've been more "careful," or I just haven't been using the debugger as much, but I believe that in a week or so I'll be able to reproduce it.
Please reopen this bug report if it happens again.
asdf
Created attachment 40149
JVM crash report - Eclipse 3.2RC2

Eclipse crashed twice on me today. Although the crashes are not as frequent as before, they still seem to occur.
Changing version number, summary and status.
The latest crash occured in a different gtk_tree_store_ function than my original report, but they may be related.
SSQ, didn't we this particular crash involving the tree store recently?
SSQ, didn't we fix (yes, the missing word was "fix") this particular crash involving the tree store recently?

This could be a dup of Bug 134269. Javier, is this still happening to you on 3.2?
No, I haven't seen this in a while.
Thanks for asking.


*** This bug has been marked as a duplicate of 134269 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125403" />
    <CreationDate amount="2006-01-26 16:57:00 -0500" />
    <DupId amount="124274" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[KeyBindings] Debug key bindings do not work initially</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- launch program under debug</Line>
          <Line>- hit a breakpoint</Line>
          <Line>- text editor with source at breakpoint is active</Line>
          <Line>- F6 has no effect</Line>
          <Line>- give focus to Debug view</Line>
          <Line>- F6 works</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>build I20060125 + latest commands and UI from head

I'm still encountering keybinding issues in the debugger similar to those reported in bug 118078.

The steps are usually along the lines of:
- launch program under debug
- hit a breakpoint
- text editor with source at breakpoint is active
- F6 has no effect
- give focus to Debug view
- F6 works

but then the other debug keys (F5,  F7, F8, Ctrl+R) still have the same problem, and the Debug view needs to be given focus each time.  The menu items work OK.

Actually, Ctrl+R works differently: it pops up a dialog saying it couldn't find a debug context.

After the key bindings work once, they work OK for the rest of the debug session.
I believe this is a duplicate of Bug 124274.

*** This bug has been marked as a duplicate of 124274 ***</WithStack>
    <WithOutStack>build I20060125 + latest commands and UI from head

I'm still encountering keybinding issues in the debugger similar to those reported in bug 118078.

The steps are usually along the lines of:
- launch program under debug
- hit a breakpoint
- text editor with source at breakpoint is active
- F6 has no effect
- give focus to Debug view
- F6 works

but then the other debug keys (F5,  F7, F8, Ctrl+R) still have the same problem, and the Debug view needs to be given focus each time.  The menu items work OK.

Actually, Ctrl+R works differently: it pops up a dialog saying it couldn't find a debug context.

After the key bindings work once, they work OK for the rest of the debug session.
I believe this is a duplicate of Bug 124274.

*** This bug has been marked as a duplicate of 124274 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125404" />
    <CreationDate amount="2006-01-26 16:57:00 -0500" />
    <DupId amount="84776" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[misc] Add support to shrink/enlarge text in current editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Browsers (Firefox and IE) support a control-scroll combo that allows the user to adjust the size of the text without navigating through a bunch of menus. Often, it's just for that particular file or a few files (a co-worker stops by to look at some code and you'd like to enlarge it for a second to show).

Anyways, it seems like expected behavior (or at least habitually trying) at this point and would be keen to have in Eclipse.

Of course, it'd be useful in GEF views and whatnot but that's not where I spend most of my time.

The only preference I can think of is to set which tie the direction of the scroll with enlargement. I guess "use system direction" versus "invert system direction". Or absolute (scroll up means enlarge text).


*** This bug has been marked as a duplicate of bug 84776 ***</WithStack>
    <WithOutStack>Browsers (Firefox and IE) support a control-scroll combo that allows the user to adjust the size of the text without navigating through a bunch of menus. Often, it's just for that particular file or a few files (a co-worker stops by to look at some code and you'd like to enlarge it for a second to show).

Anyways, it seems like expected behavior (or at least habitually trying) at this point and would be keen to have in Eclipse.

Of course, it'd be useful in GEF views and whatnot but that's not where I spend most of my time.

The only preference I can think of is to set which tie the direction of the scroll with enlargement. I guess "use system direction" versus "invert system direction". Or absolute (scroll up means enlarge text).


*** This bug has been marked as a duplicate of bug 84776 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125405" />
    <CreationDate amount="2006-01-26 17:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="IDE" />
    <Version amount="1.5.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Bad user template code can lead to exception thrown message</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330652601">
        <Exception>java.lang.IllegalStateException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:605)</Frame>
          <Frame depth="1">org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:590)</Frame>
          <Frame depth="2">org.aspectj.weaver.ReferenceType.getDeclaredMethods(ReferenceType.java:421)</Frame>
          <Frame depth="3">org.aspectj.weaver.ResolvedType.getDeclaredAdvice(ResolvedType.java:699)</Frame>
          <Frame depth="4">org.aspectj.weaver.ResolvedType.getDeclaredShadowMungers(ResolvedType.java:736)</Frame>
          <Frame depth="5">org.aspectj.weaver.ResolvedType.collectShadowMungers(ResolvedType.java:572)</Frame>
          <Frame depth="6">org.aspectj.weaver.ResolvedType.collectCrosscuttingMembers(ResolvedType.java:501)</Frame>
          <Frame depth="7">org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect(CrosscuttingMembersSet.java:66)</Frame>
          <Frame depth="8">org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave(BcelWeaver.java:439)</Frame>
          <Frame depth="9">org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:283)</Frame>
          <Frame depth="10">org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178)</Frame>
          <Frame depth="11">org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)</Frame>
          <Frame depth="12">org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)</Frame>
          <Frame depth="13">org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811)</Frame>
          <Frame depth="14">org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:254)</Frame>
          <Frame depth="15">org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163)</Frame>
          <Frame depth="16">org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117)</Frame>
          <Frame depth="17">org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="3">
      <source_code type="package">
        <location start="70" end="83" />
        <code>package test;</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="107" end="119" />
        <code>// main</code>
      </source_code>
      <source_code type="functiondef">
        <location start="119" end="170" />
        <code>public static void main(String[] args) {

    }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>To reproduce: Create a new AspectJ project, and create a new aspect:

package test;

public aspect ATest
{
    // main
    public static void main(String[] args) {

    }
}
====
Then, write ATest&lt;T&gt; instead of just ATest and then save.

You should now get the warning:
2	only abstract aspects can have type parameters	ATest.aj

So far so good. Now, remove the newly added "&lt;T&gt;" and save again. This should happen:

java.lang.IllegalStateException
at org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:605)
at org.aspectj.weaver.ResolvedMemberImpl.parameterizedWith(ResolvedMemberImpl.java:590)
at org.aspectj.weaver.ReferenceType.getDeclaredMethods(ReferenceType.java:421)
at org.aspectj.weaver.ResolvedType.getDeclaredAdvice(ResolvedType.java:699)
at org.aspectj.weaver.ResolvedType.getDeclaredShadowMungers(ResolvedType.java:736)
at org.aspectj.weaver.ResolvedType.collectShadowMungers(ResolvedType.java:572)
at org.aspectj.weaver.ResolvedType.collectCrosscuttingMembers(ResolvedType.java:501)
at org.aspectj.weaver.CrosscuttingMembersSet.addOrReplaceAspect(CrosscuttingMembersSet.java:66)
at org.aspectj.weaver.bcel.BcelWeaver.prepareForWeave(BcelWeaver.java:439)
at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:283)
at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:178)
at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$org_aspectj_ajdt_internal_compiler_CompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)
at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)
at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:811)
at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:254)
at org.aspectj.ajdt.internal.core.builder.AjBuildManager.incrementalBuild(AjBuildManager.java:163)
at org.aspectj.ajde.internal.CompilerAdapter.compile(CompilerAdapter.java:117)
at org.aspectj.ajde.internal.AspectJBuildManager$CompilerThread.run(AspectJBuildManager.java:191)

IllegalStateException thrown: Can't ask to parameterize a member of non-generic type: test.ATest  kind(raw)
I think the problem here is that after the failed build we don't discard the ATest type properly, leaving an entry in the type map for its incorrect generic form.  On the subsequent compile we then treat it as the raw form of the generic type - it isnt, it is just a simple type so we go bang.
damn I'm good.  Exactly as suspected - although it is invalid as a generic aspect (since its non-abstract), the simple type that was in the typemap is promoted during the failing compile by the code in EclipseFactory.addSourceTypeBinding() - this process is never undone and the typemap entry is not replaced.  I am currently testing a demotion scheme so that if it goes back to being non-generic we repair the typemap entry.
fix checked in. waiting on build.
fix available.</WithStack>
    <WithOutStack>To reproduce: Create a new AspectJ project, and create a new aspect:

package test;

public aspect ATest
{
    // main
    public static void main(String[] args) {

    }
}
====
Then, write ATest&lt;T&gt; instead of just ATest and then save.

You should now get the warning:
2	only abstract aspects can have type parameters	ATest.aj

So far so good. Now, remove the newly added "&lt;T&gt;" and save again. This should happen:



IllegalStateException thrown: Can't ask to parameterize a member of non-generic type: test.ATest  kind(raw)
I think the problem here is that after the failed build we don't discard the ATest type properly, leaving an entry in the type map for its incorrect generic form.  On the subsequent compile we then treat it as the raw form of the generic type - it isnt, it is just a simple type so we go bang.
damn I'm good.  Exactly as suspected - although it is invalid as a generic aspect (since its non-abstract), the simple type that was in the typemap is promoted during the failing compile by the code in EclipseFactory.addSourceTypeBinding() - this process is never undone and the typemap entry is not replaced.  I am currently testing a demotion scheme so that if it goes back to being non-generic we repair the typemap entry.
fix checked in. waiting on build.
fix available.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125406" />
    <CreationDate amount="2006-01-26 17:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="EMF" />
    <component amount="Core" />
    <Version amount="2.2" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>ChangeRecorder.getObjectsToDetach() does not scale</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>org.eclipse.emf.ecore.change.util.ChangeRecorder.getObjectsToDetach() does not scale when it comes to large amount of EJBs.

Please contact me at jackfong@ca.ibm.com for further details.


Regards,
Jack
There are no details here to justify opening a bugzilla.  I'll remind you that this is an open source project, so if you have a concrete suggestion to make for how to make it better, feel free to reopen with such a contribution.</WithStack>
    <WithOutStack>org.eclipse.emf.ecore.change.util.ChangeRecorder.getObjectsToDetach() does not scale when it comes to large amount of EJBs.

Please contact me at jackfong@ca.ibm.com for further details.


Regards,
Jack
There are no details here to justify opening a bugzilla.  I'll remind you that this is an open source project, so if you have a concrete suggestion to make for how to make it better, feel free to reopen with such a contribution.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125407" />
    <CreationDate amount="2006-01-26 17:31:00 -0500" />
    <DupId amount="122481" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="2.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Library Outline view - Only the top level elements should show in editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- Open a library with a grid which contains a label.</Line>
          <Line>- Selelct the grid in the outlien view, the editor shows the grid.</Line>
          <Line>- Next select the grid cell in the outline view, the editor shows the grid, with the cell selected.</Line>
          <Line>- Next selcect the label in the grid cell in the outline view</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Steps to reproduce the issue.
- Open a library with a grid which contains a label.
- Selelct the grid in the outlien view, the editor shows the grid. 
- Next select the grid cell in the outline view, the editor shows the grid, with the cell selected.
- Next selcect the label in the grid cell in the outline view

Expected behavior - the grid shows up in the editor with the label item selected.

Current behavior - only the label shows up in the editor.


*** This bug has been marked as a duplicate of 122481 ***
Verified.</WithStack>
    <WithOutStack>Steps to reproduce the issue.
- Open a library with a grid which contains a label.
- Selelct the grid in the outlien view, the editor shows the grid. 
- Next select the grid cell in the outline view, the editor shows the grid, with the cell selected.
- Next selcect the label in the grid cell in the outline view

Expected behavior - the grid shows up in the editor with the label item selected.

Current behavior - only the label shows up in the editor.


*** This bug has been marked as a duplicate of 122481 ***
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125408" />
    <CreationDate amount="2006-01-26 17:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Profiling" />
    <component amount="Platform.Model" />
    <Version amount="4.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>All UUID generated in the adapter editor have the same value</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>This is a regression from the previous release. Every object in the adapter editor should get a unique id
invalid; the UUID's are indeed different
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>This is a regression from the previous release. Every object in the adapter editor should get a unique id
invalid; the UUID's are indeed different
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125409" />
    <CreationDate amount="2006-01-26 17:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="Misc" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Need to add copyright to all GEF features</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Need to add a copyright property to all feature.properties files.  Something like follows:

# "copyright" property - text of the "Feature Update Copyright"
copyright=\
Copyright (c) 2000, 2006 IBM Corporation and others.\n\
All rights reserved. This program and the accompanying materials\n\
are made available under the terms of the Eclipse Public License v1.0\n\
which accompanies this distribution, and is available at\n\
http://www.eclipse.org/legal/epl-v10.html\n\
\n\
Contributors:\n\
    IBM Corporation - initial API and implementation\n
################ end of copyright property ####################################

And then need to add that property to all feature.xml files, as follows:
   &lt;copyright&gt;
      %copyright
   &lt;/copyright&gt;

See related bug for platform: Bug 121143
Updated all the features in HEAD.</WithStack>
    <WithOutStack>Need to add a copyright property to all feature.properties files.  Something like follows:

# "copyright" property - text of the "Feature Update Copyright"
copyright=\
Copyright (c) 2000, 2006 IBM Corporation and others.\n\
All rights reserved. This program and the accompanying materials\n\
are made available under the terms of the Eclipse Public License v1.0\n\
which accompanies this distribution, and is available at\n\
http://www.eclipse.org/legal/epl-v10.html\n\
\n\
Contributors:\n\
    IBM Corporation - initial API and implementation\n
################ end of copyright property ####################################

And then need to add that property to all feature.xml files, as follows:
   &lt;copyright&gt;
      %copyright
   &lt;/copyright&gt;

See related bug for platform: Bug 121143
Updated all the features in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125410" />
    <CreationDate amount="2006-01-26 17:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New toolbar in launch dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>- the setup is quite clear about the three sections, left right and bottom it is not necessary to add a groupbox here</Line>
          <Line>- it also messes up the alignment of the "Configurations" and "Name:" labels</Line>
          <Line>3 - add separators much like the preferences dialog instead</Line>
          <Line>- more space efficient</Line>
          <Line>4 - make the toolbar left aligned.</Line>
          <Line>- I see the similarity to a view here but not sure that is really the right thing to do, I typically expect toolbars to be on the left</Line>
          <Line>5 - I know that you've just added the toolbar, but it seems strange to have a toolbar in a dialog, somehow it is unfamilar.  You might want to consider going back to buttons with text.</Line>
          <Line>Thanks for the suggestions Michael - we're looking for ways to improve the toolbar integration. We moved to the toolbar due to space reasons. Previously, we only had two buttons for the tree view (new/delete). Now we have four actions assocaited with it. We didn't see a nice way to layout four buttons, and thus opted for the toolbar.</Line>
          <Line>I removed the group box and adjusted the alignment,</Line>
          <Line>changes are in HEAD.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse I20060124

- I see some new layout in the Launch dialog and thought I would make some comments/suggestions: 

1 - the new groupbox for "Configurations" seems to add a lot of spacing above and below the toolbar, it just looks like it is floating out in space
I suggest the following

2 - remove the groupbox
   - the setup is quite clear about the three sections, left right and bottom it is not necessary to add a groupbox here
   - it also messes up the alignment of the "Configurations" and "Name:" labels 
3 - add separators much like the preferences dialog instead
   - more space efficient
4 - make the toolbar left aligned.  
   - I see the similarity to a view here but not sure that is really the right thing to do, I typically expect toolbars to be on the left
   5 - I know that you've just added the toolbar, but it seems strange to have a toolbar in a dialog, somehow it is unfamilar.  You might want to consider going back to buttons with text.
Thanks for the suggestions Michael - we're looking for ways to improve the toolbar integration. We moved to the toolbar due to space reasons. Previously, we only had two buttons for the tree view (new/delete). Now we have four actions assocaited with it. We didn't see a nice way to layout four buttons, and thus opted for the toolbar. 
I removed the group box and adjusted the alignment,
changes are in HEAD.

I will leave the bug open for more comments
Created attachment 33863
See how the JUI creates a toolbar on an tree in a wizard

We should be able to do the same in the launch dialog. It clearly associates the toolbar with the viewer.
I must say I find the toolbar difficult to get used to.  Every time I open it I'm hunting for the "new" button... it just doesn't seem to jump out at me as it did when there was text.  

Another thing: when you click a category on the left, you get a legend on the right hand side explaining what the buttons do.  It seems odd to show pictures of buttons that aren't really buttons.  Why not instead embed real buttons in that control so the user can just click it from there?  Several times I've found myself clicking on these images, only to realize that they're not actually buttons, but just pictures of buttons.  See for example the behaviour when you close all perspectives in the workbench window.  There is a line saying a perspective needs to be opened, and it embeds the real button right in the control.
Created attachment 34093
There is also an issue with the background color on OS X. 

The background of the toolbar is non default and jarring.  It has lost the grainy texture that is the default for widgets on OS X.
I don't see the Mac background issue on I20060131-1200. Kim you must be using, the toolbar is now left aligned.
Created attachment 34203
patch.

This patch uses ViewForm to make the dialog look more view like and make the tool bar more prominent
submitted the patch with a few minor stylistic changes.

It would be nice now if we could have the launch configuration edit area look similar, with a nice border encapsulating the name field and the tabs...
Created attachment 34228
more ViewForms
Slightly altered form of patch (Attachment #34228) released to HEAD.
altered the tab group viewer again to not use the header, now it appears as a simple etched border.
we are content with the look of the toolbar as is, going to close the bug, if anyone has any more comments about it please reopen the bug.
verified until (if) further comment</WithStack>
    <WithOutStack>Eclipse I20060124

- I see some new layout in the Launch dialog and thought I would make some comments/suggestions: 

1 - the new groupbox for "Configurations" seems to add a lot of spacing above and below the toolbar, it just looks like it is floating out in space
I suggest the following

2 - remove the groupbox
   - the setup is quite clear about the three sections, left right and bottom it is not necessary to add a groupbox here
   - it also messes up the alignment of the "Configurations" and "Name:" labels 
3 - add separators much like the preferences dialog instead
   - more space efficient
4 - make the toolbar left aligned.  
   - I see the similarity to a view here but not sure that is really the right thing to do, I typically expect toolbars to be on the left
   5 - I know that you've just added the toolbar, but it seems strange to have a toolbar in a dialog, somehow it is unfamilar.  You might want to consider going back to buttons with text.
Thanks for the suggestions Michael - we're looking for ways to improve the toolbar integration. We moved to the toolbar due to space reasons. Previously, we only had two buttons for the tree view (new/delete). Now we have four actions assocaited with it. We didn't see a nice way to layout four buttons, and thus opted for the toolbar. 
I removed the group box and adjusted the alignment,
changes are in HEAD.

I will leave the bug open for more comments
Created attachment 33863
See how the JUI creates a toolbar on an tree in a wizard

We should be able to do the same in the launch dialog. It clearly associates the toolbar with the viewer.
I must say I find the toolbar difficult to get used to.  Every time I open it I'm hunting for the "new" button... it just doesn't seem to jump out at me as it did when there was text.  

Another thing: when you click a category on the left, you get a legend on the right hand side explaining what the buttons do.  It seems odd to show pictures of buttons that aren't really buttons.  Why not instead embed real buttons in that control so the user can just click it from there?  Several times I've found myself clicking on these images, only to realize that they're not actually buttons, but just pictures of buttons.  See for example the behaviour when you close all perspectives in the workbench window.  There is a line saying a perspective needs to be opened, and it embeds the real button right in the control.
Created attachment 34093
There is also an issue with the background color on OS X. 

The background of the toolbar is non default and jarring.  It has lost the grainy texture that is the default for widgets on OS X.
I don't see the Mac background issue on I20060131-1200. Kim you must be using, the toolbar is now left aligned.
Created attachment 34203
patch.

This patch uses ViewForm to make the dialog look more view like and make the tool bar more prominent
submitted the patch with a few minor stylistic changes.

It would be nice now if we could have the launch configuration edit area look similar, with a nice border encapsulating the name field and the tabs...
Created attachment 34228
more ViewForms
Slightly altered form of patch (Attachment #34228) released to HEAD.
altered the tab group viewer again to not use the header, now it appears as a simple etched border.
we are content with the look of the toolbar as is, going to close the bug, if anyone has any more comments about it please reopen the bug.
verified until (if) further comment</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125411" />
    <CreationDate amount="2006-01-26 17:36:00 -0500" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="2.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Library Explorer - shows the entire path</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>- User opens a report design.</Line>
          <Line>- User selecs a report element in the outline view.</Line>
          <Line>- If the report element extends a library element, the property editor should show the library file path as shown in the #2 mockup.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- Library explorer node should show the "title" if it exists, if not it should show the library file name as shown be Aashima's mockups ( comment #1 )</Line>
          <Line>- When user hovers on the library name node in the library explorer, the hover text should the entire path.</Line>
          <Line>- Report design property editor changes as explained by Comment #2 and Comment #4.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1) Lib explorer shows the list of libraries. 
- Each library name is shown by the  entire path.

Expected behavior
- Instead it should only the library file name in lib explorer.
Created attachment 33683
File names to be handled in library explorer

Instead of the entire path, library explorer should just have the file name.
Created attachment 33684
Add a field to the prorties editor

Add the shown field in the property editor under general category, which should give the entire path as read only, not editable.
Please make the changes as suggested in the attachments
Comment #2 - The second change added by Aashima is for the following scenario 
- User opens a report design.
- User selecs a report element in the outline view.
- If the report element extends a library element, the property editor should show the library file path as shown in the #2 mockup.

Below are the list of changes to be made for this issue
- Library explorer node should show the "title" if it exists, if not it should show the library file name as shown be Aashima's mockups ( comment #1 )
- When user hovers on the library name node in the library explorer, the hover text should the entire path.
- Report design property editor changes as explained by Comment #2 and Comment #4.

*** Bug 125260 has been marked as a duplicate of this bug. ***
*** Bug 124778 has been marked as a duplicate of this bug. ***
Comment on attachment 33684
Add a field to the prorties editor

Please ignore this mockup.
Created attachment 34362
Property editor view when a report element is selected in outlinew view

Property editor view when a report element is selected in outlinew view
Assigned to Yueqian to add property page in properties view.
That property part has sepearte bug as 126953
verified.
The title given to any report file type should take precedence. I just verified the bug in 20060320 build, and found that only the outline view is showing the title, while Library Explorer and Navigator are using the file name. This is inconsistent, title should take precedence in every view. Mouse hover will show the File name not the title.
Please fix the library explorer to show the title. We dont want to make any changes to Navigator behavior.
Qiangsheng just assigned this bug to me.
Having read the comments above, i'm confused by what you said.
Currently, it does show the filename in the library explorer.

I'd like to make sure the requirement:
In library explorer.
Show title if it exists,or show the file name(not the entire name),right ?  
If what I said is true in comment #15, I don't think we need to modify any code, it meets the demand now.

Because of fault in design. after modifying libraries, if you like to see the result in library explorer, you must save the library and refresh library explorer.  
I think it meets the demands, and needn't fix.
verified 20060405</WithStack>
    <WithOutStack>1) Lib explorer shows the list of libraries. 
- Each library name is shown by the  entire path.

Expected behavior
- Instead it should only the library file name in lib explorer.
Created attachment 33683
File names to be handled in library explorer

Instead of the entire path, library explorer should just have the file name.
Created attachment 33684
Add a field to the prorties editor

Add the shown field in the property editor under general category, which should give the entire path as read only, not editable.
Please make the changes as suggested in the attachments
Comment #2 - The second change added by Aashima is for the following scenario 
- User opens a report design.
- User selecs a report element in the outline view.
- If the report element extends a library element, the property editor should show the library file path as shown in the #2 mockup.

Below are the list of changes to be made for this issue
- Library explorer node should show the "title" if it exists, if not it should show the library file name as shown be Aashima's mockups ( comment #1 )
- When user hovers on the library name node in the library explorer, the hover text should the entire path.
- Report design property editor changes as explained by Comment #2 and Comment #4.

*** Bug 125260 has been marked as a duplicate of this bug. ***
*** Bug 124778 has been marked as a duplicate of this bug. ***
Comment on attachment 33684
Add a field to the prorties editor

Please ignore this mockup.
Created attachment 34362
Property editor view when a report element is selected in outlinew view

Property editor view when a report element is selected in outlinew view
Assigned to Yueqian to add property page in properties view.
That property part has sepearte bug as 126953
verified.
The title given to any report file type should take precedence. I just verified the bug in 20060320 build, and found that only the outline view is showing the title, while Library Explorer and Navigator are using the file name. This is inconsistent, title should take precedence in every view. Mouse hover will show the File name not the title.
Please fix the library explorer to show the title. We dont want to make any changes to Navigator behavior.
Qiangsheng just assigned this bug to me.
Having read the comments above, i'm confused by what you said.
Currently, it does show the filename in the library explorer.

I'd like to make sure the requirement:
In library explorer.
Show title if it exists,or show the file name(not the entire name),right ?  
If what I said is true in comment #15, I don't think we need to modify any code, it meets the demand now.

Because of fault in design. after modifying libraries, if you like to see the result in library explorer, you must save the library and refresh library explorer.  
I think it meets the demands, and needn't fix.
verified 20060405</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125412" />
    <CreationDate amount="2006-01-26 17:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="Community" />
    <component amount="Bugzilla" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Operating System should default to ALL for new bugs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Most bugs opened apply to all operating systems (at least, more so than otherwise).  Since most developers use Windows, most bugs list Windows as the OS, when that is not really the case.  This makes it difficult to search for bugs that truly are Windows-only.  We should require the bug reporter to set the OS if it is OS-specific.  This probably applies to the Platform field as well.
That's a bugzilla-wide setting. I would need overwhelming support from the community before changing this default behaviour.

D.
Closing as WONTFIX.  There doesn't seem to be any other demand to do a global Bugzilla change.

D.</WithStack>
    <WithOutStack>Most bugs opened apply to all operating systems (at least, more so than otherwise).  Since most developers use Windows, most bugs list Windows as the OS, when that is not really the case.  This makes it difficult to search for bugs that truly are Windows-only.  We should require the bug reporter to set the OS if it is OS-specific.  This probably applies to the Platform field as well.
That's a bugzilla-wide setting. I would need overwhelming support from the community before changing this default behaviour.

D.
Closing as WONTFIX.  There doesn't seem to be any other demand to do a global Bugzilla change.

D.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125413" />
    <CreationDate amount="2006-01-26 17:44:00 -0500" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="2.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="enhancement" />
    <Summery>Export Report design to a new library</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Currently if a user tries to export an entire report design it directly shows the file folder browsing dialog.

The UI needs some improvements. Assigning to UI engineer to provide the proper UI mockups for the change.
Created attachment 34237
mockups for browse file windows

Please refer to the notes section of powerpoint slides for detailed descriptions.
#1 - Refer to Aashima's mockups to make the UI changes
#2 - ALso remove all the "Export" right click menus for all the report elements from the report design outlinew view. 

Note: We will only support export of an entire report design and not of report elements.
I've fixed it.
Verify on build 20060224
There is a typing mistake in the description section of the export dialog box "Export File to Library". Library is spelled wrong in the detail description 'Export the report design to libary'...r is missing.
verified 20060405</WithStack>
    <WithOutStack>Currently if a user tries to export an entire report design it directly shows the file folder browsing dialog.

The UI needs some improvements. Assigning to UI engineer to provide the proper UI mockups for the change.
Created attachment 34237
mockups for browse file windows

Please refer to the notes section of powerpoint slides for detailed descriptions.
#1 - Refer to Aashima's mockups to make the UI changes
#2 - ALso remove all the "Export" right click menus for all the report elements from the report design outlinew view. 

Note: We will only support export of an entire report design and not of report elements.
I've fixed it.
Verify on build 20060224
There is a typing mistake in the description section of the export dialog box "Export File to Library". Library is spelled wrong in the detail description 'Export the report design to libary'...r is missing.
verified 20060405</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125414" />
    <CreationDate amount="2006-01-26 17:49:00 -0500" />
    <DupId amount="121131" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="2.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Library - Should also support a tab to show XML Source</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In the library editor, a tab to show XML Source should be supported similar in behavior to report design.
please fix this one together with or after the layout editor tab re-arrangement enhancement.


*** This bug has been marked as a duplicate of 121131 ***
Verified.</WithStack>
    <WithOutStack>In the library editor, a tab to show XML Source should be supported similar in behavior to report design.
please fix this one together with or after the layout editor tab re-arrangement enhancement.


*** This bug has been marked as a duplicate of 121131 ***
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125415" />
    <CreationDate amount="2006-01-26 17:54:00 -0500" />
    <DupId amount="124578" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="2.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>RunReport options from the report design should not modify the report</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>-- Right click on a report design in the workspace
-- Click on Select Report --&gt; Run Report
-- The selected report is run

Unexpected behavior - The report is modified, the run report options modifies the report design to save the report parameter values.

Expected behavior - The report should not be modified. Only when a user clicks selects "preview" the report design should be modified to store the report parameter values.


*** This bug has been marked as a duplicate of 124578 ***</WithStack>
    <WithOutStack>-- Right click on a report design in the workspace
-- Click on Select Report --&gt; Run Report
-- The selected report is run

Unexpected behavior - The report is modified, the run report options modifies the report design to save the report parameter values.

Expected behavior - The report should not be modified. Only when a user clicks selects "preview" the report design should be modified to store the report parameter values.


*** This bug has been marked as a duplicate of 124578 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125416" />
    <CreationDate amount="2006-01-26 18:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Better diagnostic messages on unresolved bundles</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Currently, PDE flags imported packages (via Import-Package) that do not have a matching exported package.

This is good, but not sufficient.

There are cases in which an imported package has a corresponding exported package, but the supplier of the exported package is itself unresolved.

This results in the workspace bundle importing that package being unresolved (ie. empty classpath container), but there are no errors flagged on the manifest.mf to give a clue on to why the bundle is unresolved.
Take a look at the following method on StateHelper.

public VersionConstraint[] getUnsatisfiedLeaves(BundleDescription[] bundles)

This should tell you the ultimate reasons a particular set of bundles could not be resolved.
improved the error reporting.

When an Import-Package is supplied by an unresolved bundle, we flag the client importing the package with a meaningful message.  This way it would be clear to the user why the classpath is incomplete.</WithStack>
    <WithOutStack>Currently, PDE flags imported packages (via Import-Package) that do not have a matching exported package.

This is good, but not sufficient.

There are cases in which an imported package has a corresponding exported package, but the supplier of the exported package is itself unresolved.

This results in the workspace bundle importing that package being unresolved (ie. empty classpath container), but there are no errors flagged on the manifest.mf to give a clue on to why the bundle is unresolved.
Take a look at the following method on StateHelper.

public VersionConstraint[] getUnsatisfiedLeaves(BundleDescription[] bundles)

This should tell you the ultimate reasons a particular set of bundles could not be resolved.
improved the error reporting.

When an Import-Package is supplied by an unresolved bundle, we flag the client importing the package with a meaningful message.  This way it would be clear to the user why the classpath is incomplete.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125417" />
    <CreationDate amount="2006-01-26 18:20:00 -0500" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report" />
    <Version amount="2.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Library  - Cannot proceed with using a library</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>1.)  ( line = 10, tag = property)   (Element = Library, Name = null), org.eclipse.birt.report.model.command.LibraryException (code = Error.LibraryException.DUPLICATE_LIBRARY_NAMESPACE, message : The library namespace "library5" exists already.)</Line>
          <Line>DE issues</Line>
          <Line>- I thought we throw exception if the name space is not unique for only immediately included libraries only ( and not the nested ones )</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>1.    designTable extends lib1.Table1,</Line>
          <Line>2.    lib1.Table1 extends lib2.Table1</Line>
          <Line>3.    lib2.Table1 uses lib2.dataset1</Line>
          <Line />
          <Line>Then, designTable uses lib1.lib2.dataset1. In the worst cases, the name prefix can be very long although there are only few such cases. Element references of DataSource and DataSet are affected by this change. Is this acceptable?</Line>
          <Line />
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>-- Copy the attached report design report.rptdesign to a location $test.
-- Copy the attached librar5.rptlibrary and data.rptlibrary $test/common location.
-- Now open the report.rptdesign design file
-- From the library explore try to add dataset dsCustomer from library data.rptliberary to the open report design file

Expected behavior - I should be able to add a componenet from the library.
What actually happens - I see the following error 

Error.DesignFileException.SYNTAX_ERROR - 1 errors found! 
  Plug-in Provider:Eclipse.org
  Plug-in Name:BIRT Model
  Plug-in ID:org.eclipse.birt.report.model
  Version:2.0.0
  Error Code:Error.DesignFileException.SYNTAX_ERROR
  Error Message:Error.DesignFileException.SYNTAX_ERROR - 1 errors found! 
  1.)  ( line = 10, tag = property)   (Element = Library, Name = null), org.eclipse.birt.report.model.command.LibraryException (code = Error.LibraryException.DUPLICATE_LIBRARY_NAMESPACE, message : The library namespace "library5" exists already.)
DE issues
- I thought we throw exception if the name space is not unique for only immediately included libraries only ( and not the nested ones )

Note: After the DE fix please assign to UI team.

UI issue
- If the namespace is not unique, user should be shown a dialog to enter a different namespace. In the above scenario, due to namespace conflict user is not allowed to proceed.

Created attachment 33675
report design file
Created attachment 33676
library file
Created attachment 33677
library file
Sorry, one minor correction
Copy the librar5.rptlibrary to $test folder
Currently the namespace is globally unique. If we change to the above solution, the namespace must support multi-level like: lib1.lib2.dataset1 to uniquely locate the reference in libraries. 
 
For example, if 
1.    designTable extends lib1.Table1, 
2.    lib1.Table1 extends lib2.Table1
3.    lib2.Table1 uses lib2.dataset1
 
Then, designTable uses lib1.lib2.dataset1. In the worst cases, the name prefix can be very long although there are only few such cases. Element references of DataSource and DataSet are affected by this change. Is this acceptable? 
 

Verified in build 20060215</WithStack>
    <WithOutStack>-- Copy the attached report design report.rptdesign to a location $test.
-- Copy the attached librar5.rptlibrary and data.rptlibrary $test/common location.
-- Now open the report.rptdesign design file
-- From the library explore try to add dataset dsCustomer from library data.rptliberary to the open report design file

Expected behavior - I should be able to add a componenet from the library.
What actually happens - I see the following error 

Error.DesignFileException.SYNTAX_ERROR - 1 errors found! 
  Plug-in Provider:Eclipse.org
  Plug-in Name:BIRT Model
  Plug-in ID:org.eclipse.birt.report.model
  Version:2.0.0
  Error Code:Error.DesignFileException.SYNTAX_ERROR
  Error Message:Error.DesignFileException.SYNTAX_ERROR - 1 errors found! 
  1.)  ( line = 10, tag = property)   (Element = Library, Name = null), org.eclipse.birt.report.model.command.LibraryException (code = Error.LibraryException.DUPLICATE_LIBRARY_NAMESPACE, message : The library namespace "library5" exists already.)
DE issues
- I thought we throw exception if the name space is not unique for only immediately included libraries only ( and not the nested ones )

Note: After the DE fix please assign to UI team.

UI issue
- If the namespace is not unique, user should be shown a dialog to enter a different namespace. In the above scenario, due to namespace conflict user is not allowed to proceed.

Created attachment 33675
report design file
Created attachment 33676
library file
Created attachment 33677
library file
Sorry, one minor correction
Copy the librar5.rptlibrary to $test folder
Currently the namespace is globally unique. If we change to the above solution, the namespace must support multi-level like: lib1.lib2.dataset1 to uniquely locate the reference in libraries. 
 
For example, if 
1.    designTable extends lib1.Table1, 
2.    lib1.Table1 extends lib2.Table1
3.    lib2.Table1 uses lib2.dataset1
 
Then, designTable uses lib1.lib2.dataset1. In the worst cases, the name prefix can be very long although there are only few such cases. Element references of DataSource and DataSet are affected by this change. Is this acceptable? 
 

Verified in build 20060215</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125418" />
    <CreationDate amount="2006-01-26 18:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Field Assist] - API - Should ContentProposalPopup be public?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>In the initial release of the field assist API, the ContentProposalPopup is public.  There's really no reason for this to be the case, as the popup is driven by the ContentProposalAdapter.

The ContentProposalPopup should likely be made an inner type of the adapter.
This should be done for M5, but make sure there's still no need to access the popup when content assist is driven by a handler.
Everything still working normally when invoked by a handler.
Code cleaned up considerably with this change, also.
Released &gt;20050127.
verified in 20060214-0800 through source inspection</WithStack>
    <WithOutStack>In the initial release of the field assist API, the ContentProposalPopup is public.  There's really no reason for this to be the case, as the popup is driven by the ContentProposalAdapter.

The ContentProposalPopup should likely be made an inner type of the adapter.
This should be done for M5, but make sure there's still no need to access the popup when content assist is driven by a handler.
Everything still working normally when invoked by a handler.
Code cleaned up considerably with this change, also.
Released &gt;20050127.
verified in 20060214-0800 through source inspection</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125419" />
    <CreationDate amount="2006-01-26 18:40:00 -0500" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Designer" />
    <Version amount="2.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Import library message to be removed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- Select a library node in hte library explorer</Line>
          <Line>- Right click and select "Use Library"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>- Select a library node in hte library explorer
- Right click and select "Use Library"

Current behavior - A dialog shows message that the library was imported successfully.

Expected - No dialog is shown.
Note: THe dialog should be shown when you drag the report item ( from a lib that doesnt exist ) from lib exporer to layout.
I've fixed it.</WithStack>
    <WithOutStack>- Select a library node in hte library explorer
- Right click and select "Use Library"

Current behavior - A dialog shows message that the library was imported successfully.

Expected - No dialog is shown.
Note: THe dialog should be shown when you drag the report item ( from a lib that doesnt exist ) from lib exporer to layout.
I've fixed it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125420" />
    <CreationDate amount="2006-01-26 18:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>[Commands] parameters: allow commands to specify return type</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1) should the return type be considered in Command#compareTo()?</Line>
          <Line>2) should the return type affect eventing in Command#define() and Command#undefine()</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Bug #121709 established a system for command parameter types.  There was a request (from UA for cheatsheets) to augment this a bit to allow the return type of a command to be (optionally) specified also.  I'm going to attach a patch providing this support.

The &lt;command&gt; element will get a new attribute called returnTypeId that is used to specify a commandParameterType id (just as with the &lt;commandParameter&gt; element's typeId attribute).

The existing JUnit tests for command parameter types were updated to use/test this new functionality.

Two questions:
1) should the return type be considered in Command#compareTo()?
2) should the return type affect eventing in Command#define() and Command#undefine()

The patch assumes "no" to those questions.  I can work on the patch more if the answer is yes.
Created attachment 33678
adds support for specifying command return types
(1) To be honest, I think the compareTo could be deleted, if it weren't for the fact that it is now API.  It should probably only be based on id (possibly name+id).  So, no the return type should no affect compareTo.
(2) Yes

I'll review the revised patch when it is ready.  This is API.  API freeze is two weeks away.

Created attachment 33731
adds isReturnTypeChanged() to CommandEvent

Return type changes are now tracked in define/undefine and represented in CommandEvent.
Another fine patch.  Committed as is to HEAD.  This should appear in I20060131-0800 and later.

There is no use for this within the workbench, but Chris has been using this for a while now.  There are also tests in org.eclipse.ui.tests.  Marking as VERIFIED.</WithStack>
    <WithOutStack>Bug #121709 established a system for command parameter types.  There was a request (from UA for cheatsheets) to augment this a bit to allow the return type of a command to be (optionally) specified also.  I'm going to attach a patch providing this support.

The &lt;command&gt; element will get a new attribute called returnTypeId that is used to specify a commandParameterType id (just as with the &lt;commandParameter&gt; element's typeId attribute).

The existing JUnit tests for command parameter types were updated to use/test this new functionality.

Two questions:
1) should the return type be considered in Command#compareTo()?
2) should the return type affect eventing in Command#define() and Command#undefine()

The patch assumes "no" to those questions.  I can work on the patch more if the answer is yes.
Created attachment 33678
adds support for specifying command return types
(1) To be honest, I think the compareTo could be deleted, if it weren't for the fact that it is now API.  It should probably only be based on id (possibly name+id).  So, no the return type should no affect compareTo.
(2) Yes

I'll review the revised patch when it is ready.  This is API.  API freeze is two weeks away.

Created attachment 33731
adds isReturnTypeChanged() to CommandEvent

Return type changes are now tracked in define/undefine and represented in CommandEvent.
Another fine patch.  Committed as is to HEAD.  This should appear in I20060131-0800 and later.

There is no use for this within the workbench, but Chris has been using this for a while now.  There are also tests in org.eclipse.ui.tests.  Marking as VERIFIED.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125421" />
    <CreationDate amount="2006-01-26 19:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="Examples [GEF 3.x / Zest 1.x]" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Text] SelectionRange should have information about its containing editpart</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>You should be able to query the SelectionRange to get the EditPart that completely contains it.  At this point, this information is in SelectionModel (although its not being set/used).  It should be removed from there.</WithStack>
    <WithOutStack>You should be able to query the SelectionRange to get the EditPart that completely contains it.  At this point, this information is in SelectionModel (although its not being set/used).  It should be removed from there.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125422" />
    <CreationDate amount="2006-01-26 19:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Core" />
    <Version amount="0.4" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[discussion] option to blacklist resources from context</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Excluding particular resources from the task context on your local machine.</Line>
          <Line />
          <Line>2. Excluding particular resources from a task context shared with others (i.e., posted on a bug report) (like a .cvsignore)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- A global list (configurable) of ignored defaults.</Line>
          <Line>- Some way to ignore individual resources (files, folders, patterns) like .cvsignore in CVS.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Forked from bug#118151:

"I think the "blacklist" (or whatever it may be called...) is a good idea to be
considered in the future.

It is like .cvsignore file in CVS: a list where you put anything you know won't
(or don't want) be interesting to mylar.

Talking about the "giant-log-file" use-case: I made a Eclipse plugin that
provides sintax coloring for my log file, so it makes more easy to analyze it
inside Eclipse than notepad ;-). But I know that I will ** never ** want it to
be included in task context, because I don't want it to be restored. So my
alternatives today are:

1 - Always remember to close the file(s) before exit the workbench, or switch
task context, so it will not be restored in next activation (sometimes this
does not work; on reactivation, mylar thinks it is interesting, and keeps
reopening...).

2 - Always remember to deactivate task context before opening the log file, and
reactivate after closing."
Sounds like a good idea, and there does indeed seem to be a class of resources that are always of a transient interest--i.e. you want to refer to them periodically, but never want them to be a part of your context.  In addition to log files I can imagine large ZIPs, output files from things like code generators that aren't marked "derived", etc.  I added Eugene to the CC since he asked for something similar. 

There's a question of whether this is purely a UI thing (e.g. will never show in filtered mode, never be restored), or whether the exclusion should work at the monitoring level (i.e. interaction with those resources won't be captured).  Let's figure out the UI first, here are some thoughts:

* Make it work for both files and directories, e.g. if a project has something like a "temp-src" folder everything under it could be ignored.

* Make it parallel or at least similar to the current "Preferences -&gt; Mylar -&gt; Interest Filter" inclusion pattern settings.

* Figure out whether it should be allows resources to be selected from the workspace, in addition to allowing patterns (e.g. *.foogen).  Perhaps something like "Preferences -&gt; Team -&gt; Ignored Resources" but with Add Resource in addition to Add Pattern?

I somehow don't like the idea of maintaining global list of exclusions. It seems that per-project list would be more appropriate. I have huge project that is abusing build folder for all kind of temporary things when running junit tests and ant targets, so I don't want to see anything from that build folder when I refresh. From other hand other projects, especially Maven-managed could have generated source folders under build or target folder that are registered as source folders for Eclipse compiler and those should be in the context.

An alternative option could be somehow introduce a negative interest level on some resources, so they will never gain interest on refresh. The only trouble with that is how to do this in UI and then how to restore back those resources. Perhaps context preview could help with that.
I'd like to see it working like the Team/CVS metaphor:

- A global list (configurable) of ignored defaults.
- Some way to ignore individual resources (files, folders, patterns) like .cvsignore in CVS.

I think it is more simple.
(In reply to comment #3)
&gt; I'd like to see it working like the Team/CVS metaphor:
&gt; 
&gt; - A global list (configurable) of ignored defaults.
&gt; - Some way to ignore individual resources (files, folders, patterns) like
&gt; .cvsignore in CVS.
&gt; 
&gt; I think it is more simple.

The major advantage of Team's global list is the common defaults it provides. What kind of defaults you are going to put in Mylar's list? IMHO, if you can't use common globals, there is no point in such globals.


&gt; What kind of defaults you are going to put in Mylar's list? IMHO, if you can't
&gt; use common globals, there is no point in such globals.

Eugene has a good point that there should be a use case driving support for a global preference setting.

There are (at least) two different levels at which to potentially "blacklist" (probably needs a better name...):

1. Excluding particular resources from the task context on your local machine.

2. Excluding particular resources from a task context shared with others (i.e., posted on a bug report) (like a .cvsignore)

Does anyone have any thoughts on whethere 2 is a superset of 1?
(In reply to comment #5)
&gt; There are (at least) two different levels at which to potentially "blacklist"
&gt; (probably needs a better name...):
&gt; 1. Excluding particular resources from the task context on your local machine.
&gt; 2. Excluding particular resources from a task context shared with others (i.e.,
&gt; posted on a bug report) (like a .cvsignore)

BTW, 2 can be resolved by context sharing...
Though it would make sense to have blacklisting across task. To me it is more a project or even workspace atrribute rather then task attribute.
Doing this by allowing resource to be marked with very negative interest won't address Willian's use case because as soon as the resource is selected it's interest will be positive again (any selection offsets negative interest).

I see the simplest version of this as a resource level facility to specify some resources as not participating in the task context.  They will be excluded from everything, including resource monitoring for deltas, etc.  Where this is specified is arguable (Eugene says per-project, Willian per-workspace).  For the first pass I think it should be a single "excludes" table that allows any workspace resource to be selected (from project down).

Then, if there is still a compelling case, we can do the "Enable project specific settings" style preference, which will also allow these settings to be committed (addressing comment#5) since they will show up in .settings.

One thing that I think is critical is that the interest decoration makes the exclusion explicit, because selecting this resource will fail to make it surface in a filtered view, etc.  I can't think of a clear icon decorator for that so perhaps a very light gray and strikeghrough font (Windows XP only) will do the job.  The exclusion selection should be on the same page as the interest decorator preview (bug 107091) so whatever decoration is chosen it should be clear.


(In reply to comment #7)
&gt; Doing this by allowing resource to be marked with very negative interest won't
&gt; address Willian's use case because as soon as the resource is selected it's
&gt; interest will be positive again (any selection offsets negative interest).

Why can't you use special veeeeeeery negative interest level? :-) In such case it should not allow interest to be increased... It could be also implemented using special marker. Then if you'd see commonality between several contexts, then marker could be promoted from context to workspace level (sort of global virtual parent context).

It is really pain in the ass to maintain any tables. Also note, since it won't be context specific if has to be done on every workspace (e.g. when context is shared).
Visually a strikethrough font that Mik suggested might be too heavy - like a resource is about to be deleted. Maybe light gray. Maybe decorate the end of the name with a [no mylar] text. Probably isn't room for a Mylar icon with an X through it.
Agreed that the strikethrough is probably a bit much, and anwyway it's Windows only.  Will experiment with the other suggestions.

Eugene: the reason 'very negative' doesn't work is that no matter how negative the interest of something, as soon as any resources is selected it becomes positive, since the user has indicated interest in that thing.  The context model currently has no special rules about things that are very negative or positive which helps make it predictable.  So it seems right to have the special rule be at the resource level, i.e. indicating that this is not a normal resource and hence that selecting it does not express the usual intention.

But the notion of the 'workspace context' does have an interesting overlap here, so when we start experimenting with that (after 0.6) it could be reconsidered. 

It won't have to be done in every workspace if we allow the project-specific setting to be shared via the project's .settings folder.




(In reply to comment #10)
&gt; Eugene: the reason 'very negative' doesn't work is that no matter how negative
&gt; the interest of something, as soon as any resources is selected it becomes
&gt; positive, since the user has indicated interest in that thing.  The context
&gt; model currently has no special rules about things that are very negative or
&gt; positive which helps make it predictable.  So it seems right to have the
&gt; special rule be at the resource level, i.e. indicating that this is not a
&gt; normal resource and hence that selecting it does not express the usual
&gt; intention.

Why can't you add special rule against the interest level itself? That would be more generic, because it would indicate that there is an interest anomaly attached to that resource, so it should not be increased on selection. Sort of special scalling factor that does not allow interest to be increased (multiply to 0 in other words).

Actually I don't really care about selection, but more about automatic interest gain on refresh. When eclipse discover new resource, that could of been added externally (logs, build artifacts, etc).
First, I don't think that such a rule address the problem if it's at the task context level.  Every task you activated you would need to have the rule added to it for Willian's "giant-log-file" or your output folder case.  As I indicated such a 'rule' might make sense if we had a single workspace context, but we're not there yet.

Second, the context model does not know about resources, only structured elements, so any such rule needs to be at the resource/ide bridge level.  That's not to say that the interaction can't be as simple as "Mark less interesting", e.g. a popup menu with "Exclude from context".  
(In reply to comment #12)
&gt; First, I don't think that such a rule address the problem if it's at the task
&gt; context level.  Every task you activated you would need to have the rule added
&gt; to it for Willian's "giant-log-file" or your output folder case.  

True. But it still going to be big help for relatively long running tasks. Context copy/paste would also help.

&gt; As I indicated such a 'rule' might make sense if we had a 
&gt; single workspace context, but we're not there yet.
&gt; 
&gt; Second, the context model does not know about resources, only structured
&gt; elements, so any such rule needs to be at the resource/ide bridge level. 
&gt; That's not to say that the interaction can't be as simple as "Mark less
&gt; interesting", e.g. a popup menu with "Exclude from context".  

That is what I had in mind. It could sit in Navigate menu, since it perhaps don't have to be used very often.
Copy/paste (bug 126237) is really easy and will come as soon as we have diff support (bug 138544), which context attachments need too 

What's the Navigate menu?  Oh yeah, you must mean that toolbar thing on top of the window that I never use ;)  Kidding aside, that's not a bad suggestion since we don't want to bloat the resource/java popup menu too much.  But this could also be another reason to have a Mylar submenu with something like:

Mylar &gt;
  * Mark as Landmark
  * Mark Less Interesting
  * Exclude Resource from Context
  --------------------------------
  * Context Model Preferences...

Although I'm not thrilled at making those top two actions 2 clicks instead of one.
(In reply to comment #14)
&gt; What's the Navigate menu?  Oh yeah, you must mean that toolbar thing on top of
&gt; the window that I never use ;)  

That is the one. It doesn't mea that you couldn't have decent keyboard shortcut for those actions. :-)

&gt; Kidding aside, that's not a bad suggestion
&gt; since we don't want to bloat the resource/java popup menu too much.  But this
&gt; could also be another reason to have a Mylar submenu with something like:
&gt; 
&gt; Mylar &gt;
&gt;   * Mark as Landmark
&gt;   * Mark Less Interesting
&gt;   * Exclude Resource from Context
&gt;   --------------------------------
&gt;   * Context Model Preferences...
&gt; 
&gt; Although I'm not thrilled at making those top two actions 2 clicks instead of
&gt; one.

-1 for submenu.

I found myself hardly using "Mark as Landmark" option. Not sure if there is something wrong with it, just matter of habbit or because it can't be used on files in the Package Explorer. Last limitation is weird, because you can drag files to active search view to create class landmarks.
There is now a Resources preference page, and patterns can be added to prevent resources being automatically added to the context.  The default pattern is ".*", so folders like .settings and .refactorings won't get added (they still get a predicted interest so they show up in the change set.  See the New &amp; Noteworthy for details.

This stops one step short of preventing a selected resource of being added to the context, because that makes for a more complex UI and we have a quick way of removing a resource that was unintentionally added (Ctrl+F4).  But after trying it out please comment if this doesn't address your use cases.
Created attachment 44223
mylar/context/zip
Forgot to mark Fixed.</WithStack>
    <WithOutStack>Forked from bug#118151:

"I think the "blacklist" (or whatever it may be called...) is a good idea to be
considered in the future.

It is like .cvsignore file in CVS: a list where you put anything you know won't
(or don't want) be interesting to mylar.

Talking about the "giant-log-file" use-case: I made a Eclipse plugin that
provides sintax coloring for my log file, so it makes more easy to analyze it
inside Eclipse than notepad ;-). But I know that I will ** never ** want it to
be included in task context, because I don't want it to be restored. So my
alternatives today are:

1 - Always remember to close the file(s) before exit the workbench, or switch
task context, so it will not be restored in next activation (sometimes this
does not work; on reactivation, mylar thinks it is interesting, and keeps
reopening...).

2 - Always remember to deactivate task context before opening the log file, and
reactivate after closing."
Sounds like a good idea, and there does indeed seem to be a class of resources that are always of a transient interest--i.e. you want to refer to them periodically, but never want them to be a part of your context.  In addition to log files I can imagine large ZIPs, output files from things like code generators that aren't marked "derived", etc.  I added Eugene to the CC since he asked for something similar. 

There's a question of whether this is purely a UI thing (e.g. will never show in filtered mode, never be restored), or whether the exclusion should work at the monitoring level (i.e. interaction with those resources won't be captured).  Let's figure out the UI first, here are some thoughts:

* Make it work for both files and directories, e.g. if a project has something like a "temp-src" folder everything under it could be ignored.

* Make it parallel or at least similar to the current "Preferences -&gt; Mylar -&gt; Interest Filter" inclusion pattern settings.

* Figure out whether it should be allows resources to be selected from the workspace, in addition to allowing patterns (e.g. *.foogen).  Perhaps something like "Preferences -&gt; Team -&gt; Ignored Resources" but with Add Resource in addition to Add Pattern?

I somehow don't like the idea of maintaining global list of exclusions. It seems that per-project list would be more appropriate. I have huge project that is abusing build folder for all kind of temporary things when running junit tests and ant targets, so I don't want to see anything from that build folder when I refresh. From other hand other projects, especially Maven-managed could have generated source folders under build or target folder that are registered as source folders for Eclipse compiler and those should be in the context.

An alternative option could be somehow introduce a negative interest level on some resources, so they will never gain interest on refresh. The only trouble with that is how to do this in UI and then how to restore back those resources. Perhaps context preview could help with that.
I'd like to see it working like the Team/CVS metaphor:

- A global list (configurable) of ignored defaults.
- Some way to ignore individual resources (files, folders, patterns) like .cvsignore in CVS.

I think it is more simple.
(In reply to comment #3)
&gt; I'd like to see it working like the Team/CVS metaphor:
&gt; 
&gt; - A global list (configurable) of ignored defaults.
&gt; - Some way to ignore individual resources (files, folders, patterns) like
&gt; .cvsignore in CVS.
&gt; 
&gt; I think it is more simple.

The major advantage of Team's global list is the common defaults it provides. What kind of defaults you are going to put in Mylar's list? IMHO, if you can't use common globals, there is no point in such globals.


&gt; What kind of defaults you are going to put in Mylar's list? IMHO, if you can't
&gt; use common globals, there is no point in such globals.

Eugene has a good point that there should be a use case driving support for a global preference setting.

There are (at least) two different levels at which to potentially "blacklist" (probably needs a better name...):

1. Excluding particular resources from the task context on your local machine.

2. Excluding particular resources from a task context shared with others (i.e., posted on a bug report) (like a .cvsignore)

Does anyone have any thoughts on whethere 2 is a superset of 1?
(In reply to comment #5)
&gt; There are (at least) two different levels at which to potentially "blacklist"
&gt; (probably needs a better name...):
&gt; 1. Excluding particular resources from the task context on your local machine.
&gt; 2. Excluding particular resources from a task context shared with others (i.e.,
&gt; posted on a bug report) (like a .cvsignore)

BTW, 2 can be resolved by context sharing...
Though it would make sense to have blacklisting across task. To me it is more a project or even workspace atrribute rather then task attribute.
Doing this by allowing resource to be marked with very negative interest won't address Willian's use case because as soon as the resource is selected it's interest will be positive again (any selection offsets negative interest).

I see the simplest version of this as a resource level facility to specify some resources as not participating in the task context.  They will be excluded from everything, including resource monitoring for deltas, etc.  Where this is specified is arguable (Eugene says per-project, Willian per-workspace).  For the first pass I think it should be a single "excludes" table that allows any workspace resource to be selected (from project down).

Then, if there is still a compelling case, we can do the "Enable project specific settings" style preference, which will also allow these settings to be committed (addressing comment#5) since they will show up in .settings.

One thing that I think is critical is that the interest decoration makes the exclusion explicit, because selecting this resource will fail to make it surface in a filtered view, etc.  I can't think of a clear icon decorator for that so perhaps a very light gray and strikeghrough font (Windows XP only) will do the job.  The exclusion selection should be on the same page as the interest decorator preview (bug 107091) so whatever decoration is chosen it should be clear.


(In reply to comment #7)
&gt; Doing this by allowing resource to be marked with very negative interest won't
&gt; address Willian's use case because as soon as the resource is selected it's
&gt; interest will be positive again (any selection offsets negative interest).

Why can't you use special veeeeeeery negative interest level? :-) In such case it should not allow interest to be increased... It could be also implemented using special marker. Then if you'd see commonality between several contexts, then marker could be promoted from context to workspace level (sort of global virtual parent context).

It is really pain in the ass to maintain any tables. Also note, since it won't be context specific if has to be done on every workspace (e.g. when context is shared).
Visually a strikethrough font that Mik suggested might be too heavy - like a resource is about to be deleted. Maybe light gray. Maybe decorate the end of the name with a [no mylar] text. Probably isn't room for a Mylar icon with an X through it.
Agreed that the strikethrough is probably a bit much, and anwyway it's Windows only.  Will experiment with the other suggestions.

Eugene: the reason 'very negative' doesn't work is that no matter how negative the interest of something, as soon as any resources is selected it becomes positive, since the user has indicated interest in that thing.  The context model currently has no special rules about things that are very negative or positive which helps make it predictable.  So it seems right to have the special rule be at the resource level, i.e. indicating that this is not a normal resource and hence that selecting it does not express the usual intention.

But the notion of the 'workspace context' does have an interesting overlap here, so when we start experimenting with that (after 0.6) it could be reconsidered. 

It won't have to be done in every workspace if we allow the project-specific setting to be shared via the project's .settings folder.




(In reply to comment #10)
&gt; Eugene: the reason 'very negative' doesn't work is that no matter how negative
&gt; the interest of something, as soon as any resources is selected it becomes
&gt; positive, since the user has indicated interest in that thing.  The context
&gt; model currently has no special rules about things that are very negative or
&gt; positive which helps make it predictable.  So it seems right to have the
&gt; special rule be at the resource level, i.e. indicating that this is not a
&gt; normal resource and hence that selecting it does not express the usual
&gt; intention.

Why can't you add special rule against the interest level itself? That would be more generic, because it would indicate that there is an interest anomaly attached to that resource, so it should not be increased on selection. Sort of special scalling factor that does not allow interest to be increased (multiply to 0 in other words).

Actually I don't really care about selection, but more about automatic interest gain on refresh. When eclipse discover new resource, that could of been added externally (logs, build artifacts, etc).
First, I don't think that such a rule address the problem if it's at the task context level.  Every task you activated you would need to have the rule added to it for Willian's "giant-log-file" or your output folder case.  As I indicated such a 'rule' might make sense if we had a single workspace context, but we're not there yet.

Second, the context model does not know about resources, only structured elements, so any such rule needs to be at the resource/ide bridge level.  That's not to say that the interaction can't be as simple as "Mark less interesting", e.g. a popup menu with "Exclude from context".  
(In reply to comment #12)
&gt; First, I don't think that such a rule address the problem if it's at the task
&gt; context level.  Every task you activated you would need to have the rule added
&gt; to it for Willian's "giant-log-file" or your output folder case.  

True. But it still going to be big help for relatively long running tasks. Context copy/paste would also help.

&gt; As I indicated such a 'rule' might make sense if we had a 
&gt; single workspace context, but we're not there yet.
&gt; 
&gt; Second, the context model does not know about resources, only structured
&gt; elements, so any such rule needs to be at the resource/ide bridge level. 
&gt; That's not to say that the interaction can't be as simple as "Mark less
&gt; interesting", e.g. a popup menu with "Exclude from context".  

That is what I had in mind. It could sit in Navigate menu, since it perhaps don't have to be used very often.
Copy/paste (bug 126237) is really easy and will come as soon as we have diff support (bug 138544), which context attachments need too 

What's the Navigate menu?  Oh yeah, you must mean that toolbar thing on top of the window that I never use ;)  Kidding aside, that's not a bad suggestion since we don't want to bloat the resource/java popup menu too much.  But this could also be another reason to have a Mylar submenu with something like:

Mylar &gt;
  * Mark as Landmark
  * Mark Less Interesting
  * Exclude Resource from Context
  --------------------------------
  * Context Model Preferences...

Although I'm not thrilled at making those top two actions 2 clicks instead of one.
(In reply to comment #14)
&gt; What's the Navigate menu?  Oh yeah, you must mean that toolbar thing on top of
&gt; the window that I never use ;)  

That is the one. It doesn't mea that you couldn't have decent keyboard shortcut for those actions. :-)

&gt; Kidding aside, that's not a bad suggestion
&gt; since we don't want to bloat the resource/java popup menu too much.  But this
&gt; could also be another reason to have a Mylar submenu with something like:
&gt; 
&gt; Mylar &gt;
&gt;   * Mark as Landmark
&gt;   * Mark Less Interesting
&gt;   * Exclude Resource from Context
&gt;   --------------------------------
&gt;   * Context Model Preferences...
&gt; 
&gt; Although I'm not thrilled at making those top two actions 2 clicks instead of
&gt; one.

-1 for submenu.

I found myself hardly using "Mark as Landmark" option. Not sure if there is something wrong with it, just matter of habbit or because it can't be used on files in the Package Explorer. Last limitation is weird, because you can drag files to active search view to create class landmarks.
There is now a Resources preference page, and patterns can be added to prevent resources being automatically added to the context.  The default pattern is ".*", so folders like .settings and .refactorings won't get added (they still get a predicted interest so they show up in the change set.  See the New &amp; Noteworthy for details.

This stops one step short of preventing a selected resource of being added to the context, because that makes for a more complex UI and we have a quick way of removing a resource that was unintentionally added (Ctrl+F4).  But after trying it out please comment if this doesn't address your use cases.
Created attachment 44223
mylar/context/zip
Forgot to mark Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125423" />
    <CreationDate amount="2006-01-26 19:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Bugzilla" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>refactor OfflineView and fix repository unaware offline reports</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We are no longer using the OfflineView class, but methods like OfflineView.find(int) are still being used, and will no longer be correct.  We should get rid of this class, and improve the report caching facility.
Done.</WithStack>
    <WithOutStack>We are no longer using the OfflineView class, but methods like OfflineView.find(int) are still being used, and will no longer be correct.  We should get rid of this class, and improve the report caching facility.
Done.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125424" />
    <CreationDate amount="2006-01-26 19:59:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP ServerTools" />
    <component amount="wst.server" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>WebSphere server ports should be configurable</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>The WebSphere server configuration editor should allow one to change ports such as the SOAP port and the transport.
This bug hasn't been updated in over 4 years and several releases, so I am closing as part of a backlog scrub. If this is still an issue, please reopen against a current WTP release.</WithStack>
    <WithOutStack>The WebSphere server configuration editor should allow one to change ports such as the SOAP port and the transport.
This bug hasn't been updated in over 4 years and several releases, so I am closing as part of a backlog scrub. If this is still an issue, please reopen against a current WTP release.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125425" />
    <CreationDate amount="2006-01-26 20:04:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[modulecore] Better support for jar deploy in web projects</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>A 'Dynamic Web' project allows 'Other projects' to be deployed as jar files under WEB-INF/lib but does not seem to support deploy of projects as jar files in the same place as the html/jsp.  This would be useful for Applet projects, where the jar file needs to be accessible to the html.
I don't anticipate adding this support</WithStack>
    <WithOutStack>A 'Dynamic Web' project allows 'Other projects' to be deployed as jar files under WEB-INF/lib but does not seem to support deploy of projects as jar files in the same place as the html/jsp.  This would be useful for Applet projects, where the jar file needs to be accessible to the html.
I don't anticipate adding this support</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125426" />
    <CreationDate amount="2006-01-26 20:37:00 -0500" />
    <DupId amount="251789" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.2" />
    <rep_platform amount="All" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Help] Nagivate-Open External Javadoc to use Prefs-General-Web Browser settings</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Please look up the setting in Preferencs-&gt;General-Web Browser to decide whether to launch an external browser or use the internal browser when the user selects Navigate-&gt;Open External Javadoc.

At the moment regardless of the choice an external browser is launched.

Many thanks

Jonathan
I'm sorry Platform UI but I have no idea where this should go.  It's not SWT.
This seems to work for me in 3.2 M4. What build are you using?
Can you try if checking the 'Use external browser' on the Help preference page is changing the behaviour?
I am using version 3.1.1.

Window-&gt;Preferences-&gt;Help-&gt;Use external browser checked/unchecked makes no difference.

I'll see if I can get 3.2 installed and let you know what happens.

JM
I just installed eclipse-SDK-3.1.2-linux-gtk.tar.gz version 3.1.2 M20060118-1600 and I have the same problem - Shift-F2 to open external javadoc does not fire up the internal browser even though this is selected in preferences.

Can you suggest anything else for me to try.

Many thanks

JM
we're using help to show the Javadoc. Moving to help
Do you have Mozilla installed? Currently we can only embed Mozilla on GTK, I believe. If we can't find a browser that we can embed we resort to always opening external. I think some distributions like SuSE default to konqueror and don't install mozilla by default.

Try this.. set your prefs to open internal and try Help -&gt; Help Contents and see if it opens in an embedded browser window or a full blown browser app.

I have Mozilla installed as follows

mozilla -- version
Mozilla 1.7.12, Copyright (c) 2003-2004 mozilla.org &lt;developer build&gt;

on gentoo

Prefs-Help-&gt;Use extenal browser unchecked and then Help-&gt;Help Contents fires up another window which I cannot seem to dock in the main eclipse workbench screen. This window seems to be an embedded windows but not embedded in the workbench.
Prefs-Help-&gt;Use external browser fires up Mozilla.

JM
(In reply to comment #7)
The behaviour you described in this comment is the intended behaviour. Help-&gt;Help Contents will always open a separate window. Even if the embedded browser is selected, it will open in a separate shell, so, as you said, you will not be able to dock it. If you want to browser help in a view from your workbench you can use the help view. This is accessible by selecting "Help -&gt; Dynamic Help" and then using the links at the bottom of the view to, for example, view all topics. You could also open the view by selecting "Window -&gt; Show view -&gt; Other... -&gt; Help -&gt; Help".
Closing as the help system is working as designed.
.

*** This bug has been marked as a duplicate of bug 251789 ***</WithStack>
    <WithOutStack>Please look up the setting in Preferencs-&gt;General-Web Browser to decide whether to launch an external browser or use the internal browser when the user selects Navigate-&gt;Open External Javadoc.

At the moment regardless of the choice an external browser is launched.

Many thanks

Jonathan
I'm sorry Platform UI but I have no idea where this should go.  It's not SWT.
This seems to work for me in 3.2 M4. What build are you using?
Can you try if checking the 'Use external browser' on the Help preference page is changing the behaviour?
I am using version 3.1.1.

Window-&gt;Preferences-&gt;Help-&gt;Use external browser checked/unchecked makes no difference.

I'll see if I can get 3.2 installed and let you know what happens.

JM
I just installed eclipse-SDK-3.1.2-linux-gtk.tar.gz version 3.1.2 M20060118-1600 and I have the same problem - Shift-F2 to open external javadoc does not fire up the internal browser even though this is selected in preferences.

Can you suggest anything else for me to try.

Many thanks

JM
we're using help to show the Javadoc. Moving to help
Do you have Mozilla installed? Currently we can only embed Mozilla on GTK, I believe. If we can't find a browser that we can embed we resort to always opening external. I think some distributions like SuSE default to konqueror and don't install mozilla by default.

Try this.. set your prefs to open internal and try Help -&gt; Help Contents and see if it opens in an embedded browser window or a full blown browser app.

I have Mozilla installed as follows

mozilla -- version
Mozilla 1.7.12, Copyright (c) 2003-2004 mozilla.org &lt;developer build&gt;

on gentoo

Prefs-Help-&gt;Use extenal browser unchecked and then Help-&gt;Help Contents fires up another window which I cannot seem to dock in the main eclipse workbench screen. This window seems to be an embedded windows but not embedded in the workbench.
Prefs-Help-&gt;Use external browser fires up Mozilla.

JM
(In reply to comment #7)
The behaviour you described in this comment is the intended behaviour. Help-&gt;Help Contents will always open a separate window. Even if the embedded browser is selected, it will open in a separate shell, so, as you said, you will not be able to dock it. If you want to browser help in a view from your workbench you can use the help view. This is accessible by selecting "Help -&gt; Dynamic Help" and then using the links at the bottom of the view to, for example, view all topics. You could also open the view by selecting "Window -&gt; Show view -&gt; Other... -&gt; Help -&gt; Help".
Closing as the help system is working as designed.
.

*** This bug has been marked as a duplicate of bug 251789 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125427" />
    <CreationDate amount="2006-01-26 20:56:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP ServerTools" />
    <component amount="jst.server" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>run a jsp will failed on tomcat.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1.when user create a tomcatserver ,a tomcat temp runtime dirctories will be created in runtime-EclipseApplication\.metadata\.plugins\org.eclipse.wst.server.core\tmp0 directory.(include conf, logs,temp, webapps,work,just like tomcat home directory)</Line>
          <Line>2. when user add a project to tomcat in server view. then the selected web project to be copied to &lt;temp_tomcat_home&gt;/webapps.</Line>
          <Line>3. when you start tomcat , tomcat will detect there is a webapp in the webapps directory, then install it.</Line>
          <Line>(note: tomcat find a new web applicion and install it is not ASAP)</Line>
          <Line>4. after that , you can visit the webapp successfully.</Line>
          <Line>One user case :</Line>
          <Line>if tomcat is started , and then user click &lt;run on server&gt; , the project will be copied to webapp diectory first,</Line>
          <Line>after it, a internal browser will try to load the page, then it will failed . The reason is that there is delay time between tomcat detect the webapp  and client browser load the page.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>1.when user create a tomcatserver ,a tomcat temp runtime dirctories will be created in runtime-EclipseApplication\.metadata\.plugins\org.eclipse.wst.server.core\tmp0 directory.(include conf, logs,temp, webapps,work,just like tomcat home directory)
2. when user add a project to tomcat in server view. then the selected web project to be copied to &lt;temp_tomcat_home&gt;/webapps.
3. when you start tomcat , tomcat will detect there is a webapp in the webapps directory, then install it.
(note: tomcat find a new web applicion and install it is not ASAP)
4. after that , you can visit the webapp successfully.
One user case :
if tomcat is started , and then user click &lt;run on server&gt; , the project will be copied to webapp diectory first,
after it, a internal browser will try to load the page, then it will failed . The reason is that there is delay time between tomcat detect the webapp  and client browser load the page.

So user will met can't not run a simple jsp file problem.


when tomcat detect and install a webapp , a message will be printed to console:
Information: Installing web application at context path /bbb from URL file:C:\Documents and Settings\Administrator\runtime-EclipseApplication\.metadata\.plugins\org.eclipse.wst.server.core\tmp1\webapps\bbb

only after user get the msg , he can visit the webapp successfully.
Not sure if there is anything we can do here; we might want to restart Tomcat if the user adds a module while the server is running, or maybe there is something we can do with the module state to get it to delay loading.
This is being address by work for Bug 145834. The location where modules are deployed now defaults to "wtpwebapps" instead of "webapps" for new servers. This setting can be modified in the server editor.  By publishing modules to a directory other than "webapps", there won't be an attempt to auto-deploy modules that have been added to the server. A server restart will be needed to pickup the new modules.  I think this incovenience is better than the hit or miss results of auto-deployment.  There are other benefits with this approach as well.

If this is an issue for an existing server, changing the server's deploy path in the server editor will be necessary.  There is a link in the server editor that can be clicked to set the new default deploy path.  Note that the server must be published (i.e. synchronized) with no modules present before this setting can be changed.

Since this is the extent to which this issue will be addressed, I'm marking it FIXED.
Verifying that a settable deployment directory is available as described in comment #2.  For Tomcat servers with default settings, a restart will be needed to pick up added projects.

Since Run on Server used with an already running Tomcat server displays an error page in the browser, an enhancement request could be made to have this behavior improved.  I don't know at the moment if a prompt dialog could ask if the server should be restarted now.  This would certainly be post WTP 2.0 work.

Note that the new "Publish module contexts to separate XML files" (the current option name) can make it possible to add a module correctly on a running Tomcat server for servers that support it.  Previously, such modules could be served incorrectly because the context in the server.xml wasn't used. For example, the context configuration in a context.xml in the project would not be applied.  There is still a delay, so the browser displays an error page initially.  However, after waiting a brief time, you can refresh the browser and see the page without actually restarting the server.  Removal of a project may not be successful as the publish will delete the "work" directory for the module before Tomcat has had a chance to shutdown the webapp.
Closing.</WithStack>
    <WithOutStack>1.when user create a tomcatserver ,a tomcat temp runtime dirctories will be created in runtime-EclipseApplication\.metadata\.plugins\org.eclipse.wst.server.core\tmp0 directory.(include conf, logs,temp, webapps,work,just like tomcat home directory)
2. when user add a project to tomcat in server view. then the selected web project to be copied to &lt;temp_tomcat_home&gt;/webapps.
3. when you start tomcat , tomcat will detect there is a webapp in the webapps directory, then install it.
(note: tomcat find a new web applicion and install it is not ASAP)
4. after that , you can visit the webapp successfully.
One user case :
if tomcat is started , and then user click &lt;run on server&gt; , the project will be copied to webapp diectory first,
after it, a internal browser will try to load the page, then it will failed . The reason is that there is delay time between tomcat detect the webapp  and client browser load the page.

So user will met can't not run a simple jsp file problem.


when tomcat detect and install a webapp , a message will be printed to console:
Information: Installing web application at context path /bbb from URL file:C:\Documents and Settings\Administrator\runtime-EclipseApplication\.metadata\.plugins\org.eclipse.wst.server.core\tmp1\webapps\bbb

only after user get the msg , he can visit the webapp successfully.
Not sure if there is anything we can do here; we might want to restart Tomcat if the user adds a module while the server is running, or maybe there is something we can do with the module state to get it to delay loading.
This is being address by work for Bug 145834. The location where modules are deployed now defaults to "wtpwebapps" instead of "webapps" for new servers. This setting can be modified in the server editor.  By publishing modules to a directory other than "webapps", there won't be an attempt to auto-deploy modules that have been added to the server. A server restart will be needed to pickup the new modules.  I think this incovenience is better than the hit or miss results of auto-deployment.  There are other benefits with this approach as well.

If this is an issue for an existing server, changing the server's deploy path in the server editor will be necessary.  There is a link in the server editor that can be clicked to set the new default deploy path.  Note that the server must be published (i.e. synchronized) with no modules present before this setting can be changed.

Since this is the extent to which this issue will be addressed, I'm marking it FIXED.
Verifying that a settable deployment directory is available as described in comment #2.  For Tomcat servers with default settings, a restart will be needed to pick up added projects.

Since Run on Server used with an already running Tomcat server displays an error page in the browser, an enhancement request could be made to have this behavior improved.  I don't know at the moment if a prompt dialog could ask if the server should be restarted now.  This would certainly be post WTP 2.0 work.

Note that the new "Publish module contexts to separate XML files" (the current option name) can make it possible to add a module correctly on a running Tomcat server for servers that support it.  Previously, such modules could be served incorrectly because the context in the server.xml wasn't used. For example, the context configuration in a context.xml in the project would not be applied.  There is still a delay, so the browser displays an error page initially.  However, after waiting a brief time, you can refresh the browser and see the page without actually restarting the server.  Removal of a project may not be successful as the publish will delete the "work" directory for the module before Tomcat has had a chance to shutdown the webapp.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125428" />
    <CreationDate amount="2006-01-26 20:59:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Releng" />
    <component amount="releng" />
    <Version amount="1.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Move to 3.1.2 based prereqs for 1.0.1 builds</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>As a matter of "good hygene" and packaging, we'll move to use 3.1.2 based pre-reqs in our builds. This bug will be used to track those changes.
1/26/2005 9 AM eastern, will release change to dependencies.properties 
which spells out 3.1.2 Eclipse base, and 3.1.2 Test Framework. No changes are expected to impact WTP, but they have fixed approx. 70 bugs from 3.1.1,  and 3.1.2 will be our primarily supported pre-req for 1.0.1, so ... will update. 
Also, I noticed a section of dependancies.properties which listed "wtpBuilder .7" as a pre-req .. this is no longer used, and the wtpBuilder used is specified in different mechansism, so, will delete that section, to avoid confusion. 

I believe both JEM and GEF will not change for 3.1.2 based builds (no bugs fixed, version numbers unchanged). But, I believe EMF is planning some fixes which we will pick up next week. 

Below I'll try pasting URL query for bugs fixed in Eclipse base for 3.1.2, for convenience. 
https://bugs.eclipse.org/bugs/buglist.cgi?query_format=advanced&amp;short_desc_type=allwordssubstr&amp;short_desc=&amp;classification=Eclipse&amp;target_milestone=3.1.2&amp;long_desc_type=allwordssubstr&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;status_whiteboard_type=allwordssubstr&amp;status_whiteboard=&amp;keywords_type=allwords&amp;keywords=&amp;resolution=FIXED&amp;emailtype1=substring&amp;email1=&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=&amp;chfieldto=Now&amp;chfieldvalue=&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=&amp;query_based_on=&amp;order=bugs.bug_severity,bugs.bug_status%2Cbugs.target_milestone%2Cbugs.priority%2Cbugs.bug_id&amp;query_based_on=

EMF declared 3.1.2 based build on Thursday, 1/25, so, I've changed the 1.0.1 dependancies file to use following for EMF

downloads/drops/2.1.2/R200601191349
emf-sdo-xsd-SDK-2.1.2.zip

I've confirmd GEF and JEM will have no change, will keep same location and name. 
So, that's all the action needed here. 
This is part of a mass update to close out all stale WTP defects already verified by the reporter but awaiting closure by the assignee.  If you feel this defect was closed inappropriately, please reopen.

Thanks, John Lanuti</WithStack>
    <WithOutStack>As a matter of "good hygene" and packaging, we'll move to use 3.1.2 based pre-reqs in our builds. This bug will be used to track those changes.
1/26/2005 9 AM eastern, will release change to dependencies.properties 
which spells out 3.1.2 Eclipse base, and 3.1.2 Test Framework. No changes are expected to impact WTP, but they have fixed approx. 70 bugs from 3.1.1,  and 3.1.2 will be our primarily supported pre-req for 1.0.1, so ... will update. 
Also, I noticed a section of dependancies.properties which listed "wtpBuilder .7" as a pre-req .. this is no longer used, and the wtpBuilder used is specified in different mechansism, so, will delete that section, to avoid confusion. 

I believe both JEM and GEF will not change for 3.1.2 based builds (no bugs fixed, version numbers unchanged). But, I believe EMF is planning some fixes which we will pick up next week. 

Below I'll try pasting URL query for bugs fixed in Eclipse base for 3.1.2, for convenience. 
https://bugs.eclipse.org/bugs/buglist.cgi?query_format=advanced&amp;short_desc_type=allwordssubstr&amp;short_desc=&amp;classification=Eclipse&amp;target_milestone=3.1.2&amp;long_desc_type=allwordssubstr&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;status_whiteboard_type=allwordssubstr&amp;status_whiteboard=&amp;keywords_type=allwords&amp;keywords=&amp;resolution=FIXED&amp;emailtype1=substring&amp;email1=&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=&amp;chfieldto=Now&amp;chfieldvalue=&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=&amp;query_based_on=&amp;order=bugs.bug_severity,bugs.bug_status%2Cbugs.target_milestone%2Cbugs.priority%2Cbugs.bug_id&amp;query_based_on=

EMF declared 3.1.2 based build on Thursday, 1/25, so, I've changed the 1.0.1 dependancies file to use following for EMF

downloads/drops/2.1.2/R200601191349
emf-sdo-xsd-SDK-2.1.2.zip

I've confirmd GEF and JEM will have no change, will keep same location and name. 
So, that's all the action needed here. 
This is part of a mass update to close out all stale WTP defects already verified by the reporter but awaiting closure by the assignee.  If you feel this defect was closed inappropriately, please reopen.

Thanks, John Lanuti</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125429" />
    <CreationDate amount="2006-01-26 21:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New basic target should have default values</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>in i0125

when you make a new Basic target profile as many values as possible should be filled in from the current operating environemnt.  I shied away from using the "new from current" because i didn't want all  the plugins etc that are in the current target but then ended up with a completely empty target that I had to fill in myself.  95% of the time, for example, the environment settings are going to the be the ones currently at play.

Slightly separate question.  Does anything bad happen if I leave some of the environment values empty?  I wonder if this impacts the resolver in any way.  For example, if the OS is not set and there is a bundle that has a PlatformFilter set, this may fail unless PDE fills in the OS etc values automatically if not set.

This may be problematic on systems where there is Motif and GTK.
does the descriptive text in the Environment section on the second page address your question?
oh sure, pull the old "read the text that is right there" trick on me.

sigh.</WithStack>
    <WithOutStack>in i0125

when you make a new Basic target profile as many values as possible should be filled in from the current operating environemnt.  I shied away from using the "new from current" because i didn't want all  the plugins etc that are in the current target but then ended up with a completely empty target that I had to fill in myself.  95% of the time, for example, the environment settings are going to the be the ones currently at play.

Slightly separate question.  Does anything bad happen if I leave some of the environment values empty?  I wonder if this impacts the resolver in any way.  For example, if the OS is not set and there is a bundle that has a PlatformFilter set, this may fail unless PDE fills in the OS etc values automatically if not set.

This may be problematic on systems where there is Motif and GTK.
does the descriptive text in the Environment section on the second page address your question?
oh sure, pull the old "read the text that is right there" trick on me.

sigh.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125430" />
    <CreationDate amount="2006-01-26 21:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>What is the difference between a profile name and id</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>in i0125

on the Target Profile Overview page there are two text fields: Profile Name and Profile Id.  Since users don't know realy what these are used for, they don't really know what to fill in there.  If it doesn't matter, why are there two?  If it does matter, how does it matter?
Profile name is the human-readable translatable name that is displayed in the combo selection.

Profile ID is the internal ID of the profile, much like every jdt classpath container has an id, display name etc.
where does the translation of the name come from? 

Is there a uniqueness scope for the ids?

I don't recall ever seeing anything about names and ids for JRE containers in the UI.

In short, this is confusing.
oh, I think I see where the confusion is coming from.

Remember that we allow via a PDE extension point (org.eclipse.pde.core.targetProfiles) a pre-canned profile.  The extension markup takes in an identifier and a translatable name.  

In your case, you don't have an extension of course.  So an ID makes no sense and you were confused by the translatable thing.

So I think in the target editor, we should remove the ID since the only place where it makes sense is in the plugin.xml markup anyway.

Incidentally, and now somewhat unrelated, "Plug-in Dependencies" is the translatable name of the PDE container which you see everywhere in the UI (package explorer, wizards, etc.) while org.eclipse.pde.core.requiredPlugins is the internal id in the .classpath file.
removed the ID from the editor.</WithStack>
    <WithOutStack>in i0125

on the Target Profile Overview page there are two text fields: Profile Name and Profile Id.  Since users don't know realy what these are used for, they don't really know what to fill in there.  If it doesn't matter, why are there two?  If it does matter, how does it matter?
Profile name is the human-readable translatable name that is displayed in the combo selection.

Profile ID is the internal ID of the profile, much like every jdt classpath container has an id, display name etc.
where does the translation of the name come from? 

Is there a uniqueness scope for the ids?

I don't recall ever seeing anything about names and ids for JRE containers in the UI.

In short, this is confusing.
oh, I think I see where the confusion is coming from.

Remember that we allow via a PDE extension point (org.eclipse.pde.core.targetProfiles) a pre-canned profile.  The extension markup takes in an identifier and a translatable name.  

In your case, you don't have an extension of course.  So an ID makes no sense and you were confused by the translatable thing.

So I think in the target editor, we should remove the ID since the only place where it makes sense is in the plugin.xml markup anyway.

Incidentally, and now somewhat unrelated, "Plug-in Dependencies" is the translatable name of the PDE container which you see everywhere in the UI (package explorer, wizards, etc.) while org.eclipse.pde.core.requiredPlugins is the internal id in the .classpath file.
removed the ID from the editor.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125431" />
    <CreationDate amount="2006-01-26 21:28:00 -0500" />
    <DupId amount="" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Engine" />
    <Version amount="2.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Report Engine installation test generates severe error, but seems to work</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="16">
        <Lines>
          <Line>1. Download and install BIRT Report Engine 2_0_0.</Line>
          <Line>2. Create BIRT_HOME system variable.</Line>
          <Line>3. Navigate to the Command Line Example subdirectory.</Line>
          <Line>4. Run the test by using:</Line>
          <Line>genReport -p "sample=Hello" "C:\birt-runtime-2_0_0\Web Viewer Example\test.rptdesign"</Line>
          <Line>test.html is created in the C:\birt-runtime-2_0_0\Web Viewer Example directory, but the command window shows severe error:</Line>
          <Line>SEVERE: Message:The extension point [org.eclipse.birt.report.model.encryptionHelper] is not found. Error code:EXTENSION_POINT_NOT_FOUND</Line>
          <Line>C:\birt-runtime-2_0_0\Command Line Example&gt;</Line>
          <Line>Can this safely be ignored?</Line>
          <Line>yes the error message can be ignored. but model should not output this warning.</Line>
          <Line>*** Bug 125460 has been marked as a duplicate of this bug. ***</Line>
          <Line>Can u please remove this warning? Please check the entry of ExtensionManager.initialize().</Line>
          <Line>Warning message is removed if encryptionHelper extension point is not found on non-elcipse platform.</Line>
          <Line>Verified in build 20060214</Line>
          <Line>Not fixed in BIRT_2_0_Release_20060123_Branch</Line>
          <Line>I checked in build 2.0.1 and found no such issue.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1. Download and install BIRT Report Engine 2_0_0.
2. Create BIRT_HOME system variable.
3. Navigate to the Command Line Example subdirectory.
4. Run the test by using:
genReport -p "sample=Hello" "C:\birt-runtime-2_0_0\Web Viewer Example\test.rptdesign"
test.html is created in the C:\birt-runtime-2_0_0\Web Viewer Example directory, but the command window shows severe error:
SEVERE: Message:The extension point [org.eclipse.birt.report.model.encryptionHelper] is not found. Error code:EXTENSION_POINT_NOT_FOUND
C:\birt-runtime-2_0_0\Command Line Example&gt;
Can this safely be ignored?
yes the error message can be ignored. but model should not output this warning.
*** Bug 125460 has been marked as a duplicate of this bug. ***
Can u please remove this warning? Please check the entry of ExtensionManager.initialize().
Warning message is removed if encryptionHelper extension point is not found on non-elcipse platform.
Verified in build 20060214
Not fixed in BIRT_2_0_Release_20060123_Branch
I checked in build 2.0.1 and found no such issue.</WithStack>
    <WithOutStack>1. Download and install BIRT Report Engine 2_0_0.
2. Create BIRT_HOME system variable.
3. Navigate to the Command Line Example subdirectory.
4. Run the test by using:
genReport -p "sample=Hello" "C:\birt-runtime-2_0_0\Web Viewer Example\test.rptdesign"
test.html is created in the C:\birt-runtime-2_0_0\Web Viewer Example directory, but the command window shows severe error:
SEVERE: Message:The extension point [org.eclipse.birt.report.model.encryptionHelper] is not found. Error code:EXTENSION_POINT_NOT_FOUND
C:\birt-runtime-2_0_0\Command Line Example&gt;
Can this safely be ignored?
yes the error message can be ignored. but model should not output this warning.
*** Bug 125460 has been marked as a duplicate of this bug. ***
Can u please remove this warning? Please check the entry of ExtensionManager.initialize().
Warning message is removed if encryptionHelper extension point is not found on non-elcipse platform.
Verified in build 20060214
Not fixed in BIRT_2_0_Release_20060123_Branch
I checked in build 2.0.1 and found no such issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125432" />
    <CreationDate amount="2006-01-26 21:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>malformed plugin causes its silent deletion</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>My product had a plugin, the owners of which sought to have packaged
as a single JAR. They made appropriate changes to its
build.properties

&gt; jars.compile.order = .
&gt; bin.includes = META-INF/,\
&gt;                icons/,\
&gt;                lib/,\
&gt;                plugin.properties,\
&gt;                plugin.xml,\
&gt;                .
&gt; src.includes = eistools/,\
&gt;                schema/,\
&gt;                templates/
&gt; source.. = eistools/
&gt; output.. = bin/

but failed to remove

&gt; Bundle-ClassPath: eistools.jar,
&gt;  lib/wpai.mediators.command.jar

from their MANIFEST.MF. As a result, during the build,

0 the plugin gets checked out (along with the rest)

1 PDEB generates the plugin's build.xml with "." in place of "@dot"

2 the plugin is subsequently deleted (presumably by the malformed
  target=clean)

3 the build continues until failing with log error like 

&gt; Basedir /path/to/pde-build/plugins/name.of.plugin does not exist

The fix in this case, was to revert to a directory-based plugin by 
build.properties ~= s/./nameOfPlugin.jar. (Presumably removing
property=Bundle-ClassPath from MANIFEST.MF would also work.)

The plugin was in fact malformed, but PDEB's response was just as
certainly wrong: the build should not delete the plugin and then fail
with a misleading error message. Deleting the plugin is the worst
part, since it makes debugging the problem much harder.
Yep that's annoying. We will investigate.
Note that since last week's build PDE UI validates build.properties and should  capture this kind of errors.
https://bugs.eclipse.org/bugs/show_bug.cgi?id=125432#c1
&gt; Note that since last week's build PDE UI validates build.properties
&gt; and should capture this kind of errors.

Hopefully CCB will step up to M5 soonest. One more thing to make a
testcase for: another user created

com.ibm.etools.tui.ui/build.properties
&gt; jars.compile.order = .
&gt; source... = src/
&gt; output... = bin/
&gt; bin.includes = .,\
&gt;                plugin.xml,\
&gt;                META-INF/
&gt; src.includes = src/,\
&gt;                schema/,\
&gt;                plugin.xml,\
&gt;                plugin.properties,\
&gt;                images/,\
&gt;                build.properties,\
&gt;                .template,\
&gt;                .project,\
&gt;                .options,\
&gt;                .classpath

which was also getting prematurely deleted by target=clean in
...pde-build/plugins/com.ibm.etools.tui.ui/build.xml. The fix was
 s/.../../g
Created attachment 35870
proposed patch

source.. will now always get processed as @dot regardless of whether or not the bundle classpath contains '.'. 

Generation of the clean targets also protects against destructive deletes which can be caused by variations on ".." ("a/.." etc).
Patch released in HEAD.</WithStack>
    <WithOutStack>My product had a plugin, the owners of which sought to have packaged
as a single JAR. They made appropriate changes to its
build.properties

&gt; jars.compile.order = .
&gt; bin.includes = META-INF/,\
&gt;                icons/,\
&gt;                lib/,\
&gt;                plugin.properties,\
&gt;                plugin.xml,\
&gt;                .
&gt; src.includes = eistools/,\
&gt;                schema/,\
&gt;                templates/
&gt; source.. = eistools/
&gt; output.. = bin/

but failed to remove

&gt; Bundle-ClassPath: eistools.jar,
&gt;  lib/wpai.mediators.command.jar

from their MANIFEST.MF. As a result, during the build,

0 the plugin gets checked out (along with the rest)

1 PDEB generates the plugin's build.xml with "." in place of "@dot"

2 the plugin is subsequently deleted (presumably by the malformed
  target=clean)

3 the build continues until failing with log error like 

&gt; Basedir /path/to/pde-build/plugins/name.of.plugin does not exist

The fix in this case, was to revert to a directory-based plugin by 
build.properties ~= s/./nameOfPlugin.jar. (Presumably removing
property=Bundle-ClassPath from MANIFEST.MF would also work.)

The plugin was in fact malformed, but PDEB's response was just as
certainly wrong: the build should not delete the plugin and then fail
with a misleading error message. Deleting the plugin is the worst
part, since it makes debugging the problem much harder.
Yep that's annoying. We will investigate.
Note that since last week's build PDE UI validates build.properties and should  capture this kind of errors.
https://bugs.eclipse.org/bugs/show_bug.cgi?id=125432#c1
&gt; Note that since last week's build PDE UI validates build.properties
&gt; and should capture this kind of errors.

Hopefully CCB will step up to M5 soonest. One more thing to make a
testcase for: another user created

com.ibm.etools.tui.ui/build.properties
&gt; jars.compile.order = .
&gt; source... = src/
&gt; output... = bin/
&gt; bin.includes = .,\
&gt;                plugin.xml,\
&gt;                META-INF/
&gt; src.includes = src/,\
&gt;                schema/,\
&gt;                plugin.xml,\
&gt;                plugin.properties,\
&gt;                images/,\
&gt;                build.properties,\
&gt;                .template,\
&gt;                .project,\
&gt;                .options,\
&gt;                .classpath

which was also getting prematurely deleted by target=clean in
...pde-build/plugins/com.ibm.etools.tui.ui/build.xml. The fix was
 s/.../../g
Created attachment 35870
proposed patch

source.. will now always get processed as @dot regardless of whether or not the bundle classpath contains '.'. 

Generation of the clean targets also protects against destructive deletes which can be caused by variations on ".." ("a/.." etc).
Patch released in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125433" />
    <CreationDate amount="2006-01-26 21:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Bugzilla" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows All" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>improve modularity of bugzilla refresh and synchronization</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>All of the stuff in BugzillaRefreshManager should be moved into BugzillaRepositoryClient.  Also, the job and logic in SynchronizeRepositoryAction should be moved as well.
Get rid of BugzillaPlugin.fireOfflineStatusChanged and OfflineView logic.
Created attachment 33956
Progress on bugzilla modularity

**This patch has not been tested. Submitted for comment only.**
Created attachment 34123
Progress on refactoring repository client
Created attachment 34141
Some more work in bugzilla ui
Created attachment 34142
Initial manual tests
Created attachment 34209
A few more tests and additional clean up.
One problem left:
- when a bug is in a category (not a query) outgoing state doesn't work
Completed, still some stuff left on bug 109460</WithStack>
    <WithOutStack>All of the stuff in BugzillaRefreshManager should be moved into BugzillaRepositoryClient.  Also, the job and logic in SynchronizeRepositoryAction should be moved as well.
Get rid of BugzillaPlugin.fireOfflineStatusChanged and OfflineView logic.
Created attachment 33956
Progress on bugzilla modularity

**This patch has not been tested. Submitted for comment only.**
Created attachment 34123
Progress on refactoring repository client
Created attachment 34141
Some more work in bugzilla ui
Created attachment 34142
Initial manual tests
Created attachment 34209
A few more tests and additional clean up.
One problem left:
- when a bug is in a category (not a query) outgoing state doesn't work
Completed, still some stuff left on bug 109460</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125434" />
    <CreationDate amount="2006-01-26 22:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Invalid cycle detection</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>in i0125

I set up an empty target by making a new basic target and typing an a bogus path for the location.  I saved it as empty.target and then loaded the profile using the target platfrom pref page.  Then I checked out a mess of Equinox related projects from CVS and let the build go.  I kept getting a number of "can't build the project because there is a cycle".  Of course, I know there isn't a cycle since these projects build all the time.

After poking around a while the only thing I could see that was wrong was that the OSGi bundle did could not find the javax.xml.parsers packages it imports.  This is strange because they are supplied by the JRE (which was 1.4.2 and so has them).  But then I remembered that that part is defined by the .profile files in the osgi bundle.  So I figured, hey, the target is empty so perhaps PDE is trying to get the profile info from the target (which doesn't have an OSGi bundle) rather than the OSGi bundle project in the workspace.

I changed the target to be the current host runtime but deselected all the plugins.  The errors went away.  for fun I then switched back to the empty profile and even did a clean build but the errors did not come back.

More generally I have noticed with this same set of plugins that if there is a missing prereq in one, the error reported in the others says that there is a cycle.  For example, I initially forgot to check out equinox.prefs.  One of the plugins requireing it reported the missing prereq but then the plugins requiring that plugin said there was a cycle.  Checking out prefs made all those errors go away.
No one has looked at this in 5 years.  Closing as INVALID, please reopen if this is still a problem in a recent build.</WithStack>
    <WithOutStack>in i0125

I set up an empty target by making a new basic target and typing an a bogus path for the location.  I saved it as empty.target and then loaded the profile using the target platfrom pref page.  Then I checked out a mess of Equinox related projects from CVS and let the build go.  I kept getting a number of "can't build the project because there is a cycle".  Of course, I know there isn't a cycle since these projects build all the time.

After poking around a while the only thing I could see that was wrong was that the OSGi bundle did could not find the javax.xml.parsers packages it imports.  This is strange because they are supplied by the JRE (which was 1.4.2 and so has them).  But then I remembered that that part is defined by the .profile files in the osgi bundle.  So I figured, hey, the target is empty so perhaps PDE is trying to get the profile info from the target (which doesn't have an OSGi bundle) rather than the OSGi bundle project in the workspace.

I changed the target to be the current host runtime but deselected all the plugins.  The errors went away.  for fun I then switched back to the empty profile and even did a clean build but the errors did not come back.

More generally I have noticed with this same set of plugins that if there is a missing prereq in one, the error reported in the others says that there is a cycle.  For example, I initially forgot to check out equinox.prefs.  One of the plugins requireing it reported the missing prereq but then the plugins requiring that plugin said there was a cycle.  Checking out prefs made all those errors go away.
No one has looked at this in 5 years.  Closing as INVALID, please reopen if this is still a problem in a recent build.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125435" />
    <CreationDate amount="2006-01-26 22:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>profile vs target</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>There is a bit of confusion (in my mind at least) between the terms target and profile.  The "target profile editor" has a "Target Profile Definition" seciton that talks about "Profile Id"s and "Profile Name"s but then there is a "Target Content" sectoin.  Finally, the editor saves the file as a .target file.

Note also that the OSGi framework has a thing called a .profile file for describing the JRE.

I'm not particularly fussed as to which term is which but there should only be one.  I have a very mild leaning towards "Target" simply because that is what we deal with in the prefs page and what we have always called it.  These files and editors came about as part of the "named target" work etc etc.
We do stay away from the .profile file extension because that extension already has many different meanings/uses.

We will sweep through the tooling and see where we cut down on usage of profiles.

ok, question.

When you create a new .target file, what do we want to refer to this file as?
a new "target configuration"?  (as in "product configuration")
a new "target profile"?
a new "target definition"?

or just a plain "target"?
"target definition" or "target" would get my vote

done.  We use the word 'target' all over the place without it being followed by 'profile'.

The '.target' file that describes a target is referred to as a Target Definition.</WithStack>
    <WithOutStack>There is a bit of confusion (in my mind at least) between the terms target and profile.  The "target profile editor" has a "Target Profile Definition" seciton that talks about "Profile Id"s and "Profile Name"s but then there is a "Target Content" sectoin.  Finally, the editor saves the file as a .target file.

Note also that the OSGi framework has a thing called a .profile file for describing the JRE.

I'm not particularly fussed as to which term is which but there should only be one.  I have a very mild leaning towards "Target" simply because that is what we deal with in the prefs page and what we have always called it.  These files and editors came about as part of the "named target" work etc etc.
We do stay away from the .profile file extension because that extension already has many different meanings/uses.

We will sweep through the tooling and see where we cut down on usage of profiles.

ok, question.

When you create a new .target file, what do we want to refer to this file as?
a new "target configuration"?  (as in "product configuration")
a new "target profile"?
a new "target definition"?

or just a plain "target"?
"target definition" or "target" would get my vote

done.  We use the word 'target' all over the place without it being followed by 'profile'.

The '.target' file that describes a target is referred to as a Target Definition.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125436" />
    <CreationDate amount="2006-01-26 22:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>3.2M4 crashes VNC's X server</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="NOT_ECLIPSE" />
    <WithStack>Running 3.2M4 under xtightvncserver (on a fully-patched Fedora Core 4 box) results in VNC crashing after a few minutes of editing Java code in the Java editor.  This happened to me 4 times today within a period of about 1/2 hour.

Reverting to 3.1 fixed this problem.  I tried launching the VNC server from a command line to see if it was printing any diagnostics on crash, and got the following:

*** glibc detected *** Xvnc: double free or corruption (out): 0x099f4410 ***
======= Backtrace: =========
/lib/libc.so.6[0x82a124]
/lib/libc.so.6(__libc_free+0x77)[0x82a65f]
Xvnc(FreeResource+0xf5)[0x8061901]
Xvnc(ProcFreeGC+0x66)[0x8073502]
Xvnc(Dispatch+0x11a)[0x807717d]
Xvnc(main+0x3f2)[0x80609db]
/lib/libc.so.6(__libc_start_main+0xdf)[0x7dbd5f]
Xvnc[0x80602e1]
======= Memory map: ========
00111000-0011a000 r-xp 00000000 fd:00 14712956   /lib/libgcc_s-4.0.2-20051126.so.1
0011a000-0011b000 rw-p 00009000 fd:00 14712956   /lib/libgcc_s-4.0.2-20051126.so.1
00532000-00536000 r-xp 00000000 fd:00 14712881   /lib/libnss_dns-2.3.5.so
00536000-00537000 r--p 00003000 fd:00 14712881   /lib/libnss_dns-2.3.5.so
00537000-00538000 rw-p 00004000 fd:00 14712881   /lib/libnss_dns-2.3.5.so
00720000-00725000 r-xp 00000000 fd:00 14712960   /lib/libcrypt-2.3.5.so
00725000-00726000 r--p 00004000 fd:00 14712960   /lib/libcrypt-2.3.5.so
00726000-00727000 rw-p 00005000 fd:00 14712960   /lib/libcrypt-2.3.5.so
00727000-0074e000 rw-p 00727000 00:00 0
00750000-00762000 r-xp 00000000 fd:00 14712926   /lib/libnsl-2.3.5.so
00762000-00763000 r--p 00011000 fd:00 14712926   /lib/libnsl-2.3.5.so
00763000-00764000 rw-p 00012000 fd:00 14712926   /lib/libnsl-2.3.5.so
00764000-00766000 rw-p 00764000 00:00 0
007a9000-007c3000 r-xp 00000000 fd:00 14712882   /lib/ld-2.3.5.so
007c3000-007c4000 r--p 00019000 fd:00 14712882   /lib/ld-2.3.5.so
007c4000-007c5000 rw-p 0001a000 fd:00 14712882   /lib/ld-2.3.5.so
007c7000-008ea000 r-xp 00000000 fd:00 14712885   /lib/libc-2.3.5.so
008ea000-008ec000 r--p 00123000 fd:00 14712885   /lib/libc-2.3.5.so
008ec000-008ee000 rw-p 00125000 fd:00 14712885   /lib/libc-2.3.5.so
008ee000-008f0000 rw-p 008ee000 00:00 0
008f2000-00915000 r-xp 00000000 fd:00 14712966   /lib/libm-2.3.5.so
00915000-00916000 r--p 00022000 fd:00 14712966   /lib/libm-2.3.5.so
00916000-00917000 rw-p 00023000 fd:00 14712966   /lib/libm-2.3.5.so
00919000-0091b000 r-xp 00000000 fd:00 14712927   /lib/libdl-2.3.5.so
0091b000-0091c000 r--p 00001000 fd:00 14712927   /lib/libdl-2.3.5.so
0091c000-0091d000 rw-p 00002000 fd:00 14712927   /lib/libdl-2.3.5.so
0091f000-00931000 r-xp 00000000 fd:00 22480096   /usr/lib/libz.so.1.2.2.2
00931000-00932000 rw-p 00011000 fd:00 22480096   /usr/lib/libz.so.1.2.2.2
00934000-0093d000 r-xp 00000000 fd:00 14712900   /lib/libnss_files-2.3.5.so
0093d000-0093e000 r--p 00008000 fd:00 14712900   /lib/libnss_files-2.3.5.so
0093e000-0093f000 rw-p 00009000 fd:00 14712900   /lib/libnss_files-2.3.5.so
00941000-00949000 r-xp 00000000 fd:00 14713885   /lib/libnss_nis-2.3.5.so
00949000-0094a000 r--p 00007000 fd:00 14713885   /lib/libnss_nis-2.3.5.so
0094a000-0094b000 rw-p 00008000 fd:00 14713885   /lib/libnss_nis-2.3.5.so
00a0d000-00a0e000 r-xp 00a0d000 00:00 0          [vdso]
00b1c000-00b2b000 r-xp 00000000 fd:00 14712973   /lib/libresolv-2.3.5.so
00b2b000-00b2c000 r--p 0000e000 fd:00 14712973   /lib/libresolv-2.3.5.so
00b2c000-00b2d000 rw-p 0000f000 fd:00 14712973   /lib/libresolv-2.3.5.so
00b2d000-00b2f000 rw-p 00b2d000 00:00 0
00b31000-00b38000 r-xp 00000000 fd:00 22488132   /usr/lib/libwrap.so.0.7.6
00b38000-00b39000 rw-p 00007000 fd:00 22488132   /usr/lib/libwrap.so.0.7.6
00d0e000-00d2c000 r-xp 00000000 fd:00 22482065   /usr/lib/libjpeg.so.62.0.0
00d2c000-00d2d000 rw-p 0001d000 fd:00 22482065   /usr/lib/libjpeg.so.62.0.0
08047000-08190000 r-xp 00000000 fd:00 22496554   /usr/bin/Xvnc
08190000-0819a000 rw-p 00148000 fd:00 22496554   /usr/bin/Xvnc
0819a000-081b8000 rw-p 0819a000 00:00 0
09986000-09b6d000 rw-p 09986000 00:00 0          [heap]
b7500000-b7521000 rw-p b7500000 00:00 0
b7521000-b7600000 ---p b7521000 00:00 0
b7690000-b76f0000 rw-s 00000000 00:08 3244046    /SYSV00000000 (deleted)
b76f0000-b7732000 rw-p b76f0000 00:00 0
b7732000-b7792000 rw-s 00000000 00:08 2981895    /SYSV00000000 (deleted)
b7792000-b77f2000 rw-s 00000000 00:08 2949126    /SYSV00000000 (deleted)
b77f2000-b7852000 rw-s 00000000 00:08 2916357    /SYSV00000000 (deleted)
b7852000-b78b2000 rw-s 0000000

So while I can't absolutely prove that this is SWT's fault, since the stack trace above shows that something was trying to free an already-freed GC, and Eclipse is what I was using at the time, and I could successfully run and use 3.1 the rest of the day after restarting the same VNC server, there seems to be a pretty high likelihood that this is probably the case.
What version of XVNC?  See bug 33680 for why I ask.
Hi Billy, here are the relevant versions:

[djo@peanut ~]$ rpm -q atk pango gtk2 glib freetype tightvnc-server
atk-1.9.1-1
pango-1.8.1-2
gtk2-2.6.10-2.fc4.4
glib-1.2.10-16
freetype-2.1.9-2
tightvnc-server-1.3dev7-1

Also note that this is new behavior with 3.2.  I've been remotely pairing with another developer for over 24 hours now on a single instance of VNC running Eclipse 3.1, with no problems.

Distro is Fedora Core 4.

Please see bug #33680 
  https://bugs.eclipse.org/bugs/show_bug.cgi?id=33680

I think both this one and two others (#125436, #183806, #167973) should be marked as duplicated of that one and closed. It is an issue with vnc's still using the X server's deprecated cfb/mfb layer.
Apparently fixed time ago in realvnc in RH, bug http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=424860
for vnc4server in Debian.
Agreed with comment #3.</WithStack>
    <WithOutStack>Running 3.2M4 under xtightvncserver (on a fully-patched Fedora Core 4 box) results in VNC crashing after a few minutes of editing Java code in the Java editor.  This happened to me 4 times today within a period of about 1/2 hour.

Reverting to 3.1 fixed this problem.  I tried launching the VNC server from a command line to see if it was printing any diagnostics on crash, and got the following:

*** glibc detected *** Xvnc: double free or corruption (out): 0x099f4410 ***
======= Backtrace: =========
/lib/libc.so.6[0x82a124]
/lib/libc.so.6(__libc_free+0x77)[0x82a65f]
Xvnc(FreeResource+0xf5)[0x8061901]
Xvnc(ProcFreeGC+0x66)[0x8073502]
Xvnc(Dispatch+0x11a)[0x807717d]
Xvnc(main+0x3f2)[0x80609db]
/lib/libc.so.6(__libc_start_main+0xdf)[0x7dbd5f]
Xvnc[0x80602e1]
======= Memory map: ========
00111000-0011a000 r-xp 00000000 fd:00 14712956   /lib/libgcc_s-4.0.2-20051126.so.1
0011a000-0011b000 rw-p 00009000 fd:00 14712956   /lib/libgcc_s-4.0.2-20051126.so.1
00532000-00536000 r-xp 00000000 fd:00 14712881   /lib/libnss_dns-2.3.5.so
00536000-00537000 r--p 00003000 fd:00 14712881   /lib/libnss_dns-2.3.5.so
00537000-00538000 rw-p 00004000 fd:00 14712881   /lib/libnss_dns-2.3.5.so
00720000-00725000 r-xp 00000000 fd:00 14712960   /lib/libcrypt-2.3.5.so
00725000-00726000 r--p 00004000 fd:00 14712960   /lib/libcrypt-2.3.5.so
00726000-00727000 rw-p 00005000 fd:00 14712960   /lib/libcrypt-2.3.5.so
00727000-0074e000 rw-p 00727000 00:00 0
00750000-00762000 r-xp 00000000 fd:00 14712926   /lib/libnsl-2.3.5.so
00762000-00763000 r--p 00011000 fd:00 14712926   /lib/libnsl-2.3.5.so
00763000-00764000 rw-p 00012000 fd:00 14712926   /lib/libnsl-2.3.5.so
00764000-00766000 rw-p 00764000 00:00 0
007a9000-007c3000 r-xp 00000000 fd:00 14712882   /lib/ld-2.3.5.so
007c3000-007c4000 r--p 00019000 fd:00 14712882   /lib/ld-2.3.5.so
007c4000-007c5000 rw-p 0001a000 fd:00 14712882   /lib/ld-2.3.5.so
007c7000-008ea000 r-xp 00000000 fd:00 14712885   /lib/libc-2.3.5.so
008ea000-008ec000 r--p 00123000 fd:00 14712885   /lib/libc-2.3.5.so
008ec000-008ee000 rw-p 00125000 fd:00 14712885   /lib/libc-2.3.5.so
008ee000-008f0000 rw-p 008ee000 00:00 0
008f2000-00915000 r-xp 00000000 fd:00 14712966   /lib/libm-2.3.5.so
00915000-00916000 r--p 00022000 fd:00 14712966   /lib/libm-2.3.5.so
00916000-00917000 rw-p 00023000 fd:00 14712966   /lib/libm-2.3.5.so
00919000-0091b000 r-xp 00000000 fd:00 14712927   /lib/libdl-2.3.5.so
0091b000-0091c000 r--p 00001000 fd:00 14712927   /lib/libdl-2.3.5.so
0091c000-0091d000 rw-p 00002000 fd:00 14712927   /lib/libdl-2.3.5.so
0091f000-00931000 r-xp 00000000 fd:00 22480096   /usr/lib/libz.so.1.2.2.2
00931000-00932000 rw-p 00011000 fd:00 22480096   /usr/lib/libz.so.1.2.2.2
00934000-0093d000 r-xp 00000000 fd:00 14712900   /lib/libnss_files-2.3.5.so
0093d000-0093e000 r--p 00008000 fd:00 14712900   /lib/libnss_files-2.3.5.so
0093e000-0093f000 rw-p 00009000 fd:00 14712900   /lib/libnss_files-2.3.5.so
00941000-00949000 r-xp 00000000 fd:00 14713885   /lib/libnss_nis-2.3.5.so
00949000-0094a000 r--p 00007000 fd:00 14713885   /lib/libnss_nis-2.3.5.so
0094a000-0094b000 rw-p 00008000 fd:00 14713885   /lib/libnss_nis-2.3.5.so
00a0d000-00a0e000 r-xp 00a0d000 00:00 0          [vdso]
00b1c000-00b2b000 r-xp 00000000 fd:00 14712973   /lib/libresolv-2.3.5.so
00b2b000-00b2c000 r--p 0000e000 fd:00 14712973   /lib/libresolv-2.3.5.so
00b2c000-00b2d000 rw-p 0000f000 fd:00 14712973   /lib/libresolv-2.3.5.so
00b2d000-00b2f000 rw-p 00b2d000 00:00 0
00b31000-00b38000 r-xp 00000000 fd:00 22488132   /usr/lib/libwrap.so.0.7.6
00b38000-00b39000 rw-p 00007000 fd:00 22488132   /usr/lib/libwrap.so.0.7.6
00d0e000-00d2c000 r-xp 00000000 fd:00 22482065   /usr/lib/libjpeg.so.62.0.0
00d2c000-00d2d000 rw-p 0001d000 fd:00 22482065   /usr/lib/libjpeg.so.62.0.0
08047000-08190000 r-xp 00000000 fd:00 22496554   /usr/bin/Xvnc
08190000-0819a000 rw-p 00148000 fd:00 22496554   /usr/bin/Xvnc
0819a000-081b8000 rw-p 0819a000 00:00 0
09986000-09b6d000 rw-p 09986000 00:00 0          [heap]
b7500000-b7521000 rw-p b7500000 00:00 0
b7521000-b7600000 ---p b7521000 00:00 0
b7690000-b76f0000 rw-s 00000000 00:08 3244046    /SYSV00000000 (deleted)
b76f0000-b7732000 rw-p b76f0000 00:00 0
b7732000-b7792000 rw-s 00000000 00:08 2981895    /SYSV00000000 (deleted)
b7792000-b77f2000 rw-s 00000000 00:08 2949126    /SYSV00000000 (deleted)
b77f2000-b7852000 rw-s 00000000 00:08 2916357    /SYSV00000000 (deleted)
b7852000-b78b2000 rw-s 0000000

So while I can't absolutely prove that this is SWT's fault, since the stack trace above shows that something was trying to free an already-freed GC, and Eclipse is what I was using at the time, and I could successfully run and use 3.1 the rest of the day after restarting the same VNC server, there seems to be a pretty high likelihood that this is probably the case.
What version of XVNC?  See bug 33680 for why I ask.
Hi Billy, here are the relevant versions:

[djo@peanut ~]$ rpm -q atk pango gtk2 glib freetype tightvnc-server
atk-1.9.1-1
pango-1.8.1-2
gtk2-2.6.10-2.fc4.4
glib-1.2.10-16
freetype-2.1.9-2
tightvnc-server-1.3dev7-1

Also note that this is new behavior with 3.2.  I've been remotely pairing with another developer for over 24 hours now on a single instance of VNC running Eclipse 3.1, with no problems.

Distro is Fedora Core 4.

Please see bug #33680 
  https://bugs.eclipse.org/bugs/show_bug.cgi?id=33680

I think both this one and two others (#125436, #183806, #167973) should be marked as duplicated of that one and closed. It is an issue with vnc's still using the X server's deprecated cfb/mfb layer.
Apparently fixed time ago in realvnc in RH, bug http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=424860
for vnc4server in Debian.
Agreed with comment #3.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125437" />
    <CreationDate amount="2006-01-26 22:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Commands] handlers: TextActionHandler does not properly maintain enablement of its delegate actions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Cut, Paste and Delete should only be enabled for editable Text fields</Line>
          <Line>2. In addition, Paste should only be enabled if there is textual content on the clipboard</Line>
          <Line>3. Select All should only be enabled when there is at least one character in the Text control</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>In order to synchronize enablement behavior of global clipboard actions managed by TextActionHandler with Text control's native context menu, the following rules should be observed:

1. Cut, Paste and Delete should only be enabled for editable Text fields
2. In addition, Paste should only be enabled if there is textual content on the clipboard
3. Select All should only be enabled when there is at least one character in the Text control

Furthermore, TextActionHandler does not properly update enablement in its addText(Text) method. For one, it assumes that the Text control being added is currently active, OR that this method will be called before set&lt;Action&gt;(IAction) methods are (which properly update enablement). This may not be the case, particularly in scenarios where the global actions are shared (e.g., editor's action bar contributor) and controls are added only after the actions have been set.

This is in follow-up to bugs.eclipse.org/bugs/show_bug.cgi?id=124673. Apparently, I didn't catch all of the problems with TextActionHandler. A proposed patch is attached.
Created attachment 33686
Proposed patch to fix the outlined problems
Moving Dougs bugs
Released to HEAD &gt;20090125
PW

verified using the tests in bug 262615

on I20090127-0100</WithStack>
    <WithOutStack>In order to synchronize enablement behavior of global clipboard actions managed by TextActionHandler with Text control's native context menu, the following rules should be observed:

1. Cut, Paste and Delete should only be enabled for editable Text fields
2. In addition, Paste should only be enabled if there is textual content on the clipboard
3. Select All should only be enabled when there is at least one character in the Text control

Furthermore, TextActionHandler does not properly update enablement in its addText(Text) method. For one, it assumes that the Text control being added is currently active, OR that this method will be called before set&lt;Action&gt;(IAction) methods are (which properly update enablement). This may not be the case, particularly in scenarios where the global actions are shared (e.g., editor's action bar contributor) and controls are added only after the actions have been set.

This is in follow-up to bugs.eclipse.org/bugs/show_bug.cgi?id=124673. Apparently, I didn't catch all of the problems with TextActionHandler. A proposed patch is attached.
Created attachment 33686
Proposed patch to fix the outlined problems
Moving Dougs bugs
Released to HEAD &gt;20090125
PW

verified using the tests in bug 262615

on I20090127-0100</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125438" />
    <CreationDate amount="2006-01-26 22:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Mylyn" />
    <Product amount="Mylyn" />
    <component amount="Tasks" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows All" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>make tasklist icons overlay-based</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I've created overlays for repositories and web, and we should use them instead of having task specify their custom icons.
I think there should be some possibility for repository providers to contribute their own icons. E.g. Jira is using whole bunch of icons for various task types.
Agreed, and the overlay-based approach will enable this without sacrificing consistency.
Done, and task type overlays are supported.</WithStack>
    <WithOutStack>I've created overlays for repositories and web, and we should use them instead of having task specify their custom icons.
I think there should be some possibility for repository providers to contribute their own icons. E.g. Jira is using whole bunch of icons for various task types.
Agreed, and the overlay-based approach will enable this without sacrificing consistency.
Done, and task type overlays are supported.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125439" />
    <CreationDate amount="2006-01-26 23:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>reorg of platform: url support</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) move this code all to the same place/package.  This support should/could go with the Location support since they are basically URLs on those locations</Line>
          <Line />
          <Line>2) add a couple more URL types for User location and the actual Instance area root.</Line>
          <Line />
          <Line>3) add aliases for the ones whose names don't match the Location name.  For exmaple, platform://base/... should also be available as platform://install/...</Line>
          <Line>Moving bugs from code review out of inbox</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>There are several classes such as PlatformURL*Connection where * = Base, Meta, Config, Fragment, Plugin.  These all correspond to platform://*/... URLs.  Interesting these also correspond to several of the locations defined by the Location service.

; Base : Install location
; Config : Config location
; Plugin | Fragment : bundleentry URLs
; Meta : the .metadata area of the Instance location

We should
1) move this code all to the same place/package.  This support should/could go with the Location support since they are basically URLs on those locations

2) add a couple more URL types for User location and the actual Instance area root.

3) add aliases for the ones whose names don't match the Location name.  For exmaple, platform://base/... should also be available as platform://install/...
Moving bugs from code review out of inbox</WithStack>
    <WithOutStack>There are several classes such as PlatformURL*Connection where * = Base, Meta, Config, Fragment, Plugin.  These all correspond to platform://*/... URLs.  Interesting these also correspond to several of the locations defined by the Location service.

; Base : Install location
; Config : Config location
; Plugin | Fragment : bundleentry URLs
; Meta : the .metadata area of the Instance location

We should
1) move this code all to the same place/package.  This support should/could go with the Location support since they are basically URLs on those locations

2) add a couple more URL types for User location and the actual Instance area root.

3) add aliases for the ones whose names don't match the Location name.  For exmaple, platform://base/... should also be available as platform://install/...
Moving bugs from code review out of inbox</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125440" />
    <CreationDate amount="2006-01-26 23:27:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Framework" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>LazyStart Header not equivilant to AutoStart?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Using M4. 

We may have found a case where having Eclipse-LazyStart=true does
not behave the same as Eclipse-AutoStart=true. 

Its my understanding they should behave the same ... that it was just a name change to avoid confusion with the "real" auto @start directive in config.ini? 

Anyway, our bug is documented in bug 125365. Our bug was fixed by inproving our code :) ... but, thought I'd write these observations here in case this sort of change in behavior should be investigated further. Our bug had to do with retrieving resources, but &lt;PluginClass&gt;.getPlugin() was returning null when we changed to LazyStart=true (to avoid deprecation warning). 
This plugin was one of our few that still "pre-req'd" the compatibility layer -- not even sure it needed to ... but, thoght maybe the change in bahavior was only for that special case? 

Again, this is not really posing a problem for us ... just documenting our experience in case it should be investigated further. Or ... if I just need to be better educated on meaning of lazy-start, auto-start ... maybe something was working before that should not have been working? 

Thanks.
I got a question about bug 125365 comment 5.  It sounds like you were getting UI strings by loading resources from the core plug-in (I assume xsd.core).  Then you say the plug-in object was not initialized when it was requested from the XSD validate action.  Which plug-in was not initialized, the xsd.core plug-in which you requested a resource from, or xsd.ui plug-in?

To clarify, Eclipse-LazyStart == Eclipse-AutoStart, at least they should.  If the xsd.core plug-in is the one not initialized then it may be expected.  We only autostart (initialize) plug-ins on first classload not first resource load.  This behavior has not changed.  Perhaps you ran into this when you did the split?  If this is not the case then I would like some steps to reproduce, including what builds to download from web tools project.
Thanks for confirming they really should be the same. 

I've spent some time trying to reproduce, where that header directive is the only change, and I could not reproduce. 

So ... probably something else ... or, some obscure "combination of errors" that caused it.</WithStack>
    <WithOutStack>Using M4. 

We may have found a case where having Eclipse-LazyStart=true does
not behave the same as Eclipse-AutoStart=true. 

Its my understanding they should behave the same ... that it was just a name change to avoid confusion with the "real" auto @start directive in config.ini? 

Anyway, our bug is documented in bug 125365. Our bug was fixed by inproving our code :) ... but, thought I'd write these observations here in case this sort of change in behavior should be investigated further. Our bug had to do with retrieving resources, but &lt;PluginClass&gt;.getPlugin() was returning null when we changed to LazyStart=true (to avoid deprecation warning). 
This plugin was one of our few that still "pre-req'd" the compatibility layer -- not even sure it needed to ... but, thoght maybe the change in bahavior was only for that special case? 

Again, this is not really posing a problem for us ... just documenting our experience in case it should be investigated further. Or ... if I just need to be better educated on meaning of lazy-start, auto-start ... maybe something was working before that should not have been working? 

Thanks.
I got a question about bug 125365 comment 5.  It sounds like you were getting UI strings by loading resources from the core plug-in (I assume xsd.core).  Then you say the plug-in object was not initialized when it was requested from the XSD validate action.  Which plug-in was not initialized, the xsd.core plug-in which you requested a resource from, or xsd.ui plug-in?

To clarify, Eclipse-LazyStart == Eclipse-AutoStart, at least they should.  If the xsd.core plug-in is the one not initialized then it may be expected.  We only autostart (initialize) plug-ins on first classload not first resource load.  This behavior has not changed.  Perhaps you ran into this when you did the split?  If this is not the case then I would like some steps to reproduce, including what builds to download from web tools project.
Thanks for confirming they really should be the same. 

I've spent some time trying to reproduce, where that header directive is the only change, and I could not reproduce. 

So ... probably something else ... or, some obscure "combination of errors" that caused it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125441" />
    <CreationDate amount="2006-01-27 00:17:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Source Editing" />
    <component amount="wst.xsd" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Several WTP plug-ins still require runtime.compatibility</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The plug-in org.eclipse.wst.xsd.core has a requirement on runtime.compatibility. This should be cleaned up for 1.5.
I think it might be xsd.ui? 
And also ... a workspace search shows all the following also refer to 
org.eclipse.core.internal.compatibility.PluginActivator
so ... I think you, Lawrence, are in a good position to clean up all of these? 

MANIFEST.MF - org.eclipse.jst.ws.axis.ui.doc.user/META-INF
MANIFEST.MF - org.eclipse.jst.ws.consumption.ui.doc.user/META-INF
MANIFEST.MF - org.eclipse.wst.common.ui/META-INF
MANIFEST.MF - org.eclipse.wst.common.ui.properties/META-INF
MANIFEST.MF - org.eclipse.wst.javascript.ui.infopop/META-INF
MANIFEST.MF - org.eclipse.wst.wsdl/META-INF
MANIFEST.MF - org.eclipse.wst.wsdl.ui/META-INF
You're right about xsd.ui but xsd.core also requires runtime.compatibility. I'll take care of these and the others on the list. Feel free to append any more you find.

I've already taken care of 
MANIFEST.MF - org.eclipse.jst.ws.axis.ui.doc.user/META-INF
MANIFEST.MF - org.eclipse.jst.ws.consumption.ui.doc.user/META-INF
These changes will be released after this week's I-build is declared.
I've removed the dependency on common.ui, common.ui.properties, wsdl.core, wsdl.ui, xsd.core, and xsd.ui. org.eclipse.wst.javascript.ui.infopop has also already been taken care of.

I've released the changes for 1.5M5.
Although updated to function with core.runtime, the dependency on core.runtime.compatibility in org.eclipse.wst.common.ui.properties was not removed from the plug-in manifest. This dependency needs to be corrected.
Lawrence, are you confident that this change will be safe?  I remember during the initial round of 'compatability' removal that there were some scary side effects.
No. If this fix is to go into 1.5.1 (it may be more suitable for 2.0) it will have to be thoughroughly tested.

I've set the target to 1.5.1 in order to review this for 1.5.1. If decided that this is not appropriate for 1.5.1 I have no problem deferring to 2.0.
Craig, I just read in the org.eclipse.wst.common.ui.properties plug-in's manifest that the plug-in is deprecated. Do any parts of WTP still make use of this plug-in? What is the expected life of this plug-in at this point? Will it be dropped in 2.0? If so it may be safest to leave it as is and not fix the dependency on runtime.compatibility in favour of simply removing the plug-in.
I spoke with Craig about the plans for the org.eclipse.common.ui.properties plug-in. This plug-in is deprecated and will be removed in WTP 2.0. Seems the safest course of action is to leave the dependency in place for 1.5.x as the plug-in will be removed in the next major WTP release.

I've removed the 1.5.1 target and am going to resolve this bug as fixed given that the rest of the WTP plug-ins no longer have a dependency on runtime.compatibility.
Verified on WTP R-1.5.1-200609230508.
Closing bug.
This is part of a "mass update" where bugs showing "fixed" between 7/1/2006 and 9/27/2006 are assumed fixed in WTP 1.5.1. feel free to change the target milestone if you know a more accurate setting. 
*** Bug 114972 has been marked as a duplicate of this bug. ***
*** Bug 114973 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>The plug-in org.eclipse.wst.xsd.core has a requirement on runtime.compatibility. This should be cleaned up for 1.5.
I think it might be xsd.ui? 
And also ... a workspace search shows all the following also refer to 
org.eclipse.core.internal.compatibility.PluginActivator
so ... I think you, Lawrence, are in a good position to clean up all of these? 

MANIFEST.MF - org.eclipse.jst.ws.axis.ui.doc.user/META-INF
MANIFEST.MF - org.eclipse.jst.ws.consumption.ui.doc.user/META-INF
MANIFEST.MF - org.eclipse.wst.common.ui/META-INF
MANIFEST.MF - org.eclipse.wst.common.ui.properties/META-INF
MANIFEST.MF - org.eclipse.wst.javascript.ui.infopop/META-INF
MANIFEST.MF - org.eclipse.wst.wsdl/META-INF
MANIFEST.MF - org.eclipse.wst.wsdl.ui/META-INF
You're right about xsd.ui but xsd.core also requires runtime.compatibility. I'll take care of these and the others on the list. Feel free to append any more you find.

I've already taken care of 
MANIFEST.MF - org.eclipse.jst.ws.axis.ui.doc.user/META-INF
MANIFEST.MF - org.eclipse.jst.ws.consumption.ui.doc.user/META-INF
These changes will be released after this week's I-build is declared.
I've removed the dependency on common.ui, common.ui.properties, wsdl.core, wsdl.ui, xsd.core, and xsd.ui. org.eclipse.wst.javascript.ui.infopop has also already been taken care of.

I've released the changes for 1.5M5.
Although updated to function with core.runtime, the dependency on core.runtime.compatibility in org.eclipse.wst.common.ui.properties was not removed from the plug-in manifest. This dependency needs to be corrected.
Lawrence, are you confident that this change will be safe?  I remember during the initial round of 'compatability' removal that there were some scary side effects.
No. If this fix is to go into 1.5.1 (it may be more suitable for 2.0) it will have to be thoughroughly tested.

I've set the target to 1.5.1 in order to review this for 1.5.1. If decided that this is not appropriate for 1.5.1 I have no problem deferring to 2.0.
Craig, I just read in the org.eclipse.wst.common.ui.properties plug-in's manifest that the plug-in is deprecated. Do any parts of WTP still make use of this plug-in? What is the expected life of this plug-in at this point? Will it be dropped in 2.0? If so it may be safest to leave it as is and not fix the dependency on runtime.compatibility in favour of simply removing the plug-in.
I spoke with Craig about the plans for the org.eclipse.common.ui.properties plug-in. This plug-in is deprecated and will be removed in WTP 2.0. Seems the safest course of action is to leave the dependency in place for 1.5.x as the plug-in will be removed in the next major WTP release.

I've removed the 1.5.1 target and am going to resolve this bug as fixed given that the rest of the WTP plug-ins no longer have a dependency on runtime.compatibility.
Verified on WTP R-1.5.1-200609230508.
Closing bug.
This is part of a "mass update" where bugs showing "fixed" between 7/1/2006 and 9/27/2006 are assumed fixed in WTP 1.5.1. feel free to change the target milestone if you know a more accurate setting. 
*** Bug 114972 has been marked as a duplicate of this bug. ***
*** Bug 114973 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125442" />
    <CreationDate amount="2006-01-27 01:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Dependency Extent search should skip anonymous  classes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>From bug 125178:

Searching for references to anonymous classes returns 0 hits, so the Compute Dependency Extent should skip anonymous types when looping through a plug-in's types.
Fixed.</WithStack>
    <WithOutStack>From bug 125178:

Searching for references to anonymous classes returns 0 hits, so the Compute Dependency Extent should skip anonymous types when looping through a plug-in's types.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125443" />
    <CreationDate amount="2006-01-27 02:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Perspectives] IPagelayout.addPlaceholder(...) does not work seem to as expected</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="9">
      <source_code type="package">
        <location start="191" end="207" />
        <code>package rcpmail;</code>
      </source_code>
      <source_code type="import">
        <location start="208" end="245" />
        <code>import org.eclipse.ui.IFolderLayout;</code>
      </source_code>
      <source_code type="import">
        <location start="246" end="280" />
        <code>import org.eclipse.ui.IPageLayout;</code>
      </source_code>
      <source_code type="import">
        <location start="281" end="323" />
        <code>import org.eclipse.ui.IPerspectiveFactory;</code>
      </source_code>
      <source_code type="class">
        <location start="325" end="762" />
        <code>public class Perspective implements IPerspectiveFactory {
  public void createInitialLayout(IPageLayout layout) {    
    layout.addStandaloneView(NavigationView.ID,  false, IPageLayout.LEFT, 0.25f, IPageLayout.ID_EDITOR_AREA);
    
    IFolderLayout folder = layout.createFolder("messages", IPageLayout.TOP, 0.5f, IPageLayout.ID_EDITOR_AREA);
    folder.addPlaceholder(View.ID + ":*");
    
    layout.setEditorAreaVisible( true);
  }
}</code>
      </source_code>
      <source_code type="package">
        <location start="904" end="920" />
        <code>package rcpmail;</code>
      </source_code>
      <source_code type="import">
        <location start="921" end="956" />
        <code>import org.eclipse.ui.IPageLayout;</code>
      </source_code>
      <source_code type="import">
        <location start="957" end="999" />
        <code>import org.eclipse.ui.IPerspectiveFactory;</code>
      </source_code>
      <source_code type="class">
        <location start="1001" end="1379" />
        <code>public class Perspective implements IPerspectiveFactory {
  public void createInitialLayout(IPageLayout layout) {
    layout.addStandaloneView(NavigationView.ID,  false, IPageLayout.LEFT, 0.25f, IPageLayout.ID_EDITOR_AREA);
      
    layout.addPlaceholder( View.ID + ":*", IPageLayout.TOP, 0.5f, IPageLayout.ID_EDITOR_AREA);
      
    layout.setEditorAreaVisible( true);
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Used the Eclipse RCP Template proto, to show the issues. 

Perspective.java has been modified to show the various cases.

Case 1:
Using IFolder.addPlaceholder, things works out as expected.

package rcpmail;

import org.eclipse.ui.IFolderLayout;
import org.eclipse.ui.IPageLayout;
import org.eclipse.ui.IPerspectiveFactory;

public class Perspective implements IPerspectiveFactory {
  public void createInitialLayout(IPageLayout layout) {    
    layout.addStandaloneView(NavigationView.ID,  false, IPageLayout.LEFT, 0.25f, IPageLayout.ID_EDITOR_AREA);
    
    IFolderLayout folder = layout.createFolder("messages", IPageLayout.TOP, 0.5f, IPageLayout.ID_EDITOR_AREA);
    folder.addPlaceholder(View.ID + ":*");
    
    layout.setEditorAreaVisible( true);
  }
}

Plese refer to snap-shots Fig.1


Case 2:
I wanted a invisible VIEW area, till the VIEWs are displayed, so replaced 'folder' with 'layout'

package rcpmail;

import org.eclipse.ui.IPageLayout;
import org.eclipse.ui.IPerspectiveFactory;

public class Perspective implements IPerspectiveFactory {
  public void createInitialLayout(IPageLayout layout) {
    layout.addStandaloneView(NavigationView.ID,  false, IPageLayout.LEFT, 0.25f, IPageLayout.ID_EDITOR_AREA);
      
    layout.addPlaceholder( View.ID + ":*", IPageLayout.TOP, 0.5f, IPageLayout.ID_EDITOR_AREA);
      
    layout.setEditorAreaVisible( true);
  }
}

As shown in Fig.2 the views are no more in their expected position.

I am using 
Version: 3.2.0
Build id: I20051102-1600

Thanks

Sanjay
Created attachment 33690
SnapShot Using IFolder.addPlaceholder
Created attachment 33691
SnapShot Using IPlageLayout.addPlaceholder
Sorry, there is a typo:

IFolder.addPlaceholder, to be read as IFolderLayout.addPlaceholder
Try modifying case 1 to use createPlaceholderFolder instead of createFolder.
The second case should work similarly though.

Thanks for the solution. Sorry, for being a bit late on the feedback, as was not checking for a while.

I didnot understand, why someone would need to use:
IPlaceholderFolderLayout.createPlaceholderFolder(...).addPlaceholder(viewId)

when there is a similar method: 
IPageLayout.addPlaceholder(String viewId, int relationship, float ratio, String refId), intutively is supposed to do the same thing



You're right, they should be equivalent, which is why this is still open.
But does using a placeholder folder work for you?

Yes, eveything worked as I was expecting it to. Thanks a lot indeed on the solution.


Can you please let me know, how do I handle the following situation :

PLUGIN A has perspective P with more than one placeholders defined as before:
IFolderLayout topLeftFolder = ILayout.createPlaceholderFolder(...)
IFolderLayout topRightFolder = ILayout.createPlaceholderFolder(...)
IFolderLayout bottomFolder = ILayout.createPlaceholderFolder(...)

I have PLUGIN B, which has VIEW V that needs to be gets displayed in 'topRightFolder'. Using org.eclipse.ui.perspectiveExtensions extension point, the problem is it gets displayed, when the application starts. Having the VISIBLE=FALSE, leaves a visible empty space. 

I am looking forward to a solution, just like it had been on one single plugin, where createPlaceholderFolder(...) just created an invisible empty slot, for the view to get positioned when it is invoked using showView(...)

Thanks

Sanjay
Is this still a problem in 3.3?

PW

Changes requested on bug 193523</WithStack>
    <WithOutStack>Used the Eclipse RCP Template proto, to show the issues. 

Perspective.java has been modified to show the various cases.

Case 1:
Using IFolder.addPlaceholder, things works out as expected.

package rcpmail;

import org.eclipse.ui.IFolderLayout;
import org.eclipse.ui.IPageLayout;
import org.eclipse.ui.IPerspectiveFactory;

public class Perspective implements IPerspectiveFactory {
  public void createInitialLayout(IPageLayout layout) {    
    layout.addStandaloneView(NavigationView.ID,  false, IPageLayout.LEFT, 0.25f, IPageLayout.ID_EDITOR_AREA);
    
    IFolderLayout folder = layout.createFolder("messages", IPageLayout.TOP, 0.5f, IPageLayout.ID_EDITOR_AREA);
    folder.addPlaceholder(View.ID + ":*");
    
    layout.setEditorAreaVisible( true);
  }
}

Plese refer to snap-shots Fig.1


Case 2:
I wanted a invisible VIEW area, till the VIEWs are displayed, so replaced 'folder' with 'layout'

package rcpmail;

import org.eclipse.ui.IPageLayout;
import org.eclipse.ui.IPerspectiveFactory;

public class Perspective implements IPerspectiveFactory {
  public void createInitialLayout(IPageLayout layout) {
    layout.addStandaloneView(NavigationView.ID,  false, IPageLayout.LEFT, 0.25f, IPageLayout.ID_EDITOR_AREA);
      
    layout.addPlaceholder( View.ID + ":*", IPageLayout.TOP, 0.5f, IPageLayout.ID_EDITOR_AREA);
      
    layout.setEditorAreaVisible( true);
  }
}

As shown in Fig.2 the views are no more in their expected position.

I am using 
Version: 3.2.0
Build id: I20051102-1600

Thanks

Sanjay
Created attachment 33690
SnapShot Using IFolder.addPlaceholder
Created attachment 33691
SnapShot Using IPlageLayout.addPlaceholder
Sorry, there is a typo:

IFolder.addPlaceholder, to be read as IFolderLayout.addPlaceholder
Try modifying case 1 to use createPlaceholderFolder instead of createFolder.
The second case should work similarly though.

Thanks for the solution. Sorry, for being a bit late on the feedback, as was not checking for a while.

I didnot understand, why someone would need to use:
IPlaceholderFolderLayout.createPlaceholderFolder(...).addPlaceholder(viewId)

when there is a similar method: 
IPageLayout.addPlaceholder(String viewId, int relationship, float ratio, String refId), intutively is supposed to do the same thing



You're right, they should be equivalent, which is why this is still open.
But does using a placeholder folder work for you?

Yes, eveything worked as I was expecting it to. Thanks a lot indeed on the solution.


Can you please let me know, how do I handle the following situation :

PLUGIN A has perspective P with more than one placeholders defined as before:
IFolderLayout topLeftFolder = ILayout.createPlaceholderFolder(...)
IFolderLayout topRightFolder = ILayout.createPlaceholderFolder(...)
IFolderLayout bottomFolder = ILayout.createPlaceholderFolder(...)

I have PLUGIN B, which has VIEW V that needs to be gets displayed in 'topRightFolder'. Using org.eclipse.ui.perspectiveExtensions extension point, the problem is it gets displayed, when the application starts. Having the VISIBLE=FALSE, leaves a visible empty space. 

I am looking forward to a solution, just like it had been on one single plugin, where createPlaceholderFolder(...) just created an invisible empty slot, for the view to get positioned when it is invoked using showView(...)

Thanks

Sanjay
Is this still a problem in 3.3?

PW

Changes requested on bug 193523</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125444" />
    <CreationDate amount="2006-01-27 03:43:00 -0500" />
    <DupId amount="125189" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NullPointerException in BuildErrorReporter.reportErrors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330652648">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.pde.internal.builders.BuildErrorReporter.reportErrors(BuildErrorReporter.java:310)</Frame>
          <Frame depth="1">org.eclipse.pde.internal.builders.BuildErrorReporter.validate(BuildErrorReporter.java:83)</Frame>
          <Frame depth="2">org.eclipse.pde.internal.builders.ErrorReporter.validateContent(ErrorReporter.java:121)</Frame>
          <Frame depth="3">org.eclipse.pde.internal.builders.ManifestConsistencyChecker.checkBuildProperties(ManifestConsistencyChecker.java:138)</Frame>
          <Frame depth="4">org.eclipse.pde.internal.builders.ManifestConsistencyChecker.checkThisProject(ManifestConsistencyChecker.java:57)</Frame>
          <Frame depth="5">org.eclipse.pde.internal.builders.ManifestConsistencyChecker.build(ManifestConsistencyChecker.java:39)</Frame>
          <Frame depth="6">org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:593)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)</Frame>
          <Frame depth="8">org.eclipse.core.runtime.Platform.run(Platform.java:785)</Frame>
          <Frame depth="9">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:168)</Frame>
          <Frame depth="10">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:202)</Frame>
          <Frame depth="11">org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:231)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)</Frame>
          <Frame depth="13">org.eclipse.core.runtime.Platform.run(Platform.java:785)</Frame>
          <Frame depth="14">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:234)</Frame>
          <Frame depth="15">org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:253)</Frame>
          <Frame depth="16">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:282)</Frame>
          <Frame depth="17">org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)</Frame>
          <Frame depth="18">org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:204)</Frame>
          <Frame depth="19">org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20050125

First time I started up the build on my dev workspace, a build kicked in, I got the following log messages. Perhaps the missing build.properties and the NPE are connetected?

!ENTRY org.eclipse.core.resources 4 368 2006-01-27 09:37:15.403
!MESSAGE Resource /org.eclipse.ltk.ui/build.properties does not exist.

!ENTRY org.eclipse.core.resources 4 2 2006-01-27 09:37:15.412
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.core.resources".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.pde.internal.builders.BuildErrorReporter.reportErrors(BuildErrorReporter.java:310)
	at org.eclipse.pde.internal.builders.BuildErrorReporter.validate(BuildErrorReporter.java:83)
	at org.eclipse.pde.internal.builders.ErrorReporter.validateContent(ErrorReporter.java:121)
	at org.eclipse.pde.internal.builders.ManifestConsistencyChecker.checkBuildProperties(ManifestConsistencyChecker.java:138)
	at org.eclipse.pde.internal.builders.ManifestConsistencyChecker.checkThisProject(ManifestConsistencyChecker.java:57)
	at org.eclipse.pde.internal.builders.ManifestConsistencyChecker.build(ManifestConsistencyChecker.java:39)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:593)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
	at org.eclipse.core.runtime.Platform.run(Platform.java:785)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:168)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:202)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:231)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
	at org.eclipse.core.runtime.Platform.run(Platform.java:785)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:234)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:253)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:282)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:204)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)


*** This bug has been marked as a duplicate of 125189 ***</WithStack>
    <WithOutStack>I20050125

First time I started up the build on my dev workspace, a build kicked in, I got the following log messages. Perhaps the missing build.properties and the NPE are connetected?

!ENTRY org.eclipse.core.resources 4 368 2006-01-27 09:37:15.403
!MESSAGE Resource /org.eclipse.ltk.ui/build.properties does not exist.

!ENTRY org.eclipse.core.resources 4 2 2006-01-27 09:37:15.412
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.core.resources".
!STACK 0



*** This bug has been marked as a duplicate of 125189 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125445" />
    <CreationDate amount="2006-01-27 04:12:00 -0500" />
    <DupId amount="106466" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[1.5][compiler] Additional bounds while first one is type parameter: JDK 1.50_05 compiles but Eclipse 3.1.2 does not</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="219" end="280" />
        <code>return comparableNumberObj.compareTo(comparableNumberObj);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The following code does not compile in Eclipse 3.1.2 (cannot select version in field above) but it compiles in JDK 1.5.0_05:

public static &lt;C extends Number, A extends C &amp; Comparable&lt;C&gt;&gt; int m(A comparableNumberObj) {
   return comparableNumberObj.compareTo(comparableNumberObj);
}

ciao
Volker
Correction: it was accepted in 3.1.1, and is now rejected in 3.1.2 as we do in 3.2 stream.


*** This bug has been marked as a duplicate of 106466 ***
Added GenericTypeTest#test885</WithStack>
    <WithOutStack>The following code does not compile in Eclipse 3.1.2 (cannot select version in field above) but it compiles in JDK 1.5.0_05:

public static &lt;C extends Number, A extends C &amp; Comparable&lt;C&gt;&gt; int m(A comparableNumberObj) {
   return comparableNumberObj.compareTo(comparableNumberObj);
}

ciao
Volker
Correction: it was accepted in 3.1.1, and is now rejected in 3.1.2 as we do in 3.2 stream.


*** This bug has been marked as a duplicate of 106466 ***
Added GenericTypeTest#test885</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125446" />
    <CreationDate amount="2006-01-27 04:14:00 -0500" />
    <DupId amount="126996" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No images in debug view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Launch a runtime workbench in debug mode. No icons.</Line>
          <Line>2. Debug attach to a remote Java application (Tomcat). No icons.</Line>
          <Line>3. Both the remote attach and runtime workbench launches suspended at various points, showing stack frames but still no icons.</Line>
          <Line>4. Launch an external tool which killed Tomcat (causing the remote attach to terminate). Suddenly the whole tree redrew and all icons appeared as they should be.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- start eclipse</Line>
          <Line>- debug anything</Line>
          <Line>- open the debug view</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20060125

- start eclipse
- debug anything
- open the debug view

&gt; expected: see images in the view for threads, stack elements, debug targets etc.
&lt; actual: no images, will attach shot
Created attachment 33693
screenshot.png

Screenshot of my workbench - the debug view is in the upper right corner.
I'm seeing the same thing consistently. For reference, I'm using:
  gtk+2.0-2.4.9-9mdk

Interestingly, I've also seen the icons appear later on. One specific scenario I saw was:
1. Launch a runtime workbench in debug mode. No icons.
2. Debug attach to a remote Java application (Tomcat). No icons.
3. Both the remote attach and runtime workbench launches suspended at various points, showing stack frames but still no icons.
4. Launch an external tool which killed Tomcat (causing the remote attach to terminate). Suddenly the whole tree redrew and all icons appeared as they should be.

I've seen this as well - using kernel-2.6.9-5.EL gtk+-1.2.10-33

Seems to be a vitual tree issue. Moving to SWT for comment.



*** This bug has been marked as a duplicate of 126996 ***</WithStack>
    <WithOutStack>I20060125

- start eclipse
- debug anything
- open the debug view

&gt; expected: see images in the view for threads, stack elements, debug targets etc.
&lt; actual: no images, will attach shot
Created attachment 33693
screenshot.png

Screenshot of my workbench - the debug view is in the upper right corner.
I'm seeing the same thing consistently. For reference, I'm using:
  gtk+2.0-2.4.9-9mdk

Interestingly, I've also seen the icons appear later on. One specific scenario I saw was:
1. Launch a runtime workbench in debug mode. No icons.
2. Debug attach to a remote Java application (Tomcat). No icons.
3. Both the remote attach and runtime workbench launches suspended at various points, showing stack frames but still no icons.
4. Launch an external tool which killed Tomcat (causing the remote attach to terminate). Suddenly the whole tree redrew and all icons appeared as they should be.

I've seen this as well - using kernel-2.6.9-5.EL gtk+-1.2.10-33

Seems to be a vitual tree issue. Moving to SWT for comment.



*** This bug has been marked as a duplicate of 126996 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125447" />
    <CreationDate amount="2006-01-27 04:21:00 -0500" />
    <DupId amount="" />
    <classification amount="DataTools" />
    <Product amount="Data Tools" />
    <component amount="Open Data Access" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>setProperty() function before prepare() function.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I think it is an enhancment to the ODA API if the setProperty() function is called before the prepare() function as you can use the parameters in your prepare function then. I think the situation now is more specified to JDBC connections where you have just a String. I also think that it worth removing the Constructor from IQuery Interface then as you now have to pass on the queryString. In my case I'm writing an ODA to support SOAP. I've taken the XML ODA as an example and it struggles with the same problem that you have to put all your parameters within one string. It is far more easy when you can dynamically configure this. If you have any further questions about it you can contact me on: jan.tanis at coas dot com or jan.tanis at gmail dot com. I hope you will consider this as this will improve the API. Thanks and regards, Jan.
Hi Jan,

I'd like to understand more about the problem you are trying to solve.
&gt;&gt;"... struggles with the same problem that you have to put all your parameters within one string. It is far more easy when you can dynamically configure this.".

It sounds like you have embedded some "parameters" in the query text used in prepare, but would like to separate them out as parameters or properties, whose values can be "dynamically" assigned.  If this is the case, such dynamic values are thus needed during query execution.  Can you elaborate more on why these values are needed during query preparation instead?  
Perhaps you may want to consider using the query parameters for them, instead of properties.  The property is indeed have restricted usage, similar to java.util.Properties which also limit property values to String data type.



Linda  
Hi Linda,

The problem is that I have to prepare something with the given parameters before I can call the execute function. As you might know I'm working on a webservice ODA. To call it I have to know the following things:

WSDL - From DataSource, works fine.
Function to call - Needed in prepare to discover WSDL elements
Parameter mapping - Needed in prepare to map inputparameters

So this is why I rather see the setProperty function called before prepare. I hope this make sense to you. If you have any questions don't hesitate to contact me.

Best regards, Jan.

PS: Sorry for late reply, I've replied to this issue before, but somehow that was not posted.
I've reconsidered this issue and I think the ODA API is to much focussed on database connectivity as a querystring is required. I don't use a querystring in calling a webservice. I think it is an enhancement when the abstractionlevel is dragged above the DB level to make it easier to use other datasources.
(In reply to comment #3)

Re: your comments about the use of a query string.
The idea behind it is that a "queryText" can be any "command" used to retrieve data.
For example, a XPath query (as used in the oda.xml), a specific URL or file name (as used in oda.flatfile), a SOAP service message id (used in an ODA web service prototype we have done for testing), etc.  
In other words, it is not necessarily DB specific.

Now, we do recognize that a narrow-focus data provider may have only a single "service", and may not need to have an explicit query command to identify it.  Though this seems to be minority of use cases, from what we'd seen.

For backward compatibility of existing ODA drivers, we have to keep its definition as non-null, though an empty string is fine.  So the ODA consumer helper framework knows to convert a query text from null value to an empty string, when it passes the query text to an ODA driver.  

Re: your earlier comments on the webservice ODA you are developing:
WSDL - From DataSource, works fine.
Function to call - Needed in prepare to discover WSDL elements
Parameter mapping - Needed in prepare to map inputparameters

This seems that your use case needs to get more *structured* info for use in the prepare() implementation, in addition to the "queryText" string format.
Would a simple name-value pair collection be sufficient for your use case?  And are the name-value pair values in String data type sufficient?



The value of a data set query property is currently passed to an ODA runtime driver only after a query is prepared (via the IQuery#setProperty(String, String) method). Similarly, a data set input parameter value is passed only after a query is prepared (via the IQuery set by data type methods). Some ODA runtime drivers may however need the properties or input parameter values to prepare a query. This ODA framework enhancement allows an ODA runtime driver to have access to its data set property and parameter values in a query specification, which is set before a query is prepared. 

For backward compatibility support, the existing setProperty and set parameter value API methods will continue to specify its corresponding value after a query is prepared. The availability of property and input parameter values in a QuerySpecification (experimental API) before a query is prepared, is set in addition to those set by the existing API methods. 
See the ODA API section described in http://wiki.eclipse.org/Galileo_DTP_ODA_API_Changes_Spec .


Committed in CVS the ODA framework enhancement described in Comment #5.</WithStack>
    <WithOutStack>I think it is an enhancment to the ODA API if the setProperty() function is called before the prepare() function as you can use the parameters in your prepare function then. I think the situation now is more specified to JDBC connections where you have just a String. I also think that it worth removing the Constructor from IQuery Interface then as you now have to pass on the queryString. In my case I'm writing an ODA to support SOAP. I've taken the XML ODA as an example and it struggles with the same problem that you have to put all your parameters within one string. It is far more easy when you can dynamically configure this. If you have any further questions about it you can contact me on: jan.tanis at coas dot com or jan.tanis at gmail dot com. I hope you will consider this as this will improve the API. Thanks and regards, Jan.
Hi Jan,

I'd like to understand more about the problem you are trying to solve.
&gt;&gt;"... struggles with the same problem that you have to put all your parameters within one string. It is far more easy when you can dynamically configure this.".

It sounds like you have embedded some "parameters" in the query text used in prepare, but would like to separate them out as parameters or properties, whose values can be "dynamically" assigned.  If this is the case, such dynamic values are thus needed during query execution.  Can you elaborate more on why these values are needed during query preparation instead?  
Perhaps you may want to consider using the query parameters for them, instead of properties.  The property is indeed have restricted usage, similar to java.util.Properties which also limit property values to String data type.



Linda  
Hi Linda,

The problem is that I have to prepare something with the given parameters before I can call the execute function. As you might know I'm working on a webservice ODA. To call it I have to know the following things:

WSDL - From DataSource, works fine.
Function to call - Needed in prepare to discover WSDL elements
Parameter mapping - Needed in prepare to map inputparameters

So this is why I rather see the setProperty function called before prepare. I hope this make sense to you. If you have any questions don't hesitate to contact me.

Best regards, Jan.

PS: Sorry for late reply, I've replied to this issue before, but somehow that was not posted.
I've reconsidered this issue and I think the ODA API is to much focussed on database connectivity as a querystring is required. I don't use a querystring in calling a webservice. I think it is an enhancement when the abstractionlevel is dragged above the DB level to make it easier to use other datasources.
(In reply to comment #3)

Re: your comments about the use of a query string.
The idea behind it is that a "queryText" can be any "command" used to retrieve data.
For example, a XPath query (as used in the oda.xml), a specific URL or file name (as used in oda.flatfile), a SOAP service message id (used in an ODA web service prototype we have done for testing), etc.  
In other words, it is not necessarily DB specific.

Now, we do recognize that a narrow-focus data provider may have only a single "service", and may not need to have an explicit query command to identify it.  Though this seems to be minority of use cases, from what we'd seen.

For backward compatibility of existing ODA drivers, we have to keep its definition as non-null, though an empty string is fine.  So the ODA consumer helper framework knows to convert a query text from null value to an empty string, when it passes the query text to an ODA driver.  

Re: your earlier comments on the webservice ODA you are developing:
WSDL - From DataSource, works fine.
Function to call - Needed in prepare to discover WSDL elements
Parameter mapping - Needed in prepare to map inputparameters

This seems that your use case needs to get more *structured* info for use in the prepare() implementation, in addition to the "queryText" string format.
Would a simple name-value pair collection be sufficient for your use case?  And are the name-value pair values in String data type sufficient?



The value of a data set query property is currently passed to an ODA runtime driver only after a query is prepared (via the IQuery#setProperty(String, String) method). Similarly, a data set input parameter value is passed only after a query is prepared (via the IQuery set by data type methods). Some ODA runtime drivers may however need the properties or input parameter values to prepare a query. This ODA framework enhancement allows an ODA runtime driver to have access to its data set property and parameter values in a query specification, which is set before a query is prepared. 

For backward compatibility support, the existing setProperty and set parameter value API methods will continue to specify its corresponding value after a query is prepared. The availability of property and input parameter values in a QuerySpecification (experimental API) before a query is prepared, is set in addition to those set by the existing API methods. 
See the ODA API section described in http://wiki.eclipse.org/Galileo_DTP_ODA_API_Changes_Spec .


Committed in CVS the ODA framework enhancement described in Comment #5.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125448" />
    <CreationDate amount="2006-01-27 05:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[JUnit] JUnit view's icon update not consistent</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. make sure JUnit view is closed</Line>
          <Line>2. start a test suite with many tests</Line>
          <Line>==&gt; JUnit view's icon does not change while test results come in</Line>
          <Line>3. make the view a fast view (while still running the test suite)</Line>
          <Line>==&gt; JUnit view's icon immediately shows the progress and also updates</Line>
          <Line>4. make the view a normal view again (while still running the test suite)</Line>
          <Line>==&gt; JUnit view's icon keeps last state from fast view mode and does not update</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>I20060125-0800.from20060125_1957

1. make sure JUnit view is closed
2. start a test suite with many tests
   ==&gt; JUnit view's icon does not change while test results come in
3. make the view a fast view (while still running the test suite)
   ==&gt; JUnit view's icon immediately shows the progress and also updates
4. make the view a normal view again (while still running the test suite)
   ==&gt; JUnit view's icon keeps last state from fast view mode and does not update

See also bug 70570, comment 2.

==&gt; the normal icon should be restored after step 4</WithStack>
    <WithOutStack>I20060125-0800.from20060125_1957

1. make sure JUnit view is closed
2. start a test suite with many tests
   ==&gt; JUnit view's icon does not change while test results come in
3. make the view a fast view (while still running the test suite)
   ==&gt; JUnit view's icon immediately shows the progress and also updates
4. make the view a normal view again (while still running the test suite)
   ==&gt; JUnit view's icon keeps last state from fast view mode and does not update

See also bug 70570, comment 2.

==&gt; the normal icon should be restored after step 4</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125449" />
    <CreationDate amount="2006-01-27 05:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>[javadoc] Add @since 3.2 to AbstractLineTracker</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20060125-0800

Please add @since 3.2 to members added after R3.1.
Will add a note to the class javadoc comment as the entire implementation was changed. Remove any other @since tags.
fixed already.</WithStack>
    <WithOutStack>I20060125-0800

Please add @since 3.2 to members added after R3.1.
Will add a note to the class javadoc comment as the entire implementation was changed. Remove any other @since tags.
fixed already.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125450" />
    <CreationDate amount="2006-01-27 05:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Enable conditional loading of APT</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20060125

When developping 1.4 code in Eclipse running on a 5.0 SDK the APT UI plug-in
gets loaded (activated state) through ContributedProcessorDescriptor#getProcessor(ICompilationUnit).. It should only be loaded when needed.

The JDT UI extension point should allow to express the required source level.

See also bug 125291.
ContributedProcessorDescriptor is part of the quick fix framework - what is the part jdt-text plays here?
I'll add that to the quickFixProcessor/quickAssistProcessor extension point
added a new property to test on: 'sourceCompliance'

      &lt;quickFixProcessor
            name="%exampleQuickFixProcessor.name"
            class="org.eclipse.jdt.ui.examples.MyQuickFixProcessor"
            id="org.eclipse.jdt.ui.examples.MyQuickFixProcessor"&gt;
         &lt;enablement&gt;
	           &lt;with variable="sourceCompliance"&gt;
	              &lt;or&gt;
	                 &lt;equals value="'1.5'"/&gt;
	                 &lt;equals value="'1.6'"/&gt;
	               &lt;/or&gt;
	           &lt;/with&gt;      
         &lt;/enablement&gt;
      &lt;/quickFixProcessor&gt;

(for the quickFixProcessor and for the quickAssistProcessor).

BTW, you can use this mechanism also to test on a project nature.
      &lt;quickAssistProcessor
            name="%exampleQuickAssistProcessor.name"
            class="org.eclipse.jdt.ui.examples.MyQuickAssistProcessor"
            id="org.eclipse.jdt.ui.examples.MyQuickAssistProcessor"&gt;
         &lt;enablement&gt;
           &lt;with variable="projectNatures"&gt;
              &lt;iterate operator="or"&gt;
                 &lt;equals value="org.eclipse.jdt.core.javanature"/&gt;
              &lt;/iterate&gt;
           &lt;/with&gt;
         &lt;/enablement&gt;
      &lt;/quickAssistProcessor&gt;
I also added a direct attribute 'requiredSourceLevel' to quickFix/AssistProcessors
This is similar to what Ferome added for 'compilationParticipant.exsd' and should be preferred as it is more performant.

The enablement property is also still there, It can be used for more complex enablement expressions. But I renamed it to 'sourceLevel':

 &lt;extension point="org.eclipse.jdt.ui.quickFixProcessors"&gt;
  &lt;quickFixProcessor
   id="AdvancedQuickFixProcessor"
   name="Advanced Quick Fix Processor"
   requiredSourceLevel="1.5"
   class="com.example.AdvancedQuickFixProcessor"&gt;
   &lt;handledMarkerTypes&gt;
      &lt;markerType id="org.eclipse.myplugin.spelling"/&gt;
   &lt;/handledMarkerTypes&gt;
   &lt;enablement&gt;
      &lt;with variable="projectNatures"&gt;
         &lt;iterate operator="or"&gt;
            &lt;equals value="org.eclipse.jdt.core.javanature"/&gt;
         &lt;/iterate&gt;
      &lt;/with&gt;
   &lt;/enablement&gt;
  &lt;/quickFixProcessor&gt;
 &lt;/extension&gt;</WithStack>
    <WithOutStack>I20060125

When developping 1.4 code in Eclipse running on a 5.0 SDK the APT UI plug-in
gets loaded (activated state) through ContributedProcessorDescriptor#getProcessor(ICompilationUnit).. It should only be loaded when needed.

The JDT UI extension point should allow to express the required source level.

See also bug 125291.
ContributedProcessorDescriptor is part of the quick fix framework - what is the part jdt-text plays here?
I'll add that to the quickFixProcessor/quickAssistProcessor extension point
added a new property to test on: 'sourceCompliance'

      &lt;quickFixProcessor
            name="%exampleQuickFixProcessor.name"
            class="org.eclipse.jdt.ui.examples.MyQuickFixProcessor"
            id="org.eclipse.jdt.ui.examples.MyQuickFixProcessor"&gt;
         &lt;enablement&gt;
	           &lt;with variable="sourceCompliance"&gt;
	              &lt;or&gt;
	                 &lt;equals value="'1.5'"/&gt;
	                 &lt;equals value="'1.6'"/&gt;
	               &lt;/or&gt;
	           &lt;/with&gt;      
         &lt;/enablement&gt;
      &lt;/quickFixProcessor&gt;

(for the quickFixProcessor and for the quickAssistProcessor).

BTW, you can use this mechanism also to test on a project nature.
      &lt;quickAssistProcessor
            name="%exampleQuickAssistProcessor.name"
            class="org.eclipse.jdt.ui.examples.MyQuickAssistProcessor"
            id="org.eclipse.jdt.ui.examples.MyQuickAssistProcessor"&gt;
         &lt;enablement&gt;
           &lt;with variable="projectNatures"&gt;
              &lt;iterate operator="or"&gt;
                 &lt;equals value="org.eclipse.jdt.core.javanature"/&gt;
              &lt;/iterate&gt;
           &lt;/with&gt;
         &lt;/enablement&gt;
      &lt;/quickAssistProcessor&gt;
I also added a direct attribute 'requiredSourceLevel' to quickFix/AssistProcessors
This is similar to what Ferome added for 'compilationParticipant.exsd' and should be preferred as it is more performant.

The enablement property is also still there, It can be used for more complex enablement expressions. But I renamed it to 'sourceLevel':

 &lt;extension point="org.eclipse.jdt.ui.quickFixProcessors"&gt;
  &lt;quickFixProcessor
   id="AdvancedQuickFixProcessor"
   name="Advanced Quick Fix Processor"
   requiredSourceLevel="1.5"
   class="com.example.AdvancedQuickFixProcessor"&gt;
   &lt;handledMarkerTypes&gt;
      &lt;markerType id="org.eclipse.myplugin.spelling"/&gt;
   &lt;/handledMarkerTypes&gt;
   &lt;enablement&gt;
      &lt;with variable="projectNatures"&gt;
         &lt;iterate operator="or"&gt;
            &lt;equals value="org.eclipse.jdt.core.javanature"/&gt;
         &lt;/iterate&gt;
      &lt;/with&gt;
   &lt;/enablement&gt;
  &lt;/quickFixProcessor&gt;
 &lt;/extension&gt;</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125451" />
    <CreationDate amount="2006-01-27 06:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Move RemoveLaunch actions to public API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Please add the actions to the non-internal part of the plugin, so we can reuse the actions in other ConsolePages or View:

ConsoleRemoveAllTerminatedAction
ConsoleRemoveLaunchAction
in package org.eclipse.debug.internal.ui.views.console

Refactor Proposal:
RemoveAllTerminatedLaunchesAction
RemoveTerminatedLaunchAction
in package org.eclipse.debug.ui.actions
Will consider post 3.2.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Please add the actions to the non-internal part of the plugin, so we can reuse the actions in other ConsolePages or View:

ConsoleRemoveAllTerminatedAction
ConsoleRemoveLaunchAction
in package org.eclipse.debug.internal.ui.views.console

Refactor Proposal:
RemoveAllTerminatedLaunchesAction
RemoveTerminatedLaunchAction
in package org.eclipse.debug.ui.actions
Will consider post 3.2.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125452" />
    <CreationDate amount="2006-01-27 06:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[api] factory for an IResourceProxy</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20060127

Please offer an API to create a IResourceProxy from an IResource.

In the search plugin we use the IResourceProxy in a public API:
   TextSearchScope.contains(IResourceProxy proxy)
This is essential as we use a resource visitor and have to avoid resolving resources unless really needed. Hoever, the TextSearchScope also has its uses in other contexts where users only have an IFile and want to test it against the scope.
Adding a second API TextSearchScope.contains(IResource res) would mean code duplication in an implementation of a TextSearchScope.

A method IResource.getResourceProxy() would help to keep the code simple.
Sure, why not.
Released.  Note that when you create a proxy, you are obtaining a copy of the info about that resource.  The proxy will not get updated if the resource changes.

This could actually be useful to other clients as an optimization.  Every time you call an IResource method it has to do a lookup in the workspace tree. So, if you want several pieces of information, it's likely less expensive to create a proxy and then query its state instead. The client just has to realize that if the resource is modified concurrently, the proxy will become stale.
Great.
I found that the spec of IResourceProxy should be refined and the references to 'visit' should be generalized.

 * &lt;p&gt;
 * Note that a resource proxy is a transient object that is only valid for the
 * duration of a single visit method.  A proxy should not be referenced once the
 * single resource visit is complete. The equals and hashCode methods should not
 * be relied on.
 * &lt;/p&gt;

I would change it the way to say that a resource proxy is a transient object and that clients should not hold a reference to it.

About your last comment in comment 2. The name of the class is IResourceProxy, so I wouldn't let it keep state, but really just be a proxy.
But as said as these elements are not to be kept in structures, and are therefore not long-lived, this doesn't really matter.
I have clarified the javadoc.  However, the behaviour of IResourceProxy during a visit is special so I still distinguish this in the doc.  During a visit, the same proxy object is reused, so it really cannot be referenced outside the visit method.  When IResource#createProxy is used, there is no context that we can define in which the proxy is valid.</WithStack>
    <WithOutStack>20060127

Please offer an API to create a IResourceProxy from an IResource.

In the search plugin we use the IResourceProxy in a public API:
   TextSearchScope.contains(IResourceProxy proxy)
This is essential as we use a resource visitor and have to avoid resolving resources unless really needed. Hoever, the TextSearchScope also has its uses in other contexts where users only have an IFile and want to test it against the scope.
Adding a second API TextSearchScope.contains(IResource res) would mean code duplication in an implementation of a TextSearchScope.

A method IResource.getResourceProxy() would help to keep the code simple.
Sure, why not.
Released.  Note that when you create a proxy, you are obtaining a copy of the info about that resource.  The proxy will not get updated if the resource changes.

This could actually be useful to other clients as an optimization.  Every time you call an IResource method it has to do a lookup in the workspace tree. So, if you want several pieces of information, it's likely less expensive to create a proxy and then query its state instead. The client just has to realize that if the resource is modified concurrently, the proxy will become stale.
Great.
I found that the spec of IResourceProxy should be refined and the references to 'visit' should be generalized.

 * &lt;p&gt;
 * Note that a resource proxy is a transient object that is only valid for the
 * duration of a single visit method.  A proxy should not be referenced once the
 * single resource visit is complete. The equals and hashCode methods should not
 * be relied on.
 * &lt;/p&gt;

I would change it the way to say that a resource proxy is a transient object and that clients should not hold a reference to it.

About your last comment in comment 2. The name of the class is IResourceProxy, so I wouldn't let it keep state, but really just be a proxy.
But as said as these elements are not to be kept in structures, and are therefore not long-lived, this doesn't really matter.
I have clarified the javadoc.  However, the behaviour of IResourceProxy during a visit is special so I still distinguish this in the doc.  During a visit, the same proxy object is reused, so it really cannot be referenced outside the visit method.  When IResource#createProxy is used, there is no context that we can define in which the proxy is valid.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125453" />
    <CreationDate amount="2006-01-27 06:34:00 -0500" />
    <DupId amount="73991" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Disabled filter</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When I extend org.eclipse.jdt.ui.javaElementFilters it adds the filter to the  list of filters in the package explorer, but its unselected by default, even when I choose 'true' in the 'enabled' field.
Benno, can you have a look at this?
This is a dup of bug 73991. It has been fixed in HEAD (3.2 stream).

*** This bug has been marked as a duplicate of 73991 ***</WithStack>
    <WithOutStack>When I extend org.eclipse.jdt.ui.javaElementFilters it adds the filter to the  list of filters in the package explorer, but its unselected by default, even when I choose 'true' in the 'enabled' field.
Benno, can you have a look at this?
This is a dup of bug 73991. It has been fixed in HEAD (3.2 stream).

*** This bug has been marked as a duplicate of 73991 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125454" />
    <CreationDate amount="2006-01-27 06:38:00 -0500" />
    <DupId amount="188595" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[pull up] to interface changes visibility in implementing class [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="package">
        <location start="161" end="175" />
        <code>package test1;</code>
      </source_code>
      <source_code type="import">
        <location start="176" end="201" />
        <code>import java.util.Arrays;</code>
      </source_code>
      <source_code type="class">
        <location start="203" end="338" />
        <code>public class PullUp implements IPullUp {
	private int fField;
	
	public void method() {
		fField= Arrays.hashCode ( new byte[0] );
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- the referenced field's visibility is changed to default</Line>
          <Line>- the import to java.util.Arrays is copied over to IPullUp</Line>
          <Line>Expected: method definition is pulled up, no visibility or import changes</Line>
          <Line>of course IPullUp also needs a package declaration...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20060125

Steps:
- have the following two CUs in package test1:

======= IPullUp.java ===========
public interface IPullUp {
}
======= PullUp.java ============
package test1;

import java.util.Arrays;

public class PullUp implements IPullUp {
	private int fField;
	
	public void method() {
		fField= Arrays.hashCode ( new byte[0] );
	}
}
===============================

- select method 'method' and choose refactor &gt; pull up to IPullUp

Actual result: 
 - the referenced field's visibility is changed to default
 - the import to java.util.Arrays is copied over to IPullUp
Expected: method definition is pulled up, no visibility or import changes
of course IPullUp also needs a package declaration...


*** This bug has been marked as a duplicate of bug 188595 ***</WithStack>
    <WithOutStack>I20060125

Steps:
- have the following two CUs in package test1:

======= IPullUp.java ===========
public interface IPullUp {
}
======= PullUp.java ============
package test1;

import java.util.Arrays;

public class PullUp implements IPullUp {
	private int fField;
	
	public void method() {
		fField= Arrays.hashCode ( new byte[0] );
	}
}
===============================

- select method 'method' and choose refactor &gt; pull up to IPullUp

Actual result: 
 - the referenced field's visibility is changed to default
 - the import to java.util.Arrays is copied over to IPullUp
Expected: method definition is pulled up, no visibility or import changes
of course IPullUp also needs a package declaration...


*** This bug has been marked as a duplicate of bug 188595 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125455" />
    <CreationDate amount="2006-01-27 06:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[clean up] Compile error, opening bracket after //NON-NLS</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="167" end="258" />
        <code>if (displayString.startsWith("AllTests")) //$NON-NLS-1$ {
      setIcon(this.fSuiteIcon);
}</code>
      </source_code>
      <source_code type="elsestatement">
        <location start="257" end="298" />
        <code>} else {
      setIcon(this.fLeafIcon);
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Version: 3.2.0
Build id: I20060125-0800

Take JUnit source and apply all clean ups on it (5.0 level). You get compile errors. Reasons are looking like the following:

if (displayString.startsWith("AllTests")) //$NON-NLS-1$ {
      setIcon(this.fSuiteIcon);
} else {
      setIcon(this.fLeafIcon);
}

Can't tell why yet. 'Add NON NLS tag' should allways be executed after 'Add block to single statement'. May be a problem with the clean up, may also be a problem with the ast rewrite.
fixed &gt; I20060125-0800
*** Bug 125763 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Version: 3.2.0
Build id: I20060125-0800

Take JUnit source and apply all clean ups on it (5.0 level). You get compile errors. Reasons are looking like the following:

if (displayString.startsWith("AllTests")) //$NON-NLS-1$ {
      setIcon(this.fSuiteIcon);
} else {
      setIcon(this.fLeafIcon);
}

Can't tell why yet. 'Add NON NLS tag' should allways be executed after 'Add block to single statement'. May be a problem with the clean up, may also be a problem with the ast rewrite.
fixed &gt; I20060125-0800
*** Bug 125763 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125456" />
    <CreationDate amount="2006-01-27 06:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>[typing] Copying of text not working outside print margin</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I try to copy/paste a block of text in the java code editor. As long as none of the lines go across the print margin everything is fine. 

If a line extends across the print margin nothing gets copied.
Works for me using I20060125-0800. See also:
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-text-home/development/bug-incomplete.htm</WithStack>
    <WithOutStack>I try to copy/paste a block of text in the java code editor. As long as none of the lines go across the print margin everything is fine. 

If a line extends across the print margin nothing gets copied.
Works for me using I20060125-0800. See also:
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-text-home/development/bug-incomplete.htm</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125457" />
    <CreationDate amount="2006-01-27 07:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JVM terminated error</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437330652663">
        <Exception>java.lang.ArrayStoreException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.HashMap.transfer(Unknown Source)</Frame>
          <Frame depth="1">java.util.HashMap.resize(Unknown Source)</Frame>
          <Frame depth="2">java.util.HashMap.addEntry(Unknown Source)</Frame>
          <Frame depth="3">java.util.HashMap.put(Unknown Source)</Frame>
          <Frame depth="4">org.eclipse.jdt.core.dom.DefaultBindingResolver.store(DefaultBindingResolver.java:1534)</Frame>
          <Frame depth="5">org.eclipse.jdt.core.dom.ASTConverter.recordNodes(ASTConverter.java:3459)</Frame>
          <Frame depth="6">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1888)</Frame>
          <Frame depth="7">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1533)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1894)</Frame>
          <Frame depth="9">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1533)</Frame>
          <Frame depth="10">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1894)</Frame>
          <Frame depth="11">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1533)</Frame>
          <Frame depth="12">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2309)</Frame>
          <Frame depth="13">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1052)</Frame>
          <Frame depth="14">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2210)</Frame>
          <Frame depth="15">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2577)</Frame>
          <Frame depth="16">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2306)</Frame>
          <Frame depth="17">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1052)</Frame>
          <Frame depth="18">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2397)</Frame>
          <Frame depth="19">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2252)</Frame>
          <Frame depth="20">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:502)</Frame>
          <Frame depth="21">org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:178)</Frame>
          <Frame depth="22">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2486)</Frame>
          <Frame depth="23">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1162)</Frame>
          <Frame depth="24">org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:261)</Frame>
          <Frame depth="25">org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:162)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:233)</Frame>
          <Frame depth="27">org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:488)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:956)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:61)</Frame>
          <Frame depth="30">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:718)</Frame>
          <Frame depth="31">org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:777)</Frame>
          <Frame depth="32">org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1081)</Frame>
          <Frame depth="33">org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:98)</Frame>
          <Frame depth="34">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)</Frame>
          <Frame depth="35">org.eclipse.core.runtime.Platform.run(Platform.java:783)</Frame>
          <Frame depth="36">org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:82)</Frame>
          <Frame depth="37">org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:147)</Frame>
          <Frame depth="38">org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)</Frame>
          <Frame depth="39">org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:94)</Frame>
          <Frame depth="40">org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:75)</Frame>
          <Frame depth="41">org.eclipse.jdt.internal.ui.text.JavaReconciler.process(JavaReconciler.java:339)</Frame>
          <Frame depth="42">org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:204)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437330652663">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.core.dom.InfixExpression.setLeftOperand(InfixExpression.java:432)</Frame>
          <Frame depth="1">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1033)</Frame>
          <Frame depth="2">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1521)</Frame>
          <Frame depth="3">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1688)</Frame>
          <Frame depth="4">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2234)</Frame>
          <Frame depth="5">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1691)</Frame>
          <Frame depth="6">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2234)</Frame>
          <Frame depth="7">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1052)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2210)</Frame>
          <Frame depth="9">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2577)</Frame>
          <Frame depth="10">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2306)</Frame>
          <Frame depth="11">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1052)</Frame>
          <Frame depth="12">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2397)</Frame>
          <Frame depth="13">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2252)</Frame>
          <Frame depth="14">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:502)</Frame>
          <Frame depth="15">org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:178)</Frame>
          <Frame depth="16">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2486)</Frame>
          <Frame depth="17">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1162)</Frame>
          <Frame depth="18">org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:251)</Frame>
          <Frame depth="19">org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:800)</Frame>
          <Frame depth="20">org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:588)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationSourceGenerator.createEvaluationSourceFromSource(EvaluationSourceGenerator.java:156)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationSourceGenerator.getSource(EvaluationSourceGenerator.java:202)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.getCompiledExpression(ASTEvaluationEngine.java:162)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.evaluate(ASTEvaluationEngine.java:78)</Frame>
          <Frame depth="25">org.eclipse.jdt.internal.debug.ui.JavaWatchExpressionDelegate$EvaluationRunnable.run(JavaWatchExpressionDelegate.java:144)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run(JDIThread.java:2446)</Frame>
          <Frame depth="27">org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="727" end="849" />
        <code>while(...) {
      ...
      if (....) {
      } else if (binary expression that caused the failure) {
      ....}
   }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="850" end="873" />
        <code>} catch(....) {
  ...
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>When I running eclipse JVM terminated error occurs.
  .metadata\.log follows


!ENTRY org.eclipse.jdt.ui 4 0 2006-01-27 15:43:19.796
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.ArrayStoreException
	at java.util.HashMap.transfer(Unknown Source)
	at java.util.HashMap.resize(Unknown Source)
	at java.util.HashMap.addEntry(Unknown Source)
	at java.util.HashMap.put(Unknown Source)
	at org.eclipse.jdt.core.dom.DefaultBindingResolver.store(DefaultBindingResolver.java:1534)
	at org.eclipse.jdt.core.dom.ASTConverter.recordNodes(ASTConverter.java:3459)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1888)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1533)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1894)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1533)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1894)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1533)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2309)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2210)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2577)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2306)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2397)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2252)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:502)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:178)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2486)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1162)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:261)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:162)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:233)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:488)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:956)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:61)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:718)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:777)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1081)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:98)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1044)
	at org.eclipse.core.runtime.Platform.run(Platform.java:783)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:82)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:147)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:94)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:75)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.process(JavaReconciler.java:339)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:204)
Created attachment 33697
.metadata\.log file

This appears to be JDT related (feel free to punt back if you don't agree...I'm new to the triage thing...;-).

Could you please provide the compilation unit in which the problem occured?
Could you reproduce using 3.1.2?
I also noticed the following stack trace in your .log file.
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setLeftOperand(InfixExpression.java:432)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1033)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1521)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1688)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2234)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1691)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2234)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2210)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2577)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2306)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1052)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2397)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2252)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:502)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:178)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2486)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1162)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:251)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:800)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:588)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationSourceGenerator.createEvaluationSourceFromSource(EvaluationSourceGenerator.java:156)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationSourceGenerator.getSource(EvaluationSourceGenerator.java:202)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.getCompiledExpression(ASTEvaluationEngine.java:162)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.ASTEvaluationEngine.evaluate(ASTEvaluationEngine.java:78)
	at org.eclipse.jdt.internal.debug.ui.JavaWatchExpressionDelegate$EvaluationRunnable.run(JavaWatchExpressionDelegate.java:144)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread$ThreadJob.run(JDIThread.java:2446)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)

Would you have any idea what you evaluated in the debugger to get this error?
This would be helpful to fix it.
It was a try statement with a while statement that contains two if statements.
Something like:
try {
   while(...) {
      ...
      if (....) {
      } else if (binary expression that caused the failure) {
      ....}
   }
} catch(....) {
  ...
}

The cause of the failure comes from the condition of the second if. It would be nice to get a test case.
Thanks.
Closing as REMIND.
Please reopen once you provided the requested information.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>When I running eclipse JVM terminated error occurs.
  .metadata\.log follows


!ENTRY org.eclipse.jdt.ui 4 0 2006-01-27 15:43:19.796
!MESSAGE Error in JDT Core during reconcile
!STACK 0
Created attachment 33697
.metadata\.log file

This appears to be JDT related (feel free to punt back if you don't agree...I'm new to the triage thing...;-).

Could you please provide the compilation unit in which the problem occured?
Could you reproduce using 3.1.2?
I also noticed the following stack trace in your .log file.


Would you have any idea what you evaluated in the debugger to get this error?
This would be helpful to fix it.
It was a try statement with a while statement that contains two if statements.
Something like:
try {
   while(...) {
      ...
      if (....) {
      } else if (binary expression that caused the failure) {
      ....}
   }
} catch(....) {
  ...
}

The cause of the failure comes from the condition of the second if. It would be nice to get a test case.
Thanks.
Closing as REMIND.
Please reopen once you provided the requested information.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125458" />
    <CreationDate amount="2006-01-27 07:33:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="MDT.OCL" />
    <component amount="Core" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Use proper camel case for acronyms: Ocl -&gt; OCL and Uml -&gt; UML</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Please change *all* mixed case acronyms to be upper case.  I've marked this major, because I'm sure if we don't change this immediately or very soon, we will be stuck with this unfortunate naming style forever.
Renamed old names to new names according to the following table:

Old Name	New Name
========        ========
(org.eclipse.emf.ocl.expressions)
OclExpression	OCLExpression
OclMessageArg	OCLMessageArg
OclMessageExp	OCLMessageExp

(org.eclipse.emf.ocl.types)
OclState	org.eclipse.emf.ocl.uml.OCLState

(org.eclipse.emf.ocl.uml)
UmlFactory	UMLFactory
UmlPackage	UMLPackage

(org.eclipse.emf.ocl.helper)
IOclHelper	IOCLHelper
OclParsingException	OCLParsingException

(org.eclipse.emf.query.ocl.conditions)
OclCondition	OCLCondition
OclConstraintCondition	OCLConstraintCondition

Additionally, the ocl.ecore and ocl.genmodel files in the org.eclipse.emf.ocl plug-in are renamed OCL.ecore and OCL.genmodel, respectively, and are moved from the src/model folder to a model folder at the root level of the plug-in.
Thanks for helping my OCD out.
Move to verified as per bug 206558.
Closing after over a year in verified state.
Closing after over a year in verified state.</WithStack>
    <WithOutStack>Please change *all* mixed case acronyms to be upper case.  I've marked this major, because I'm sure if we don't change this immediately or very soon, we will be stuck with this unfortunate naming style forever.
Renamed old names to new names according to the following table:

Old Name	New Name
========        ========
(org.eclipse.emf.ocl.expressions)
OclExpression	OCLExpression
OclMessageArg	OCLMessageArg
OclMessageExp	OCLMessageExp

(org.eclipse.emf.ocl.types)
OclState	org.eclipse.emf.ocl.uml.OCLState

(org.eclipse.emf.ocl.uml)
UmlFactory	UMLFactory
UmlPackage	UMLPackage

(org.eclipse.emf.ocl.helper)
IOclHelper	IOCLHelper
OclParsingException	OCLParsingException

(org.eclipse.emf.query.ocl.conditions)
OclCondition	OCLCondition
OclConstraintCondition	OCLConstraintCondition

Additionally, the ocl.ecore and ocl.genmodel files in the org.eclipse.emf.ocl plug-in are renamed OCL.ecore and OCL.genmodel, respectively, and are moved from the src/model folder to a model folder at the root level of the plug-in.
Thanks for helping my OCD out.
Move to verified as per bug 206558.
Closing after over a year in verified state.
Closing after over a year in verified state.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125459" />
    <CreationDate amount="2006-01-27 07:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Runtime" />
    <component amount="General" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Ecore editor :  EClass Generalization problem across two different ecore models</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330652663">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason>org.eclipse.emf.ecore.impl.EClassImpl</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.emf.edit.command.SetCommand.create(SetCommand.java:110)</Frame>
          <Frame depth="1">org.eclipse.emf.edit.command.SetCommand.create(SetCommand.java:89)</Frame>
          <Frame depth="2">org.eclipse.emf.edit.provider.ItemPropertyDescriptor.setPropertyValue(ItemPropertyDescriptor.java:1317)</Frame>
          <Frame depth="3">org.eclipse.gmf.runtime.emf.ui.properties.descriptors.EMFCompositeSourcePropertyDescriptor.setPropertyValue(EMFCompositeSourcePropertyDescriptor.java:426)</Frame>
          <Frame depth="4">org.eclipse.gmf.runtime.emf.ui.properties.descriptors.EMFCompositePropertySource.setPropertyValue(EMFCompositePropertySource.java:233)</Frame>
          <Frame depth="5">org.eclipse.gmf.runtime.emf.ui.properties.commands.SetModelPropertyValueCommand.doExecute(SetModelPropertyValueCommand.java:117)</Frame>
          <Frame depth="6">org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute(AbstractCommand.java:174)</Frame>
          <Frame depth="7">org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand.access$0(AbstractModelCommand.java:1)</Frame>
          <Frame depth="8">org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand$1.run(AbstractModelCommand.java:218)</Frame>
          <Frame depth="9">org.eclipse.gmf.runtime.emf.core.internal.domain.MSLEditingDomain.runAsWrite(MSLEditingDomain.java:1023)</Frame>
          <Frame depth="10">org.eclipse.gmf.runtime.emf.core.util.OperationUtil.runAsWrite(OperationUtil.java:341)</Frame>
          <Frame depth="11">org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand$2.run(AbstractModelCommand.java:228)</Frame>
          <Frame depth="12">org.eclipse.gmf.runtime.emf.core.internal.domain.MSLEditingDomain.runInUndoInterval(MSLEditingDomain.java:898)</Frame>
          <Frame depth="13">org.eclipse.gmf.runtime.emf.core.internal.domain.MSLEditingDomain.runInUndoInterval(MSLEditingDomain.java:874)</Frame>
          <Frame depth="14">org.eclipse.gmf.runtime.emf.core.util.OperationUtil.runInUndoInterval(OperationUtil.java:140)</Frame>
          <Frame depth="15">org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand.execute(AbstractModelCommand.java:223)</Frame>
          <Frame depth="16">org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand.executeCommands(CompositeModelCommand.java:319)</Frame>
          <Frame depth="17">org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand.access$1(CompositeModelCommand.java:304)</Frame>
          <Frame depth="18">org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand$1.run(CompositeModelCommand.java:250)</Frame>
          <Frame depth="19">org.eclipse.gmf.runtime.emf.core.internal.domain.MSLEditingDomain.runAsWrite(MSLEditingDomain.java:1023)</Frame>
          <Frame depth="20">org.eclipse.gmf.runtime.emf.core.util.OperationUtil.runAsWrite(OperationUtil.java:341)</Frame>
          <Frame depth="21">org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand$2.run(CompositeModelCommand.java:271)</Frame>
          <Frame depth="22">org.eclipse.gmf.runtime.emf.core.internal.domain.MSLEditingDomain.runInUndoInterval(MSLEditingDomain.java:898)</Frame>
          <Frame depth="23">org.eclipse.gmf.runtime.emf.core.internal.domain.MSLEditingDomain.runInUndoInterval(MSLEditingDomain.java:874)</Frame>
          <Frame depth="24">org.eclipse.gmf.runtime.emf.core.util.OperationUtil.runInUndoInterval(OperationUtil.java:140)</Frame>
          <Frame depth="25">org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand.execute(CompositeModelCommand.java:266)</Frame>
          <Frame depth="26">org.eclipse.gmf.runtime.emf.ui.properties.sections.UndoableModelPropertySheetEntry.valueChanged(UndoableModelPropertySheetEntry.java:192)</Frame>
          <Frame depth="27">org.eclipse.gmf.runtime.emf.ui.properties.sections.UndoableModelPropertySheetEntry.setValue(UndoableModelPropertySheetEntry.java:155)</Frame>
          <Frame depth="28">org.eclipse.gmf.runtime.emf.ui.properties.sections.UndoableModelPropertySheetEntry.applyEditorValue(UndoableModelPropertySheetEntry.java:96)</Frame>
          <Frame depth="29">org.eclipse.ui.views.properties.PropertySheetViewer.applyEditorValue(PropertySheetViewer.java:246)</Frame>
          <Frame depth="30">org.eclipse.ui.views.properties.PropertySheetViewer.handleSelect(PropertySheetViewer.java:663)</Frame>
          <Frame depth="31">org.eclipse.ui.views.properties.PropertySheetViewer.access$7(PropertySheetViewer.java:660)</Frame>
          <Frame depth="32">org.eclipse.ui.views.properties.PropertySheetViewer$5.mouseDown(PropertySheetViewer.java:769)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:133)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:920)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3287)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2907)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1790)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1754)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:400)</Frame>
          <Frame depth="41">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)</Frame>
          <Frame depth="43">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:109)</Frame>
          <Frame depth="44">org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)</Frame>
          <Frame depth="45">org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)</Frame>
          <Frame depth="46">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:373)</Frame>
          <Frame depth="47">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:168)</Frame>
          <Frame depth="48">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="49">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="50">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="51">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)</Frame>
          <Frame depth="53">org.eclipse.core.launcher.Main.basicRun(Main.java:282)</Frame>
          <Frame depth="54">org.eclipse.core.launcher.Main.run(Main.java:977)</Frame>
          <Frame depth="55">org.eclipse.core.launcher.Main.main(Main.java:952)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>I have 2 ecore diagram (so, 2 ecore models) : Base &amp; Tool.

I created an Base ecore diagram using GMF ecore editor containing a PObject 
EClass.
I created an Tool ecore diagram using GMF ecore editor containing a 
PToolComponent EClass.

I want a generalization like : Tool.PToolComponent -&gt; Base.PObject.

I tried to set Tool.PToolComponent  ESuperTypes EMF attribute  with "PObject 
"  from the combo in the properties view.

This operation leads to an exception (see below).

Is it the right way to do ?

If NO, let me know how to do.
If YES, I will raise a bugzilla against the ecore editor since for me it is 
a bug.

regards,

==================================================
java.lang.ClassCastException: org.eclipse.emf.ecore.impl.EClassImpl
 at org.eclipse.emf.edit.command.SetCommand.create(SetCommand.java:110)
 at org.eclipse.emf.edit.command.SetCommand.create(SetCommand.java:89)
 at 
org.eclipse.emf.edit.provider.ItemPropertyDescriptor.setPropertyValue(ItemPropertyDescriptor.java:1317)
 at 
org.eclipse.gmf.runtime.emf.ui.properties.descriptors.EMFCompositeSourcePropertyDescriptor.setPropertyValue(EMFCompositeSourcePropertyDescriptor.java:426)
 at 
org.eclipse.gmf.runtime.emf.ui.properties.descriptors.EMFCompositePropertySource.setPropertyValue(EMFCompositePropertySource.java:233)
 at 
org.eclipse.gmf.runtime.emf.ui.properties.commands.SetModelPropertyValueCommand.doExecute(SetModelPropertyValueCommand.java:117)
 at 
org.eclipse.gmf.runtime.common.core.command.AbstractCommand.execute(AbstractCommand.java:174)
 at 
org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand.access$0(AbstractModelCommand.java:1)
 at 
org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand$1.run(AbstractModelCommand.java:218)
 at 
org.eclipse.gmf.runtime.emf.core.internal.domain.MSLEditingDomain.runAsWrite(MSLEditingDomain.java:1023)
 at 
org.eclipse.gmf.runtime.emf.core.util.OperationUtil.runAsWrite(OperationUtil.java:341)
 at 
org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand$2.run(AbstractModelCommand.java:228)
 at 
org.eclipse.gmf.runtime.emf.core.internal.domain.MSLEditingDomain.runInUndoInterval(MSLEditingDomain.java:898)
 at 
org.eclipse.gmf.runtime.emf.core.internal.domain.MSLEditingDomain.runInUndoInterval(MSLEditingDomain.java:874)
 at 
org.eclipse.gmf.runtime.emf.core.util.OperationUtil.runInUndoInterval(OperationUtil.java:140)
 at 
org.eclipse.gmf.runtime.emf.commands.core.command.AbstractModelCommand.execute(AbstractModelCommand.java:223)
 at 
org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand.executeCommands(CompositeModelCommand.java:319)
 at 
org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand.access$1(CompositeModelCommand.java:304)
 at 
org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand$1.run(CompositeModelCommand.java:250)
 at 
org.eclipse.gmf.runtime.emf.core.internal.domain.MSLEditingDomain.runAsWrite(MSLEditingDomain.java:1023)
 at 
org.eclipse.gmf.runtime.emf.core.util.OperationUtil.runAsWrite(OperationUtil.java:341)
 at 
org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand$2.run(CompositeModelCommand.java:271)
 at 
org.eclipse.gmf.runtime.emf.core.internal.domain.MSLEditingDomain.runInUndoInterval(MSLEditingDomain.java:898)
 at 
org.eclipse.gmf.runtime.emf.core.internal.domain.MSLEditingDomain.runInUndoInterval(MSLEditingDomain.java:874)
 at 
org.eclipse.gmf.runtime.emf.core.util.OperationUtil.runInUndoInterval(OperationUtil.java:140)
 at 
org.eclipse.gmf.runtime.emf.commands.core.command.CompositeModelCommand.execute(CompositeModelCommand.java:266)
 at 
org.eclipse.gmf.runtime.emf.ui.properties.sections.UndoableModelPropertySheetEntry.valueChanged(UndoableModelPropertySheetEntry.java:192)
 at 
org.eclipse.gmf.runtime.emf.ui.properties.sections.UndoableModelPropertySheetEntry.setValue(UndoableModelPropertySheetEntry.java:155)
 at 
org.eclipse.gmf.runtime.emf.ui.properties.sections.UndoableModelPropertySheetEntry.applyEditorValue(UndoableModelPropertySheetEntry.java:96)
 at 
org.eclipse.ui.views.properties.PropertySheetViewer.applyEditorValue(PropertySheetViewer.java:246)
 at 
org.eclipse.ui.views.properties.PropertySheetViewer.handleSelect(PropertySheetViewer.java:663)
 at 
org.eclipse.ui.views.properties.PropertySheetViewer.access$7(PropertySheetViewer.java:660)
 at 
org.eclipse.ui.views.properties.PropertySheetViewer$5.mouseDown(PropertySheetViewer.java:769)
 at 
org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:133)
 at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
 at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:920)
 at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3287)
 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2907)
 at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1790)
 at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1754)
 at 
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:400)
 at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
 at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)
 at 
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:109)
 at 
org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)
 at 
org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)
 at 
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:373)
 at 
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:168)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
 at java.lang.reflect.Method.invoke(Unknown Source)
 at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)
 at org.eclipse.core.launcher.Main.basicRun(Main.java:282)
 at org.eclipse.core.launcher.Main.run(Main.java:977)
 at org.eclipse.core.launcher.Main.main(Main.java:952)
Created attachment 33718
patch for the runtime
Seems like this is a problem in a runtime code. Incorrect CellEditor will be created for features which has isMany() == true. I've copied corresponding code from the parent class (org.eclipse.emf.edit.ui.provider.PropertyDescriptor) and it start working. 

BTW, the code in EMFCompositeSourcePropertyDescriptor.doCreateEditor() looks very similar to the code from PropertyDescriptor.createPropertyEditor(). Can we reuse code from superclass at least in some cases instead of duplicatin it locally?
Concerning the valid way to create generatization link to an element from another model, you can use "create shortcut" dialog to create a referenc to an element from another model on your diagram and then use palette tool to drae generalization link.

If an issue with cell editor will be fixed, you'll probably face another problem in property view: https://bugs.eclipse.org/bugs/show_bug.cgi?id=124806

But with possibiltity to create shortcut on diagram you can work around this issue.
Assigning to common component
Related to Bug 141314 ?
Bug 140070 , Bug 125459 and Bug 141314 are all related to EMFCompositeSourcePropertyDescriptor
*** Bug 141314 has been marked as a duplicate of this bug. ***
There is indeed an unfortunate amount of code duplication in the
EMFCompositeSourcePropertyDescriptor from it's superclass. As far as I can
tell, this was done to provide subclasses with a finer granularity of
overridable behaviour from what EMF provides.  Without having looked into it in
great detail, I'd guess that clients should be customizing their item property
descriptors rather than subclassing the methods in
EMFCompositeSourcePropertyDescriptor.  I've opened bug 152765 to track this
part of the problem separately, since it looks like it will involve changes to the API.
Committed the patch (with some minor changes to the organization of the new code).

Verified in the Mindmap example that the dialog cell editor can be used to edit multi-valued properties like Thread resources.
close
[GMF Restructure] Bug 319140 : product GMF and component
Runtime Common was the original product and component for this bug</WithStack>
    <WithOutStack>I have 2 ecore diagram (so, 2 ecore models) : Base &amp; Tool.

I created an Base ecore diagram using GMF ecore editor containing a PObject 
EClass.
I created an Tool ecore diagram using GMF ecore editor containing a 
PToolComponent EClass.

I want a generalization like : Tool.PToolComponent -&gt; Base.PObject.

I tried to set Tool.PToolComponent  ESuperTypes EMF attribute  with "PObject 
"  from the combo in the properties view.

This operation leads to an exception (see below).

Is it the right way to do ?

If NO, let me know how to do.
If YES, I will raise a bugzilla against the ecore editor since for me it is 
a bug.

regards,

==================================================

Created attachment 33718
patch for the runtime
Seems like this is a problem in a runtime code. Incorrect CellEditor will be created for features which has isMany() == true. I've copied corresponding code from the parent class (org.eclipse.emf.edit.ui.provider.PropertyDescriptor) and it start working. 

BTW, the code in EMFCompositeSourcePropertyDescriptor.doCreateEditor() looks very similar to the code from PropertyDescriptor.createPropertyEditor(). Can we reuse code from superclass at least in some cases instead of duplicatin it locally?
Concerning the valid way to create generatization link to an element from another model, you can use "create shortcut" dialog to create a referenc to an element from another model on your diagram and then use palette tool to drae generalization link.

If an issue with cell editor will be fixed, you'll probably face another problem in property view: https://bugs.eclipse.org/bugs/show_bug.cgi?id=124806

But with possibiltity to create shortcut on diagram you can work around this issue.
Assigning to common component
Related to Bug 141314 ?
Bug 140070 , Bug 125459 and Bug 141314 are all related to EMFCompositeSourcePropertyDescriptor
*** Bug 141314 has been marked as a duplicate of this bug. ***
There is indeed an unfortunate amount of code duplication in the
EMFCompositeSourcePropertyDescriptor from it's superclass. As far as I can
tell, this was done to provide subclasses with a finer granularity of
overridable behaviour from what EMF provides.  Without having looked into it in
great detail, I'd guess that clients should be customizing their item property
descriptors rather than subclassing the methods in
EMFCompositeSourcePropertyDescriptor.  I've opened bug 152765 to track this
part of the problem separately, since it looks like it will involve changes to the API.
Committed the patch (with some minor changes to the organization of the new code).

Verified in the Mindmap example that the dialog cell editor can be used to edit multi-valued properties like Thread resources.
close
[GMF Restructure] Bug 319140 : product GMF and component
Runtime Common was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125460" />
    <CreationDate amount="2006-01-27 07:38:00 -0500" />
    <DupId amount="125431" />
    <classification amount="BIRT" />
    <Product amount="BIRT" />
    <component amount="Report Engine" />
    <Version amount="2.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>EXTENSION_POINT_NOT_FOUND message</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Every time I gen my report (on 2.0.0 release), it works but I get:

Jan 26, 2006 3:48:11 PM org.eclipse.birt.report.model.metadata.ExtensionLoader load
SEVERE: Message:The extension point [org.eclipse.birt.report.model.encryptionHelper] is not found. Error code:EXTENSION_POINT_NOT_FOUND
Created attachment 33698
design file

Report works fine, but this message shows on the Console


*** This bug has been marked as a duplicate of 125431 ***
Verified this bug.</WithStack>
    <WithOutStack>Every time I gen my report (on 2.0.0 release), it works but I get:

Jan 26, 2006 3:48:11 PM org.eclipse.birt.report.model.metadata.ExtensionLoader load
SEVERE: Message:The extension point [org.eclipse.birt.report.model.encryptionHelper] is not found. Error code:EXTENSION_POINT_NOT_FOUND
Created attachment 33698
design file

Report works fine, but this message shows on the Console


*** This bug has been marked as a duplicate of 125431 ***
Verified this bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125461" />
    <CreationDate amount="2006-01-27 07:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Static Analysis" />
    <component amount="Platform.Analysis" />
    <Version amount="4.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Add/update copyright notices to all files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Some files (HTML and schema files) are missing copyright notices.
Added copyrights to new analysis framework files
closed</WithStack>
    <WithOutStack>Some files (HTML and schema files) are missing copyright notices.
Added copyrights to new analysis framework files
closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125462" />
    <CreationDate amount="2006-01-27 07:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[api][javadoc] Finalize API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- remove the xxx comment</Line>
          <Line>- make sure @since 3.2 tag(s) are added</Line>
          <Line>- make sure to update the component.xml file</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>This is a list of APIs that need to be finalized for 3.2. M5
- remove the xxx comment
- make sure @since 3.2 tag(s) are added
- make sure to update the component.xml file

ChangeRegion.java
ContentAssistEvent.java
ICompletionListener.java
IRevisionRulerColumn.java
Revision.java
RevisionInformation.java
DiffPainter.java
IAnnotationHoverExtension2.java
ContentAssistant.java
ChangeRulerColumn.fMouseHandler
ChangeRulerColumn.javaRevisionPainter
CompositeRuler.java
LineNumberChangeRulerColumn.java (various new stuff without since tag)
LineNumberRulerColumn.java (various new stuff without since tag)

more to come...
HippieProposalProcessor.java
IContentAssistantExtension2.java
AbstractDecoratedTextEditor.showRevisionInformation(...)
AbstractDecoratedTextEditor.hideRevisionInformation()
AbstractDecoratedTextEditor.getRevisionColumn
AbstractDecoratedTextEditor.ensureQuickDiffProvider (private)
AbstractDecoratedTextEditor.getShowInMenuLabel
AbstractDecoratedTextEditor.createAnnotationRulerColumn
org.eclipse.jdt.ui/schema - javaCompletionProposalComputer.exsd
org.eclipse.jdt.ui/schema - javaCompletionProposalSorters.exsd
DefaultJavaFoldingStructureProvider
IJavaFoldingStructureProviderExtension
CompletionProposalCollector.setInvocationContext
CompletionProposalCollector.getInvocationContext
ContentAssistInvocationContext
IJavaCompletionProposalComputer
JavaContentAssistInvocationContext
AbstractProposalSorter.java
fixed up to comment 4 - please reopen for more missing items.
starting verification...
Found bug 127737 for missing methods in text editor interface.
Verified in I20060214-0010.
Made some minor additions for I20060215-1200.</WithStack>
    <WithOutStack>This is a list of APIs that need to be finalized for 3.2. M5
- remove the xxx comment
- make sure @since 3.2 tag(s) are added
- make sure to update the component.xml file

ChangeRegion.java
ContentAssistEvent.java
ICompletionListener.java
IRevisionRulerColumn.java
Revision.java
RevisionInformation.java
DiffPainter.java
IAnnotationHoverExtension2.java
ContentAssistant.java
ChangeRulerColumn.fMouseHandler
ChangeRulerColumn.javaRevisionPainter
CompositeRuler.java
LineNumberChangeRulerColumn.java (various new stuff without since tag)
LineNumberRulerColumn.java (various new stuff without since tag)

more to come...
HippieProposalProcessor.java
IContentAssistantExtension2.java
AbstractDecoratedTextEditor.showRevisionInformation(...)
AbstractDecoratedTextEditor.hideRevisionInformation()
AbstractDecoratedTextEditor.getRevisionColumn
AbstractDecoratedTextEditor.ensureQuickDiffProvider (private)
AbstractDecoratedTextEditor.getShowInMenuLabel
AbstractDecoratedTextEditor.createAnnotationRulerColumn
org.eclipse.jdt.ui/schema - javaCompletionProposalComputer.exsd
org.eclipse.jdt.ui/schema - javaCompletionProposalSorters.exsd
DefaultJavaFoldingStructureProvider
IJavaFoldingStructureProviderExtension
CompletionProposalCollector.setInvocationContext
CompletionProposalCollector.getInvocationContext
ContentAssistInvocationContext
IJavaCompletionProposalComputer
JavaContentAssistInvocationContext
AbstractProposalSorter.java
fixed up to comment 4 - please reopen for more missing items.
starting verification...
Found bug 127737 for missing methods in text editor interface.
Verified in I20060214-0010.
Made some minor additions for I20060215-1200.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125463" />
    <CreationDate amount="2006-01-27 08:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Profiling" />
    <component amount="Platform.Agents.JVMPI" />
    <Version amount="4.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows Server 2003" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>jvm crash when using piAgent::server=standalone (JBoss 3.2.5)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="35">
        <Lines>
          <Line>- locked &lt;0x183106d0&gt; (a java.util.zip.Inflater)</Line>
          <Line>at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:128)</Line>
          <Line>at java.util.zip.ZipInputStream.read(ZipInputStream.java:139)</Line>
          <Line>at java.util.zip.ZipInputStream.closeEntry(ZipInputStream.java:91)</Line>
          <Line>at java.util.zip.ZipInputStream.getNextEntry(ZipInputStream.java:69)</Line>
          <Line>at org.jboss.mx.loading.ClassLoaderUtils$ClassPathIterator.getNextEntry(ClassLoaderUtils.java:563)</Line>
          <Line>at org.jboss.mx.loading.ClassLoaderUtils.updatePackageMap(ClassLoaderUtils.java:275)</Line>
          <Line>at org.jboss.mx.loading.ClassLoaderUtils.updatePackageMap(ClassLoaderUtils.java:229)</Line>
          <Line>at org.jboss.mx.loading.UnifiedLoaderRepository3.updatePackageMap(UnifiedLoaderRepository3.java:748)</Line>
          <Line>- locked &lt;0x175688f0&gt; (a java.util.HashMap)</Line>
          <Line>at org.jboss.mx.loading.UnifiedLoaderRepository3.addClassLoaderURL(UnifiedLoaderRepository3.java:673)</Line>
          <Line>- locked &lt;0x175684a8&gt; (a java.util.HashSet)</Line>
          <Line>at org.jboss.mx.loading.UnifiedClassLoader.addURL(UnifiedClassLoader.java:235)</Line>
          <Line>at org.jboss.deployment.DeploymentInfo.createClassLoaders(DeploymentInfo.java:247)</Line>
          <Line>at org.jboss.deployment.MainDeployer.init(MainDeployer.java:702)</Line>
          <Line>at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:635)</Line>
          <Line>at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:608)</Line>
          <Line>at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:592)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Line>
          <Line>at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Line>
          <Line>at java.lang.reflect.Method.invoke(Method.java:324)</Line>
          <Line>at org.jboss.mx.server.ReflectedDispatcher.dispatch(ReflectedDispatcher.java:60)</Line>
          <Line>at org.jboss.mx.server.Invocation.dispatch(Invocation.java:61)</Line>
          <Line>at org.jboss.mx.server.Invocation.dispatch(Invocation.java:53)</Line>
          <Line>at org.jboss.mx.server.Invocation.invoke(Invocation.java:86)</Line>
          <Line>at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:185)</Line>
          <Line>at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:473)</Line>
          <Line>at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:176)</Line>
          <Line>at $Proxy5.deploy(Unknown Source)</Line>
          <Line>at org.jboss.system.server.ServerImpl.doStart(ServerImpl.java:407)</Line>
          <Line>at org.jboss.system.server.ServerImpl.start(ServerImpl.java:311)</Line>
          <Line>at org.jboss.Main.boot(Main.java:145)</Line>
          <Line>at org.jboss.Main$1.run(Main.java:399)</Line>
          <Line>at java.lang.Thread.run(Thread.java:534)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hi

I have the following crash when i try to launch jboss with piAgent using option server=standalone

Config :

Windows 2003 server
JVM 1.4.2.05
JBoss 3.2.5

i'm using JavaServiceWrapper to launch the jvm in a console mode (not as service but i have the same crash if i try to launch as service)

jvm doesn't crash if i use piAgent:server=enabled 

log file follow ... 

--&gt; Wrapper Started as Console
Launching a JVM...
Wrapper (Version 3.1.2) http://wrapper.tanukisoftware.org

13:03:45,627 INFO  [Server] Starting JBoss (MX MicroKernel)...
13:03:45,627 INFO  [Server] Release ID: JBoss [WonderLand] 3.2.5 (build: CVSTag=JBoss_3_2_5 date=200406251954)
13:03:45,643 INFO  [Server] Home Dir: D:\jboss-3.2.5
13:03:45,643 INFO  [Server] Home URL: file:/D:/jboss-3.2.5/
13:03:45,643 INFO  [Server] Library URL: file:/D:/jboss-3.2.5/lib/
13:03:45,643 INFO  [Server] Patch URL: null
13:03:45,643 INFO  [Server] Server Name: jboss-03
13:03:45,659 INFO  [Server] Server Home Dir: D:\jboss-3.2.5\server\jboss-03
13:03:45,659 INFO  [Server] Server Home URL: file:/D:/jboss-3.2.5/server/jboss-03/
13:03:45,659 INFO  [Server] Server Data Dir: D:\jboss-3.2.5\server\jboss-03\data
13:03:45,659 INFO  [Server] Server Temp Dir: D:\jboss-3.2.5\server\jboss-03\tmp
13:03:45,659 INFO  [Server] Server Config URL: file:/D:/jboss-3.2.5/server/jboss-03/conf/
13:03:45,674 INFO  [Server] Server Library URL: file:/D:/jboss-3.2.5/server/jboss-03/lib/
13:03:45,674 INFO  [Server] Root Deployment Filename: jboss-service.xml
13:03:45,690 INFO  [Server] Starting General Purpose Architecture (GPA)...
13:03:47,174 INFO  [ServerInfo] Java version: 1.4.2_05,Sun Microsystems Inc.
13:03:47,190 INFO  [ServerInfo] Java VM: Java HotSpot(TM) Server VM 1.4.2_05-b04,Sun Microsystems Inc.
13:03:47,190 INFO  [ServerInfo] OS-System: Windows 2003 5.2,x86
13:03:52,674 INFO  [Server] Core system initialized

Unexpected Signal : EXCEPTION_ACCESS_VIOLATION (0xc0000005) occurred at PC=0x8138550
Function=JVM_FindSignal+0x161D0
Library=C:\j2sdk1.4.2_05\jre\bin\server\jvm.dll

Current Java thread:
	at java.util.zip.Inflater.inflateBytes(Native Method)
	at java.util.zip.Inflater.inflate(Inflater.java:219)
	- locked &lt;0x183106d0&gt; (a java.util.zip.Inflater)
	at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:128)
	at java.util.zip.ZipInputStream.read(ZipInputStream.java:139)
	at java.util.zip.ZipInputStream.closeEntry(ZipInputStream.java:91)
	at java.util.zip.ZipInputStream.getNextEntry(ZipInputStream.java:69)
	at org.jboss.mx.loading.ClassLoaderUtils$ClassPathIterator.getNextEntry(ClassLoaderUtils.java:563)
	at org.jboss.mx.loading.ClassLoaderUtils.updatePackageMap(ClassLoaderUtils.java:275)
	at org.jboss.mx.loading.ClassLoaderUtils.updatePackageMap(ClassLoaderUtils.java:229)
	at org.jboss.mx.loading.UnifiedLoaderRepository3.updatePackageMap(UnifiedLoaderRepository3.java:748)
	- locked &lt;0x175688f0&gt; (a java.util.HashMap)
	at org.jboss.mx.loading.UnifiedLoaderRepository3.addClassLoaderURL(UnifiedLoaderRepository3.java:673)
	- locked &lt;0x175684a8&gt; (a java.util.HashSet)
	at org.jboss.mx.loading.UnifiedClassLoader.addURL(UnifiedClassLoader.java:235)
	at org.jboss.deployment.DeploymentInfo.createClassLoaders(DeploymentInfo.java:247)
	at org.jboss.deployment.MainDeployer.init(MainDeployer.java:702)
	at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:635)
	at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:608)
	at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:592)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.jboss.mx.server.ReflectedDispatcher.dispatch(ReflectedDispatcher.java:60)
	at org.jboss.mx.server.Invocation.dispatch(Invocation.java:61)
	at org.jboss.mx.server.Invocation.dispatch(Invocation.java:53)
	at org.jboss.mx.server.Invocation.invoke(Invocation.java:86)
	at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:185)
	at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:473)
	at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:176)
	at $Proxy5.deploy(Unknown Source)
	at org.jboss.system.server.ServerImpl.doStart(ServerImpl.java:407)
	at org.jboss.system.server.ServerImpl.start(ServerImpl.java:311)
	at org.jboss.Main.boot(Main.java:145)
	at org.jboss.Main$1.run(Main.java:399)
	at java.lang.Thread.run(Thread.java:534)

Dynamic libraries:
0x00400000 - 0x0040B000 	C:\j2sdk1.4.2_05\bin\java.exe
0x7C920000 - 0x7C9E6000 	C:\WINDOWS\system32\ntdll.dll
0x7C800000 - 0x7C912000 	C:\WINDOWS\system32\kernel32.dll
0x77D70000 - 0x77E1E000 	C:\WINDOWS\system32\ADVAPI32.dll
0x77C20000 - 0x77CBF000 	C:\WINDOWS\system32\RPCRT4.dll
0x77B70000 - 0x77BCA000 	C:\WINDOWS\system32\MSVCRT.dll
0x08000000 - 0x082AF000 	C:\j2sdk1.4.2_05\jre\bin\server\jvm.dll
0x77F30000 - 0x77FC2000 	C:\WINDOWS\system32\USER32.dll
0x77BD0000 - 0x77C18000 	C:\WINDOWS\system32\GDI32.dll
0x76A50000 - 0x76A7F000 	C:\WINDOWS\system32\WINMM.dll
0x71A90000 - 0x71A98000 	C:\WINDOWS\system32\rdpsnd.dll
0x77980000 - 0x77991000 	C:\WINDOWS\system32\WINSTA.dll
0x71B10000 - 0x71B68000 	C:\WINDOWS\system32\NETAPI32.dll
0x76B20000 - 0x76B2B000 	C:\WINDOWS\system32\PSAPI.DLL
0x10000000 - 0x10007000 	C:\j2sdk1.4.2_05\jre\bin\hpi.dll
0x00380000 - 0x0038E000 	C:\j2sdk1.4.2_05\jre\bin\verify.dll
0x00390000 - 0x003A9000 	C:\j2sdk1.4.2_05\jre\bin\java.dll
0x003C0000 - 0x003CD000 	C:\j2sdk1.4.2_05\jre\bin\zip.dll
0x02EF0000 - 0x02F86000 	D:\profiler\bin\piAgent.dll
0x71AD0000 - 0x71AE7000 	C:\WINDOWS\system32\WS2_32.dll
0x71AC0000 - 0x71AC8000 	C:\WINDOWS\system32\WS2HELP.dll
0x00960000 - 0x0096B000 	D:\profiler\bin\hcclco.dll
0x02F90000 - 0x02F98000 	D:\profiler\bin\hccldt.dll
0x02FA0000 - 0x02FB1000 	D:\profiler\bin\hcclsm.dll
0x02FC0000 - 0x02FCD000 	D:\profiler\bin\hccls.dll
0x02FD0000 - 0x02FDB000 	D:\profiler\bin\hcbnd.dll
0x719F0000 - 0x71A32000 	C:\WINDOWS\System32\mswsock.dll
0x76E80000 - 0x76EAA000 	C:\WINDOWS\system32\DNSAPI.dll
0x76F20000 - 0x76F27000 	C:\WINDOWS\System32\winrnr.dll
0x76EC0000 - 0x76EEF000 	C:\WINDOWS\system32\WLDAP32.dll
0x76F30000 - 0x76F35000 	C:\WINDOWS\system32\rasadhlp.dll
0x03C60000 - 0x03C72000 	D:\jboss-3.2.5\lib\wrapper.dll
0x03D10000 - 0x03D1F000 	C:\j2sdk1.4.2_05\jre\bin\net.dll
0x5D3D0000 - 0x5D42A000 	C:\WINDOWS\system32\hnetcfg.dll
0x719B0000 - 0x719B8000 	C:\WINDOWS\System32\wshtcpip.dll
0x76BC0000 - 0x76BE9000 	C:\WINDOWS\system32\imagehlp.dll
0x6D850000 - 0x6D8F8000 	C:\WINDOWS\system32\dbghelp.dll
0x77B60000 - 0x77B68000 	C:\WINDOWS\system32\VERSION.dll

Heap at VM Abort:
Heap
 def new generation   total 52480K, used 52480K [0x10010000, 0x13900000, 0x171d0000)
  eden space 46656K, 100% used [0x10010000, 0x12da0000, 0x12da0000)
  from space 5824K, 100% used [0x12da0000, 0x13350000, 0x13350000)
  to   space 5824K,   0% used [0x13350000, 0x13350000, 0x13900000)
 tenured generation   total 466048K, used 17870K [0x171d0000, 0x338f0000, 0x50010000)
   the space 466048K,   3% used [0x171d0000, 0x18343b20, 0x18343c00, 0x338f0000)
 compacting perm gen  total 16384K, used 4547K [0x50010000, 0x51010000, 0x54010000)
   the space 16384K,  27% used [0x50010000, 0x50480c48, 0x50480e00, 0x51010000)

Local Time = Fri Jan 27 13:03:56 2006
Elapsed Time = 11
#
# HotSpot Virtual Machine Error : EXCEPTION_ACCESS_VIOLATION
# Error ID : 4F530E43505002EF
# Please report this error at
# http://java.sun.com/cgi-bin/bugreport.cgi
#
# Java VM: Java HotSpot(TM) Server VM (1.4.2_05-b04 mixed mode)
#
# An error report file has been saved as hs_err_pid9600.log.
# Please refer to the file for further information.
#
JVM exited unexpectedly.
CTRL-C trapped.  Shutting down.
&lt;-- Wrapper Stopped
As per today's data collection call: defer normal defects to 4.3
Not containable in 4.3 and retargetting to 4.4 as per Oct 26 Platform Collection &amp; Communication Meeting. This was of major or lower sev and never made the cut for a specific iteration over the life of 4.3.
cleaning up assignees
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. Since this defect is more than 2 years old, it may be no longer relevant. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this defect is resolved as WONTFIX. If this defect is still relevant and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Hi

I have the following crash when i try to launch jboss with piAgent using option server=standalone

Config :

Windows 2003 server
JVM 1.4.2.05
JBoss 3.2.5

i'm using JavaServiceWrapper to launch the jvm in a console mode (not as service but i have the same crash if i try to launch as service)

jvm doesn't crash if i use piAgent:server=enabled 

log file follow ... 

--&gt; Wrapper Started as Console
Launching a JVM...
Wrapper (Version 3.1.2) http://wrapper.tanukisoftware.org

13:03:45,627 INFO  [Server] Starting JBoss (MX MicroKernel)...
13:03:45,627 INFO  [Server] Release ID: JBoss [WonderLand] 3.2.5 (build: CVSTag=JBoss_3_2_5 date=200406251954)
13:03:45,643 INFO  [Server] Home Dir: D:\jboss-3.2.5
13:03:45,643 INFO  [Server] Home URL: file:/D:/jboss-3.2.5/
13:03:45,643 INFO  [Server] Library URL: file:/D:/jboss-3.2.5/lib/
13:03:45,643 INFO  [Server] Patch URL: null
13:03:45,643 INFO  [Server] Server Name: jboss-03
13:03:45,659 INFO  [Server] Server Home Dir: D:\jboss-3.2.5\server\jboss-03
13:03:45,659 INFO  [Server] Server Home URL: file:/D:/jboss-3.2.5/server/jboss-03/
13:03:45,659 INFO  [Server] Server Data Dir: D:\jboss-3.2.5\server\jboss-03\data
13:03:45,659 INFO  [Server] Server Temp Dir: D:\jboss-3.2.5\server\jboss-03\tmp
13:03:45,659 INFO  [Server] Server Config URL: file:/D:/jboss-3.2.5/server/jboss-03/conf/
13:03:45,674 INFO  [Server] Server Library URL: file:/D:/jboss-3.2.5/server/jboss-03/lib/
13:03:45,674 INFO  [Server] Root Deployment Filename: jboss-service.xml
13:03:45,690 INFO  [Server] Starting General Purpose Architecture (GPA)...
13:03:47,174 INFO  [ServerInfo] Java version: 1.4.2_05,Sun Microsystems Inc.
13:03:47,190 INFO  [ServerInfo] Java VM: Java HotSpot(TM) Server VM 1.4.2_05-b04,Sun Microsystems Inc.
13:03:47,190 INFO  [ServerInfo] OS-System: Windows 2003 5.2,x86
13:03:52,674 INFO  [Server] Core system initialized

Unexpected Signal : EXCEPTION_ACCESS_VIOLATION (0xc0000005) occurred at PC=0x8138550
Function=JVM_FindSignal+0x161D0
Library=C:\j2sdk1.4.2_05\jre\bin\server\jvm.dll

Current Java thread:
	at java.util.zip.Inflater.inflateBytes(Native Method)
	at java.util.zip.Inflater.inflate(Inflater.java:219)
	- locked &lt;0x183106d0&gt; (a java.util.zip.Inflater)
	at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:128)
	at java.util.zip.ZipInputStream.read(ZipInputStream.java:139)
	at java.util.zip.ZipInputStream.closeEntry(ZipInputStream.java:91)
	at java.util.zip.ZipInputStream.getNextEntry(ZipInputStream.java:69)
	at org.jboss.mx.loading.ClassLoaderUtils$ClassPathIterator.getNextEntry(ClassLoaderUtils.java:563)
	at org.jboss.mx.loading.ClassLoaderUtils.updatePackageMap(ClassLoaderUtils.java:275)
	at org.jboss.mx.loading.ClassLoaderUtils.updatePackageMap(ClassLoaderUtils.java:229)
	at org.jboss.mx.loading.UnifiedLoaderRepository3.updatePackageMap(UnifiedLoaderRepository3.java:748)
	- locked &lt;0x175688f0&gt; (a java.util.HashMap)
	at org.jboss.mx.loading.UnifiedLoaderRepository3.addClassLoaderURL(UnifiedLoaderRepository3.java:673)
	- locked &lt;0x175684a8&gt; (a java.util.HashSet)
	at org.jboss.mx.loading.UnifiedClassLoader.addURL(UnifiedClassLoader.java:235)
	at org.jboss.deployment.DeploymentInfo.createClassLoaders(DeploymentInfo.java:247)
	at org.jboss.deployment.MainDeployer.init(MainDeployer.java:702)
	at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:635)
	at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:608)
	at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:592)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.jboss.mx.server.ReflectedDispatcher.dispatch(ReflectedDispatcher.java:60)
	at org.jboss.mx.server.Invocation.dispatch(Invocation.java:61)
	at org.jboss.mx.server.Invocation.dispatch(Invocation.java:53)
	at org.jboss.mx.server.Invocation.invoke(Invocation.java:86)
	at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:185)
	at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:473)
	at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:176)
	at $Proxy5.deploy(Unknown Source)
	at org.jboss.system.server.ServerImpl.doStart(ServerImpl.java:407)
	at org.jboss.system.server.ServerImpl.start(ServerImpl.java:311)
	at org.jboss.Main.boot(Main.java:145)
	at org.jboss.Main$1.run(Main.java:399)
	at java.lang.Thread.run(Thread.java:534)

Dynamic libraries:
0x00400000 - 0x0040B000 	C:\j2sdk1.4.2_05\bin\java.exe
0x7C920000 - 0x7C9E6000 	C:\WINDOWS\system32\ntdll.dll
0x7C800000 - 0x7C912000 	C:\WINDOWS\system32\kernel32.dll
0x77D70000 - 0x77E1E000 	C:\WINDOWS\system32\ADVAPI32.dll
0x77C20000 - 0x77CBF000 	C:\WINDOWS\system32\RPCRT4.dll
0x77B70000 - 0x77BCA000 	C:\WINDOWS\system32\MSVCRT.dll
0x08000000 - 0x082AF000 	C:\j2sdk1.4.2_05\jre\bin\server\jvm.dll
0x77F30000 - 0x77FC2000 	C:\WINDOWS\system32\USER32.dll
0x77BD0000 - 0x77C18000 	C:\WINDOWS\system32\GDI32.dll
0x76A50000 - 0x76A7F000 	C:\WINDOWS\system32\WINMM.dll
0x71A90000 - 0x71A98000 	C:\WINDOWS\system32\rdpsnd.dll
0x77980000 - 0x77991000 	C:\WINDOWS\system32\WINSTA.dll
0x71B10000 - 0x71B68000 	C:\WINDOWS\system32\NETAPI32.dll
0x76B20000 - 0x76B2B000 	C:\WINDOWS\system32\PSAPI.DLL
0x10000000 - 0x10007000 	C:\j2sdk1.4.2_05\jre\bin\hpi.dll
0x00380000 - 0x0038E000 	C:\j2sdk1.4.2_05\jre\bin\verify.dll
0x00390000 - 0x003A9000 	C:\j2sdk1.4.2_05\jre\bin\java.dll
0x003C0000 - 0x003CD000 	C:\j2sdk1.4.2_05\jre\bin\zip.dll
0x02EF0000 - 0x02F86000 	D:\profiler\bin\piAgent.dll
0x71AD0000 - 0x71AE7000 	C:\WINDOWS\system32\WS2_32.dll
0x71AC0000 - 0x71AC8000 	C:\WINDOWS\system32\WS2HELP.dll
0x00960000 - 0x0096B000 	D:\profiler\bin\hcclco.dll
0x02F90000 - 0x02F98000 	D:\profiler\bin\hccldt.dll
0x02FA0000 - 0x02FB1000 	D:\profiler\bin\hcclsm.dll
0x02FC0000 - 0x02FCD000 	D:\profiler\bin\hccls.dll
0x02FD0000 - 0x02FDB000 	D:\profiler\bin\hcbnd.dll
0x719F0000 - 0x71A32000 	C:\WINDOWS\System32\mswsock.dll
0x76E80000 - 0x76EAA000 	C:\WINDOWS\system32\DNSAPI.dll
0x76F20000 - 0x76F27000 	C:\WINDOWS\System32\winrnr.dll
0x76EC0000 - 0x76EEF000 	C:\WINDOWS\system32\WLDAP32.dll
0x76F30000 - 0x76F35000 	C:\WINDOWS\system32\rasadhlp.dll
0x03C60000 - 0x03C72000 	D:\jboss-3.2.5\lib\wrapper.dll
0x03D10000 - 0x03D1F000 	C:\j2sdk1.4.2_05\jre\bin\net.dll
0x5D3D0000 - 0x5D42A000 	C:\WINDOWS\system32\hnetcfg.dll
0x719B0000 - 0x719B8000 	C:\WINDOWS\System32\wshtcpip.dll
0x76BC0000 - 0x76BE9000 	C:\WINDOWS\system32\imagehlp.dll
0x6D850000 - 0x6D8F8000 	C:\WINDOWS\system32\dbghelp.dll
0x77B60000 - 0x77B68000 	C:\WINDOWS\system32\VERSION.dll

Heap at VM Abort:
Heap
 def new generation   total 52480K, used 52480K [0x10010000, 0x13900000, 0x171d0000)
  eden space 46656K, 100% used [0x10010000, 0x12da0000, 0x12da0000)
  from space 5824K, 100% used [0x12da0000, 0x13350000, 0x13350000)
  to   space 5824K,   0% used [0x13350000, 0x13350000, 0x13900000)
 tenured generation   total 466048K, used 17870K [0x171d0000, 0x338f0000, 0x50010000)
   the space 466048K,   3% used [0x171d0000, 0x18343b20, 0x18343c00, 0x338f0000)
 compacting perm gen  total 16384K, used 4547K [0x50010000, 0x51010000, 0x54010000)
   the space 16384K,  27% used [0x50010000, 0x50480c48, 0x50480e00, 0x51010000)

Local Time = Fri Jan 27 13:03:56 2006
Elapsed Time = 11
#
# HotSpot Virtual Machine Error : EXCEPTION_ACCESS_VIOLATION
# Error ID : 4F530E43505002EF
# Please report this error at
# http://java.sun.com/cgi-bin/bugreport.cgi
#
# Java VM: Java HotSpot(TM) Server VM (1.4.2_05-b04 mixed mode)
#
# An error report file has been saved as hs_err_pid9600.log.
# Please refer to the file for further information.
#
JVM exited unexpectedly.
CTRL-C trapped.  Shutting down.
&lt;-- Wrapper Stopped
As per today's data collection call: defer normal defects to 4.3
Not containable in 4.3 and retargetting to 4.4 as per Oct 26 Platform Collection &amp; Communication Meeting. This was of major or lower sev and never made the cut for a specific iteration over the life of 4.3.
cleaning up assignees
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. Since this defect is more than 2 years old, it may be no longer relevant. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this defect is resolved as WONTFIX. If this defect is still relevant and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125464" />
    <CreationDate amount="2006-01-27 08:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.1.1" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[FTP] ftp to OS/400 machine fails with error 501</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>When trying to export to a ftp server running OS/400 Eclipse fails when trying to expand the [+] marked node with a

Problem Occured: 501 Character(-) not allowed in object name.

dialogue box.  It is not possible to get access with the plugin.

Given directions I am willing to give this a shot for being fixed as it would be very nice for us to be able to deploy directly to a OS/400 machine available only by ftp.
Platform/Team owns the FTP plug-ins.
This plugin is not being maintained. Patches will be accepted.
We are in the process of removing the Team FTP/WebDAV feature since the DSDP Target management component (http://www.eclipse.org/dsdp/tm/) provides complimentary functionality and will be shipping as part of Europa. Although the feature will not be part of Europa, we have provided a link to a 3.3 compatible version of the feature at http://wiki.eclipse.org/index.php/Team_Development.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>When trying to export to a ftp server running OS/400 Eclipse fails when trying to expand the [+] marked node with a

Problem Occured: 501 Character(-) not allowed in object name.

dialogue box.  It is not possible to get access with the plugin.

Given directions I am willing to give this a shot for being fixed as it would be very nice for us to be able to deploy directly to a OS/400 machine available only by ftp.
Platform/Team owns the FTP plug-ins.
This plugin is not being maintained. Patches will be accepted.
We are in the process of removing the Team FTP/WebDAV feature since the DSDP Target management component (http://www.eclipse.org/dsdp/tm/) provides complimentary functionality and will be shipping as part of Europa. Although the feature will not be part of Europa, we have provided a link to a 3.3 compatible version of the feature at http://wiki.eclipse.org/index.php/Team_Development.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125465" />
    <CreationDate amount="2006-01-27 08:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="TPTP Release Engineering" />
    <component amount="TPTP.Web" />
    <Version amount="4.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>TPTP web site contains incorrect link to TPTP V4.2.0 M4 driver.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>TPTP web site contains incorrect link to TPTP V4.2.0 M4 driver.

On the What's New? section of the TPTP web site, the 'TPTP 4.2 M4 stable milestone build available' hyperlink points to the TPTP-4.2.0-200512011334C build but the official TPTP V4.2.0 M4 driver is the TPTP-4.2.0-200512011334D build (http://www.eclipse.org/tptp/ &gt;&gt; Downloads &gt;&gt; 4.2.0 &gt;&gt; Stable Builds &gt;&gt; Build Name &gt;&gt; TPTP-4.2.0-200512011334D).
Ling, reassigning to you because you added the link on the main page.
done
Please set the target to the release/iteration that this defect was fixed/returned.
Verified that this What's new? entry has since been removed from the TPTP web site.</WithStack>
    <WithOutStack>TPTP web site contains incorrect link to TPTP V4.2.0 M4 driver.

On the What's New? section of the TPTP web site, the 'TPTP 4.2 M4 stable milestone build available' hyperlink points to the TPTP-4.2.0-200512011334C build but the official TPTP V4.2.0 M4 driver is the TPTP-4.2.0-200512011334D build (http://www.eclipse.org/tptp/ &gt;&gt; Downloads &gt;&gt; 4.2.0 &gt;&gt; Stable Builds &gt;&gt; Build Name &gt;&gt; TPTP-4.2.0-200512011334D).
Ling, reassigning to you because you added the link on the main page.
done
Please set the target to the release/iteration that this defect was fixed/returned.
Verified that this What's new? entry has since been removed from the TPTP web site.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125466" />
    <CreationDate amount="2006-01-27 09:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Runtime" />
    <component amount="General" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Abstract commands should check progress meter for cancel</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If these commands are collected in a compound command a default check at the beginning of the execute for progress meter cancellation would allow the compound command to cancel without specifically instrumented client code.

See AbstractCommand / AbstractModelCommand.
The new implementations of CompositeCommand and CompositeTransactionalCommand check the state of the progress monitor in between the execution of each composed command.

This means that subclasses of AbstractCommand and AbstractTransactionalCommand do not need to check the state of the progress monitor if they don't wish to.  It will be checked for them by the composite.  The composite will also undo all of the commands that have been executed up to that point.
[target cleanup] 1.0 M6 was the original target milestone for this bug
[GMF Restructure] Bug 319140 : product GMF and component
Runtime Common was the original product and component for this bug</WithStack>
    <WithOutStack>If these commands are collected in a compound command a default check at the beginning of the execute for progress meter cancellation would allow the compound command to cancel without specifically instrumented client code.

See AbstractCommand / AbstractModelCommand.
The new implementations of CompositeCommand and CompositeTransactionalCommand check the state of the progress monitor in between the execution of each composed command.

This means that subclasses of AbstractCommand and AbstractTransactionalCommand do not need to check the state of the progress monitor if they don't wish to.  It will be checked for them by the composite.  The composite will also undo all of the commands that have been executed up to that point.
[target cleanup] 1.0 M6 was the original target milestone for this bug
[GMF Restructure] Bug 319140 : product GMF and component
Runtime Common was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125467" />
    <CreationDate amount="2006-01-27 09:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[clean up][infrastructure] Show hit ctrl-enter message</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>See Bug 113333 [api][content assist] API for setMessage in ContentAssistant without cycling mode enabled

Use it to show 'hit control-enter' message in status line of proposal pop up.
fixed &gt; I20060125-0800</WithStack>
    <WithOutStack>See Bug 113333 [api][content assist] API for setMessage in ContentAssistant without cycling mode enabled

Use it to show 'hit control-enter' message in status line of proposal pop up.
fixed &gt; I20060125-0800</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125468" />
    <CreationDate amount="2006-01-27 09:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Hyperlink on include</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It would be nice to have hyperlink on the #include &lt;xxxx.h&gt;.  I mean, I would like to be able to ctrl+click on the name of the inculded file.
This works now in 4.0</WithStack>
    <WithOutStack>It would be nice to have hyperlink on the #include &lt;xxxx.h&gt;.  I mean, I would like to be able to ctrl+click on the name of the inculded file.
This works now in 4.0</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125469" />
    <CreationDate amount="2006-01-27 09:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="EMF" />
    <component amount="Tools" />
    <Version amount="2.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>CodeGen Reusability</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="8">
      <source_code type="assignment">
        <location start="474" end="524" />
        <code>&gt;       GenModel genModel = genBase.getGenModel();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="525" end="563" />
        <code>&gt;       genModel.setCanGenerate(true);</code>
      </source_code>
      <source_code type="assignment">
        <location start="566" end="653" />
        <code>&gt;       Method setter = BeanHelper.findMethod(genModel.getClass(), "setImportManager");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="654" end="689" />
        <code>&gt;       setter.setAccessible(true);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="690" end="752" />
        <code>&gt;       setter.invoke(genModel, new Object[] {importManager});</code>
      </source_code>
      <source_code type="functioncall">
        <location start="753" end="789" />
        <code>&gt;       setter.setAccessible(false);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1023" end="1073" />
        <code>&gt;       dependencyHelper = new DependencyHelper();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1623" end="1758" />
        <code>generate(progressMonitor, style, pluginVariables, targetDirectory, packageName, className, jetEmitter, new Object [] { this });</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Hi Dave,

I paste in a thread from the newsgroup here:


Eike Stepper wrote:

&gt; I am trying to use the Ecore JET templates for a GenPackage, but without calling generate(...) directly on the GenPackage.
&gt; The reason is, that I can't find a way to prevent generate from also iterating over all the contents (GenClassifiers and so on).
&gt; I want only the generated for example the XyzPackageImpl.java to be generated.
&gt;
&gt; After a day of fiddling I manged with 2 dirty hacks:
&gt;
&gt;       GenModel genModel = genBase.getGenModel();
&gt;       genModel.setCanGenerate(true);
&gt;
&gt;       Method setter = BeanHelper.findMethod(genModel.getClass(), "setImportManager");
&gt;       setter.setAccessible(true);
&gt;       setter.invoke(genModel, new Object[] {importManager});
&gt;       setter.setAccessible(false);
&gt;
&gt; because the GenModel.setImportManager() method is protected.
&gt; Is there anything against making this method public?
&gt;
&gt;
&gt; And I had to modify the GenPackage source code with several:
&gt;
&gt;     if (dependencyHelper == null)
&gt;     {
&gt;       dependencyHelper = new DependencyHelper();
&gt;     }
&gt;
&gt; Why is the dependencyHelper not handled like the switchHelper and the validatorHelper?
&gt;
&gt; Cheers
&gt; /Eike
&gt;
&gt;

Ed Merks wrote:

Eike,

I've been looking too at how to invoke templates without creating a derived GenModel.  For example, I added this public method in the GenBaseImpl as kind of a hack:

      public void gen
        (Monitor progressMonitor,
         int style,
         List pluginVariables,
         String targetDirectory,
         String packageName,
         String className,
         JETEmitter jetEmitter)
      {
        generate(progressMonitor, style, pluginVariables, targetDirectory, packageName, className, jetEmitter, new Object [] { this });
      }

Maybe instead of making a bunch of these things kinds of things public, there should perhaps be some "convenience" method that does the setup.  Please open a feature request with these details and we can work together on the best way to make this easier.  Dave will soon be focused on generator extensibility and this falls right in that category...
I believe that both elements of this request have been addressed as part of bug 75925, which has now been committed to CVS.

GeneratorAdapter.generate() only generates code for the specified model element, not it's children.  And prepareCache() and clearCache() methods have been added to GenPackage to allow its naming caches to be setup and torn down.

Fixed in 2.2.0RC2 (S200605020900)
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>Hi Dave,

I paste in a thread from the newsgroup here:


Eike Stepper wrote:

&gt; I am trying to use the Ecore JET templates for a GenPackage, but without calling generate(...) directly on the GenPackage.
&gt; The reason is, that I can't find a way to prevent generate from also iterating over all the contents (GenClassifiers and so on).
&gt; I want only the generated for example the XyzPackageImpl.java to be generated.
&gt;
&gt; After a day of fiddling I manged with 2 dirty hacks:
&gt;
&gt;       GenModel genModel = genBase.getGenModel();
&gt;       genModel.setCanGenerate(true);
&gt;
&gt;       Method setter = BeanHelper.findMethod(genModel.getClass(), "setImportManager");
&gt;       setter.setAccessible(true);
&gt;       setter.invoke(genModel, new Object[] {importManager});
&gt;       setter.setAccessible(false);
&gt;
&gt; because the GenModel.setImportManager() method is protected.
&gt; Is there anything against making this method public?
&gt;
&gt;
&gt; And I had to modify the GenPackage source code with several:
&gt;
&gt;     if (dependencyHelper == null)
&gt;     {
&gt;       dependencyHelper = new DependencyHelper();
&gt;     }
&gt;
&gt; Why is the dependencyHelper not handled like the switchHelper and the validatorHelper?
&gt;
&gt; Cheers
&gt; /Eike
&gt;
&gt;

Ed Merks wrote:

Eike,

I've been looking too at how to invoke templates without creating a derived GenModel.  For example, I added this public method in the GenBaseImpl as kind of a hack:

      public void gen
        (Monitor progressMonitor,
         int style,
         List pluginVariables,
         String targetDirectory,
         String packageName,
         String className,
         JETEmitter jetEmitter)
      {
        generate(progressMonitor, style, pluginVariables, targetDirectory, packageName, className, jetEmitter, new Object [] { this });
      }

Maybe instead of making a bunch of these things kinds of things public, there should perhaps be some "convenience" method that does the setup.  Please open a feature request with these details and we can work together on the best way to make this easier.  Dave will soon be focused on generator extensibility and this falls right in that category...
I believe that both elements of this request have been addressed as part of bug 75925, which has now been committed to CVS.

GeneratorAdapter.generate() only generates code for the specified model element, not it's children.  And prepareCache() and clearCache() methods have been added to GenPackage to allow its naming caches to be setup and torn down.

Fixed in 2.2.0RC2 (S200605020900)
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125470" />
    <CreationDate amount="2006-01-27 09:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Multiple source directoy includes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When we have a project with multiple sources directories, the header files should be searched in all source directory.  Currently, the header files are only found if the header is in the same source directory.

I would like to use this in order to place my .cpp and my .h into separated directories.
I'm not sure what the problem is here.  You can put headers and sources in different directories and whatever headers you include will still be parsed.  You can also tell the indexer to index all headers regardless of whether they were included.

Marking as WORKSFORME.  If there is still a problem please reopen with more details.</WithStack>
    <WithOutStack>When we have a project with multiple sources directories, the header files should be searched in all source directory.  Currently, the header files are only found if the header is in the same source directory.

I would like to use this in order to place my .cpp and my .h into separated directories.
I'm not sure what the problem is here.  You can put headers and sources in different directories and whatever headers you include will still be parsed.  You can also tell the indexer to index all headers regardless of whether they were included.

Marking as WORKSFORME.  If there is still a problem please reopen with more details.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125471" />
    <CreationDate amount="2006-01-27 09:13:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Framework" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unable to load resource using buddy classloading</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="5">
        <Lines>
          <Line>- The BundleLoader#getResources can't be changed since this behavior is specified. The patch won't be applied.</Line>
          <Line>- PolicyHandler should provide use Vector</Line>
          <Line>- I don't see the point of the complete reorg of DependentPolicy and RegisteredPolicy. I was expecting change only in getResources().</Line>
          <Line>Created attachment 34120</Line>
          <Line>PolicyHandler.java Patch (R3_1_maintenance)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- Export-Package: org.ex.StuffLoader, properties</Line>
          <Line>- Eclipse-BuddyPolicy: registered</Line>
          <Line>The class StuffLoader loads ALL resources using ClassLoader.getResources("properties/stuff.properties"). This project contains the resource "properties/stuff.properties" with default data.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- Export-Package: properties</Line>
          <Line>- Eclipse-RegisterBuddy: A</Line>
          <Line>This plug-in uses StuffLoader and contains a resource "properties/stuff.properties" with some overriding data.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I have plugin com.ex.A with a class LoadStuff with a static method that does:
class.getClassLoader().getResourceAsStream(resource) and has Eclipse-BuddyPolicy: registered.

I have plugin com.ex.B with a Worker class that calls into LoadStuff to load a resource.  It depends on com.ex.A.

I have a UI plugin com.ex.C that depends on com.ex.B, instantiates Worker and passes in the resource /properties/stuff.properties, which is contained in C, and has Eclipse-RegisterBuddy: com.ex.A

It won't load the resource unless I make com.ex.C depend on com.ex.A.  It seems that you not only need the buddy registration but also a direct dependancy.  Then it works.

But then if I change the policy from registered to global, it stops working.

I'll attach 3 project example.

PW
Created attachment 33700
3 plugins that won't load a resource
Created attachment 33758
GlobalPolicy#loadResources(String) Patch

This patch should resolve this bug, as well as fix some more of the issues in bug 110712, when a budy policy of "global" is used.

This patch only affects the class org.eclipse.osgi.framework.internal.core.GlobalPolicy. The patch was made against the R3_1_maintenance branch/tag. I don't know how how different the 3.2 code is, but it should be easy to port.

The issues I found are that the loadResource and loadResources implementations were using the utility method BundleLoader.getPackageName, when they should have been using the BundleLoader.getResourcePackageName. The second issue is that the loadResources method was only looking up one ExportedPackage, the first that matched, instead of all that matched. This makes sense for loadClass and loadResource, but not for loadResources.
thanks for the patch.  We'll take a look
The patch looks good. I would favor the usage of Vector instead of ArrayList when collecting the results, so that you get a enumeration immediatly.

Could you please provide a patch to the other policies provided since they all suffer from the same problem?
There are pieces of this fix for RegisteredPolicy in bug 110712. I can post those fixes here as well. I can work out another patch for the DependentPolicy fairly easily.

Should the patch be against HEAD or the R3_1_maintenance branch? I know there's a refactoring with Equinox, but I didn't know that has affected this particular piece of code too much. Additionally, assuming there is going to be another 3.1 maintenance release, I personally need this in that branch.

As for the ArrayList vs. Vector - I can convert it to use Vectors without issue. As a habit, I prefer to use ArrayLists instead since Vector's are internally synchronized, but I can convert it to keep it consistent.

Thanks.
Created attachment 33797
GlobalPolicy.java Patch (R3_1_maintenance)

Patch for GlobalPolicy to retrieve all resources and use Vectors.
Created attachment 33798
DependentPolicy.java Patch (R3_1_maintenance)

Patch for DependentPolicy.java to retrieve all resources properly. Additionally, I've cleaned up this class a little bit, so that the thread synchronization is correct and safe. Previously, there was only one method that was synchronized, but this method alone wouldn't protect the data in all scenarios. I've just synchronized the public methods to make it more straight-forward. If this is seen as a bottle neck, then a read/write mutex or something similar could be used. The other way to resolve this would be to eliminate all synchronization and convert the lazy loading to upfront loading in the constructor.
Created attachment 33800
RegisteredPolicy.java Patch (R3_1_maintenance)

A patch for RegisteredPolicy.java to load all resources. I've reworked this class slightly. Originally it was extending DependentPolicy, but this seemed awkward and not altogether appropriate (it didn't seem to pass the "is-a" test for extension). As such, I just remove the extension and implemented IBuddyPolicy directly and pulled up the small portion of initialization code that it was borrowing. I believe this makes the initialization (constructor) a bit cleaner. Also, I eliminated the cast to AbstractBundle and just used the methods that were available, so as to preserve some isolation.
Created attachment 33801
BundleLoader.java Patch (R3_1_maintenance)

A patch for BundleLoader to load all resources. This was also posted on bug 110712, but seems most appropriate here now.
Created attachment 33802
PolicyHandler.java Patch (R3_1_maintenance)

A patch for PolicyHandler to load all resources. This was also posted on bug 110712, but seems more appropriate here now.
*** Bug 110712 has been marked as a duplicate of this bug. ***
As an aside, but somewhat related, question, how are plug-in fragments supposed to affect the Buddy Loading policies, if at all?

I ran a test with a host plugin that has no buddy policy and then put a buddy policy of global in a fragment. The fragment code was unable to load an exported class initially. When I moved the global policy from the fragment to the host, the fragment was able to load the class.

According to the documentation, it seems that you can have multiple policy values, so I was wondering if policies declared in a fragment should be appended to the policies of the host.
Given the way fragments are handled by osgi, that would make sense. Do you want to prototype?
Tom can you think of any particular problem that this could cause?
Can buddy policies collide with each other?  For example, if one fragment specifies one policy and another fragment specifies another policy?  I don't think this is really an issue because the host can specify all supported policies in a list today.  Fragments should just add to the list of policies specified by the host and we should ensure that duplicate policies are not added to the host list.  

This should be isolated to the BundleLoader class if someone is willing to prototype.  I suggest a separate bug report be opened for this.
On the patches:
- The BundleLoader#getResources can't be changed since this behavior is specified. The patch won't be applied.
- PolicyHandler should provide use Vector
- I don't see the point of the complete reorg of DependentPolicy and RegisteredPolicy. I was expecting change only in getResources().
Created attachment 34120
PolicyHandler.java Patch (R3_1_maintenance)

Converted PolicyHandler to use Vector instead of ArrayList.

Any reason for using Vectors instead of ArrayLists? I'm assuming it's not because the Collections APIs are trying to be avoided, as this class uses Sets and HashSets already. Vectors are so much slower than ArrayLists, due to synchronization.
(In reply to comment #15)
&gt; - I don't see the point of the complete reorg of DependentPolicy and
&gt; RegisteredPolicy. I was expecting change only in getResources().
&gt; 

Several reasons actually, most of which I mentioned in comment #7 and comment #8.

The major reason for the changes to DependentPolicy are because it was using a lazy load mechanism and since there was at least one piece of syncrhonization and because this is a utility for class loading I assumed it must be thread safe. The current implementation was only synchronizing a single method ('addDependent'), but this wasn't completely protecting all of the fields that were being read and written. It looked like there could be conditions where a read/write race might occur. Perhaps my analysis was incorrect.

As for RegisteredPolicy, the implementation was extending from DependentPolicy. This seemed awkward as it doesn't seem to pass the "is-a" test; "RegisteredPolicy is-a DependentPolicy". There is no mention in the documention that for a registered bundle to be in the class loader, it must make a dependency as well. If it doesn't need to have a dependency, then further changes probably need to be made to look at all bundles, not just dependents.

Additionally, and the better reason, the only thing that RegisteredPolicy was really using from DependentPolicy was the loading of the BundleDescriptions, but even after it utilized this it looped back through all of the descriptions to eliminate all dependents that weren't registered. This seemed liked a waste of cycles. Another small change was to eliminate the need to cast the Bundle to an AbstractBundle to get the manifest data; I changed it to use the public interface.

I apologize if I over stepped some bounds, but I thought I could provide some additional cleanup for stability and performance. If you'd like, I can easily provide a different set of patches for these files that maintains the original implementations.

(In reply to comment #15)
&gt; On the patches:
&gt; - The BundleLoader#getResources can't be changed since this behavior is
&gt; specified. The patch won't be applied.

The change is actually to "findResources", correct? I just want to make sure we're discussing the same thing.

Without the changes to BundleLoader, the other patches won't really do much at all. The problem is that findResources is currently acts as through we're only finding a single resource or a single class, meaning that you won't need to find the very first resource you encounter. This does not comply with the definition of the ClassLoader#getResources [1], nor what I would consider the spirit of the buddy class loading.

The specific case that I've run into is that the plugin that declares a buddy policy of any type and exposes a package that is also exposed by another plugin. With the current implementation, the exposed packaged in the first plugin will be found and no other bundles will be searched.

Here's a layout of what I'm discussing.

Plug-in A
 - Export-Package: org.ex.StuffLoader, properties
 - Eclipse-BuddyPolicy: registered
The class StuffLoader loads ALL resources using ClassLoader.getResources("properties/stuff.properties"). This project contains the resource "properties/stuff.properties" with default data.

Plug-in B
 - Export-Package: properties
 - Eclipse-RegisterBuddy: A
This plug-in uses StuffLoader and contains a resource "properties/stuff.properties" with some overriding data.

Given the current implementation of BundeLoader, the search would stop as soon as the exported package in plug-in A was found. Additionally, this would fail even if plug-in A didn't have a file with the same URI, but still exported that package because it has other resources in their as well.

If this is the defined behavior of BundleLoader or more specifically the ClassLoaderDelegate, then I would argue that the defined behavior is incorrect and should be fixed. The ClassLoader#getResources() [1] must return ALL resources available for a given URI.


[1] http://java.sun.com/j2se/1.4.2/docs/api/java/lang/ClassLoader.html#getResources(java.lang.String)

Changing bundleLoader would probably make us fail the conformance tests since this is the class that implements the lookup defined in osgi.
Buddy loading comes as an extension of the standard osgi lookup when none of the osgi lookup have found a class/resource. Therefore we have the liberty of changing it to return all the resources.

For questions on the osgi spec I recommend you to post your questions on the osgi-dev mailing list from the osgi consortium: http://bundles.osgi.org/mailman/listinfo/osgi-dev 

Created attachment 34153
BundleLoader.java Patch (R3_1_maintenance)

I reviewed my changes and they did go over board. This patch should keep the defined OSGi behavior intact and enable the buddy loading extension to still work.

This patch maintains the original algorithm, but always checks for a buddy policy and adds any resources to the original results.

During my tests, this resolves the issues that I've mentioned earlier.
Any thoughts or comments on the latest patch?

I don't want to be a bother, but I have some project designs on hold that depend on the finalization of this functionality.

Thanks.
We will try to have something for you in M5 ... I have not looked at the patches myself yet.
Ok, the original problem reported by Paul is completely different than the one trying to be addressed by the various patches attached to this bug report.

The original problem that can be recreated by the project in attachment 33700 is a problem with loading a single resource by using getResource not getResoures (plural).

Here the registered policy is actually working as designed but it is probably not documented clearly what the registered policy does.  In the comment of the RegisteredPolicy class we have the following:

Registered policy is an implementation of a buddy policy. 
It is responsible for looking up a class in the bundles (registrant) that declare interest in the bundle that require the buddy loading.
Note that the registrants must have a direct dependency on the bundle needing buddy.

So you must not only register with the bundle needing the buddy but you must also be dependent on the bundle directly.  The sentence "Note that the registrants must have a direct dependency on the bundle needing buddy." should probably be added to the documentation of "registered" buddy policy.

If this was the only thing contained in this bug report then I would close this as invalid.  But starting in comment 2 Nathan raised a separate issue having to do with delegating to the buddy policy all the time for getResources (plural) calls even when resources were found in the normal delegation.  It is debatable if this is the correct coarse of action because buddies are only supposed to be delegated to if the class/resource could not be found under normal delegation.  

In this case the patches are changing this behavior for getResources to always delegate to buddies even when resources are available under normal delegation.  The latest patch to BundleLoader still changes the defined OSGi behavior for Import-Package.  If a package is imported we should not look anywhere else except the exporter of the package.  We MUST return the result directly from the exporter if the package is imported.  The current patch changes the behavior to always look locally and in buddies when the package is imported, neither should be asked if the package is imported.

I do not have a particular problem with the other changes provided by the patches.  In a way it does seem to make sense to search all places possible (including buddies) when getting an exhaustive list of URLs to a particular resource.  I will attach a new patch that I think is acceptable (does not change Import-Package behavior), but given the relative sensitivity of this change I will need at least two other committers to approve before I will consider releasing.  Therefore I'm slipping the Milestone to M6.

You made your patches against 3.1_maintenance.  This type of change is not a good candidate for a point release (i.e. for 3.1.3).
Created attachment 34446
Combined patch to all files

I combined all changes into a single patch.  I reverted RegisteredPolicy back to extend DependentPolicy to limit the code changes just to the issue at hand.

I cleaned up a few things in the patch.  One functional thing that I found to be a problem was in DependentPolicy#loadResources.  The original patch only seemed to add all dependents only if the result was not null from one of the dependents.  This would seem to leave some resources out if the full depenency list was not completely built during the call the getResources.  The current patch will ensure all dependents (immediate and recursive) are search during the getResources call.
DJ and Pascal.  Please give the patch a thorough review.  I'm slipping to M6 unless you both give a +1 in time for M5.

Nathan, please make sure the DependentPolicy change still works in your env given the changes I made to ensure all dependents are searched.  Thanks.
(In reply to comment #25)
&gt; Nathan, please make sure the DependentPolicy change still works in your env
&gt; given the changes I made to ensure all dependents are searched.  Thanks.
&gt; 

Yes, this patch still still works for me and since I'm not using any import package or dynamic import statements, the functionality is exactly what I needed.
Pascal, can you review the latest patch.  Need to decide if this is required for M6.
I'm a bit worried by the change in bundleloader by which we always consult the buddy loading, but aside from that the patch looks good and should be tried out for M6.
Patch released for M6.
[contributed patch applied]
adding "contributed" keyword to patches contributed by the community.</WithStack>
    <WithOutStack>I have plugin com.ex.A with a class LoadStuff with a static method that does:
class.getClassLoader().getResourceAsStream(resource) and has Eclipse-BuddyPolicy: registered.

I have plugin com.ex.B with a Worker class that calls into LoadStuff to load a resource.  It depends on com.ex.A.

I have a UI plugin com.ex.C that depends on com.ex.B, instantiates Worker and passes in the resource /properties/stuff.properties, which is contained in C, and has Eclipse-RegisterBuddy: com.ex.A

It won't load the resource unless I make com.ex.C depend on com.ex.A.  It seems that you not only need the buddy registration but also a direct dependancy.  Then it works.

But then if I change the policy from registered to global, it stops working.

I'll attach 3 project example.

PW
Created attachment 33700
3 plugins that won't load a resource
Created attachment 33758
GlobalPolicy#loadResources(String) Patch

This patch should resolve this bug, as well as fix some more of the issues in bug 110712, when a budy policy of "global" is used.

This patch only affects the class org.eclipse.osgi.framework.internal.core.GlobalPolicy. The patch was made against the R3_1_maintenance branch/tag. I don't know how how different the 3.2 code is, but it should be easy to port.

The issues I found are that the loadResource and loadResources implementations were using the utility method BundleLoader.getPackageName, when they should have been using the BundleLoader.getResourcePackageName. The second issue is that the loadResources method was only looking up one ExportedPackage, the first that matched, instead of all that matched. This makes sense for loadClass and loadResource, but not for loadResources.
thanks for the patch.  We'll take a look
The patch looks good. I would favor the usage of Vector instead of ArrayList when collecting the results, so that you get a enumeration immediatly.

Could you please provide a patch to the other policies provided since they all suffer from the same problem?
There are pieces of this fix for RegisteredPolicy in bug 110712. I can post those fixes here as well. I can work out another patch for the DependentPolicy fairly easily.

Should the patch be against HEAD or the R3_1_maintenance branch? I know there's a refactoring with Equinox, but I didn't know that has affected this particular piece of code too much. Additionally, assuming there is going to be another 3.1 maintenance release, I personally need this in that branch.

As for the ArrayList vs. Vector - I can convert it to use Vectors without issue. As a habit, I prefer to use ArrayLists instead since Vector's are internally synchronized, but I can convert it to keep it consistent.

Thanks.
Created attachment 33797
GlobalPolicy.java Patch (R3_1_maintenance)

Patch for GlobalPolicy to retrieve all resources and use Vectors.
Created attachment 33798
DependentPolicy.java Patch (R3_1_maintenance)

Patch for DependentPolicy.java to retrieve all resources properly. Additionally, I've cleaned up this class a little bit, so that the thread synchronization is correct and safe. Previously, there was only one method that was synchronized, but this method alone wouldn't protect the data in all scenarios. I've just synchronized the public methods to make it more straight-forward. If this is seen as a bottle neck, then a read/write mutex or something similar could be used. The other way to resolve this would be to eliminate all synchronization and convert the lazy loading to upfront loading in the constructor.
Created attachment 33800
RegisteredPolicy.java Patch (R3_1_maintenance)

A patch for RegisteredPolicy.java to load all resources. I've reworked this class slightly. Originally it was extending DependentPolicy, but this seemed awkward and not altogether appropriate (it didn't seem to pass the "is-a" test for extension). As such, I just remove the extension and implemented IBuddyPolicy directly and pulled up the small portion of initialization code that it was borrowing. I believe this makes the initialization (constructor) a bit cleaner. Also, I eliminated the cast to AbstractBundle and just used the methods that were available, so as to preserve some isolation.
Created attachment 33801
BundleLoader.java Patch (R3_1_maintenance)

A patch for BundleLoader to load all resources. This was also posted on bug 110712, but seems most appropriate here now.
Created attachment 33802
PolicyHandler.java Patch (R3_1_maintenance)

A patch for PolicyHandler to load all resources. This was also posted on bug 110712, but seems more appropriate here now.
*** Bug 110712 has been marked as a duplicate of this bug. ***
As an aside, but somewhat related, question, how are plug-in fragments supposed to affect the Buddy Loading policies, if at all?

I ran a test with a host plugin that has no buddy policy and then put a buddy policy of global in a fragment. The fragment code was unable to load an exported class initially. When I moved the global policy from the fragment to the host, the fragment was able to load the class.

According to the documentation, it seems that you can have multiple policy values, so I was wondering if policies declared in a fragment should be appended to the policies of the host.
Given the way fragments are handled by osgi, that would make sense. Do you want to prototype?
Tom can you think of any particular problem that this could cause?
Can buddy policies collide with each other?  For example, if one fragment specifies one policy and another fragment specifies another policy?  I don't think this is really an issue because the host can specify all supported policies in a list today.  Fragments should just add to the list of policies specified by the host and we should ensure that duplicate policies are not added to the host list.  

This should be isolated to the BundleLoader class if someone is willing to prototype.  I suggest a separate bug report be opened for this.
On the patches:
- The BundleLoader#getResources can't be changed since this behavior is specified. The patch won't be applied.
- PolicyHandler should provide use Vector
- I don't see the point of the complete reorg of DependentPolicy and RegisteredPolicy. I was expecting change only in getResources().
Created attachment 34120
PolicyHandler.java Patch (R3_1_maintenance)

Converted PolicyHandler to use Vector instead of ArrayList.

Any reason for using Vectors instead of ArrayLists? I'm assuming it's not because the Collections APIs are trying to be avoided, as this class uses Sets and HashSets already. Vectors are so much slower than ArrayLists, due to synchronization.
(In reply to comment #15)
&gt; - I don't see the point of the complete reorg of DependentPolicy and
&gt; RegisteredPolicy. I was expecting change only in getResources().
&gt; 

Several reasons actually, most of which I mentioned in comment #7 and comment #8.

The major reason for the changes to DependentPolicy are because it was using a lazy load mechanism and since there was at least one piece of syncrhonization and because this is a utility for class loading I assumed it must be thread safe. The current implementation was only synchronizing a single method ('addDependent'), but this wasn't completely protecting all of the fields that were being read and written. It looked like there could be conditions where a read/write race might occur. Perhaps my analysis was incorrect.

As for RegisteredPolicy, the implementation was extending from DependentPolicy. This seemed awkward as it doesn't seem to pass the "is-a" test; "RegisteredPolicy is-a DependentPolicy". There is no mention in the documention that for a registered bundle to be in the class loader, it must make a dependency as well. If it doesn't need to have a dependency, then further changes probably need to be made to look at all bundles, not just dependents.

Additionally, and the better reason, the only thing that RegisteredPolicy was really using from DependentPolicy was the loading of the BundleDescriptions, but even after it utilized this it looped back through all of the descriptions to eliminate all dependents that weren't registered. This seemed liked a waste of cycles. Another small change was to eliminate the need to cast the Bundle to an AbstractBundle to get the manifest data; I changed it to use the public interface.

I apologize if I over stepped some bounds, but I thought I could provide some additional cleanup for stability and performance. If you'd like, I can easily provide a different set of patches for these files that maintains the original implementations.

(In reply to comment #15)
&gt; On the patches:
&gt; - The BundleLoader#getResources can't be changed since this behavior is
&gt; specified. The patch won't be applied.

The change is actually to "findResources", correct? I just want to make sure we're discussing the same thing.

Without the changes to BundleLoader, the other patches won't really do much at all. The problem is that findResources is currently acts as through we're only finding a single resource or a single class, meaning that you won't need to find the very first resource you encounter. This does not comply with the definition of the ClassLoader#getResources [1], nor what I would consider the spirit of the buddy class loading.

The specific case that I've run into is that the plugin that declares a buddy policy of any type and exposes a package that is also exposed by another plugin. With the current implementation, the exposed packaged in the first plugin will be found and no other bundles will be searched.

Here's a layout of what I'm discussing.

Plug-in A
 - Export-Package: org.ex.StuffLoader, properties
 - Eclipse-BuddyPolicy: registered
The class StuffLoader loads ALL resources using ClassLoader.getResources("properties/stuff.properties"). This project contains the resource "properties/stuff.properties" with default data.

Plug-in B
 - Export-Package: properties
 - Eclipse-RegisterBuddy: A
This plug-in uses StuffLoader and contains a resource "properties/stuff.properties" with some overriding data.

Given the current implementation of BundeLoader, the search would stop as soon as the exported package in plug-in A was found. Additionally, this would fail even if plug-in A didn't have a file with the same URI, but still exported that package because it has other resources in their as well.

If this is the defined behavior of BundleLoader or more specifically the ClassLoaderDelegate, then I would argue that the defined behavior is incorrect and should be fixed. The ClassLoader#getResources() [1] must return ALL resources available for a given URI.


[1] http://java.sun.com/j2se/1.4.2/docs/api/java/lang/ClassLoader.html#getResources(java.lang.String)

Changing bundleLoader would probably make us fail the conformance tests since this is the class that implements the lookup defined in osgi.
Buddy loading comes as an extension of the standard osgi lookup when none of the osgi lookup have found a class/resource. Therefore we have the liberty of changing it to return all the resources.

For questions on the osgi spec I recommend you to post your questions on the osgi-dev mailing list from the osgi consortium: http://bundles.osgi.org/mailman/listinfo/osgi-dev 

Created attachment 34153
BundleLoader.java Patch (R3_1_maintenance)

I reviewed my changes and they did go over board. This patch should keep the defined OSGi behavior intact and enable the buddy loading extension to still work.

This patch maintains the original algorithm, but always checks for a buddy policy and adds any resources to the original results.

During my tests, this resolves the issues that I've mentioned earlier.
Any thoughts or comments on the latest patch?

I don't want to be a bother, but I have some project designs on hold that depend on the finalization of this functionality.

Thanks.
We will try to have something for you in M5 ... I have not looked at the patches myself yet.
Ok, the original problem reported by Paul is completely different than the one trying to be addressed by the various patches attached to this bug report.

The original problem that can be recreated by the project in attachment 33700 is a problem with loading a single resource by using getResource not getResoures (plural).

Here the registered policy is actually working as designed but it is probably not documented clearly what the registered policy does.  In the comment of the RegisteredPolicy class we have the following:

Registered policy is an implementation of a buddy policy. 
It is responsible for looking up a class in the bundles (registrant) that declare interest in the bundle that require the buddy loading.
Note that the registrants must have a direct dependency on the bundle needing buddy.

So you must not only register with the bundle needing the buddy but you must also be dependent on the bundle directly.  The sentence "Note that the registrants must have a direct dependency on the bundle needing buddy." should probably be added to the documentation of "registered" buddy policy.

If this was the only thing contained in this bug report then I would close this as invalid.  But starting in comment 2 Nathan raised a separate issue having to do with delegating to the buddy policy all the time for getResources (plural) calls even when resources were found in the normal delegation.  It is debatable if this is the correct coarse of action because buddies are only supposed to be delegated to if the class/resource could not be found under normal delegation.  

In this case the patches are changing this behavior for getResources to always delegate to buddies even when resources are available under normal delegation.  The latest patch to BundleLoader still changes the defined OSGi behavior for Import-Package.  If a package is imported we should not look anywhere else except the exporter of the package.  We MUST return the result directly from the exporter if the package is imported.  The current patch changes the behavior to always look locally and in buddies when the package is imported, neither should be asked if the package is imported.

I do not have a particular problem with the other changes provided by the patches.  In a way it does seem to make sense to search all places possible (including buddies) when getting an exhaustive list of URLs to a particular resource.  I will attach a new patch that I think is acceptable (does not change Import-Package behavior), but given the relative sensitivity of this change I will need at least two other committers to approve before I will consider releasing.  Therefore I'm slipping the Milestone to M6.

You made your patches against 3.1_maintenance.  This type of change is not a good candidate for a point release (i.e. for 3.1.3).
Created attachment 34446
Combined patch to all files

I combined all changes into a single patch.  I reverted RegisteredPolicy back to extend DependentPolicy to limit the code changes just to the issue at hand.

I cleaned up a few things in the patch.  One functional thing that I found to be a problem was in DependentPolicy#loadResources.  The original patch only seemed to add all dependents only if the result was not null from one of the dependents.  This would seem to leave some resources out if the full depenency list was not completely built during the call the getResources.  The current patch will ensure all dependents (immediate and recursive) are search during the getResources call.
DJ and Pascal.  Please give the patch a thorough review.  I'm slipping to M6 unless you both give a +1 in time for M5.

Nathan, please make sure the DependentPolicy change still works in your env given the changes I made to ensure all dependents are searched.  Thanks.
(In reply to comment #25)
&gt; Nathan, please make sure the DependentPolicy change still works in your env
&gt; given the changes I made to ensure all dependents are searched.  Thanks.
&gt; 

Yes, this patch still still works for me and since I'm not using any import package or dynamic import statements, the functionality is exactly what I needed.
Pascal, can you review the latest patch.  Need to decide if this is required for M6.
I'm a bit worried by the change in bundleloader by which we always consult the buddy loading, but aside from that the patch looks good and should be tried out for M6.
Patch released for M6.
[contributed patch applied]
adding "contributed" keyword to patches contributed by the community.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125472" />
    <CreationDate amount="2006-01-27 09:25:00 -0500" />
    <DupId amount="76407" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Use reference dependencies for header and libraries</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When a (executable) project is set as dependent on a (library) project, the header files directories of the library project should automatically be visible to the dependent project, and the libraries should also be added to the list of linked libraries.


*** This bug has been marked as a duplicate of bug 76407 ***</WithStack>
    <WithOutStack>When a (executable) project is set as dependent on a (library) project, the header files directories of the library project should automatically be visible to the dependent project, and the libraries should also be added to the list of linked libraries.


*** This bug has been marked as a duplicate of bug 76407 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125473" />
    <CreationDate amount="2006-01-27 09:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Controls in toolbar's separator are not visible under Linux</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="10">
      <source_code type="import">
        <location start="113" end="141" />
        <code>import org.eclipse.swt.SWT;</code>
      </source_code>
      <source_code type="import">
        <location start="142" end="180" />
        <code>import org.eclipse.swt.graphics.Color;</code>
      </source_code>
      <source_code type="import">
        <location start="181" end="216" />
        <code>import org.eclipse.swt.graphics.GC;</code>
      </source_code>
      <source_code type="import">
        <location start="217" end="255" />
        <code>import org.eclipse.swt.graphics.Image;</code>
      </source_code>
      <source_code type="import">
        <location start="256" end="295" />
        <code>import org.eclipse.swt.widgets.Display;</code>
      </source_code>
      <source_code type="import">
        <location start="296" end="333" />
        <code>import org.eclipse.swt.widgets.Label;</code>
      </source_code>
      <source_code type="import">
        <location start="334" end="371" />
        <code>import org.eclipse.swt.widgets.Shell;</code>
      </source_code>
      <source_code type="import">
        <location start="372" end="411" />
        <code>import org.eclipse.swt.widgets.ToolBar;</code>
      </source_code>
      <source_code type="import">
        <location start="412" end="452" />
        <code>import org.eclipse.swt.widgets.ToolItem;</code>
      </source_code>
      <source_code type="class">
        <location start="454" end="1500" />
        <code>public class ToolBarSeparator {
	public static void main(String[] args) {
		Display display = new Display();
		Shell shell = new Shell(display);
		ToolBar bar = new ToolBar(shell, SWT.BORDER);
		for (int i = 0; i &lt; 4; i++) {
			ToolItem item = new ToolItem(bar, 0);
			item.setText("Item " + i);
		}
		Image image = new Image(display, 10, 23);
		Color color = display.getSystemColor(SWT.COLOR_RED);
		GC gc = new GC(image);
		gc.setBackground(color);
		gc.fillRectangle(image.getBounds());
		gc.dispose();
		ToolItem sep = new ToolItem(bar, SWT.SEPARATOR);
		int start = bar.getItemCount();
		for (int i = start; i &lt; start + 4; i++) {
			ToolItem item = new ToolItem(bar, 0);
			item.setText("Item " + i);
			item.setImage(image);
		}
		Label c = new Label(bar, SWT.READ_ONLY);
		c.setText("Label");
		c.pack();
		sep.setWidth(c.getSize().x);
		sep.setControl(c);
		bar.pack();
		shell.pack();
		shell.open();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
		image.dispose();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Certains controls, like Labels and Texts, are not visible in toolbar's separators.
This is a snippet showing it:

import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Color;
import org.eclipse.swt.graphics.GC;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.ToolBar;
import org.eclipse.swt.widgets.ToolItem;

public class ToolBarSeparator {
	public static void main(String[] args) {
		Display display = new Display();
		Shell shell = new Shell(display);
		ToolBar bar = new ToolBar(shell, SWT.BORDER);
		for (int i = 0; i &lt; 4; i++) {
			ToolItem item = new ToolItem(bar, 0);
			item.setText("Item " + i);
		}
		Image image = new Image(display, 10, 23);
		Color color = display.getSystemColor(SWT.COLOR_RED);
		GC gc = new GC(image);
		gc.setBackground(color);
		gc.fillRectangle(image.getBounds());
		gc.dispose();
		ToolItem sep = new ToolItem(bar, SWT.SEPARATOR);
		int start = bar.getItemCount();
		for (int i = start; i &lt; start + 4; i++) {
			ToolItem item = new ToolItem(bar, 0);
			item.setText("Item " + i);
			item.setImage(image);
		}
		Label c = new Label(bar, SWT.READ_ONLY);
		c.setText("Label");
		c.pack();
		sep.setWidth(c.getSize().x);
		sep.setControl(c);
		bar.pack();
		shell.pack();
		shell.open();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
		image.dispose();
	}
}
If I comment line 36 (sep.setWidth(c.getSize().x)) the Label appears.
The version of gtk i use is 2.4
This works for me running HEAD (against gtk 2.4.14 and 2.8.16). I believe it has been fixed already. Please try running the latest 3.2 integration build and reopen if you still see the problem.</WithStack>
    <WithOutStack>Certains controls, like Labels and Texts, are not visible in toolbar's separators.
This is a snippet showing it:

import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Color;
import org.eclipse.swt.graphics.GC;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.ToolBar;
import org.eclipse.swt.widgets.ToolItem;

public class ToolBarSeparator {
	public static void main(String[] args) {
		Display display = new Display();
		Shell shell = new Shell(display);
		ToolBar bar = new ToolBar(shell, SWT.BORDER);
		for (int i = 0; i &lt; 4; i++) {
			ToolItem item = new ToolItem(bar, 0);
			item.setText("Item " + i);
		}
		Image image = new Image(display, 10, 23);
		Color color = display.getSystemColor(SWT.COLOR_RED);
		GC gc = new GC(image);
		gc.setBackground(color);
		gc.fillRectangle(image.getBounds());
		gc.dispose();
		ToolItem sep = new ToolItem(bar, SWT.SEPARATOR);
		int start = bar.getItemCount();
		for (int i = start; i &lt; start + 4; i++) {
			ToolItem item = new ToolItem(bar, 0);
			item.setText("Item " + i);
			item.setImage(image);
		}
		Label c = new Label(bar, SWT.READ_ONLY);
		c.setText("Label");
		c.pack();
		sep.setWidth(c.getSize().x);
		sep.setControl(c);
		bar.pack();
		shell.pack();
		shell.open();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}
		display.dispose();
		image.dispose();
	}
}
If I comment line 36 (sep.setWidth(c.getSize().x)) the Label appears.
The version of gtk i use is 2.4
This works for me running HEAD (against gtk 2.4.14 and 2.8.16). I believe it has been fixed already. Please try running the latest 3.2 integration build and reopen if you still see the problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125474" />
    <CreationDate amount="2006-01-27 09:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>UI issues with refactoring scripts</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="6">
        <Lines>
          <Line>- Dialog buttons: 'Save' 'Cancel'</Line>
          <Line>- Buttons on the right: 'Select All' 'Deselect All'.</Line>
          <Line>- Label on top of the table:</Line>
          <Line>'Select the refactorings to save as a new script:'</Line>
          <Line>- Below the table: Text input field with 'Browse..' button for the destination location.</Line>
          <Line>- Maybe: 'Edit' button on the right of the description field to change the   description as it is saved as well</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- No check boxes on tree</Line>
          <Line>- Buttons 'Remove', 'Edit'</Line>
          <Line>I reworked the script UI to reflect the findings from the stand-up meeting.</Line>
          <Line>Create Script is now a dialog page with the suggested layout.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20060127

Findings from the stand-up demo:

a.) Save Script
(we will stick with the term 'Save' for now. Export is a bit different. It would have to go to the export wizard and also would need a 'import')

'Save Script' Dialog.
- Dialog buttons: 'Save' 'Cancel'
- Buttons on the right: 'Select All' 'Deselect All'.
- Label on top of the table:
    'Select the refactorings to save as a new script:'
- Below the table: Text input field with 'Browse..' button for the destination location.
- Maybe: 'Edit' button on the right of the description field to change the   description as it is saved as well

Refacting Properties page:
- No check boxes on tree
- Buttons 'Remove', 'Edit'
I reworked the script UI to reflect the findings from the stand-up meeting.
Create Script is now a dialog page with the suggested layout.

Fixed in HEAD &gt; 20060206</WithStack>
    <WithOutStack>20060127

Findings from the stand-up demo:

a.) Save Script
(we will stick with the term 'Save' for now. Export is a bit different. It would have to go to the export wizard and also would need a 'import')

'Save Script' Dialog.
- Dialog buttons: 'Save' 'Cancel'
- Buttons on the right: 'Select All' 'Deselect All'.
- Label on top of the table:
    'Select the refactorings to save as a new script:'
- Below the table: Text input field with 'Browse..' button for the destination location.
- Maybe: 'Edit' button on the right of the description field to change the   description as it is saved as well

Refacting Properties page:
- No check boxes on tree
- Buttons 'Remove', 'Edit'
I reworked the script UI to reflect the findings from the stand-up meeting.
Create Script is now a dialog page with the suggested layout.

Fixed in HEAD &gt; 20060206</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125475" />
    <CreationDate amount="2006-01-27 09:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="DEVELOPMENT" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[@AspectJ] ajc cannot compile empty @Pointcut</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="236" end="322" />
        <code>public class TestEmptyPointcutAtAspect {

	@Pointcut("")
	protected void scope () {}
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="668" end="694" />
        <code>protected void scope () {}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I get this error:

C:\temp\ajcSandbox\ajcTest27856.tmp\TestEmptyPointcutAtAspect.java:8:0::0 Method annotated with @Pointcut() for abstract pointcut must be abstract

when compiling this aspect with ajc (it's fine with javac):

@Aspect
public class TestEmptyPointcutAtAspect {

	@Pointcut("")
	protected void scope () {}
}
Created attachment 33703
Testcase (combined with 125480)
I presume you are trying to define an empty (matches nothing but overridable) scope pointcut rather than an abstract scope pointcut?
The testcase tries to implement an inherited abstract pointcut defined in a parent code-style aspect.
Another way to express this is of course:

@Pointcut
protected void scope () {}

which doesnt work either.

I see in the patch several files duplicated in a tests/ltw directory that are also in the tests/bugs151/pr125480 directory.  I'm ignoring the ones in the tests/ltw directory - they don't seem to be referenced from the test XML.  I'm assuming they are just leftover after moving the code to the bugs folder.

The basic problem here seems to be @AJ doesnt understand empty matches nothing pointcut expressions.  I've rectified this - it isn't as clean as it could be but it works ok (the tests for 125475 and 125480 work for me).


fix available.</WithStack>
    <WithOutStack>I get this error:

C:\temp\ajcSandbox\ajcTest27856.tmp\TestEmptyPointcutAtAspect.java:8:0::0 Method annotated with @Pointcut() for abstract pointcut must be abstract

when compiling this aspect with ajc (it's fine with javac):

@Aspect
public class TestEmptyPointcutAtAspect {

	@Pointcut("")
	protected void scope () {}
}
Created attachment 33703
Testcase (combined with 125480)
I presume you are trying to define an empty (matches nothing but overridable) scope pointcut rather than an abstract scope pointcut?
The testcase tries to implement an inherited abstract pointcut defined in a parent code-style aspect.
Another way to express this is of course:

@Pointcut
protected void scope () {}

which doesnt work either.

I see in the patch several files duplicated in a tests/ltw directory that are also in the tests/bugs151/pr125480 directory.  I'm ignoring the ones in the tests/ltw directory - they don't seem to be referenced from the test XML.  I'm assuming they are just leftover after moving the code to the bugs folder.

The basic problem here seems to be @AJ doesnt understand empty matches nothing pointcut expressions.  I've rectified this - it isn't as clean as it could be but it works ok (the tests for 125475 and 125480 work for me).


fix available.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125476" />
    <CreationDate amount="2006-01-27 09:42:00 -0500" />
    <DupId amount="" />
    <classification amount="DataTools" />
    <Product amount="Data Tools" />
    <component amount="Connectivity" />
    <Version amount="0.7" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Use ICU4J Classes in DTP Connectivity components</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Use ICU4J Classes
ICU4J changes complete
ICU4J changes complete in ODA plugins
Temporarily rolled back ICU4J adoption in Connectivity ODA projects, due to problem found on Windows XP with NPE at 
com.ibm.icu.util.TimeZone.getDefault(TimeZone.java:697)

See problem description in Bugzilla #127221 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=127221

Re-committed ICU4J implementation in ODA plugins.

Per note from the ICU team in #127582:
"the ICU4J fix has been made and is scheduled for ICU4J 3.4.3, which
should be released in a week or so.  That should be in time to go into Eclipse
3.2M6."

A temporary work-around for those WindowsXP platforms, which return an offset-based time zone style id, is to configure the Windows time zone to “GMT”, and set the time according to local time.

Migrated use of java.util.Locale to icu ULocale in oda.design project.
verified and closing</WithStack>
    <WithOutStack>Use ICU4J Classes
ICU4J changes complete
ICU4J changes complete in ODA plugins
Temporarily rolled back ICU4J adoption in Connectivity ODA projects, due to problem found on Windows XP with NPE at 
com.ibm.icu.util.TimeZone.getDefault(TimeZone.java:697)

See problem description in Bugzilla #127221 
https://bugs.eclipse.org/bugs/show_bug.cgi?id=127221

Re-committed ICU4J implementation in ODA plugins.

Per note from the ICU team in #127582:
"the ICU4J fix has been made and is scheduled for ICU4J 3.4.3, which
should be released in a week or so.  That should be in time to go into Eclipse
3.2M6."

A temporary work-around for those WindowsXP platforms, which return an offset-based time zone style id, is to configure the Windows time zone to “GMT”, and set the time according to local time.

Migrated use of java.util.Locale to icu ULocale in oda.design project.
verified and closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125477" />
    <CreationDate amount="2006-01-27 09:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Runtime" />
    <component amount="General" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Existing view detected dialog should handle elements with no names</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="319" end="350" />
        <code>EObjectUtil.getName(element)));</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The dialog shown by CreateViewAndOptionallyElementCommand where there is already a view of the diagram for the element chosen is not grammatically correct if the element has no name.  See the doExecute() method:
messageBox.setMessage(NLS.bind(DiagramUIMessages.CreateViewAndOptionallyElementCommand_ViewExists_Message,
EObjectUtil.getName(element)));
See also #125674.
Created attachment 33775
patch that refactors dialog so users may implement their own policy to reuse views
Applied patch - Added new method so clients can subclass to customize the dialog: CreateViewAndOptionallyElementCommand.useExistingView()

[GMF Restructure] Bug 319140 : product GMF and component
Runtime Diagram was the original product and component for this bug</WithStack>
    <WithOutStack>The dialog shown by CreateViewAndOptionallyElementCommand where there is already a view of the diagram for the element chosen is not grammatically correct if the element has no name.  See the doExecute() method:
messageBox.setMessage(NLS.bind(DiagramUIMessages.CreateViewAndOptionallyElementCommand_ViewExists_Message,
EObjectUtil.getName(element)));
See also #125674.
Created attachment 33775
patch that refactors dialog so users may implement their own policy to reuse views
Applied patch - Added new method so clients can subclass to customize the dialog: CreateViewAndOptionallyElementCommand.useExistingView()

[GMF Restructure] Bug 319140 : product GMF and component
Runtime Diagram was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125478" />
    <CreationDate amount="2006-01-27 09:48:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Runtime" />
    <component amount="General" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Improve rendering quality to external image bitmap format...</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When using File "Save as Image file", and exporting figure with gradient, then the display of the gradient will not be smooth (you will see concentric ovals of degrading colors going from the border to the center of the figure).

This could be escalated to SWT since we are calling their api through ImageLoader.  Though there could be workarounds in GMF by using AWT image export apis or through batik libraries.
      
Note:

If you take the svg format and transform it to jpeg manually using the Batik 1.6 library:
http://xml.apache.org/batik/svgrasterizer.html
and a command line like:
Prompt&gt;java -Xmx768M -jar batik-rasterizer.jar -m image/jpeg C:\\*.svg
ERROR: The JPEG quality has not been specified. Use the default one: no compression... success

You will see that the jpeg format is better than the one created with File-&gt;Save as Image File.
Upgrading priority
Used Batik library transcoders to export rendered BufferedImage to PNG and JPEG file formats.  Using these 2 file formats should improve rendering quality considerably.

I'll log a separate SWT defect for other file formats (GIF, JPG, BMP)
[target cleanup] 1.0 M6 was the original target milestone for this bug
[GMF Restructure] Bug 319140 : product GMF and component Runtime Diagram was the original product and component for this bug</WithStack>
    <WithOutStack>When using File "Save as Image file", and exporting figure with gradient, then the display of the gradient will not be smooth (you will see concentric ovals of degrading colors going from the border to the center of the figure).

This could be escalated to SWT since we are calling their api through ImageLoader.  Though there could be workarounds in GMF by using AWT image export apis or through batik libraries.
      
Note:

If you take the svg format and transform it to jpeg manually using the Batik 1.6 library:
http://xml.apache.org/batik/svgrasterizer.html
and a command line like:
Prompt&gt;java -Xmx768M -jar batik-rasterizer.jar -m image/jpeg C:\\*.svg
ERROR: The JPEG quality has not been specified. Use the default one: no compression... success

You will see that the jpeg format is better than the one created with File-&gt;Save as Image File.
Upgrading priority
Used Batik library transcoders to export rendered BufferedImage to PNG and JPEG file formats.  Using these 2 file formats should improve rendering quality considerably.

I'll log a separate SWT defect for other file formats (GIF, JPG, BMP)
[target cleanup] 1.0 M6 was the original target milestone for this bug
[GMF Restructure] Bug 319140 : product GMF and component Runtime Diagram was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125479" />
    <CreationDate amount="2006-01-27 09:48:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="MDT.OCL" />
    <component amount="Core" />
    <Version amount="1.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ANTLR plug-in should be reexported</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>the ANTLR plug-in should be reexported as long as ExpressionsUtil is API. 
We should also move that class to an internal package because it really
isn't as useful as IOclHelper (but is used internally by the helper).
... and works for the submitter, too.  :-)
Closing after over 18 months in resolved state.</WithStack>
    <WithOutStack>the ANTLR plug-in should be reexported as long as ExpressionsUtil is API. 
We should also move that class to an internal package because it really
isn't as useful as IOclHelper (but is used internally by the helper).
... and works for the submitter, too.  :-)
Closing after over 18 months in resolved state.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125480" />
    <CreationDate amount="2006-01-27 09:48:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="LTWeaving" />
    <Version amount="DEVELOPMENT" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[ltw] aop.xml aspect generator treats abstract methods as pointcuts</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>An aop.xml aspect cannot inherit an abstract method but it should inherit one that has already been made concrete in a super-aspect. At the moment an abstract method "test()" causes the follow error during LTW:

info AspectJ Weaver Version DEVELOPMENT built on 
info register classloader org.aspectj.weaver.loadtime.WeavingURLClassLoader
info using /C:/temp/ajcSandbox/ajcTest6462.tmp/META-INF/aop.xml
error Abstract pointcut 'test' not configured: &lt;concrete-aspect name='TraceHelloWorld' extends='ConcreteMethods'/&gt; in aop.xml
warning register definition failed -- (AbortException) Abstract pointcut 'test' not configured: &lt;concrete-aspect name='TraceHelloWorld' extends='ConcreteMethods'/&gt; in aop.xml
Abstract pointcut 'test' not configured: &lt;concrete-aspect name='TraceHelloWorld' extends='ConcreteMethods'/&gt; in aop.xml
Message: error Abstract pointcut 'test' not configured: &lt;concrete-aspect name='TraceHelloWorld' extends='ConcreteMethods'/&gt; in aop.xml
org.aspectj.bridge.AbortException: Abstract pointcut 'test' not configured: &lt;concrete-aspect name='TraceHelloWorld' extends='ConcreteMethods'/&gt; in aop.xml
Created attachment 33704
Testcase (combined with 125875)
hmmm - shame matthews test doesn't actually fail when it doesnt work !  I just glanced at this bug and went to find it in ajc151tests - it already exists and is committed, it should be failing as I see an AbortException as mentioned in the abstract, but it doesnt.  I suspect it got committed with the patch for 125475 since the patches in each of these bugs included tests for both bugs.

I fixed the test so it now fails properly - I also created a second variant where the super aspect is annotation style.

The code looking at concretizing pointcuts in XML makes no allowance for whether the abstract method is a pointcut or not.  I modified it to actually check for @Pointcut (seems reasonable!) before barfing.

I moved the tests into ajc152

it also revealed a new bug - we have no logic that verifies there aren't abstract methods leftover in the hierarchy of an aspect we are trying to concretize in XML.  We simply ignore them, go ahead and create the concrete aspect and then crash with an abstract method error at runtime.  I'll raise a new bug for this...

tests/fixes committed</WithStack>
    <WithOutStack>An aop.xml aspect cannot inherit an abstract method but it should inherit one that has already been made concrete in a super-aspect. At the moment an abstract method "test()" causes the follow error during LTW:

info AspectJ Weaver Version DEVELOPMENT built on 
info register classloader org.aspectj.weaver.loadtime.WeavingURLClassLoader
info using /C:/temp/ajcSandbox/ajcTest6462.tmp/META-INF/aop.xml
error Abstract pointcut 'test' not configured: &lt;concrete-aspect name='TraceHelloWorld' extends='ConcreteMethods'/&gt; in aop.xml
warning register definition failed -- (AbortException) Abstract pointcut 'test' not configured: &lt;concrete-aspect name='TraceHelloWorld' extends='ConcreteMethods'/&gt; in aop.xml
Abstract pointcut 'test' not configured: &lt;concrete-aspect name='TraceHelloWorld' extends='ConcreteMethods'/&gt; in aop.xml
Message: error Abstract pointcut 'test' not configured: &lt;concrete-aspect name='TraceHelloWorld' extends='ConcreteMethods'/&gt; in aop.xml
org.aspectj.bridge.AbortException: Abstract pointcut 'test' not configured: &lt;concrete-aspect name='TraceHelloWorld' extends='ConcreteMethods'/&gt; in aop.xml
Created attachment 33704
Testcase (combined with 125875)
hmmm - shame matthews test doesn't actually fail when it doesnt work !  I just glanced at this bug and went to find it in ajc151tests - it already exists and is committed, it should be failing as I see an AbortException as mentioned in the abstract, but it doesnt.  I suspect it got committed with the patch for 125475 since the patches in each of these bugs included tests for both bugs.

I fixed the test so it now fails properly - I also created a second variant where the super aspect is annotation style.

The code looking at concretizing pointcuts in XML makes no allowance for whether the abstract method is a pointcut or not.  I modified it to actually check for @Pointcut (seems reasonable!) before barfing.

I moved the tests into ajc152

it also revealed a new bug - we have no logic that verifies there aren't abstract methods leftover in the hierarchy of an aspect we are trying to concretize in XML.  We simply ignore them, go ahead and create the concrete aspect and then crash with an abstract method error at runtime.  I'll raise a new bug for this...

tests/fixes committed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125481" />
    <CreationDate amount="2006-01-27 09:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>PDE should add new package to MANIFEST.MF</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>a) patterns for package names that should be exported by default, and</Line>
          <Line>b) patterns for package names that should be x-internal:=true by default</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20060125-0800

When plugin implementors add a new package to their plugin, they often forget to add it to the Export-Package: section of the MANIFEST.MF. PDE should automatically add new packages to the MANIFEST.MF (like the Organize Manifest action does it).
It would be too intrusive to automatically stuff to people's manifests.  Who's to say everybody wants to export everything. 

An optional warning on the manifest with a quickfix would be a better approach.
A warning would also be nice, but I think the tooling should be able to manage this automatically.

Organize Manifest currently also doesn't know about my export policy, so I think it's time for a (project-specific) setting. Users should be able to specify
a) patterns for package names that should be exported by default, and
b) patterns for package names that should be x-internal:=true by default

Eclipse plugins would typically set a) to "*" and b) to "*.internal.*".
The Organize manifests wizard addresses all these issues.</WithStack>
    <WithOutStack>I20060125-0800

When plugin implementors add a new package to their plugin, they often forget to add it to the Export-Package: section of the MANIFEST.MF. PDE should automatically add new packages to the MANIFEST.MF (like the Organize Manifest action does it).
It would be too intrusive to automatically stuff to people's manifests.  Who's to say everybody wants to export everything. 

An optional warning on the manifest with a quickfix would be a better approach.
A warning would also be nice, but I think the tooling should be able to manage this automatically.

Organize Manifest currently also doesn't know about my export policy, so I think it's time for a (project-specific) setting. Users should be able to specify
a) patterns for package names that should be exported by default, and
b) patterns for package names that should be x-internal:=true by default

Eclipse plugins would typically set a) to "*" and b) to "*.internal.*".
The Organize manifests wizard addresses all these issues.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125482" />
    <CreationDate amount="2006-01-27 10:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Runtime" />
    <component amount="General" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>AbstractActionDelegate using wrong shell</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>AbstractActionDelegate.openErrorDialog() is passing the wrong shell the ErrorDialog.openError().  This is causing runtime problems - invalid thread access.  See the Javadoc in getShell().
AbstractActionDelegates must run on the UI thread. 

Wayne introduced an AbstractThreadSafeActionDelegate in Bug 123979 that you can subclass if your action delegate is designed to run on a non-UI thread.  Will this meet your requirements?
I propose, at a minimum, that we check to see whether or not we are on the UI thread before opening the error dialog.  If the action delegate is not running on the UI thread, then no error dialog will be shown.
Delivered the fix.  AbstractActionDelegate will now show an error dialog regardless of whether or not it is running on a UI thread or a non-UI thread.

Normally, one expects action delegates to run on the UI thread.  However, the ActionManager can run the delegate in a cancelable progress monitor dialog, which forks a background thread. Our ActionManager design causes clients to run the delegates on a non-UI thread.  We should take a closer look at this problem.  For now, I'm fixing the AbstractActionDelegate so that it can handle both cases.

Also deprecated the AbstractThreadSafeActionDelegate, since it is no longer required.  The AbstractActionDelegate can handle reporting errors on both the UI and non-UI threads.
Reopening to track deletion of deprecated AbstractThreadSafeActionDelegate in M6.
Removed the deprecated AbstractThreadSafeActionDelegate.
[target cleanup] 1.0 M6 was the original target milestone for this bug
[GMF Restructure] Bug 319140 : product GMF and component
Runtime Common was the original product and component for this bug</WithStack>
    <WithOutStack>AbstractActionDelegate.openErrorDialog() is passing the wrong shell the ErrorDialog.openError().  This is causing runtime problems - invalid thread access.  See the Javadoc in getShell().
AbstractActionDelegates must run on the UI thread. 

Wayne introduced an AbstractThreadSafeActionDelegate in Bug 123979 that you can subclass if your action delegate is designed to run on a non-UI thread.  Will this meet your requirements?
I propose, at a minimum, that we check to see whether or not we are on the UI thread before opening the error dialog.  If the action delegate is not running on the UI thread, then no error dialog will be shown.
Delivered the fix.  AbstractActionDelegate will now show an error dialog regardless of whether or not it is running on a UI thread or a non-UI thread.

Normally, one expects action delegates to run on the UI thread.  However, the ActionManager can run the delegate in a cancelable progress monitor dialog, which forks a background thread. Our ActionManager design causes clients to run the delegates on a non-UI thread.  We should take a closer look at this problem.  For now, I'm fixing the AbstractActionDelegate so that it can handle both cases.

Also deprecated the AbstractThreadSafeActionDelegate, since it is no longer required.  The AbstractActionDelegate can handle reporting errors on both the UI and non-UI threads.
Reopening to track deletion of deprecated AbstractThreadSafeActionDelegate in M6.
Removed the deprecated AbstractThreadSafeActionDelegate.
[target cleanup] 1.0 M6 was the original target milestone for this bug
[GMF Restructure] Bug 319140 : product GMF and component
Runtime Common was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125483" />
    <CreationDate amount="2006-01-27 10:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Patch to ModelProvider</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I will attach a patch to the model provider code that supports retrieval of matching mappings based on traversals instead of resources. This is need to avoid the case where an operation on a shallow folder (e.g. Java package) sucks in all the decendants of the folder.
Created attachment 33706
Here's the patch
Created attachment 33712
A better patch
Patch released.</WithStack>
    <WithOutStack>I will attach a patch to the model provider code that supports retrieval of matching mappings based on traversals instead of resources. This is need to avoid the case where an operation on a shallow folder (e.g. Java package) sucks in all the decendants of the folder.
Created attachment 33706
Here's the patch
Created attachment 33712
A better patch
Patch released.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125484" />
    <CreationDate amount="2006-01-27 10:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Model Sync] Optimize ModelProvider traversal matching</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>The default traversal matching code in ModelProvider should perform a refresh on all shallow folders before accumulating the resources. This will avoid slownes due to multiple connections if there are multiple shallow folders selected.
We don't hit the server anymore.</WithStack>
    <WithOutStack>The default traversal matching code in ModelProvider should perform a refresh on all shallow folders before accumulating the resources. This will avoid slownes due to multiple connections if there are multiple shallow folders selected.
We don't hit the server anymore.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125485" />
    <CreationDate amount="2006-01-27 10:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Terminate failed during startup</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330652694">
        <Exception>org.eclipse.debug.core.DebugException</Exception>
        <Reason>Terminate failed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.debug.core.Launch.terminate(Launch.java:275)</Frame>
          <Frame depth="1">org.eclipse.jdt.launching.AbstractVMInstall.evaluateSystemProperties(AbstractVMInstall.java:408)</Frame>
          <Frame depth="2">org.eclipse.pde.internal.core.ExecutionEnvironmentAnalyzer.analyze(ExecutionEnvironmentAnalyzer.java:98)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.launching.environments.Analyzer.analyze(Analyzer.java:41)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.launching.environments.EnvironmentsManager.analyze(EnvironmentsManager.java:295)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.launching.environments.EnvironmentsManager.initializeCompatibilities(EnvironmentsManager.java:200)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.launching.environments.ExecutionEnvironment.init(ExecutionEnvironment.java:64)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.launching.environments.ExecutionEnvironment.getDefaultVM(ExecutionEnvironment.java:101)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.launching.JREContainerInitializer.resolveVM(JREContainerInitializer.java:74)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.launching.JREContainerInitializer.initialize(JREContainerInitializer.java:51)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:1748)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:1172)</Frame>
          <Frame depth="12">org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1458)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:2154)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:2058)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaSearchScope.java:107)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.initialize(JavaWorkspaceScope.java:84)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.core.search.JavaSearchScope.&lt;init&gt;(JavaSearchScope.java:61)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.core.search.JavaSearchScope.&lt;init&gt;(JavaSearchScope.java:57)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.&lt;init&gt;(JavaWorkspaceScope.java:29)</Frame>
          <Frame depth="20">org.eclipse.jdt.internal.core.JavaModelManager.getWorkspaceScope(JavaModelManager.java:1553)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.core.search.BasicSearchEngine.createWorkspaceScope(BasicSearchEngine.java:155)</Frame>
          <Frame depth="22">org.eclipse.jdt.core.search.SearchEngine.createWorkspaceScope(SearchEngine.java:397)</Frame>
          <Frame depth="23">org.eclipse.jdt.core.JavaCore.initializeAfterLoad(JavaCore.java:2814)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob.run(InitializeAfterLoadJob.java:35)</Frame>
          <Frame depth="25">org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Using eclipse.buildId=I20060125-0800
java.version=1.4.2_10-ea
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_CA
Framework arguments:  -showlocation
Command-line arguments:  -os win32 -ws win32 -arch x86 -debug -consolelog -showlocation -clean

I don't know what I have done to get it. This was in the .log file.

org.eclipse.debug.core.DebugException: Terminate failed
at org.eclipse.debug.core.Launch.terminate(Launch.java:275)
at org.eclipse.jdt.launching.AbstractVMInstall.evaluateSystemProperties(AbstractVMInstall.java:408)
at org.eclipse.pde.internal.core.ExecutionEnvironmentAnalyzer.analyze(ExecutionEnvironmentAnalyzer.java:98)
at org.eclipse.jdt.internal.launching.environments.Analyzer.analyze(Analyzer.java:41)
at org.eclipse.jdt.internal.launching.environments.EnvironmentsManager.analyze(EnvironmentsManager.java:295)
at org.eclipse.jdt.internal.launching.environments.EnvironmentsManager.initializeCompatibilities(EnvironmentsManager.java:200)
at org.eclipse.jdt.internal.launching.environments.ExecutionEnvironment.init(ExecutionEnvironment.java:64)
at org.eclipse.jdt.internal.launching.environments.ExecutionEnvironment.getDefaultVM(ExecutionEnvironment.java:101)
at org.eclipse.jdt.internal.launching.JREContainerInitializer.resolveVM(JREContainerInitializer.java:74)
at org.eclipse.jdt.internal.launching.JREContainerInitializer.initialize(JREContainerInitializer.java:51)
at org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:1748)
at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:1172)
at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:1458)
at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:2154)
at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:2058)
at org.eclipse.jdt.internal.core.search.JavaSearchScope.add(JavaSearchScope.java:107)
at org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.initialize(JavaWorkspaceScope.java:84)
at org.eclipse.jdt.internal.core.search.JavaSearchScope.&lt;init&gt;(JavaSearchScope.java:61)
at org.eclipse.jdt.internal.core.search.JavaSearchScope.&lt;init&gt;(JavaSearchScope.java:57)
at org.eclipse.jdt.internal.core.search.JavaWorkspaceScope.&lt;init&gt;(JavaWorkspaceScope.java:29)
at org.eclipse.jdt.internal.core.JavaModelManager.getWorkspaceScope(JavaModelManager.java:1553)
at org.eclipse.jdt.internal.core.search.BasicSearchEngine.createWorkspaceScope(BasicSearchEngine.java:155)
at org.eclipse.jdt.core.search.SearchEngine.createWorkspaceScope(SearchEngine.java:397)
at org.eclipse.jdt.core.JavaCore.initializeAfterLoad(JavaCore.java:2814)
at org.eclipse.jdt.internal.ui.InitializeAfterLoadJob$RealJob.run(InitializeAfterLoadJob.java:35)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)
This is related to bug 124137. Slightly different failure, but same problem area.
Marking as works for me. Have not seen with the fix to bug 124137. Please re-open if still an issue.</WithStack>
    <WithOutStack>Using eclipse.buildId=I20060125-0800
java.version=1.4.2_10-ea
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=fr_CA
Framework arguments:  -showlocation
Command-line arguments:  -os win32 -ws win32 -arch x86 -debug -consolelog -showlocation -clean

I don't know what I have done to get it. This was in the .log file.


This is related to bug 124137. Slightly different failure, but same problem area.
Marking as works for me. Have not seen with the fix to bug 124137. Please re-open if still an issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125486" />
    <CreationDate amount="2006-01-27 10:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[refactoring] Delete subpackages of default package should not be available</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20060125-0800

Delete subpackages of default package should not be available.
Also check special case in JavaElementUtil#getPackageAndSubpackages().
I strongly agree after having deleted my last weeks project with one click.
Thanks for having a local history ;-)

This is especially an issue because it looks like it would be another package although it is actually the root of _all_ packages.

(I used the default package only to import sample code and wanted to get rid of it before making a release.)
Fixed in HEAD and added regression tests.</WithStack>
    <WithOutStack>I20060125-0800

Delete subpackages of default package should not be available.
Also check special case in JavaElementUtil#getPackageAndSubpackages().
I strongly agree after having deleted my last weeks project with one click.
Thanks for having a local history ;-)

This is especially an issue because it looks like it would be another package although it is actually the root of _all_ packages.

(I used the default package only to import sample code and wanted to get rid of it before making a release.)
Fixed in HEAD and added regression tests.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125487" />
    <CreationDate amount="2006-01-27 10:40:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="1.5" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>J2EE navigator needs to move to eclipse common navigator</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Problem essentially is that with WTP 1.0.1, contributed items (via EMF item providers) are not showing their label and icon in the J2EE navigator:

Here's the history of discussion between M.Elder and J.Lanuiti on this matter:

--------------------------------------

There was an explicit decision to require all clients to declare all of their "enabled" contributions up front in the WTP version of the Navigator. In RAD, it would remember who contributed what and go back to that contributor for labels and icons (the ILabelProvider of the contributor). However, we saw issues with things like "Link with Editor" when clients didn't declare all of their contributions (since the framework doesn't know who to go to for a parent of a given element). Therefore, the restriction was changed to require clients to be explicit. 

I doubt that servers or web services are tapped into another navigator extension. Remember, here we have a case where the J2EE extension lays down the Common Navigator extension, and the AST crew taps into another extension point (used by the J2EE extension) to provide content. The provided content is not described in the enables clause. 

The short term solution (as we've discussed on two prior occasions) is to insert the potential contributions of the AST EMF Packages directly into the J2EE extension definition. Then the framework would return to the J2EE provider for icons/labels and it would delegate through to the AST "adapterFactory" extension (using a DynamicAdapterFactory).  

In Platform/UI, I reverted the support largely to support cases like this. There's still the caveat that the framework may not be able to find a valid parent for link with editor if everything isn't described for each extension. The only alternative would be to search every extension for one that could provide a parent -- but the performance of this approach limits its viability.


-------------------------------------------------------------------------
Kind Regards,

Michael D. Elder
The WTP project explorer is now based on the eclipse 3.2 common navigator in the latest WTP I build for 02/17/06.  

All new problems since this port will be treated as new defects, for example, drag and drop, delete button, etc.
Verified, closing.</WithStack>
    <WithOutStack>Problem essentially is that with WTP 1.0.1, contributed items (via EMF item providers) are not showing their label and icon in the J2EE navigator:

Here's the history of discussion between M.Elder and J.Lanuiti on this matter:

--------------------------------------

There was an explicit decision to require all clients to declare all of their "enabled" contributions up front in the WTP version of the Navigator. In RAD, it would remember who contributed what and go back to that contributor for labels and icons (the ILabelProvider of the contributor). However, we saw issues with things like "Link with Editor" when clients didn't declare all of their contributions (since the framework doesn't know who to go to for a parent of a given element). Therefore, the restriction was changed to require clients to be explicit. 

I doubt that servers or web services are tapped into another navigator extension. Remember, here we have a case where the J2EE extension lays down the Common Navigator extension, and the AST crew taps into another extension point (used by the J2EE extension) to provide content. The provided content is not described in the enables clause. 

The short term solution (as we've discussed on two prior occasions) is to insert the potential contributions of the AST EMF Packages directly into the J2EE extension definition. Then the framework would return to the J2EE provider for icons/labels and it would delegate through to the AST "adapterFactory" extension (using a DynamicAdapterFactory).  

In Platform/UI, I reverted the support largely to support cases like this. There's still the caveat that the framework may not be able to find a valid parent for link with editor if everything isn't described for each extension. The only alternative would be to search every extension for one that could provide a parent -- but the performance of this approach limits its viability.


-------------------------------------------------------------------------
Kind Regards,

Michael D. Elder
The WTP project explorer is now based on the eclipse 3.2 common navigator in the latest WTP I build for 02/17/06.  

All new problems since this port will be treated as new defects, for example, drag and drop, delete button, etc.
Verified, closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125488" />
    <CreationDate amount="2006-01-27 10:43:00 -0500" />
    <DupId amount="" />
    <classification amount="WebTools" />
    <Product amount="WTP Java EE Tools" />
    <component amount="jst.j2ee" />
    <Version amount="1.5" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[project explorer] Random exceptions from common viewer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330652694">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Widget is disposed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2942)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2865)</Frame>
          <Frame depth="2">org.eclipse.swt.SWT.error(SWT.java:2836)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.error(Widget.java:395)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:297)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.TreeItem.getItemCount(TreeItem.java:566)</Frame>
          <Frame depth="6">org.eclipse.jface.viewers.TreeViewer.getItemCount(TreeViewer.java:379)</Frame>
          <Frame depth="7">org.eclipse.jface.viewers.AbstractTreeViewer.updatePlus(AbstractTreeViewer.java:1844)</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:536)</Frame>
          <Frame depth="9">org.eclipse.wst.common.navigator.internal.provisional.views.CommonViewer.createTreeItem(CommonViewer.java:201)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.AbstractTreeViewer$1.run(AbstractTreeViewer.java:514)</Frame>
          <Frame depth="11">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:494)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.AbstractTreeViewer.handleTreeExpand(AbstractTreeViewer.java:948)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.AbstractTreeViewer$4.treeExpanded(AbstractTreeViewer.java:959)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:180)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Tree.wmNotifyChild(Tree.java:3704)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:3568)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Composite.WM_NOTIFY(Composite.java:1035)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Control.windowProc(Control.java:3089)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Display.windowProc(Display.java:3751)</Frame>
          <Frame depth="25">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="26">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1580)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java:219)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Tree.WM_LBUTTONDOWN(Tree.java:2815)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Control.windowProc(Control.java:3071)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Tree.windowProc(Tree.java:2391)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Display.windowProc(Display.java:3751)</Frame>
          <Frame depth="32">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="33">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1656)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2756)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)</Frame>
          <Frame depth="38">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)</Frame>
          <Frame depth="40">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="41">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)</Frame>
          <Frame depth="42">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)</Frame>
          <Frame depth="43">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="44">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="46">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="47">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="48">org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:278)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:973)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:948)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Sometimes when expanding the EJBs in the J2EE navigator, widget exceptions occur and the key attributes do not show (this occurs randomly).

When the J2EE item providers are re-used in other editors, the same random problems occur.
Len, do you still see this?  And if so, can you paste some stack traces?
Just reproduced an exception after about 10 tries on one ejb:

org.eclipse.swt.SWTException: Widget is disposed
	at org.eclipse.swt.SWT.error(SWT.java:2942)
	at org.eclipse.swt.SWT.error(SWT.java:2865)
	at org.eclipse.swt.SWT.error(SWT.java:2836)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:395)
	at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:297)
	at org.eclipse.swt.widgets.TreeItem.getItemCount(TreeItem.java:566)
	at org.eclipse.jface.viewers.TreeViewer.getItemCount(TreeViewer.java:379)
	at org.eclipse.jface.viewers.AbstractTreeViewer.updatePlus(AbstractTreeViewer.java:1844)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:536)
	at org.eclipse.wst.common.navigator.internal.provisional.views.CommonViewer.createTreeItem(CommonViewer.java:201)
	at org.eclipse.jface.viewers.AbstractTreeViewer$1.run(AbstractTreeViewer.java:514)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:494)
	at org.eclipse.jface.viewers.AbstractTreeViewer.handleTreeExpand(AbstractTreeViewer.java:948)
	at org.eclipse.jface.viewers.AbstractTreeViewer$4.treeExpanded(AbstractTreeViewer.java:959)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:180)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:843)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:867)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:852)
	at org.eclipse.swt.widgets.Tree.wmNotifyChild(Tree.java:3704)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:3568)
	at org.eclipse.swt.widgets.Composite.WM_NOTIFY(Composite.java:1035)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3089)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3751)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1580)
	at org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java:219)
	at org.eclipse.swt.widgets.Tree.WM_LBUTTONDOWN(Tree.java:2815)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3071)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:2391)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3751)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1656)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2756)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1699)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1663)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:367)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:334)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:278)
	at org.eclipse.core.launcher.Main.run(Main.java:973)
	at org.eclipse.core.launcher.Main.main(Main.java:948)

These problems are often due to the J2EE Item Providers recreating an object instead of returning the same model element. There is nothing that the core framework will do to correct these problems. At best, the viewer will not allow an extension to cause the viewer to fail to load. If that is the case (which it does not sound like it is from this PR), then open a defect with the specific heading "Error from extension causes CommonViewer to fail to load". Thank you.
It has been over 3 years since the last comment on this bug.  I am closing it as WONTFIX.  If the issue still happens, please reopen this bug.</WithStack>
    <WithOutStack>Sometimes when expanding the EJBs in the J2EE navigator, widget exceptions occur and the key attributes do not show (this occurs randomly).

When the J2EE item providers are re-used in other editors, the same random problems occur.
Len, do you still see this?  And if so, can you paste some stack traces?
Just reproduced an exception after about 10 tries on one ejb:



These problems are often due to the J2EE Item Providers recreating an object instead of returning the same model element. There is nothing that the core framework will do to correct these problems. At best, the viewer will not allow an extension to cause the viewer to fail to load. If that is the case (which it does not sound like it is from this PR), then open a defect with the specific heading "Error from extension causes CommonViewer to fail to load". Thank you.
It has been over 3 years since the last comment on this bug.  I am closing it as WONTFIX.  If the issue still happens, please reopen this bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125489" />
    <CreationDate amount="2006-01-27 10:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>ICU4J support</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) Type in API signature may change.</Line>
          <Line>2) Serialization of data using these localized APIs.</Line>
          <Line>This is targeted for Eclipse 3.2 Milestone M3 by the Platform team.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>ICU4J has been accepted by the Planning/Architect/Requirements Council of 
Eclipse. This will mean small changes for development teams in 2 areas. 
1) Type in API signature may change.  
2) Serialization of data using these localized APIs.
This is targeted for Eclipse 3.2 Milestone M3 by the Platform team.  

ICU4J adds specific unicode support, and enhanced collation, date and time 
formatting.

+ ICU4J can be found in eclipse/plugins/com.ibm.icu_3.4.2.jar.
+ The platform will migrate first.  After the platform migrates, other areas
will also migrate.
Created attachment 34503
ICU import changes and adding of dependency
Attached a patch.  All I did was add the com.ibm.icu dependency where necessary and searched for these classes and replaced them with the com.ibm.icu equivalent:
           x BreakIterator
           x CollationKey
           x Collator
           x DateFormat
           x DecimalFormat
           x NumberFormat
           x SimpleDateFormat
           x StringTokenizer
           x Calendar
           x TimeZone
           x ULocale
           x DateFormatSymbols
           x DecimalFormatSymbols
I also changed example plugins, not sure if these need to be done, but I guess there is no harm.

Need to wait until platform has adopted before GEF will adopt. The lightweight wrapper plug-in for ICU4J is not ready which has a unique ID we will need to reference in the Manifest before adopting.
Waiting for lightweight ICU4J wrapper plug-in before committing...
Submitted patch.

- Made minor changes to reflect code churn since patch was created.


Steve, I thought we had agreed and gotten approval from "Callisto" that Draw2d would not have any dependencies other than SWT.</WithStack>
    <WithOutStack>ICU4J has been accepted by the Planning/Architect/Requirements Council of 
Eclipse. This will mean small changes for development teams in 2 areas. 
1) Type in API signature may change.  
2) Serialization of data using these localized APIs.
This is targeted for Eclipse 3.2 Milestone M3 by the Platform team.  

ICU4J adds specific unicode support, and enhanced collation, date and time 
formatting.

+ ICU4J can be found in eclipse/plugins/com.ibm.icu_3.4.2.jar.
+ The platform will migrate first.  After the platform migrates, other areas
will also migrate.
Created attachment 34503
ICU import changes and adding of dependency
Attached a patch.  All I did was add the com.ibm.icu dependency where necessary and searched for these classes and replaced them with the com.ibm.icu equivalent:
           x BreakIterator
           x CollationKey
           x Collator
           x DateFormat
           x DecimalFormat
           x NumberFormat
           x SimpleDateFormat
           x StringTokenizer
           x Calendar
           x TimeZone
           x ULocale
           x DateFormatSymbols
           x DecimalFormatSymbols
I also changed example plugins, not sure if these need to be done, but I guess there is no harm.

Need to wait until platform has adopted before GEF will adopt. The lightweight wrapper plug-in for ICU4J is not ready which has a unique ID we will need to reference in the Manifest before adopting.
Waiting for lightweight ICU4J wrapper plug-in before committing...
Submitted patch.

- Made minor changes to reflect code churn since patch was created.


Steve, I thought we had agreed and gotten approval from "Callisto" that Draw2d would not have any dependencies other than SWT.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125490" />
    <CreationDate amount="2006-01-27 10:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Debug view not populated when a breakpoint is reached</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Using I20060125-0800, there are cases when the debug view is empty even if a debug process is running.
If I start an application, suddenly the debug processs appears in the view.
Looks like a refresh issue.
Seems to happen most often when switching perspectives when breakpoint is hit. For example, from Java to Debug.
This is indeed my case. I always work in the Java perspective and I switch in the debug perspective when a breakpoint is hit.
Fixed in LaunchView. Overrides becomesVisible(). The tree seems to need a refresh in this case. Might be due to the new incremental content/virtual tree.
Please verify, Kevin.
verified</WithStack>
    <WithOutStack>Using I20060125-0800, there are cases when the debug view is empty even if a debug process is running.
If I start an application, suddenly the debug processs appears in the view.
Looks like a refresh issue.
Seems to happen most often when switching perspectives when breakpoint is hit. For example, from Java to Debug.
This is indeed my case. I always work in the Java perspective and I switch in the debug perspective when a breakpoint is hit.
Fixed in LaunchView. Overrides becomesVisible(). The tree seems to need a refresh in this case. Might be due to the new incremental content/virtual tree.
Please verify, Kevin.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125491" />
    <CreationDate amount="2006-01-27 10:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="Community" />
    <component amount="Dashboard" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Add project maturity to dashboard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>The dashboard shows "project liveness", but we'd also like to have a "project maturity" rating and ranking. This may be a more subjective measure, but we need to come up with some way to determine this and then to display it on the dashboard.
We no longer have a project dashboard, so marking as INVALID. When we have a project dashboard again, we will include this measure.
Closing.</WithStack>
    <WithOutStack>The dashboard shows "project liveness", but we'd also like to have a "project maturity" rating and ranking. This may be a more subjective measure, but we need to come up with some way to determine this and then to display it on the dashboard.
We no longer have a project dashboard, so marking as INVALID. When we have a project dashboard again, we will include this measure.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125492" />
    <CreationDate amount="2006-01-27 10:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Tooling" />
    <component amount="Core" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cannot generate editors whose canvas does not map to a domain element</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In certain cases where a domain model may not have a single top level element, the canvas will not map to a domain element and top level elements will not have containment feature set. The gmfmap model validates OK for such a mapping, however the generated gmfgen file fails validation with error: top level nodes require "Containment meta feature" and "child meta feature" to be set.

It should be possible to generate an editor without the diagram having a semantic element.
See org.eclipse.gmf.examples.design2d sample.
[GMF Restructure] Bug 319140 : product GMF and component
Generation was the original product and component for this bug</WithStack>
    <WithOutStack>In certain cases where a domain model may not have a single top level element, the canvas will not map to a domain element and top level elements will not have containment feature set. The gmfmap model validates OK for such a mapping, however the generated gmfgen file fails validation with error: top level nodes require "Containment meta feature" and "child meta feature" to be set.

It should be possible to generate an editor without the diagram having a semantic element.
See org.eclipse.gmf.examples.design2d sample.
[GMF Restructure] Bug 319140 : product GMF and component
Generation was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125493" />
    <CreationDate amount="2006-01-27 10:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="Community" />
    <component amount="Dashboard" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Compare downloads page against project-info.xml information</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Regular cron job that compares the projects' download pages and the project-info.xml information and the internal Foundation database. Two goals: (1) make sure that the project status information stays in synch with release-reality and (2) make sure that releases have Release Reviews for the membership. Thus if a new R4.2 appears on a download site both the project-info.xml should have a &lt;release&gt; tag for 4.2 and the internal Foundation database should have a record of  the 4.2 Release Review being successful.
What do you think of a remindertool rule for this?

(In reply to comment #0)
&gt; (1) make sure that the project status information stays in synch wit 
&gt; release-reality 
&gt;
&gt; (2) make sure that releases have Release Reviews for the membership. 

 This will be checked:
 
 (I) download site
 (II) project-info.xml 
 (III) Foundation database



Also, I've found this pages that talk about the reviews:

http://www.eclipse.org/projects/dev_process/release-review.php and http://www.eclipse.org/projects/previous-release-reviews.php.

besides the historical releases page, where in the foundation database are Succesful Reviews saved?
/projects/projects.txt
See the various PHP fragments that read that file, e.g., /projects/fragments/proposal-page-header.php
(In reply to comment #2)
&gt; /projects/projects.txt
&gt; See the various PHP fragments that read that file, e.g.,
&gt; /projects/fragments/proposal-page-header.php
&gt; 

So there's 

   [4] =&gt; reviewinfo Object
                (
                    [_attributes] =&gt; Array
                        (
                            [Project Name] =&gt; Phoenix
                            [Project URL] =&gt; /phoenix/
                            [Review Name] =&gt; 1.0
                            [Status; Review Scheduled] =&gt; Mon, 21 Nov 2005 09:09:00 PST
                            [Review Date] =&gt; Mon, 28 Nov 2005
                            [Review Time] =&gt; 1600
                            [Status; Slides Posted] =&gt; Thu, 24 Nov 2005 08:53:00 PST
                            [Slides URL] =&gt; /projects/slides/Phoenix-review.pdf
                            [Status; IP Log Posted] =&gt; Thu, 24 Nov 2005 08:53:00 PST
                            [IP Log URL] =&gt; /projects/slides/Phoenix-review.pdf
                            [Status; Review Successful] =&gt; Mon, 28 Nov 2005 08:39:00 PST
                            [Status; Review Unsuccessful] =&gt; 
                        )

                    [_status] =&gt; J5
                    [_lastdate] =&gt; Mon, 28 Nov 2005 08:39:00 PST
                    [_lastget] =&gt; Mon, 28 Nov 2005 08:39:00 PST
                )


And 

        (
            [0] =&gt; proposalinfo Object
                (
                    [_attributes] =&gt; Array
                        (
                            [Proposal Name] =&gt; AJAX Toolkit Framework (ATF)
                            [Status; Proposal Posted] =&gt; Thu, 19 Jan 2006 18:22:00 PST
                            [Proposal URL] =&gt; /proposals/atf/
                            [Status; Proposal Updated 1] =&gt; Tue, 31 Jan 2006 18:28:00 PST
                            [Status; Proposal Updated 2] =&gt; 
                            [Status; Review Scheduled] =&gt; Wed, 01 Mar 2006 09:59:00 PST
                            [Review Date] =&gt; Wed, 08 Mar 2006
                            [Review Time] =&gt; 1730
                            [Status; Slides Posted] =&gt; Wed, 01 Mar 2006 09:59:00 PST
                            [Slides URL] =&gt; /proposals/atf/ATFCreationReviewV1.pdf
                            [Status; Review Successful] =&gt; Wed, 08 Mar 2006 10:39:00 PST
                            [Status; Review Unsuccessful] =&gt; 
                            [Status; Provisioning Complete] =&gt; Tue, 04 Apr 2006 17:48:00 PDT
                            [Project URL] =&gt; /atf/
                            [Project Top-Level] =&gt; WTP
                            [Status; Proposal Withdrawn] =&gt; 
                            [Status; Project Archived] =&gt; 
                        )

                    [_status] =&gt; P7
                    [_lastdate] =&gt; Tue, 04 Apr 2006 17:48:00 PDT
                    [_lastget] =&gt; Tue, 04 Apr 2006 17:48:00 PDT
                )


What bits of information should we use for the rule?
(In reply to comment #3)
Use the reviewinfo object. "Status; Review Successful" means the review was complete, thus the project-info.xml should have an entry for that review.
Given that this has been open for 2.5 years, we still don't have a standardized release naming system that would allow us to actually verify this, and we do have a system to remind people to have at least one scheduled release in the meta-data, can we close this WONTFIX?
(In reply to comment #5)
&gt; Given that this has been open for 2.5 years, we still don't have a standardized
&gt; release naming system that would allow us to actually verify this, and we do
&gt; have a system to remind people to have at least one scheduled release in the
&gt; meta-data, can we close this WONTFIX?

Agreed.</WithStack>
    <WithOutStack>Regular cron job that compares the projects' download pages and the project-info.xml information and the internal Foundation database. Two goals: (1) make sure that the project status information stays in synch with release-reality and (2) make sure that releases have Release Reviews for the membership. Thus if a new R4.2 appears on a download site both the project-info.xml should have a &lt;release&gt; tag for 4.2 and the internal Foundation database should have a record of  the 4.2 Release Review being successful.
What do you think of a remindertool rule for this?

(In reply to comment #0)
&gt; (1) make sure that the project status information stays in synch wit 
&gt; release-reality 
&gt;
&gt; (2) make sure that releases have Release Reviews for the membership. 

 This will be checked:
 
 (I) download site
 (II) project-info.xml 
 (III) Foundation database



Also, I've found this pages that talk about the reviews:

http://www.eclipse.org/projects/dev_process/release-review.php and http://www.eclipse.org/projects/previous-release-reviews.php.

besides the historical releases page, where in the foundation database are Succesful Reviews saved?
/projects/projects.txt
See the various PHP fragments that read that file, e.g., /projects/fragments/proposal-page-header.php
(In reply to comment #2)
&gt; /projects/projects.txt
&gt; See the various PHP fragments that read that file, e.g.,
&gt; /projects/fragments/proposal-page-header.php
&gt; 

So there's 

   [4] =&gt; reviewinfo Object
                (
                    [_attributes] =&gt; Array
                        (
                            [Project Name] =&gt; Phoenix
                            [Project URL] =&gt; /phoenix/
                            [Review Name] =&gt; 1.0
                            [Status; Review Scheduled] =&gt; Mon, 21 Nov 2005 09:09:00 PST
                            [Review Date] =&gt; Mon, 28 Nov 2005
                            [Review Time] =&gt; 1600
                            [Status; Slides Posted] =&gt; Thu, 24 Nov 2005 08:53:00 PST
                            [Slides URL] =&gt; /projects/slides/Phoenix-review.pdf
                            [Status; IP Log Posted] =&gt; Thu, 24 Nov 2005 08:53:00 PST
                            [IP Log URL] =&gt; /projects/slides/Phoenix-review.pdf
                            [Status; Review Successful] =&gt; Mon, 28 Nov 2005 08:39:00 PST
                            [Status; Review Unsuccessful] =&gt; 
                        )

                    [_status] =&gt; J5
                    [_lastdate] =&gt; Mon, 28 Nov 2005 08:39:00 PST
                    [_lastget] =&gt; Mon, 28 Nov 2005 08:39:00 PST
                )


And 

        (
            [0] =&gt; proposalinfo Object
                (
                    [_attributes] =&gt; Array
                        (
                            [Proposal Name] =&gt; AJAX Toolkit Framework (ATF)
                            [Status; Proposal Posted] =&gt; Thu, 19 Jan 2006 18:22:00 PST
                            [Proposal URL] =&gt; /proposals/atf/
                            [Status; Proposal Updated 1] =&gt; Tue, 31 Jan 2006 18:28:00 PST
                            [Status; Proposal Updated 2] =&gt; 
                            [Status; Review Scheduled] =&gt; Wed, 01 Mar 2006 09:59:00 PST
                            [Review Date] =&gt; Wed, 08 Mar 2006
                            [Review Time] =&gt; 1730
                            [Status; Slides Posted] =&gt; Wed, 01 Mar 2006 09:59:00 PST
                            [Slides URL] =&gt; /proposals/atf/ATFCreationReviewV1.pdf
                            [Status; Review Successful] =&gt; Wed, 08 Mar 2006 10:39:00 PST
                            [Status; Review Unsuccessful] =&gt; 
                            [Status; Provisioning Complete] =&gt; Tue, 04 Apr 2006 17:48:00 PDT
                            [Project URL] =&gt; /atf/
                            [Project Top-Level] =&gt; WTP
                            [Status; Proposal Withdrawn] =&gt; 
                            [Status; Project Archived] =&gt; 
                        )

                    [_status] =&gt; P7
                    [_lastdate] =&gt; Tue, 04 Apr 2006 17:48:00 PDT
                    [_lastget] =&gt; Tue, 04 Apr 2006 17:48:00 PDT
                )


What bits of information should we use for the rule?
(In reply to comment #3)
Use the reviewinfo object. "Status; Review Successful" means the review was complete, thus the project-info.xml should have an entry for that review.
Given that this has been open for 2.5 years, we still don't have a standardized release naming system that would allow us to actually verify this, and we do have a system to remind people to have at least one scheduled release in the meta-data, can we close this WONTFIX?
(In reply to comment #5)
&gt; Given that this has been open for 2.5 years, we still don't have a standardized
&gt; release naming system that would allow us to actually verify this, and we do
&gt; have a system to remind people to have at least one scheduled release in the
&gt; meta-data, can we close this WONTFIX?

Agreed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125494" />
    <CreationDate amount="2006-01-27 11:02:00 -0500" />
    <DupId amount="125991" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Adopt Eclipse 3.1 Operation History Framework</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>A new Operation History Framework for undo and redo was introduced in Eclipse 
3.1.

This activity is to investigate adapting the GEF command classes / stack to the 
ecliper operation history.

For details:
@see https://bugs.eclipse.org/bugs/show_bug.cgi?id=37716


*** This bug has been marked as a duplicate of 125991 ***</WithStack>
    <WithOutStack>A new Operation History Framework for undo and redo was introduced in Eclipse 
3.1.

This activity is to investigate adapting the GEF command classes / stack to the 
ecliper operation history.

For details:
@see https://bugs.eclipse.org/bugs/show_bug.cgi?id=37716


*** This bug has been marked as a duplicate of 125991 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125495" />
    <CreationDate amount="2006-01-27 11:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="GMF-Runtime" />
    <component amount="General" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>MSLAddCommand throws a ClassCastException in certain cases</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>MSLAddCommand throws a ClassCastException in case the collected objects are not derived from EObject as is the case for enumeration values
Created attachment 33709
fixes the bug
This bug will be fixed indirectly by adoption of the Transaction API.
The adoption of the EMF Transaction API by GMF has deleted the MSLAddCommand class, so this problem should no longer occur.  Undo management is now implemented using EMF's ChangeRecorder facility.
[GMF Restructure] Bug 319140 : product GMF and component
Runtime EMF was the original product and component for this bug</WithStack>
    <WithOutStack>MSLAddCommand throws a ClassCastException in case the collected objects are not derived from EObject as is the case for enumeration values
Created attachment 33709
fixes the bug
This bug will be fixed indirectly by adoption of the Transaction API.
The adoption of the EMF Transaction API by GMF has deleted the MSLAddCommand class, so this problem should no longer occur.  Undo management is now implemented using EMF's ChangeRecorder facility.
[GMF Restructure] Bug 319140 : product GMF and component
Runtime EMF was the original product and component for this bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125496" />
    <CreationDate amount="2006-01-27 11:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="Community" />
    <component amount="Dashboard" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Single aggregated dashboard for all of Eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>And a set of aggregated dashboards for: (1) all non-incubation projects, (2) all incubation projects, (3) all major projects (where "major" has yet to be defined, but the intent is "those most significant to the community, irrespective of their phase or top-level-sub-level status").

The aggregated dashboard will show the same information, but just the average number across all the projects in the set. The average number of posts per week to the newsgroup, the average bug fix rate, etc.
Withdrawn due to change in dashboard strategy - we are not going to have a single number representing a project, thus we cannot have a single number representing all of Eclipse.
Closed.</WithStack>
    <WithOutStack>And a set of aggregated dashboards for: (1) all non-incubation projects, (2) all incubation projects, (3) all major projects (where "major" has yet to be defined, but the intent is "those most significant to the community, irrespective of their phase or top-level-sub-level status").

The aggregated dashboard will show the same information, but just the average number across all the projects in the set. The average number of posts per week to the newsgroup, the average bug fix rate, etc.
Withdrawn due to change in dashboard strategy - we are not going to have a single number representing a project, thus we cannot have a single number representing all of Eclipse.
Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125497" />
    <CreationDate amount="2006-01-27 11:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="Community" />
    <component amount="Website" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Wiki pages should have same look as the rest of the website</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- Mailing list and newsgroup archives</Line>
          <Line>- Newsgroup Simple Web Interface</Line>
          <Line>- Bugzilla welcome page(s)</Line>
          <Line>- dev.eclipse.org ViewCVS welcome page(s)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The wiki (http://wiki.eclipse.org/index.php/Main_Page) is similar, but not the same, as the other pages (http://www.eclipse.org/).  The top nav bar is missing, the contact us | legal is missing, the footer is missing, etc.  Because projects are incorporating wiki pages into their websites, it would be best to have a consistent UI.

It would be even better if there was a way to specify the left menu for a page so that one could say "make the left menu of this page be the same as the Web Tools left menu" - then the wiki pages could be even more integrated with a project's website.
This would need to be extended to other content that is currently part of our website, but doesn't look like it:

- Mailing list and newsgroup archives
- Newsgroup Simple Web Interface
- Bugzilla welcome page(s)
- dev.eclipse.org ViewCVS welcome page(s)

What else?

D.
Sure, but this bug is just about the wiki - here's why: some projects are moving some of their website content from static pages to the wiki. Having the wiki be different from the static content provides an odd look and feel to those project's "websites".  These other items are not (and I admit this is subjective) "part of" a project's website and thus a different look for them is more acceptable.
But the wiki is not the website - although wiki is currently committer-only, plans are to make it editable by anyone who wishes to do so.  If the wiki and the website are visually indistinguishable, there could be a perception issue where content, authored by the community at large, will be perceived as "official" eclipse.org content.

D.
Moving to Phoenix.  As per http://dev.eclipse.org/mhonarc/lists/phoenix-dev/msg00318.html I think we need to define the content that's intended for web and wiki.
Created attachment 41386
graphical issues with the current skin

This screenshot show some issues I have with the current skin. Probably it's because it uses absolute (pixel based) positioning and/or sizing?
(In reply to comment #5)
&gt; Created an attachment (id=41386) [edit]
&gt; graphical issues with the current skin
&gt; 
&gt; This screenshot show some issues I have with the current skin. Probably it's
&gt; because it uses absolute (pixel based) positioning and/or sizing?
&gt; 

Gunnar, that's covered by bug 123657
I think that the wiki page should look the same as the website, for pretty much the same reason as Bjorn; it might be an easier place for projects to accumulate documentation. I also suspect it would be good to do the same look-and-feel migration for other parts, but they should have different bugs associated with them (and maybe a parent bug to group them all together).
My $0.02 worth:

I don't think that the wiki pages should be *identical*, but I do think that they should  be much more *similar* than they are today.

Reason: Common L&amp;F is great, but the wiki content doesn't necessarily go through the same level of review and scrutiny as the web content. It would be helpful to have at least a few small subtle hints for people on what kind of content they're reading.

Then again, if more and more projects use the wiki as their content engine, this might change. 

Perhaps the distinction needs to be between the Foundation-maintained pages and everything else?
(In reply to comment #8)
&gt; I don't think that the wiki pages should be *identical*, but I do think that
&gt; they should  be much more *similar* than they are today.

That's a good idea.

&gt; ... the wiki content doesn't necessarily go
&gt; through the same level of review and scrutiny as the web content. 

I think you're making an assumption about the level of review and scrutiny that the project web pages get. Consider, for example, http://www.eclipse.org/tools/. That page hasn't changed for a long time. Notice the typo in the first paragraph of the C/C++ description "If you are are developer" - clearly there is little review and scrutiny of this page, eh?
Then compare that to the change history of a page like this (http://wiki.eclipse.org/index.php?title=FAQ_How_do_I_sort_the_contents_of_a_viewer%3F&amp;diff=5457&amp;oldid=3104) where someone from the community took the time to fix formatting problems on someone else's page or this (http://wiki.eclipse.org/index.php?title=Google_Summer_of_Code_2006&amp;action=history) where multiple people are reading and improving the page all the time.

So I don't think you can equate "wiki" with "lower quality". I will admit that there are some high quality pages on the eclipse.org site and some low quality pages, but I don't think the "wiki" bit is the distinguishing factor. One might even say that the wiki pages get more attention because the community knows that they can improve the pages themselves, without the hassle of filing a bug, waiting weeks or months for it to get attention, etc.
Here's my vote:

-1 for making the wiki look the same as the website

Although highly unlikely, anyone is free to vandalize the Wiki's content, whereas this is not likely to happen on www.eclipse.org.

- Users, even well-intentioned ones can submit information that turns out being factually incorrect, potentially misleading our users if there is no distinction between content "authored by Eclipse committers who know what they're talking about" and content "authored by anyone with a browser who may or may not know squat".


Do consider this page:

http://wiki.eclipse.org/index.php?title=CVS_Howto&amp;action=history

Where Nitind wrote that the Anonymous CVS password should be "your email address, just like anonymous FTP", which is false. It took me 4 months to spot and correct this.
+1 for establishing a common look across all *.eclipse.org pages.

The wiki doesn't have to look exactly the same way but it should look similar:

* It should use the same header as on www.eclipse.org (including the horizontal navigation, the quick search area and the Contact/Legal links).
* There should be a nice graphic behind the Eclipse logo that says "Wiki"
* There even should be a "Wiki" tab on the horizontal navigation bar
* The footer should be the same as on www.eclipse.org
* The wiki menus and editing functions should be regular menu items on the left menu and look like everything else on www.eclipse.org

Especially the 3rd items also falls into the "Make Eclipse.org easier to use" category.

A agree that a clear separation between wiki content and official Foundation content is appreciated but I disagree that it has to be so obvious. I doubt that any website user won't recognize a different logo in the header. And even if not, so what? The website terms of use clearly states that nobody is liable to anybody for anything. ;) 
*** Bug 163118 has been marked as a duplicate of this bug. ***
target for Q1.  The Wiki will get much TLC this quarter thanks to bug 169334.
The new skin is almost a clone of the main website. Closing.

-M.
Verified.
While the Search location is an improvement, I'm finding the View section in the nav bar not working well and am curious what others think of that.  Mediawiki has a very standard place for putting the Edit and other actions and we now break from that convention by moving those things into what looks like and should be a navigation bar (bug 157707).  Please consider moving those tabs back to the top of the page so that we retain consistency and so that the location of "Edit" is obvious for newcommers.  Currently I believe that there is a good chance that newcommers will assume our pages either aren't wiki pages or aren't editable.  try 
(In reply to comment #16)
&gt; I'm finding the View section in
&gt; the nav bar not working well and am curious what others think of that. 
&gt; Mediawiki has a very standard place for putting the Edit and other actions and
&gt; we now break from that convention by moving those things 

I agree.
I agree also; however, the requirement of this bug was that the wiki be identical to the website. If you'd like us to improve the look of the new wiki, please open a separate enhancement request.
Wiki thrived with the Edit button on the bottom of the page. (Why would you want someone editing who hadn't read the whole page?)

Five years later Wikipedia moved the Edit button to the top of the page. They invented Talk pages too so they had the street cred to get away with it. 

I recommend we try the Edit button on the left side for, oh say, five years. If it doesn't work out, we can always try the left side for a while. 

It might make sense to use the word "wiki" in the left nav menu somewhere since it is now a recoginized OED word meaning editable content.
(In reply to comment #18)
&gt; I agree also; however, the requirement of this bug was that the wiki be
&gt; identical to the website. 

The requirement was not "identical" - it was for a "consistent" UI: see the original description, comment #8, comment #9, and comment #11.

&gt; If you'd like us to improve the look of the new wiki,
&gt; please open a separate enhancement request.

Ok, I opened bug 179537.

Moving to Community/Website</WithStack>
    <WithOutStack>The wiki (http://wiki.eclipse.org/index.php/Main_Page) is similar, but not the same, as the other pages (http://www.eclipse.org/).  The top nav bar is missing, the contact us | legal is missing, the footer is missing, etc.  Because projects are incorporating wiki pages into their websites, it would be best to have a consistent UI.

It would be even better if there was a way to specify the left menu for a page so that one could say "make the left menu of this page be the same as the Web Tools left menu" - then the wiki pages could be even more integrated with a project's website.
This would need to be extended to other content that is currently part of our website, but doesn't look like it:

- Mailing list and newsgroup archives
- Newsgroup Simple Web Interface
- Bugzilla welcome page(s)
- dev.eclipse.org ViewCVS welcome page(s)

What else?

D.
Sure, but this bug is just about the wiki - here's why: some projects are moving some of their website content from static pages to the wiki. Having the wiki be different from the static content provides an odd look and feel to those project's "websites".  These other items are not (and I admit this is subjective) "part of" a project's website and thus a different look for them is more acceptable.
But the wiki is not the website - although wiki is currently committer-only, plans are to make it editable by anyone who wishes to do so.  If the wiki and the website are visually indistinguishable, there could be a perception issue where content, authored by the community at large, will be perceived as "official" eclipse.org content.

D.
Moving to Phoenix.  As per http://dev.eclipse.org/mhonarc/lists/phoenix-dev/msg00318.html I think we need to define the content that's intended for web and wiki.
Created attachment 41386
graphical issues with the current skin

This screenshot show some issues I have with the current skin. Probably it's because it uses absolute (pixel based) positioning and/or sizing?
(In reply to comment #5)
&gt; Created an attachment (id=41386) [edit]
&gt; graphical issues with the current skin
&gt; 
&gt; This screenshot show some issues I have with the current skin. Probably it's
&gt; because it uses absolute (pixel based) positioning and/or sizing?
&gt; 

Gunnar, that's covered by bug 123657
I think that the wiki page should look the same as the website, for pretty much the same reason as Bjorn; it might be an easier place for projects to accumulate documentation. I also suspect it would be good to do the same look-and-feel migration for other parts, but they should have different bugs associated with them (and maybe a parent bug to group them all together).
My $0.02 worth:

I don't think that the wiki pages should be *identical*, but I do think that they should  be much more *similar* than they are today.

Reason: Common L&amp;F is great, but the wiki content doesn't necessarily go through the same level of review and scrutiny as the web content. It would be helpful to have at least a few small subtle hints for people on what kind of content they're reading.

Then again, if more and more projects use the wiki as their content engine, this might change. 

Perhaps the distinction needs to be between the Foundation-maintained pages and everything else?
(In reply to comment #8)
&gt; I don't think that the wiki pages should be *identical*, but I do think that
&gt; they should  be much more *similar* than they are today.

That's a good idea.

&gt; ... the wiki content doesn't necessarily go
&gt; through the same level of review and scrutiny as the web content. 

I think you're making an assumption about the level of review and scrutiny that the project web pages get. Consider, for example, http://www.eclipse.org/tools/. That page hasn't changed for a long time. Notice the typo in the first paragraph of the C/C++ description "If you are are developer" - clearly there is little review and scrutiny of this page, eh?
Then compare that to the change history of a page like this (http://wiki.eclipse.org/index.php?title=FAQ_How_do_I_sort_the_contents_of_a_viewer%3F&amp;diff=5457&amp;oldid=3104) where someone from the community took the time to fix formatting problems on someone else's page or this (http://wiki.eclipse.org/index.php?title=Google_Summer_of_Code_2006&amp;action=history) where multiple people are reading and improving the page all the time.

So I don't think you can equate "wiki" with "lower quality". I will admit that there are some high quality pages on the eclipse.org site and some low quality pages, but I don't think the "wiki" bit is the distinguishing factor. One might even say that the wiki pages get more attention because the community knows that they can improve the pages themselves, without the hassle of filing a bug, waiting weeks or months for it to get attention, etc.
Here's my vote:

-1 for making the wiki look the same as the website

Although highly unlikely, anyone is free to vandalize the Wiki's content, whereas this is not likely to happen on www.eclipse.org.

- Users, even well-intentioned ones can submit information that turns out being factually incorrect, potentially misleading our users if there is no distinction between content "authored by Eclipse committers who know what they're talking about" and content "authored by anyone with a browser who may or may not know squat".


Do consider this page:

http://wiki.eclipse.org/index.php?title=CVS_Howto&amp;action=history

Where Nitind wrote that the Anonymous CVS password should be "your email address, just like anonymous FTP", which is false. It took me 4 months to spot and correct this.
+1 for establishing a common look across all *.eclipse.org pages.

The wiki doesn't have to look exactly the same way but it should look similar:

* It should use the same header as on www.eclipse.org (including the horizontal navigation, the quick search area and the Contact/Legal links).
* There should be a nice graphic behind the Eclipse logo that says "Wiki"
* There even should be a "Wiki" tab on the horizontal navigation bar
* The footer should be the same as on www.eclipse.org
* The wiki menus and editing functions should be regular menu items on the left menu and look like everything else on www.eclipse.org

Especially the 3rd items also falls into the "Make Eclipse.org easier to use" category.

A agree that a clear separation between wiki content and official Foundation content is appreciated but I disagree that it has to be so obvious. I doubt that any website user won't recognize a different logo in the header. And even if not, so what? The website terms of use clearly states that nobody is liable to anybody for anything. ;) 
*** Bug 163118 has been marked as a duplicate of this bug. ***
target for Q1.  The Wiki will get much TLC this quarter thanks to bug 169334.
The new skin is almost a clone of the main website. Closing.

-M.
Verified.
While the Search location is an improvement, I'm finding the View section in the nav bar not working well and am curious what others think of that.  Mediawiki has a very standard place for putting the Edit and other actions and we now break from that convention by moving those things into what looks like and should be a navigation bar (bug 157707).  Please consider moving those tabs back to the top of the page so that we retain consistency and so that the location of "Edit" is obvious for newcommers.  Currently I believe that there is a good chance that newcommers will assume our pages either aren't wiki pages or aren't editable.  try 
(In reply to comment #16)
&gt; I'm finding the View section in
&gt; the nav bar not working well and am curious what others think of that. 
&gt; Mediawiki has a very standard place for putting the Edit and other actions and
&gt; we now break from that convention by moving those things 

I agree.
I agree also; however, the requirement of this bug was that the wiki be identical to the website. If you'd like us to improve the look of the new wiki, please open a separate enhancement request.
Wiki thrived with the Edit button on the bottom of the page. (Why would you want someone editing who hadn't read the whole page?)

Five years later Wikipedia moved the Edit button to the top of the page. They invented Talk pages too so they had the street cred to get away with it. 

I recommend we try the Edit button on the left side for, oh say, five years. If it doesn't work out, we can always try the left side for a while. 

It might make sense to use the word "wiki" in the left nav menu somewhere since it is now a recoginized OED word meaning editable content.
(In reply to comment #18)
&gt; I agree also; however, the requirement of this bug was that the wiki be
&gt; identical to the website. 

The requirement was not "identical" - it was for a "consistent" UI: see the original description, comment #8, comment #9, and comment #11.

&gt; If you'd like us to improve the look of the new wiki,
&gt; please open a separate enhancement request.

Ok, I opened bug 179537.

Moving to Community/Website</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125498" />
    <CreationDate amount="2006-01-27 11:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Adopt Eclipse plug-in versioning schema for GEF build</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>See http://www.eclipse.org/equinox/documents/plugin-versioning.html

According to Randy this means adding the 4th build # qualifer to the feature?


*** This bug has been marked as a duplicate of 124635 ***
This is not the same issue as in 124635 - reopening defect...
Fixed</WithStack>
    <WithOutStack>See http://www.eclipse.org/equinox/documents/plugin-versioning.html

According to Randy this means adding the 4th build # qualifer to the feature?


*** This bug has been marked as a duplicate of 124635 ***
This is not the same issue as in 124635 - reopening defect...
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125499" />
    <CreationDate amount="2006-01-27 11:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Pixel corruption when setSelection() called from within SWT.SetData</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="9">
      <source_code type="import">
        <location start="1436" end="1464" />
        <code>import org.eclipse.swt.SWT;</code>
      </source_code>
      <source_code type="import">
        <location start="1465" end="1506" />
        <code>import org.eclipse.swt.layout.FillLayout;</code>
      </source_code>
      <source_code type="import">
        <location start="1507" end="1546" />
        <code>import org.eclipse.swt.widgets.Display;</code>
      </source_code>
      <source_code type="import">
        <location start="1547" end="1584" />
        <code>import org.eclipse.swt.widgets.Event;</code>
      </source_code>
      <source_code type="import">
        <location start="1585" end="1625" />
        <code>import org.eclipse.swt.widgets.Listener;</code>
      </source_code>
      <source_code type="import">
        <location start="1626" end="1663" />
        <code>import org.eclipse.swt.widgets.Shell;</code>
      </source_code>
      <source_code type="import">
        <location start="1664" end="1700" />
        <code>import org.eclipse.swt.widgets.Tree;</code>
      </source_code>
      <source_code type="import">
        <location start="1701" end="1741" />
        <code>import org.eclipse.swt.widgets.TreeItem;</code>
      </source_code>
      <source_code type="class">
        <location start="1743" end="2461" />
        <code>public class TreeTest {
	private static Display display;

	private static Tree tree;

	public static void main(String[] args) {
		display = new Display();
		final Shell shell = new Shell(display);
		shell.setLayout(new FillLayout());

		tree = new Tree(shell, SWT.VIRTUAL);
		tree.addListener(SWT.SetData, new Listener() {
			public void handleEvent(Event event) {
				TreeItem item = (TreeItem) event.item;
				int index = tree.indexOf(item);
				item.setText("item: " + (index + 1));
				tree.setSelection(new TreeItem[]{tree.getItems()[0]});
			}
		});
		tree.setItemCount(1000);
		shell.open();

		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}

		display.dispose();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Using I20060125-0800, while debugging, I sometimes get an erratic behavior when scrolling in debug or variable view.
The labels in the view are incomplete on the first letter and the scrolling doesn't work. As soon as I released the mouse or stop using the rolling button on the mouse, the view jumps at the previous location.
It is difficult to explain what happens exactly. I also don't have reproducable steps. It happens in an erratic and unpredicatable way.
I didn't get this behavior with previous integration builds.
Created attachment 33713
Screen shot that shows the weird display in label.

In this case this is extra characters in the label, but sometimes it shows as a missing part of the first letter.
We are using a SWT.VIRTUAL tree now, which seems to have some different behaviors.
Created attachment 33715
Screen shot that shows the weird display in label.

This times it shows incomplete labels
The scrolling problem appears related to our "preserving selection" when a virtual item is revealed while scrolling. However, we only preserve the selection, we don't reveal it. Not sure if this is an SWT issue yet.
Appears to be an SWT.VIRTUAL tree problem. See test case:

* put 1000 items in a tree
* each time an item is revealed, select the root item
&gt; for some reason, this seems to make it visible, even though showItem(...) has not been called.
&gt; seems to cause the update/cheese problems described in this bug too

import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Tree;
import org.eclipse.swt.widgets.TreeItem;

public class TreeTest {
	private static Display display;

	private static Tree tree;

	public static void main(String[] args) {
		display = new Display();
		final Shell shell = new Shell(display);
		shell.setLayout(new FillLayout());

		tree = new Tree(shell, SWT.VIRTUAL);
		tree.addListener(SWT.SetData, new Listener() {
			public void handleEvent(Event event) {
				TreeItem item = (TreeItem) event.item;
				int index = tree.indexOf(item);
				item.setText("item: " + (index + 1));
				tree.setSelection(new TreeItem[]{tree.getItems()[0]});
			}
		});
		tree.setItemCount(1000);
		shell.open();

		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}

		display.dispose();
	}
}

Moving to SWT for comment. As workaround for debug, we won't preserve selection when an item is revealed in the tree.
The test case in comment 5 reproduces pretty nicely what I get in the debugger. This is definitely an irritating behavior when debugging.
Thanks, Darin.

*** Bug 125650 has been marked as a duplicate of this bug. ***
Steve, can we try to fix this for M5?
By definition, setSelection() removes the old selection and scrolls to bring the new selection into view.  This well documented in the SWT Book, but not in the Javadoc (sigh).  Tables and Lists provide select() and deselect() that do nothing but select or deselect.  Unfortunately, Trees don't have this method.  This means that you cannot set the selection without scrolling.

It is also strange to me that the SetData handler should be doing anything other than setting the data.  While it is not illegal to call setSeletion() from there and the cheese in the labels is a bug that we should fix, you are living on the edge.

How do you want to proceed?  I think that removing the setSelection() is correct.  Your thoughts?
We've removed our "preserving selection" while setting data, so we're happy.
Note that trees now define select() and deselect().
Fixed &gt; 20080618</WithStack>
    <WithOutStack>Using I20060125-0800, while debugging, I sometimes get an erratic behavior when scrolling in debug or variable view.
The labels in the view are incomplete on the first letter and the scrolling doesn't work. As soon as I released the mouse or stop using the rolling button on the mouse, the view jumps at the previous location.
It is difficult to explain what happens exactly. I also don't have reproducable steps. It happens in an erratic and unpredicatable way.
I didn't get this behavior with previous integration builds.
Created attachment 33713
Screen shot that shows the weird display in label.

In this case this is extra characters in the label, but sometimes it shows as a missing part of the first letter.
We are using a SWT.VIRTUAL tree now, which seems to have some different behaviors.
Created attachment 33715
Screen shot that shows the weird display in label.

This times it shows incomplete labels
The scrolling problem appears related to our "preserving selection" when a virtual item is revealed while scrolling. However, we only preserve the selection, we don't reveal it. Not sure if this is an SWT issue yet.
Appears to be an SWT.VIRTUAL tree problem. See test case:

* put 1000 items in a tree
* each time an item is revealed, select the root item
&gt; for some reason, this seems to make it visible, even though showItem(...) has not been called.
&gt; seems to cause the update/cheese problems described in this bug too

import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Tree;
import org.eclipse.swt.widgets.TreeItem;

public class TreeTest {
	private static Display display;

	private static Tree tree;

	public static void main(String[] args) {
		display = new Display();
		final Shell shell = new Shell(display);
		shell.setLayout(new FillLayout());

		tree = new Tree(shell, SWT.VIRTUAL);
		tree.addListener(SWT.SetData, new Listener() {
			public void handleEvent(Event event) {
				TreeItem item = (TreeItem) event.item;
				int index = tree.indexOf(item);
				item.setText("item: " + (index + 1));
				tree.setSelection(new TreeItem[]{tree.getItems()[0]});
			}
		});
		tree.setItemCount(1000);
		shell.open();

		while (!shell.isDisposed()) {
			if (!display.readAndDispatch())
				display.sleep();
		}

		display.dispose();
	}
}

Moving to SWT for comment. As workaround for debug, we won't preserve selection when an item is revealed in the tree.
The test case in comment 5 reproduces pretty nicely what I get in the debugger. This is definitely an irritating behavior when debugging.
Thanks, Darin.

*** Bug 125650 has been marked as a duplicate of this bug. ***
Steve, can we try to fix this for M5?
By definition, setSelection() removes the old selection and scrolls to bring the new selection into view.  This well documented in the SWT Book, but not in the Javadoc (sigh).  Tables and Lists provide select() and deselect() that do nothing but select or deselect.  Unfortunately, Trees don't have this method.  This means that you cannot set the selection without scrolling.

It is also strange to me that the SetData handler should be doing anything other than setting the data.  While it is not illegal to call setSeletion() from there and the cheese in the labels is a bug that we should fix, you are living on the edge.

How do you want to proceed?  I think that removing the setSelection() is correct.  Your thoughts?
We've removed our "preserving selection" while setting data, so we're happy.
Note that trees now define select() and deselect().
Fixed &gt; 20080618</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="125500" />
    <CreationDate amount="2006-01-27 11:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Invalid bundle symbolic name after plug-in project conversion</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1. Create a Java project with the project name containing the invalid BSN chars, e.g. "Java project" (note the blank char).</Line>
          <Line>2. Convert this project to a plug-in project.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1. Create a Java project with the project name containing the invalid BSN chars, e.g. "Java project" (note the blank char).
2. Convert this project to a plug-in project. 

The project is converted, and a warning ("Bundle symbolic name is invalid") is diaplayed in manifest file.

I suggest to apply the same logic as in the plug-in creation wizard, that is to replace the invalid characters with "_" (underscores), automatically.
Created attachment 33714
patch

one line of code fix for the bug.
Fixed.  Thanks for reporting.</WithStack>
    <WithOutStack>1. Create a Java project with the project name containing the invalid BSN chars, e.g. "Java project" (note the blank char).
2. Convert this project to a plug-in project. 

The project is converted, and a warning ("Bundle symbolic name is invalid") is diaplayed in manifest file.

I suggest to apply the same logic as in the plug-in creation wizard, that is to replace the invalid characters with "_" (underscores), automatically.
Created attachment 33714
patch

one line of code fix for the bug.
Fixed.  Thanks for reporting.</WithOutStack>
  </Bug>
</infozilla-output>

