<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="15001" />
    <CreationDate amount="2002-05-01 10:47:00 -0400" />
    <DupId amount="23295" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add UI for changing breakpoint line numbers</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>With the recent addition of editable breakpoint properties (conditions, thread
filters, etc.), it has become much more inconvenient to "move" a breakpoint up
or down a few lines by removing the old breakpoint and creating a new one.

We should allow the breakpoint's line number to be changed for applicable
breakpoints.
The motivation for this is to avoid losing a complex breakpoint conditional 
expression. Since it is not intuitive to move a breakpoint this way, I suggest 
to defer. What we really want is drag and drop.
Why defer?

If we can't do drag and drop now, we should at least allow the attribute to be 
changed via the properties.
re-open to mark as dup


*** This bug has been marked as a duplicate of 23295 ***</WithStack>
    <WithOutStack>With the recent addition of editable breakpoint properties (conditions, thread
filters, etc.), it has become much more inconvenient to "move" a breakpoint up
or down a few lines by removing the old breakpoint and creating a new one.

We should allow the breakpoint's line number to be changed for applicable
breakpoints.
The motivation for this is to avoid losing a complex breakpoint conditional 
expression. Since it is not intuitive to move a breakpoint this way, I suggest 
to defer. What we really want is drag and drop.
Why defer?

If we can't do drag and drop now, we should at least allow the attribute to be 
changed via the properties.
re-open to mark as dup


*** This bug has been marked as a duplicate of 23295 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15002" />
    <CreationDate amount="2002-05-01 10:52:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unhelpful error message when synchronizing with deleted file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build 20020426

I have a changed file which has been deleted on the server.
When I synchronize the file I get an error message "Error fetching file 
revisions". I have no clue what that means. 
I would expect to see an incoming deletion in the synchronize viewer instead. 

When I synchronize on the project it still doesn't show an incoming deletion 
for the file but instead it shows a conflict with "no repository file" on the 
right side of the compare viewer.
When I try to override with the conflicting change I get an error message:
"cvs server: conflict: TableItem.java is modified but no longer in the 
repository"
You're not supposed to be deleting the history :)
Will investigate if we can make clearer, but its an unusual case.
I got something similar to this. I had a local change to a remotely deleted file 
and I could not perform an "override and update". The error was "File is no 
longer in the repository". 
The problem of not being able to update to the incoming deletion has been fixed.
Fixed</WithStack>
    <WithOutStack>build 20020426

I have a changed file which has been deleted on the server.
When I synchronize the file I get an error message "Error fetching file 
revisions". I have no clue what that means. 
I would expect to see an incoming deletion in the synchronize viewer instead. 

When I synchronize on the project it still doesn't show an incoming deletion 
for the file but instead it shows a conflict with "no repository file" on the 
right side of the compare viewer.
When I try to override with the conflicting change I get an error message:
"cvs server: conflict: TableItem.java is modified but no longer in the 
repository"
You're not supposed to be deleting the history :)
Will investigate if we can make clearer, but its an unusual case.
I got something similar to this. I had a local change to a remotely deleted file 
and I could not perform an "override and update". The error was "File is no 
longer in the repository". 
The problem of not being able to update to the incoming deletion has been fixed.
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15003" />
    <CreationDate amount="2002-05-01 10:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Externalize strings generates keys containing '=' character</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Externalizing the string "a = b" results in the key "a_=_b_1"

This key always fails to get looked up, presumably because the key is getting
parsed to the first '='.
fixed</WithStack>
    <WithOutStack>Externalizing the string "a = b" results in the key "a_=_b_1"

This key always fails to get looked up, presumably because the key is getting
parsed to the first '='.
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15004" />
    <CreationDate amount="2002-05-01 11:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>build 20020430 does not like old workbench.xml</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Had a workspace running with M5 patch 1, upgraded to 20020430 and got the 
workbench.xml deleted and Eclipse did not start. Tried again and it started 
but I lost the perspective's layout.
Sounds like a dup of bug 14932.
However, we should improve the error handling in this case.
I saw the behaviour you describe as well.
It should proceed after the error dialog, with workbench.xml deleted and a new 
layout.
Instead, it just dumps you back in the OS.

Eduardo, could you look into this please?
To reproduce this case, throw an unchecked exception in ReopenEditorMenu.fill.

Also, we should improve the wording of the error message, indicating that the 
UI layout will be reset.  The workbench.xml file is an implementation detail 
and should not be mentioned.



Fixed messages.properties.

If an exception happens when restoring the workbench we try to open a fresh
workbench window. Can't do much about handling an runtime exception in 
ReopenEditorMenu. It will fail to open a window the first eclipse is started.</WithStack>
    <WithOutStack>Had a workspace running with M5 patch 1, upgraded to 20020430 and got the 
workbench.xml deleted and Eclipse did not start. Tried again and it started 
but I lost the perspective's layout.
Sounds like a dup of bug 14932.
However, we should improve the error handling in this case.
I saw the behaviour you describe as well.
It should proceed after the error dialog, with workbench.xml deleted and a new 
layout.
Instead, it just dumps you back in the OS.

Eduardo, could you look into this please?
To reproduce this case, throw an unchecked exception in ReopenEditorMenu.fill.

Also, we should improve the wording of the error message, indicating that the 
UI layout will be reset.  The workbench.xml file is an implementation detail 
and should not be mentioned.



Fixed messages.properties.

If an exception happens when restoring the workbench we try to open a fresh
workbench window. Can't do much about handling an runtime exception in 
ReopenEditorMenu. It will fail to open a window the first eclipse is started.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15005" />
    <CreationDate amount="2002-05-01 11:19:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Starting eclipse.exe when it is not in the correct place gives uninformative error message</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I inadvertantly copied my eclipse.exe to the wrong place and attempted to 
launch it.  The error message given is:

   Could not determine the GUI (-ws) supported by this installation.

Note this can happen to users on Windows when they think they are creating a 
shortcut to Eclipse but actually ove the Eclipse.exe to their desktop.
We need to remove the error reporting from the launcher in this case. Instead 
of complaining if we can't figure it out, just guess "win32" on windows 
and "motif" on linux. Yes, I know this will basically get us back in the state 
we were in before, but it will work until the rest of the new build story is 
worked out.


Not quite. If the exe was moved, it is being executed in a directory other than 
the eclipse install directory. The launcher determines the install directory 
from path where eclipse.exe resides when it was run. Since it was moved, the 
launcher will assume the new directory is the install directory and since it is 
not, things will fail miserably. It will not be able to find the default splash 
images, the startup.jar file .... basically a no go!

I suggest that the message indicating that the WS gui could not be found should 
be extended as follows (or something similar):

Could not determine the GUI (-ws) supported by this installation. 
Ensure the eclipse executable is being run from the installation directory.


The launcher will now search for the startup.jar file and will display a 
message if it can't find it. This was done as part of bug # 15495.</WithStack>
    <WithOutStack>I inadvertantly copied my eclipse.exe to the wrong place and attempted to 
launch it.  The error message given is:

   Could not determine the GUI (-ws) supported by this installation.

Note this can happen to users on Windows when they think they are creating a 
shortcut to Eclipse but actually ove the Eclipse.exe to their desktop.
We need to remove the error reporting from the launcher in this case. Instead 
of complaining if we can't figure it out, just guess "win32" on windows 
and "motif" on linux. Yes, I know this will basically get us back in the state 
we were in before, but it will work until the rest of the new build story is 
worked out.


Not quite. If the exe was moved, it is being executed in a directory other than 
the eclipse install directory. The launcher determines the install directory 
from path where eclipse.exe resides when it was run. Since it was moved, the 
launcher will assume the new directory is the install directory and since it is 
not, things will fail miserably. It will not be able to find the default splash 
images, the startup.jar file .... basically a no go!

I suggest that the message indicating that the WS gui could not be found should 
be extended as follows (or something similar):

Could not determine the GUI (-ws) supported by this installation. 
Ensure the eclipse executable is being run from the installation directory.


The launcher will now search for the startup.jar file and will display a 
message if it can't find it. This was done as part of bug # 15495.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15006" />
    <CreationDate amount="2002-05-01 11:28:00 -0400" />
    <DupId amount="14932" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>StringIndexOutOfBoundsException trying to close a Java Editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330862857">
        <Exception>java.lang.StringIndexOutOfBoundsException</Exception>
        <Reason>String index out of 
range: -1</Reason>
        <Frames>
          <Frame depth="0">java.lang.String.substring(String.java:1476)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.ReopenEditorMenu.calcText(ReopenEditorMenu.java:103)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.ReopenEditorMenu.fill(ReopenEditorMenu.java:161)</Frame>
          <Frame depth="3">org.eclipse.jface.action.MenuManager.update(MenuManager.java:528)</Frame>
          <Frame depth="4">org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)</Frame>
          <Frame depth="5">org.eclipse.jface.action.MenuManager.update(MenuManager.java:563)</Frame>
          <Frame depth="6">org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.updateActionBars(WorkbenchWindow.java:1270)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchPage.updateActionBars(WorkbenchPage.java:2196)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateActivePart(WorkbenchPage.java:137)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:1953)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchPage.closeEditor(WorkbenchPage.java:675)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.EditorPane.doHide(EditorPane.java:83)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.EditorWorkbook$1.itemClosed(EditorWorkbook.java:122)</Frame>
          <Frame depth="14">org.eclipse.swt.custom.CTabFolder.closeNotify(CTabFolder.java:306)</Frame>
          <Frame depth="15">org.eclipse.swt.custom.CTabFolder.access$12(CTabFolder.java:296)</Frame>
          <Frame depth="16">org.eclipse.swt.custom.CTabFolder$4.handleEvent(CTabFolder.java:437)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:883)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench.run(Workbench.java:866)</Frame>
          <Frame depth="23">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:733)</Frame>
          <Frame depth="24">org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)</Frame>
          <Frame depth="25">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="26">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="27">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="28">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.basicRun(Main.java:162)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.run(Main.java:588)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.main(Main.java:437)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Using 0430, I got:

java.lang.StringIndexOutOfBoundsException: String index out of 
range: -1
	at java.lang.String.substring(String.java:1476)
	at 
org.eclipse.ui.internal.ReopenEditorMenu.calcText(ReopenEditorMenu.java:103)
	at 
org.eclipse.ui.internal.ReopenEditorMenu.fill(ReopenEditorMenu.java:161)
	at 
org.eclipse.jface.action.MenuManager.update(MenuManager.java:528)
	at 
org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)
	at 
org.eclipse.jface.action.MenuManager.update(MenuManager.java:563)
	at 
org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)
	at 
org.eclipse.ui.internal.WorkbenchWindow.updateActionBars(WorkbenchWindow.java:1270)
	at 
org.eclipse.ui.internal.WorkbenchPage.updateActionBars(WorkbenchPage.java:2196)
	at 
org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateActivePart(WorkbenchPage.java:137)
	at 
org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:1953)
	at 
org.eclipse.ui.internal.WorkbenchPage.closeEditor(WorkbenchPage.java:675)
	at 
org.eclipse.ui.internal.EditorPane.doHide(EditorPane.java:83)
	at 
org.eclipse.ui.internal.EditorWorkbook$1.itemClosed(EditorWorkbook.java:122)
	at 
org.eclipse.swt.custom.CTabFolder.closeNotify(CTabFolder.java:306)
	at 
org.eclipse.swt.custom.CTabFolder.access$12(CTabFolder.java:296)
	at 
org.eclipse.swt.custom.CTabFolder$4.handleEvent(CTabFolder.java:437)
	at 
org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at 
org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at 
org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)
	at 
org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
	at 
org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:883)
	at 
org.eclipse.ui.internal.Workbench.run(Workbench.java:866)
	at 
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:733)
	at 
org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)
	at 
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at 
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at 
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at 
java.lang.reflect.Method.invoke(Method.java:324)
	at 
org.eclipse.core.launcher.Main.basicRun(Main.java:162)
	at 
org.eclipse.core.launcher.Main.run(Main.java:588)
	at 
org.eclipse.core.launcher.Main.main(Main.java:437)

This is fairly bad. I cannot close 
that editor anymore and the whole workspace becomes unusable.


*** This bug has been marked as a duplicate of 14932 ***</WithStack>
    <WithOutStack>Using 0430, I got:



This is fairly bad. I cannot close 
that editor anymore and the whole workspace becomes unusable.


*** This bug has been marked as a duplicate of 14932 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15007" />
    <CreationDate amount="2002-05-01 11:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>NPE in TargetPlatform.createPropertiesFile</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437330862857">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.Hashtable.put(Hashtable.java(Compiled Code))</Frame>
          <Frame depth="1">java.util.Properties.setProperty(Properties.java:113)</Frame>
          <Frame depth="2">org.eclipse.pde.internal.ui.TargetPlatform.createPropertiesFile(TargetPlatform.java:96)</Frame>
          <Frame depth="3">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.doLaunch(WorkbenchLaunchConfigurationDelegate.java:155)</Frame>
          <Frame depth="4">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:71)</Frame>
          <Frame depth="5">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:140)</Frame>
          <Frame depth="6">org.eclipse.debug.internal.ui.actions.RelaunchActionDelegate.relaunch(RelaunchActionDelegate.java:113)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.actions.RelaunchActionDelegate.relaunch(RelaunchActionDelegate.java:42)</Frame>
          <Frame depth="8">org.eclipse.debug.internal.ui.actions.RelaunchHistoryLaunchAction$1.run(RelaunchHistoryLaunchAction.java:60)</Frame>
          <Frame depth="9">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)</Frame>
          <Frame depth="10">org.eclipse.debug.internal.ui.actions.RelaunchHistoryLaunchAction.run(RelaunchHistoryLaunchAction.java:58)</Frame>
          <Frame depth="11">org.eclipse.jface.action.Action.runWithEvent(Action.java:590)</Frame>
          <Frame depth="12">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="13">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="14">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="15">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:865)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.Workbench.run(Workbench.java:848)</Frame>
          <Frame depth="22">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)</Frame>
          <Frame depth="23">org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)</Frame>
          <Frame depth="24">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="25">org.eclipse.core.launcher.Main.basicRun(Main.java:190)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.run(Main.java:549)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.main(Main.java:390)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437330862857">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.Hashtable.put(Hashtable.java(Compiled Code))</Frame>
          <Frame depth="1">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.computeInitialCheckState(AdvancedLauncherTab.java:412)</Frame>
          <Frame depth="2">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.initializeFrom(AdvancedLauncherTab.java:312)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom(AbstractLaunchConfigurationTabGroup.java:78)</Frame>
          <Frame depth="4">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.setLaunchConfiguration(LaunchConfigurationDialog.java:1242)</Frame>
          <Frame depth="5">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.selectionChanged(LaunchConfigurationDialog.java:1099)</Frame>
          <Frame depth="6">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:147)</Frame>
          <Frame depth="7">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1064)</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:510)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetSelected(AbstractTreeViewer.java:624)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="15">org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled Code))</Frame>
          <Frame depth="16">org.eclipse.jface.window.Window.open(Window.java:525)</Frame>
          <Frame depth="17">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.open(LaunchConfigurationDialog.java:413)</Frame>
          <Frame depth="18">org.eclipse.debug.internal.ui.actions.OpenLaunchConfigurationsAction.run(OpenLaunchConfigurationsAction.java:126)</Frame>
          <Frame depth="19">org.eclipse.jface.action.Action.runWithEvent(Action.java:590)</Frame>
          <Frame depth="20">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="21">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="22">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="23">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:865)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.run(Workbench.java:848)</Frame>
          <Frame depth="30">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)</Frame>
          <Frame depth="31">org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)</Frame>
          <Frame depth="32">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.basicRun(Main.java:190)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.run(Main.java:549)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.main(Main.java:390)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437330862857">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.Hashtable.put(Hashtable.java(Compiled Code))</Frame>
          <Frame depth="1">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.computeInitialCheckState(AdvancedLauncherTab.java:412)</Frame>
          <Frame depth="2">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.initializeFrom(AdvancedLauncherTab.java:312)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom(AbstractLaunchConfigurationTabGroup.java:78)</Frame>
          <Frame depth="4">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.setLaunchConfiguration(LaunchConfigurationDialog.java:1242)</Frame>
          <Frame depth="5">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.constructNewConfig(LaunchConfigurationDialog.java:1578)</Frame>
          <Frame depth="6">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.handleNewPressed(LaunchConfigurationDialog.java:1561)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog$2.widgetSelected(LaunchConfigurationDialog.java:765)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)</Frame>
          <Frame depth="13">org.eclipse.jface.window.Window.runEventLoop(Window.java:538)</Frame>
          <Frame depth="14">org.eclipse.jface.window.Window.open(Window.java:525)</Frame>
          <Frame depth="15">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.open(LaunchConfigurationDialog.java:413)</Frame>
          <Frame depth="16">org.eclipse.debug.internal.ui.actions.OpenLaunchConfigurationsAction.run(OpenLaunchConfigurationsAction.java:126)</Frame>
          <Frame depth="17">org.eclipse.jface.action.Action.runWithEvent(Action.java:590)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="19">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="20">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="21">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:865)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.run(Workbench.java:848)</Frame>
          <Frame depth="28">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:777)</Frame>
          <Frame depth="29">org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)</Frame>
          <Frame depth="30">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.basicRun(Main.java:190)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.run(Main.java:549)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.main(Main.java:390)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="10">
        <Lines>
          <Line>- tried launching my target, which I had previously terminated</Line>
          <Line>- it told me the target was still running</Line>
          <Line>- deleted the lock file for my target</Line>
          <Line>- it still complained</Line>
          <Line>- noticed the debug view had 2 stale targets</Line>
          <Line>- tried killing them</Line>
          <Line>- they remained there</Line>
          <Line>- restarted my host</Line>
          <Line>- tried launching</Line>
          <Line>- got:</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- immediately after seeing this, I tried going to the launch configs</Line>
          <Line>- got the following NPE (different location than above):</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- shutdown</Line>
          <Line>- delete all metadata for org.eclipse.debug.core and org.eclipse.debug.ui</Line>
          <Line>- restart</Line>
          <Line>- go to create new launch config</Line>
          <Line>- got:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>M5'

- tried launching my target, which I had previously terminated
- it told me the target was still running
- deleted the lock file for my target
- it still complained
- noticed the debug view had 2 stale targets
- tried killing them
- they remained there
- restarted my host
- tried launching
- got:

java.lang.NullPointerException
	at java.util.Hashtable.put(Hashtable.java(Compiled Code))
	at java.util.Properties.setProperty(Properties.java:113)
	at org.eclipse.pde.internal.ui.TargetPlatform.createPropertiesFile
(TargetPlatform.java:96)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.doLau
nch(WorkbenchLaunchConfigurationDelegate.java:155)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launc
h(WorkbenchLaunchConfigurationDelegate.java:71)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:140)
	at 
org.eclipse.debug.internal.ui.actions.RelaunchActionDelegate.relaunch
(RelaunchActionDelegate.java:113)
	at 
org.eclipse.debug.internal.ui.actions.RelaunchActionDelegate.relaunch
(RelaunchActionDelegate.java:42)
	at 
org.eclipse.debug.internal.ui.actions.RelaunchHistoryLaunchAction$1.run
(RelaunchHistoryLaunchAction.java:60)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:56)
	at 
org.eclipse.debug.internal.ui.actions.RelaunchHistoryLaunchAction.run
(RelaunchHistoryLaunchAction.java:58)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:865)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:848)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:777)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:190)
	at org.eclipse.core.launcher.Main.run(Main.java:549)
	at org.eclipse.core.launcher.Main.main(Main.java:390)
Not sure if this is related:

- immediately after seeing this, I tried going to the launch configs
- got the following NPE (different location than above):

java.lang.NullPointerException
	at java.util.Hashtable.put(Hashtable.java(Compiled Code))
	at 
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.computeInitialCheckSta
te(AdvancedLauncherTab.java:412)
	at 
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.initializeFrom
(AdvancedLauncherTab.java:312)
	at 
org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom
(AbstractLaunchConfigurationTabGroup.java:78)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.se
tLaunchConfiguration(LaunchConfigurationDialog.java:1242)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.se
lectionChanged(LaunchConfigurationDialog.java:1099)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:147)
	at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:1064)
	at org.eclipse.jface.viewers.StructuredViewer.handleSelect
(StructuredViewer.java:510)
	at org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetSelected
(AbstractTreeViewer.java:624)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:85)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled 
Code))
	at org.eclipse.jface.window.Window.open(Window.java:525)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.op
en(LaunchConfigurationDialog.java:413)
	at 
org.eclipse.debug.internal.ui.actions.OpenLaunchConfigurationsAction.run
(OpenLaunchConfigurationsAction.java:126)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:865)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:848)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:777)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:190)
	at org.eclipse.core.launcher.Main.run(Main.java:549)
	at org.eclipse.core.launcher.Main.main(Main.java:390)

Tried the following:
- shutdown
- delete all metadata for org.eclipse.debug.core and org.eclipse.debug.ui
- restart
- go to create new launch config
- got: 

java.lang.NullPointerException
	at java.util.Hashtable.put(Hashtable.java(Compiled Code))
	at 
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.computeInitialCheckSta
te(AdvancedLauncherTab.java:412)
	at 
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.initializeFrom
(AdvancedLauncherTab.java:312)
	at 
org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom
(AbstractLaunchConfigurationTabGroup.java:78)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.se
tLaunchConfiguration(LaunchConfigurationDialog.java:1242)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.co
nstructNewConfig(LaunchConfigurationDialog.java:1578)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.ha
ndleNewPressed(LaunchConfigurationDialog.java:1561)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog$2.
widgetSelected(LaunchConfigurationDialog.java:765)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:85)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:538)
	at org.eclipse.jface.window.Window.open(Window.java:525)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.op
en(LaunchConfigurationDialog.java:413)
	at 
org.eclipse.debug.internal.ui.actions.OpenLaunchConfigurationsAction.run
(OpenLaunchConfigurationsAction.java:126)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:865)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:848)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:777)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:190)
	at org.eclipse.core.launcher.Main.run(Main.java:549)
	at org.eclipse.core.launcher.Main.main(Main.java:390)

Won't happen any more - PDE is not keeping track of running instances.</WithStack>
    <WithOutStack>M5'

- tried launching my target, which I had previously terminated
- it told me the target was still running
- deleted the lock file for my target
- it still complained
- noticed the debug view had 2 stale targets
- tried killing them
- they remained there
- restarted my host
- tried launching
- got:

Not sure if this is related:

- immediately after seeing this, I tried going to the launch configs
- got the following NPE (different location than above):


Tried the following:
- shutdown
- delete all metadata for org.eclipse.debug.core and org.eclipse.debug.ui
- restart
- go to create new launch config
- got: 



Won't happen any more - PDE is not keeping track of running instances.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15008" />
    <CreationDate amount="2002-05-01 11:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Window system id for GTK</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- Eclipse executable launcher (-ws command line argument)</Line>
          <Line>- Java launcher "Main" (-ws command line argument)</Line>
          <Line>- Core boot and runtime (-ws command line argument; getWS API)</Line>
          <Line>- PDE (preference for -ws command line line argument)</Line>
          <Line>- SWT (command line argument and API)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>For Eclipse's purposes, the official name of the GTK windowing
system will be "gtk". In Eclipse 2.0, the only supported version of
GTK will be GTK 2. The older support for GTK1.x will not be included
in Eclipse 2.0. 

Please eradicate all references to "gtk1x" (and "gtk2"
if you find any). The old name may show up in subdirectory names,
constants, comments, package names, plugin.xml, fragment.xml, etc.

This is a blanket bug report affecting several components:
 - Eclipse executable launcher (-ws command line argument)
 - Java launcher "Main" (-ws command line argument)
 - Core boot and runtime (-ws command line argument; getWS API)
 - PDE (preference for -ws command line line argument)
 - SWT (command line argument and API)

All of these components need to be thoroughly checked. Please annotate
this PR with the status for each component.
Before the support for gtk1x can be removed, there needs to be an ok to stop 
supporting this platform provided by the PMC. In addition, there needs to be 
an announcement to this effect on the newsgroup/mailing lists.

Only after this happens would we be able to remove the gtk1x support. Adding 
KH to CC list as a representative of the PMC.

PDE does not have hard-coded reference (it uses BootLoader.WS_GTK).
Obsolete.
Closing.</WithStack>
    <WithOutStack>For Eclipse's purposes, the official name of the GTK windowing
system will be "gtk". In Eclipse 2.0, the only supported version of
GTK will be GTK 2. The older support for GTK1.x will not be included
in Eclipse 2.0. 

Please eradicate all references to "gtk1x" (and "gtk2"
if you find any). The old name may show up in subdirectory names,
constants, comments, package names, plugin.xml, fragment.xml, etc.

This is a blanket bug report affecting several components:
 - Eclipse executable launcher (-ws command line argument)
 - Java launcher "Main" (-ws command line argument)
 - Core boot and runtime (-ws command line argument; getWS API)
 - PDE (preference for -ws command line line argument)
 - SWT (command line argument and API)

All of these components need to be thoroughly checked. Please annotate
this PR with the status for each component.
Before the support for gtk1x can be removed, there needs to be an ok to stop 
supporting this platform provided by the PMC. In addition, there needs to be 
an announcement to this effect on the newsgroup/mailing lists.

Only after this happens would we be able to remove the gtk1x support. Adding 
KH to CC list as a representative of the PMC.

PDE does not have hard-coded reference (it uses BootLoader.WS_GTK).
Obsolete.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15009" />
    <CreationDate amount="2002-05-01 11:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>More information in breakpoint properties dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Watchpoint 
  should show the field name
Method
  should show the method name
Fixed in JavaBreakpointPreferencePage
Please verify.
Verified.</WithStack>
    <WithOutStack>Watchpoint 
  should show the field name
Method
  should show the method name
Fixed in JavaBreakpointPreferencePage
Please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15010" />
    <CreationDate amount="2002-05-01 12:08:00 -0400" />
    <DupId amount="13977" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Problems importing plugins</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>- opened old workspace</Line>
          <Line>- imported plugins (all except org.eclipse.ui)</Line>
          <Line>- it proceeded OK, but at then end it gave me an error dialog</Line>
          <Line>Title: Problem Occurred</Line>
          <Line>Message: Plug-in Import</Line>
          <Line>Details:</Line>
          <Line>Problem while importing plugin "X": X does not exist.</Line>
          <Line>(one occurrence for each plugin X)</Line>
          <Line>This is a known problem that is reported by JavaCore during classpath setup.</Line>
          <Line>Still investigating.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020430

- opened old workspace
- imported plugins (all except org.eclipse.ui)
- it proceeded OK, but at then end it gave me an error dialog
Title: Problem Occurred
Message: Plug-in Import
Details:
Problem while importing plugin "X": X does not exist.
(one occurrence for each plugin X)
This is a known problem that is reported by JavaCore during classpath setup. 
Still investigating.


*** This bug has been marked as a duplicate of 13977 ***</WithStack>
    <WithOutStack>Build 20020430

- opened old workspace
- imported plugins (all except org.eclipse.ui)
- it proceeded OK, but at then end it gave me an error dialog
Title: Problem Occurred
Message: Plug-in Import
Details:
Problem while importing plugin "X": X does not exist.
(one occurrence for each plugin X)
This is a known problem that is reported by JavaCore during classpath setup. 
Still investigating.


*** This bug has been marked as a duplicate of 13977 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15011" />
    <CreationDate amount="2002-05-01 12:12:00 -0400" />
    <DupId amount="14932" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>StringIndexOutOfBoundsException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330862872">
        <Exception>java.lang.StringIndexOutOfBoundsException</Exception>
        <Reason>String index out of range: -
6</Reason>
        <Frames>
          <Frame depth="0">java.lang.String.substring(String.java:1525)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.ReopenEditorMenu.calcText(ReopenEditorMenu.java:103)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.ReopenEditorMenu.fill(ReopenEditorMenu.java:161)</Frame>
          <Frame depth="3">org.eclipse.jface.action.MenuManager.update(MenuManager.java:528)</Frame>
          <Frame depth="4">org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)</Frame>
          <Frame depth="5">org.eclipse.jface.action.MenuManager.update(MenuManager.java:563)</Frame>
          <Frame depth="6">org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.updateActionBars(WorkbenchWindow.java:1270)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WorkbenchWindow.updateActionSets(WorkbenchWindow.java:1288)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateActionSets(WorkbenchPage.java:273)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateTopEditor(WorkbenchPage.java:179)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchPage.bringToTop(WorkbenchPage.java:434)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.WorkbenchPage.activate(WorkbenchPage.java:330)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1629)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1516)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:121)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:99)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:89)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open(OpenActionUtil.java:45)</Frame>
          <Frame depth="19">org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:149)</Frame>
          <Frame depth="20">org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:140)</Frame>
          <Frame depth="21">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:133)</Frame>
          <Frame depth="22">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:95)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleDoubleClick(PackageExplorerActionGroup.java:259)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.handleDoubleClick(PackageExplorerPart.java:497)</Frame>
          <Frame depth="25">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.access$1(PackageExplorerPart.java:496)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.doubleClick(PackageExplorerPart.java:306)</Frame>
          <Frame depth="27">org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:286)</Frame>
          <Frame depth="28">org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect(StructuredViewer.java:444)</Frame>
          <Frame depth="29">org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetDefaultSelected(AbstractTreeViewer.java:627)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:92)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:883)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.Workbench.run(Workbench.java:866)</Frame>
          <Frame depth="37">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:733)</Frame>
          <Frame depth="38">org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)</Frame>
          <Frame depth="39">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.basicRun(Main.java:162)</Frame>
          <Frame depth="41">org.eclipse.core.launcher.Main.run(Main.java:588)</Frame>
          <Frame depth="42">org.eclipse.core.launcher.Main.main(Main.java:437)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>20020430

I get the following walkback trying to open a .properties file.  My workspace is then 
screwed up so that on restart, I'm told workbench.xml will be 
deleted.


java.lang.StringIndexOutOfBoundsException: String index out of range: -
6
	at java.lang.String.substring(String.java:1525)
	at 
org.eclipse.ui.internal.ReopenEditorMenu.calcText(ReopenEditorMenu.java:103)
	at 
org.eclipse.ui.internal.ReopenEditorMenu.fill(ReopenEditorMenu.java:161)
	at 
org.eclipse.jface.action.MenuManager.update(MenuManager.java:528)
	at 
org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)
	at 
org.eclipse.jface.action.MenuManager.update(MenuManager.java:563)
	at 
org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)
	at 
org.eclipse.ui.internal.WorkbenchWindow.updateActionBars(WorkbenchWindow.java:1270)
	at 
org.eclipse.ui.internal.WorkbenchWindow.updateActionSets(WorkbenchWindow.java:1288)
	at 
org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateActionSets(WorkbenchPage.java:273)
	at 
org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateTopEditor(WorkbenchPage.java:179)
	at 
org.eclipse.ui.internal.WorkbenchPage.bringToTop(WorkbenchPage.java:434)
	at 
org.eclipse.ui.internal.WorkbenchPage.activate(WorkbenchPage.java:330)
	at 
org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1629)
	at 
org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1516)
	at 
org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:121)
	at 
org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:99)
	at 
org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:89)
	at 
org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open(OpenActionUtil.java:45)
	at 
org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:149)
	at 
org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:140)
	at 
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:133)
	at 
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:95)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleDoubleClick(PackageExplorerActionGroup.java:259)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.handleDoubleClick(PackageExplorerPart.java:497)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.access$1(PackageExplorerPart.java:496)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.doubleClick(PackageExplorerPart.java:306)
	at 
org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:286)
	at 
org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect(StructuredViewer.java:444)
	at 
org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetDefaultSelected(AbstractTreeViewer.java:627)
	at 
org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:92)
	at 
org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at 
org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at 
org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)
	at 
org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
	at 
org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:883)
	at 
org.eclipse.ui.internal.Workbench.run(Workbench.java:866)
	at 
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:733)
	at 
org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)
	at 
java.lang.reflect.Method.invoke(Native Method)
	at 
org.eclipse.core.launcher.Main.basicRun(Main.java:162)
	at 
org.eclipse.core.launcher.Main.run(Main.java:588)
	at 
org.eclipse.core.launcher.Main.main(Main.java:437)


*** This bug has been marked as a duplicate of 14932 ***</WithStack>
    <WithOutStack>20020430

I get the following walkback trying to open a .properties file.  My workspace is then 
screwed up so that on restart, I'm told workbench.xml will be 
deleted.





*** This bug has been marked as a duplicate of 14932 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15012" />
    <CreationDate amount="2002-05-01 12:16:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Can't use custom perspective</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20020430

I modified the Resource perspective to show the CVS Repo view, then saved it as a 
custom perspective.  Every time I then click on the repository icon at the far left, I get a second 
icon appearing at the far left, and I get into a state where multiple repository icons appear as 
selected.
Simon, please investigate.
May be related to Eduardo's changes to perspective activation.
Try to reproduce this.
Joe, do you mean you get multiple Resource perspective icons (not repository 
icons) appearing as selected on the far left (on the shortcut bar)?
Yes, I saw multiple Resource perspective icons on the shortcut bar.  I could 
close one of them, but as soon as I clicked on the other, I'd get the second 
one back again.  
Fix in build &gt; 2002-05-02</WithStack>
    <WithOutStack>20020430

I modified the Resource perspective to show the CVS Repo view, then saved it as a 
custom perspective.  Every time I then click on the repository icon at the far left, I get a second 
icon appearing at the far left, and I get into a state where multiple repository icons appear as 
selected.
Simon, please investigate.
May be related to Eduardo's changes to perspective activation.
Try to reproduce this.
Joe, do you mean you get multiple Resource perspective icons (not repository 
icons) appearing as selected on the far left (on the shortcut bar)?
Yes, I saw multiple Resource perspective icons on the shortcut bar.  I could 
close one of them, but as soon as I clicked on the other, I'd get the second 
one back again.  
Fix in build &gt; 2002-05-02</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15013" />
    <CreationDate amount="2002-05-01 12:42:00 -0400" />
    <DupId amount="14932" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>StringIndexOutOfBoundsException if "Link to Type Hierarchy view selection to active editor" preference is on</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>build 20020430

If I have the preference "Link to Type Hierarchy view selection to active 
editor" on, I keep getting internal error dialogs.

!SESSION
!ENTRY org.eclipse.core.resources 1 4 Wed May 01 12:41:45 EDT 2002
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Wed May 01 12:41:45 EDT 2002
!MESSAGE String index out of range: -4
!STACK java.lang.StringIndexOutOfBoundsException: String index out of range: -4
	at java.lang.String.substring(String.java(Compiled Code))
	at org.eclipse.ui.internal.ReopenEditorMenu.calcText
(ReopenEditorMenu.java:103)
	at org.eclipse.ui.internal.ReopenEditorMenu.fill
(ReopenEditorMenu.java:161)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:528)
	at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:563)
	at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)
	at org.eclipse.ui.internal.WorkbenchWindow.updateActionBars
(WorkbenchWindow.java:1270)
	at org.eclipse.ui.internal.WorkbenchWindow.updateActionSets
(WorkbenchWindow.java:1288)
	at 
org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateActionSets
(WorkbenchPage.java:273)
	at org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateTopEditor
(WorkbenchPage.java:179)
	at org.eclipse.ui.internal.WorkbenchPage.bringToTop
(WorkbenchPage.java:434)
	at org.eclipse.ui.internal.WorkbenchPage.activate
(WorkbenchPage.java:330)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1629)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1587)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor
(EditorUtility.java:133)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor
(EditorUtility.java:103)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor
(EditorUtility.java:89)
	at org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open
(OpenActionUtil.java:45)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:149)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:140)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:133)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:95)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleDouble
Click(PackageExplorerActionGroup.java:259)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.handleDoubleClick
(PackageExplorerPart.java:497)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.access$1
(PackageExplorerPart.java:496)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.doubleClick
(PackageExplorerPart.java:306)
	at org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick
(StructuredViewer.java:286)
	at org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect
(StructuredViewer.java:444)
	at org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetDefaultSelected
(AbstractTreeViewer.java:627)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:92)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:883)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:866)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:733)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:162)
	at org.eclipse.core.launcher.Main.run(Main.java:588)
	at org.eclipse.core.launcher.Main.main(Main.java:437)
Kept the same workspace with the preference off and still get the problem. 
Looks more like a UI bug.


*** This bug has been marked as a duplicate of 14932 ***</WithStack>
    <WithOutStack>build 20020430

If I have the preference "Link to Type Hierarchy view selection to active 
editor" on, I keep getting internal error dialogs.

!SESSION
!ENTRY org.eclipse.core.resources 1 4 Wed May 01 12:41:45 EDT 2002
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Wed May 01 12:41:45 EDT 2002
!MESSAGE String index out of range: -4
!STACK java.lang.StringIndexOutOfBoundsException: String index out of range: -4
	at java.lang.String.substring(String.java(Compiled Code))
	at org.eclipse.ui.internal.ReopenEditorMenu.calcText
(ReopenEditorMenu.java:103)
	at org.eclipse.ui.internal.ReopenEditorMenu.fill
(ReopenEditorMenu.java:161)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:528)
	at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:563)
	at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)
	at org.eclipse.ui.internal.WorkbenchWindow.updateActionBars
(WorkbenchWindow.java:1270)
	at org.eclipse.ui.internal.WorkbenchWindow.updateActionSets
(WorkbenchWindow.java:1288)
	at 
org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateActionSets
(WorkbenchPage.java:273)
	at org.eclipse.ui.internal.WorkbenchPage$ActionSwitcher.updateTopEditor
(WorkbenchPage.java:179)
	at org.eclipse.ui.internal.WorkbenchPage.bringToTop
(WorkbenchPage.java:434)
	at org.eclipse.ui.internal.WorkbenchPage.activate
(WorkbenchPage.java:330)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1629)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1587)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor
(EditorUtility.java:133)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor
(EditorUtility.java:103)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor
(EditorUtility.java:89)
	at org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open
(OpenActionUtil.java:45)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:149)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:140)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:133)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:95)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleDouble
Click(PackageExplorerActionGroup.java:259)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.handleDoubleClick
(PackageExplorerPart.java:497)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.access$1
(PackageExplorerPart.java:496)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.doubleClick
(PackageExplorerPart.java:306)
	at org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick
(StructuredViewer.java:286)
	at org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect
(StructuredViewer.java:444)
	at org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetDefaultSelected
(AbstractTreeViewer.java:627)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:92)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:883)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:866)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:733)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:162)
	at org.eclipse.core.launcher.Main.run(Main.java:588)
	at org.eclipse.core.launcher.Main.main(Main.java:437)
Kept the same workspace with the preference off and still get the problem. 
Looks more like a UI bug.


*** This bug has been marked as a duplicate of 14932 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15014" />
    <CreationDate amount="2002-05-01 12:59:00 -0400" />
    <DupId amount="4805" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Page not redrawn when switching perspectives</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. Download SWT examples ZIP and extract into eclipse directory.</Line>
          <Line>2. Restart Eclipse</Line>
          <Line>3. Open resource perspective</Line>
          <Line>4. Show SWT Layout exaples view in resource perspective</Line>
          <Line>5. Dock view on page</Line>
          <Line>6. Maximize the view</Line>
          <Line>7. Switch to Java Perspective</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build: 20020430 

Steps:
1. Download SWT examples ZIP and extract into eclipse directory.
2. Restart Eclipse
3. Open resource perspective
4. Show SWT Layout exaples view in resource perspective
5. Dock view on page
6. Maximize the view
7. Switch to Java Perspective

Some of the workbench parts are not redrawn. Also, trying to open a type 
(Ctrl+Shift+T) opens the dialog box, but the list of possible matches stays 
empty (no matter what is typed). The same behavior occurs if another view in 
the resource perspective is maximized, as long as the SWT Examples view is the 
visible view in it's tab folder. If no view is maximized in the resource 
perspective, everything works fine upon switching to the Java Perspective.
Removing zoomOut from busySetPerspective hides the problem.

Aparently this is a known SWT bug. setBounds() inside a setRedraw false/true 
block does not always paint the background.

Released busySetPerspective. Going to move this report to SWT since this may 
show up in other cases since we use setRedraw false/true in many cases.


*** This bug has been marked as a duplicate of 4805 ***</WithStack>
    <WithOutStack>Build: 20020430 

Steps:
1. Download SWT examples ZIP and extract into eclipse directory.
2. Restart Eclipse
3. Open resource perspective
4. Show SWT Layout exaples view in resource perspective
5. Dock view on page
6. Maximize the view
7. Switch to Java Perspective

Some of the workbench parts are not redrawn. Also, trying to open a type 
(Ctrl+Shift+T) opens the dialog box, but the list of possible matches stays 
empty (no matter what is typed). The same behavior occurs if another view in 
the resource perspective is maximized, as long as the SWT Examples view is the 
visible view in it's tab folder. If no view is maximized in the resource 
perspective, everything works fine upon switching to the Java Perspective.
Removing zoomOut from busySetPerspective hides the problem.

Aparently this is a known SWT bug. setBounds() inside a setRedraw false/true 
block does not always paint the background.

Released busySetPerspective. Going to move this report to SWT since this may 
show up in other cases since we use setRedraw false/true in many cases.


*** This bug has been marked as a duplicate of 4805 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15015" />
    <CreationDate amount="2002-05-01 13:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Feature-based preferences broken</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Build 20020430.

With this build, we can no longer get at the location of the primary feature 
through it's plugin descriptor (since plugin descriptors no longer describe 
features).  We need to use the functionality found in 
org.eclipse.core.boot/IPlatformConfiguration and IFeatureEntry.
What feature based preferences are these?  The preference mechanism is
plug-in based. Each feature (including primary features) has a plug-in
with the same id. Preference-related files are in the plug-in.
The problem was with the configuration file for the test.  It needs to specify 
a feature now that org.eclipse.sdk is gone.

The org.eclipse.sdk feature (&amp; plug-in) will return in the 20020508 build.</WithStack>
    <WithOutStack>Build 20020430.

With this build, we can no longer get at the location of the primary feature 
through it's plugin descriptor (since plugin descriptors no longer describe 
features).  We need to use the functionality found in 
org.eclipse.core.boot/IPlatformConfiguration and IFeatureEntry.
What feature based preferences are these?  The preference mechanism is
plug-in based. Each feature (including primary features) has a plug-in
with the same id. Preference-related files are in the plug-in.
The problem was with the configuration file for the test.  It needs to specify 
a feature now that org.eclipse.sdk is gone.

The org.eclipse.sdk feature (&amp; plug-in) will return in the 20020508 build.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15016" />
    <CreationDate amount="2002-05-01 13:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Main type search could be primed with current text</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>In the Main tab of a Java Local launch configuration, if the user has typed any 
characters into the main class text field, these should be used to prime the 
choosing of the main type dialog.
Fixed in JavaMainTab.
Please verify.
Verified.</WithStack>
    <WithOutStack>In the Main tab of a Java Local launch configuration, if the user has typed any 
characters into the main class text field, these should be used to prime the 
choosing of the main type dialog.
Fixed in JavaMainTab.
Please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15017" />
    <CreationDate amount="2002-05-01 13:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Debug code completion missing "later" proposals</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="195" end="449" />
        <code>public class SmallTest2 {
     public static void main(String[] args) {
         new SmallTest2().before();
     }      
     public void before() {
         System.out.println("before");
     }
     public String after() {
     	return "after";
     }
}</code>
      </source_code>
      <source_code type="class">
        <location start="959" end="1206" />
        <code>public class SmallTest {
    public static void main(String[] args) {
        new SmallTest().before();
    }
    public void before() {
        System.out.println("before");
{this.}    }
    public String after() {
        return "after";
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>In the display view and the details panes, code completing on "this." with a 
breakpoint on line 6 of the test source you are not presented with a proposal 
for the method "after".

Test Source:
public class SmallTest2 {
     public static void main(String[] args) {
         new SmallTest2().before();
     }      
     public void before() {
         System.out.println("before");
     }
     public String after() {
     	return "after";
     }
}
Please investigate and re-assign if required.
Asking for help again David ;-)
From what I can see what we asking for on the IType seems reasonable.
Am I misinterpreting the "insertion" parameter?
Your interpretation of the "insertion" parameter is correct. The problem is a 
bugs in my code. When i insert the snippet in the compilation unit, i surround 
the code snippet with brace. But i did not put braces at the good location. Now 
this problem is fixed.

With my new code i obtain the following source :
public class SmallTest {
    public static void main(String[] args) {
        new SmallTest().before();
    }
    public void before() {
        System.out.println("before");
{this.}    }
    public String after() {
        return "after";
    }
}

The "insertion" location is at start of the line 7. I am not sure, but this 
location should be at start of the line 6.
If the current behavior is correct then the bug is fixed.
You are right...I was off by one on the linenumber...stack frames are 1 based 
while the document is 0 based.
Fixed.
Please verify (darinW).
Verified</WithStack>
    <WithOutStack>In the display view and the details panes, code completing on "this." with a 
breakpoint on line 6 of the test source you are not presented with a proposal 
for the method "after".

Test Source:
public class SmallTest2 {
     public static void main(String[] args) {
         new SmallTest2().before();
     }      
     public void before() {
         System.out.println("before");
     }
     public String after() {
     	return "after";
     }
}
Please investigate and re-assign if required.
Asking for help again David ;-)
From what I can see what we asking for on the IType seems reasonable.
Am I misinterpreting the "insertion" parameter?
Your interpretation of the "insertion" parameter is correct. The problem is a 
bugs in my code. When i insert the snippet in the compilation unit, i surround 
the code snippet with brace. But i did not put braces at the good location. Now 
this problem is fixed.

With my new code i obtain the following source :
public class SmallTest {
    public static void main(String[] args) {
        new SmallTest().before();
    }
    public void before() {
        System.out.println("before");
{this.}    }
    public String after() {
        return "after";
    }
}

The "insertion" location is at start of the line 7. I am not sure, but this 
location should be at start of the line 6.
If the current behavior is correct then the bug is fixed.
You are right...I was off by one on the linenumber...stack frames are 1 based 
while the document is 0 based.
Fixed.
Please verify (darinW).
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15018" />
    <CreationDate amount="2002-05-01 13:29:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>accessibility broken on mozilla</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>One cannot navigate with the keyboard only into the navigation. 
It looks like unless you click with the mouse, there is not keyboard shortcut 
to get focus inside the iframe containing navigation.

I opened mozilla bug 141515
Needs newer version of mozilla (1.0) to work with keyboard.
This is a dependency issue and there isn't anything we can do. Users must 
upgrade their mozilla browser to pick up accessibility functions.
*** Bug 16556 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>One cannot navigate with the keyboard only into the navigation. 
It looks like unless you click with the mouse, there is not keyboard shortcut 
to get focus inside the iframe containing navigation.

I opened mozilla bug 141515
Needs newer version of mozilla (1.0) to work with keyboard.
This is a dependency issue and there isn't anything we can do. Users must 
upgrade their mozilla browser to pick up accessibility functions.
*** Bug 16556 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15019" />
    <CreationDate amount="2002-05-01 14:00:00 -0400" />
    <DupId amount="14981" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Initial focus wrong in most dialogs and wizards</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>1) Select a project or source folder in the packages view, context menu,</Line>
          <Line>New-&gt;Package.  The initial focus is given to the source folder field.  Since it</Line>
          <Line>has inferred this value from the selection, it is already filled in.  The</Line>
          <Line>initial focus should go to the package name field.</Line>
          <Line />
          <Line>2) Select a package in packages view, context menu, New-&gt;Class or</Line>
          <Line>New-&gt;Interface.  Again, it has inferred the source folder and package from the</Line>
          <Line>selection, but initial focus still goes to the source folder entry field.  Focus</Line>
          <Line>should go to the class name field.  Keyboard user has to tab 5 times to get to</Line>
          <Line>the only field that needs to be filled in.</Line>
          <Line />
          <Line>3) Same problem for the source folder wizard.</Line>
          <Line>I suspect this might be a more general problem... almost every dialog and wizard</Line>
          <Line>in this build seems to have wrong initial focus.  Some examples:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020430

1) Select a project or source folder in the packages view, context menu, 
New-&gt;Package.  The initial focus is given to the source folder field.  Since it 
has inferred this value from the selection, it is already filled in.  The 
initial focus should go to the package name field.

2) Select a package in packages view, context menu, New-&gt;Class or 
New-&gt;Interface.  Again, it has inferred the source folder and package from the 
selection, but initial focus still goes to the source folder entry field.  Focus 
should go to the class name field.  Keyboard user has to tab 5 times to get to 
the only field that needs to be filled in.

3) Same problem for the source folder wizard.
I suspect this might be a more general problem... almost every dialog and wizard 
in this build seems to have wrong initial focus.  Some examples:

Open type dialog
Search Dialog
Project delete confirmation dialog
File Save As dialog
New file dialog
...etc...

Moving to Platform-&gt;UI
Updating title to better reflect the problem


*** This bug has been marked as a duplicate of 14981 ***</WithStack>
    <WithOutStack>Build 20020430

1) Select a project or source folder in the packages view, context menu, 
New-&gt;Package.  The initial focus is given to the source folder field.  Since it 
has inferred this value from the selection, it is already filled in.  The 
initial focus should go to the package name field.

2) Select a package in packages view, context menu, New-&gt;Class or 
New-&gt;Interface.  Again, it has inferred the source folder and package from the 
selection, but initial focus still goes to the source folder entry field.  Focus 
should go to the class name field.  Keyboard user has to tab 5 times to get to 
the only field that needs to be filled in.

3) Same problem for the source folder wizard.
I suspect this might be a more general problem... almost every dialog and wizard 
in this build seems to have wrong initial focus.  Some examples:

Open type dialog
Search Dialog
Project delete confirmation dialog
File Save As dialog
New file dialog
...etc...

Moving to Platform-&gt;UI
Updating title to better reflect the problem


*** This bug has been marked as a duplicate of 14981 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15020" />
    <CreationDate amount="2002-05-01 14:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Run Runtime-Workbench freezes with build 20020501</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Fresh workspace.</Line>
          <Line>2) Imported PDE Build from dev.eclipse.org</Line>
          <Line>3) imported ALL plug-ins but (pde.build) as binary projects</Line>
          <Line>4) Run runtime workbench.</Line>
          <Line>5) Eclipse freezes...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>build 20020501 - Linux RH 7.1 - motif - IBM JDK 1.3.0


1) Fresh workspace. 
2) Imported PDE Build from dev.eclipse.org
3) imported ALL plug-ins but (pde.build) as binary projects
4) Run runtime workbench.
5) Eclipse freezes...

Will try in a different machine.
Could not reproduce on a different machine.
Could not reproduce on the same machine either. Do not have a log file. The
workspace metadata folder was not even created when the problem happened.

Not reproducable - closing.</WithStack>
    <WithOutStack>build 20020501 - Linux RH 7.1 - motif - IBM JDK 1.3.0


1) Fresh workspace. 
2) Imported PDE Build from dev.eclipse.org
3) imported ALL plug-ins but (pde.build) as binary projects
4) Run runtime workbench.
5) Eclipse freezes...

Will try in a different machine.
Could not reproduce on a different machine.
Could not reproduce on the same machine either. Do not have a log file. The
workspace metadata folder was not even created when the problem happened.

Not reproducable - closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15021" />
    <CreationDate amount="2002-05-01 14:16:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Project info property page should not include "derived" property</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) Right click on a project, Properties-&gt;Info</Line>
          <Line>2) Check off the "derived" check box.  Click ok.</Line>
          <Line>3) Go back to the properties page.  The box is not checked.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020430

1) Right click on a project, Properties-&gt;Info
2) Check off the "derived" check box.  Click ok.
3) Go back to the properties page.  The box is not checked.

The Core API states that it ignores the derived bit for projects, so this 
option should not even appear on the info property page for projects.

Note: it might also be useful to give a one line description of what this means, 
as it won't be a familiar concept for most users.  Something like, "Hint to 
repository providers that this resource should not be shared with other users."
Should hide this option for projects, but show it for folders and files.
Fixed for build 20020507 by moving the OLE support to a win32 fragment
Wrong PR.  Ignore previous message
Option removed in build &gt;20020506
Marking closed</WithStack>
    <WithOutStack>Build 20020430

1) Right click on a project, Properties-&gt;Info
2) Check off the "derived" check box.  Click ok.
3) Go back to the properties page.  The box is not checked.

The Core API states that it ignores the derived bit for projects, so this 
option should not even appear on the info property page for projects.

Note: it might also be useful to give a one line description of what this means, 
as it won't be a familiar concept for most users.  Something like, "Hint to 
repository providers that this resource should not be shared with other users."
Should hide this option for projects, but show it for folders and files.
Fixed for build 20020507 by moving the OLE support to a win32 fragment
Wrong PR.  Ignore previous message
Option removed in build &gt;20020506
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15022" />
    <CreationDate amount="2002-05-01 14:23:00 -0400" />
    <DupId amount="15172" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New repo: "Use default port" is the default widget</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Use Default Port has focus when opening the wizard. This is useless.
This is exactly the problem described in 15172, marking as duplicate.

*** This bug has been marked as a duplicate of 15172 ***</WithStack>
    <WithOutStack>Use Default Port has focus when opening the wizard. This is useless.
This is exactly the problem described in 15172, marking as duplicate.

*** This bug has been marked as a duplicate of 15172 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15023" />
    <CreationDate amount="2002-05-01 14:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Select Working Set" doesn't?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Window-&gt;Select Working Set.
Create a working set and select it. OK.
The navigator still shows all projects.

On a related note, the java browsing views now let you select working sets
individually for each view. If this is the way it will work, then it's confusing
to have "Select Working Set" in the main Window menu if it doesn't do anything
in any of the views.
Should remove the items under Window.
Removed working set items in "Window" menu</WithStack>
    <WithOutStack>Window-&gt;Select Working Set.
Create a working set and select it. OK.
The navigator still shows all projects.

On a related note, the java browsing views now let you select working sets
individually for each view. If this is the way it will work, then it's confusing
to have "Select Working Set" in the main Window menu if it doesn't do anything
in any of the views.
Should remove the items under Window.
Removed working set items in "Window" menu</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15024" />
    <CreationDate amount="2002-05-01 14:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Launch configuration dialog doesn't display "favorite" option</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020425
Linux-Motif

The option to make a launch config a favorite is not visible on Linux. All
aspects of the dialog need to be examined on Linux to make sure there are no
other instances of this layout problem.
The fact that widgets have very different sizes on Motif compared to Windows is a real problem (for 
instance, text fields are about twice as high on Motif).  Could  the launch config dialog be made to 
resize itself according to its contents the way the Preference dialog does?
Fixed dialog so it resizes itself based on largest contributed tab size.  This should allow 
clients to contribute tabs of any size without worrying about whether they will fit.  Is there any 
way to also take in to consideration the number and size of the tab labels themselves?  In other 
words, is there a way to resize the dialog so that the user never has to see the scroll arrows at the 
top of the tabs?
Investigated using CTabFolder.  This truncates tab names with ellipses down to a minimum width in 
order to make all tabs fit, even if accelerator gets truncated.  The look is also different from the 
standard tabs.  Decided this is no improvement and will live with scroll arrows for now.  
Please verify.
Verified.</WithStack>
    <WithOutStack>Build 20020425
Linux-Motif

The option to make a launch config a favorite is not visible on Linux. All
aspects of the dialog need to be examined on Linux to make sure there are no
other instances of this layout problem.
The fact that widgets have very different sizes on Motif compared to Windows is a real problem (for 
instance, text fields are about twice as high on Motif).  Could  the launch config dialog be made to 
resize itself according to its contents the way the Preference dialog does?
Fixed dialog so it resizes itself based on largest contributed tab size.  This should allow 
clients to contribute tabs of any size without worrying about whether they will fit.  Is there any 
way to also take in to consideration the number and size of the tab labels themselves?  In other 
words, is there a way to resize the dialog so that the user never has to see the scroll arrows at the 
top of the tabs?
Investigated using CTabFolder.  This truncates tab names with ellipses down to a minimum width in 
order to make all tabs fit, even if accelerator gets truncated.  The look is also different from the 
standard tabs.  Decided this is no improvement and will live with scroll arrows for now.  
Please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15025" />
    <CreationDate amount="2002-05-01 14:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>implement java.awt.Robot for SWT</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="59">
      <source_code type="package">
        <location start="1937" end="1963" />
        <code>package org.eclipse.robot;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="1964" end="2034" />
        <code>/*
 * (c) Copyright IBM Corp. 2000, 2001.
 * All Rights Reserved.
 */</code>
      </source_code>
      <source_code type="import">
        <location start="2035" end="2060" />
        <code>import org.eclipse.ui.*;</code>
      </source_code>
      <source_code type="import">
        <location start="2061" end="2094" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="import">
        <location start="2095" end="2129" />
        <code>import org.eclipse.swt.graphics.*;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="2130" end="2270" />
        <code>/**
 * This interface represents the Eclipse-oriented script actions.
 * &lt;p&gt;
 * This adds Eclipse functionality to the Robot interface.
 */</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2320" end="2359" />
        <code>//*******************************//</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2359" end="2396" />
        <code>// Eclipse Workbench interface   //</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2396" end="2433" />
        <code>//*******************************//</code>
      </source_code>
      <source_code type="multicomment">
        <location start="2433" end="2956" />
        <code>/**
	 * Opens a Perspective with the given identifier. 
	 * &lt;p&gt;
	 * The IObjectIdentifier should be of type Perspective, and the 
	 * recognition method is the perspective's name or ID. 
	 * If newPage is true, it will open the perspective in a 
	 * new page even if the perspective is already open.  
	 * If newPage is false, tries to find an open perspective with 
	 * the given identifier, and switch to it. If not found, returns
	 * null.  
	 * &lt;p&gt;
	 * Returns the opened perspective, or null if command failed.
	 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="3068" end="3584" />
        <code>/**
	 * Opens a Perspective with the given perspective id. 
	 * &lt;p&gt;
	 * The object type and recognition method here are the 
	 * the default values for a Perspective.
	 * If newPage is true, it will open the perspective in a 
	 * new page even if the perspective is already open.  
	 * If newPage is false, tries to find an open perspective with 
	 * the given identifier, and switch to it. If not found, returns
	 * null.  
	 * &lt;p&gt;
	 * Returns the opened perspective, or null if command failed.
	 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="3673" end="3868" />
        <code>/**
	 * Opens a View with the given identifier. 
	 * &lt;p&gt;
	 * The IObjectIdentifier should be the 
	 * view's name or ID. 
	 * &lt;p&gt;
	 * Returns the opened view, or null if command failed.
	 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3869" end="3926" />
        <code>public IViewPart openView(IObjectIdentifier identifier);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="3927" end="4145" />
        <code>/**
	 * Opens a View with the given id 
	 * &lt;p&gt;
	 * The object type and recognition method here are the 
	 * the default values for a Perspective.
	 * &lt;p&gt;
	 * Returns the opened view, or null if command failed.
	 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4146" end="4188" />
        <code>public IViewPart openView(String viewId);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="4189" end="4385" />
        <code>/**
	 * Detaches an open View. 
	 * &lt;p&gt;
	 * Clicks on specified view, and drags it outside the current 
	 * Eclipse Window.
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4386" end="4439" />
        <code>public int detachView(IObjectIdentifier identifier);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="4440" end="4652" />
        <code>/**
	 * Detaches an open View with the given Id. 
	 * &lt;p&gt;
	 * Clicks on specified view, and drags it outside the current 
	 * Eclipse Window.
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4653" end="4691" />
        <code>public int detachView(String viewId);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="4692" end="5106" />
        <code>/**
	 * Sets the current context to the given object, and gives 
	 * it focus.
	 * &lt;p&gt;
	 * Everything is either an 
	 * org.eclipse.jface.window.Window or an 
	 * org.eclipse.jface.window.Wizard. 
	 * The IObjectIdentifier should be the caption string in 
	 * the window or the wizard.  
	 * ie: only StringIdentifierType is allowed for now.
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="5107" end="5167" />
        <code>public int setCurrentContext(IObjectIdentifier identifier);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="5168" end="5345" />
        <code>/**
	 * Sets the current context to the IWorkbenchWindow with  
	 * the given caption, and gives it focus.
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="5346" end="5398" />
        <code>public int setCurrentContext(String windowCaption);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="5399" end="5561" />
        <code>/**
	 * Returns the current context.
	 * &lt;p&gt; 
	 * Will return instances of Object types allowed in
	 * setCurrentContext(), or null if command failed.  
	 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="5562" end="5597" />
        <code>public Object getCurrentContext();</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="5598" end="5641" />
        <code>//*******************************//</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="5641" end="5678" />
        <code>// Eclipse UI/JFace interface    //</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="5678" end="5715" />
        <code>//*******************************//</code>
      </source_code>
      <source_code type="multicomment">
        <location start="5715" end="5984" />
        <code>/**
	 * Selects a menu item, or a sequence of menu items. 
	 * &lt;p&gt;
	 * eg: Perspective-&gt;Open-&gt;Other... 
	 * The menuSequence should be the name of the menu
	 * items in sequence, separated by "-&gt;". 
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="5985" end="6033" />
        <code>public int selectMenuItem(String menuSequence);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="6034" end="6078" />
        <code>//*******************************//</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="6078" end="6115" />
        <code>// Eclipse SWT interface         //</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="6115" end="6152" />
        <code>//*******************************//</code>
      </source_code>
      <source_code type="multicomment">
        <location start="6152" end="6299" />
        <code>/**
	 * Finds the list of Widgets of the given type in the  
	 * current context. 
	 * &lt;p&gt;
	 * Returns null if command failed, or non found.
	 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="6300" end="6338" />
        <code>public Widget[] findWidget(int type);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="6339" end="6444" />
        <code>/**
	 * selects the given Widget. 
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="6445" end="6485" />
        <code>public int selectWidget(Widget widget);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="6486" end="6591" />
        <code>/**
	 * selects the given Widget. 
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="6592" end="6647" />
        <code>public int selectWidget(IObjectIdentifier identifier);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="6648" end="6704" />
        <code>/**
	 * Returns the Control that has focus. 
	 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="6705" end="6739" />
        <code>public Control getFocusControl();</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="6740" end="6786" />
        <code>// ps: Display.getCurrent.getFocusControl();</code>
      </source_code>
      <source_code type="package">
        <location start="6911" end="6946" />
        <code>package org.eclipse.robot.examples;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="6947" end="7017" />
        <code>/*
 * (c) Copyright IBM Corp. 2000, 2001.
 * All Rights Reserved.
 */</code>
      </source_code>
      <source_code type="import">
        <location start="7018" end="7046" />
        <code>import org.eclipse.robot.*;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="7047" end="7374" />
        <code>/**
 * From a clean Eclipse UI, this sample performs the following: &lt;br&gt;
 * ------------------------------------------------------------- &lt;br&gt;
 * 1. Open Help pespective. &lt;br&gt;
 * 2. Detach Help View. &lt;br&gt;
 * 3. Press F1. &lt;br&gt;
 * 4. Close Eclipse. &lt;br&gt;
 * &lt;br&gt;
 * &lt;a HREF="RobotExample1.txt"&gt;Source for example&lt;/a&gt; 
 * &lt;br&gt;
 */</code>
      </source_code>
      <source_code type="class">
        <location start="7376" end="8135" />
        <code>public class RobotExample1 {

	public static void main(String[] args) {
		try {
			EclipseRobot robot = new EclipseRobot();

			robot.openPerspective
("org.eclipse.help.internal.ui.HelpPerspective", true);

			robot.setCurrentContext("Help - Eclipse Project SDK");

			robot.detachView
("org.eclipse.help.internal.ui.EmbeddedHelpView");

			robot.setCurrentContext("Help - Eclipse Project SDK");
			
			// for now AWT constants are used because of dependency 
on 
			// java.awt.Robot. If Eclipse provides similar class, 
then 
			// dependency is removed.
			robot.keyPress(java.awt.event.KeyEvent.VK_F1);
			robot.keyRelease(java.awt.event.KeyEvent.VK_F1);

			robot.selectMenuItem("File-&gt;Exit");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}
}</code>
      </source_code>
      <source_code type="package">
        <location start="8200" end="8235" />
        <code>package org.eclipse.robot.examples;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="8236" end="8306" />
        <code>/*
 * (c) Copyright IBM Corp. 2000, 2001.
 * All Rights Reserved.
 */</code>
      </source_code>
      <source_code type="import">
        <location start="8307" end="8335" />
        <code>import org.eclipse.robot.*;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="8336" end="8804" />
        <code>/**
 * From a clean Eclipse UI, this sample creates a new File under a 
 * Project called testingProject.&lt;br&gt;
 * -----------------------------------------------------------------&lt;br&gt;
 * 1. Open the new Resource wizard. &lt;br&gt;
 * 2. Select Simple, and File. &lt;br&gt;
 * 3. click Next. &lt;br&gt;
 * 4. Select Folder "testingProject". &lt;br&gt;
 * 5. Type file name, and click Finish. &lt;br&gt;
 * 6. Close Eclipse. &lt;br&gt;
 * &lt;br&gt;
 * &lt;A HREF="RobotExample2.txt"&gt;Source for example&lt;/A&gt; &lt;br&gt;
 */</code>
      </source_code>
      <source_code type="class">
        <location start="8806" end="10556" />
        <code>public class RobotExample2 implements IRobotConst {

	public static void main(String[] args) {
		try {
			EclipseRobot robot = new EclipseRobot();

			robot.setCurrentContext("Resource - Eclipse Project 
SDK");

			robot.selectMenuItem("File-&gt;New-&gt;Others...");

			// default is window
			robot.setCurrentContext("New");
			
			// Select item "Simple" from tree
			ObjectIdentifier objectIdentifier = new ObjectIdentifier
(TREE,
									
	TEXT_RECOGNITION,
									
	"SIMPLE");				 			
			robot.selectWidget(objectIdentifier);
			
			// Select item "File" from List
			// this is the long way of doing it!
			objectIdentifier = new ObjectIdentifier(LIST);
			objectIdentifier.setRecognitionMethods(new int[] 
{TEXT_RECOGNITION}); 
			objectIdentifier.setIdentifiers(new String[] {"FILE"});	
			 			
			robot.selectWidget(objectIdentifier);
			
			// Select "Next &gt;" button
			objectIdentifier = new ObjectIdentifier(BUTTON,
									
	TEXT_RECOGNITION,
									
	"NEXT &gt;");				 			
			robot.selectWidget(objectIdentifier);
			
			// Select item "testingProject" from tree
			objectIdentifier = new ObjectIdentifier(TREE,
									
	TEXT_RECOGNITION,
									
	"testingProject");				 			
			robot.selectWidget(objectIdentifier);
			
			// Select text area with label 
			objectIdentifier = new ObjectIdentifier(BUTTON,
									
	TEXT_RECOGNITION,
									
	"File name:");				 			
			robot.selectWidget(objectIdentifier);
			
			robot.typeString("newFileName");
			
			// Select "Finish" button
			objectIdentifier = new ObjectIdentifier(BUTTON,
									
	TEXT_RECOGNITION,
									
	"Finish");				 			
			robot.selectWidget(objectIdentifier);

			robot.selectMenuItem("File-&gt;Exit");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="20084" end="20126" />
        <code>&gt;     public void mouseMove(int x, int y);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="20127" end="20169" />
        <code>&gt;     public void mousePress(int buttons);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="20170" end="20214" />
        <code>&gt;     public void mouseRelease(int buttons);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="20216" end="20256" />
        <code>&gt;     public void keyPress(int keycode);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="20257" end="20299" />
        <code>&gt;     public void keyRelease(int keycode);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="20301" end="20344" />
        <code>&gt;     public int getRGBPixel(int x, int y);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="20345" end="20396" />
        <code>&gt;     public int [] getRGBPixels(Rectangle bounds);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="1">
        <Lines>
          <Line>j.a.Robot for SWT appears to involve only</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Not sure if this capability is available in 2.0 line items, but I thought
I should file it anyway.

The feature is to ask the SWT team to implement a similar set of APIs
that are included in java.awt.Robot, but tailored for SWT widgets. 

The quick answer to why this is needed is for automating Eclipse UI testing,
not through the usual "recording" software products out there, but through
writting Java testcases that actually represent your UI automated test. 
Picture this, when you run your automated JUnit testcases in Eclipse, you are 
running these automated UI testcases also. So your JUnit testcases are not only
for "backend" or "logic" testing! you are also testing your UI functionality.

BACKGROUND:
-----------
as of JDK 1.3, Sun added a class called java.awt.Robot which is intended for
_exactly_ that ! automating UI testing.
You can creat events _directly_ at the platform's native input queue. and
since you are
writting Java code, you can write code that is totally independant of widget
location.
Your UI layout can totally change and your robot testcase still runs like a
charm!
bingo, real automation.

THE PROBLEM :(
Even though I had a prototype working that used Sun's Robot class to automate 
Eclipse UI testing, there are gltiches.
the java.awt.robot class was designed for AWT classes. I worked around some
of the
problems with using that class with SWT, as opposed to AWT. but still,
things where
not working as designed just because of the SWT mix with Robot.

WHY AM I SAYING ALL THIS  :)
well, SWT team can easily look into creating a similar class (its a very
small set of APIs, but they
are very powerful).
And if you guys do that, then you have given developers a solution for
automating Eclipse UI testing!


Im taking the liberty of adding two class just to give you an idea of 
the sort of thing that I am talking about, and how a UI testcase might look
like.

**********************************


package org.eclipse.robot;

/*
 * (c) Copyright IBM Corp. 2000, 2001.
 * All Rights Reserved.
 */

import org.eclipse.ui.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.graphics.*;

/**
 * This interface represents the Eclipse-oriented script actions.
 * &lt;p&gt;
 * This adds Eclipse functionality to the Robot interface.
 */

public interface IEclipseRobot extends IRobot {
	
	//*******************************//
	// Eclipse Workbench interface   //
	//*******************************//
	
	/**
	 * Opens a Perspective with the given identifier. 
	 * &lt;p&gt;
	 * The IObjectIdentifier should be of type Perspective, and the 
	 * recognition method is the perspective's name or ID. 
	 * If newPage is true, it will open the perspective in a 
	 * new page even if the perspective is already open.  
	 * If newPage is false, tries to find an open perspective with 
	 * the given identifier, and switch to it. If not found, returns
	 * null.  
	 * &lt;p&gt;
	 * Returns the opened perspective, or null if command failed.
	 */
	public IPerspectiveDescriptor openPerspective(IObjectIdentifier 
identifier, 
									
	   boolean newPage);
									
	   
	/**
	 * Opens a Perspective with the given perspective id. 
	 * &lt;p&gt;
	 * The object type and recognition method here are the 
	 * the default values for a Perspective.
	 * If newPage is true, it will open the perspective in a 
	 * new page even if the perspective is already open.  
	 * If newPage is false, tries to find an open perspective with 
	 * the given identifier, and switch to it. If not found, returns
	 * null.  
	 * &lt;p&gt;
	 * Returns the opened perspective, or null if command failed.
	 */
	public IPerspectiveDescriptor openPerspective(String perspectiveId, 
boolean newPage);
	
	
	/**
	 * Opens a View with the given identifier. 
	 * &lt;p&gt;
	 * The IObjectIdentifier should be the 
	 * view's name or ID. 
	 * &lt;p&gt;
	 * Returns the opened view, or null if command failed.
	 */
	public IViewPart openView(IObjectIdentifier identifier);
	
	/**
	 * Opens a View with the given id 
	 * &lt;p&gt;
	 * The object type and recognition method here are the 
	 * the default values for a Perspective.
	 * &lt;p&gt;
	 * Returns the opened view, or null if command failed.
	 */
	public IViewPart openView(String viewId);
	
	
	/**
	 * Detaches an open View. 
	 * &lt;p&gt;
	 * Clicks on specified view, and drags it outside the current 
	 * Eclipse Window.
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int detachView(IObjectIdentifier identifier);
	
	/**
	 * Detaches an open View with the given Id. 
	 * &lt;p&gt;
	 * Clicks on specified view, and drags it outside the current 
	 * Eclipse Window.
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int detachView(String viewId);
	
	
	/**
	 * Sets the current context to the given object, and gives 
	 * it focus.
	 * &lt;p&gt;
	 * Everything is either an 
	 * org.eclipse.jface.window.Window or an 
	 * org.eclipse.jface.window.Wizard. 
	 * The IObjectIdentifier should be the caption string in 
	 * the window or the wizard.  
	 * ie: only StringIdentifierType is allowed for now.
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int setCurrentContext(IObjectIdentifier identifier);
	
	/**
	 * Sets the current context to the IWorkbenchWindow with  
	 * the given caption, and gives it focus.
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int setCurrentContext(String windowCaption);
	
	
	/**
	 * Returns the current context.
	 * &lt;p&gt; 
	 * Will return instances of Object types allowed in
	 * setCurrentContext(), or null if command failed.  
	 */
	public Object getCurrentContext();
	
	
	
	//*******************************//
	// Eclipse UI/JFace interface    //
	//*******************************//
	
	/**
	 * Selects a menu item, or a sequence of menu items. 
	 * &lt;p&gt;
	 * eg: Perspective-&gt;Open-&gt;Other... 
	 * The menuSequence should be the name of the menu
	 * items in sequence, separated by "-&gt;". 
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int selectMenuItem(String menuSequence);
		
	
	
	//*******************************//
	// Eclipse SWT interface         //
	//*******************************//

	/**
	 * Finds the list of Widgets of the given type in the  
	 * current context. 
	 * &lt;p&gt;
	 * Returns null if command failed, or non found.
	 */
	public Widget[] findWidget(int type);
	
	/**
	 * selects the given Widget. 
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int selectWidget(Widget widget);
	
	/**
	 * selects the given Widget. 
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int selectWidget(IObjectIdentifier identifier);
	
	
	
	/**
	 * Returns the Control that has focus. 
	 */
	public Control getFocusControl();
	// ps: Display.getCurrent.getFocusControl();
	
	
}



********************************
A UI Testcase using the above might look like:
**********************************

package org.eclipse.robot.examples;

/*
 * (c) Copyright IBM Corp. 2000, 2001.
 * All Rights Reserved.
 */

import org.eclipse.robot.*;

/**
 * From a clean Eclipse UI, this sample performs the following: &lt;br&gt;
 * ------------------------------------------------------------- &lt;br&gt;
 * 1. Open Help pespective. &lt;br&gt;
 * 2. Detach Help View. &lt;br&gt;
 * 3. Press F1. &lt;br&gt;
 * 4. Close Eclipse. &lt;br&gt;
 * &lt;br&gt;
 * &lt;a HREF="RobotExample1.txt"&gt;Source for example&lt;/a&gt; 
 * &lt;br&gt;
 */

public class RobotExample1 {

	public static void main(String[] args) {
		try {
			EclipseRobot robot = new EclipseRobot();

			robot.openPerspective
("org.eclipse.help.internal.ui.HelpPerspective", true);

			robot.setCurrentContext("Help - Eclipse Project SDK");

			robot.detachView
("org.eclipse.help.internal.ui.EmbeddedHelpView");

			robot.setCurrentContext("Help - Eclipse Project SDK");
			
			// for now AWT constants are used because of dependency 
on 
			// java.awt.Robot. If Eclipse provides similar class, 
then 
			// dependency is removed.
			robot.keyPress(java.awt.event.KeyEvent.VK_F1);
			robot.keyRelease(java.awt.event.KeyEvent.VK_F1);

			robot.selectMenuItem("File-&gt;Exit");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}
}


***********************
Another one:
***********************

package org.eclipse.robot.examples;

/*
 * (c) Copyright IBM Corp. 2000, 2001.
 * All Rights Reserved.
 */

import org.eclipse.robot.*;

/**
 * From a clean Eclipse UI, this sample creates a new File under a 
 * Project called testingProject.&lt;br&gt;
 * -----------------------------------------------------------------&lt;br&gt;
 * 1. Open the new Resource wizard. &lt;br&gt;
 * 2. Select Simple, and File. &lt;br&gt;
 * 3. click Next. &lt;br&gt;
 * 4. Select Folder "testingProject". &lt;br&gt;
 * 5. Type file name, and click Finish. &lt;br&gt;
 * 6. Close Eclipse. &lt;br&gt;
 * &lt;br&gt;
 * &lt;A HREF="RobotExample2.txt"&gt;Source for example&lt;/A&gt; &lt;br&gt;
 */

public class RobotExample2 implements IRobotConst {

	public static void main(String[] args) {
		try {
			EclipseRobot robot = new EclipseRobot();

			robot.setCurrentContext("Resource - Eclipse Project 
SDK");

			robot.selectMenuItem("File-&gt;New-&gt;Others...");

			// default is window
			robot.setCurrentContext("New");
			
			// Select item "Simple" from tree
			ObjectIdentifier objectIdentifier = new ObjectIdentifier
(TREE,
									
	TEXT_RECOGNITION,
									
	"SIMPLE");				 			
			robot.selectWidget(objectIdentifier);
			
			// Select item "File" from List
			// this is the long way of doing it!
			objectIdentifier = new ObjectIdentifier(LIST);
			objectIdentifier.setRecognitionMethods(new int[] 
{TEXT_RECOGNITION}); 
			objectIdentifier.setIdentifiers(new String[] {"FILE"});	
			 			
			robot.selectWidget(objectIdentifier);
			
			// Select "Next &gt;" button
			objectIdentifier = new ObjectIdentifier(BUTTON,
									
	TEXT_RECOGNITION,
									
	"NEXT &gt;");				 			
			robot.selectWidget(objectIdentifier);
			
			// Select item "testingProject" from tree
			objectIdentifier = new ObjectIdentifier(TREE,
									
	TEXT_RECOGNITION,
									
	"testingProject");				 			
			robot.selectWidget(objectIdentifier);
			
			// Select text area with label 
			objectIdentifier = new ObjectIdentifier(BUTTON,
									
	TEXT_RECOGNITION,
									
	"File name:");				 			
			robot.selectWidget(objectIdentifier);
			
			robot.typeString("newFileName");
			
			// Select "Finish" button
			objectIdentifier = new ObjectIdentifier(BUTTON,
									
	TEXT_RECOGNITION,
									
	"Finish");				 			
			robot.selectWidget(objectIdentifier);

			robot.selectMenuItem("File-&gt;Exit");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}
}
















 

 

 



Im taking the liberty of attaching the
I understand the kinds of capabilities you are looking for. There is no plan 
to implement this for R2.0, but we do want to look at providing something 
along these lines at some point.

The challenge, of course, is doing this in a way which doesn't require a lot 
of extra state to be maintained in the widgets or drastic changes in the 
underlying event model. SWT is so close to the o/s that typically platform 
specific scripting facilities will work, and hooking into these is likely the 
direction we would take at the SWT level.

Another interesting alternative would be to generalize the mechanisms already 
found in Eclipse for invoking commands, activating windows, etc. and based on 
these add "scriptable" u/i support to Eclipse. This would allow Eclipse to be 
driven by a 'bot without requiring low-level platform specific hacks in SWT.

Feel free to continue your investigation of this area, and talk to us about it 
on the platform-swt-dev mailing list. We're happy to provide insites, but 
unable to contribute to the effort, at least until R2.0 ships.

Moving from Later.
I have made a complementary request (#64) in the WebSphere Studio
Feature Request Database

https://www7b.software.ibm.com/webapp/wsdd/studioServlet3

Unfortunately I can't seem to link directly, but the text is:

&gt; Developers (esp those using methodologies like XP) and testers need to
&gt; be able to automate unit tests for GUIs. AWT frameworks exist for
&gt; this, e.g. Abbot

&gt; http://abbot.sourceforge.net/

&gt; but they rely on java.awt.Robot and the AWT event model. SWT needs to
&gt; provide similar functionality.
The only dependency Robot has on AWT is the waitForIdle function, which posts a 
Runnable to the AWT event queue and waits for it to get run (which isn't really a wait for 
idle, BTW, but rather a "wait for the current end of queue").

You probably don't want to depend on the robot's autoWaitForIdle anyway, so you just 
need a waitForIdle equivalent for SWT.

Other than that, I'm not sure what glitches you might be talking about since you don't 
indicate what specific problems you had with Robot.
Unfortunately I have to answer this from memory!! :( I was looking for my code 
and the only code I have left is what I have posted here! The problems I had 
where, like you said with Robor.waitForIdle() and also with Robot.keyPress() 
keyRelease(). I had to use awt constants (like you see in the sample below) 
instead of SWT constants to generate the right event in the native OS input 
queue. and not only that, I could have sworn that not all awt constants would 
work with SWT, ie: the ket would not be pressed. For example, to simulate 
pressing F1 I had to use: robot.keyPress(java.awt.event.KeyEvent.VK_F1); which 
actually worked, butr confusing to say the least to an SWT developer. Others 
constants would simply not work.

hope this helps...
Despite its name, java.awt.Robot appears to be not very AWT-
specific. (Note that this is not merely my judgement: it was the
conclusion of a long thread on java-gui-testing.) Extending
j.a.Robot for SWT appears to involve only

+ providing an SWT-compatible waitForIdle(). This is somewhat
  misnamed: it's really wait for the end of the queue," which it
  hacks by posting a Runnable to the AWT EventQueue and waiting for it
  to get run. This functionality is required for automation, since one
  needs to know when one or more events has completed.

+ extending its automation methods (e.g. keyPress(int),
  mousePress(int)) to take SWT codes instead of AWT ones.

Also please note the advantages that an SWT-compatible extension of
j.a.Robot would provide:

* it would be useful for UI automation and scripting, e.g. for

https://bugs.eclipse.org/bugs/show_bug.cgi?id=37680
&gt; [Plan Item] Add Eclipse automation

* it would allow one to leverage much existing GUI test automation
  tooling.

  Re "helpwanted": A group within WebSphere Studio is currently
  attempting to extend an AWT/Swing-based tool to provide whitebox,
  JUnit-integrated testing for SWT/JFace UIs. We would be delighted to
  work with you to extend java.awt.Robot for SWT.

*** Bug 38438 has been marked as a duplicate of this bug. ***
Just as FYI for this feature... Thomas L.R., you mentioned that you have SWT 
specific robot apis. And I had an email with you in regards to abstracting that 
into a higher level set of APIs that are Eclipse aware, and not just SWT aware. 
You mentioned it is on your list, and great to know. Another idea just pop-ped 
to mind.
I just spent some time getting my area into JUnit testing, and what I just 
realized is that I can actually automate most of our *UI* testcases with the 
JUnit pde plugin that it out there. Its the "JUnit Plugin test" that will be 
part of the Eclipse 3.0 release. 

I actually wrote a JUnit testcase that will launche Eclipse, open my 
perspective, launch our project creation wizard, populate the pages, and 
then "Finish" the wizard. !
thats exactly what you want in Robot, no? The only difference here is that you 
are not really generating "true" UI events on the OS event queue. But who 
cares! :-) most of the code was tested with such a testcase.
So I guess what I am saying is that maybe a good place for effort would be to 
extend the JUnit PDE plugin to include "utility" methods at a hight level that 
would open a perspective, launch a wizard, launch a view"...etc. ie: high level 
Eclipse methods that would help when you are doing plugin testcases that have 
UI in them. 

just FYI.

Mazen Faraj.


  
mfaraj@ca.ibm.com  2003-09-18 14:34 -------
&gt; I can actually automate most of our *UI* testcases with the JUnit
&gt; pde plugin that it out there. Its the "JUnit Plugin test" that will
&gt; be part of the Eclipse 3.0 release.

Yes, we use pde.junit as well as the Test Collector in WSAD, and also
Run&gt;JUnit for standalone SWT UIs.

&gt; I actually wrote a JUnit testcase that will launche Eclipse, open my
&gt; perspective, launch our project creation wizard, populate the pages,
&gt; and then "Finish" the wizard. ! thats exactly what you want in
&gt; Robot, no? 

I also want the ability to test the state of widgets, but that's a
separate topic.

&gt; The only difference here is that you are not really generating
&gt; "true" UI events on the OS event queue. But who cares! :-)

Umm ... anyone who wants accurate testing cares :-)

The problem with your approach is, fake testing is not testing. Think
about what most folks try to do now: they try to have good MVC, such
that

* most event-related handling takes place in a model 

* the UI is relatively "thin"

They then say, "since all my UI does is call these methods, all I need
to do is test these methods." Unfortunately, one finds oneself close
to DCUT, or with an urgent APAR, and one diddles the UI to quickly fix
the problem. And guess what: the testcases still pass !-) Yet
regression still occurs ... because no real testing is getting done.

Your approach also doesn't protect you from breakage by others.
Suppose you extend another wizard to create your own, and the other
group changes their event handling. A fake test won't catch this,
because a fake test doesn't test event handling: instead it generates
outcomes based on the events you _believe_ will occur.

One must generate events in order to thoroughly test a UI. Everything
else, no matter how well intentioned, is fake, because it only
tests your beliefs regarding how your code works. Fake testing is better
than no testing, but it's no substitute for real testing.

&gt; So I guess what I am saying is that maybe a good place for effort
&gt; would be to extend the JUnit PDE plugin to include "utility" methods
&gt; at a hight level that would open a perspective, launch a wizard,
&gt; launch a view"...etc. ie: high level Eclipse methods that would help
&gt; when you are doing plugin testcases that have UI in them.

Here we are in complete agreement. What you are describing are
"fixtures":

http://junit.sourceforge.net/doc/cookbook/cookbook.htm
&gt; Tests need to run against the background of a known set of objects.
&gt; This set of objects is called a test fixture. When you are writing
&gt; tests you will often find that you spend more time writing the code
&gt; to set up the fixture than you do in actually testing values.

We absolutely need code that helps one setup a known set of objects:
not only workbench artifacts as you describe (e.g. a perspective, a
set of view or editor pages), but also resource artifacts (e.g. a web
project, a faces-config.xml, database tables). Arthur Ryman posted
ws-dev recently about the need for groups to develop and maintain such
fixture code for use in testing; I concur heartily.

steve_northover@ca.ibm.com  2003-09-17 11:15 -------
&gt; We have done no work on this item because it was deferred from the
&gt; Eclipse 3.0 plan. Eclipse had no requirement for this and Eclipse
&gt; drives SWT.

&gt; Does it work on every platform? 

We have not tested this, but it should run on any platform that
supports Sun's JDK.

&gt; Does it use AWT robot?

It uses java.awt.Robot, but this could be worked around. What I mean:

The fundamental problem of automation is, how to get events into the
native queue. abbotforswt tries to be a thin layer over some of the
lower levels of Abbot, which uses awt.Robot. awt.Robot uses a
RobotPeer

&gt; /**
&gt;  * RobotPeer defines an interface whereby toolkits support automated
&gt;  * testing by allowing native input events to be generated from Java
&lt;snip&gt;
&gt;  */
&gt; public interface RobotPeer
&gt; {
&gt;     public void mouseMove(int x, int y);
&gt;     public void mousePress(int buttons);
&gt;     public void mouseRelease(int buttons);

&gt;     public void keyPress(int keycode);
&gt;     public void keyRelease(int keycode);

&gt;     public int getRGBPixel(int x, int y);
&gt;     public int [] getRGBPixels(Rectangle bounds);
&gt; }

(a pretty-basic automation interface, though I'd factor out the
screen-capture stuff), and uses its SunToolkit as a factory for the
implementation.

How to do this with other JDKs (e.g. Apple, Blackdown, Hursley, J9)?
If they also provide "toolkits [that] support automated testing," and
therefore an interface like the above and a factory for its
implementation, a foo.Robot for each other toolkit would be
straightforward (and might already exist). If they do not, that would
seem to be a defect, and its rectification would seem a legitimate
request.

-------- Original Message --------
Subject: Re: [IBM JDK] automation support?
Date: Fri, 19 Sep 2003 09:39:57 +0100
From: Neil Masson &lt;nmasson@hursley.ibm.com&gt;
Reply-To: nmasson@nospam.hursley.ibm.com
Organization: IBM
Newsgroups: forums.software.java
References: &lt;bke3fb$qcf$1@w3pilot2b.pok.ibm.com&gt;

Tom, 

java.awt.Robot and java.awt.AwtPermission are part of the J2SE
spec and so all compliant JDKs will have these classes and those
on which they rely.  IBM's JDKs are no exception.  Indeed they
have the same implementation using java.awt.peer.RobotPeer.

Thomas, you are absolutely right. Being able to generate events directly on the 
native queue hence replicating a true user action is important to have a "real" 
testcase. BUT, you can do both, a bottom up approach AND a top down approach. 
You can be finishing up the ABBOT apis, at the SWT level. Some other team can 
be coding the re-usable JUnit Eclipse fixtures, without the event model apis. 
Both teams meet half way. The fixtures can be then modified to instead of 
having something like wizard.performFinish() (which is what I do today), they 
would have abbotEclipse.closeWizard(myWizard), which will generate a mouse 
click on the Finish button of the passed wizard. 
Im not aware of Arthur's request (Im not in that group), but it sounds like an 
even higher level layer on top of the Eclipse fixture layer. A layer that 
understands a Web Project, as opposed to a project.   
Just a thought... :) 

Mazen Faraj.


  
-------- Original Message --------
Subject: Re: [IBM JDK] security model?
Date: Fri, 19 Sep 2003 10:41:17 -0400
From: Richard L. Kulp &lt;richkulp@NO--SPAM.us.ibm.com&gt;
Organization: IBM
Newsgroups: forums.software.java

I can't swear to it, but IBM typically doesn't reinvent such things.
Under the covers they probably use the sun security model. In fact I
just looked at the IBM jre that we ship with WSAD and it doesn't have
its own security manager, it uses Sun's.

-------- Original Message --------
Subject: Re: [IBM JDK] security model?
Date: Fri, 19 Sep 2003 10:52:11 -0400
From: Richard L. Kulp &lt;richkulp@NO--SPAM.us.ibm.com&gt;
Organization: IBM
Newsgroups: forums.software.java

In addition, AWTPermission isn't a Sun class, it is a java.awt class,
so all of the SecurityManagers should know about it. Though they may
decide to deny permission by default. That is their choice.
Mazen: it appears we again have "a meeting of the minds" :-)

Mazen Faraj  2003-09-19 11:58 -------
&gt; You can be finishing up the ABBOT apis, at the SWT level. 

Actually, AFAICS the only work that remains "at the SWT level" is to
have a consistent location-finding API for all Widget's, rather than
only those extending Control. See

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436

Fortunately the non-Control Widget's are _relatively_ few and minor.
What we're working on now are workbench extensions, such as you 
mention: for wizards, editors, views, perspectives, etc.

&gt; Some other team can be coding the re-usable JUnit Eclipse fixtures,
&gt; without the event model apis. Both teams meet half way.

Correct. In fact, the fixtures need not have any JUnit-specific
content: they need only be callable from setUp(). I will cc: you
regarding current efforts in this direction.

&gt; The fixtures can be then modified to instead of having something
&gt; like wizard.performFinish() (which is what I do today), they would
&gt; have abbotEclipse.closeWizard(myWizard), which will generate a mouse
&gt; click on the Finish button of the passed wizard.

Actually, we do better than that: we actually click on the Finish
button! I have a working test case that does exactly that :-) 

But 2 quibbles:

* Again, IMHO "real" testing doesn't _tell_ the Wizard what to do; it
  just mimics what the user does. (Only faster and more repeatably :-)

* What you're describing would take place in a testcase, not a fixture.

Nick Edgar 09/17/2003 11:07 PM
&gt; it looks like the current implementation of java.awt.Robot would
&gt; bring in more stuff than we would like. It refers to AWT-specific
&gt; classes (GraphicsDevice, AWTPermission) and VM-vendor-specific
&gt; classes (RobotPeer, SunToolkit). These classes may not exist on
&gt; non-Sun VMs (e.g. IBM Hursley or J9).

Fortunately, no. IBM JDK is J2SE-compliant, and uses the same
implementation as the Sun VM. I have also been told that "J9 [as] the
default runtime for WSAD 5.1 ... uses the IBM J2SE class library."
(The WSDD J9 is apparently different). One holdout is Jikes: it is not
yet J2SE compliant. They are seeking compliance, but use the GNU
Classpath libraries, which are not yet AWT-complete.

Kevin Dale has removed all Abbot dependencies from abbotforswt's "base
Robot" (i.e. our SWTized equivalent of java.awt.Robot). Thus it should
be suitable for donation to Eclipse, if desired. The code is in our
CVS; feel free to inspect. Unfortunately

* non-IBMers: the code is presently not directly available to you.
  However

· we are seeking approval to open-source abbotforswt

· we may be able to provide pre-OSS-approval licensing to you: please
  post me if you are interested.

* IBMers: lawyers got upset the last time I mentioned how to get to
  the internal CVS on a public forum, even though

· the repository is inside the firewall

· the repository provider is a project that has been discussed
  publicly

  So if you don't know how to get to our CVS but you would like to,
  please post me.

TIA, Tom Roche &lt;tlroche@us.ibm.com&gt; abbotforswt admin

Please note that

* Abbot

http://sourceforge.net/projects/abbot

  is available under CPL.

* abbotforswt has received all preliminary approvals to OSS (to
  Abbot), and goes for final approval 27 Jan 04.

* a binary plugin for Abbot (AWT/Swing) 0.11.0 is available @

http://prdownloads.sourceforge.net/abbot/abbot-0.11.0-eclipse.zip?download

https://w3.opensource.ibm.com/frs/viewRelease.php?release_id=545&amp;group_id=1023

* a binary plugin for abbotforswt (containing our SWT-ized Robot) is @ 

https://w3.opensource.ibm.com/frs/viewRelease.php?release_id=545&amp;group_id=1023

  It prereqs the Abbot plugin.

* EA users report success with abbotforswt on both Windows and Linux.
  (Abbot is widely used on many platforms.)

steve_northover@ca.ibm.com  2004-02-19 12:43
&gt;&gt; Is [21083] the same as 15025?

David_Whiteman@us.ibm.com  2004-02-19 12:50
&gt; Sort of... 

Not. abbotforswt 

https://w3.opensource.ibm.com/projects/abbotforswt/

already has a working SWTized Robot; its remaining defect involves
difficulty finding non-Control Widget's

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436

e.g. for driving cascading menus. (IIRC non-Control Widget's can
usually be found by walking the hierarchy, but that always harms
performance, esp when driving busy environments like a runtime
workbench.)

&gt; In other words, doing the work for bug 15025 would involve adding
&gt; support for posting key and mouse events to the OS (as bug 21083
&gt; describes)

abbotforswt's Robot already does post key and mouse events, using a
java.awt.Robot. We have working, JUnit-driven demos and test cases.

HTH, Tom Roche, Rational Developer Model2 Tooling, abbotforswt admin

Available in v&gt;20040323: Display.post(Event e)

Special thanks to Sebastian Peleato from University of Waterloo for 
contributing this new API.

Please see the following snippet to see how to generate system events under 
SWT.
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/snippits/snippet142.html
marking as fixed v&gt;20040323
*** Bug 21083 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Not sure if this capability is available in 2.0 line items, but I thought
I should file it anyway.

The feature is to ask the SWT team to implement a similar set of APIs
that are included in java.awt.Robot, but tailored for SWT widgets. 

The quick answer to why this is needed is for automating Eclipse UI testing,
not through the usual "recording" software products out there, but through
writting Java testcases that actually represent your UI automated test. 
Picture this, when you run your automated JUnit testcases in Eclipse, you are 
running these automated UI testcases also. So your JUnit testcases are not only
for "backend" or "logic" testing! you are also testing your UI functionality.

BACKGROUND:
-----------
as of JDK 1.3, Sun added a class called java.awt.Robot which is intended for
_exactly_ that ! automating UI testing.
You can creat events _directly_ at the platform's native input queue. and
since you are
writting Java code, you can write code that is totally independant of widget
location.
Your UI layout can totally change and your robot testcase still runs like a
charm!
bingo, real automation.

THE PROBLEM :(
Even though I had a prototype working that used Sun's Robot class to automate 
Eclipse UI testing, there are gltiches.
the java.awt.robot class was designed for AWT classes. I worked around some
of the
problems with using that class with SWT, as opposed to AWT. but still,
things where
not working as designed just because of the SWT mix with Robot.

WHY AM I SAYING ALL THIS  :)
well, SWT team can easily look into creating a similar class (its a very
small set of APIs, but they
are very powerful).
And if you guys do that, then you have given developers a solution for
automating Eclipse UI testing!


Im taking the liberty of adding two class just to give you an idea of 
the sort of thing that I am talking about, and how a UI testcase might look
like.

**********************************


package org.eclipse.robot;

/*
 * (c) Copyright IBM Corp. 2000, 2001.
 * All Rights Reserved.
 */

import org.eclipse.ui.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.graphics.*;

/**
 * This interface represents the Eclipse-oriented script actions.
 * &lt;p&gt;
 * This adds Eclipse functionality to the Robot interface.
 */

public interface IEclipseRobot extends IRobot {
	
	//*******************************//
	// Eclipse Workbench interface   //
	//*******************************//
	
	/**
	 * Opens a Perspective with the given identifier. 
	 * &lt;p&gt;
	 * The IObjectIdentifier should be of type Perspective, and the 
	 * recognition method is the perspective's name or ID. 
	 * If newPage is true, it will open the perspective in a 
	 * new page even if the perspective is already open.  
	 * If newPage is false, tries to find an open perspective with 
	 * the given identifier, and switch to it. If not found, returns
	 * null.  
	 * &lt;p&gt;
	 * Returns the opened perspective, or null if command failed.
	 */
	public IPerspectiveDescriptor openPerspective(IObjectIdentifier 
identifier, 
									
	   boolean newPage);
									
	   
	/**
	 * Opens a Perspective with the given perspective id. 
	 * &lt;p&gt;
	 * The object type and recognition method here are the 
	 * the default values for a Perspective.
	 * If newPage is true, it will open the perspective in a 
	 * new page even if the perspective is already open.  
	 * If newPage is false, tries to find an open perspective with 
	 * the given identifier, and switch to it. If not found, returns
	 * null.  
	 * &lt;p&gt;
	 * Returns the opened perspective, or null if command failed.
	 */
	public IPerspectiveDescriptor openPerspective(String perspectiveId, 
boolean newPage);
	
	
	/**
	 * Opens a View with the given identifier. 
	 * &lt;p&gt;
	 * The IObjectIdentifier should be the 
	 * view's name or ID. 
	 * &lt;p&gt;
	 * Returns the opened view, or null if command failed.
	 */
	public IViewPart openView(IObjectIdentifier identifier);
	
	/**
	 * Opens a View with the given id 
	 * &lt;p&gt;
	 * The object type and recognition method here are the 
	 * the default values for a Perspective.
	 * &lt;p&gt;
	 * Returns the opened view, or null if command failed.
	 */
	public IViewPart openView(String viewId);
	
	
	/**
	 * Detaches an open View. 
	 * &lt;p&gt;
	 * Clicks on specified view, and drags it outside the current 
	 * Eclipse Window.
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int detachView(IObjectIdentifier identifier);
	
	/**
	 * Detaches an open View with the given Id. 
	 * &lt;p&gt;
	 * Clicks on specified view, and drags it outside the current 
	 * Eclipse Window.
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int detachView(String viewId);
	
	
	/**
	 * Sets the current context to the given object, and gives 
	 * it focus.
	 * &lt;p&gt;
	 * Everything is either an 
	 * org.eclipse.jface.window.Window or an 
	 * org.eclipse.jface.window.Wizard. 
	 * The IObjectIdentifier should be the caption string in 
	 * the window or the wizard.  
	 * ie: only StringIdentifierType is allowed for now.
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int setCurrentContext(IObjectIdentifier identifier);
	
	/**
	 * Sets the current context to the IWorkbenchWindow with  
	 * the given caption, and gives it focus.
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int setCurrentContext(String windowCaption);
	
	
	/**
	 * Returns the current context.
	 * &lt;p&gt; 
	 * Will return instances of Object types allowed in
	 * setCurrentContext(), or null if command failed.  
	 */
	public Object getCurrentContext();
	
	
	
	//*******************************//
	// Eclipse UI/JFace interface    //
	//*******************************//
	
	/**
	 * Selects a menu item, or a sequence of menu items. 
	 * &lt;p&gt;
	 * eg: Perspective-&gt;Open-&gt;Other... 
	 * The menuSequence should be the name of the menu
	 * items in sequence, separated by "-&gt;". 
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int selectMenuItem(String menuSequence);
		
	
	
	//*******************************//
	// Eclipse SWT interface         //
	//*******************************//

	/**
	 * Finds the list of Widgets of the given type in the  
	 * current context. 
	 * &lt;p&gt;
	 * Returns null if command failed, or non found.
	 */
	public Widget[] findWidget(int type);
	
	/**
	 * selects the given Widget. 
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int selectWidget(Widget widget);
	
	/**
	 * selects the given Widget. 
	 * &lt;p&gt;
	 * Returns IRobotConst.SUCCESS or IRobotConst.FAILURE
	 */
	public int selectWidget(IObjectIdentifier identifier);
	
	
	
	/**
	 * Returns the Control that has focus. 
	 */
	public Control getFocusControl();
	// ps: Display.getCurrent.getFocusControl();
	
	
}



********************************
A UI Testcase using the above might look like:
**********************************

package org.eclipse.robot.examples;

/*
 * (c) Copyright IBM Corp. 2000, 2001.
 * All Rights Reserved.
 */

import org.eclipse.robot.*;

/**
 * From a clean Eclipse UI, this sample performs the following: &lt;br&gt;
 * ------------------------------------------------------------- &lt;br&gt;
 * 1. Open Help pespective. &lt;br&gt;
 * 2. Detach Help View. &lt;br&gt;
 * 3. Press F1. &lt;br&gt;
 * 4. Close Eclipse. &lt;br&gt;
 * &lt;br&gt;
 * &lt;a HREF="RobotExample1.txt"&gt;Source for example&lt;/a&gt; 
 * &lt;br&gt;
 */

public class RobotExample1 {

	public static void main(String[] args) {
		try {
			EclipseRobot robot = new EclipseRobot();

			robot.openPerspective
("org.eclipse.help.internal.ui.HelpPerspective", true);

			robot.setCurrentContext("Help - Eclipse Project SDK");

			robot.detachView
("org.eclipse.help.internal.ui.EmbeddedHelpView");

			robot.setCurrentContext("Help - Eclipse Project SDK");
			
			// for now AWT constants are used because of dependency 
on 
			// java.awt.Robot. If Eclipse provides similar class, 
then 
			// dependency is removed.
			robot.keyPress(java.awt.event.KeyEvent.VK_F1);
			robot.keyRelease(java.awt.event.KeyEvent.VK_F1);

			robot.selectMenuItem("File-&gt;Exit");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}
}


***********************
Another one:
***********************

package org.eclipse.robot.examples;

/*
 * (c) Copyright IBM Corp. 2000, 2001.
 * All Rights Reserved.
 */

import org.eclipse.robot.*;

/**
 * From a clean Eclipse UI, this sample creates a new File under a 
 * Project called testingProject.&lt;br&gt;
 * -----------------------------------------------------------------&lt;br&gt;
 * 1. Open the new Resource wizard. &lt;br&gt;
 * 2. Select Simple, and File. &lt;br&gt;
 * 3. click Next. &lt;br&gt;
 * 4. Select Folder "testingProject". &lt;br&gt;
 * 5. Type file name, and click Finish. &lt;br&gt;
 * 6. Close Eclipse. &lt;br&gt;
 * &lt;br&gt;
 * &lt;A HREF="RobotExample2.txt"&gt;Source for example&lt;/A&gt; &lt;br&gt;
 */

public class RobotExample2 implements IRobotConst {

	public static void main(String[] args) {
		try {
			EclipseRobot robot = new EclipseRobot();

			robot.setCurrentContext("Resource - Eclipse Project 
SDK");

			robot.selectMenuItem("File-&gt;New-&gt;Others...");

			// default is window
			robot.setCurrentContext("New");
			
			// Select item "Simple" from tree
			ObjectIdentifier objectIdentifier = new ObjectIdentifier
(TREE,
									
	TEXT_RECOGNITION,
									
	"SIMPLE");				 			
			robot.selectWidget(objectIdentifier);
			
			// Select item "File" from List
			// this is the long way of doing it!
			objectIdentifier = new ObjectIdentifier(LIST);
			objectIdentifier.setRecognitionMethods(new int[] 
{TEXT_RECOGNITION}); 
			objectIdentifier.setIdentifiers(new String[] {"FILE"});	
			 			
			robot.selectWidget(objectIdentifier);
			
			// Select "Next &gt;" button
			objectIdentifier = new ObjectIdentifier(BUTTON,
									
	TEXT_RECOGNITION,
									
	"NEXT &gt;");				 			
			robot.selectWidget(objectIdentifier);
			
			// Select item "testingProject" from tree
			objectIdentifier = new ObjectIdentifier(TREE,
									
	TEXT_RECOGNITION,
									
	"testingProject");				 			
			robot.selectWidget(objectIdentifier);
			
			// Select text area with label 
			objectIdentifier = new ObjectIdentifier(BUTTON,
									
	TEXT_RECOGNITION,
									
	"File name:");				 			
			robot.selectWidget(objectIdentifier);
			
			robot.typeString("newFileName");
			
			// Select "Finish" button
			objectIdentifier = new ObjectIdentifier(BUTTON,
									
	TEXT_RECOGNITION,
									
	"Finish");				 			
			robot.selectWidget(objectIdentifier);

			robot.selectMenuItem("File-&gt;Exit");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}
}
















 

 

 



Im taking the liberty of attaching the
I understand the kinds of capabilities you are looking for. There is no plan 
to implement this for R2.0, but we do want to look at providing something 
along these lines at some point.

The challenge, of course, is doing this in a way which doesn't require a lot 
of extra state to be maintained in the widgets or drastic changes in the 
underlying event model. SWT is so close to the o/s that typically platform 
specific scripting facilities will work, and hooking into these is likely the 
direction we would take at the SWT level.

Another interesting alternative would be to generalize the mechanisms already 
found in Eclipse for invoking commands, activating windows, etc. and based on 
these add "scriptable" u/i support to Eclipse. This would allow Eclipse to be 
driven by a 'bot without requiring low-level platform specific hacks in SWT.

Feel free to continue your investigation of this area, and talk to us about it 
on the platform-swt-dev mailing list. We're happy to provide insites, but 
unable to contribute to the effort, at least until R2.0 ships.

Moving from Later.
I have made a complementary request (#64) in the WebSphere Studio
Feature Request Database

https://www7b.software.ibm.com/webapp/wsdd/studioServlet3

Unfortunately I can't seem to link directly, but the text is:

&gt; Developers (esp those using methodologies like XP) and testers need to
&gt; be able to automate unit tests for GUIs. AWT frameworks exist for
&gt; this, e.g. Abbot

&gt; http://abbot.sourceforge.net/

&gt; but they rely on java.awt.Robot and the AWT event model. SWT needs to
&gt; provide similar functionality.
The only dependency Robot has on AWT is the waitForIdle function, which posts a 
Runnable to the AWT event queue and waits for it to get run (which isn't really a wait for 
idle, BTW, but rather a "wait for the current end of queue").

You probably don't want to depend on the robot's autoWaitForIdle anyway, so you just 
need a waitForIdle equivalent for SWT.

Other than that, I'm not sure what glitches you might be talking about since you don't 
indicate what specific problems you had with Robot.
Unfortunately I have to answer this from memory!! :( I was looking for my code 
and the only code I have left is what I have posted here! The problems I had 
where, like you said with Robor.waitForIdle() and also with Robot.keyPress() 
keyRelease(). I had to use awt constants (like you see in the sample below) 
instead of SWT constants to generate the right event in the native OS input 
queue. and not only that, I could have sworn that not all awt constants would 
work with SWT, ie: the ket would not be pressed. For example, to simulate 
pressing F1 I had to use: robot.keyPress(java.awt.event.KeyEvent.VK_F1); which 
actually worked, butr confusing to say the least to an SWT developer. Others 
constants would simply not work.

hope this helps...
Despite its name, java.awt.Robot appears to be not very AWT-
specific. (Note that this is not merely my judgement: it was the
conclusion of a long thread on java-gui-testing.) Extending
j.a.Robot for SWT appears to involve only

+ providing an SWT-compatible waitForIdle(). This is somewhat
  misnamed: it's really wait for the end of the queue," which it
  hacks by posting a Runnable to the AWT EventQueue and waiting for it
  to get run. This functionality is required for automation, since one
  needs to know when one or more events has completed.

+ extending its automation methods (e.g. keyPress(int),
  mousePress(int)) to take SWT codes instead of AWT ones.

Also please note the advantages that an SWT-compatible extension of
j.a.Robot would provide:

* it would be useful for UI automation and scripting, e.g. for

https://bugs.eclipse.org/bugs/show_bug.cgi?id=37680
&gt; [Plan Item] Add Eclipse automation

* it would allow one to leverage much existing GUI test automation
  tooling.

  Re "helpwanted": A group within WebSphere Studio is currently
  attempting to extend an AWT/Swing-based tool to provide whitebox,
  JUnit-integrated testing for SWT/JFace UIs. We would be delighted to
  work with you to extend java.awt.Robot for SWT.

*** Bug 38438 has been marked as a duplicate of this bug. ***
Just as FYI for this feature... Thomas L.R., you mentioned that you have SWT 
specific robot apis. And I had an email with you in regards to abstracting that 
into a higher level set of APIs that are Eclipse aware, and not just SWT aware. 
You mentioned it is on your list, and great to know. Another idea just pop-ped 
to mind.
I just spent some time getting my area into JUnit testing, and what I just 
realized is that I can actually automate most of our *UI* testcases with the 
JUnit pde plugin that it out there. Its the "JUnit Plugin test" that will be 
part of the Eclipse 3.0 release. 

I actually wrote a JUnit testcase that will launche Eclipse, open my 
perspective, launch our project creation wizard, populate the pages, and 
then "Finish" the wizard. !
thats exactly what you want in Robot, no? The only difference here is that you 
are not really generating "true" UI events on the OS event queue. But who 
cares! :-) most of the code was tested with such a testcase.
So I guess what I am saying is that maybe a good place for effort would be to 
extend the JUnit PDE plugin to include "utility" methods at a hight level that 
would open a perspective, launch a wizard, launch a view"...etc. ie: high level 
Eclipse methods that would help when you are doing plugin testcases that have 
UI in them. 

just FYI.

Mazen Faraj.


  
mfaraj@ca.ibm.com  2003-09-18 14:34 -------
&gt; I can actually automate most of our *UI* testcases with the JUnit
&gt; pde plugin that it out there. Its the "JUnit Plugin test" that will
&gt; be part of the Eclipse 3.0 release.

Yes, we use pde.junit as well as the Test Collector in WSAD, and also
Run&gt;JUnit for standalone SWT UIs.

&gt; I actually wrote a JUnit testcase that will launche Eclipse, open my
&gt; perspective, launch our project creation wizard, populate the pages,
&gt; and then "Finish" the wizard. ! thats exactly what you want in
&gt; Robot, no? 

I also want the ability to test the state of widgets, but that's a
separate topic.

&gt; The only difference here is that you are not really generating
&gt; "true" UI events on the OS event queue. But who cares! :-)

Umm ... anyone who wants accurate testing cares :-)

The problem with your approach is, fake testing is not testing. Think
about what most folks try to do now: they try to have good MVC, such
that

* most event-related handling takes place in a model 

* the UI is relatively "thin"

They then say, "since all my UI does is call these methods, all I need
to do is test these methods." Unfortunately, one finds oneself close
to DCUT, or with an urgent APAR, and one diddles the UI to quickly fix
the problem. And guess what: the testcases still pass !-) Yet
regression still occurs ... because no real testing is getting done.

Your approach also doesn't protect you from breakage by others.
Suppose you extend another wizard to create your own, and the other
group changes their event handling. A fake test won't catch this,
because a fake test doesn't test event handling: instead it generates
outcomes based on the events you _believe_ will occur.

One must generate events in order to thoroughly test a UI. Everything
else, no matter how well intentioned, is fake, because it only
tests your beliefs regarding how your code works. Fake testing is better
than no testing, but it's no substitute for real testing.

&gt; So I guess what I am saying is that maybe a good place for effort
&gt; would be to extend the JUnit PDE plugin to include "utility" methods
&gt; at a hight level that would open a perspective, launch a wizard,
&gt; launch a view"...etc. ie: high level Eclipse methods that would help
&gt; when you are doing plugin testcases that have UI in them.

Here we are in complete agreement. What you are describing are
"fixtures":

http://junit.sourceforge.net/doc/cookbook/cookbook.htm
&gt; Tests need to run against the background of a known set of objects.
&gt; This set of objects is called a test fixture. When you are writing
&gt; tests you will often find that you spend more time writing the code
&gt; to set up the fixture than you do in actually testing values.

We absolutely need code that helps one setup a known set of objects:
not only workbench artifacts as you describe (e.g. a perspective, a
set of view or editor pages), but also resource artifacts (e.g. a web
project, a faces-config.xml, database tables). Arthur Ryman posted
ws-dev recently about the need for groups to develop and maintain such
fixture code for use in testing; I concur heartily.

steve_northover@ca.ibm.com  2003-09-17 11:15 -------
&gt; We have done no work on this item because it was deferred from the
&gt; Eclipse 3.0 plan. Eclipse had no requirement for this and Eclipse
&gt; drives SWT.

&gt; Does it work on every platform? 

We have not tested this, but it should run on any platform that
supports Sun's JDK.

&gt; Does it use AWT robot?

It uses java.awt.Robot, but this could be worked around. What I mean:

The fundamental problem of automation is, how to get events into the
native queue. abbotforswt tries to be a thin layer over some of the
lower levels of Abbot, which uses awt.Robot. awt.Robot uses a
RobotPeer

&gt; /**
&gt;  * RobotPeer defines an interface whereby toolkits support automated
&gt;  * testing by allowing native input events to be generated from Java
&lt;snip&gt;
&gt;  */
&gt; public interface RobotPeer
&gt; {
&gt;     public void mouseMove(int x, int y);
&gt;     public void mousePress(int buttons);
&gt;     public void mouseRelease(int buttons);

&gt;     public void keyPress(int keycode);
&gt;     public void keyRelease(int keycode);

&gt;     public int getRGBPixel(int x, int y);
&gt;     public int [] getRGBPixels(Rectangle bounds);
&gt; }

(a pretty-basic automation interface, though I'd factor out the
screen-capture stuff), and uses its SunToolkit as a factory for the
implementation.

How to do this with other JDKs (e.g. Apple, Blackdown, Hursley, J9)?
If they also provide "toolkits [that] support automated testing," and
therefore an interface like the above and a factory for its
implementation, a foo.Robot for each other toolkit would be
straightforward (and might already exist). If they do not, that would
seem to be a defect, and its rectification would seem a legitimate
request.

-------- Original Message --------
Subject: Re: [IBM JDK] automation support?
Date: Fri, 19 Sep 2003 09:39:57 +0100
From: Neil Masson &lt;nmasson@hursley.ibm.com&gt;
Reply-To: nmasson@nospam.hursley.ibm.com
Organization: IBM
Newsgroups: forums.software.java
References: &lt;bke3fb$qcf$1@w3pilot2b.pok.ibm.com&gt;

Tom, 

java.awt.Robot and java.awt.AwtPermission are part of the J2SE
spec and so all compliant JDKs will have these classes and those
on which they rely.  IBM's JDKs are no exception.  Indeed they
have the same implementation using java.awt.peer.RobotPeer.

Thomas, you are absolutely right. Being able to generate events directly on the 
native queue hence replicating a true user action is important to have a "real" 
testcase. BUT, you can do both, a bottom up approach AND a top down approach. 
You can be finishing up the ABBOT apis, at the SWT level. Some other team can 
be coding the re-usable JUnit Eclipse fixtures, without the event model apis. 
Both teams meet half way. The fixtures can be then modified to instead of 
having something like wizard.performFinish() (which is what I do today), they 
would have abbotEclipse.closeWizard(myWizard), which will generate a mouse 
click on the Finish button of the passed wizard. 
Im not aware of Arthur's request (Im not in that group), but it sounds like an 
even higher level layer on top of the Eclipse fixture layer. A layer that 
understands a Web Project, as opposed to a project.   
Just a thought... :) 

Mazen Faraj.


  
-------- Original Message --------
Subject: Re: [IBM JDK] security model?
Date: Fri, 19 Sep 2003 10:41:17 -0400
From: Richard L. Kulp &lt;richkulp@NO--SPAM.us.ibm.com&gt;
Organization: IBM
Newsgroups: forums.software.java

I can't swear to it, but IBM typically doesn't reinvent such things.
Under the covers they probably use the sun security model. In fact I
just looked at the IBM jre that we ship with WSAD and it doesn't have
its own security manager, it uses Sun's.

-------- Original Message --------
Subject: Re: [IBM JDK] security model?
Date: Fri, 19 Sep 2003 10:52:11 -0400
From: Richard L. Kulp &lt;richkulp@NO--SPAM.us.ibm.com&gt;
Organization: IBM
Newsgroups: forums.software.java

In addition, AWTPermission isn't a Sun class, it is a java.awt class,
so all of the SecurityManagers should know about it. Though they may
decide to deny permission by default. That is their choice.
Mazen: it appears we again have "a meeting of the minds" :-)

Mazen Faraj  2003-09-19 11:58 -------
&gt; You can be finishing up the ABBOT apis, at the SWT level. 

Actually, AFAICS the only work that remains "at the SWT level" is to
have a consistent location-finding API for all Widget's, rather than
only those extending Control. See

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436

Fortunately the non-Control Widget's are _relatively_ few and minor.
What we're working on now are workbench extensions, such as you 
mention: for wizards, editors, views, perspectives, etc.

&gt; Some other team can be coding the re-usable JUnit Eclipse fixtures,
&gt; without the event model apis. Both teams meet half way.

Correct. In fact, the fixtures need not have any JUnit-specific
content: they need only be callable from setUp(). I will cc: you
regarding current efforts in this direction.

&gt; The fixtures can be then modified to instead of having something
&gt; like wizard.performFinish() (which is what I do today), they would
&gt; have abbotEclipse.closeWizard(myWizard), which will generate a mouse
&gt; click on the Finish button of the passed wizard.

Actually, we do better than that: we actually click on the Finish
button! I have a working test case that does exactly that :-) 

But 2 quibbles:

* Again, IMHO "real" testing doesn't _tell_ the Wizard what to do; it
  just mimics what the user does. (Only faster and more repeatably :-)

* What you're describing would take place in a testcase, not a fixture.

Nick Edgar 09/17/2003 11:07 PM
&gt; it looks like the current implementation of java.awt.Robot would
&gt; bring in more stuff than we would like. It refers to AWT-specific
&gt; classes (GraphicsDevice, AWTPermission) and VM-vendor-specific
&gt; classes (RobotPeer, SunToolkit). These classes may not exist on
&gt; non-Sun VMs (e.g. IBM Hursley or J9).

Fortunately, no. IBM JDK is J2SE-compliant, and uses the same
implementation as the Sun VM. I have also been told that "J9 [as] the
default runtime for WSAD 5.1 ... uses the IBM J2SE class library."
(The WSDD J9 is apparently different). One holdout is Jikes: it is not
yet J2SE compliant. They are seeking compliance, but use the GNU
Classpath libraries, which are not yet AWT-complete.

Kevin Dale has removed all Abbot dependencies from abbotforswt's "base
Robot" (i.e. our SWTized equivalent of java.awt.Robot). Thus it should
be suitable for donation to Eclipse, if desired. The code is in our
CVS; feel free to inspect. Unfortunately

* non-IBMers: the code is presently not directly available to you.
  However

· we are seeking approval to open-source abbotforswt

· we may be able to provide pre-OSS-approval licensing to you: please
  post me if you are interested.

* IBMers: lawyers got upset the last time I mentioned how to get to
  the internal CVS on a public forum, even though

· the repository is inside the firewall

· the repository provider is a project that has been discussed
  publicly

  So if you don't know how to get to our CVS but you would like to,
  please post me.

TIA, Tom Roche &lt;tlroche@us.ibm.com&gt; abbotforswt admin

Please note that

* Abbot

http://sourceforge.net/projects/abbot

  is available under CPL.

* abbotforswt has received all preliminary approvals to OSS (to
  Abbot), and goes for final approval 27 Jan 04.

* a binary plugin for Abbot (AWT/Swing) 0.11.0 is available @

http://prdownloads.sourceforge.net/abbot/abbot-0.11.0-eclipse.zip?download

https://w3.opensource.ibm.com/frs/viewRelease.php?release_id=545&amp;group_id=1023

* a binary plugin for abbotforswt (containing our SWT-ized Robot) is @ 

https://w3.opensource.ibm.com/frs/viewRelease.php?release_id=545&amp;group_id=1023

  It prereqs the Abbot plugin.

* EA users report success with abbotforswt on both Windows and Linux.
  (Abbot is widely used on many platforms.)

steve_northover@ca.ibm.com  2004-02-19 12:43
&gt;&gt; Is [21083] the same as 15025?

David_Whiteman@us.ibm.com  2004-02-19 12:50
&gt; Sort of... 

Not. abbotforswt 

https://w3.opensource.ibm.com/projects/abbotforswt/

already has a working SWTized Robot; its remaining defect involves
difficulty finding non-Control Widget's

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436

e.g. for driving cascading menus. (IIRC non-Control Widget's can
usually be found by walking the hierarchy, but that always harms
performance, esp when driving busy environments like a runtime
workbench.)

&gt; In other words, doing the work for bug 15025 would involve adding
&gt; support for posting key and mouse events to the OS (as bug 21083
&gt; describes)

abbotforswt's Robot already does post key and mouse events, using a
java.awt.Robot. We have working, JUnit-driven demos and test cases.

HTH, Tom Roche, Rational Developer Model2 Tooling, abbotforswt admin

Available in v&gt;20040323: Display.post(Event e)

Special thanks to Sebastian Peleato from University of Waterloo for 
contributing this new API.

Please see the following snippet to see how to generate system events under 
SWT.
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/snippits/snippet142.html
marking as fixed v&gt;20040323
*** Bug 21083 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15026" />
    <CreationDate amount="2002-05-01 14:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Unable to..." messages in Linux terminal on startup</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build: ****** (made available in the early afternoon of May 1st)

Immediately after starting Eclipse on Linux, I get the following in the 
terminal window:

Unable to restore mru list - no input factory ID.
Unable to find action set: org_eclipse_ui_examples_readmetool_actionSet

I will attach the .log file. This is not a fresh workspace, but it's not too 
old.
Created attachment 732
Log file right after startup
Not an issue in 2.0. Closing.</WithStack>
    <WithOutStack>Build: ****** (made available in the early afternoon of May 1st)

Immediately after starting Eclipse on Linux, I get the following in the 
terminal window:

Unable to restore mru list - no input factory ID.
Unable to find action set: org_eclipse_ui_examples_readmetool_actionSet

I will attach the .log file. This is not a fresh workspace, but it's not too 
old.
Created attachment 732
Log file right after startup
Not an issue in 2.0. Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15027" />
    <CreationDate amount="2002-05-01 14:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing org.eclipse.sdk</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Start from a fresh workspace.</Line>
          <Line>2) Import all plug-ins from the runtime Eclipse as binaries and copying to the</Line>
          <Line>workspace</Line>
          <Line>3) Run a runtime workspace:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build 20020501 - Linux RH 7.1 - Motif - IBM JDK 1.3.0

1) Start from a fresh workspace.
2) Import all plug-ins from the runtime Eclipse as binaries and copying to the
workspace
3) Run a runtime workspace:

===============================================
Problem reading configuration info.
Reason:
Missing plugin descriptor for org.eclipse.sdk
Problem reading configuration info.
Reason:
Missing plugin descriptor for org.eclipse.sdk
===============================================
build 2002-05-01 on WinXP.
Same problem.
Was ok running Eclipse in Eclipse on a fresh workspace but got the errors 
after installing over my old workspace and trying to self-host.

Problem reading configuration info.
Reason:
!ENTRY org.eclipse.core.resources 1 4 Wed May 01 14:36:30 EDT 2002
!MESSAGE Problem reading configuration info.
!ENTRY org.eclipse.ui 4 0 Wed May 01 14:36:30 EDT 2002
!MESSAGE Missing plugin descriptor for org.eclipse.sdk
Missing plugin descriptor for org.eclipse.sdk
!ENTRY org.eclipse.core.resources 1 4 Wed May 01 14:36:30 EDT 2002
!MESSAGE Problem reading configuration info.
Problem reading configuration info.
Reason:
!ENTRY org.eclipse.ui 4 0 Wed May 01 14:36:30 EDT 2002
!MESSAGE Missing plugin descriptor for org.eclipse.sdk
Missing plugin descriptor for org.eclipse.sdk

This error will not be shown any more.</WithStack>
    <WithOutStack>build 20020501 - Linux RH 7.1 - Motif - IBM JDK 1.3.0

1) Start from a fresh workspace.
2) Import all plug-ins from the runtime Eclipse as binaries and copying to the
workspace
3) Run a runtime workspace:

===============================================
Problem reading configuration info.
Reason:
Missing plugin descriptor for org.eclipse.sdk
Problem reading configuration info.
Reason:
Missing plugin descriptor for org.eclipse.sdk
===============================================
build 2002-05-01 on WinXP.
Same problem.
Was ok running Eclipse in Eclipse on a fresh workspace but got the errors 
after installing over my old workspace and trying to self-host.

Problem reading configuration info.
Reason:
!ENTRY org.eclipse.core.resources 1 4 Wed May 01 14:36:30 EDT 2002
!MESSAGE Problem reading configuration info.
!ENTRY org.eclipse.ui 4 0 Wed May 01 14:36:30 EDT 2002
!MESSAGE Missing plugin descriptor for org.eclipse.sdk
Missing plugin descriptor for org.eclipse.sdk
!ENTRY org.eclipse.core.resources 1 4 Wed May 01 14:36:30 EDT 2002
!MESSAGE Problem reading configuration info.
Problem reading configuration info.
Reason:
!ENTRY org.eclipse.ui 4 0 Wed May 01 14:36:30 EDT 2002
!MESSAGE Missing plugin descriptor for org.eclipse.sdk
Missing plugin descriptor for org.eclipse.sdk

This error will not be shown any more.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15028" />
    <CreationDate amount="2002-05-01 14:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception occurs launching with pde junit launcher</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330862888">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason>java.lang.NoSuchMethodException: 
loaderStartup</Reason>
        <Frames>
          <Frame depth="0">java.lang.Class.getMethod0(Native Method)</Frame>
          <Frame depth="1">java.lang.Class.getDeclaredMethod(Class.java:1196)</Frame>
          <Frame depth="2">org.eclipse.core.internal.boot.InternalBootLoader.startup(InternalBootLoader.java:880)</Frame>
          <Frame depth="3">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:767)</Frame>
          <Frame depth="4">org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)</Frame>
          <Frame depth="5">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.basicRun(Main.java:190)</Frame>
          <Frame depth="7">org.eclipse.core.launcher.Main.run(Main.java:549)</Frame>
          <Frame depth="8">org.eclipse.core.launcher.UIMain.main(UIMain.java:52)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The following exception is written to the console when I try to launch using 
the pde junit launcher.

Exception launching the Eclipse Platform UI:
java.lang.reflect.InvocationTargetException: java.lang.NoSuchMethodException: 
loaderStartup
	at java.lang.Class.getMethod0(Native Method)
	at java.lang.Class.getDeclaredMethod(Class.java:1196)
	at org.eclipse.core.internal.boot.InternalBootLoader.startup
(InternalBootLoader.java:880)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:767)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:319)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:190)
	at org.eclipse.core.launcher.Main.run(Main.java:549)
	at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)

My setup is as follows:
I have a copy of M5 installed with the 0409 pde.junit plugin added.  From that 
install I launch a workspace that contains my plugins.  In the workspace I have 
a copy of my plugins and copies of all required plugins from the 0430 
integration build.  

This did not happen when I had 0425 integration plugins imported into my 
workspace.
made a new org.eclipse.pde.junit plugin available for 20020425 pls check it out 
from the JDT UI component page.
Verified.</WithStack>
    <WithOutStack>The following exception is written to the console when I try to launch using 
the pde junit launcher.

Exception launching the Eclipse Platform UI:


My setup is as follows:
I have a copy of M5 installed with the 0409 pde.junit plugin added.  From that 
install I launch a workspace that contains my plugins.  In the workspace I have 
a copy of my plugins and copies of all required plugins from the 0430 
integration build.  

This did not happen when I had 0425 integration plugins imported into my 
workspace.
made a new org.eclipse.pde.junit plugin available for 20020425 pls check it out 
from the JDT UI component page.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15029" />
    <CreationDate amount="2002-05-01 15:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Index not rectreated from scratch if left in inconsitent state.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Index not rectreated from scratch if left in inconsitent state.  If old index 
contained documents, these documents were not added to the new index.
Fixed.</WithStack>
    <WithOutStack>Index not rectreated from scratch if left in inconsitent state.  If old index 
contained documents, these documents were not added to the new index.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15030" />
    <CreationDate amount="2002-05-01 15:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>NPE trying to open or edit source files that reference jbuilder.jar</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330862903">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.u2At(ClassFileStruct.java:147)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.readConstantAttribute(FieldInfo.java:172)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getConstant(FieldInfo.java:56)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createFields(BinaryTypeBinding.java:151)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom(BinaryTypeBinding.java:133)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:292)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom(LookupEnvironment.java:275)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:188)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType(LookupEnvironment.java:65)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve(UnresolvedReferenceBinding.java:23)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superclass(BinaryTypeBinding.java:403)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.compiler.lookup.Scope.findMemberType(Scope.java:319)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage(Scope.java:996)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.compiler.lookup.Scope.getType(Scope.java:911)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding(SingleTypeReference.java:34)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.resolveTypesFor(SourceTypeBinding.java:799)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.methods(SourceTypeBinding.java:663)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildMethods(ClassScope.java:218)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildFieldsAndMethods(ClassScope.java:114)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildAnonymousTypeBinding(ClassScope.java:32)</Frame>
          <Frame depth="20">org.eclipse.jdt.internal.compiler.lookup.BlockScope.addAnonymousType(BlockScope.java:58)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType(QualifiedAllocationExpression.java:301)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:195)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.compiler.ast.Expression.resolve(Expression.java:419)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:322)</Frame>
          <Frame depth="25">org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:64)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:311)</Frame>
          <Frame depth="27">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:898)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:930)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:213)</Frame>
          <Frame depth="30">org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:561)</Frame>
          <Frame depth="31">org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.resolve(CompilationUnitProblemFinder.java:151)</Frame>
          <Frame depth="32">org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:81)</Frame>
          <Frame depth="33">org.eclipse.jdt.internal.core.Openable.openWhenClosed(Openable.java:394)</Frame>
          <Frame depth="34">org.eclipse.jdt.internal.core.WorkingCopy.openWhenClosed(WorkingCopy.java:332)</Frame>
          <Frame depth="35">org.eclipse.jdt.internal.core.Openable.open(Openable.java:330)</Frame>
          <Frame depth="36">org.eclipse.jdt.internal.core.WorkingCopy.open(WorkingCopy.java:294)</Frame>
          <Frame depth="37">org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy(CompilationUnit.java:619)</Frame>
          <Frame depth="38">org.eclipse.jdt.internal.core.CompilationUnit.getSharedWorkingCopy(CompilationUnit.java:590)</Frame>
          <Frame depth="39">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createElementInfo(CompilationUnitDocumentProvider.java:421)</Frame>
          <Frame depth="40">org.eclipse.ui.texteditor.AbstractDocumentProvider.connect(AbstractDocumentProvider.java:247)</Frame>
          <Frame depth="41">org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput(AbstractTextEditor.java:1503)</Frame>
          <Frame depth="42">org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput(JavaEditor.java:486)</Frame>
          <Frame depth="43">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput(CompilationUnitEditor.java:933)</Frame>
          <Frame depth="44">org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:1146)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:485)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.EditorManager.access$1(EditorManager.java:483)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:467)</Frame>
          <Frame depth="48">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:460)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:529)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:361)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:264)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1637)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1601)</Frame>
          <Frame depth="55">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:130)</Frame>
          <Frame depth="56">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:102)</Frame>
          <Frame depth="57">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:89)</Frame>
          <Frame depth="58">org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open(OpenActionUtil.java:45)</Frame>
          <Frame depth="59">org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:141)</Frame>
          <Frame depth="60">org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:132)</Frame>
          <Frame depth="61">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:132)</Frame>
          <Frame depth="62">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:94)</Frame>
          <Frame depth="63">org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleDoubleClick(PackageExplorerActionGroup.java:214)</Frame>
          <Frame depth="64">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.handleDoubleClick(PackageExplorerPart.java:500)</Frame>
          <Frame depth="65">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.access$1(PackageExplorerPart.java:499)</Frame>
          <Frame depth="66">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.doubleClick(PackageExplorerPart.java:311)</Frame>
          <Frame depth="67">org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick(StructuredViewer.java:286)</Frame>
          <Frame depth="68">org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect(StructuredViewer.java:444)</Frame>
          <Frame depth="69">org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetDefaultSelected(AbstractTreeViewer.java:627)</Frame>
          <Frame depth="70">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:92)</Frame>
          <Frame depth="71">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="72">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="73">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)</Frame>
          <Frame depth="74">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)</Frame>
          <Frame depth="75">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:833)</Frame>
          <Frame depth="76">org.eclipse.ui.internal.Workbench.run(Workbench.java:816)</Frame>
          <Frame depth="77">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:643)</Frame>
          <Frame depth="78">org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)</Frame>
          <Frame depth="79">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="80">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="81">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="82">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="83">org.eclipse.core.launcher.Main.basicRun(Main.java:160)</Frame>
          <Frame depth="84">org.eclipse.core.launcher.Main.run(Main.java:548)</Frame>
          <Frame depth="85">org.eclipse.core.launcher.Main.main(Main.java:403)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="3">
      <source_code type="singlecomment">
        <location start="650" end="689" />
        <code>// Check OpenTools version number</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="755" end="800" />
        <code>// Add a new menu item to the Help menu</code>
      </source_code>
      <source_code type="functiondef">
        <location start="874" end="1025" />
        <code>public void actionPerformed(Browser browser) {
             JOptionPane.showConfirmDialog(null,
                  "Hello, World!");
         }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>1. Add jbuilder.jar to the classpath</Line>
          <Line>2. Create a new class and paste in the following method (from the JBuilder help</Line>
          <Line>docs)</Line>
          <Line>public static void initOpenTool(byte major,</Line>
          <Line>byte minor) {</Line>
          <Line>if (major != PrimeTime.CURRENT_MAJOR_VERSION)</Line>
          <Line>return;</Line>
          <Line>JBuilderMenu.GROUP_Help.add(new BrowserAction(</Line>
          <Line>"Say Hello") {</Line>
          <Line />
          <Line>});</Line>
          <Line>}</Line>
          <Line>3. Organize imports, save and close</Line>
          <Line>4. Try to reopen the file. Fails with</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I'm trying to write a jbuilder OpenTool (like an eclipse plugin) using my 
favorite Java IDE, but eclipse is having a hard time with jbuilder classes.  A 
specific case follows, but almost any use of JBuilder classes seems to cause 
eclipse to fail with the same exception during e.g. code completion.  The 
regular error dialogs and lack of code completion are bearable, but not being 
able to reopen my source code is a bit of a showstopper :-)

Thanks
Mark

1. Add jbuilder.jar to the classpath
2. Create a new class and paste in the following method (from the JBuilder help 
docs)
public static void initOpenTool(byte major,
       byte minor) {

    // Check OpenTools version number
    if (major != PrimeTime.CURRENT_MAJOR_VERSION)
        return;

    // Add a new menu item to the Help menu
    JBuilderMenu.GROUP_Help.add(new BrowserAction(
        "Say Hello") {
         public void actionPerformed(Browser browser) {
             JOptionPane.showConfirmDialog(null,
                  "Hello, World!");
         }
     });
}
3. Organize imports, save and close
4. Try to reopen the file. Fails with
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct.u2At
(ClassFileStruct.java:147)
	at 
org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.readConstantAttribute
(FieldInfo.java:172)
	at org.eclipse.jdt.internal.compiler.classfmt.FieldInfo.getConstant
(FieldInfo.java:56)
	at 
org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.createFields
(BinaryTypeBinding.java:151)
	at 
org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.cachePartsFrom
(BinaryTypeBinding.java:133)
	at 
org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom
(LookupEnvironment.java:292)
	at 
org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createBinaryTypeFrom
(LookupEnvironment.java:275)
	at org.eclipse.jdt.internal.compiler.Compiler.accept(Compiler.java:188)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.askForType
(LookupEnvironment.java:65)
	at 
org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding.resolve
(UnresolvedReferenceBinding.java:23)
	at org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.superclass
(BinaryTypeBinding.java:403)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMemberType
(Scope.java:319)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getTypeOrPackage
(Scope.java:996)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getType
(Scope.java:911)
	at 
org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.getTypeBinding
(SingleTypeReference.java:34)
	at 
org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.resolveTypesFor
(SourceTypeBinding.java:799)
	at org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding.methods
(SourceTypeBinding.java:663)
	at org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildMethods
(ClassScope.java:218)
	at 
org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildFieldsAndMethods
(ClassScope.java:114)
	at 
org.eclipse.jdt.internal.compiler.lookup.ClassScope.buildAnonymousTypeBinding
(ClassScope.java:32)
	at org.eclipse.jdt.internal.compiler.lookup.BlockScope.addAnonymousType
(BlockScope.java:58)
	at 
org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression.resolveType
(QualifiedAllocationExpression.java:301)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType
(MessageSend.java:195)
	at org.eclipse.jdt.internal.compiler.ast.Expression.resolve
(Expression.java:419)
	at 
org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatement
s(AbstractMethodDeclaration.java:322)
	at 
org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements
(MethodDeclaration.java:64)
	at 
org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve
(AbstractMethodDeclaration.java:311)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve
(TypeDeclaration.java:898)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve
(TypeDeclaration.java:930)
	at 
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve
(CompilationUnitDeclaration.java:213)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.resolve
(CompilationUnitProblemFinder.java:151)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure
(CompilationUnit.java:81)
	at org.eclipse.jdt.internal.core.Openable.openWhenClosed
(Openable.java:394)
	at org.eclipse.jdt.internal.core.WorkingCopy.openWhenClosed
(WorkingCopy.java:332)
	at org.eclipse.jdt.internal.core.Openable.open(Openable.java:330)
	at org.eclipse.jdt.internal.core.WorkingCopy.open(WorkingCopy.java:294)
	at org.eclipse.jdt.internal.core.CompilationUnit.getWorkingCopy
(CompilationUnit.java:619)
	at org.eclipse.jdt.internal.core.CompilationUnit.getSharedWorkingCopy
(CompilationUnit.java:590)
	at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createEle
mentInfo(CompilationUnitDocumentProvider.java:421)
	at org.eclipse.ui.texteditor.AbstractDocumentProvider.connect
(AbstractDocumentProvider.java:247)
	at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput
(AbstractTextEditor.java:1503)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetInput
(JavaEditor.java:486)
	at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSetInput
(CompilationUnitEditor.java:933)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init
(AbstractTextEditor.java:1146)
	at org.eclipse.ui.internal.EditorManager.createSite
(EditorManager.java:485)
	at org.eclipse.ui.internal.EditorManager.access$1
(EditorManager.java:483)
	at org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:467)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor
(EditorManager.java:460)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor
(EditorManager.java:529)
	at org.eclipse.ui.internal.EditorManager.openEditor
(EditorManager.java:361)
	at org.eclipse.ui.internal.EditorManager.openEditor
(EditorManager.java:264)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1637)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1601)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor
(EditorUtility.java:130)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor
(EditorUtility.java:102)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor
(EditorUtility.java:89)
	at org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open
(OpenActionUtil.java:45)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:141)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:132)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:132)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:94)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleDoubleC
lick(PackageExplorerActionGroup.java:214)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.handleDoubleClick
(PackageExplorerPart.java:500)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.access$1
(PackageExplorerPart.java:499)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.doubleClick
(PackageExplorerPart.java:311)
	at org.eclipse.jface.viewers.StructuredViewer.fireDoubleClick
(StructuredViewer.java:286)
	at org.eclipse.jface.viewers.StructuredViewer.handleDoubleSelect
(StructuredViewer.java:444)
	at org.eclipse.jface.viewers.AbstractTreeViewer$1.widgetDefaultSelected
(AbstractTreeViewer.java:627)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:92)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:833)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:816)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:643)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:160)
	at org.eclipse.core.launcher.Main.run(Main.java:548)
	at org.eclipse.core.launcher.Main.main(Main.java:403)
Where do I get the jbuilder.jar file? I think this is the first step to reproduce this problem. Is 
there a licence agreement to get it?
There is a license agreement so I can't really send it to you.  However it is 
downloadable at no charge from 

http://www.borland.com/jbuilder/download/jb6personal_steps.html

I think this has something to do with the fully initialized instances of the ClassFileReader. I 
need the jbuilder.jar to reproduce the case and then it should be fairly simple to find out what the 
problem is.
I requested jbuilder.jar through the official software request form. Wait to get the jar file 
before further investigations.
Which build are you using?
Problem is definitely present in M5.  I downloaded an integration build earlier 
today which was almost certainly 20020425 (I'm not at the office so I can't be 
100% sure) and that still had the problem.
Looking only at the stack trace should allow me to narrow down the problem. I will investigate it 
before I got the jbuilder.jar file.
I got the jar file. I am investigating.
I found the bug. It is fixed now. The problem came from the reading of the field constant value. This 
was boggus for a field that contains another attribute before the constant value attribute.
I 
will add some regression tests.
Fixed and released in HEAD.</WithStack>
    <WithOutStack>I'm trying to write a jbuilder OpenTool (like an eclipse plugin) using my 
favorite Java IDE, but eclipse is having a hard time with jbuilder classes.  A 
specific case follows, but almost any use of JBuilder classes seems to cause 
eclipse to fail with the same exception during e.g. code completion.  The 
regular error dialogs and lack of code completion are bearable, but not being 
able to reopen my source code is a bit of a showstopper :-)

Thanks
Mark

1. Add jbuilder.jar to the classpath
2. Create a new class and paste in the following method (from the JBuilder help 
docs)
public static void initOpenTool(byte major,
       byte minor) {

    // Check OpenTools version number
    if (major != PrimeTime.CURRENT_MAJOR_VERSION)
        return;

    // Add a new menu item to the Help menu
    JBuilderMenu.GROUP_Help.add(new BrowserAction(
        "Say Hello") {
         public void actionPerformed(Browser browser) {
             JOptionPane.showConfirmDialog(null,
                  "Hello, World!");
         }
     });
}
3. Organize imports, save and close
4. Try to reopen the file. Fails with

Where do I get the jbuilder.jar file? I think this is the first step to reproduce this problem. Is 
there a licence agreement to get it?
There is a license agreement so I can't really send it to you.  However it is 
downloadable at no charge from 

http://www.borland.com/jbuilder/download/jb6personal_steps.html

I think this has something to do with the fully initialized instances of the ClassFileReader. I 
need the jbuilder.jar to reproduce the case and then it should be fairly simple to find out what the 
problem is.
I requested jbuilder.jar through the official software request form. Wait to get the jar file 
before further investigations.
Which build are you using?
Problem is definitely present in M5.  I downloaded an integration build earlier 
today which was almost certainly 20020425 (I'm not at the office so I can't be 
100% sure) and that still had the problem.
Looking only at the stack trace should allow me to narrow down the problem. I will investigate it 
before I got the jbuilder.jar file.
I got the jar file. I am investigating.
I found the bug. It is fixed now. The problem came from the reading of the field constant value. This 
was boggus for a field that contains another attribute before the constant value attribute.
I 
will add some regression tests.
Fixed and released in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15031" />
    <CreationDate amount="2002-05-01 15:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Font parsing failed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330862903">
        <Exception>java.lang.StringIndexOutOfBoundsException</Exception>
        <Reason>String index out of range: -2</Reason>
        <Frames>
          <Frame depth="0">java.lang.String.substring(String.java:1476)</Frame>
          <Frame depth="1">org.eclipse.swt.graphics.FontData.setXlfd(FontData.java:457)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) 6x13bold</Line>
          <Line>2) TTUP020405020504050203030_Georgia</Line>
          <Line>3) hanzigb24st</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I noticed that in swt for linux fonts are parsed with an indexof to find the names. 
I also noticed i have (debian Xfree4 xfstt) some fonts that are 'wrongly names'.
they prevent me from stating up. I'm adding a 'return' now if the font does not
contain the '-'
and set everything to null as a way of a workaround (hope it'l work).

[example of xlsfont output to make my point]
1) 6x13bold
2) TTUP020405020504050203030_Georgia
3) hanzigb24st 

[relevant part of the error message]
java.lang.StringIndexOutOfBoundsException: String index out of range: -2
        at java.lang.String.substring(String.java:1476)
        at org.eclipse.swt.graphics.FontData.setXlfd(FontData.java:457)
Can you provide some examples of the "wrongly named" fonts. Also, let us know 
how successful you are with creating a workaround. Are you running the motif 
or gtk versions?

Email sent to me from fenux@verborgh.be follows...

----------------------

Nope, workarround failed, causing nullpointer exeptions.
I'm running the gtk version. the motif version doesn't cause the problem.

I seems to run after I disabled my truetype server xfstt. It could be a
configuration problem, butt still, truetype is working in other applications.
I''ll try to ask some friends if the have the samen problem with the truetype
server and/or eclipse

(I have xfonts-base, xfonts-100dpi + the truetype fonts i downloaded from
the microsoft site, I'm using XFree4.1 and xfstt. freetype applications also 
give no problem
(eg mozilla) nor do applications as the gimp who are able to use the installed 
fonts)

this is the diff of the to output, (the xlsfont output with xset +fp 
unix:/7101 
diff'ed against the xlsfont output without the xfstt in my fonthpath).

#begin snip
-ttf-andale mono-medium-r-normal-regular-0-0-0-0-m-0-iso8859-1
&lt; -ttf-arial black-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-arial-bold-i-normal-bold italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-arial-bold-r-normal-bold-0-0-0-0-p-0-iso8859-1
&lt; -ttf-arial-medium-i-normal-italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-arial-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-comic sans ms-bold-r-normal-bold-0-0-0-0-p-0-iso8859-1
&lt; -ttf-comic sans ms-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-courier new-bold-i-normal-bold italic-0-0-0-0-m-0-iso8859-1
&lt; -ttf-courier new-bold-r-normal-bold-0-0-0-0-m-0-iso8859-1
&lt; -ttf-courier new-medium-i-normal-italic-0-0-0-0-m-0-iso8859-1
&lt; -ttf-courier new-medium-r-normal-regular-0-0-0-0-m-0-iso8859-1
&lt; -ttf-georgia-bold-i-normal-bold italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-georgia-bold-r-normal-bold-0-0-0-0-p-0-iso8859-1
&lt; -ttf-georgia-medium-i-normal-italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-georgia-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-impact-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-times new roman-bold-i-normal-bold italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-times new roman-bold-r-normal-bold-0-0-0-0-p-0-iso8859-1
&lt; -ttf-times new roman-medium-i-normal-italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-times new roman-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-trebuchet ms-bold-i-normal-bold italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-trebuchet ms-bold-r-normal-bold-0-0-0-0-p-0-iso8859-1
&lt; -ttf-trebuchet ms-medium-i-normal-italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-trebuchet ms-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-verdana-bold-i-normal-bold italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-verdana-bold-r-normal-bold-0-0-0-0-p-0-iso8859-1
&lt; -ttf-verdana-medium-i-normal-italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-verdana-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-webdings-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
1095,1124d1064
&lt; TTUP020205030504050903040_Times New Roman Italic
&lt; TTUP020206030504050203040_Times New Roman
&lt; TTUP020207030605050903040_Times New Roman Bold Italic
&lt; TTUP020208030705050203040_Times New Roman Bold
&lt; TTUP020405020504050203030_Georgia
&lt; TTUP020405020504050903030_Georgia Italic
&lt; TTUP020408020504050202030_Georgia Bold
&lt; TTUP020408020504050902030_Georgia Bold Italic
&lt; TTUP020703090202050204040_Courier New
&lt; TTUP020704090202050904040_Courier New Italic
&lt; TTUP020706090202050204040_Courier New Bold
&lt; TTUP020706090202050904040_Courier New Bold Italic
&lt; TTUP020B05090000000000040_Andale Mono
&lt; TTUP020B06030202020202040_Trebuchet MS
&lt; TTUP020B06030202020902040_Trebuchet MS Italic
&lt; TTUP020B06040202020202040_Arial
&lt; TTUP020B06040202020902040_Arial Italic
&lt; TTUP020B06040305040402040_Verdana
&lt; TTUP020B06040305040B02040_Verdana Italic
&lt; TTUP020B07030202020202040_Trebuchet MS Bold
&lt; TTUP020B07030202020902040_Trebuchet MS Bold Italic
&lt; TTUP020B07040202020202040_Arial Bold
&lt; TTUP020B07040202020902040_Arial Bold Italic
&lt; TTUP020B08040305040402040_Verdana Bold
&lt; TTUP020B08040305040B02040_Verdana Bold Italic
&lt; TTUP020B08060309020502040_Impact
&lt; TTUP020B0A040201020202040_Arial Black
&lt; TTUP030F07020303020202040_Comic Sans MS
&lt; TTUP030F09020303020202040_Comic Sans MS Bold
&lt; TTUP050301020105090607030_Webdings
#end snip
 

On Thu, May 02, 2002 at 09:22:50AM -0400, bugzilla-daemon@eclipse.org wrote:
&gt; http://bugs.eclipse.org/bugs/show_bug.cgi?id=15031
&gt; 
&gt; Mike_Wilson@oti.com changed:
&gt; 
&gt;            What    |Removed                     |Added
&gt; ----------------------------------------------------------------------------
&gt;          AssignedTo|Mike_Wilson@oti.com         |Silenio_Quarti@oti.com
&gt; 
&gt; 
&gt; 
&gt; ------- Additional Comments From Mike_Wilson@oti.com  2002-05-02 09:22 ------
-
&gt; Can you provide some examples of the "wrongly named" fonts. Also, let us 
know 
&gt; how successful you are with creating a workaround. Are you running the motif 
&gt; or gtk versions?
&gt; 
&gt; 
&gt; 
&gt; 
&gt; ------- You are receiving this mail because: -------
&gt; You reported the bug, or are watching the reporter.

The following is email sent to me by fenux@verborgh.be

(Steven, it's better to add comment to the bugzilla report directly than it is 
to send me email.)

------------------------

well, i started eclips (gtk1x) without xfstt, started xfstt after eclipse was 
started,
changed my fonts preference, and as some kind of miracle, it all works. I 
noticed the
first time i saved the fonts it said something about a config file it couldn't 
write
to. (kindof normal since i did not have permission to it, im using 
'eclipse -data /home/fenux/data/eclipse', eclipse itsef was installed as root,
systemwide in /opt/eclipse). Anyway, for me the problem is solved. Is there a
standard font I don not have installed? anyway, know I'm using ttf-verdana and
helvetica as fonts and those seem to work even thought at times, al text in 
some listboxes go invisible, i can pick items, but i can't see them. i can
live with that though :) )

On Thu, May 02, 2002 at 09:22:50AM -0400, bugzilla-daemon@eclipse.org wrote:
&gt; http://bugs.eclipse.org/bugs/show_bug.cgi?id=15031
&gt; 
&gt; Mike_Wilson@oti.com changed:
&gt; 
&gt;            What    |Removed                     |Added
&gt; ----------------------------------------------------------------------------
&gt;          AssignedTo|Mike_Wilson@oti.com         |Silenio_Quarti@oti.com
&gt; 
&gt; 
&gt; 
&gt; ------- Additional Comments From Mike_Wilson@oti.com  2002-05-02 09:22 ------
-
&gt; Can you provide some examples of the "wrongly named" fonts. Also, let us 
know 
&gt; how successful you are with creating a workaround. Are you running the motif 
&gt; or gtk versions?
&gt; 
&gt; 
&gt; 
&gt; 
&gt; ------- You are receiving this mail because: -------
&gt; You reported the bug, or are watching the reporter.

I believe this is fixed in gtk 2.0. There is no work been done in
the gtk1x stream. Please reopen if you have since this is gtk 2.0.

Thanks!</WithStack>
    <WithOutStack>I noticed that in swt for linux fonts are parsed with an indexof to find the names. 
I also noticed i have (debian Xfree4 xfstt) some fonts that are 'wrongly names'.
they prevent me from stating up. I'm adding a 'return' now if the font does not
contain the '-'
and set everything to null as a way of a workaround (hope it'l work).

[example of xlsfont output to make my point]
1) 6x13bold
2) TTUP020405020504050203030_Georgia
3) hanzigb24st 

[relevant part of the error message]

Can you provide some examples of the "wrongly named" fonts. Also, let us know 
how successful you are with creating a workaround. Are you running the motif 
or gtk versions?

Email sent to me from fenux@verborgh.be follows...

----------------------

Nope, workarround failed, causing nullpointer exeptions.
I'm running the gtk version. the motif version doesn't cause the problem.

I seems to run after I disabled my truetype server xfstt. It could be a
configuration problem, butt still, truetype is working in other applications.
I''ll try to ask some friends if the have the samen problem with the truetype
server and/or eclipse

(I have xfonts-base, xfonts-100dpi + the truetype fonts i downloaded from
the microsoft site, I'm using XFree4.1 and xfstt. freetype applications also 
give no problem
(eg mozilla) nor do applications as the gimp who are able to use the installed 
fonts)

this is the diff of the to output, (the xlsfont output with xset +fp 
unix:/7101 
diff'ed against the xlsfont output without the xfstt in my fonthpath).

#begin snip
-ttf-andale mono-medium-r-normal-regular-0-0-0-0-m-0-iso8859-1
&lt; -ttf-arial black-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-arial-bold-i-normal-bold italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-arial-bold-r-normal-bold-0-0-0-0-p-0-iso8859-1
&lt; -ttf-arial-medium-i-normal-italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-arial-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-comic sans ms-bold-r-normal-bold-0-0-0-0-p-0-iso8859-1
&lt; -ttf-comic sans ms-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-courier new-bold-i-normal-bold italic-0-0-0-0-m-0-iso8859-1
&lt; -ttf-courier new-bold-r-normal-bold-0-0-0-0-m-0-iso8859-1
&lt; -ttf-courier new-medium-i-normal-italic-0-0-0-0-m-0-iso8859-1
&lt; -ttf-courier new-medium-r-normal-regular-0-0-0-0-m-0-iso8859-1
&lt; -ttf-georgia-bold-i-normal-bold italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-georgia-bold-r-normal-bold-0-0-0-0-p-0-iso8859-1
&lt; -ttf-georgia-medium-i-normal-italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-georgia-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-impact-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-times new roman-bold-i-normal-bold italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-times new roman-bold-r-normal-bold-0-0-0-0-p-0-iso8859-1
&lt; -ttf-times new roman-medium-i-normal-italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-times new roman-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-trebuchet ms-bold-i-normal-bold italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-trebuchet ms-bold-r-normal-bold-0-0-0-0-p-0-iso8859-1
&lt; -ttf-trebuchet ms-medium-i-normal-italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-trebuchet ms-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-verdana-bold-i-normal-bold italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-verdana-bold-r-normal-bold-0-0-0-0-p-0-iso8859-1
&lt; -ttf-verdana-medium-i-normal-italic-0-0-0-0-p-0-iso8859-1
&lt; -ttf-verdana-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
&lt; -ttf-webdings-medium-r-normal-regular-0-0-0-0-p-0-iso8859-1
1095,1124d1064
&lt; TTUP020205030504050903040_Times New Roman Italic
&lt; TTUP020206030504050203040_Times New Roman
&lt; TTUP020207030605050903040_Times New Roman Bold Italic
&lt; TTUP020208030705050203040_Times New Roman Bold
&lt; TTUP020405020504050203030_Georgia
&lt; TTUP020405020504050903030_Georgia Italic
&lt; TTUP020408020504050202030_Georgia Bold
&lt; TTUP020408020504050902030_Georgia Bold Italic
&lt; TTUP020703090202050204040_Courier New
&lt; TTUP020704090202050904040_Courier New Italic
&lt; TTUP020706090202050204040_Courier New Bold
&lt; TTUP020706090202050904040_Courier New Bold Italic
&lt; TTUP020B05090000000000040_Andale Mono
&lt; TTUP020B06030202020202040_Trebuchet MS
&lt; TTUP020B06030202020902040_Trebuchet MS Italic
&lt; TTUP020B06040202020202040_Arial
&lt; TTUP020B06040202020902040_Arial Italic
&lt; TTUP020B06040305040402040_Verdana
&lt; TTUP020B06040305040B02040_Verdana Italic
&lt; TTUP020B07030202020202040_Trebuchet MS Bold
&lt; TTUP020B07030202020902040_Trebuchet MS Bold Italic
&lt; TTUP020B07040202020202040_Arial Bold
&lt; TTUP020B07040202020902040_Arial Bold Italic
&lt; TTUP020B08040305040402040_Verdana Bold
&lt; TTUP020B08040305040B02040_Verdana Bold Italic
&lt; TTUP020B08060309020502040_Impact
&lt; TTUP020B0A040201020202040_Arial Black
&lt; TTUP030F07020303020202040_Comic Sans MS
&lt; TTUP030F09020303020202040_Comic Sans MS Bold
&lt; TTUP050301020105090607030_Webdings
#end snip
 

On Thu, May 02, 2002 at 09:22:50AM -0400, bugzilla-daemon@eclipse.org wrote:
&gt; http://bugs.eclipse.org/bugs/show_bug.cgi?id=15031
&gt; 
&gt; Mike_Wilson@oti.com changed:
&gt; 
&gt;            What    |Removed                     |Added
&gt; ----------------------------------------------------------------------------
&gt;          AssignedTo|Mike_Wilson@oti.com         |Silenio_Quarti@oti.com
&gt; 
&gt; 
&gt; 
&gt; ------- Additional Comments From Mike_Wilson@oti.com  2002-05-02 09:22 ------
-
&gt; Can you provide some examples of the "wrongly named" fonts. Also, let us 
know 
&gt; how successful you are with creating a workaround. Are you running the motif 
&gt; or gtk versions?
&gt; 
&gt; 
&gt; 
&gt; 
&gt; ------- You are receiving this mail because: -------
&gt; You reported the bug, or are watching the reporter.

The following is email sent to me by fenux@verborgh.be

(Steven, it's better to add comment to the bugzilla report directly than it is 
to send me email.)

------------------------

well, i started eclips (gtk1x) without xfstt, started xfstt after eclipse was 
started,
changed my fonts preference, and as some kind of miracle, it all works. I 
noticed the
first time i saved the fonts it said something about a config file it couldn't 
write
to. (kindof normal since i did not have permission to it, im using 
'eclipse -data /home/fenux/data/eclipse', eclipse itsef was installed as root,
systemwide in /opt/eclipse). Anyway, for me the problem is solved. Is there a
standard font I don not have installed? anyway, know I'm using ttf-verdana and
helvetica as fonts and those seem to work even thought at times, al text in 
some listboxes go invisible, i can pick items, but i can't see them. i can
live with that though :) )

On Thu, May 02, 2002 at 09:22:50AM -0400, bugzilla-daemon@eclipse.org wrote:
&gt; http://bugs.eclipse.org/bugs/show_bug.cgi?id=15031
&gt; 
&gt; Mike_Wilson@oti.com changed:
&gt; 
&gt;            What    |Removed                     |Added
&gt; ----------------------------------------------------------------------------
&gt;          AssignedTo|Mike_Wilson@oti.com         |Silenio_Quarti@oti.com
&gt; 
&gt; 
&gt; 
&gt; ------- Additional Comments From Mike_Wilson@oti.com  2002-05-02 09:22 ------
-
&gt; Can you provide some examples of the "wrongly named" fonts. Also, let us 
know 
&gt; how successful you are with creating a workaround. Are you running the motif 
&gt; or gtk versions?
&gt; 
&gt; 
&gt; 
&gt; 
&gt; ------- You are receiving this mail because: -------
&gt; You reported the bug, or are watching the reporter.

I believe this is fixed in gtk 2.0. There is no work been done in
the gtk1x stream. Please reopen if you have since this is gtk 2.0.

Thanks!</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15032" />
    <CreationDate amount="2002-05-01 15:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Indexing progress monitor hangs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If at the time of search, index needed indexing for some reason, but this 
process did cause anything to be added to index (due to no change indocuments, 
or other process completing index update), the progress monitor display on HTML 
search page does not move.
A bit different problem is that if search is performed from Eclipse Search UI 
and from help HTML UI, the progress moves only that started the search.  It is 
not big problem, as both UIs eventually show results.
This problem does not occur if search is done from more that one HTML UI, it 
only exists if both Eclipse and help HTML UI are used.
Fixed</WithStack>
    <WithOutStack>If at the time of search, index needed indexing for some reason, but this 
process did cause anything to be added to index (due to no change indocuments, 
or other process completing index update), the progress monitor display on HTML 
search page does not move.
A bit different problem is that if search is performed from Eclipse Search UI 
and from help HTML UI, the progress moves only that started the search.  It is 
not big problem, as both UIs eventually show results.
This problem does not occur if search is done from more that one HTML UI, it 
only exists if both Eclipse and help HTML UI are used.
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15033" />
    <CreationDate amount="2002-05-01 15:18:00 -0400" />
    <DupId amount="14981" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>Poor choice of initial focus in confirm project delete</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020430

When I select a project in the navigator, and hit the delete key, I get the 
confirm project deletion dialog.  In M5 and earlier, the initial focus in this 
dialog went to the radio buttons.  It appears in this build that the initial 
focus is now given to the "Yes" button.  This doesn't make sense because that's 
already the default button, so merely hitting enter will cause it to be pressed. 
 It was better when the focus was given to the radio buttons.  Consider wanting 
to delete a project and its contents using the keyboard:

Old way: Delete, Up arrow, Enter
New way: Delete, Tab, Tab, Up arrow, Enter
Probably also a duplicate of bug 14981
There have been no changes to this dialog.  Suspect bug 14981.

*** This bug has been marked as a duplicate of 14981 ***</WithStack>
    <WithOutStack>Build 20020430

When I select a project in the navigator, and hit the delete key, I get the 
confirm project deletion dialog.  In M5 and earlier, the initial focus in this 
dialog went to the radio buttons.  It appears in this build that the initial 
focus is now given to the "Yes" button.  This doesn't make sense because that's 
already the default button, so merely hitting enter will cause it to be pressed. 
 It was better when the focus was given to the radio buttons.  Consider wanting 
to delete a project and its contents using the keyboard:

Old way: Delete, Up arrow, Enter
New way: Delete, Tab, Tab, Up arrow, Enter
Probably also a duplicate of bug 14981
There have been no changes to this dialog.  Suspect bug 14981.

*** This bug has been marked as a duplicate of 14981 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15034" />
    <CreationDate amount="2002-05-01 15:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing action labels</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Two of the JDT actions in the toolbar are missing labels:

"ToggleTextHoverlabel" -&gt; Probably missing the "." between action name and 
"label"

"TooglePresentation.label" -&gt; Probably because Toogle is spelled wrong


Note: if using coolbars, these labels are visible if you slide the button group 
into another button group, and it collapses into a drop-down menu denoted by a 
&gt;&gt; symbol.
Build 20020507.</WithStack>
    <WithOutStack>Two of the JDT actions in the toolbar are missing labels:

"ToggleTextHoverlabel" -&gt; Probably missing the "." between action name and 
"label"

"TooglePresentation.label" -&gt; Probably because Toogle is spelled wrong


Note: if using coolbars, these labels are visible if you slide the button group 
into another button group, and it collapses into a drop-down menu denoted by a 
&gt;&gt; symbol.
Build 20020507.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15035" />
    <CreationDate amount="2002-05-01 15:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Dav: updating resources should not delete first</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The Symmetria class updates a file by deleting it and re-creating it with the 
correct content.  It should simply replace the content to ensure the local 
history is maintained.
The Symetria class has been collapsed into the ResourceState class as part of 
some refactoring related to proper sync state management.
Fixed
(Correcting milestone to F2)
Confirmed that after a replace from target changes made in the workspace are
saved in local history before the contents from the target are created.</WithStack>
    <WithOutStack>The Symmetria class updates a file by deleting it and re-creating it with the 
correct content.  It should simply replace the content to ensure the local 
history is maintained.
The Symetria class has been collapsed into the ResourceState class as part of 
some refactoring related to proper sync state management.
Fixed
(Correcting milestone to F2)
Confirmed that after a replace from target changes made in the workspace are
saved in local history before the contents from the target are created.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15036" />
    <CreationDate amount="2002-05-01 15:34:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>ASTVisitor.preVisit and ASTVisitor.postVisit not called correctly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="19">
      <source_code type="package">
        <location start="142" end="161" />
        <code>package thepackage;</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="189" end="242" />
        <code>// icu is an ICompilationUnit for the above file</code>
      </source_code>
      <source_code type="assignment">
        <location start="242" end="303" />
        <code>CompilationUnit cu = AST.parseCompilationUnit(icu, true);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="305" end="357" />
        <code>System.out.println(icu.getResource().getName());</code>
      </source_code>
      <source_code type="functiondef">
        <location start="358" end="607" />
        <code>cu.accept (new ASTVisitor() {
	public void preVisit(ASTNode node) {
	    System.out.println("Pre:  " + node.getClass());
        }
        public void postVisit(ASTNode node) {
	    System.out.println("Post: " + node.getClass());
        }
    }</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1421" end="1460" />
        <code>// begin with the generic pre-visit</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1460" end="1485" />
        <code>visitor.preVisit(this);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1486" end="1546" />
        <code>// dynamic dispatch to internal method for type-specific</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1561" end="1586" />
        <code>child.accept0(visitor);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1587" end="1624" />
        <code>// end with the generic post-visit</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1624" end="1650" />
        <code>visitor.postVisit(this);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1655" end="1714" />
        <code>// begin with the generic pre-visit ** for the child **</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1714" end="1740" />
        <code>visitor.preVisit(child);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1741" end="1801" />
        <code>// dynamic dispatch to internal method for type-specific</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1816" end="1841" />
        <code>child.accept0(visitor);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1842" end="1899" />
        <code>// end with the generic post-visit ** for the child **</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1899" end="1926" />
        <code>visitor.postVisit(child);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1946" end="1970" />
        <code>// visit the child</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1970" end="1996" />
        <code>child.accept(visitor);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Create a one line java source file:</Line>
          <Line />
          <Line />
          <Line />
          <Line>2. Run this code over it:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I may be misunderstanding the model here, but preVisit and postVisit seem to be 
called incorrectly.

1. Create a one line java source file:

package thepackage;

2. Run this code over it:
    // icu is an ICompilationUnit for the above file
    CompilationUnit cu = AST.parseCompilationUnit(icu, true);

    System.out.println(icu.getResource().getName());
    cu.accept (new ASTVisitor() {
	public void preVisit(ASTNode node) {
	    System.out.println("Pre:  " + node.getClass());
        }
        public void postVisit(ASTNode node) {
	    System.out.println("Post: " + node.getClass());
        }
    });

Expected output is something like:
Pre:  class org.eclipse.jdt.core.dom.CompilationUnit
Pre:  class org.eclipse.jdt.core.dom.PackageDeclaration
Pre:  class org.eclipse.jdt.core.dom.SimpleName ??
Post: class org.eclipse.jdt.core.dom.SimpleName ??
Post: class org.eclipse.jdt.core.dom.PackageDeclaration
Post: class org.eclipse.jdt.core.dom.CompilationUnit

Actual output is:
Pre:  class org.eclipse.jdt.core.dom.CompilationUnit
Pre:  class org.eclipse.jdt.core.dom.CompilationUnit
Pre:  class org.eclipse.jdt.core.dom.PackageDeclaration
Post: class org.eclipse.jdt.core.dom.PackageDeclaration
Post: class org.eclipse.jdt.core.dom.CompilationUnit
Post: class org.eclipse.jdt.core.dom.CompilationUnit

I think the problems are in ASTNode.acceptChild and ASTNode.acceptChildren. E.g 
in ASTNode.getChild shouldn't

		// begin with the generic pre-visit
		visitor.preVisit(this);
		// dynamic dispatch to internal method for type-specific 
visit/endVisit
		child.accept0(visitor);
		// end with the generic post-visit
		visitor.postVisit(this);

be

		// begin with the generic pre-visit ** for the child **
		visitor.preVisit(child);
		// dynamic dispatch to internal method for type-specific 
visit/endVisit
		child.accept0(visitor);
		// end with the generic post-visit ** for the child **
		visitor.postVisit(child);

or, even simpler,

    // visit the child
    child.accept(visitor);

and similarly in acceptChildren?

Thanks
Mark
I agree that:
Pre:  class org.eclipse.jdt.core.dom.CompilationUnit
Pre:  class 
org.eclipse.jdt.core.dom.PackageDeclaration
Pre:  class 
org.eclipse.jdt.core.dom.SimpleName ??
Post: class 
org.eclipse.jdt.core.dom.SimpleName ??
Post: class 
org.eclipse.jdt.core.dom.PackageDeclaration
Post: class 
org.eclipse.jdt.core.dom.CompilationUnit

looks much more natural.
It is indeed supposed to work that way you expected. The implementation was 
totally bogus, as you point out. Thanks muchly for reporting this.


Made fix and added a test to check this.</WithStack>
    <WithOutStack>I may be misunderstanding the model here, but preVisit and postVisit seem to be 
called incorrectly.

1. Create a one line java source file:

package thepackage;

2. Run this code over it:
    // icu is an ICompilationUnit for the above file
    CompilationUnit cu = AST.parseCompilationUnit(icu, true);

    System.out.println(icu.getResource().getName());
    cu.accept (new ASTVisitor() {
	public void preVisit(ASTNode node) {
	    System.out.println("Pre:  " + node.getClass());
        }
        public void postVisit(ASTNode node) {
	    System.out.println("Post: " + node.getClass());
        }
    });

Expected output is something like:
Pre:  class org.eclipse.jdt.core.dom.CompilationUnit
Pre:  class org.eclipse.jdt.core.dom.PackageDeclaration
Pre:  class org.eclipse.jdt.core.dom.SimpleName ??
Post: class org.eclipse.jdt.core.dom.SimpleName ??
Post: class org.eclipse.jdt.core.dom.PackageDeclaration
Post: class org.eclipse.jdt.core.dom.CompilationUnit

Actual output is:
Pre:  class org.eclipse.jdt.core.dom.CompilationUnit
Pre:  class org.eclipse.jdt.core.dom.CompilationUnit
Pre:  class org.eclipse.jdt.core.dom.PackageDeclaration
Post: class org.eclipse.jdt.core.dom.PackageDeclaration
Post: class org.eclipse.jdt.core.dom.CompilationUnit
Post: class org.eclipse.jdt.core.dom.CompilationUnit

I think the problems are in ASTNode.acceptChild and ASTNode.acceptChildren. E.g 
in ASTNode.getChild shouldn't

		// begin with the generic pre-visit
		visitor.preVisit(this);
		// dynamic dispatch to internal method for type-specific 
visit/endVisit
		child.accept0(visitor);
		// end with the generic post-visit
		visitor.postVisit(this);

be

		// begin with the generic pre-visit ** for the child **
		visitor.preVisit(child);
		// dynamic dispatch to internal method for type-specific 
visit/endVisit
		child.accept0(visitor);
		// end with the generic post-visit ** for the child **
		visitor.postVisit(child);

or, even simpler,

    // visit the child
    child.accept(visitor);

and similarly in acceptChildren?

Thanks
Mark
I agree that:
Pre:  class org.eclipse.jdt.core.dom.CompilationUnit
Pre:  class 
org.eclipse.jdt.core.dom.PackageDeclaration
Pre:  class 
org.eclipse.jdt.core.dom.SimpleName ??
Post: class 
org.eclipse.jdt.core.dom.SimpleName ??
Post: class 
org.eclipse.jdt.core.dom.PackageDeclaration
Post: class 
org.eclipse.jdt.core.dom.CompilationUnit

looks much more natural.
It is indeed supposed to work that way you expected. The implementation was 
totally bogus, as you point out. Thanks muchly for reporting this.


Made fix and added a test to check this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15037" />
    <CreationDate amount="2002-05-01 15:34:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Dav: getting a resource fails when local is dirty</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>The provider should prompt to replace a local resource rather than fail if the 
local resource has been modified.
No longer relevant.</WithStack>
    <WithOutStack>The provider should prompt to replace a local resource rather than fail if the 
local resource has been modified.
No longer relevant.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15038" />
    <CreationDate amount="2002-05-01 15:50:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>code completion appears and almost immediately disappears</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I am using the latest integration build - 20020425-linux-gtk1x - and when I
press Ctrl-Space for code completion, the code completion box appears and
immediately disappears. I have to keep pressing Ctrl-Space so that it appears
and disappears a zillion times then I press arrow down so that it stays there
and I can choose one completion.

I initially thought the window manager was to blame, but it worked the same on
KDE3 and gnome 1.4 + sawfish.
This is fixed in GTK2.0.

I suggest you try the GTK2 version, as 1x is getting very little attention.</WithStack>
    <WithOutStack>I am using the latest integration build - 20020425-linux-gtk1x - and when I
press Ctrl-Space for code completion, the code completion box appears and
immediately disappears. I have to keep pressing Ctrl-Space so that it appears
and disappears a zillion times then I press arrow down so that it stays there
and I can choose one completion.

I initially thought the window manager was to blame, but it worked the same on
KDE3 and gnome 1.4 + sawfish.
This is fixed in GTK2.0.

I suggest you try the GTK2 version, as 1x is getting very little attention.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15039" />
    <CreationDate amount="2002-05-01 15:50:00 -0400" />
    <DupId amount="15074" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Why can't I Find in a .class editor?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Open a class file for which source is available. Press Ctrl-F. Nothing happens.
The menu item is also disabled. We should be able to search for text in a
read-only file.


*** This bug has been marked as a duplicate of 15074 ***</WithStack>
    <WithOutStack>Open a class file for which source is available. Press Ctrl-F. Nothing happens.
The menu item is also disabled. We should be able to search for text in a
read-only file.


*** This bug has been marked as a duplicate of 15074 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15040" />
    <CreationDate amount="2002-05-01 15:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Launcher doesn't detect VM crash</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build M5

If my runtime workbench session crashes, the debugger correctly detects that 
the processes are dead. However, if I try to launch a new runtime workbench, I 
get an error message telling me to close the running one first.

I thought that this might be because of the presence of a .lock file, but I 
can delete this file and the problem persists.

The only way to start a new session is to exit and restart Eclipse (the 
development workbench).

Note that I'm running a beta version of J9 for both sessions; this might be a 
contributing factor.
Interesting - if I delete the .lock file before I try to relaunch the first 
time, everything is Ok.

The problem only happens if I try to relaunch, get the error, and then delete 
the .lock file. Then I have to exit and restart.

May be related to Bug 15041
This problem was fixed post-M5 by removing the checks. PDE will not restrict 
launching in post-M5 builds.</WithStack>
    <WithOutStack>Build M5

If my runtime workbench session crashes, the debugger correctly detects that 
the processes are dead. However, if I try to launch a new runtime workbench, I 
get an error message telling me to close the running one first.

I thought that this might be because of the presence of a .lock file, but I 
can delete this file and the problem persists.

The only way to start a new session is to exit and restart Eclipse (the 
development workbench).

Note that I'm running a beta version of J9 for both sessions; this might be a 
contributing factor.
Interesting - if I delete the .lock file before I try to relaunch the first 
time, everything is Ok.

The problem only happens if I try to relaunch, get the error, and then delete 
the .lock file. Then I have to exit and restart.

May be related to Bug 15041
This problem was fixed post-M5 by removing the checks. PDE will not restrict 
launching in post-M5 builds.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15041" />
    <CreationDate amount="2002-05-01 15:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Failed PDE launch leaves entry in Debug list</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build M5

If a PDE launch fails because a runtime-workbench is already running, a 
process is still added to the launches ("Debug") view in the Debug perspective.

It is impossible to terminate this launch (the action is enabled, but does 
nothing). The only way that I've found to get rid of it is to 
choose 'Terminate and Remove'.
Does not happen in post-M5 builds.</WithStack>
    <WithOutStack>Build M5

If a PDE launch fails because a runtime-workbench is already running, a 
process is still added to the launches ("Debug") view in the Debug perspective.

It is impossible to terminate this launch (the action is enabled, but does 
nothing). The only way that I've found to get rid of it is to 
choose 'Terminate and Remove'.
Does not happen in post-M5 builds.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15042" />
    <CreationDate amount="2002-05-01 15:56:00 -0400" />
    <DupId amount="14467" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Selecting methods in members view doesn't always scroll to the method</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I have noticed a number of occasions where selecting a method in the Members
view does *not* scroll the java editor to the method (it doesn't scroll it at
all, actually), nor is the method highlighted in the left margin.

The case I have right now is:
org.eclipse.ui imported as pde binary project
Open class PageBookView.
Select method showPageRec() in the Members view.
Nothing happens.
problem is reproducable on Windows as well


*** This bug has been marked as a duplicate of 14467 ***</WithStack>
    <WithOutStack>I have noticed a number of occasions where selecting a method in the Members
view does *not* scroll the java editor to the method (it doesn't scroll it at
all, actually), nor is the method highlighted in the left margin.

The case I have right now is:
org.eclipse.ui imported as pde binary project
Open class PageBookView.
Select method showPageRec() in the Members view.
Nothing happens.
problem is reproducable on Windows as well


*** This bug has been marked as a duplicate of 14467 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15043" />
    <CreationDate amount="2002-05-01 16:25:00 -0400" />
    <DupId amount="14981" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Text field doesn't get the focus when 'Go to line' dialog box is displayed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020430
Linux Motif

When I hit [CRTL+L], the 'Go to line' dialog box is correctly displayed but the
focus is on the 'OK' button, so I have to hit [TAB] or click on the text field
to be able to enter a value.


*** This bug has been marked as a duplicate of 14981 ***</WithStack>
    <WithOutStack>Build 20020430
Linux Motif

When I hit [CRTL+L], the 'Go to line' dialog box is correctly displayed but the
focus is on the 'OK' button, so I have to hit [TAB] or click on the text field
to be able to enter a value.


*** This bug has been marked as a duplicate of 14981 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15044" />
    <CreationDate amount="2002-05-01 16:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Unable to view some non-java files in external jars</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Attached is a very simple jar. It contains 2 text files where one is at the 
root of the jar and the other is contained in a subdirectory. Create a project 
and add the jar to the Java Build Path as an External Jar. In the Packages 
View, expand the jar to see the files. Double-clicking on the root file 
(readme.txt) successfully opens a text editor. However, double-clicking on the 
file in the subdirectory (copyright.txt) results in the error:
   Cannot open Java editor on copyright.txt. Invalid path: null.

The problem seems to be in the class JarEntryFile. The path field is 
constructed from just the simple entryName, so it does not contain the actual 
path information. Thus the method getContents() fails because it is unable to 
properly locate the zip entry.

This is important to us as we need to be able to read the manifest.mf file in 
the META-INF directory of externals jars. This used to work in Eclipse 1.0.
Created attachment 734
simpe zip containing two .txt files
moving to JDT CORE for investigation
Now I am adding the package name (replacing '.' with '/') in front of the entry name. This fixed the 
problem.
Fixed. I need to way before I can release it that the patch for M5 is out.
Released in HEAD.</WithStack>
    <WithOutStack>Attached is a very simple jar. It contains 2 text files where one is at the 
root of the jar and the other is contained in a subdirectory. Create a project 
and add the jar to the Java Build Path as an External Jar. In the Packages 
View, expand the jar to see the files. Double-clicking on the root file 
(readme.txt) successfully opens a text editor. However, double-clicking on the 
file in the subdirectory (copyright.txt) results in the error:
   Cannot open Java editor on copyright.txt. Invalid path: null.

The problem seems to be in the class JarEntryFile. The path field is 
constructed from just the simple entryName, so it does not contain the actual 
path information. Thus the method getContents() fails because it is unable to 
properly locate the zip entry.

This is important to us as we need to be able to read the manifest.mf file in 
the META-INF directory of externals jars. This used to work in Eclipse 1.0.
Created attachment 734
simpe zip containing two .txt files
moving to JDT CORE for investigation
Now I am adding the package name (replacing '.' with '/') in front of the entry name. This fixed the 
problem.
Fixed. I need to way before I can release it that the patch for M5 is out.
Released in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15045" />
    <CreationDate amount="2002-05-01 16:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Project Description changes not honoured on creating project with exisiting .project file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1) Create a project foo</Line>
          <Line>2) Delete it from the workbench but not the comments</Line>
          <Line>3) Create a project description from foo/.project</Line>
          <Line>4) Set the name to bar</Line>
          <Line>5) Create the project - .project will still have the old name foo</Line>
          <Line>The name in the .project file is more of a "Hint", so the fact that it isn't</Line>
          <Line>reconciled immediately isn't a big deal.  It should be reconciled correctly on</Line>
          <Line>the next occasion when the .project needs to be written.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you create a project in a location with an existing .project file and change
the name the new name is not reflected in the .project file after creation.

STEPS
1) Create a project foo
2) Delete it from the workbench but not the comments
3) Create a project description from foo/.project
4) Set the name to bar
5) Create the project - .project will still have the old name foo
The name in the .project file is more of a "Hint", so the fact that it isn't 
reconciled immediately isn't a big deal.  It should be reconciled correctly on 
the next occasion when the .project needs to be written.

The problem in our code is that after shutting down and restarting that 
workspace, we read in the project description with the incorrect name, and now 
the project description has the wrong name.  Whenever we read the project 
description from disk, we should overwrite the description's project name with 
the correct value.
Fixed.  We don't immediately reconcile, but the project description obtained 
from the API will always contain the right name.  Reconciliation will happen on 
the next opportunity for the .project to be written.

The project description file doc describes this behaviour (that the name is a 
hint and isn't eagerly reconciled).</WithStack>
    <WithOutStack>If you create a project in a location with an existing .project file and change
the name the new name is not reflected in the .project file after creation.

STEPS
1) Create a project foo
2) Delete it from the workbench but not the comments
3) Create a project description from foo/.project
4) Set the name to bar
5) Create the project - .project will still have the old name foo
The name in the .project file is more of a "Hint", so the fact that it isn't 
reconciled immediately isn't a big deal.  It should be reconciled correctly on 
the next occasion when the .project needs to be written.

The problem in our code is that after shutting down and restarting that 
workspace, we read in the project description with the incorrect name, and now 
the project description has the wrong name.  Whenever we read the project 
description from disk, we should overwrite the description's project name with 
the correct value.
Fixed.  We don't immediately reconcile, but the project description obtained 
from the API will always contain the right name.  Reconciliation will happen on 
the next opportunity for the .project to be written.

The project description file doc describes this behaviour (that the name is a 
hint and isn't eagerly reconciled).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15046" />
    <CreationDate amount="2002-05-01 16:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Feature request - PDE should extend adding required plugins to CVS checkout</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>1) It contains fair bit of 'magic'. Whenever magic is involved, it is possible</Line>
          <Line>to be too helpful and try to do things that you are not asked to do (i.e. must</Line>
          <Line>be able to defeat it).</Line>
          <Line>2) PDE cannot guarantee that it is loaded at the time. In many scenarios,</Line>
          <Line>adding a project from the repository occurs when PDE is not yet loaded.</Line>
          <Line>Therefore, it cannot listen to resource changes because it hasn't been given a</Line>
          <Line>chance to attach as a listener.</Line>
          <Line />
          <Line>3) To ensure that a plug-in is loaded to process resource changes, builders</Line>
          <Line>must be used. However, builds run in non-UI threads and it is very tough to run</Line>
          <Line>UI code in builders. As a matter of fact, recent restructuring of PDE was done</Line>
          <Line>exactly to avoid it (PDE builders are now outside of PDE UI plug-in).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Check out a plugin from CVS into an empty workspace or one with only  a few 
plugins.

The plugin won't compile because it depends on a bunch of other plugins that 
are not in your workspace.  This is identical to what would happen if you 
imported the plugin except that when I import the plugin I would get help from 
PDE to also load required plugins.

I would like PDE to observe when a project with a PDE nature is added to my 
workspace and offer to load the required plugins (as binaries or whatever) for 
me.  It could possibly notice that a team event has occurred or it could be 
more generic and just notice whenever a project has been created in my 
workspace.
The required feature is hard to implement for the following reasons:

1) It contains fair bit of 'magic'. Whenever magic is involved, it is possible 
to be too helpful and try to do things that you are not asked to do (i.e. must 
be able to defeat it).
2) PDE cannot guarantee that it is loaded at the time. In many scenarios, 
adding a project from the repository occurs when PDE is not yet loaded. 
Therefore, it cannot listen to resource changes because it hasn't been given a 
chance to attach as a listener.

3) To ensure that a plug-in is loaded to process resource changes, builders 
must be used. However, builds run in non-UI threads and it is very tough to run 
UI code in builders. As a matter of fact, recent restructuring of PDE was done 
exactly to avoid it (PDE builders are now outside of PDE UI plug-in).

The only workable solution IMHO would require close cooperation between PDE and 
Team or at least APIs from team so that list of projects added from the 
repository can be recorded somewhere (outside of the workspace) together with 
all the required connection data necessary to restore the workspace 
automatically. That way, PDE could fetch the projects from the repository, then 
proceed to import the required binary projects. Anything else (automatic, based 
on resource changes) is very dangerous and introduces more problems than it 
solves.
ancient history.
This is no longer an issue thanks to the PDE container.  closing as wontfix.</WithStack>
    <WithOutStack>Check out a plugin from CVS into an empty workspace or one with only  a few 
plugins.

The plugin won't compile because it depends on a bunch of other plugins that 
are not in your workspace.  This is identical to what would happen if you 
imported the plugin except that when I import the plugin I would get help from 
PDE to also load required plugins.

I would like PDE to observe when a project with a PDE nature is added to my 
workspace and offer to load the required plugins (as binaries or whatever) for 
me.  It could possibly notice that a team event has occurred or it could be 
more generic and just notice whenever a project has been created in my 
workspace.
The required feature is hard to implement for the following reasons:

1) It contains fair bit of 'magic'. Whenever magic is involved, it is possible 
to be too helpful and try to do things that you are not asked to do (i.e. must 
be able to defeat it).
2) PDE cannot guarantee that it is loaded at the time. In many scenarios, 
adding a project from the repository occurs when PDE is not yet loaded. 
Therefore, it cannot listen to resource changes because it hasn't been given a 
chance to attach as a listener.

3) To ensure that a plug-in is loaded to process resource changes, builders 
must be used. However, builds run in non-UI threads and it is very tough to run 
UI code in builders. As a matter of fact, recent restructuring of PDE was done 
exactly to avoid it (PDE builders are now outside of PDE UI plug-in).

The only workable solution IMHO would require close cooperation between PDE and 
Team or at least APIs from team so that list of projects added from the 
repository can be recorded somewhere (outside of the workspace) together with 
all the required connection data necessary to restore the workspace 
automatically. That way, PDE could fetch the projects from the repository, then 
proceed to import the required binary projects. Anything else (automatic, based 
on resource changes) is very dangerous and introduces more problems than it 
solves.
ancient history.
This is no longer an issue thanks to the PDE container.  closing as wontfix.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15047" />
    <CreationDate amount="2002-05-01 16:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>boot and runtime plug-ins should be added to the plug-in path when generating build.xml</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) Fresh workspace</Line>
          <Line>2) New -&gt; Project -&gt; Plugin Project</Line>
          <Line>3) Name: foo</Line>
          <Line>4) Next -&gt; Next -&gt; Finish</Line>
          <Line>5) Right click on plugin.xml -&gt; Create plugin JARs</Line>
          <Line>6) NPE</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>build 20020501

Plug-ins usually do not need to require boot and runtime in their plugin.xml
files. Eclipse always put these plug-ins on the plug-in path.

When generating the build.xml file it is necessary to know the location of boot
and runtime. It means they have to passed to 
AbstractBuildScriptGenerator.setPluginPath(URL[]) even if the plugin.xml does
not contain them.
Aren't you getting them today? What is the scenario where you end up without 
these plug-ins in the plug-in path?
1) Fresh workspace
2) New -&gt; Project -&gt; Plugin Project
3) Name: foo
4) Next -&gt; Next -&gt; Finish
5) Right click on plugin.xml -&gt; Create plugin JARs
6) NPE

The NPE happens in PDE Build because it did not find the boot plug-in (was not 
set as plugin path). I've added code to give a better message in this case but 
boot and runtime are required for the plugin path.

If you are creating a completely empty plug-in with nothing to compile, you 
will have to manually enable external plug-ins. If you create a plug-in from a 
template (for example, Hello, World) external plug-ins will be enabled by PDE.

Your case is does not indicate a PDE error because having a completely empty 
plug-in that does not have to be compiled is only a theoretical possibility 
(not likely to happen in the real use).

Also note that plug-ins do not need to contain Java code (Doc plug-ins come to 
mind). So you should only depend on core and runtime if you need to compile, 
but not to zip the plug-in or make it part of a feature.
In the case of the empty plug-in the user has to removed the JAR entry from 
the build.properties ot remove the JAR name from the wizard. That works.

Maybe, if creating an empty plug-in, the JAR should not be added automatically 
(no default name given by the Wizard). The user would have to explicitly enter 
the JAR name.
I see... OK, I will open a different bug to handle this case by allowing the 
choice between not having the library (a non-Java plug-in and having the 
default one). The choice would be made using two radio buttons. Making a non-
Java choice would affect other places (including the jar entry in 
build.properties).</WithStack>
    <WithOutStack>build 20020501

Plug-ins usually do not need to require boot and runtime in their plugin.xml
files. Eclipse always put these plug-ins on the plug-in path.

When generating the build.xml file it is necessary to know the location of boot
and runtime. It means they have to passed to 
AbstractBuildScriptGenerator.setPluginPath(URL[]) even if the plugin.xml does
not contain them.
Aren't you getting them today? What is the scenario where you end up without 
these plug-ins in the plug-in path?
1) Fresh workspace
2) New -&gt; Project -&gt; Plugin Project
3) Name: foo
4) Next -&gt; Next -&gt; Finish
5) Right click on plugin.xml -&gt; Create plugin JARs
6) NPE

The NPE happens in PDE Build because it did not find the boot plug-in (was not 
set as plugin path). I've added code to give a better message in this case but 
boot and runtime are required for the plugin path.

If you are creating a completely empty plug-in with nothing to compile, you 
will have to manually enable external plug-ins. If you create a plug-in from a 
template (for example, Hello, World) external plug-ins will be enabled by PDE.

Your case is does not indicate a PDE error because having a completely empty 
plug-in that does not have to be compiled is only a theoretical possibility 
(not likely to happen in the real use).

Also note that plug-ins do not need to contain Java code (Doc plug-ins come to 
mind). So you should only depend on core and runtime if you need to compile, 
but not to zip the plug-in or make it part of a feature.
In the case of the empty plug-in the user has to removed the JAR entry from 
the build.properties ot remove the JAR name from the wizard. That works.

Maybe, if creating an empty plug-in, the JAR should not be added automatically 
(no default name given by the Wizard). The user would have to explicitly enter 
the JAR name.
I see... OK, I will open a different bug to handle this case by allowing the 
choice between not having the library (a non-Java plug-in and having the 
default one). The choice would be made using two radio buttons. Making a non-
Java choice would affect other places (including the jar entry in 
build.properties).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15048" />
    <CreationDate amount="2002-05-01 16:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Step Into and Step Over not working in Window 2000/1.4</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Step Into often steps into routines that have filters set.  Step over behaves 
unpredicatably, often doing a "Step Out" instead of "Step Over".
Step over problem is bug 8441.

Can you provide a specific example of a step into that occurs into a filtered 
location?
Cannot reproduce step filter problem. No test case. Closing.</WithStack>
    <WithOutStack>Step Into often steps into routines that have filters set.  Step over behaves 
unpredicatably, often doing a "Step Out" instead of "Step Over".
Step over problem is bug 8441.

Can you provide a specific example of a step into that occurs into a filtered 
location?
Cannot reproduce step filter problem. No test case. Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15049" />
    <CreationDate amount="2002-05-01 17:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>m5: open editor windows removed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I'm sorry ... I'm sure this is a duplicate.

I love everything about m5 except the loss of the "open editor windows" (Ctrl-
Shift-W) functionality.  I don't know about you, but I'm often editting a dozen 
or so windows and I need a fast way to switch between them.  This is very 
unwieldy when the editor tab view switches into scroll mode.  The open editor 
windows panel was incredibly useful and deeply missed.
We will be adding it back for M6.
We are also changing the arrow behaviour so that tabs remain compressed even 
when the arrows appear.
Note that you can use the editor switcher though (Ctrl+F6).



Closing. The Editors Dialog was added back.</WithStack>
    <WithOutStack>I'm sorry ... I'm sure this is a duplicate.

I love everything about m5 except the loss of the "open editor windows" (Ctrl-
Shift-W) functionality.  I don't know about you, but I'm often editting a dozen 
or so windows and I need a fast way to switch between them.  This is very 
unwieldy when the editor tab view switches into scroll mode.  The open editor 
windows panel was incredibly useful and deeply missed.
We will be adding it back for M6.
We are also changing the arrow behaviour so that tabs remain compressed even 
when the arrows appear.
Note that you can use the editor switcher though (Ctrl+F6).



Closing. The Editors Dialog was added back.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15050" />
    <CreationDate amount="2002-05-01 17:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cleanup Javadoc @exception tags in DOM/AST</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We need to clean up the @exception tags in the javadocs of DOM/AST APIs.
Here are the 
replacements.

$precondition-violation:null-child$ IllegalArgumentException if the 
child is null
$precondition-violation:different-ast$  IllegalArgumentException if the node 
belongs to a different AST
$precondition-violation:incorrect-child-type$  
IllegalArgumentException if the child has the incorrect node type
$precondition-
violation:not-unparented$  IllegalArgumentException if the node already has a 
parent
$postcondition-violation:ast-cycle$  IllegalArgumentException if a cycle in would be 
created

$precondition-violation:empty-identifier-list$  IllegalArgumentException if 
the list of identifiers is empty
$precondition-violation:duplicate-element$  
IllegalArgumentException if the list of contains duplicate elements
$precondition-
violation:null-element$  IllegalArgumentException if the list of contains a null 
element

$precondition-violation:invalid-java-identifier$  IllegalArgumentException if 
the identifier is invalid
$precondition-violation:invalid-comment$  
IllegalArgumentException if the comment string is invalid
$precondition-
violation:invalid-javadoc-comment$  IllegalArgumentException if the Java comment string is 
invalid
$precondition-violation:invalid-primitive-type-code$  IllegalArgumentException 
if the primitive type code is invalid
$precondition-violation:invalid-literal$  
IllegalArgumentException if the literal is invalid
$postcondition-violation:invalid-
literal$ IllegalArgumentException if the literal value cannot be converted
$precondition-
violation:illegal-argument$ IllegalArgumentException if the argument is 
incorrect
$precondition-violation:illegal-modifiers$ IllegalArgumentException if the 
modifiers are illegal
$precondition-violation:negaitve-dimensions$ 
IllegalArgumentException if the number of dimensions is negative
Fixed and released in HEAD.</WithStack>
    <WithOutStack>We need to clean up the @exception tags in the javadocs of DOM/AST APIs.
Here are the 
replacements.

$precondition-violation:null-child$ IllegalArgumentException if the 
child is null
$precondition-violation:different-ast$  IllegalArgumentException if the node 
belongs to a different AST
$precondition-violation:incorrect-child-type$  
IllegalArgumentException if the child has the incorrect node type
$precondition-
violation:not-unparented$  IllegalArgumentException if the node already has a 
parent
$postcondition-violation:ast-cycle$  IllegalArgumentException if a cycle in would be 
created

$precondition-violation:empty-identifier-list$  IllegalArgumentException if 
the list of identifiers is empty
$precondition-violation:duplicate-element$  
IllegalArgumentException if the list of contains duplicate elements
$precondition-
violation:null-element$  IllegalArgumentException if the list of contains a null 
element

$precondition-violation:invalid-java-identifier$  IllegalArgumentException if 
the identifier is invalid
$precondition-violation:invalid-comment$  
IllegalArgumentException if the comment string is invalid
$precondition-
violation:invalid-javadoc-comment$  IllegalArgumentException if the Java comment string is 
invalid
$precondition-violation:invalid-primitive-type-code$  IllegalArgumentException 
if the primitive type code is invalid
$precondition-violation:invalid-literal$  
IllegalArgumentException if the literal is invalid
$postcondition-violation:invalid-
literal$ IllegalArgumentException if the literal value cannot be converted
$precondition-
violation:illegal-argument$ IllegalArgumentException if the argument is 
incorrect
$precondition-violation:illegal-modifiers$ IllegalArgumentException if the 
modifiers are illegal
$precondition-violation:negaitve-dimensions$ 
IllegalArgumentException if the number of dimensions is negative
Fixed and released in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15051" />
    <CreationDate amount="2002-05-01 18:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Synthetic access methods are not reported to be synthetic</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="191" end="330" />
        <code>public class A010 {
	private int i = 6;
	public int foo() {
		class A 
{
			int get() {
				return i;
			}
		}
		return new A().get();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In this test case, the access$0 method is not reported as being synthetic. It should be the case. It 
seems that the problem comes from the MethodInfo.isSynthetic() method.
The test case is:
public class A010 {
	private int i = 6;
	public int foo() {
		class A 
{
			int get() {
				return i;
			}
		}
		return new A().get();
	}
}
Fix and released in HEAD.</WithStack>
    <WithOutStack>In this test case, the access$0 method is not reported as being synthetic. It should be the case. It 
seems that the problem comes from the MethodInfo.isSynthetic() method.
The test case is:
public class A010 {
	private int i = 6;
	public int foo() {
		class A 
{
			int get() {
				return i;
			}
		}
		return new A().get();
	}
}
Fix and released in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15052" />
    <CreationDate amount="2002-05-01 20:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>unnecessary creation of plugin state location</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: M5++

This is a not a big issue, but I figure I should point this out.

After a call to Plugin#getPluginPreferences(), the plugin state location will be
created, even if nothing is put in it.  This could result in a lot of empty
state location directories (does that slow anything down?).
Fixed and released.</WithStack>
    <WithOutStack>Build: M5++

This is a not a big issue, but I figure I should point this out.

After a call to Plugin#getPluginPreferences(), the plugin state location will be
created, even if nothing is put in it.  This could result in a lot of empty
state location directories (does that slow anything down?).
Fixed and released.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15053" />
    <CreationDate amount="2002-05-01 22:43:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Fragments not picked up on import</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20020501 Win2K

I was setting up my workspace (doing it "my way" of course). So I started with 
new workspace, turned off building, added my projects from repo, went to Import 
plugins from external, selected Update UI, Add all prereqs and [Finish].

Binary projects got imported, BUT the fragments (for SWT, other?) did not. I 
ended up with a bunch of errors that a normal user would find confusing. 

So, I went back and manually imported the fragments for resources.win32 and 
swt.win32. Imported OK, but errors did not get fixed.

The import needs to collect any fragments that are referencing a plugin that is 
being imported.

After I did all this, I could not get the update.ui and update.ui.forms projects 
to compile ... complaining about SWT classes missing.
So I gave up after 15 minutes of futility, deleted all projects from workspace, 
went to Import plugins, did "Select All", finish, delete the binaries for 
update, loaded projects from repo, and all was well.

The moral of the story is that "my way" does not work. The other way does. Need 
to fix if we are going to support self-hosting without importing all.
I will update the import wizard to include fragments in required plug-ins 
computation.

In the mean time, select SWT plug-in and recompute its classpath to make it 
compile.
Updated Import wizard to add fragments that belong to a plug-in in dependency 
computation.

Also fixed Preference page 'Not in Workspace' button to include fragments.</WithStack>
    <WithOutStack>20020501 Win2K

I was setting up my workspace (doing it "my way" of course). So I started with 
new workspace, turned off building, added my projects from repo, went to Import 
plugins from external, selected Update UI, Add all prereqs and [Finish].

Binary projects got imported, BUT the fragments (for SWT, other?) did not. I 
ended up with a bunch of errors that a normal user would find confusing. 

So, I went back and manually imported the fragments for resources.win32 and 
swt.win32. Imported OK, but errors did not get fixed.

The import needs to collect any fragments that are referencing a plugin that is 
being imported.

After I did all this, I could not get the update.ui and update.ui.forms projects 
to compile ... complaining about SWT classes missing.
So I gave up after 15 minutes of futility, deleted all projects from workspace, 
went to Import plugins, did "Select All", finish, delete the binaries for 
update, loaded projects from repo, and all was well.

The moral of the story is that "my way" does not work. The other way does. Need 
to fix if we are going to support self-hosting without importing all.
I will update the import wizard to include fragments in required plug-ins 
computation.

In the mean time, select SWT plug-in and recompute its classpath to make it 
compile.
Updated Import wizard to add fragments that belong to a plug-in in dependency 
computation.

Also fixed Preference page 'Not in Workspace' button to include fragments.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15054" />
    <CreationDate amount="2002-05-01 23:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>OwnerData or "virtual" Table support</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="9">
      <source_code type="multicomment">
        <location start="1795" end="1820" />
        <code>/**
 * @author Kosta
 */</code>
      </source_code>
      <source_code type="package">
        <location start="1821" end="1853" />
        <code>package org.eclipse.swt.widgets;</code>
      </source_code>
      <source_code type="import">
        <location start="1854" end="1907" />
        <code>import org.eclipse.jface.viewers.ITableLabelProvider;</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1908" end="1911" />
        <code>//</code>
      </source_code>
      <source_code type="import">
        <location start="1911" end="1951" />
        <code>import org.eclipse.swt.internal.win32.*;</code>
      </source_code>
      <source_code type="import">
        <location start="1952" end="1977" />
        <code>import org.eclipse.swt.*;</code>
      </source_code>
      <source_code type="import">
        <location start="1978" end="2012" />
        <code>import org.eclipse.swt.graphics.*;</code>
      </source_code>
      <source_code type="import">
        <location start="2013" end="2045" />
        <code>import org.eclipse.swt.events.*;</code>
      </source_code>
      <source_code type="class">
        <location start="2046" end="4341" />
        <code>public class TableVirtual extends Table {
	private ITableLabelProvider m_LabelProvider;
	public TableVirtual(Composite parent, int style) {
		super(parent, checkStyle(style));
	}
	public void setLabelProvider(ITableLabelProvider labelProvider) {
		m_LabelProvider = labelProvider;
	}
	int widgetStyle() {
		int bits = super.widgetStyle();
		bits |= 0x1000;
		return bits;
	}
	void createItem(TableItem item, int index) {
	}
	public void createItems(int cnt) {
		items = new TableItem[cnt];
		for (int i = 0; i &lt; cnt; i++) {
			LVITEM lvItem = new LVITEM();
			lvItem.iItem = i;
			lvItem.iImage = OS.I_IMAGENONE;
			lvItem.mask = OS.LVIF_IMAGE;
			//
			items[i] = new TableItem(this, SWT.NONE);
		}
		//
		OS.SendMessage(handle, 0x1000 + 47, cnt, 0);
	}
	LRESULT wmNotifyChild(int wParam, int lParam) {
		NMHDR hdr = new NMHDR();
		OS.MoveMemory(hdr, lParam, NMHDR.sizeof);
		switch (hdr.code) {
			case 0xFFFFFF4F :
				{
					NMLISTVIEW pnmlv = new NMLISTVIEW();
					OS.MoveMemory(pnmlv, lParam, 
NMLISTVIEW.sizeof);
					//
					int item = pnmlv.iSubItem;
					int subItem = pnmlv.uNewState;
					// for image support I need to change 
SWT native library
					/*if ((pnmlv.iItem &amp; OS.LVIF_IMAGE) != 
0) {
						if ((m_LabelProvider != null) 
&amp;&amp; (subItem == 0)) {
							Image image = 
m_LabelProvider.getColumnImage(new Integer(item), subItem);
							pnmlv.lParam = 
imageIndex(image);
							OS.MoveMemory(lParam, 
pnmlv, NMLISTVIEW.sizeof);
						}
					}*/
					if ((pnmlv.iItem &amp; OS.LVIF_TEXT) != 0) {
						String string;
						if (m_LabelProvider != null)
							string = 
m_LabelProvider.getColumnText(new Integer(item), subItem);
						else
							string = "";
						TCHAR buffer = new TCHAR
(getCodePage(), string, true);
						int byteCount = buffer.length() 
* TCHAR.sizeof;
						OS.MoveMemory(pnmlv.x, buffer, 
byteCount);
					}
				}
		} // switch
		return super.wmNotifyChild(wParam, lParam);
	}
	public void selectItem(int item) {
		int state = OS.SendMessage(handle, OS.LVM_GETITEMSTATE, item, 
OS.LVIS_SELECTED | OS.LVIS_FOCUSED);
		LVITEM lvItem = new LVITEM();
		lvItem.mask = OS.LVIF_STATE;
		lvItem.stateMask = OS.LVIS_SELECTED | OS.LVIS_FOCUSED;
		lvItem.state |= OS.LVIS_SELECTED | OS.LVIS_FOCUSED;
		OS.SendMessage(handle, OS.LVM_SETITEMSTATE, item, lvItem);
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- much smaller memory footprint (no TableItems allocated for each row)</Line>
          <Line>- allows images for any column</Line>
          <Line>Created attachment 5237</Line>
          <Line>A simple test application to show a virtual table with 1000,000 rows</Line>
          <Line>See also bug 36226 .</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Filling of Table works too slow.
  I need to show to user big log. Yes, I know, that
he can not to look at 10000 log lines, but I have
filters and sorts for this. But in current implementation resort
requires refill of table. And even with small table with about 1000 items
it works too slow. In any case, if I have all
log records in memory (or in file with fast access
speed) I can show this logs record to user fast with
concept of "virtual" Table.
  In Windows it is possible to use so named "virtual"
ListView, with style LVS_OWNERDATA. My quick hack of
SWT Table shows, that with this style and with
implementation of LVN_GETDISPINFO Table works much
faster (speed practically does not depend on count of items).
I think, that TableViewer with its ContentProvider
and LabelProvider is almost all what needed to implement
LVN_GETDISPINFO.
  Can you add support of virtual ListView in
Eclipse SWT/JFace?
I would like to see this happen as well. Unfortunately, we will not have time 
to do this for R2.0. We would need to investigate both the potential ways this 
could be used by the UI team, as well as the underlying support on all the 
operating systems which use native tables (Carbon (?), GTK(?), etc.) before 
deciding on an API. Then we would actually have to implement this API 
everywhere (including in the emulated implementation for photon and 
linux/motif). Given how little free time there is, and the fact that the UI 
team probably would not be able to respond to the changes at this point, it 
will have to wait.

If you want to get involved with implementing this yourself, you should start 
a discussion on the platform-swt-dev mailing list with the results of 
investigating the support on the various platforms, plus your suggested API.

Here is source code for Windows.

/**
 * @author Kosta
 */
package org.eclipse.swt.widgets;
import org.eclipse.jface.viewers.ITableLabelProvider;
//
import org.eclipse.swt.internal.win32.*;
import org.eclipse.swt.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.events.*;
public class TableVirtual extends Table {
	private ITableLabelProvider m_LabelProvider;
	public TableVirtual(Composite parent, int style) {
		super(parent, checkStyle(style));
	}
	public void setLabelProvider(ITableLabelProvider labelProvider) {
		m_LabelProvider = labelProvider;
	}
	int widgetStyle() {
		int bits = super.widgetStyle();
		bits |= 0x1000;
		return bits;
	}
	void createItem(TableItem item, int index) {
	}
	public void createItems(int cnt) {
		items = new TableItem[cnt];
		for (int i = 0; i &lt; cnt; i++) {
			LVITEM lvItem = new LVITEM();
			lvItem.iItem = i;
			lvItem.iImage = OS.I_IMAGENONE;
			lvItem.mask = OS.LVIF_IMAGE;
			//
			items[i] = new TableItem(this, SWT.NONE);
		}
		//
		OS.SendMessage(handle, 0x1000 + 47, cnt, 0);
	}
	LRESULT wmNotifyChild(int wParam, int lParam) {
		NMHDR hdr = new NMHDR();
		OS.MoveMemory(hdr, lParam, NMHDR.sizeof);
		switch (hdr.code) {
			case 0xFFFFFF4F :
				{
					NMLISTVIEW pnmlv = new NMLISTVIEW();
					OS.MoveMemory(pnmlv, lParam, 
NMLISTVIEW.sizeof);
					//
					int item = pnmlv.iSubItem;
					int subItem = pnmlv.uNewState;
					// for image support I need to change 
SWT native library
					/*if ((pnmlv.iItem &amp; OS.LVIF_IMAGE) != 
0) {
						if ((m_LabelProvider != null) 
&amp;&amp; (subItem == 0)) {
							Image image = 
m_LabelProvider.getColumnImage(new Integer(item), subItem);
							pnmlv.lParam = 
imageIndex(image);
							OS.MoveMemory(lParam, 
pnmlv, NMLISTVIEW.sizeof);
						}
					}*/
					if ((pnmlv.iItem &amp; OS.LVIF_TEXT) != 0) {
						String string;
						if (m_LabelProvider != null)
							string = 
m_LabelProvider.getColumnText(new Integer(item), subItem);
						else
							string = "";
						TCHAR buffer = new TCHAR
(getCodePage(), string, true);
						int byteCount = buffer.length() 
* TCHAR.sizeof;
						OS.MoveMemory(pnmlv.x, buffer, 
byteCount);
					}
				}
		} // switch
		return super.wmNotifyChild(wParam, lParam);
	}
	public void selectItem(int item) {
		int state = OS.SendMessage(handle, OS.LVM_GETITEMSTATE, item, 
OS.LVIS_SELECTED | OS.LVIS_FOCUSED);
		LVITEM lvItem = new LVITEM();
		lvItem.mask = OS.LVIF_STATE;
		lvItem.stateMask = OS.LVIS_SELECTED | OS.LVIS_FOCUSED;
		lvItem.state |= OS.LVIS_SELECTED | OS.LVIS_FOCUSED;
		OS.SendMessage(handle, OS.LVM_SETITEMSTATE, item, lvItem);
	}
}
We should consider this for R3.0.

Moving from Later.
Created attachment 5236
An improved version of TableVirtual

- much smaller memory footprint (no TableItems allocated for each row)
- allows images for any column
Created attachment 5237
A simple test application to show a virtual table with 1000,000 rows
See also bug 36226 .

What's the status of this PR?  Are thre plans for including some sort of 
virtual table in Eclipse 3.0?
We are hoping to get this into 3.0 but might not make it.
Fixed &gt; 20040317

Investigate SWT.VIRTUAL, SWT.SetData, Table.setItemCount() and Table.clear(). 
There is a chance we will be changing some of this behavior between now and 
3.0.  Good luck!
Really fixed.
NOTE: DO NOT USE ANY OF THE CODE THAT IS ATTACHED TO THIS BUG REPORT.  The 
virtual table is supported as a style for the regular table.</WithStack>
    <WithOutStack>Filling of Table works too slow.
  I need to show to user big log. Yes, I know, that
he can not to look at 10000 log lines, but I have
filters and sorts for this. But in current implementation resort
requires refill of table. And even with small table with about 1000 items
it works too slow. In any case, if I have all
log records in memory (or in file with fast access
speed) I can show this logs record to user fast with
concept of "virtual" Table.
  In Windows it is possible to use so named "virtual"
ListView, with style LVS_OWNERDATA. My quick hack of
SWT Table shows, that with this style and with
implementation of LVN_GETDISPINFO Table works much
faster (speed practically does not depend on count of items).
I think, that TableViewer with its ContentProvider
and LabelProvider is almost all what needed to implement
LVN_GETDISPINFO.
  Can you add support of virtual ListView in
Eclipse SWT/JFace?
I would like to see this happen as well. Unfortunately, we will not have time 
to do this for R2.0. We would need to investigate both the potential ways this 
could be used by the UI team, as well as the underlying support on all the 
operating systems which use native tables (Carbon (?), GTK(?), etc.) before 
deciding on an API. Then we would actually have to implement this API 
everywhere (including in the emulated implementation for photon and 
linux/motif). Given how little free time there is, and the fact that the UI 
team probably would not be able to respond to the changes at this point, it 
will have to wait.

If you want to get involved with implementing this yourself, you should start 
a discussion on the platform-swt-dev mailing list with the results of 
investigating the support on the various platforms, plus your suggested API.

Here is source code for Windows.

/**
 * @author Kosta
 */
package org.eclipse.swt.widgets;
import org.eclipse.jface.viewers.ITableLabelProvider;
//
import org.eclipse.swt.internal.win32.*;
import org.eclipse.swt.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.events.*;
public class TableVirtual extends Table {
	private ITableLabelProvider m_LabelProvider;
	public TableVirtual(Composite parent, int style) {
		super(parent, checkStyle(style));
	}
	public void setLabelProvider(ITableLabelProvider labelProvider) {
		m_LabelProvider = labelProvider;
	}
	int widgetStyle() {
		int bits = super.widgetStyle();
		bits |= 0x1000;
		return bits;
	}
	void createItem(TableItem item, int index) {
	}
	public void createItems(int cnt) {
		items = new TableItem[cnt];
		for (int i = 0; i &lt; cnt; i++) {
			LVITEM lvItem = new LVITEM();
			lvItem.iItem = i;
			lvItem.iImage = OS.I_IMAGENONE;
			lvItem.mask = OS.LVIF_IMAGE;
			//
			items[i] = new TableItem(this, SWT.NONE);
		}
		//
		OS.SendMessage(handle, 0x1000 + 47, cnt, 0);
	}
	LRESULT wmNotifyChild(int wParam, int lParam) {
		NMHDR hdr = new NMHDR();
		OS.MoveMemory(hdr, lParam, NMHDR.sizeof);
		switch (hdr.code) {
			case 0xFFFFFF4F :
				{
					NMLISTVIEW pnmlv = new NMLISTVIEW();
					OS.MoveMemory(pnmlv, lParam, 
NMLISTVIEW.sizeof);
					//
					int item = pnmlv.iSubItem;
					int subItem = pnmlv.uNewState;
					// for image support I need to change 
SWT native library
					/*if ((pnmlv.iItem &amp; OS.LVIF_IMAGE) != 
0) {
						if ((m_LabelProvider != null) 
&amp;&amp; (subItem == 0)) {
							Image image = 
m_LabelProvider.getColumnImage(new Integer(item), subItem);
							pnmlv.lParam = 
imageIndex(image);
							OS.MoveMemory(lParam, 
pnmlv, NMLISTVIEW.sizeof);
						}
					}*/
					if ((pnmlv.iItem &amp; OS.LVIF_TEXT) != 0) {
						String string;
						if (m_LabelProvider != null)
							string = 
m_LabelProvider.getColumnText(new Integer(item), subItem);
						else
							string = "";
						TCHAR buffer = new TCHAR
(getCodePage(), string, true);
						int byteCount = buffer.length() 
* TCHAR.sizeof;
						OS.MoveMemory(pnmlv.x, buffer, 
byteCount);
					}
				}
		} // switch
		return super.wmNotifyChild(wParam, lParam);
	}
	public void selectItem(int item) {
		int state = OS.SendMessage(handle, OS.LVM_GETITEMSTATE, item, 
OS.LVIS_SELECTED | OS.LVIS_FOCUSED);
		LVITEM lvItem = new LVITEM();
		lvItem.mask = OS.LVIF_STATE;
		lvItem.stateMask = OS.LVIS_SELECTED | OS.LVIS_FOCUSED;
		lvItem.state |= OS.LVIS_SELECTED | OS.LVIS_FOCUSED;
		OS.SendMessage(handle, OS.LVM_SETITEMSTATE, item, lvItem);
	}
}
We should consider this for R3.0.

Moving from Later.
Created attachment 5236
An improved version of TableVirtual

- much smaller memory footprint (no TableItems allocated for each row)
- allows images for any column
Created attachment 5237
A simple test application to show a virtual table with 1000,000 rows
See also bug 36226 .

What's the status of this PR?  Are thre plans for including some sort of 
virtual table in Eclipse 3.0?
We are hoping to get this into 3.0 but might not make it.
Fixed &gt; 20040317

Investigate SWT.VIRTUAL, SWT.SetData, Table.setItemCount() and Table.clear(). 
There is a chance we will be changing some of this behavior between now and 
3.0.  Good luck!
Really fixed.
NOTE: DO NOT USE ANY OF THE CODE THAT IS ATTACHED TO THIS BUG REPORT.  The 
virtual table is supported as a style for the regular table.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15055" />
    <CreationDate amount="2002-05-02 01:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Column Header Height in a Table or Table Tree SWT widget</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Is there some API which allows the user to query for the height of a Column 
Header in a Table or Table Tree SWT widget ?
We should add this. Talk to SN about what the API should be called.

Masaoud, we are checking if this API can be implemented in all platforms,
apparently yes. In a short time a definitely answer will be post.

A possible name for this API is:
getHeaderHeight( )



The API can be done for Windows, Motif, QNX. For GTK I'm going to test it soon.

About the TreeTable, if we add getHeaderHeight() for Table, I guess is not a 
problem if you use myTreeTable.getTable.getHeaderHeight().
I mean, adding getHeaderHeight() is enough, right ?



Masaoud, just to let you know, the API can be implemented in all platforms :)
Next week I will get SH to review the code and then released it.

Masaoud,

Before we add this new API, can you please give us a description of what it is 
you are trying to do with the header height.  The reason I would like to know 
what scenario the API will be used in is because the scenario will allow us to 
determine if we have provided the correct behavior.

Hi Veronika,

   I have two TableTree objects on a shell (separated by a Draw2d 
LightWeightSystem) and I need to draw some visual objects (Draw2d 
Figures) on the LightWeightSystem (between the TableTrees). 
This visual information depicts some mapping information between 
the contents of the TableTrees.

                          Table Column 
                         Header  Height  
   TableTree1                  |                TableTree2
|----------------|             |            |----------------|
| Tree |    |    |  |_________/ \________|  | Tree |    |    |
|  Col |Col2|Col3|  |                    |  |  Col |Col2|Col3|
|------|----|----|                          |------|----|----|
|      |    |    |------------------------&gt; |      |    |    |
|------|----|----|                          |------|----|----|
|      |    |    |                          |      |    |    |
|------|----|----|                          |------|----|----|
|      |    |    |----------\               |      |    |    |
|------|----|----|           \              |------|----|----|
|      |    |    |            \-----------&gt; |      |    |    |
|----------------|                          |----------------|

                  |________________________|
                              |
                      LightWeightSystem

I need to consider the height of the Table Column Header while I 
calculate the start and end 'Y' positions of the Points for these
visual objects.

Hope this helps.
 
Thanks and regards,
Masaoud
Fixed</WithStack>
    <WithOutStack>Is there some API which allows the user to query for the height of a Column 
Header in a Table or Table Tree SWT widget ?
We should add this. Talk to SN about what the API should be called.

Masaoud, we are checking if this API can be implemented in all platforms,
apparently yes. In a short time a definitely answer will be post.

A possible name for this API is:
getHeaderHeight( )



The API can be done for Windows, Motif, QNX. For GTK I'm going to test it soon.

About the TreeTable, if we add getHeaderHeight() for Table, I guess is not a 
problem if you use myTreeTable.getTable.getHeaderHeight().
I mean, adding getHeaderHeight() is enough, right ?



Masaoud, just to let you know, the API can be implemented in all platforms :)
Next week I will get SH to review the code and then released it.

Masaoud,

Before we add this new API, can you please give us a description of what it is 
you are trying to do with the header height.  The reason I would like to know 
what scenario the API will be used in is because the scenario will allow us to 
determine if we have provided the correct behavior.

Hi Veronika,

   I have two TableTree objects on a shell (separated by a Draw2d 
LightWeightSystem) and I need to draw some visual objects (Draw2d 
Figures) on the LightWeightSystem (between the TableTrees). 
This visual information depicts some mapping information between 
the contents of the TableTrees.

                          Table Column 
                         Header  Height  
   TableTree1                  |                TableTree2
|----------------|             |            |----------------|
| Tree |    |    |  |_________/ \________|  | Tree |    |    |
|  Col |Col2|Col3|  |                    |  |  Col |Col2|Col3|
|------|----|----|                          |------|----|----|
|      |    |    |------------------------&gt; |      |    |    |
|------|----|----|                          |------|----|----|
|      |    |    |                          |      |    |    |
|------|----|----|                          |------|----|----|
|      |    |    |----------\               |      |    |    |
|------|----|----|           \              |------|----|----|
|      |    |    |            \-----------&gt; |      |    |    |
|----------------|                          |----------------|

                  |________________________|
                              |
                      LightWeightSystem

I need to consider the height of the Table Column Header while I 
calculate the start and end 'Y' positions of the Points for these
visual objects.

Hope this helps.
 
Thanks and regards,
Masaoud
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15056" />
    <CreationDate amount="2002-05-02 01:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Combo is smaller than Text when same widthHint is specified</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="238" end="914" />
        <code>public class WidthHintTest {
	Shell shell;

public static void main(String[] args) {
	WidthHintTest test = new WidthHintTest();
	test.open();
}
void open() {
	Display display = new Display();
	shell = new Shell(display);
	shell.setLayout(new GridLayout());	

	GridData gridData;
	Text testText = new Text(shell, SWT.BORDER);
	gridData = new GridData();
	gridData.widthHint = 100;
	testText.setLayoutData(gridData);
	
	Combo testCombo = new Combo(shell, SWT.BORDER);
	gridData = new GridData();
	gridData.widthHint = 100;
	testCombo.setLayoutData(gridData);

	shell.open();
	
	while (!shell.isDisposed() ) {
		if ( !display.readAndDispatch() ) {
			display.sleep();
		}
	}	
}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Env. : Red Hat 7.2

Total width of Combo is smaller than that of Text when same widthHint is 
specified.
So edit part of Combo is very narrow.
While edit part of Combo is almost same size as Text in Windows environment.

Here is sample.

public class WidthHintTest {
	Shell shell;

public static void main(String[] args) {
	WidthHintTest test = new WidthHintTest();
	test.open();
}
void open() {
	Display display = new Display();
	shell = new Shell(display);
	shell.setLayout(new GridLayout());	

	GridData gridData;
	Text testText = new Text(shell, SWT.BORDER);
	gridData = new GridData();
	gridData.widthHint = 100;
	testText.setLayoutData(gridData);
	
	Combo testCombo = new Combo(shell, SWT.BORDER);
	gridData = new GridData();
	gridData.widthHint = 100;
	testCombo.setLayoutData(gridData);

	shell.open();
	
	while (!shell.isDisposed() ) {
		if ( !display.readAndDispatch() ) {
			display.sleep();
		}
	}	
}
}
This is not a bug. We use the native widgets for both Text and Combo. They are 
the sizes they are implemented to be by the code in the window system. This is 
one of the reasons why specifying fixed sizes for widgets will get you in 
trouble if you intend to run a layout on multiple window systems.</WithStack>
    <WithOutStack>Env. : Red Hat 7.2

Total width of Combo is smaller than that of Text when same widthHint is 
specified.
So edit part of Combo is very narrow.
While edit part of Combo is almost same size as Text in Windows environment.

Here is sample.

public class WidthHintTest {
	Shell shell;

public static void main(String[] args) {
	WidthHintTest test = new WidthHintTest();
	test.open();
}
void open() {
	Display display = new Display();
	shell = new Shell(display);
	shell.setLayout(new GridLayout());	

	GridData gridData;
	Text testText = new Text(shell, SWT.BORDER);
	gridData = new GridData();
	gridData.widthHint = 100;
	testText.setLayoutData(gridData);
	
	Combo testCombo = new Combo(shell, SWT.BORDER);
	gridData = new GridData();
	gridData.widthHint = 100;
	testCombo.setLayoutData(gridData);

	shell.open();
	
	while (!shell.isDisposed() ) {
		if ( !display.readAndDispatch() ) {
			display.sleep();
		}
	}	
}
}
This is not a bug. We use the native widgets for both Text and Combo. They are 
the sizes they are implemented to be by the code in the window system. This is 
one of the reasons why specifying fixed sizes for widgets will get you in 
trouble if you intend to run a layout on multiple window systems.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15057" />
    <CreationDate amount="2002-05-02 02:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>getSystemColor(SWT.COLOR_WIDGET_FOREGROUND) always returns black</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="288" end="1183" />
        <code>public class ColorTest {
	Shell shell;

public static void main(String[] args) {
	ColorTest test = new ColorTest();
	test.open();
}
void open() {
	Display display = new Display();
	shell = new Shell(display);
	shell.setLayout(new GridLayout());	

	final Color bColor = display.getSystemColor
(SWT.COLOR_WIDGET_BACKGROUND);
	final Color fColor = display.getSystemColor
(SWT.COLOR_WIDGET_FOREGROUND);

	Canvas canvas = new Canvas(shell, SWT.NONE);
	canvas.addPaintListener(new PaintListener() {
		public void paintControl(PaintEvent e) {
			GC gc = e.gc;
			gc.setBackground(bColor);
			gc.fillRectangle(e.x, e.y, e.width, e.height);
			gc.setForeground(fColor);
			gc.drawString("test", 0, 0);
		}
	});
	
	Button button = new Button(shell, SWT.PUSH);
	button.setText("test");
	
	shell.open();
	
	while (!shell.isDisposed() ) {
		if ( !display.readAndDispatch() ) {
			display.sleep();
		}
	}	
}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Env. : Red Hat 7.2

Display.getSystemColor(SWT.COLOR_WIDGET_FOREGROUND) returns always black when 
system color is customized.

[Preperation]
Make .Xdefaults file in user's home directory and put the following two lines 
into it.
*background: blue
*foreground: yellow

Here is a sample.

public class ColorTest {
	Shell shell;

public static void main(String[] args) {
	ColorTest test = new ColorTest();
	test.open();
}
void open() {
	Display display = new Display();
	shell = new Shell(display);
	shell.setLayout(new GridLayout());	

	final Color bColor = display.getSystemColor
(SWT.COLOR_WIDGET_BACKGROUND);
	final Color fColor = display.getSystemColor
(SWT.COLOR_WIDGET_FOREGROUND);

	Canvas canvas = new Canvas(shell, SWT.NONE);
	canvas.addPaintListener(new PaintListener() {
		public void paintControl(PaintEvent e) {
			GC gc = e.gc;
			gc.setBackground(bColor);
			gc.fillRectangle(e.x, e.y, e.width, e.height);
			gc.setForeground(fColor);
			gc.drawString("test", 0, 0);
		}
	});
	
	Button button = new Button(shell, SWT.PUSH);
	button.setText("test");
	
	shell.open();
	
	while (!shell.isDisposed() ) {
		if ( !display.readAndDispatch() ) {
			display.sleep();
		}
	}	
}
}
Apparently, we are currently setting the foreground to be the same as the 
border color for composites. This is incorrect.

Fixed &gt; 0506.  The default foreground colour is now set to the foreground of 
the text widget, which makes more sense than setting it to the border colour.

Verified with F2</WithStack>
    <WithOutStack>Env. : Red Hat 7.2

Display.getSystemColor(SWT.COLOR_WIDGET_FOREGROUND) returns always black when 
system color is customized.

[Preperation]
Make .Xdefaults file in user's home directory and put the following two lines 
into it.
*background: blue
*foreground: yellow

Here is a sample.

public class ColorTest {
	Shell shell;

public static void main(String[] args) {
	ColorTest test = new ColorTest();
	test.open();
}
void open() {
	Display display = new Display();
	shell = new Shell(display);
	shell.setLayout(new GridLayout());	

	final Color bColor = display.getSystemColor
(SWT.COLOR_WIDGET_BACKGROUND);
	final Color fColor = display.getSystemColor
(SWT.COLOR_WIDGET_FOREGROUND);

	Canvas canvas = new Canvas(shell, SWT.NONE);
	canvas.addPaintListener(new PaintListener() {
		public void paintControl(PaintEvent e) {
			GC gc = e.gc;
			gc.setBackground(bColor);
			gc.fillRectangle(e.x, e.y, e.width, e.height);
			gc.setForeground(fColor);
			gc.drawString("test", 0, 0);
		}
	});
	
	Button button = new Button(shell, SWT.PUSH);
	button.setText("test");
	
	shell.open();
	
	while (!shell.isDisposed() ) {
		if ( !display.readAndDispatch() ) {
			display.sleep();
		}
	}	
}
}
Apparently, we are currently setting the foreground to be the same as the 
border color for composites. This is incorrect.

Fixed &gt; 0506.  The default foreground colour is now set to the foreground of 
the text widget, which makes more sense than setting it to the border colour.

Verified with F2</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15058" />
    <CreationDate amount="2002-05-02 03:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>tab and validateEdit interact poorly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>0. Team/Share Project/Pessimistic Repository provider</Line>
          <Line>1. Open a read-only file in this project.</Line>
          <Line>2. Select a few lines of text.</Line>
          <Line>3. Press tab.</Line>
          <Line>I expect the file to be checked out and the tab to cause the selected content</Line>
          <Line>to be shiftedRight.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>M5(+patches)

0. Team/Share Project/Pessimistic Repository provider
1. Open a read-only file in this project.
2. Select a few lines of text.
3. Press tab.
I expect the file to be checked out and the tab to cause the selected content 
to be shiftedRight.  

The file is checked out, however the tab replaces the selection (deleting the 
selection)
Shifting on TAB is now handled as any other manipulating text action. It is 
disabled for read-only files. Build 20020508. Propose to go with this behavior 
for 2.0.
Fine by me.
Closed.</WithStack>
    <WithOutStack>M5(+patches)

0. Team/Share Project/Pessimistic Repository provider
1. Open a read-only file in this project.
2. Select a few lines of text.
3. Press tab.
I expect the file to be checked out and the tab to cause the selected content 
to be shiftedRight.  

The file is checked out, however the tab replaces the selection (deleting the 
selection)
Shifting on TAB is now handled as any other manipulating text action. It is 
disabled for read-only files. Build 20020508. Propose to go with this behavior 
for 2.0.
Fine by me.
Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15059" />
    <CreationDate amount="2002-05-02 03:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Initializing constructor creation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="581" end="948" />
        <code>class TFieldDef {
	private String m_Name;
	private int m_Type;
	private int m_Size;
	/**
	 */
	public TFieldDef(String Name, int Type, int Size) {
		m_Name = Name;
		m_Type = Type;
		m_Size = Size;
	}
	/**
	 */
	public String GetName() {
		return m_Name;
	}
	/**
	 */
	public int GetType() {
		return m_Type;
	}
	/**
	 */
	public int GetSize() {
		return m_Size;
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Fairly often I need to create infomational
objects, like TFieldDef, TTelegramDef, etc. Each
of them contains set of fields, which should be
initialized in constructor. Currently I shold write
this constructor manually and also manually copy
values from constructor arguments to fields. This is
not very comfortable. ;-)
  It would be very good, if you add "Generate initialization
constructor" in Outline, like "Generate gettter and setter". I.e.
when user selects several fields and choise this menu item, it
should generate constructor for selected fields.
  For example:
public
class TFieldDef {
	private String m_Name;
	private int m_Type;
	private int m_Size;
	/**
	 */
	public TFieldDef(String Name, int Type, int Size) {
		m_Name = Name;
		m_Type = Type;
		m_Size = Size;
	}
	/**
	 */
	public String GetName() {
		return m_Name;
	}
	/**
	 */
	public int GetType() {
		return m_Type;
	}
	/**
	 */
	public int GetSize() {
		return m_Size;
	}
}
defer
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Fairly often I need to create infomational
objects, like TFieldDef, TTelegramDef, etc. Each
of them contains set of fields, which should be
initialized in constructor. Currently I shold write
this constructor manually and also manually copy
values from constructor arguments to fields. This is
not very comfortable. ;-)
  It would be very good, if you add "Generate initialization
constructor" in Outline, like "Generate gettter and setter". I.e.
when user selects several fields and choise this menu item, it
should generate constructor for selected fields.
  For example:
public
class TFieldDef {
	private String m_Name;
	private int m_Type;
	private int m_Size;
	/**
	 */
	public TFieldDef(String Name, int Type, int Size) {
		m_Name = Name;
		m_Type = Type;
		m_Size = Size;
	}
	/**
	 */
	public String GetName() {
		return m_Name;
	}
	/**
	 */
	public int GetType() {
		return m_Type;
	}
	/**
	 */
	public int GetSize() {
		return m_Size;
	}
}
defer
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15060" />
    <CreationDate amount="2002-05-02 04:15:00 -0400" />
    <DupId amount="14848" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Quick fix: Generate method does not generate static methods</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="320" end="615" />
        <code>public static void constructGui() {
    ...
    JButton ButtonGenerate = new JButton("Generate");
    ButtonGenerate.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            generateSourceCode(); // PROBLEM OCCURS HERE
        }
    });
    ...
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1) an instance method for the anonymous type</Line>
          <Line>2) a static method for the outer type</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If you have a call to an unexistent method in the body of a static method, quick
fix generates an object method, instead of a static one.
works for me in 20020501
Well, actually I recognized that the problem is a somewhat specific one, sorry
for incorrectly generalizing it.

The problem occurs in something like that:

public static void constructGui() {
    ...
    JButton ButtonGenerate = new JButton("Generate");
    ButtonGenerate.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            generateSourceCode(); // PROBLEM OCCURS HERE
        }
    });
    ...
}

When you compile this code without having a generateSourceCode() method, it
fails with a compile error. Then, when you apply quick fix, it incorrectly
generates an object method, probably because the inner class method is not static.

quick fix should make more than one suggestion in this case:
1) an instance method for the anonymous type
2) a static method for the outer type


*** This bug has been marked as a duplicate of 14848 ***</WithStack>
    <WithOutStack>If you have a call to an unexistent method in the body of a static method, quick
fix generates an object method, instead of a static one.
works for me in 20020501
Well, actually I recognized that the problem is a somewhat specific one, sorry
for incorrectly generalizing it.

The problem occurs in something like that:

public static void constructGui() {
    ...
    JButton ButtonGenerate = new JButton("Generate");
    ButtonGenerate.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            generateSourceCode(); // PROBLEM OCCURS HERE
        }
    });
    ...
}

When you compile this code without having a generateSourceCode() method, it
fails with a compile error. Then, when you apply quick fix, it incorrectly
generates an object method, probably because the inner class method is not static.

quick fix should make more than one suggestion in this case:
1) an instance method for the anonymous type
2) a static method for the outer type


*** This bug has been marked as a duplicate of 14848 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15061" />
    <CreationDate amount="2002-05-02 04:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>IllegalArgumentException in ASTNode.setSourceRange</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330862919">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:1459)</Frame>
          <Frame depth="1">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)</Frame>
          <Frame depth="2">org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:228)</Frame>
          <Frame depth="3">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:492)</Frame>
          <Frame depth="4">org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:233)</Frame>
          <Frame depth="5">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:168)</Frame>
          <Frame depth="6">org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:73)</Frame>
          <Frame depth="7">org.eclipse.jdt.core.dom.AST.parseCompilationUnit(AST.java:373)</Frame>
          <Frame depth="8">org.eclipse.jdt.core.dom.AST.parseCompilationUnit(AST.java:246)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.ui.text.correction.LocalCorrectionsSubProcessor.addCastProposals(LocalCorrectionsSubProcessor.java:48)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorrections(JavaCorrectionProcessor.java:190)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeCompletionProposals(JavaCorrectionProcessor.java:127)</Frame>
          <Frame depth="12">org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1205)</Frame>
          <Frame depth="13">org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:104)</Frame>
          <Frame depth="14">org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$3(CompletionProposalPopup.java:103)</Frame>
          <Frame depth="15">org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run(CompletionProposalPopup.java:72)</Frame>
          <Frame depth="16">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)</Frame>
          <Frame depth="17">org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:67)</Frame>
          <Frame depth="18">org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1140)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionSourceViewer.doOperation(JavaCorrectionSourceViewer.java:47)</Frame>
          <Frame depth="20">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:219)</Frame>
          <Frame depth="21">org.eclipse.ui.texteditor.TextOperationAction.run(TextOperationAction.java:88)</Frame>
          <Frame depth="22">org.eclipse.ui.texteditor.RetargetTextEditorAction.run(RetargetTextEditorAction.java:103)</Frame>
          <Frame depth="23">org.eclipse.jface.action.Action.runWithEvent(Action.java:590)</Frame>
          <Frame depth="24">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="25">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="26">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="27">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.run(Workbench.java:866)</Frame>
          <Frame depth="34">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:733)</Frame>
          <Frame depth="35">org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)</Frame>
          <Frame depth="36">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.basicRun(Main.java:162)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.run(Main.java:588)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.UIMain.main(UIMain.java:52)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="3">
      <source_code type="class">
        <location start="246" end="262" />
        <code>public class A {</code>
      </source_code>
      <source_code type="functioncall">
        <location start="292" end="317" />
        <code>int doQuery(boolean x);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="322" end="366" />
        <code>public void setX(boolean x) {
		 {
		z
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- The inner interface is required</Line>
          <Line>- Theres an opening bracket in the method</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20020501

If you build an AST on this code (containing errors), an 
IllegalArgumentException is thrown.

To reproduce: Select 'z' and do 'Surround with try/catch'

Note
- The inner interface is required
- Theres an opening bracket in the method

public class A {
	public static interface X {
		int doQuery(boolean x);
	}

	public void setX(boolean x) {
		 {
		z
	}
}

java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:1459)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:633)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations
(ASTConverter.java:228)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:492)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations
(ASTConverter.java:233)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:73)
	at org.eclipse.jdt.core.dom.AST.parseCompilationUnit(AST.java:373)
	at org.eclipse.jdt.core.dom.AST.parseCompilationUnit(AST.java:246)
	at 
org.eclipse.jdt.internal.ui.text.correction.LocalCorrectionsSubProcessor.addCast
Proposals(LocalCorrectionsSubProcessor.java:48)
	at 
org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.collectCorre
ctions(JavaCorrectionProcessor.java:190)
	at 
org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionProcessor.computeCompl
etionProposals(JavaCorrectionProcessor.java:127)
	at 
org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals
(ContentAssistant.java:1205)
	at 
org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals
(CompletionProposalPopup.java:104)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$3
(CompletionProposalPopup.java:103)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$1.run
(CompletionProposalPopup.java:72)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)
	at 
org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals
(CompletionProposalPopup.java:67)
	at 
org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions
(ContentAssistant.java:1140)
	at 
org.eclipse.jdt.internal.ui.text.correction.JavaCorrectionSourceViewer.doOperati
on(JavaCorrectionSourceViewer.java:47)
	at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer
.doOperation(CompilationUnitEditor.java:219)
	at org.eclipse.ui.texteditor.TextOperationAction.run
(TextOperationAction.java:88)
	at org.eclipse.ui.texteditor.RetargetTextEditorAction.run
(RetargetTextEditorAction.java:103)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:866)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:733)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:162)
	at org.eclipse.core.launcher.Main.run(Main.java:588)
	at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)
The bodyEnd field of the AbstractMethodDeclaration doQuery was not set properly.
Fixed and released in HEAD. In your example, the source end of the method setX and the source end of 
the type A are the same due to the missing brace.

Now this doesn't fail anymore, but you cannot surround 'z' with try/catch. It 
reports that the selection doesn't cover a set of statements.
*** Bug 15107 has been marked as a duplicate of this bug. ***
sure, of course. this was just an example that created an AST that crashes.</WithStack>
    <WithOutStack>20020501

If you build an AST on this code (containing errors), an 
IllegalArgumentException is thrown.

To reproduce: Select 'z' and do 'Surround with try/catch'

Note
- The inner interface is required
- Theres an opening bracket in the method

public class A {
	public static interface X {
		int doQuery(boolean x);
	}

	public void setX(boolean x) {
		 {
		z
	}
}


The bodyEnd field of the AbstractMethodDeclaration doQuery was not set properly.
Fixed and released in HEAD. In your example, the source end of the method setX and the source end of 
the type A are the same due to the missing brace.

Now this doesn't fail anymore, but you cannot surround 'z' with try/catch. It 
reports that the selection doesn't cover a set of statements.
*** Bug 15107 has been marked as a duplicate of this bug. ***
sure, of course. this was just an example that created an AST that crashes.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15062" />
    <CreationDate amount="2002-05-02 04:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>total freeze on catching up</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>20020425
no idea how to reproduce - i caught up with some projects and then wanted to 
review incomming changes in our project.
eclipse froze for good - i had to kill the vm.
see the screen dump
Created attachment 736
screendump
I can't reproduce. It looks like a programmer error on our part, but I can't
pin-point. I've made some changes recently to our output/input streams that
perform the actualy I/0 that could of affected this.

Please raise another PR if this occurs again.</WithStack>
    <WithOutStack>20020425
no idea how to reproduce - i caught up with some projects and then wanted to 
review incomming changes in our project.
eclipse froze for good - i had to kill the vm.
see the screen dump
Created attachment 736
screendump
I can't reproduce. It looks like a programmer error on our part, but I can't
pin-point. I've made some changes recently to our output/input streams that
perform the actualy I/0 that could of affected this.

Please raise another PR if this occurs again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15063" />
    <CreationDate amount="2002-05-02 05:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>debug line dissapears</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>eclipse version M5

when i debug remote application ( didn't check it on any other debug type ) and 
the runtime enters debug line i see bark blue, when i move my cursor anywhere 
the line is not highlited anymore
don't know if it's a bug or a feature :)
The debugger selects the associated source line when it suspends at a 
breakpoint, or after step, etc. If you change the selection in the text editor, 
the debugger selection will disappear. This is a feature (if I understand your 
use case properly).</WithStack>
    <WithOutStack>eclipse version M5

when i debug remote application ( didn't check it on any other debug type ) and 
the runtime enters debug line i see bark blue, when i move my cursor anywhere 
the line is not highlited anymore
don't know if it's a bug or a feature :)
The debugger selects the associated source line when it suspends at a 
breakpoint, or after step, etc. If you change the selection in the text editor, 
the debugger selection will disappear. This is a feature (if I understand your 
use case properly).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15064" />
    <CreationDate amount="2002-05-02 05:36:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Instanceof evaluation is broken</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>when i'm trying to inspect code like

someObject instanceof SomeClass

it is not put to inspect tab
In the latest code I get the following error when doing an instanceof 
expression:

fFull instanceof Vector
	Evaluation failed. Reason(s):
An exception occurred: class java.util.EmptyStackException

We introduced a bug to instanceof evaluations with the recent fix to "null
instanceof ..."

Fixed.
Please verify.
Verified.</WithStack>
    <WithOutStack>when i'm trying to inspect code like

someObject instanceof SomeClass

it is not put to inspect tab
In the latest code I get the following error when doing an instanceof 
expression:

fFull instanceof Vector
	Evaluation failed. Reason(s):
An exception occurred: class java.util.EmptyStackException

We introduced a bug to instanceof evaluations with the recent fix to "null
instanceof ..."

Fixed.
Please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15065" />
    <CreationDate amount="2002-05-02 05:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[infrastructure] Organize Imports blocks Eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437330862935">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.core.index.impl.IndexerOutput.addRef(IndexerOutput.java(Compiled Code))</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.index.impl.IndexerOutput.addRef(IndexerOutput.java(Compiled Code))</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.index.impl.IndexerOutput.addRef(IndexerOutput.java(Compiled Code))</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addConstructorReference(AbstractIndexer.java:67)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.acceptConstructorReference(SourceIndexerRequestor.java:37)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(SourceElementParser.java(Compiled Code))</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(SourceElementParser.java:963)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(SourceElementParser.java:967)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceElementRequestor(SourceElementParser.java:594)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1036)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.indexFile(SourceIndexer.java:67)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.index(AbstractIndexer.java:558)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.core.index.impl.Index.add(Index.java:88)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.core.search.indexing.AddCompilationUnitToIndex.execute(AddCompilationUnitToIndex.java:54)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java(Compiled Code))</Frame>
          <Frame depth="15">java.lang.Thread.run(Thread.java:512)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437330862935">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.core.index.impl.InMemoryIndex.getSortedWordEntries(InMemoryIndex.java(Compiled Code))</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.index.impl.SimpleIndexInput.open(SimpleIndexInput.java:112)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.index.impl.MergeFactory.merge(MergeFactory.java:72)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.index.impl.Index.merge(Index.java:231)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.index.impl.Index.save(Index.java:341)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndexes(IndexManager.java:396)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.search.indexing.IndexManager.notifyIdle(IndexManager.java(Compiled Code))</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobManager.java(Compiled Code))</Frame>
          <Frame depth="8">java.lang.Thread.run(Thread.java:512)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Problem is, i cannot supply an example for the problem... 

the problem occurs, if you work with eclipse for a time, then do an organzie
imports, normaly it works, but it happens, that after some time do it on another
source, eclipse is hanging... not using a lot of cpu, only hangs... you have to
kill the java runtime and start again...
Can you launch with console (-consoleLog), and if it occurs again please try to 
hit ctrl-Pause in the console, so as to force a Java core dump (won't crash 
Eclipse) providing some indication about what offending code is running.


i've done like you proposed and opened eclipse with a console log. 
but i'm sorry.. ctrl-&gt;pause didn't work on my station :-) perhaps kill -3  ??? 

but there's comming a stacktrace, and after the stacktrace occurs, when i do a
organize import, eclipse hangs... 


and here it is...



java.lang.ClassCastException
        at org.eclipse.jdt.internal.core.index.impl.IndexerOutput.addRef(Indexer
Output.java(Compiled Code))
        at org.eclipse.jdt.internal.core.index.impl.IndexerOutput.addRef(Indexer
Output.java(Compiled Code))
        at org.eclipse.jdt.internal.core.index.impl.IndexerOutput.addRef(Indexer
Output.java(Compiled Code))
        at org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.addCons
tructorReference(AbstractIndexer.java:67)
        at org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor.
acceptConstructorReference(SourceIndexerRequestor.java:37)
        at org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceEle
mentRequestor(SourceElementParser.java(Compiled Code))
        at org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceEle
mentRequestor(SourceElementParser.java:963)
        at org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceEle
mentRequestor(SourceElementParser.java:967)
        at org.eclipse.jdt.internal.compiler.SourceElementParser.notifySourceEle
mentRequestor(SourceElementParser.java:594)
        at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilatio
nUnit(SourceElementParser.java:1036)
        at org.eclipse.jdt.internal.core.search.indexing.SourceIndexer.indexFile
(SourceIndexer.java:67)
        at org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer.index(A
bstractIndexer.java:558)
        at org.eclipse.jdt.internal.core.index.impl.Index.add(Index.java:88)
        at org.eclipse.jdt.internal.core.search.indexing.AddCompilationUnitToInd
ex.execute(AddCompilationUnitToIndex.java:54)
        at org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobMan
ager.java(Compiled Code))
        at java.lang.Thread.run(Thread.java:512)
java.lang.ClassCastException
        at org.eclipse.jdt.internal.core.index.impl.InMemoryIndex.getSortedWordE
ntries(InMemoryIndex.java(Compiled Code))
        at org.eclipse.jdt.internal.core.index.impl.SimpleIndexInput.open(Simple
IndexInput.java:112)
        at org.eclipse.jdt.internal.core.index.impl.MergeFactory.merge(MergeFact
ory.java:72)
        at org.eclipse.jdt.internal.core.index.impl.Index.merge(Index.java:231)
        at org.eclipse.jdt.internal.core.index.impl.Index.save(Index.java:341)
        at org.eclipse.jdt.internal.core.search.indexing.IndexManager.saveIndexe
s(IndexManager.java:396)
        at org.eclipse.jdt.internal.core.search.indexing.IndexManager.notifyIdle
(IndexManager.java(Compiled Code))
        at org.eclipse.jdt.internal.core.search.processing.JobManager.run(JobMan
ager.java(Compiled Code))
        at java.lang.Thread.run(Thread.java:512)





Defer. Offending stack frame doesn't contain any cast... might be a VM artifact.
Need steps to reproduce...
Reopening
Clearing resolution
Indexer is being improved for 2.1
I can reproduce this by adding jEdit as a project from
cvs.sourceforge.net/cvsroot/jedit login anoymous
Add HEAD/jEdit as a java project called jEdit
delete the stuff under the jars folder/package (not important)
open org.gjt.sp.jedit.gui
select organize imports

It hangs on me after asking to perform a cvs edit to which I say yes (even
though I dont have cvs write access)

To reproduce it I force end eclipse from the task manager, reopen it, refresh
the project and organize imports.

If I select no to performing a cvs edit things seems to work out better. Strange
though that I get the perform cvs edit on seemingly random files. Some I can
change some I can't...

I reproduced it 3 times in a row on my AMD XP 2000, 512 mb ram, win2k, running
Eclipse 2.1 M4


Lasse: Can you please attach the project as an attachment to this PR... I 
cannot get connected to sourceforge.net from my machine (firewall problems).
Lasse: Can you please attach the project as an attachment to this PR.
Removing milestone, not enough information to address for RC1
I've seen this on win NT 4 ==&gt; please change OS to All.
It was with 2.1 RC2, inexisting version in the list, please change to 2.1.

What I did was that I reorganized the imports from existing code (the operation
made was then mainly to remove excessive imports). I then deleted all the
imports and reorganized again. Eclipse just hung taking all the CPU time. Only
exit was to kill it.
Sorry I never got around to submit the workspace that provoked the error.

For what it is worth I can't reproduce it anymore on 3.0 M2

It is not a consistent test since the jEdit project has changed a lot since it
provoked the error, but it doesn't seem like they have cleaned up their imports.

I think you should assume that it is fixed unless you get another report on it.
I didn't reproduce the error since 2.1 is out. I suggest you mark it as
WORKSFORME and it will be reopened if needed.
Reopen if you reproduce it again, in which case please provide a stack dump 
from the console.</WithStack>
    <WithOutStack>Problem is, i cannot supply an example for the problem... 

the problem occurs, if you work with eclipse for a time, then do an organzie
imports, normaly it works, but it happens, that after some time do it on another
source, eclipse is hanging... not using a lot of cpu, only hangs... you have to
kill the java runtime and start again...
Can you launch with console (-consoleLog), and if it occurs again please try to 
hit ctrl-Pause in the console, so as to force a Java core dump (won't crash 
Eclipse) providing some indication about what offending code is running.


i've done like you proposed and opened eclipse with a console log. 
but i'm sorry.. ctrl-&gt;pause didn't work on my station :-) perhaps kill -3  ??? 

but there's comming a stacktrace, and after the stacktrace occurs, when i do a
organize import, eclipse hangs... 


and here it is...









Defer. Offending stack frame doesn't contain any cast... might be a VM artifact.
Need steps to reproduce...
Reopening
Clearing resolution
Indexer is being improved for 2.1
I can reproduce this by adding jEdit as a project from
cvs.sourceforge.net/cvsroot/jedit login anoymous
Add HEAD/jEdit as a java project called jEdit
delete the stuff under the jars folder/package (not important)
open org.gjt.sp.jedit.gui
select organize imports

It hangs on me after asking to perform a cvs edit to which I say yes (even
though I dont have cvs write access)

To reproduce it I force end eclipse from the task manager, reopen it, refresh
the project and organize imports.

If I select no to performing a cvs edit things seems to work out better. Strange
though that I get the perform cvs edit on seemingly random files. Some I can
change some I can't...

I reproduced it 3 times in a row on my AMD XP 2000, 512 mb ram, win2k, running
Eclipse 2.1 M4


Lasse: Can you please attach the project as an attachment to this PR... I 
cannot get connected to sourceforge.net from my machine (firewall problems).
Lasse: Can you please attach the project as an attachment to this PR.
Removing milestone, not enough information to address for RC1
I've seen this on win NT 4 ==&gt; please change OS to All.
It was with 2.1 RC2, inexisting version in the list, please change to 2.1.

What I did was that I reorganized the imports from existing code (the operation
made was then mainly to remove excessive imports). I then deleted all the
imports and reorganized again. Eclipse just hung taking all the CPU time. Only
exit was to kill it.
Sorry I never got around to submit the workspace that provoked the error.

For what it is worth I can't reproduce it anymore on 3.0 M2

It is not a consistent test since the jEdit project has changed a lot since it
provoked the error, but it doesn't seem like they have cleaned up their imports.

I think you should assume that it is fixed unless you get another report on it.
I didn't reproduce the error since 2.1 is out. I suggest you mark it as
WORKSFORME and it will be reopened if needed.
Reopen if you reproduce it again, in which case please provide a stack dump 
from the console.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15066" />
    <CreationDate amount="2002-05-02 06:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>NullPointerException in AbstractTextEditor when importing plugins</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>20020501
I updated all my plugins. Suddenly all editors closed (although most of them 
were on files in source projects that have not changed).

NullPointerException in the log:

!STACK java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.handleEditorInputChanged
(AbstractTextEditor.java:1704)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handleEditorInputChanged
(AbstractTextEditor.java:1722)
	at org.eclipse.ui.texteditor.AbstractTextEditor.sanityCheckState
(AbstractTextEditor.java:1850)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor$ActivationListener.handleActivation
(AbstractTextEditor.java:531)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor$ActivationListener.partActivated
(AbstractTextEditor.java:489)
	at org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java
(Compiled Code))
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.ui.internal.PartListenerList.firePartActivated
(PartListenerList.java(Compiled Code))
	at org.eclipse.ui.internal.PartListenerList.firePartActivated
(PartListenerList.java(Compiled Code))
	at org.eclipse.ui.internal.WWinPartService.partActivated
(WWinPartService.java:102)
	at org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java
(Compiled Code))
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.ui.internal.PartListenerList.firePartActivated
(PartListenerList.java(Compiled Code))
	at org.eclipse.ui.internal.PartListenerList.firePartActivated
(PartListenerList.java(Compiled Code))
	at org.eclipse.ui.internal.WorkbenchPage.firePartActivated
(WorkbenchPage.java:990)
	at org.eclipse.ui.internal.WorkbenchPage.setActivePart
(WorkbenchPage.java:1959)
	at org.eclipse.ui.internal.WorkbenchPage.activate
(WorkbenchPage.java:331)
	at org.eclipse.ui.internal.WorkbenchPage.closeEditor
(WorkbenchPage.java:696)
	at org.eclipse.ui.texteditor.AbstractTextEditor$8.run
(AbstractTextEditor.java:1543)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.block
(ModalContext.java(Compiled Code))
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:720)
	at 
org.eclipse.pde.internal.ui.wizards.imports.PluginImportWizard.performFinish
(PluginImportWizard.java:100)
	at org.eclipse.jface.wizard.WizardDialog.finishPressed
(WizardDialog.java:577)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed
(WizardDialog.java:312)
	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:379)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java
(Compiled Code))
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled 
Code))
	at org.eclipse.jface.window.Window.open(Window.java:525)
	at org.eclipse.ui.actions.ImportResourcesAction.run
(ImportResourcesAction.java:117)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java(Compiled Code))
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java(Compiled Code))
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java(Compiled Code))
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:866)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:733)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:162)
	at org.eclipse.core.launcher.Main.run(Main.java:588)
	at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)
Added guard to code. However, we don't have a repeatable case yet to test this 
behavior. Lowered priority. Marked as REMIND.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>20020501
I updated all my plugins. Suddenly all editors closed (although most of them 
were on files in source projects that have not changed).

NullPointerException in the log:

!STACK java.lang.NullPointerException
	at org.eclipse.ui.texteditor.AbstractTextEditor.handleEditorInputChanged
(AbstractTextEditor.java:1704)
	at org.eclipse.ui.texteditor.AbstractTextEditor.handleEditorInputChanged
(AbstractTextEditor.java:1722)
	at org.eclipse.ui.texteditor.AbstractTextEditor.sanityCheckState
(AbstractTextEditor.java:1850)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor$ActivationListener.handleActivation
(AbstractTextEditor.java:531)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor$ActivationListener.partActivated
(AbstractTextEditor.java:489)
	at org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java
(Compiled Code))
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.ui.internal.PartListenerList.firePartActivated
(PartListenerList.java(Compiled Code))
	at org.eclipse.ui.internal.PartListenerList.firePartActivated
(PartListenerList.java(Compiled Code))
	at org.eclipse.ui.internal.WWinPartService.partActivated
(WWinPartService.java:102)
	at org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java
(Compiled Code))
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.ui.internal.PartListenerList.firePartActivated
(PartListenerList.java(Compiled Code))
	at org.eclipse.ui.internal.PartListenerList.firePartActivated
(PartListenerList.java(Compiled Code))
	at org.eclipse.ui.internal.WorkbenchPage.firePartActivated
(WorkbenchPage.java:990)
	at org.eclipse.ui.internal.WorkbenchPage.setActivePart
(WorkbenchPage.java:1959)
	at org.eclipse.ui.internal.WorkbenchPage.activate
(WorkbenchPage.java:331)
	at org.eclipse.ui.internal.WorkbenchPage.closeEditor
(WorkbenchPage.java:696)
	at org.eclipse.ui.texteditor.AbstractTextEditor$8.run
(AbstractTextEditor.java:1543)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.block
(ModalContext.java(Compiled Code))
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:258)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:720)
	at 
org.eclipse.pde.internal.ui.wizards.imports.PluginImportWizard.performFinish
(PluginImportWizard.java:100)
	at org.eclipse.jface.wizard.WizardDialog.finishPressed
(WizardDialog.java:577)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed
(WizardDialog.java:312)
	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:379)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java
(Compiled Code))
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled 
Code))
	at org.eclipse.jface.window.Window.open(Window.java:525)
	at org.eclipse.ui.actions.ImportResourcesAction.run
(ImportResourcesAction.java:117)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java(Compiled Code))
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java(Compiled Code))
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java(Compiled Code))
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:866)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:733)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:162)
	at org.eclipse.core.launcher.Main.run(Main.java:588)
	at org.eclipse.core.launcher.UIMain.main(UIMain.java:52)
Added guard to code. However, we don't have a repeatable case yet to test this 
behavior. Lowered priority. Marked as REMIND.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15067" />
    <CreationDate amount="2002-05-02 06:07:00 -0400" />
    <DupId amount="1591" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>code optimization removes breakpoints as well</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="341" end="578" />
        <code>public class IgnoredBreakpoint {

	private static final boolean fgDebug= true;

	public static void main(String[] arguments) {
		if (fgDebug) // set breakpoint on this line
			System.out.println("foo");
		System.out.println("bar");
	}

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If I set a breakpoint on a line which gets optimized away (beacause of
constant folding, dead code elimination, etc.), the break point is ignored
as well. In the case below, I want to set a breakpoint on the first statement,
to see if I enter the method. I don't want to care if the first
statement will be opmitized away or not.

---8&lt;---

public class IgnoredBreakpoint {

	private static final boolean fgDebug= true;

	public static void main(String[] arguments) {
		if (fgDebug) // set breakpoint on this line
			System.out.println("foo");
		System.out.println("bar");
	}

}
Breakpoint source -&gt; pc mapping is done by JDT/Debug. The information encoded 
in the classfile attributes should be enough to address this one.
Do not intend to address for 2.0
Dup.


*** This bug has been marked as a duplicate of 1591 ***</WithStack>
    <WithOutStack>If I set a breakpoint on a line which gets optimized away (beacause of
constant folding, dead code elimination, etc.), the break point is ignored
as well. In the case below, I want to set a breakpoint on the first statement,
to see if I enter the method. I don't want to care if the first
statement will be opmitized away or not.

---8&lt;---

public class IgnoredBreakpoint {

	private static final boolean fgDebug= true;

	public static void main(String[] arguments) {
		if (fgDebug) // set breakpoint on this line
			System.out.println("foo");
		System.out.println("bar");
	}

}
Breakpoint source -&gt; pc mapping is done by JDT/Debug. The information encoded 
in the classfile attributes should be enough to address this one.
Do not intend to address for 2.0
Dup.


*** This bug has been marked as a duplicate of 1591 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15068" />
    <CreationDate amount="2002-05-02 06:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Evaluation failed: Got error code in reply: 23</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build 20020501
Target: J9 04/30/2002

After stepping in org.eclipse.jdt.internal.core.Buffer.isReadOnly(), I tried to 
evaluate "this.file.isReadOnly()" and got the following message:
	Evaluation failed. Reason(s):
An exception occurred: class com.sun.jdi.InternalException - Got error code in 
reply: 23
After debugging this, it appears to be a J9 bug. Trying to find a simpler test case.
We've determined that this is, in fact, a J9 bug. A bug report has been filed
against J9.
Closing.</WithStack>
    <WithOutStack>Build 20020501
Target: J9 04/30/2002

After stepping in org.eclipse.jdt.internal.core.Buffer.isReadOnly(), I tried to 
evaluate "this.file.isReadOnly()" and got the following message:
	Evaluation failed. Reason(s):
An exception occurred: class com.sun.jdi.InternalException - Got error code in 
reply: 23
After debugging this, it appears to be a J9 bug. Trying to find a simpler test case.
We've determined that this is, in fact, a J9 bug. A bug report has been filed
against J9.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15069" />
    <CreationDate amount="2002-05-02 06:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 98" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Scrapbook Page: "Unable to obtain an executation context"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="97" end="127" />
        <code>System.out.println ("Test");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="787" end="821" />
        <code>System.out.println ("test");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. created new project with the name "Test" (used default project content),</Line>
          <Line>3. created "Test.jpage" (in default package)</Line>
          <Line>4. Wrote</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I'm using Eclipse 2.0 build 20010321. I'm using JDK 1.3.1.

When I go to start simple statement:
  System.out.println ("Test");
from scrapbook page I get error with title "Problems evaluating expression" and 
information "Evaluation failed: internal error - unable to obtain an execution 
context".
Moving to JDT/Debug for comment.
Could this be a duplicat of bug# 12636? Do you have spaces in your project name?
This bug is not a duplicate for 12636.

Yes, I have spaces in project name.
Remove the spaces from your project name to see if it works. If so, this is a 
duplicate (and we have fixed the problem in more recent builds).
I did following steps:
1. created new project with the name "Test" (used default project content),
3. created "Test.jpage" (in default package)
4. Wrote 
      System.out.println ("test");
   and I have the same error.

With release from November 2001 I could start the scrapbook.

This problem may be solved - please try the latest integration build (20020501).
Please re-open if this is still a problem in the latest integration build 
(20020508).</WithStack>
    <WithOutStack>I'm using Eclipse 2.0 build 20010321. I'm using JDK 1.3.1.

When I go to start simple statement:
  System.out.println ("Test");
from scrapbook page I get error with title "Problems evaluating expression" and 
information "Evaluation failed: internal error - unable to obtain an execution 
context".
Moving to JDT/Debug for comment.
Could this be a duplicat of bug# 12636? Do you have spaces in your project name?
This bug is not a duplicate for 12636.

Yes, I have spaces in project name.
Remove the spaces from your project name to see if it works. If so, this is a 
duplicate (and we have fixed the problem in more recent builds).
I did following steps:
1. created new project with the name "Test" (used default project content),
3. created "Test.jpage" (in default package)
4. Wrote 
      System.out.println ("test");
   and I have the same error.

With release from November 2001 I could start the scrapbook.

This problem may be solved - please try the latest integration build (20020501).
Please re-open if this is still a problem in the latest integration build 
(20020508).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15070" />
    <CreationDate amount="2002-05-02 06:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Whole source shown instead of selected element</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="2050" end="2158" />
        <code>public class X {
	public static void main(String[] args) {
		System.out.println("Hello"); // breakpoint
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="15">
        <Lines>
          <Line>1. Start a new workspace</Line>
          <Line>2. Preferences-&gt;Perspectives-&gt;Open in a new window</Line>
          <Line>3. Open Debug perspective</Line>
          <Line>4. Close Outline view</Line>
          <Line>5. Save As... Debug (overwrite existing Debug perspective)</Line>
          <Line>6. Close Debug perspective</Line>
          <Line>7. Open Java perspective</Line>
          <Line>8. Create a Java project Test</Line>
          <Line>9. Create the following cu in Test:</Line>
          <Line />
          <Line>10. Put a breakpoint where indicated</Line>
          <Line>11. Click on 'Show source of selected element'</Line>
          <Line>12. Debug As... Java Application</Line>
          <Line>Observe: The Debugger perspective opens in a new window, and when the</Line>
          <Line>breakpoint is hit, the whole source is shown.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build 20020501

When a thread is suspended, selecting a stack frame will open a new editor if 
not already opened. If the 'Show source of selected element only' option is 
enabled, it still opens the editor on the whole source. It is only when you 
give focus to the editor that it shows the source of the method only (which is 
very disturbing, especially when double-clicking to add a breakpoint it never 
adds it where you want).

Search had the same problem, and fixed it lately (see bug 7921). Would it be 
possible to have the same fix (whatever it is) ?
please investigate
We are using the same method calls as search...and low and behold it appears to 
work in 20020501?  So again sorry Jerome I cannot reproduce your problem 
(although I know it existed before see bug 8379).
What I am seeing (with help from Jerome..thanks!):
If a new editor is opened by selecting the stack frame, the editor is
opened and shows the source of the selected element.
If an existing editor is reused, the whole source is shown.

So we are better than we were in the past.
Defer
Resolving to later.
Can we reopen this one? The biggest annoyance is when you try to set a 
breakpoint by double-clicking on the left bar, the breakpoint is never set 
where you double-clicked.
I am not seeing the problem. I do see a problem with our "instruction pointer". 
It does not work properly when only showing the source of the selected element. 
What was the magic Darin (S) used to make this happen? (I will make a new bug 
for the instruction pointer problem).
I'm not sure yet, but it might be related to the fact that I closed the Outline 
view in the Debugger perspective. I will try to find reproducable steps.
That's it: the missing Outline view makes it happen:
1. Start a new workspace
2. Preferences-&gt;Perspectives-&gt;Open in a new window
3. Open Debug perspective
4. Close Outline view
5. Save As... Debug (overwrite existing Debug perspective)
6. Close Debug perspective
7. Open Java perspective
8. Create a Java project Test
9. Create the following cu in Test:
public class X {
	public static void main(String[] args) {
		System.out.println("Hello"); // breakpoint
	}
}
10. Put a breakpoint where indicated
11. Click on 'Show source of selected element'
12. Debug As... Java Application
Observe: The Debugger perspective opens in a new window, and when the 
breakpoint is hit, the whole source is shown.

If you skip step 4 and 5, then only the source of the method is shown.
This seems to be a more general problem. It also happens with a Search 
perspective. Entered bug 26936.
Seems to work in 3.1
works for me</WithStack>
    <WithOutStack>Build 20020501

When a thread is suspended, selecting a stack frame will open a new editor if 
not already opened. If the 'Show source of selected element only' option is 
enabled, it still opens the editor on the whole source. It is only when you 
give focus to the editor that it shows the source of the method only (which is 
very disturbing, especially when double-clicking to add a breakpoint it never 
adds it where you want).

Search had the same problem, and fixed it lately (see bug 7921). Would it be 
possible to have the same fix (whatever it is) ?
please investigate
We are using the same method calls as search...and low and behold it appears to 
work in 20020501?  So again sorry Jerome I cannot reproduce your problem 
(although I know it existed before see bug 8379).
What I am seeing (with help from Jerome..thanks!):
If a new editor is opened by selecting the stack frame, the editor is
opened and shows the source of the selected element.
If an existing editor is reused, the whole source is shown.

So we are better than we were in the past.
Defer
Resolving to later.
Can we reopen this one? The biggest annoyance is when you try to set a 
breakpoint by double-clicking on the left bar, the breakpoint is never set 
where you double-clicked.
I am not seeing the problem. I do see a problem with our "instruction pointer". 
It does not work properly when only showing the source of the selected element. 
What was the magic Darin (S) used to make this happen? (I will make a new bug 
for the instruction pointer problem).
I'm not sure yet, but it might be related to the fact that I closed the Outline 
view in the Debugger perspective. I will try to find reproducable steps.
That's it: the missing Outline view makes it happen:
1. Start a new workspace
2. Preferences-&gt;Perspectives-&gt;Open in a new window
3. Open Debug perspective
4. Close Outline view
5. Save As... Debug (overwrite existing Debug perspective)
6. Close Debug perspective
7. Open Java perspective
8. Create a Java project Test
9. Create the following cu in Test:
public class X {
	public static void main(String[] args) {
		System.out.println("Hello"); // breakpoint
	}
}
10. Put a breakpoint where indicated
11. Click on 'Show source of selected element'
12. Debug As... Java Application
Observe: The Debugger perspective opens in a new window, and when the 
breakpoint is hit, the whole source is shown.

If you skip step 4 and 5, then only the source of the method is shown.
This seems to be a more general problem. It also happens with a Search 
perspective. Entered bug 26936.
Seems to work in 3.1
works for me</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15071" />
    <CreationDate amount="2002-05-02 07:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>convert line delimiters - one os missing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>i think 'dos' should be changed to 'dos/windows' 
makes it easier to use for people who don't know what 'dos' is

btw: is there nothing for other supported os'? like qnx?
should be changed to just windows.

We should also provide a forth option to change the delimiter to the current 
platform convention (e.g. the line.separator property)
QNX is a realtime UNIX. I suppose it uses \n.
I don't know any modern operating system, which does support other line 
delimiters in text files.

The default delimiter should be probed and mark the corresponding menu item.
fixed &gt;= 20020506
reopened
not fixed for other text editors - only for java editor
Works for me for eclipse starting from workspace. It's just not in the plugin 
export.</WithStack>
    <WithOutStack>i think 'dos' should be changed to 'dos/windows' 
makes it easier to use for people who don't know what 'dos' is

btw: is there nothing for other supported os'? like qnx?
should be changed to just windows.

We should also provide a forth option to change the delimiter to the current 
platform convention (e.g. the line.separator property)
QNX is a realtime UNIX. I suppose it uses \n.
I don't know any modern operating system, which does support other line 
delimiters in text files.

The default delimiter should be probed and mark the corresponding menu item.
fixed &gt;= 20020506
reopened
not fixed for other text editors - only for java editor
Works for me for eclipse starting from workspace. It's just not in the plugin 
export.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15072" />
    <CreationDate amount="2002-05-02 07:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>missing mnemonics in editor context menu</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>quick fix
surround with try/catch
fixed &gt; 20020514</WithStack>
    <WithOutStack>quick fix
surround with try/catch
fixed &gt; 20020514</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15073" />
    <CreationDate amount="2002-05-02 07:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>missing '...' on 'change sharing' button</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20020501
... should be appended to the button label - it always opens a dialog
Already fixed.</WithStack>
    <WithOutStack>20020501
... should be appended to the button label - it always opens a dialog
Already fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15074" />
    <CreationDate amount="2002-05-02 07:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Find disabled in readonly editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020501

If you open a java editor on a readonly file (e.g. on a class file with source 
attached), you cannot use find as it is disabled.
This was an urgent M5 fix.
As a workaround use incremental search or find next.

At least class files with read only source should be handled differently than 
read only files.
*** Bug 15039 has been marked as a duplicate of this bug. ***
Just my 2 cents: we use PVCS as the version control tool. Most of our .java  
files are read only. The only one read/write are the ones we have checked out.
We still want to be able to search in the read only files.

I don't really understand Eric's comment? Why is the find menu disabled? Is it 
because you can also do replace through the same dialog and one cannot do 
replace in read only files? In that case, you could disable just the replace 
buttons in the dialog.
Build 20020507.</WithStack>
    <WithOutStack>Build 20020501

If you open a java editor on a readonly file (e.g. on a class file with source 
attached), you cannot use find as it is disabled.
This was an urgent M5 fix.
As a workaround use incremental search or find next.

At least class files with read only source should be handled differently than 
read only files.
*** Bug 15039 has been marked as a duplicate of this bug. ***
Just my 2 cents: we use PVCS as the version control tool. Most of our .java  
files are read only. The only one read/write are the ones we have checked out.
We still want to be able to search in the read only files.

I don't really understand Eric's comment? Why is the find menu disabled? Is it 
because you can also do replace through the same dialog and one cannot do 
replace in read only files? In that case, you could disable just the replace 
buttons in the dialog.
Build 20020507.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15075" />
    <CreationDate amount="2002-05-02 07:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>cvs syncronize with repository doesn;t work correctly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>i have some file changed in

dir/sub_dir/sub_sub_dir/SomeClass
dir/sub_dir/sub_sub_dir/sub_sub_sub_dir/SomeOtherClass

when i make syncronize with repository on dir and sub_dir, SomeClass and 
SomeOtherClass was not found as changed file
syncronize with repository from sub_sub_dir return SomeClass ad changed files
but after i commited SomeClass in syncronize with repository view 
SomeOtherClass was displayed as changed

sorry for such complex schema :-) but that's what i have
if i wrote something wrong
i will change dir,sub_dir, SomeClass ... and so on with real names
i inspected the bug
take a look at

http://bugs.eclipse.org/bugs/show_bug.cgi?id=15093</WithStack>
    <WithOutStack>i have some file changed in

dir/sub_dir/sub_sub_dir/SomeClass
dir/sub_dir/sub_sub_dir/sub_sub_sub_dir/SomeOtherClass

when i make syncronize with repository on dir and sub_dir, SomeClass and 
SomeOtherClass was not found as changed file
syncronize with repository from sub_sub_dir return SomeClass ad changed files
but after i commited SomeClass in syncronize with repository view 
SomeOtherClass was displayed as changed

sorry for such complex schema :-) but that's what i have
if i wrote something wrong
i will change dir,sub_dir, SomeClass ... and so on with real names
i inspected the bug
take a look at

http://bugs.eclipse.org/bugs/show_bug.cgi?id=15093</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15076" />
    <CreationDate amount="2002-05-02 07:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>platform.cfg.lock added to install directory</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020501

Since this build, a platform.cfg.lock file is added to the directory where 
eclipse is installed when you start it up.

With some configurations, this install directory could be read-only and this 
would cause problems.
This also prevents you from running 2 different instances of eclipse (ie. 2 
different workspaces).
*** Bug 15137 has been marked as a duplicate of this bug. ***
*** Bug 15178 has been marked as a duplicate of this bug. ***
build 20020510, win2000 sp2, jdk 1.4.0
The file platform.cfg.lock is placed in workspace,
but sometimes Eclipse does not remove/rename it to
platform.cfg which makes imposible to start Eclipse next
time.
The config support was changed and no longer does this in F1. Closing.</WithStack>
    <WithOutStack>Build 20020501

Since this build, a platform.cfg.lock file is added to the directory where 
eclipse is installed when you start it up.

With some configurations, this install directory could be read-only and this 
would cause problems.
This also prevents you from running 2 different instances of eclipse (ie. 2 
different workspaces).
*** Bug 15137 has been marked as a duplicate of this bug. ***
*** Bug 15178 has been marked as a duplicate of this bug. ***
build 20020510, win2000 sp2, jdk 1.4.0
The file platform.cfg.lock is placed in workspace,
but sometimes Eclipse does not remove/rename it to
platform.cfg which makes imposible to start Eclipse next
time.
The config support was changed and no longer does this in F1. Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15077" />
    <CreationDate amount="2002-05-02 08:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Dialogs] Can't validate ListSelectionDialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Even with a subclass it is not possible to control the enablement of the OK
button (viewer is private).

I would like to disable the OK button if the selection is empty. The luxury
solution would alllow me to set a validator but an additional constructor
parameter (allowEmptySelection) would help too.
Dani, we need to focus on more critical PRs.
If you want to make the changes, we can fold them in.
We're also on thight schedule. Could you add a protected getter for "listViewer"
then I could hook a listener in an anonymous subclass.

I've added protected CheckboxTableViewer getViewer().
Marking this PR as later for the validator work.
Reopen for investigation
The problem with adding a validator is that there is no method of feedback in 
the ListSelectionDialog - i.e. if you decide that OK should not be enabled the 
user needs to be warned and the is no appropriate message are in the dialog.

There should now be suffecient API for children who have more complete 
reporting facilities to do what they need.
Marking closed</WithStack>
    <WithOutStack>Even with a subclass it is not possible to control the enablement of the OK
button (viewer is private).

I would like to disable the OK button if the selection is empty. The luxury
solution would alllow me to set a validator but an additional constructor
parameter (allowEmptySelection) would help too.
Dani, we need to focus on more critical PRs.
If you want to make the changes, we can fold them in.
We're also on thight schedule. Could you add a protected getter for "listViewer"
then I could hook a listener in an anonymous subclass.

I've added protected CheckboxTableViewer getViewer().
Marking this PR as later for the validator work.
Reopen for investigation
The problem with adding a validator is that there is no method of feedback in 
the ListSelectionDialog - i.e. if you decide that OK should not be enabled the 
user needs to be warned and the is no appropriate message are in the dialog.

There should now be suffecient API for children who have more complete 
reporting facilities to do what they need.
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15078" />
    <CreationDate amount="2002-05-02 08:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>cannot remove 'read-only' flag</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>20020501 + latest
make a cu read-only
you cannot make it writable again!
works for me, please provide more detailed steps
i see it everytime - on the latest
I can reproduce it in my target workspace, but I cannot reproduce it in my 
development workspace that runs the full 20020508.

The problem occurs in the target workspace in the Navigator on in a non-Java 
project for a non-Java file. It isn't Java related.

The file hasn't changed its status on the file system. When changing the read-
only status in Explorer the property page shows the proper status.

Moving one layer down.
Cannot replicate in 20020508 with our current HEAD stream loaded. I will check 
again in build 20020514 when it arrives.
Works in build 20020515</WithStack>
    <WithOutStack>20020501 + latest
make a cu read-only
you cannot make it writable again!
works for me, please provide more detailed steps
i see it everytime - on the latest
I can reproduce it in my target workspace, but I cannot reproduce it in my 
development workspace that runs the full 20020508.

The problem occurs in the target workspace in the Navigator on in a non-Java 
project for a non-Java file. It isn't Java related.

The file hasn't changed its status on the file system. When changing the read-
only status in Explorer the property page shows the proper status.

Moving one layer down.
Cannot replicate in 20020508 with our current HEAD stream loaded. I will check 
again in build 20020514 when it arrives.
Works in build 20020515</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15079" />
    <CreationDate amount="2002-05-02 08:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[HELP] Hover help should display shortcut key binding if available</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>It would be handy if the hover help also showed the short cut key for the 
action.
Other products have this feature, which does help in learning about the product.
Should consider in v3.
Reopen for investigation
There are no plans for the UI team to work on this defect until higher priority 
items are addressed. If you are interested in working on this defect please let 
us know on the ui team's mailing list.
Look at ActionContributionItem.update.  Bear in mind that the accelerator to 
show may not be the same as the accelerator set in the Action due to key 
binding customizations.
Use actionContributionItem.getParent().getOverrides().getAcceleratorText
(actionContributionItem).

See bug 28072 for the context menu case.

*** Bug 35860 has been marked as a duplicate of this bug. ***
Isn't this one done now in 3.0, under user accomodations?
There are currently no plans to work on this feature</WithStack>
    <WithOutStack>It would be handy if the hover help also showed the short cut key for the 
action.
Other products have this feature, which does help in learning about the product.
Should consider in v3.
Reopen for investigation
There are no plans for the UI team to work on this defect until higher priority 
items are addressed. If you are interested in working on this defect please let 
us know on the ui team's mailing list.
Look at ActionContributionItem.update.  Bear in mind that the accelerator to 
show may not be the same as the accelerator set in the Action due to key 
binding customizations.
Use actionContributionItem.getParent().getOverrides().getAcceleratorText
(actionContributionItem).

See bug 28072 for the context menu case.

*** Bug 35860 has been marked as a duplicate of this bug. ***
Isn't this one done now in 3.0, under user accomodations?
There are currently no plans to work on this feature</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15080" />
    <CreationDate amount="2002-05-02 08:55:00 -0400" />
    <DupId amount="14937" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Windows Explorer and TextPad hangs while running Eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I am currently running the integration build of May 1.
I observed the following problem first in the integration build of April 25.

I have TextPad installed which adds a context menu item
"TextPad" to the Windows Explorer.

When I try to open a document using this context menu
while Eclipse is running Windows Explorer fails to respond
and TextPad cannot start and open the document.

When Eclipse is closed, Windows Explorer returns to normal
responding state and TextPad immediately starts and opens
the document.


*** This bug has been marked as a duplicate of 14937 ***</WithStack>
    <WithOutStack>I am currently running the integration build of May 1.
I observed the following problem first in the integration build of April 25.

I have TextPad installed which adds a context menu item
"TextPad" to the Windows Explorer.

When I try to open a document using this context menu
while Eclipse is running Windows Explorer fails to respond
and TextPad cannot start and open the document.

When Eclipse is closed, Windows Explorer returns to normal
responding state and TextPad immediately starts and opens
the document.


*** This bug has been marked as a duplicate of 14937 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15081" />
    <CreationDate amount="2002-05-02 09:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JavaConventions.validateClasspath allows nesting source folders</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20020501
JavaConventions.validateClasspath allows the following classpath

source entry: MyProj
source entry: MyProj/src
output location: MyProj/src

is this ok?
No this should be rejected.
Fixed.</WithStack>
    <WithOutStack>20020501
JavaConventions.validateClasspath allows the following classpath

source entry: MyProj
source entry: MyProj/src
output location: MyProj/src

is this ok?
No this should be rejected.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15082" />
    <CreationDate amount="2002-05-02 09:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cannot Share a project if a version already exists in the repository</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Import org.eclipse.uoi from source</Line>
          <Line>2) Share with dev.eclipse.org</Line>
          <Line>3) You can't as there is a name conflict.</Line>
          <Line>Fixed</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you have edited a project that is not under CVS control in your workspace 
and wish to merge with the one in the repository you cannot Share it. Share 
should allow the option to share with the existing one if you wish.

STEPS
1) Import org.eclipse.uoi from source
2) Share with dev.eclipse.org
3) You can't as there is a name conflict.
Fixed</WithStack>
    <WithOutStack>If you have edited a project that is not under CVS control in your workspace 
and wish to merge with the one in the repository you cannot Share it. Share 
should allow the option to share with the existing one if you wish.

STEPS
1) Import org.eclipse.uoi from source
2) Share with dev.eclipse.org
3) You can't as there is a name conflict.
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15083" />
    <CreationDate amount="2002-05-02 09:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Cannot rename field</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) select fValue1 in the class junit.samples.SimpleTest</Line>
          <Line>2) Refactor&gt;Rename Element</Line>
          <Line>3) enter fValue1CHANGED</Line>
          <Line>-&gt;the precondition checking reports a failure:</Line>
          <Line>"another name shadows access to the renamed variable"</Line>
          <Line>worksforme on 20020501 vanilla as well as on the latest latest</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>JUnit set-up
1) select fValue1 in the class junit.samples.SimpleTest
2) Refactor&gt;Rename Element
3) enter fValue1CHANGED
-&gt;the precondition checking reports a failure:
    "another name shadows access to the renamed variable"
worksforme on 20020501 vanilla as well as on the latest latest</WithStack>
    <WithOutStack>JUnit set-up
1) select fValue1 in the class junit.samples.SimpleTest
2) Refactor&gt;Rename Element
3) enter fValue1CHANGED
-&gt;the precondition checking reports a failure:
    "another name shadows access to the renamed variable"
worksforme on 20020501 vanilla as well as on the latest latest</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15084" />
    <CreationDate amount="2002-05-02 09:29:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Problem with cancel behavior of Working set selection dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="8">
        <Lines>
          <Line>1. Create a Java working set named "a" (press OK)</Line>
          <Line>2. Open the Working Set dialog, select "a", then Edit</Line>
          <Line>3. Rename the "a" to "aa", press Finish - DON'T press OK</Line>
          <Line>4. Add a new Resource working set called "a" press Finish - DONT press OK</Line>
          <Line>5. Now press CANCEL</Line>
          <Line>6. Open the Working Set dialog, select "a", then Edit</Line>
          <Line>==&gt; it opens the resource working set "a" and not the Java working set "a"</Line>
          <Line>Also:</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- in Navigator, turn working set filtering on and create a working set "a"</Line>
          <Line>- go back to filters and choose Other... in the combo</Line>
          <Line>- Cancel selection dialog</Line>
          <Line>- close filters dialog</Line>
          <Line>- it clears the filtering rather than leaving "a" selected</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020501

Note: This is a rare corner case

1. Create a Java working set named "a" (press OK)
2. Open the Working Set dialog, select "a", then Edit
3. Rename the "a" to "aa", press Finish - DON'T press OK
4. Add a new Resource working set called "a" press Finish - DONT press OK
5. Now press CANCEL
6. Open the Working Set dialog, select "a", then Edit
==&gt; it opens the resource working set "a" and not the Java working set "a"
Also:

- in Navigator, turn working set filtering on and create a working set "a"
- go back to filters and choose Other... in the combo
- Cancel selection dialog
- close filters dialog
- it clears the filtering rather than leaving "a" selected

Recommend replacing Other... item with a separate Select... button, and using 
the combo as just a shortcut for recently selected working sets.

Fixed the original cancel problem.
Removed Other... list item and added "Other..." button. I think calling 
it "Other" makes it clearer that the list shows a selection of all working sets 
in the workspace.</WithStack>
    <WithOutStack>Build 20020501

Note: This is a rare corner case

1. Create a Java working set named "a" (press OK)
2. Open the Working Set dialog, select "a", then Edit
3. Rename the "a" to "aa", press Finish - DON'T press OK
4. Add a new Resource working set called "a" press Finish - DONT press OK
5. Now press CANCEL
6. Open the Working Set dialog, select "a", then Edit
==&gt; it opens the resource working set "a" and not the Java working set "a"
Also:

- in Navigator, turn working set filtering on and create a working set "a"
- go back to filters and choose Other... in the combo
- Cancel selection dialog
- close filters dialog
- it clears the filtering rather than leaving "a" selected

Recommend replacing Other... item with a separate Select... button, and using 
the combo as just a shortcut for recently selected working sets.

Fixed the original cancel problem.
Removed Other... list item and added "Other..." button. I think calling 
it "Other" makes it clearer that the list shows a selection of all working sets 
in the workspace.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15085" />
    <CreationDate amount="2002-05-02 09:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Search: Use LRU working sets from working set manager</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>- ignore workbench LRU list</Line>
          <Line>- don't keep mutli-working set</Line>
          <Line>- do some mixing between workbench LRU and multi-working sets</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- only affects the LRU list from Search. View filter uses the workbench's LRU list</Line>
          <Line>- no further action possible until 15112 is fixed (currently marked LATER)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Have to decide what we do now that workbench does not support multi-working sets
for 2.0.

Possible solutions:
- ignore workbench LRU list
- don't keep mutli-working set
- do some mixing between workbench LRU and multi-working sets

Current implementation ignores workbench LRU list (no updates either). Will
revisit time permitting for 2.0

Move to REMIND until the other PR is fixed
Post 2.0 review:
- only affects the LRU list from Search. View filter uses the workbench's LRU list
- no further action possible until 15112 is fixed (currently marked LATER)

As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Have to decide what we do now that workbench does not support multi-working sets
for 2.0.

Possible solutions:
- ignore workbench LRU list
- don't keep mutli-working set
- do some mixing between workbench LRU and multi-working sets

Current implementation ignores workbench LRU list (no updates either). Will
revisit time permitting for 2.0

Move to REMIND until the other PR is fixed
Post 2.0 review:
- only affects the LRU list from Search. View filter uses the workbench's LRU list
- no further action possible until 15112 is fixed (currently marked LATER)

As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15086" />
    <CreationDate amount="2002-05-02 09:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Working set may loose some projects</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020501

I had defined a working set 'jdtcore' containing 
project 'org.eclipse.jdt.core'. At some later point, I deleted and readded this 
project (while working in between multiple streams).

From thereon, the working set was empty, and all searches did not find anything 
any longer.

A working set should preserve references to unexisting projects, in case they 
are added (back) at some later point; pretty much as deleting a project doesn't 
implicitly remove it from a buildpath.
The working sets are managed by the Platform UI.

Using reference semantics for project would be consistent with the way project 
references are handled. However, you can also create working sets at the folder 
level. In this case it would be confusing to show such deleted folders to the 
user. 

Moving to Platform UI
We considered this option but decided that the semantics were a lot clearer if 
working sets refer to only existing elements.
This is highly confusing, and again we did change our classpath handling with 
respect to adding/delete project. You should not delete something for the user 
if you cannot add it back for free. The only option would be if there was a 
visual indication that the working set is inconsistent.
We can punt the code that removes deleted resources from working sets.
Working set editing wizard pages and users of working sets would need to check 
whether a working set resource actually exists.
But as Erich points out, working sets can contain folders as well as projects, 
and the presentation would be confusing if they are deleted.
I don't understand. Why would the presentation be confusing? You just wouldn't 
show a deleted folder or any other deleted resource.
The only confusing part I can see is that you may end up with empty working 
sets if all working set resources are deleted.
Would the deleted resource still show up in the edit working set dialog?
I actually don't feel strongly one way or the other.
If you think we should allow deleted resources, then go ahead and make the 
change.  I'm reassigning the PR to you.


Removed the feature that removed deleted resources from working sets. 
Resource and Java working set edit pages don't show deleted elements but they 
are maintained in the working set.</WithStack>
    <WithOutStack>Build 20020501

I had defined a working set 'jdtcore' containing 
project 'org.eclipse.jdt.core'. At some later point, I deleted and readded this 
project (while working in between multiple streams).

From thereon, the working set was empty, and all searches did not find anything 
any longer.

A working set should preserve references to unexisting projects, in case they 
are added (back) at some later point; pretty much as deleting a project doesn't 
implicitly remove it from a buildpath.
The working sets are managed by the Platform UI.

Using reference semantics for project would be consistent with the way project 
references are handled. However, you can also create working sets at the folder 
level. In this case it would be confusing to show such deleted folders to the 
user. 

Moving to Platform UI
We considered this option but decided that the semantics were a lot clearer if 
working sets refer to only existing elements.
This is highly confusing, and again we did change our classpath handling with 
respect to adding/delete project. You should not delete something for the user 
if you cannot add it back for free. The only option would be if there was a 
visual indication that the working set is inconsistent.
We can punt the code that removes deleted resources from working sets.
Working set editing wizard pages and users of working sets would need to check 
whether a working set resource actually exists.
But as Erich points out, working sets can contain folders as well as projects, 
and the presentation would be confusing if they are deleted.
I don't understand. Why would the presentation be confusing? You just wouldn't 
show a deleted folder or any other deleted resource.
The only confusing part I can see is that you may end up with empty working 
sets if all working set resources are deleted.
Would the deleted resource still show up in the edit working set dialog?
I actually don't feel strongly one way or the other.
If you think we should allow deleted resources, then go ahead and make the 
change.  I'm reassigning the PR to you.


Removed the feature that removed deleted resources from working sets. 
Resource and Java working set edit pages don't show deleted elements but they 
are maintained in the working set.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15087" />
    <CreationDate amount="2002-05-02 10:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE when methods from the outermost enclosing class is invoked in a anonymous class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functiondef">
        <location start="559" end="1039" />
        <code>public FigureCanvas(Composite parent, int style) {
 super(parent, 
checkStyle(style));
 lws = new LightweightSystem(this){ //Anonymous class 1
  protected 
RootFigure createRootFigure(){
   return new RootFigure(){ //Anonymous class 2
    public void 
validate(){
     layoutViewport(); //NULL_POINTER reported at this line number.  I
cannot step 
into this method.
     super.validate();
     readjustScrollbars();
    }
   };
  }
 };
 
lws.setContents(getViewport());
 init();
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1132" end="1167" />
        <code>new LightweightSystem(Canvas){}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1319" end="1516" />
        <code>new LightweightSystem(Canvas canvas, FigureCanvas enclosingRef){
    super(canvas); //super's constructor indirectly results in reference to 
field set below
    this.enclosingRef = enclosingRef;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>From Eclipse Corner:

I have a constructor that creates a an anonymous inner class inside 
an
anonymous inner class.  The inner-most class calls a method on the
outer-most enclosing 
instance.  When this call occurs (which happen well
after construction finished), I get a null 
pointer exception.  This is
impossible, since it is just a straight method call with no 
parameters on
the enclosing enclosing this, which cannot be null.  When I step into it, 
it
seems that the generated accessor for the enclosing type is returning null,
but I can't be 
sure.

public FigureCanvas(Composite parent, int style) {
 super(parent, 
checkStyle(style));
 lws = new LightweightSystem(this){ //Anonymous class 1
  protected 
RootFigure createRootFigure(){
   return new RootFigure(){ //Anonymous class 2
    public void 
validate(){
     layoutViewport(); //NULL_POINTER reported at this line number.  I
cannot step 
into this method.
     super.validate();
     readjustScrollbars();
    }
   };
  }
 };
 
lws.setContents(getViewport());
 init();
}

I am unsure which build is used.
It turns out that the anonymous constructor being called:
    new LightweightSystem(Canvas){}
would result in validate being called during the construction.
 
I suppose the anonymous constructor "new LightweightSystem(this)" get's turned 
into:
new LightweightSystem(Canvas canvas, FigureCanvas enclosingRef){
    super(canvas); //super's constructor indirectly results in reference to 
field set below
    this.enclosingRef = enclosingRef;
}
 
And THEN, the first line calling the super(canvas) constructor eventually 
results in an access to enclosingRef before it is set.  This is causing the 
NullPointerException.
 
Is there any way to set the enclosingRefence before calling super()?
 
Anyway, I've worked around this already.  I suppose this is WAD.
Indeed any super constructor call MUST (vm spec) be invoked before assigning 
this$N fields used for innerclass emulation. This results in this issue, if the 
super constructor will dynamically invoke code on the originating subclass 
which requires to reach into its enclosing type.

Javac has the same issue. This is a limitation of Java, not from our compiler.

Closing
Closing</WithStack>
    <WithOutStack>From Eclipse Corner:

I have a constructor that creates a an anonymous inner class inside 
an
anonymous inner class.  The inner-most class calls a method on the
outer-most enclosing 
instance.  When this call occurs (which happen well
after construction finished), I get a null 
pointer exception.  This is
impossible, since it is just a straight method call with no 
parameters on
the enclosing enclosing this, which cannot be null.  When I step into it, 
it
seems that the generated accessor for the enclosing type is returning null,
but I can't be 
sure.

public FigureCanvas(Composite parent, int style) {
 super(parent, 
checkStyle(style));
 lws = new LightweightSystem(this){ //Anonymous class 1
  protected 
RootFigure createRootFigure(){
   return new RootFigure(){ //Anonymous class 2
    public void 
validate(){
     layoutViewport(); //NULL_POINTER reported at this line number.  I
cannot step 
into this method.
     super.validate();
     readjustScrollbars();
    }
   };
  }
 };
 
lws.setContents(getViewport());
 init();
}

I am unsure which build is used.
It turns out that the anonymous constructor being called:
    new LightweightSystem(Canvas){}
would result in validate being called during the construction.
 
I suppose the anonymous constructor "new LightweightSystem(this)" get's turned 
into:
new LightweightSystem(Canvas canvas, FigureCanvas enclosingRef){
    super(canvas); //super's constructor indirectly results in reference to 
field set below
    this.enclosingRef = enclosingRef;
}
 
And THEN, the first line calling the super(canvas) constructor eventually 
results in an access to enclosingRef before it is set.  This is causing the 
NullPointerException.
 
Is there any way to set the enclosingRefence before calling super()?
 
Anyway, I've worked around this already.  I suppose this is WAD.
Indeed any super constructor call MUST (vm spec) be invoked before assigning 
this$N fields used for innerclass emulation. This results in this issue, if the 
super constructor will dynamically invoke code on the originating subclass 
which requires to reach into its enclosing type.

Javac has the same issue. This is a limitation of Java, not from our compiler.

Closing
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15088" />
    <CreationDate amount="2002-05-02 10:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>StyledText - getTopIndex semantics undefined when no line fully visible</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330862950">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>Argument not valid</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2125)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2071)</Frame>
          <Frame depth="2">org.eclipse.jface.text.DocumentAdapter.getOffsetAtLine(DocumentAdapter.java(Compiled Code))</Frame>
          <Frame depth="3">org.eclipse.swt.custom.StyledText.calculateTopIndex(StyledText.java:1735)</Frame>
          <Frame depth="4">org.eclipse.swt.custom.StyledText.handleResize(StyledText.java:4960)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="17">
        <Lines>
          <Line>(i.e., from the users perspective).</Line>
          <Line>When the second of three lines is only partially visible (index 1) but the line</Line>
          <Line>at index 2 is not visible at all (or also only partially visible) getTopIndex</Line>
          <Line>returns 2 because that is the index of the line that would be fully visible if</Line>
          <Line>there was enough vertical space.</Line>
          <Line>This causes similar problems as reported in bug 8648 when moving the cursor</Line>
          <Line>down. When the cursor is moved from index 1 down the line at index 2 is not</Line>
          <Line>revealed unless cursor down is pressed again.</Line>
          <Line>Should be fixed, but I think we should defer for now (i.e., it's a special,</Line>
          <Line>unlikely case).  Do you agree?</Line>
          <Line>Agree</Line>
          <Line>Reopen</Line>
          <Line>There are essentially two options to define the behavior when no line is fully</Line>
          <Line>visible.</Line>
          <Line>1) The top most partially visible line is the top index</Line>
          <Line>2) The partially visible line that is visible to the greatest extent is the top</Line>
          <Line>index</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>1) The top most partially visible line is the top index</Line>
          <Line>2) The partially visible line that is visible to the greatest extent is the top</Line>
          <Line>index</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build 20020430

getTopIndex has undefined semantics when no line is fully visible (e.g., 
because the client area is not high enough). It is spec'd to return the topmost 
fully visible line which leaves open this boundary condition.
The current behavior in this case is unexpected from a visual point of view 
(i.e., from the users perspective).
When the second of three lines is only partially visible (index 1) but the line 
at index 2 is not visible at all (or also only partially visible) getTopIndex 
returns 2 because that is the index of the line that would be fully visible if 
there was enough vertical space.
This causes similar problems as reported in bug 8648 when moving the cursor 
down. When the cursor is moved from index 1 down the line at index 2 is not 
revealed unless cursor down is pressed again.
Should be fixed, but I think we should defer for now (i.e., it's a special, 
unlikely case).  Do you agree?
Agree
Reopen
There are essentially two options to define the behavior when no line is fully 
visible.
1) The top most partially visible line is the top index
2) The partially visible line that is visible to the greatest extent is the top 
index

The difference is that with two partially visible lines a and b, a being the 
topmost line, line b could actually be "more" visible than line a. 
E.g., line a has 5 out of 20 pixels visible and line b has 10 out of 20 pixels 
visible.
From a visual point of view line b should probably be the top index since line 
a is hardly visible. This would also automatically result in better keyboard 
line up/down navigation behavior in this special case.
The disadvantage is that the specification would be slightly more complex and 
awkward than the straightforward "top index == top fully visible line or top 
partially visible line if there is no fully visible line".
Do the simpler option - the top most partially visible line.
Fixed
In the following scenario the top index is left invalid by calculateTopIndex:
In Eclipse:
-make sure the console has some lines
-resize the console very small (&lt; one line visible) 
-scroll the console all the way to the bottom so that the last line is only 
partially visible
-resize the console so that no lines are visible (text widget height == 0) 
-&gt;the following walkback occurs:
java.lang.IllegalArgumentException: Argument not valid
	at org.eclipse.swt.SWT.error(SWT.java:2125)
	at org.eclipse.swt.SWT.error(SWT.java:2071)
	at org.eclipse.jface.text.DocumentAdapter.getOffsetAtLine
(DocumentAdapter.java(Compiled Code))
	at org.eclipse.swt.custom.StyledText.calculateTopIndex
(StyledText.java:1735)
	at org.eclipse.swt.custom.StyledText.handleResize(StyledText.java:4960)
[...]

Usually the top index identifies the topmost fully visible line, if no line is 
fully visible it identifies the partially visible line (we added this to fix 
this bug). However, if the client area height is 0 the code that fixes the top 
index to be the partially visible line does not run. 
We should change this so that the top index is never greater than the last line 
in the content.
Fixed in build &gt;20021025.
See also bug 24264.</WithStack>
    <WithOutStack>build 20020430

getTopIndex has undefined semantics when no line is fully visible (e.g., 
because the client area is not high enough). It is spec'd to return the topmost 
fully visible line which leaves open this boundary condition.
The current behavior in this case is unexpected from a visual point of view 
(i.e., from the users perspective).
When the second of three lines is only partially visible (index 1) but the line 
at index 2 is not visible at all (or also only partially visible) getTopIndex 
returns 2 because that is the index of the line that would be fully visible if 
there was enough vertical space.
This causes similar problems as reported in bug 8648 when moving the cursor 
down. When the cursor is moved from index 1 down the line at index 2 is not 
revealed unless cursor down is pressed again.
Should be fixed, but I think we should defer for now (i.e., it's a special, 
unlikely case).  Do you agree?
Agree
Reopen
There are essentially two options to define the behavior when no line is fully 
visible.
1) The top most partially visible line is the top index
2) The partially visible line that is visible to the greatest extent is the top 
index

The difference is that with two partially visible lines a and b, a being the 
topmost line, line b could actually be "more" visible than line a. 
E.g., line a has 5 out of 20 pixels visible and line b has 10 out of 20 pixels 
visible.
From a visual point of view line b should probably be the top index since line 
a is hardly visible. This would also automatically result in better keyboard 
line up/down navigation behavior in this special case.
The disadvantage is that the specification would be slightly more complex and 
awkward than the straightforward "top index == top fully visible line or top 
partially visible line if there is no fully visible line".
Do the simpler option - the top most partially visible line.
Fixed
In the following scenario the top index is left invalid by calculateTopIndex:
In Eclipse:
-make sure the console has some lines
-resize the console very small (&lt; one line visible) 
-scroll the console all the way to the bottom so that the last line is only 
partially visible
-resize the console so that no lines are visible (text widget height == 0) 
-&gt;the following walkback occurs:

[...]

Usually the top index identifies the topmost fully visible line, if no line is 
fully visible it identifies the partially visible line (we added this to fix 
this bug). However, if the client area height is 0 the code that fixes the top 
index to be the partially visible line does not run. 
We should change this so that the top index is never greater than the last line 
in the content.
Fixed in build &gt;20021025.
See also bug 24264.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15089" />
    <CreationDate amount="2002-05-02 10:22:00 -0400" />
    <DupId amount="14029" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>DND exception attempting to copy method from outliner</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330862950">
        <Exception>org.eclipse.swt.SWTError</Exception>
        <Reason>Can not set data in clipboard</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.dnd.DND.error(DND.java:123)</Frame>
          <Frame depth="1">org.eclipse.swt.dnd.DND.error(DND.java:104)</Frame>
          <Frame depth="2">org.eclipse.swt.dnd.Clipboard.setContents(Clipboard.java:170)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.reorg.CopySourceReferencesToClipboardAction.copyToOSClipbard(CopySourceReferencesToClipboardAction.java:42)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.reorg.CopySourceReferencesToClipboardAction.perform(CopySourceReferencesToClipboardAction.java:34)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.reorg.SourceReferenceAction$1.run(SourceReferenceAction.java:49)</Frame>
          <Frame depth="6">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.reorg.SourceReferenceAction.run(SourceReferenceAction.java:46)</Frame>
          <Frame depth="8">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:132)</Frame>
          <Frame depth="9">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:94)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.reorg.DualReorgAction.run(DualReorgAction.java:32)</Frame>
          <Frame depth="11">org.eclipse.jface.action.Action.runWithEvent(Action.java:590)</Frame>
          <Frame depth="12">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="13">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="14">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="15">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:488)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1552)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1401)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:833)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.Workbench.run(Workbench.java:816)</Frame>
          <Frame depth="22">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:643)</Frame>
          <Frame depth="23">org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)</Frame>
          <Frame depth="24">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="25">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="26">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="27">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.basicRun(Main.java:160)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.run(Main.java:548)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.main(Main.java:403)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020425
Linux-Motif

When I right click on a method in the outliner and select "copy," an internal
error dialog appears with the following stack trace.

org.eclipse.swt.SWTError: Can not set data in clipboard
	at org.eclipse.swt.dnd.DND.error(DND.java:123)
	at org.eclipse.swt.dnd.DND.error(DND.java:104)
	at org.eclipse.swt.dnd.Clipboard.setContents(Clipboard.java:170)
	at
org.eclipse.jdt.internal.ui.reorg.CopySourceReferencesToClipboardAction.copyToOSClipbard(CopySourceReferencesToClipboardAction.java:42)
	at
org.eclipse.jdt.internal.ui.reorg.CopySourceReferencesToClipboardAction.perform(CopySourceReferencesToClipboardAction.java:34)
	at
org.eclipse.jdt.internal.ui.reorg.SourceReferenceAction$1.run(SourceReferenceAction.java:49)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)
	at
org.eclipse.jdt.internal.ui.reorg.SourceReferenceAction.run(SourceReferenceAction.java:46)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:132)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:94)
	at org.eclipse.jdt.internal.ui.reorg.DualReorgAction.run(DualReorgAction.java:32)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)
	at
org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)
	at
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:488)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1552)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1401)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:833)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:816)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:643)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:160)
	at org.eclipse.core.launcher.Main.run(Main.java:548)
	at org.eclipse.core.launcher.Main.main(Main.java:403)


*** This bug has been marked as a duplicate of 14029 ***</WithStack>
    <WithOutStack>Build 20020425
Linux-Motif

When I right click on a method in the outliner and select "copy," an internal
error dialog appears with the following stack trace.




*** This bug has been marked as a duplicate of 14029 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15090" />
    <CreationDate amount="2002-05-02 10:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Allow users to create non-Java plug-ins</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) Disable Java library entry</Line>
          <Line>2) Do not add this entry in plugin.xml</Line>
          <Line>3) Do not add jar entry in build.properties</Line>
          <Line>4) Disable creation of the top-level plug-in class (cannot compile if not Java)</Line>
          <Line>5) Do not set the classpath</Line>
          <Line>This feature has been implemented following Dejan's spec.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The current PDE project wizard assume that the plug-in will contain Java code. 
Some plug-ins (help, for example) may have no Java code at all. 

Add a choice (two radio buttons) to allow users to specify if the plug-in will 
contain Java code. Make Java code choice the default, as well as the entry for 
the initial Java library name. 

In case the user does not make a Java choice, do the following:

1) Disable Java library entry
2) Do not add this entry in plugin.xml
3) Do not add jar entry in build.properties
4) Disable creation of the top-level plug-in class (cannot compile if not Java)
5) Do not set the classpath
This feature has been implemented following Dejan's spec.</WithStack>
    <WithOutStack>The current PDE project wizard assume that the plug-in will contain Java code. 
Some plug-ins (help, for example) may have no Java code at all. 

Add a choice (two radio buttons) to allow users to specify if the plug-in will 
contain Java code. Make Java code choice the default, as well as the entry for 
the initial Java library name. 

In case the user does not make a Java choice, do the following:

1) Disable Java library entry
2) Do not add this entry in plugin.xml
3) Do not add jar entry in build.properties
4) Disable creation of the top-level plug-in class (cannot compile if not Java)
5) Do not set the classpath
This feature has been implemented following Dejan's spec.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15091" />
    <CreationDate amount="2002-05-02 10:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Too many cycle markers generated when cycle is detected</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020501

If you have 3 projects: P1, P2, P3 where P1 is on the classpath of P2, and P2 
is on the classpath of P3, then if you put P3 on the classpath of P1, 6 cycle 
markers are generated (2 per projects). There should be only 3.
Fixed.</WithStack>
    <WithOutStack>Build 20020501

If you have 3 projects: P1, P2, P3 where P1 is on the classpath of P2, and P2 
is on the classpath of P3, then if you put P3 on the classpath of P1, 6 cycle 
markers are generated (2 per projects). There should be only 3.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15092" />
    <CreationDate amount="2002-05-02 10:36:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Sync on nested empty directories doesn't go deep</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>With pruning enabled, when I sync on a project that has nested empty 
directories, only the leaf directory shows up as an incomming deletions. For 
example:

I have a project proj2 with nested children /f4/f5 that contain no other files 
or folders. On syncing f5 shows up as an incoming deletion but f4 is in-sync. 
f4 should be an incoming deletion.
Fixed.</WithStack>
    <WithOutStack>With pruning enabled, when I sync on a project that has nested empty 
directories, only the leaf directory shows up as an incomming deletions. For 
example:

I have a project proj2 with nested children /f4/f5 that contain no other files 
or folders. On syncing f5 shows up as an incoming deletion but f4 is in-sync. 
f4 should be an incoming deletion.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15093" />
    <CreationDate amount="2002-05-02 10:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>cvs syncronize with repository doesn;t work correctly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>i use M5

ok the real bug is when you change some file
then you delete that file in CVS
and then you make "syncronize with repository"
it can't find anything beside thouse changes files wich are deleted in CVS

they have a red arrow on the left of the icon

&gt;i have some file changed in
&gt;
&gt;dir/sub_dir/sub_sub_dir/SomeClass
&gt;dir/sub_dir/sub_sub_dir/sub_sub_sub_dir/SomeOtherClass
&gt;
&gt;when i make syncronize with repository on dir and sub_dir, SomeClass and 
&gt;SomeOtherClass was not found as changed file
&gt;syncronize with repository from sub_sub_dir return SomeClass ad changed files
&gt;but after i commited SomeClass in syncronize with repository view 
&gt;SomeOtherClass was displayed as changed
&gt;
&gt;sorry for such complex schema :-) but that's what i have
&gt;if i wrote something wrong
&gt;i will change dir,sub_dir, SomeClass ... and so on with real names
&gt;
This works for me. Is it possible that you were in "incoming" mode (where you 
would only see the incomming deletion). To see outgoing changes you must be in 
"outgoing" mode (or "Incoming/outgoing" mode). Mode selection is available in 
the title bar of the merge view. 

If this is not the problem and your problem is reproducable, please reopen the 
bug with exact steps to reproduce.</WithStack>
    <WithOutStack>i use M5

ok the real bug is when you change some file
then you delete that file in CVS
and then you make "syncronize with repository"
it can't find anything beside thouse changes files wich are deleted in CVS

they have a red arrow on the left of the icon

&gt;i have some file changed in
&gt;
&gt;dir/sub_dir/sub_sub_dir/SomeClass
&gt;dir/sub_dir/sub_sub_dir/sub_sub_sub_dir/SomeOtherClass
&gt;
&gt;when i make syncronize with repository on dir and sub_dir, SomeClass and 
&gt;SomeOtherClass was not found as changed file
&gt;syncronize with repository from sub_sub_dir return SomeClass ad changed files
&gt;but after i commited SomeClass in syncronize with repository view 
&gt;SomeOtherClass was displayed as changed
&gt;
&gt;sorry for such complex schema :-) but that's what i have
&gt;if i wrote something wrong
&gt;i will change dir,sub_dir, SomeClass ... and so on with real names
&gt;
This works for me. Is it possible that you were in "incoming" mode (where you 
would only see the incomming deletion). To see outgoing changes you must be in 
"outgoing" mode (or "Incoming/outgoing" mode). Mode selection is available in 
the title bar of the merge view. 

If this is not the problem and your problem is reproducable, please reopen the 
bug with exact steps to reproduce.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15094" />
    <CreationDate amount="2002-05-02 10:50:00 -0400" />
    <DupId amount="14932" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Internal errors opening editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="16">
        <Lines>
          <Line>1) Had a self-hosting workspace setup, carried over from previous builds</Line>
          <Line>2) Tried to open a class file (WorkInProgressPreferencePage.class) using the</Line>
          <Line>open type dialog.</Line>
          <Line />
          <Line>3) Internal error occurred (ArrayIndexOutOfBounds).</Line>
          <Line>4) Tried to close the editor that just opened.</Line>
          <Line>5) Internal error occurred (ArrayIndexOutOfBounds).</Line>
          <Line>6) After clicking "No" in the internal error dialog, another internal error</Line>
          <Line>occurred.</Line>
          <Line>7) I then shutdown and restarted the workspace</Line>
          <Line>8) Internal error occurred while restarting (same ArrayIndex... error).</Line>
          <Line>9) Dialog said it would discard workbench.xml and continue.  I clicked OK.</Line>
          <Line>10) Workbench exited with no further warnings.</Line>
          <Line>9) Tried to restart again... this time it restarts with no errors.</Line>
          <Line>10) Now trying to open any editor on a class file using Ctrl+Shift+T causes</Line>
          <Line>errors</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020430

1) Had a self-hosting workspace setup, carried over from previous builds
2) Tried to open a class file (WorkInProgressPreferencePage.class) using the 
open type dialog.

3) Internal error occurred (ArrayIndexOutOfBounds).
4) Tried to close the editor that just opened.
5) Internal error occurred (ArrayIndexOutOfBounds).
6) After clicking "No" in the internal error dialog, another internal error 
occurred.
7) I then shutdown and restarted the workspace
8) Internal error occurred while restarting (same ArrayIndex... error).
9) Dialog said it would discard workbench.xml and continue.  I clicked OK.
10) Workbench exited with no further warnings.
9) Tried to restart again... this time it restarts with no errors.
10) Now trying to open any editor on a class file using Ctrl+Shift+T causes 
errors

I've made a copy of my workspace, available on request.  Log file attached (I'm 
including the entire log, just so I don't accidently clip out something 
interesting, but it's mostly the same errors).
Created attachment 737
log file showing errors


*** This bug has been marked as a duplicate of 14932 ***
John, please switch to the 05/01 build.</WithStack>
    <WithOutStack>Build 20020430

1) Had a self-hosting workspace setup, carried over from previous builds
2) Tried to open a class file (WorkInProgressPreferencePage.class) using the 
open type dialog.

3) Internal error occurred (ArrayIndexOutOfBounds).
4) Tried to close the editor that just opened.
5) Internal error occurred (ArrayIndexOutOfBounds).
6) After clicking "No" in the internal error dialog, another internal error 
occurred.
7) I then shutdown and restarted the workspace
8) Internal error occurred while restarting (same ArrayIndex... error).
9) Dialog said it would discard workbench.xml and continue.  I clicked OK.
10) Workbench exited with no further warnings.
9) Tried to restart again... this time it restarts with no errors.
10) Now trying to open any editor on a class file using Ctrl+Shift+T causes 
errors

I've made a copy of my workspace, available on request.  Log file attached (I'm 
including the entire log, just so I don't accidently clip out something 
interesting, but it's mostly the same errors).
Created attachment 737
log file showing errors


*** This bug has been marked as a duplicate of 14932 ***
John, please switch to the 05/01 build.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15095" />
    <CreationDate amount="2002-05-02 11:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>java.lang.ArrayIndexOutOfBoundsException in "Add CVS Repository"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437330862950">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.ui.wizards.NewLocationWizard.performFinish(NewLocationWizard.java:96)</Frame>
          <Frame depth="1">org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:577)</Frame>
          <Frame depth="2">org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:312)</Frame>
          <Frame depth="3">org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:379)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)</Frame>
          <Frame depth="9">org.eclipse.jface.window.Window.runEventLoop(Window.java:538)</Frame>
          <Frame depth="10">org.eclipse.jface.window.Window.open(Window.java:525)</Frame>
          <Frame depth="11">org.eclipse.team.internal.ccvs.ui.RepositoriesView$5.run(RepositoriesView.java:124)</Frame>
          <Frame depth="12">org.eclipse.jface.action.Action.runWithEvent(Action.java:590)</Frame>
          <Frame depth="13">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="14">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="15">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="16">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:883)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench.run(Workbench.java:866)</Frame>
          <Frame depth="23">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:733)</Frame>
          <Frame depth="24">org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)</Frame>
          <Frame depth="25">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="26">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="27">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="28">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.basicRun(Main.java:162)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.run(Main.java:588)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.main(Main.java:437)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- what values did you enter in the new repo wizard?</Line>
          <Line>- does this happen all the time?</Line>
          <Line>Awaiting info from reporter.</Line>
          <Line>I have JDK 1.4 installed but I obtained the same result</Line>
          <Line>with JDK 1.3 too. This bug happened on May 1 integration</Line>
          <Line>build. I get it on May 2 integration build too.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I am using the integration build of May 1.
When adding a new CVS repository location I got the following exception:

java.lang.ArrayIndexOutOfBoundsException
	at 
org.eclipse.team.internal.ccvs.ui.wizards.NewLocationWizard.performFinish
(NewLocationWizard.java:96)
	at org.eclipse.jface.wizard.WizardDialog.finishPressed
(WizardDialog.java:577)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed
(WizardDialog.java:312)
	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:379)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:85)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:538)
	at org.eclipse.jface.window.Window.open(Window.java:525)
	at org.eclipse.team.internal.ccvs.ui.RepositoriesView$5.run
(RepositoriesView.java:124)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:590)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:637)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1412)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1208)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:883)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:866)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:733)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:349)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:162)
	at org.eclipse.core.launcher.Main.run(Main.java:588)
	at org.eclipse.core.launcher.Main.main(Main.java:437)
I can't reproduce. Could you give me a bit more information:
- what values did you enter in the new repo wizard?
- does this happen all the time?
Awaiting info from reporter.
I have JDK 1.4 installed but I obtained the same result
with JDK 1.3 too. This bug happened on May 1 integration
build. I get it on May 2 integration build too.

We have CVS 1.11 running with Linux.
My values for new repository dialog are
  pserver
  cvs
  x
  10.10.100.24
  Use default port
  /usr/local/cvsroot
  Validate connection on Finish (checked)

User "cvs" with password "x" is a valid cvs user.
If I enter an invalid password and request that
the location should be kept I don't get any errors.
When I try to browse the new location and authenticate
then, nothing goes wrong and I can access the repository
normally.

Fixed</WithStack>
    <WithOutStack>I am using the integration build of May 1.
When adding a new CVS repository location I got the following exception:


I can't reproduce. Could you give me a bit more information:
- what values did you enter in the new repo wizard?
- does this happen all the time?
Awaiting info from reporter.
I have JDK 1.4 installed but I obtained the same result
with JDK 1.3 too. This bug happened on May 1 integration
build. I get it on May 2 integration build too.

We have CVS 1.11 running with Linux.
My values for new repository dialog are
  pserver
  cvs
  x
  10.10.100.24
  Use default port
  /usr/local/cvsroot
  Validate connection on Finish (checked)

User "cvs" with password "x" is a valid cvs user.
If I enter an invalid password and request that
the location should be kept I don't get any errors.
When I try to browse the new location and authenticate
then, nothing goes wrong and I can access the repository
normally.

Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15096" />
    <CreationDate amount="2002-05-02 11:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unable to associate type to default feature in site</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>A feature may have a default path (per spec)
If a site is asked for a feature with a certain id and ver we can only associate
default feature type
We need to be able to associate a type for this feature (if the feature is not
explicitly expressed in the site.xml)

See problem where the 'mother' feature is declared in site.xml, but
administrator doesn't explicitly declare the 'children' on the site. When
Install looks for 'children' features, it will look in the default location and
assume default type for 'children' feature. Which may not be true.
Post 2.0
[LATER-&gt;WONTFIX] The "LATER" bugzilla resolution is being removed so reopening
to mark as WONTFIX.

[LATER-&gt;WONTFIX] The "LATER" bugzilla resolution is being removed so reopening
to mark as WONTFIX.</WithStack>
    <WithOutStack>A feature may have a default path (per spec)
If a site is asked for a feature with a certain id and ver we can only associate
default feature type
We need to be able to associate a type for this feature (if the feature is not
explicitly expressed in the site.xml)

See problem where the 'mother' feature is declared in site.xml, but
administrator doesn't explicitly declare the 'children' on the site. When
Install looks for 'children' features, it will look in the default location and
assume default type for 'children' feature. Which may not be true.
Post 2.0
[LATER-&gt;WONTFIX] The "LATER" bugzilla resolution is being removed so reopening
to mark as WONTFIX.

[LATER-&gt;WONTFIX] The "LATER" bugzilla resolution is being removed so reopening
to mark as WONTFIX.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15097" />
    <CreationDate amount="2002-05-02 11:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>JavElementLabelProvider: unable to qualify package fragment root</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>While JavaElementLabels is capable of qualifying package fragment roots if the 
ROOT_QUALIFIED flag is set (see getPackageFragmentRootLabel), I could find no 
way to get that flag to be set through the JavaElementLabelProvider class. 
Neither the JavaElementLabelProvider constant SHOW_ROOT nor SHOW_QUALIFIED does 
the trick.
I am trying to display a list of IJavaElements which includes source folders 
(IPackageFragmentRoots), but I can't get them to show any text indicating the 
project they are in.
It also seems to not be possible to leverage 
JavaElementLabels.PREPEND_ROOT_PATH as only APPEND_ROOT_PATH is referenced by 
JavaElementLabelProvider. This is particularly confusing if you haven't 
specifically set JavaElementLabelProvider.SHOW_POST_QUALIFIED.
It is the idea that clients write their own LabelProvider that can use the 
JavaElementLabelProvider as base. 

We should think about making JavaElementLabels API, but this is not planed for 
2.0.

As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>While JavaElementLabels is capable of qualifying package fragment roots if the 
ROOT_QUALIFIED flag is set (see getPackageFragmentRootLabel), I could find no 
way to get that flag to be set through the JavaElementLabelProvider class. 
Neither the JavaElementLabelProvider constant SHOW_ROOT nor SHOW_QUALIFIED does 
the trick.
I am trying to display a list of IJavaElements which includes source folders 
(IPackageFragmentRoots), but I can't get them to show any text indicating the 
project they are in.
It also seems to not be possible to leverage 
JavaElementLabels.PREPEND_ROOT_PATH as only APPEND_ROOT_PATH is referenced by 
JavaElementLabelProvider. This is particularly confusing if you haven't 
specifically set JavaElementLabelProvider.SHOW_POST_QUALIFIED.
It is the idea that clients write their own LabelProvider that can use the 
JavaElementLabelProvider as base. 

We should think about making JavaElementLabels API, but this is not planed for 
2.0.

As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15098" />
    <CreationDate amount="2002-05-02 11:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>Cannot read workbench state if all perspectives closed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you close all of the perspectives in your workbench, exit and return you get 
an error that says "Cannot read workbench state".
05/01 build?
Build 20020501
Fix. Problem was in lazy perspective restore changes. In build &gt; 2002-05-02</WithStack>
    <WithOutStack>If you close all of the perspectives in your workbench, exit and return you get 
an error that says "Cannot read workbench state".
05/01 build?
Build 20020501
Fix. Problem was in lazy perspective restore changes. In build &gt; 2002-05-02</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15099" />
    <CreationDate amount="2002-05-02 11:12:00 -0400" />
    <DupId amount="15172" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ctrl-Shift-T: focus is not in type name text field</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Linux/Motif

Ctrl-Shift-T. Recently, the initial focus is *not* in the type name text field.
This is very inconvenient, as I have to either tab to the text field or use the
mouse to click in it. I'm not sure how I got in this state, as I don't remember
it happening before.
focus is on the text field on Windows.
Claude did you change anything related to focus recently?
If not please move on to SWT for investigation
nope, no changes for some time.
I have submitted a bug already.

*** This bug has been marked as a duplicate of 15172 ***</WithStack>
    <WithOutStack>Linux/Motif

Ctrl-Shift-T. Recently, the initial focus is *not* in the type name text field.
This is very inconvenient, as I have to either tab to the text field or use the
mouse to click in it. I'm not sure how I got in this state, as I don't remember
it happening before.
focus is on the text field on Windows.
Claude did you change anything related to focus recently?
If not please move on to SWT for investigation
nope, no changes for some time.
I have submitted a bug already.

*** This bug has been marked as a duplicate of 15172 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="15100" />
    <CreationDate amount="2002-05-02 11:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>m5: cvs add seems to always use no keyword</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Since upgrading to m5, I've noticed that cvs add always seems to add files with 
keyword substitution turned off.
Do you mean that its not respecting the text/bin file patterns in the 
preferences, or that the default for files not listed isn't what you expect?

Note that there is a CVS specific preference for the default mode for files 
which are not listed in the file patterns pref.
I've added
   http://dev.eclipse.org/bugs/show_bug.cgi?id=15119

which may be what you intended.
Nope; its not the case of text vs. binary, it's a case of text vs. text with 
keyword substitution.

(Although I like the other issue, it's not my problem).

Right now, when I add new files to my repository, they are added without 
keyword substitution.  I want keyword subsitution on.

I have to use Team -&gt; Set Keyword Substitution ... to fix things, with all the 
limitations (and dire warnings) that entails ... including have an additional 
meaningless revision of each file.

What I really need is a preference for Eclipse such that when it checks in a 
new file identified as text, it can provide the correct type of keyword 
substitution right off the bat.

You mention that there's a preference for this?  I haven't found it.  I'd 
expect it to be under Team -&gt; CVS but its not there at all.
Its in the current integration build and I believe was added after M5.
Its Preferences-&gt;Team-&gt;CVS
You can change the default text mode for new files there.</WithStack>
    <WithOutStack>Since upgrading to m5, I've noticed that cvs add always seems to add files with 
keyword substitution turned off.
Do you mean that its not respecting the text/bin file patterns in the 
preferences, or that the default for files not listed isn't what you expect?

Note that there is a CVS specific preference for the default mode for files 
which are not listed in the file patterns pref.
I've added
   http://dev.eclipse.org/bugs/show_bug.cgi?id=15119

which may be what you intended.
Nope; its not the case of text vs. binary, it's a case of text vs. text with 
keyword substitution.

(Although I like the other issue, it's not my problem).

Right now, when I add new files to my repository, they are added without 
keyword substitution.  I want keyword subsitution on.

I have to use Team -&gt; Set Keyword Substitution ... to fix things, with all the 
limitations (and dire warnings) that entails ... including have an additional 
meaningless revision of each file.

What I really need is a preference for Eclipse such that when it checks in a 
new file identified as text, it can provide the correct type of keyword 
substitution right off the bat.

You mention that there's a preference for this?  I haven't found it.  I'd 
expect it to be under Team -&gt; CVS but its not there at all.
Its in the current integration build and I believe was added after M5.
Its Preferences-&gt;Team-&gt;CVS
You can change the default text mode for new files there.</WithOutStack>
  </Bug>
</infozilla-output>

