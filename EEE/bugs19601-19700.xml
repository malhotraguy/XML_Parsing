<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="19601" />
    <CreationDate amount="2002-06-07 10:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="Draw2d [GEF 3.x / Zest 1.x]" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>DCR: ManhattenConnectionRouter needs improvements for decorations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>From NG:

"Randy Hudson" &lt;none@ibm.com&gt; schrieb im Newsbeitrag 
news:adqc5h$gdo$1@rogue.oti.com...
&gt; Please open a feature request.  There is nothing on the decoration that
&gt; would tell us how "big" it is.  Maybe you could just configure the router
&gt; with an offset.
&gt; 
&gt; "Gunnar Wagenknecht" &lt;g.wagenknecht@intershop.de&gt; wrote in message
&gt; news:adpoq8$60d$1@rogue.oti.com...
&gt; &gt; Hi!
&gt; &gt;
&gt; &gt; The ManhattenRouter is great, but it is possible to modify it a little bit
&gt; &gt; for 2.0 release?
&gt; &gt; Look at the attached picture. I added a arrow decoration to the end of the
&gt; &gt; target connection. The ManhattenRouter routes after its strict algorithm.
&gt; I
&gt; &gt; think it should look at decorations (especially arrows) to ensure a better
&gt; &gt; quality of routing, which looks nicer.
&gt; &gt;
&gt; &gt; Cu, Gunnar
&gt; &gt;
Created attachment 1307
current routing not nice for arrow decorations
*** Bug 19931 has been marked as a duplicate of this bug. ***
Add option to change "offset" from connection anchor ends.
Add option to disable the unique row/column finding algorithm, so that bent 
connections will potentially overlap.

Anyone volunteer to help with this?
not for 2.1.
If anyone wants to contribute to GEF, ConnectionRouters is an area that is easy 
to understand, and can be as easy or difficult as you want it to be.
LATER and REMIND resolutions will be going away with the upgrade of Bugzilla to the latest Bugzilla 3.4.  They are no longer part of the default Bugzilla installation. See http://dev.eclipse.org/mhonarc/lists/eclipse.org-committers/msg00778.html for the announcement.

As a result 
RESOLVED + REMIND OR LATER 
will be changed to
RESOLVED + WONTFIX

This unfortunately also means I need to REOPEN and then RESOLVE as WONTFIX

Sorry for the inconvenience.
LATER and REMIND resolutions will be going away with the upgrade of Bugzilla to the latest Bugzilla 3.4.  They are no longer part of the default Bugzilla installation. See http://dev.eclipse.org/mhonarc/lists/eclipse.org-committers/msg00778.html for the announcement.

As a result 
RESOLVED + REMIND OR LATER 
will be changed to
RESOLVED + WONTFIX

This unfortunately also means I need to REOPEN and then RESOLVE as WONTFIX

Sorry for the inconvenience.</WithStack>
    <WithOutStack>From NG:

"Randy Hudson" &lt;none@ibm.com&gt; schrieb im Newsbeitrag 
news:adqc5h$gdo$1@rogue.oti.com...
&gt; Please open a feature request.  There is nothing on the decoration that
&gt; would tell us how "big" it is.  Maybe you could just configure the router
&gt; with an offset.
&gt; 
&gt; "Gunnar Wagenknecht" &lt;g.wagenknecht@intershop.de&gt; wrote in message
&gt; news:adpoq8$60d$1@rogue.oti.com...
&gt; &gt; Hi!
&gt; &gt;
&gt; &gt; The ManhattenRouter is great, but it is possible to modify it a little bit
&gt; &gt; for 2.0 release?
&gt; &gt; Look at the attached picture. I added a arrow decoration to the end of the
&gt; &gt; target connection. The ManhattenRouter routes after its strict algorithm.
&gt; I
&gt; &gt; think it should look at decorations (especially arrows) to ensure a better
&gt; &gt; quality of routing, which looks nicer.
&gt; &gt;
&gt; &gt; Cu, Gunnar
&gt; &gt;
Created attachment 1307
current routing not nice for arrow decorations
*** Bug 19931 has been marked as a duplicate of this bug. ***
Add option to change "offset" from connection anchor ends.
Add option to disable the unique row/column finding algorithm, so that bent 
connections will potentially overlap.

Anyone volunteer to help with this?
not for 2.1.
If anyone wants to contribute to GEF, ConnectionRouters is an area that is easy 
to understand, and can be as easy or difficult as you want it to be.
LATER and REMIND resolutions will be going away with the upgrade of Bugzilla to the latest Bugzilla 3.4.  They are no longer part of the default Bugzilla installation. See http://dev.eclipse.org/mhonarc/lists/eclipse.org-committers/msg00778.html for the announcement.

As a result 
RESOLVED + REMIND OR LATER 
will be changed to
RESOLVED + WONTFIX

This unfortunately also means I need to REOPEN and then RESOLVE as WONTFIX

Sorry for the inconvenience.
LATER and REMIND resolutions will be going away with the upgrade of Bugzilla to the latest Bugzilla 3.4.  They are no longer part of the default Bugzilla installation. See http://dev.eclipse.org/mhonarc/lists/eclipse.org-committers/msg00778.html for the announcement.

As a result 
RESOLVED + REMIND OR LATER 
will be changed to
RESOLVED + WONTFIX

This unfortunately also means I need to REOPEN and then RESOLVE as WONTFIX

Sorry for the inconvenience.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19602" />
    <CreationDate amount="2002-06-07 10:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Printing] Line numbers aren't printed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="8">
        <Lines>
          <Line>1. Capability to adjust font, or at least the font size.</Line>
          <Line>- This would allow printing in a small font to minimize the number of folded lines and pages, or a larger font size for offline markup and editing.</Line>
          <Line />
          <Line>2. Either a header or footer, preferably with page numbering capability.</Line>
          <Line>- This would allow those of us who are clericly challanged to keep better track of things by adding information like date, project and file name.</Line>
          <Line>Hi Felipe, now that 3.2 is out the door would you be able to make a firm statement about this fix being in the next release, i.e. 3.3?</Line>
          <Line>Sure, I'll work in this item soon (one or two weeks time).</Line>
          <Line>Regarding &lt;a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=19602#c42"&gt;comment 42&lt;/a&gt; and having differing headers (and my reason for it).</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>1) Page Header and Page Footer - We already have that since 2.1</Line>
          <Line>2) Custom font for Line Number - low priority IMO</Line>
          <Line>3) Set the number for each line (for folding) - I agree we need this. Could we get this to work with a int array in StyledTextPrintOptions instead of having a callback mechanism ?</Line>
          <Line>I think you used some sort of callback in the patch you sent. I'm not sure I like the callback. Remember that printing runs on a different thread, the callback might not be able to access the thread that owns the content, or the content can change during printing).</Line>
          <Line />
          <Line>4) Margins - low priority IMO</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>1.  Can one specify a font size?  Smaller to minimize line folding; Larger for visually impaired or projection.</Line>
          <Line />
          <Line>2. Will it be possible to minimize top and bottom margins.  It is not clear to me why one needs big margins on any edge except where 3/4 inches could be used to hole punch for a binder.</Line>
          <Line />
          <Line>3. What is the status of printing for folded lines?  How would a folded or multiply folded line appear?  What are the options if any?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Lines numbers aren't printed along with the code. Line numbers are necessary when doing code 
reviews.
not for 2.0
Reopening for 2.1 consideration
*** Bug 6877 has been marked as a duplicate of this bug. ***
*** Bug 29737 has been marked as a duplicate of this bug. ***
this pr has been deferred for 3.0
*** Bug 31029 has been marked as a duplicate of this bug. ***
Is this functionality still committed for the 3.0 release?
There are currently no plans to implement this for 3.0
*** Bug 51605 has been marked as a duplicate of this bug. ***
Seems like nobody at eclipse project ever do code reviews?
Line numbers are essential for that.
This would be great if this functionality was added.  It would make code reviews
a dream come true
This would be very useful, and would seem to be fairly simple to add since the 
capability to view the line numbers already exists.  Why has it been left out 
until now (for the past several years)??
Is this a possible fix that can make it into 3.1??  There obviously a ground-swelling of people who want 
this implemented.  It would be a HUGE help for code reviews.  Please give us an update on when this is 
planned to be implemented.
There are no plans to include this in 3.1 unless we receive a high quality patch.
It is a shame that eclipse does not manage to do this.
(In reply to comment #14)
&gt; There are no plans to include this in 3.1 unless we receive a high quality
patch.Why is print formatting (header, footers, line numbers, etc.) not seen as
an important feature? I creates a significant NEGATIVE opinion of the product in
enterprise settings that have any kind of formal development framework, because
it requires you to print the code in another tool for code reviews etc. I urge
you to strongly reconsider the priority the whole issue receives. I can see this
one issue preventing the adoption of Eclipse in some shops despite all its
wonderful features and its great community.

I couldn't believe eclipse REALLY can't do this.

Can't be too difficult -- OK i know :-)

I don't know how you guys do code reviews, but it really is a necessity. Besides
this is really embarassing for such a highly praised tool.

This is the ultimate argument for a project manager to nuke eclipse.

Really.

Tzzz


This is a must-have for a large development shop like ours.  We need to have 
line numbers and customizable headers and footers.
Code inspections are an integral part of our software development process.  The 
inability to print with line numbers is very discouraging.  I'm surprised this 
is not a high priority fix. 


*** Bug 106476 has been marked as a duplicate of this bug. ***
Is there any news on the status of this bug?  Will it be fixed?  If so, when?
If you are looking for someone to submit a patch, in what part of the
architecture should we begin looking?  I am not a commiter so I am not familiar
with where everything is, but at least someone can begin working on it if no one
has already.
&gt;Will it be fixed?  If so, when?
As you can see in the keywords field help is wanted to fix this i.e. we
currently don't plan to work on this unless there's a high-quality patch
attached to this bug report.

The interesting code points to loo at are TextViewer.print() which currently
delegates to the StyledText widget to print the text.
Created attachment 26998
Quick and dirty fix

This quick fix provides the absolute minimal functionality that I required. 
Please improve upon it as your needs dictate.

Apply in the root directory of the source archive contained in
eclipse-sourceBuild-srcIncluded-3.1.zip:

patch -p1 &lt; eclipse-SDK-3.1-print-line-numbers.patch
The patch is for Platform SWT. It will fail if code folding is enabled. Feel
free to submit the patch to Platform SWT.
I have been working on a patch for this and I think I got it all in pretty good shape over the weekend.  I will attach three patches (swt, jface.text and ui.editors).  The patches will be against what I found in HEAD this morning.  There are some new api added in the swt and jface.text but they should not break anyone and the existing default behavior (if the line number ruler is not showing) is not changed.

The solution is not specific to printing line numbers.  It is generic to printing any kind of annotation in the leading or trailing margin (left and right when in a LTR orientation).  It also supports various options for aligning the notations within the margin.  I have implemented line numbers as a leading margin print annotation when the line number ruler is showing (right aligned so that the column of numbers look correct).  It handles folding correctly (even prints a '+' at the fold point without losing alignment of the column of line numbers.

I also fixed a bug where the spliting of a line across a page boundary was not handled correctly.

I have added a couple TODO tags to SWT where I think a couple more changes could be justified (for example, where the header and footer are printed if they are specified in the options).  We should discuss those separately however.

Comments very welcomed.

Created attachment 34574
SWT portion of the patch
Created attachment 34575
JFace portion of the patch
Created attachment 34576
SWT portion of the patch -- again

Oops...   now why did I check the obsoletes the SWT patch check box as I posted the JFace patch?   ;-(
Created attachment 34577
UI Editors portion of the patch

Keeping my dirty hands of the obsoletes checkboxes this time  ;-)
Adding Steve N to assess the SWT portion of the patch.

Steve N, if someone else on SWT should look at this, please add them.  Thanks.

Moving to Platform SWT for their portion. Once this is in I can go ahead with the Platform Text part.
It is great to see this issue getting fixed!

I have followed the bug for a while and I would like to thank you for
your effort!

Thank you Steven!
Thank-you, thank-you, thank-you for working on this.

(Just had a small accident while carrying the printout for 25 classes down a staircase. Had my hand jostled and the printouts went flying. Since there are no headers, and trying to re-construct which source code page belonged to which class, never mind which order, is next to impossible, I ended up re-printing everything. Class by class, since you cannot select a bunch of classes for a mass print).
Has anyone on the SWT team had a chance to look at the patch?  Would it be possible to get this in 3.2 M6?  This would require PMC approval since there are additions to the api, however, there is quite a bit of community interest in this bug so it may be worth it.  Of course, it would only be worth it if the jface api additions were approved too.

If I may make a suggestion for the implementation?

Headers need not be identical:
The header for the first printed page could be quite large and contain a lot of information such as actual file name, package/class, last modified date, size in bytes, Date printed, etc
The header for page 2+ would have only the package/class, date printed, and page X of Y

Page X of Y:
This requires two passes through the code. The first to establish the number of pages required, the second to actually print the code. All printing rules would be followed during the first pass, just no output

Line Numbers:
The line numbers would follow the line numbers showing in the editor. So if the editor had:
1 line 1
2 line 2
3 Line three is a very long line
4 line 4
5 line 5

The printout would show:
1| line 1
2| line 2
3| Line three is a
 | very long line
4| line 4
5| line 5

Odd/Even printing:
This is for printers which do not have a duplexor. You would first print the odd pages, then place the printed o/p back into the printer (flipped) to print the even pages.

Gutters:
Alternating gutter margins for odd/even pages. This is useful for duplex printouts which are bound.

I have written a list utility (in C, a lot of years ago) which does all this. If  needed I could try to locate the source.

Thanks!
I've been tracking this bug for several years and can't believe it is not fixed yet. Event when the patch is available nobody wants to move it. 
This feature should have been implemented in the initial version and the fact that is it still not available shows that priority of the Eclipse development team is misaligned with real needs of development community.

I guess it will not be fixed in 3.2?
&gt;that is it still not available shows that priority of the Eclipse development
&gt;team is misaligned with real needs of development community.

Wow.  That's a pretty strong statement for this bug given all the other things that Eclipse does for you.  Go ahead and apply the patch and it can be fixed for you.
There is no way we can get to this for 3.2.  We are at RC3 and way past API freeze.  Ping early in the 3.3 development cycle.  Thanks and sorry for missing this one.
Sorry Dimitry, when this bug was assigned to me we were only a few days away from the API freeze. I'll work on this after the release.
I guess the strong language did accomplish the goal.
I did not mean to offend anyone but I strongly believe that this should be a part of core functionality for any decent code editor.
I understand that is is too late for 3.2 and will patiently wait for 3.3.

I do believe that Eclipse is by far the best IDE and RCP platform available.
&gt;I guess the strong language did accomplish the goal.

I wouldn't say that.  The bug is legit and has lots of votes.  Strong language tends to put people off rather than help.
Felipe, when you are ready to get back to this please let me know.  I have not had any time to further work on the patch and I have a few ideas on how it could be better.

As for comment 35, the correct numbering when line splitting is already handled by the patch as you mention.  As for the rest, those are interesting ideas but may be beyond the scope of what we would want to do for what is basically a simple text editor and not a work processor.  A nicely decorated text editor in several extended usages like the Java editor, but still a text editor.  For example, wrt to gutters, how many people would ever really need or want to bind Java code listings?  The most interesting idea to me in comment 35 is the page x of y thought.

Comments?

Let me suggest two enhancments that would make printing with line numbers more useful:
  1. Capability to adjust font, or at least the font size.
     - This would allow printing in a small font to minimize the number of folded lines and pages, or a larger font size for offline markup and editing. 

 2. Either a header or footer, preferably with page numbering capability.
    - This would allow those of us who are clericly challanged to keep better track of things by adding information like date, project and file name.
Hi Felipe, now that 3.2 is out the door would you be able to make a firm statement about this fix being in the next release, i.e. 3.3?
Sure, I'll work in this item soon (one or two weeks time). 
Regarding &lt;a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=19602#c42"&gt;comment 42&lt;/a&gt; and having differing headers (and my reason for it).

We have all had that last page print out with its lonely closing curly brace. Having headers which are as tight as possible (yet providing sufficient identifying information) saves paper. Yet you still want to know about the file.

Which is why I had my printing app print a lot of info in the header on the first page, yet minimal info on subsequent pages.

Just a thought :-)
Fixed in HEAD &gt; 20060720

I added a very simple support, a flag in StyledTextPrintOptions named printLineNumbers.
Felipe, thanks for the update but as noted in comment 24 this simple fix will not work when code folding is enabled.  What you have done is probably a good solution for anyone using StyleTextPrintOptions.  The more I have thought about this I think the patches I proposed need to be moved out of the current api that involves SytledTextPrintOptions and I need to instead create a new more advanced api that involves an entirely new options class (StyledTextPrintOptions2 ???).  At that point I think I would add providers for all four margins and not just the left and right.

What you think?  Should a new feature request be opened to track this?  Hopefully I will have some time to dig back into this later this month.

The option to use a smaller font for printing with line numbers could make code more readable by cutting down on the number folded lines. It can also save a lot of paper.  I find a 9 or 10 point sans-serif font quite useful or offline review of code. 
This issues probably should not be marked as "FIXED" until a robust solution is implemented.  As I understand the solution submitted in 3.3M1, it is not robust.  (I gather that fonts, page headers, and code folding are still issues.)  Discussion of implementing this feature as a plugin has been suggested using integration with PaperClips -- with code for the proof of concept.

http://www.eclipseplugincentral.com/PNphpBB2-viewtopic-t-1334.html

Starting with a robust API would be easier than starting from scratch.  On my list, this feature is important enough to merit inclusion of such an API into the core distribution.  I guess BIRT would also have some tools to offer.

Just a humble suggestion to consider for a sticky problem.

Please consider re-opening this issue until the solution addresses the broader issues discussed in the comments.  This is more than just "line numbers".

So which 'patches' do I need to install?  Just the last two?  And more importantly, will these patch 3.2?
*** Bug 171588 has been marked as a duplicate of this bug. ***
We should either reopen this bug or create a new one because the initial feature request isn't available yet i.e. no line numbers are printed along with code.

Sine it would not be good to always print the line numbers we need an enhanced PrintDialog where this can be set. Currently clients are not allowed to subclass it.
Steven what is minimum set of features you need to have this working for Eclipse ? 

1) Page Header and Page Footer - We already have that since 2.1
2) Custom font for Line Number - low priority IMO 
3) Set the number for each line (for folding) - I agree we need this. Could we get this to work with a int array in StyledTextPrintOptions instead of having a callback mechanism ?
I think you used some sort of callback in the patch you sent. I'm not sure I like the callback. Remember that printing runs on a different thread, the callback might not be able to access the thread that owns the content, or the content can change during printing).

4) Margins - low priority IMO 


--------

Daniel, I'm not sure we can customize the OS PrintDialog to add a print lines check box. On windows I think we can do it, but carbon and gtk I don't think so. 
Can you add a preference page option for this ?

&gt;Can you add a preference page option for this ?
You might want to print line numbers for Fortran but not for Java and text. Each editor kind would have to add that preference which is not a feasible approach.
Would it be possible to wrap the OS dialog in your own or does the OS dialog need its own shell?
I am the person that submitted this bug (in 2002), so I see the comments
as they are posted.

I just noticed comment # 55 which states: "You might want to print line
numbers for Fortran but not for Java and text."

I might have mis-understood this comment, but the bug came about because our
team was holding code reviews for Java and found it very hard to do this
without line numbers. This is especially true if you don't have everyone in
the same room. I don't follow the correlation of language and need for
line numbers.
I will attempt to answer the questions from comment 54.

First, note that my patches are more general than just printing line numbers.  They enable the printing of any sort of leading or trailing (Bidi enabled) margin decorator that can be represented as a (short) string, of which line numbers are one example.  There are many other possibilities.  Also note that I think I have these patches ported on top of 3.3 M1 somewhere on my machine.  If it would help to have updated patches from back then, I can root around for it.

&gt;&gt;1) Page Header and Page Footer - We already have that since 2.1
Yes, but it is not implemented quite right. Currently, if a header or footer is specified, the space for it is taken from the print area. It should really come from the default (or specified, if we add that support), top and bottom margin areas.  My patches do not address this issue.

&gt;&gt;2) Custom font for Line Number - low priority IMO 
Not real important for line numbers.  Could be important for others.  Certainly lower priority than the rest of this.

&gt;&gt;3) Set the number for each line (for folding) - I agree we need this. Could we
&gt;&gt;get this to work with a int array in StyledTextPrintOptions instead of having &gt;&gt;a callback mechanism ?
&gt;&gt;I think you used some sort of callback in the patch you sent. I'm not sure I
&gt;&gt;like the callback. Remember that printing runs on a different thread, the
&gt;&gt;callback might not be able to access the thread that owns the content, or the
&gt;&gt;content can change during printing).
An int array would not provide the flexibility of the callback since it would only support line numbers or some other number that had meaning.  The int array would have to be a full mapping of the StyleText widget line numbers to the document model line numbers.  This would require to TextViewer subclasses to overright the TextViewer#print() method (certainly possible) and to create the mapping at that point.  I am not sure about how feasible it would be to create the map at that time since I have not tried it, but it sounds possible.  Also, I think a String array (or map) would be better.  You could get back some of the flexibility (maybe all - if you enable two maps, one leading and one trailing).  You could get back the one important aspect of having strings that I did take advantage of in my patches, putting the '+' character in the string at the fold points.  It makes the print out with folded lines much easier to scan.

I honestly can not remember exactly why I went with the callback back when I did this.  I think it was because it seems to work more naturally with how the jface text viewers and the AbstractDecoratedTextEditors behind them operate.  As for the thread issue, the callback is done along with all the other data caching and copying that was already being done before thread launch in order to avoid that problem (see StyledText.Printing#cacheLineData()).  So, that is not an issue.
Also, note that StyledText.Printing does not handle the print page range nor print selection options from the print dialog exactly right.  This includes copying everything, including calling all my line number mapping callbacks, when it is not all really required.  If this is ever optimized one day, the callbacks would get the same benefit.  The design that would have the TextViewer calculate the mapping before calling StyledText#print(...) would not be able to optimize this since the print dialog would not have been shown yet.

&gt;&gt;4) Margins - low priority IMO 
Lower priority perhaps, but really nice.  Right now in the preferences, General-&gt;Editors-&gt;Text Editors, there is an option called "Show print margin" (includes be able to specify a number of characters for width) that is worse than totally useless without this support, it is downright misleading.  I have not done the work on this, but it would be great to not only be able to specify margins that are a particular size but also be able to say the the print area needs to fit the number of characters specified in that preference.  It could be accomplished by shrinking the print font and making small adjustments to the specified margins to hit the "n*fontWidth" calculation just right.

Also, note that the current right margin calculation when no margin is specified is wrong (comments say it will be one inch but it is less).  I think I noted that in my patch but did not fix it.  I did not want to change the existing behavior when print options are not specified.  If we went without being able to specify margins sizes, we would probably want to fix this.
That was just an example. The point is, that while it makes sense for code reviews you probably don't want line numbers printed for normal text files.
With regard to comment 55 and comment 57, I do not think there is a need for any new preferences nor print dialog options to indicate if line numbers are printed or not.  At General-&gt;Editors-&gt;Text Editors in the preferences dialog there is already the "Show Line Numbers" option.  If this support is added, I would expect that if line numbers are showing that they would be printed and if they are not showing, they would not be printed.
You're right. We already have that preference for the UI and could simply reuse it for printing.

&gt;&gt;4) Margins - low priority IMO 
&gt;Lower priority perhaps, but really nice.  Right now in the preferences,
&gt;General-&gt;Editors-&gt;Text Editors, there is an option called "Show print margin"
&gt;(includes be able to specify a number of characters for width) that is worse
&gt;than totally useless without this support,
Maybe the name is misleading but calling this totally useless goes too far because if enabled the margin is shown in the editor and this is really helpful especially if you format your code with same max line width.
Okay, totally useless was a bit harsh.  Sorry about that.  I was focused on the print aspect and it does not affect the print margin at all as implied by the name.  Having a margin indicator in the editor is certainly useful at times.

Steven:
If we add String[] lineLabels to StyledTextPrintOptions.

Is that good enough ? ;-) 
I mean, I think margins is totally different problem at this point and probably deserves its own problem report.

---
Dani:
&gt;You're right. We already have that preference for the UI and could simply
&gt;reuse it for printing.

So we don't need to touch PrintDialog. Right ?


&gt;So we don't need to touch PrintDialog. Right ?
Yes, we can link it to the existing preference that we use for the UI.

A couple of things are not clear to me from the discssion. 
(Being a intermittant, part time programmer I havn't had a chance to look at the patches. My usage may be different from most programmers.  I don't like looking a screen for long periods so I do considerable review and change planning off line with hard copy and pencil.)

In the curent fix: 

1.  Can one specify a font size?  Smaller to minimize line folding; Larger for visually impaired or projection.

2. Will it be possible to minimize top and bottom margins.  It is not clear to me why one needs big margins on any edge except where 3/4 inches could be used to hole punch for a binder.

3. What is the status of printing for folded lines?  How would a folded or multiply folded line appear?  What are the options if any?


&gt;&gt;If we add String[] lineLabels to StyledTextPrintOptions.
&gt;&gt;Is that good enough ? ;-) 

Probably, but the key would then be to get the jface viewers to change to use it.  Of course, that would be a key in any of these solutions.

You would need to validate the size of the array agains StyleText#getLineCount() or be defensive about reaching the end of it.

Also, are you proposing one array or two?  And would the one, I think that is what you are proposing, be a LEFT margin array or a LEADING array (move to the RIGHT margin if running in RTL)?  My patches support that, but interestingly, if you run in RTL with line numbers on, they still show up on the LEFT of the editor.  If I recall correctly, I think this is intentional.  You may want to let the caller specify if they want them on the LEFT or RIGHT.

In the case of numbers, you will want to align the number to the RIGHT (align the units, tens, etc colums like the editor).  If the caller adds the '+' character to some lines they should take care to add a ' ' to the others.  You may want to mention that in the Javadoc.  Of course, there could be cases of things other than numbers where a different alignment would be better.  You may want to consider an alignment settings (within the margin) of LEFT, CENTER and RIGHT.  My patches had that.

So, the simplest implementation would take a single String[] that was always on the LEFT and the text was always RIGHT aligned within that margin (with a note about the '+'/' ' thing).  That would solve the original problem that this bug was opened for.  Note that I did not raise this requirement, it just seemed like an interesting problem so I dove in.

A more complete implementation would take two String[], one for the LEFT and one for the RIGHT (would leave the RTL question to the caller) and would allow an alignment attribute to be specified for each (LEFT, CENTER, RIGHT).

I think if you did the simplier one now and named the String[] option leftMarginDecorations or similar, it would be relatively straight forward to expand the API into the more complete solution in the future if needed.

So, yes, I think the simpler solution is the the way to go for now.
Regarding folded: code: the question is whether we print what we see in the editor or whether we should print the full text. Other commands take the full folded code and not just what's seen in the editor (e.g. copy).
Created attachment 59913
patch line labels

Steven, please test this patch and let me know if you are okay if this fix.
I would like to request that this bug be re-opened, as it hasn't been resolved and I cannot print line numbers.  While I understand that there are patches available, those patches do me no good as I use a binary distribution on three different OSes and I don't have the time nor desire to patch all of them.  I also use eclipse at work and school, and I can't patch those installs either.  This has been ongoing for close to five years now, and as many people have stated, this should be part of the core functionality.

Is there any idea when this will be fully resolved - that is, I can take a stock, binary eclipse install, add my plugins and be able to print line numbers?
How can this be declared fixed - I've got 3.3, build: I20070323-1616 installed. I turn on the option to display line numbers as per comment 60. I print out a file and I get no line numbers. So please tell us how this can be fixed?

My current workaround - open the files in notepad++ and print them out from there.

Is there anyone else who thinks this is embarrassing? (BTW I'm not trying to pick on Felipe or Steven).
I've just tested the final Europa release (3.3) with CDT4.0 and there are no line numbers in printed file!

This bug should be re-opened.
If this bug really is RESOLVED/FIXED, would it be possible to add instructions to the "What's new?" discussion telling how to do so?

I have a freshly-downloaded copy of JDT 3.3.0.v20070606-... running on Platform 3.3.0.v20070612-... with "Show line numbers" checked. The line numbers display properly in the Java source editor, the XML source editor, and the text editor. However, line numbers are not printing from any of those editors.

Is there another preferences option to be set, or is this bug not resolved?

I guess this problem is confusing people. So let me make this clear:

I did fix this in SWT, unfortunately the JDT-UI could not use it because the support I added in StyledText was not sufficent (it did not handled folding properly). 
So I added a patch in comment #68 to fix this.

Steven Wasleski: with the support proposed in my last patch can you fix this problem in your side ?

I think the Platform UI team would need to make changes to use this, probably similar to what I did in my suggested patches. But they would be the best people to assess the proposed change's fit. If done properly, the JDT team should not need to change anything and all editors based off the AbstractDecoratedTextEditor should benefit.
&gt;I think the Platform UI team would need to make changes
That would be Platform Text, see bug 6877. I'll take a look and report back.
OK, I looked at the current solution and the patch.

The current solution has two problems:
1. As already mentioned it is not possible to provide the line numbers and
   even without folding it will be wrong as StyledText line number printing
   starts with 0.
2. The line numbers are printed too low (using Courier New Regular 10) compared
   to the text (see attached picture).

The patch allows me to fix problem 1 but problem 2 persists. I suggest to commit the patch right now and track problem 2 in a new bug. This would allow us to ship this new feature with 3.4 M3.
Created attachment 80953
Postscript file showing alignment problem
Kevin, please release the patch.
released Felipe's patch (from comment #68) to HEAD.
This bug is now fixed. I filed bug 207558 for the alignment problem.</WithStack>
    <WithOutStack>Lines numbers aren't printed along with the code. Line numbers are necessary when doing code 
reviews.
not for 2.0
Reopening for 2.1 consideration
*** Bug 6877 has been marked as a duplicate of this bug. ***
*** Bug 29737 has been marked as a duplicate of this bug. ***
this pr has been deferred for 3.0
*** Bug 31029 has been marked as a duplicate of this bug. ***
Is this functionality still committed for the 3.0 release?
There are currently no plans to implement this for 3.0
*** Bug 51605 has been marked as a duplicate of this bug. ***
Seems like nobody at eclipse project ever do code reviews?
Line numbers are essential for that.
This would be great if this functionality was added.  It would make code reviews
a dream come true
This would be very useful, and would seem to be fairly simple to add since the 
capability to view the line numbers already exists.  Why has it been left out 
until now (for the past several years)??
Is this a possible fix that can make it into 3.1??  There obviously a ground-swelling of people who want 
this implemented.  It would be a HUGE help for code reviews.  Please give us an update on when this is 
planned to be implemented.
There are no plans to include this in 3.1 unless we receive a high quality patch.
It is a shame that eclipse does not manage to do this.
(In reply to comment #14)
&gt; There are no plans to include this in 3.1 unless we receive a high quality
patch.Why is print formatting (header, footers, line numbers, etc.) not seen as
an important feature? I creates a significant NEGATIVE opinion of the product in
enterprise settings that have any kind of formal development framework, because
it requires you to print the code in another tool for code reviews etc. I urge
you to strongly reconsider the priority the whole issue receives. I can see this
one issue preventing the adoption of Eclipse in some shops despite all its
wonderful features and its great community.

I couldn't believe eclipse REALLY can't do this.

Can't be too difficult -- OK i know :-)

I don't know how you guys do code reviews, but it really is a necessity. Besides
this is really embarassing for such a highly praised tool.

This is the ultimate argument for a project manager to nuke eclipse.

Really.

Tzzz


This is a must-have for a large development shop like ours.  We need to have 
line numbers and customizable headers and footers.
Code inspections are an integral part of our software development process.  The 
inability to print with line numbers is very discouraging.  I'm surprised this 
is not a high priority fix. 


*** Bug 106476 has been marked as a duplicate of this bug. ***
Is there any news on the status of this bug?  Will it be fixed?  If so, when?
If you are looking for someone to submit a patch, in what part of the
architecture should we begin looking?  I am not a commiter so I am not familiar
with where everything is, but at least someone can begin working on it if no one
has already.
&gt;Will it be fixed?  If so, when?
As you can see in the keywords field help is wanted to fix this i.e. we
currently don't plan to work on this unless there's a high-quality patch
attached to this bug report.

The interesting code points to loo at are TextViewer.print() which currently
delegates to the StyledText widget to print the text.
Created attachment 26998
Quick and dirty fix

This quick fix provides the absolute minimal functionality that I required. 
Please improve upon it as your needs dictate.

Apply in the root directory of the source archive contained in
eclipse-sourceBuild-srcIncluded-3.1.zip:

patch -p1 &lt; eclipse-SDK-3.1-print-line-numbers.patch
The patch is for Platform SWT. It will fail if code folding is enabled. Feel
free to submit the patch to Platform SWT.
I have been working on a patch for this and I think I got it all in pretty good shape over the weekend.  I will attach three patches (swt, jface.text and ui.editors).  The patches will be against what I found in HEAD this morning.  There are some new api added in the swt and jface.text but they should not break anyone and the existing default behavior (if the line number ruler is not showing) is not changed.

The solution is not specific to printing line numbers.  It is generic to printing any kind of annotation in the leading or trailing margin (left and right when in a LTR orientation).  It also supports various options for aligning the notations within the margin.  I have implemented line numbers as a leading margin print annotation when the line number ruler is showing (right aligned so that the column of numbers look correct).  It handles folding correctly (even prints a '+' at the fold point without losing alignment of the column of line numbers.

I also fixed a bug where the spliting of a line across a page boundary was not handled correctly.

I have added a couple TODO tags to SWT where I think a couple more changes could be justified (for example, where the header and footer are printed if they are specified in the options).  We should discuss those separately however.

Comments very welcomed.

Created attachment 34574
SWT portion of the patch
Created attachment 34575
JFace portion of the patch
Created attachment 34576
SWT portion of the patch -- again

Oops...   now why did I check the obsoletes the SWT patch check box as I posted the JFace patch?   ;-(
Created attachment 34577
UI Editors portion of the patch

Keeping my dirty hands of the obsoletes checkboxes this time  ;-)
Adding Steve N to assess the SWT portion of the patch.

Steve N, if someone else on SWT should look at this, please add them.  Thanks.

Moving to Platform SWT for their portion. Once this is in I can go ahead with the Platform Text part.
It is great to see this issue getting fixed!

I have followed the bug for a while and I would like to thank you for
your effort!

Thank you Steven!
Thank-you, thank-you, thank-you for working on this.

(Just had a small accident while carrying the printout for 25 classes down a staircase. Had my hand jostled and the printouts went flying. Since there are no headers, and trying to re-construct which source code page belonged to which class, never mind which order, is next to impossible, I ended up re-printing everything. Class by class, since you cannot select a bunch of classes for a mass print).
Has anyone on the SWT team had a chance to look at the patch?  Would it be possible to get this in 3.2 M6?  This would require PMC approval since there are additions to the api, however, there is quite a bit of community interest in this bug so it may be worth it.  Of course, it would only be worth it if the jface api additions were approved too.

If I may make a suggestion for the implementation?

Headers need not be identical:
The header for the first printed page could be quite large and contain a lot of information such as actual file name, package/class, last modified date, size in bytes, Date printed, etc
The header for page 2+ would have only the package/class, date printed, and page X of Y

Page X of Y:
This requires two passes through the code. The first to establish the number of pages required, the second to actually print the code. All printing rules would be followed during the first pass, just no output

Line Numbers:
The line numbers would follow the line numbers showing in the editor. So if the editor had:
1 line 1
2 line 2
3 Line three is a very long line
4 line 4
5 line 5

The printout would show:
1| line 1
2| line 2
3| Line three is a
 | very long line
4| line 4
5| line 5

Odd/Even printing:
This is for printers which do not have a duplexor. You would first print the odd pages, then place the printed o/p back into the printer (flipped) to print the even pages.

Gutters:
Alternating gutter margins for odd/even pages. This is useful for duplex printouts which are bound.

I have written a list utility (in C, a lot of years ago) which does all this. If  needed I could try to locate the source.

Thanks!
I've been tracking this bug for several years and can't believe it is not fixed yet. Event when the patch is available nobody wants to move it. 
This feature should have been implemented in the initial version and the fact that is it still not available shows that priority of the Eclipse development team is misaligned with real needs of development community.

I guess it will not be fixed in 3.2?
&gt;that is it still not available shows that priority of the Eclipse development
&gt;team is misaligned with real needs of development community.

Wow.  That's a pretty strong statement for this bug given all the other things that Eclipse does for you.  Go ahead and apply the patch and it can be fixed for you.
There is no way we can get to this for 3.2.  We are at RC3 and way past API freeze.  Ping early in the 3.3 development cycle.  Thanks and sorry for missing this one.
Sorry Dimitry, when this bug was assigned to me we were only a few days away from the API freeze. I'll work on this after the release.
I guess the strong language did accomplish the goal.
I did not mean to offend anyone but I strongly believe that this should be a part of core functionality for any decent code editor.
I understand that is is too late for 3.2 and will patiently wait for 3.3.

I do believe that Eclipse is by far the best IDE and RCP platform available.
&gt;I guess the strong language did accomplish the goal.

I wouldn't say that.  The bug is legit and has lots of votes.  Strong language tends to put people off rather than help.
Felipe, when you are ready to get back to this please let me know.  I have not had any time to further work on the patch and I have a few ideas on how it could be better.

As for comment 35, the correct numbering when line splitting is already handled by the patch as you mention.  As for the rest, those are interesting ideas but may be beyond the scope of what we would want to do for what is basically a simple text editor and not a work processor.  A nicely decorated text editor in several extended usages like the Java editor, but still a text editor.  For example, wrt to gutters, how many people would ever really need or want to bind Java code listings?  The most interesting idea to me in comment 35 is the page x of y thought.

Comments?

Let me suggest two enhancments that would make printing with line numbers more useful:
  1. Capability to adjust font, or at least the font size.
     - This would allow printing in a small font to minimize the number of folded lines and pages, or a larger font size for offline markup and editing. 

 2. Either a header or footer, preferably with page numbering capability.
    - This would allow those of us who are clericly challanged to keep better track of things by adding information like date, project and file name.
Hi Felipe, now that 3.2 is out the door would you be able to make a firm statement about this fix being in the next release, i.e. 3.3?
Sure, I'll work in this item soon (one or two weeks time). 
Regarding &lt;a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=19602#c42"&gt;comment 42&lt;/a&gt; and having differing headers (and my reason for it).

We have all had that last page print out with its lonely closing curly brace. Having headers which are as tight as possible (yet providing sufficient identifying information) saves paper. Yet you still want to know about the file.

Which is why I had my printing app print a lot of info in the header on the first page, yet minimal info on subsequent pages.

Just a thought :-)
Fixed in HEAD &gt; 20060720

I added a very simple support, a flag in StyledTextPrintOptions named printLineNumbers.
Felipe, thanks for the update but as noted in comment 24 this simple fix will not work when code folding is enabled.  What you have done is probably a good solution for anyone using StyleTextPrintOptions.  The more I have thought about this I think the patches I proposed need to be moved out of the current api that involves SytledTextPrintOptions and I need to instead create a new more advanced api that involves an entirely new options class (StyledTextPrintOptions2 ???).  At that point I think I would add providers for all four margins and not just the left and right.

What you think?  Should a new feature request be opened to track this?  Hopefully I will have some time to dig back into this later this month.

The option to use a smaller font for printing with line numbers could make code more readable by cutting down on the number folded lines. It can also save a lot of paper.  I find a 9 or 10 point sans-serif font quite useful or offline review of code. 
This issues probably should not be marked as "FIXED" until a robust solution is implemented.  As I understand the solution submitted in 3.3M1, it is not robust.  (I gather that fonts, page headers, and code folding are still issues.)  Discussion of implementing this feature as a plugin has been suggested using integration with PaperClips -- with code for the proof of concept.

http://www.eclipseplugincentral.com/PNphpBB2-viewtopic-t-1334.html

Starting with a robust API would be easier than starting from scratch.  On my list, this feature is important enough to merit inclusion of such an API into the core distribution.  I guess BIRT would also have some tools to offer.

Just a humble suggestion to consider for a sticky problem.

Please consider re-opening this issue until the solution addresses the broader issues discussed in the comments.  This is more than just "line numbers".

So which 'patches' do I need to install?  Just the last two?  And more importantly, will these patch 3.2?
*** Bug 171588 has been marked as a duplicate of this bug. ***
We should either reopen this bug or create a new one because the initial feature request isn't available yet i.e. no line numbers are printed along with code.

Sine it would not be good to always print the line numbers we need an enhanced PrintDialog where this can be set. Currently clients are not allowed to subclass it.
Steven what is minimum set of features you need to have this working for Eclipse ? 

1) Page Header and Page Footer - We already have that since 2.1
2) Custom font for Line Number - low priority IMO 
3) Set the number for each line (for folding) - I agree we need this. Could we get this to work with a int array in StyledTextPrintOptions instead of having a callback mechanism ?
I think you used some sort of callback in the patch you sent. I'm not sure I like the callback. Remember that printing runs on a different thread, the callback might not be able to access the thread that owns the content, or the content can change during printing).

4) Margins - low priority IMO 


--------

Daniel, I'm not sure we can customize the OS PrintDialog to add a print lines check box. On windows I think we can do it, but carbon and gtk I don't think so. 
Can you add a preference page option for this ?

&gt;Can you add a preference page option for this ?
You might want to print line numbers for Fortran but not for Java and text. Each editor kind would have to add that preference which is not a feasible approach.
Would it be possible to wrap the OS dialog in your own or does the OS dialog need its own shell?
I am the person that submitted this bug (in 2002), so I see the comments
as they are posted.

I just noticed comment # 55 which states: "You might want to print line
numbers for Fortran but not for Java and text."

I might have mis-understood this comment, but the bug came about because our
team was holding code reviews for Java and found it very hard to do this
without line numbers. This is especially true if you don't have everyone in
the same room. I don't follow the correlation of language and need for
line numbers.
I will attempt to answer the questions from comment 54.

First, note that my patches are more general than just printing line numbers.  They enable the printing of any sort of leading or trailing (Bidi enabled) margin decorator that can be represented as a (short) string, of which line numbers are one example.  There are many other possibilities.  Also note that I think I have these patches ported on top of 3.3 M1 somewhere on my machine.  If it would help to have updated patches from back then, I can root around for it.

&gt;&gt;1) Page Header and Page Footer - We already have that since 2.1
Yes, but it is not implemented quite right. Currently, if a header or footer is specified, the space for it is taken from the print area. It should really come from the default (or specified, if we add that support), top and bottom margin areas.  My patches do not address this issue.

&gt;&gt;2) Custom font for Line Number - low priority IMO 
Not real important for line numbers.  Could be important for others.  Certainly lower priority than the rest of this.

&gt;&gt;3) Set the number for each line (for folding) - I agree we need this. Could we
&gt;&gt;get this to work with a int array in StyledTextPrintOptions instead of having &gt;&gt;a callback mechanism ?
&gt;&gt;I think you used some sort of callback in the patch you sent. I'm not sure I
&gt;&gt;like the callback. Remember that printing runs on a different thread, the
&gt;&gt;callback might not be able to access the thread that owns the content, or the
&gt;&gt;content can change during printing).
An int array would not provide the flexibility of the callback since it would only support line numbers or some other number that had meaning.  The int array would have to be a full mapping of the StyleText widget line numbers to the document model line numbers.  This would require to TextViewer subclasses to overright the TextViewer#print() method (certainly possible) and to create the mapping at that point.  I am not sure about how feasible it would be to create the map at that time since I have not tried it, but it sounds possible.  Also, I think a String array (or map) would be better.  You could get back some of the flexibility (maybe all - if you enable two maps, one leading and one trailing).  You could get back the one important aspect of having strings that I did take advantage of in my patches, putting the '+' character in the string at the fold points.  It makes the print out with folded lines much easier to scan.

I honestly can not remember exactly why I went with the callback back when I did this.  I think it was because it seems to work more naturally with how the jface text viewers and the AbstractDecoratedTextEditors behind them operate.  As for the thread issue, the callback is done along with all the other data caching and copying that was already being done before thread launch in order to avoid that problem (see StyledText.Printing#cacheLineData()).  So, that is not an issue.
Also, note that StyledText.Printing does not handle the print page range nor print selection options from the print dialog exactly right.  This includes copying everything, including calling all my line number mapping callbacks, when it is not all really required.  If this is ever optimized one day, the callbacks would get the same benefit.  The design that would have the TextViewer calculate the mapping before calling StyledText#print(...) would not be able to optimize this since the print dialog would not have been shown yet.

&gt;&gt;4) Margins - low priority IMO 
Lower priority perhaps, but really nice.  Right now in the preferences, General-&gt;Editors-&gt;Text Editors, there is an option called "Show print margin" (includes be able to specify a number of characters for width) that is worse than totally useless without this support, it is downright misleading.  I have not done the work on this, but it would be great to not only be able to specify margins that are a particular size but also be able to say the the print area needs to fit the number of characters specified in that preference.  It could be accomplished by shrinking the print font and making small adjustments to the specified margins to hit the "n*fontWidth" calculation just right.

Also, note that the current right margin calculation when no margin is specified is wrong (comments say it will be one inch but it is less).  I think I noted that in my patch but did not fix it.  I did not want to change the existing behavior when print options are not specified.  If we went without being able to specify margins sizes, we would probably want to fix this.
That was just an example. The point is, that while it makes sense for code reviews you probably don't want line numbers printed for normal text files.
With regard to comment 55 and comment 57, I do not think there is a need for any new preferences nor print dialog options to indicate if line numbers are printed or not.  At General-&gt;Editors-&gt;Text Editors in the preferences dialog there is already the "Show Line Numbers" option.  If this support is added, I would expect that if line numbers are showing that they would be printed and if they are not showing, they would not be printed.
You're right. We already have that preference for the UI and could simply reuse it for printing.

&gt;&gt;4) Margins - low priority IMO 
&gt;Lower priority perhaps, but really nice.  Right now in the preferences,
&gt;General-&gt;Editors-&gt;Text Editors, there is an option called "Show print margin"
&gt;(includes be able to specify a number of characters for width) that is worse
&gt;than totally useless without this support,
Maybe the name is misleading but calling this totally useless goes too far because if enabled the margin is shown in the editor and this is really helpful especially if you format your code with same max line width.
Okay, totally useless was a bit harsh.  Sorry about that.  I was focused on the print aspect and it does not affect the print margin at all as implied by the name.  Having a margin indicator in the editor is certainly useful at times.

Steven:
If we add String[] lineLabels to StyledTextPrintOptions.

Is that good enough ? ;-) 
I mean, I think margins is totally different problem at this point and probably deserves its own problem report.

---
Dani:
&gt;You're right. We already have that preference for the UI and could simply
&gt;reuse it for printing.

So we don't need to touch PrintDialog. Right ?


&gt;So we don't need to touch PrintDialog. Right ?
Yes, we can link it to the existing preference that we use for the UI.

A couple of things are not clear to me from the discssion. 
(Being a intermittant, part time programmer I havn't had a chance to look at the patches. My usage may be different from most programmers.  I don't like looking a screen for long periods so I do considerable review and change planning off line with hard copy and pencil.)

In the curent fix: 

1.  Can one specify a font size?  Smaller to minimize line folding; Larger for visually impaired or projection.

2. Will it be possible to minimize top and bottom margins.  It is not clear to me why one needs big margins on any edge except where 3/4 inches could be used to hole punch for a binder.

3. What is the status of printing for folded lines?  How would a folded or multiply folded line appear?  What are the options if any?


&gt;&gt;If we add String[] lineLabels to StyledTextPrintOptions.
&gt;&gt;Is that good enough ? ;-) 

Probably, but the key would then be to get the jface viewers to change to use it.  Of course, that would be a key in any of these solutions.

You would need to validate the size of the array agains StyleText#getLineCount() or be defensive about reaching the end of it.

Also, are you proposing one array or two?  And would the one, I think that is what you are proposing, be a LEFT margin array or a LEADING array (move to the RIGHT margin if running in RTL)?  My patches support that, but interestingly, if you run in RTL with line numbers on, they still show up on the LEFT of the editor.  If I recall correctly, I think this is intentional.  You may want to let the caller specify if they want them on the LEFT or RIGHT.

In the case of numbers, you will want to align the number to the RIGHT (align the units, tens, etc colums like the editor).  If the caller adds the '+' character to some lines they should take care to add a ' ' to the others.  You may want to mention that in the Javadoc.  Of course, there could be cases of things other than numbers where a different alignment would be better.  You may want to consider an alignment settings (within the margin) of LEFT, CENTER and RIGHT.  My patches had that.

So, the simplest implementation would take a single String[] that was always on the LEFT and the text was always RIGHT aligned within that margin (with a note about the '+'/' ' thing).  That would solve the original problem that this bug was opened for.  Note that I did not raise this requirement, it just seemed like an interesting problem so I dove in.

A more complete implementation would take two String[], one for the LEFT and one for the RIGHT (would leave the RTL question to the caller) and would allow an alignment attribute to be specified for each (LEFT, CENTER, RIGHT).

I think if you did the simplier one now and named the String[] option leftMarginDecorations or similar, it would be relatively straight forward to expand the API into the more complete solution in the future if needed.

So, yes, I think the simpler solution is the the way to go for now.
Regarding folded: code: the question is whether we print what we see in the editor or whether we should print the full text. Other commands take the full folded code and not just what's seen in the editor (e.g. copy).
Created attachment 59913
patch line labels

Steven, please test this patch and let me know if you are okay if this fix.
I would like to request that this bug be re-opened, as it hasn't been resolved and I cannot print line numbers.  While I understand that there are patches available, those patches do me no good as I use a binary distribution on three different OSes and I don't have the time nor desire to patch all of them.  I also use eclipse at work and school, and I can't patch those installs either.  This has been ongoing for close to five years now, and as many people have stated, this should be part of the core functionality.

Is there any idea when this will be fully resolved - that is, I can take a stock, binary eclipse install, add my plugins and be able to print line numbers?
How can this be declared fixed - I've got 3.3, build: I20070323-1616 installed. I turn on the option to display line numbers as per comment 60. I print out a file and I get no line numbers. So please tell us how this can be fixed?

My current workaround - open the files in notepad++ and print them out from there.

Is there anyone else who thinks this is embarrassing? (BTW I'm not trying to pick on Felipe or Steven).
I've just tested the final Europa release (3.3) with CDT4.0 and there are no line numbers in printed file!

This bug should be re-opened.
If this bug really is RESOLVED/FIXED, would it be possible to add instructions to the "What's new?" discussion telling how to do so?

I have a freshly-downloaded copy of JDT 3.3.0.v20070606-... running on Platform 3.3.0.v20070612-... with "Show line numbers" checked. The line numbers display properly in the Java source editor, the XML source editor, and the text editor. However, line numbers are not printing from any of those editors.

Is there another preferences option to be set, or is this bug not resolved?

I guess this problem is confusing people. So let me make this clear:

I did fix this in SWT, unfortunately the JDT-UI could not use it because the support I added in StyledText was not sufficent (it did not handled folding properly). 
So I added a patch in comment #68 to fix this.

Steven Wasleski: with the support proposed in my last patch can you fix this problem in your side ?

I think the Platform UI team would need to make changes to use this, probably similar to what I did in my suggested patches. But they would be the best people to assess the proposed change's fit. If done properly, the JDT team should not need to change anything and all editors based off the AbstractDecoratedTextEditor should benefit.
&gt;I think the Platform UI team would need to make changes
That would be Platform Text, see bug 6877. I'll take a look and report back.
OK, I looked at the current solution and the patch.

The current solution has two problems:
1. As already mentioned it is not possible to provide the line numbers and
   even without folding it will be wrong as StyledText line number printing
   starts with 0.
2. The line numbers are printed too low (using Courier New Regular 10) compared
   to the text (see attached picture).

The patch allows me to fix problem 1 but problem 2 persists. I suggest to commit the patch right now and track problem 2 in a new bug. This would allow us to ship this new feature with 3.4 M3.
Created attachment 80953
Postscript file showing alignment problem
Kevin, please release the patch.
released Felipe's patch (from comment #68) to HEAD.
This bug is now fixed. I filed bug 207558 for the alignment problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19603" />
    <CreationDate amount="2002-06-07 11:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Printing] Page headers</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- filename</Line>
          <Line>-</Line>
          <Line>date/time printed</Line>
          <Line>- username</Line>
          <Line>- page numbers</Line>
          <Line>there is currently no support for printing in SWT - moving to SWT</Line>
          <Line>I'm pretty sure SWT shouldn't add free headers and footers as part of it's</Line>
          <Line>printing support.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>It's useful for printed code to have page headers including the following items:

- filename
- 
date/time printed
- username
- page numbers
there is currently no support for printing in SWT - moving to SWT 
I'm pretty sure SWT shouldn't add free headers and footers as part of it's 
printing support.

Erich, is this a matter of "missing API" on StyledText?
I also believe this is a not likely to be something which SWT should provide 
directly. As Steve says however, if there is required API which we do not 
provide you should request it (or if you have, link the requests to this PR).

StyledText provides this: see StyledTextPrintOptions#header

IMO, makes no sense to have this in GC or Printer</WithStack>
    <WithOutStack>It's useful for printed code to have page headers including the following items:

- filename
- 
date/time printed
- username
- page numbers
there is currently no support for printing in SWT - moving to SWT 
I'm pretty sure SWT shouldn't add free headers and footers as part of it's 
printing support.

Erich, is this a matter of "missing API" on StyledText?
I also believe this is a not likely to be something which SWT should provide 
directly. As Steve says however, if there is required API which we do not 
provide you should request it (or if you have, link the requests to this PR).

StyledText provides this: see StyledTextPrintOptions#header

IMO, makes no sense to have this in GC or Printer</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19604" />
    <CreationDate amount="2002-06-07 11:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Changing JRE JARs triggers useless build</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="16">
        <Lines>
          <Line>1) Have some projects in your workspace which have Java classes in them</Line>
          <Line>2) Go to the 'Window'-&gt;'Preferences'-&gt;'Java'-&gt;'Installed JREs' page</Line>
          <Line>3) find the default JRE</Line>
          <Line>4) make sure that 'Use default system libraries' is unchecked</Line>
          <Line>5) remove rt.jar</Line>
          <Line>6) replace it with some JAR or ZIP file which doesn't contain</Line>
          <Line>java/lang/Object.class</Line>
          <Line>7) press OK</Line>
          <Line>8) press OK</Line>
          <Line>9) Wait for 15 minutes while your workspace rebuilds (with no real indication</Line>
          <Line>of how long it's taking, since the progress monitor goes to 100% immediately)</Line>
          <Line>10) Note that once the build completes, there are NO new errors in the</Line>
          <Line>workspace, despite the absence of important classes like j.l.Object</Line>
          <Line>11) Do a 'Project'-&gt;Rebuild All'</Line>
          <Line>12) Wait for a while more</Line>
          <Line>13) Now the errors appear!</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build F2

See also Bug 19526

If you change the JARs in a JRE (via the 'Window'-&gt;'Preferences'-&gt;'Java'-
&gt;'Installed JREs' page) and press OK, you have to wait for about 15 minutes 
while the whole workspace rebuilds.

But when it's finished, the build seems to have had no effect! You have to do 
a 'Project'-&gt;'Rebuild All' to see the effects of changing the JRE JARs. It's 
like the results of the first build were discarded.

Steps to repeat:

1) Have some projects in your workspace which have Java classes in them
2) Go to the 'Window'-&gt;'Preferences'-&gt;'Java'-&gt;'Installed JREs' page
3) find the default JRE
4) make sure that 'Use default system libraries' is unchecked
5) remove rt.jar
6) replace it with some JAR or ZIP file which doesn't contain 
java/lang/Object.class
7) press OK
8) press OK
9) Wait for 15 minutes while your workspace rebuilds (with no real indication 
of how long it's taking, since the progress monitor goes to 100% immediately)
10) Note that once the build completes, there are NO new errors in the 
workspace, despite the absence of important classes like j.l.Object
11) Do a 'Project'-&gt;Rebuild All'
12) Wait for a while more
13) Now the errors appear!

(Note that the build seems to happen even if the JRE that you're changing 
isn't the default one!)
I followed the steps exactly and got the expected errors... the project was not 
built since Object could not be found.
But adding the default jar back did not rebuild properly. The errors remained.

ps. I'm not seeing any build at all when I edit the non-default JRE. I can add 
new JREs and change them with no build happening.
When I first changed the default JRE, 2 full builds happen... here's a reduced 
build trace:

...
Starting build of org.eclipse.core.resources @ Fri Jun 07 14:33:51 EDT 2002
FULL build
Recording new state : State for org.eclipse.core.resources (#0 @ Fri Jun 07 
14:33:51 EDT 2002)
Finished build of org.eclipse.core.resources @ Fri Jun 07 14:33:51 EDT 2002

Starting build of org.eclipse.core.resources.win32 @ Fri Jun 07 14:33:51 EDT 
2002
FULL build
Recording new state : State for org.eclipse.core.resources.win32 (#0 @ Fri Jun 
07 14:33:51 EDT 2002)
Finished build of org.eclipse.core.resources.win32 @ Fri Jun 07 14:33:51 EDT 
2002
...
Starting build of org.eclipse.search @ Fri Jun 07 14:33:52 EDT 2002
FULL build
About to compile D:/aF2/workspace.dirk3/org.eclipse.search/src-
search/org/eclipse/search/internal/core/ISearchScope.java
About to compile D:/aF2/workspace.dirk3/org.eclipse.search/src-
search/org/eclipse/search/internal/core/SearchScope.java
About to compile D:/aF2/workspace.dirk3/org.eclipse.search/src-
search/org/eclipse/search/internal/core/text/AmountOfWorkCalculator.java
&lt;deleted&gt;
Writing class file ISearchScope.class
Writing class file SearchScope.class
Writing class file AmountOfWorkCalculator.class
&lt;deleted&gt;
Writing class file SearchUI.class
Recording new state : State for org.eclipse.search (#0 @ Fri Jun 07 14:33:52 
EDT 2002)
Finished build of org.eclipse.search @ Fri Jun 07 14:34:03 EDT 2002
...
Starting build of org.eclipse.core.resources @ Fri Jun 07 14:34:06 EDT 2002
Classpath jar file D:/aF2/eclipse/startup.jar != Classpath jar file 
D:/aaa/j9/lib/jclMax/classes.zip
Clearing last state : State for org.eclipse.core.resources (#0 @ Fri Jun 07 
14:33:51 EDT 2002)
FULL build
Recording new state : State for org.eclipse.core.resources (#0 @ Fri Jun 07 
14:34:06 EDT 2002)
Finished build of org.eclipse.core.resources @ Fri Jun 07 14:34:06 EDT 2002

Starting build of org.eclipse.core.resources.win32 @ Fri Jun 07 14:34:06 EDT 
2002
Classpath jar file D:/aF2/eclipse/startup.jar != Classpath jar file 
D:/aaa/j9/lib/jclMax/classes.zip
Clearing last state : State for org.eclipse.core.resources.win32 (#0 @ Fri Jun 
07 14:33:51 EDT 2002)
FULL build
Recording new state : State for org.eclipse.core.resources.win32 (#0 @ Fri Jun 
07 14:34:06 EDT 2002)
Finished build of org.eclipse.core.resources.win32 @ Fri Jun 07 14:34:06 EDT 
2002
...
Starting build of org.eclipse.search @ Fri Jun 07 14:34:06 EDT 2002
Classpath jar file D:/aF2/eclipse/startup.jar != Classpath jar file 
D:/aaa/j9/lib/jclMax/classes.zip
Clearing last state : State for org.eclipse.search (#0 @ Fri Jun 07 14:33:52 
EDT 2002)
FULL build
About to compile D:/aF2/workspace.dirk3/org.eclipse.search/src-
search/org/eclipse/search/internal/core/ISearchScope.java
About to compile D:/aF2/workspace.dirk3/org.eclipse.search/src-
search/org/eclipse/search/internal/core/SearchScope.java
About to compile D:/aF2/workspace.dirk3/org.eclipse.search/src-
search/org/eclipse/search/internal/core/text/AmountOfWorkCalculator.java
...
The project was not built since its classpath is incomplete. Can not find the 
class file for java.lang.Object. Fix the classpath then try rebuilding this 
project
Finished build of org.eclipse.search @ Fri Jun 07 14:34:09 EDT 2002

------------------------------------------------------------------------------

So even though the correct errors were generated, an unnecessary full build 
happened before the JRE jar file change was detected.
When I reset the JRE jar, another full build happens but the jar file change 
was not detected yet so it aborts with the same error.

Forcing another full build sees the change and builds without errors.
The problem is with the method commitVMInstalls() in VMPreferencePage.

It builds the affected project BEFORE updating the default VM... so the changes 
are not visible until the next build.
Pretty sure this has been fixed in the latest code (part of 20020607)
I will check.
The behaviour is still not as I would expect but I am out of date with how the 
runtime JRE and the build JRE for the project are related?

Now no matter what I do to the default installed JRE, it seems to have no 
impact on the JRE used for build the projects.
marking as F3 candidate. We had another bug here - when the libraries (jars) of 
the default JRE changed, but the default JRE did not change instances, we did 
not update classpath variables.

Fixed.
Please verify.
Verified.</WithStack>
    <WithOutStack>Build F2

See also Bug 19526

If you change the JARs in a JRE (via the 'Window'-&gt;'Preferences'-&gt;'Java'-
&gt;'Installed JREs' page) and press OK, you have to wait for about 15 minutes 
while the whole workspace rebuilds.

But when it's finished, the build seems to have had no effect! You have to do 
a 'Project'-&gt;'Rebuild All' to see the effects of changing the JRE JARs. It's 
like the results of the first build were discarded.

Steps to repeat:

1) Have some projects in your workspace which have Java classes in them
2) Go to the 'Window'-&gt;'Preferences'-&gt;'Java'-&gt;'Installed JREs' page
3) find the default JRE
4) make sure that 'Use default system libraries' is unchecked
5) remove rt.jar
6) replace it with some JAR or ZIP file which doesn't contain 
java/lang/Object.class
7) press OK
8) press OK
9) Wait for 15 minutes while your workspace rebuilds (with no real indication 
of how long it's taking, since the progress monitor goes to 100% immediately)
10) Note that once the build completes, there are NO new errors in the 
workspace, despite the absence of important classes like j.l.Object
11) Do a 'Project'-&gt;Rebuild All'
12) Wait for a while more
13) Now the errors appear!

(Note that the build seems to happen even if the JRE that you're changing 
isn't the default one!)
I followed the steps exactly and got the expected errors... the project was not 
built since Object could not be found.
But adding the default jar back did not rebuild properly. The errors remained.

ps. I'm not seeing any build at all when I edit the non-default JRE. I can add 
new JREs and change them with no build happening.
When I first changed the default JRE, 2 full builds happen... here's a reduced 
build trace:

...
Starting build of org.eclipse.core.resources @ Fri Jun 07 14:33:51 EDT 2002
FULL build
Recording new state : State for org.eclipse.core.resources (#0 @ Fri Jun 07 
14:33:51 EDT 2002)
Finished build of org.eclipse.core.resources @ Fri Jun 07 14:33:51 EDT 2002

Starting build of org.eclipse.core.resources.win32 @ Fri Jun 07 14:33:51 EDT 
2002
FULL build
Recording new state : State for org.eclipse.core.resources.win32 (#0 @ Fri Jun 
07 14:33:51 EDT 2002)
Finished build of org.eclipse.core.resources.win32 @ Fri Jun 07 14:33:51 EDT 
2002
...
Starting build of org.eclipse.search @ Fri Jun 07 14:33:52 EDT 2002
FULL build
About to compile D:/aF2/workspace.dirk3/org.eclipse.search/src-
search/org/eclipse/search/internal/core/ISearchScope.java
About to compile D:/aF2/workspace.dirk3/org.eclipse.search/src-
search/org/eclipse/search/internal/core/SearchScope.java
About to compile D:/aF2/workspace.dirk3/org.eclipse.search/src-
search/org/eclipse/search/internal/core/text/AmountOfWorkCalculator.java
&lt;deleted&gt;
Writing class file ISearchScope.class
Writing class file SearchScope.class
Writing class file AmountOfWorkCalculator.class
&lt;deleted&gt;
Writing class file SearchUI.class
Recording new state : State for org.eclipse.search (#0 @ Fri Jun 07 14:33:52 
EDT 2002)
Finished build of org.eclipse.search @ Fri Jun 07 14:34:03 EDT 2002
...
Starting build of org.eclipse.core.resources @ Fri Jun 07 14:34:06 EDT 2002
Classpath jar file D:/aF2/eclipse/startup.jar != Classpath jar file 
D:/aaa/j9/lib/jclMax/classes.zip
Clearing last state : State for org.eclipse.core.resources (#0 @ Fri Jun 07 
14:33:51 EDT 2002)
FULL build
Recording new state : State for org.eclipse.core.resources (#0 @ Fri Jun 07 
14:34:06 EDT 2002)
Finished build of org.eclipse.core.resources @ Fri Jun 07 14:34:06 EDT 2002

Starting build of org.eclipse.core.resources.win32 @ Fri Jun 07 14:34:06 EDT 
2002
Classpath jar file D:/aF2/eclipse/startup.jar != Classpath jar file 
D:/aaa/j9/lib/jclMax/classes.zip
Clearing last state : State for org.eclipse.core.resources.win32 (#0 @ Fri Jun 
07 14:33:51 EDT 2002)
FULL build
Recording new state : State for org.eclipse.core.resources.win32 (#0 @ Fri Jun 
07 14:34:06 EDT 2002)
Finished build of org.eclipse.core.resources.win32 @ Fri Jun 07 14:34:06 EDT 
2002
...
Starting build of org.eclipse.search @ Fri Jun 07 14:34:06 EDT 2002
Classpath jar file D:/aF2/eclipse/startup.jar != Classpath jar file 
D:/aaa/j9/lib/jclMax/classes.zip
Clearing last state : State for org.eclipse.search (#0 @ Fri Jun 07 14:33:52 
EDT 2002)
FULL build
About to compile D:/aF2/workspace.dirk3/org.eclipse.search/src-
search/org/eclipse/search/internal/core/ISearchScope.java
About to compile D:/aF2/workspace.dirk3/org.eclipse.search/src-
search/org/eclipse/search/internal/core/SearchScope.java
About to compile D:/aF2/workspace.dirk3/org.eclipse.search/src-
search/org/eclipse/search/internal/core/text/AmountOfWorkCalculator.java
...
The project was not built since its classpath is incomplete. Can not find the 
class file for java.lang.Object. Fix the classpath then try rebuilding this 
project
Finished build of org.eclipse.search @ Fri Jun 07 14:34:09 EDT 2002

------------------------------------------------------------------------------

So even though the correct errors were generated, an unnecessary full build 
happened before the JRE jar file change was detected.
When I reset the JRE jar, another full build happens but the jar file change 
was not detected yet so it aborts with the same error.

Forcing another full build sees the change and builds without errors.
The problem is with the method commitVMInstalls() in VMPreferencePage.

It builds the affected project BEFORE updating the default VM... so the changes 
are not visible until the next build.
Pretty sure this has been fixed in the latest code (part of 20020607)
I will check.
The behaviour is still not as I would expect but I am out of date with how the 
runtime JRE and the build JRE for the project are related?

Now no matter what I do to the default installed JRE, it seems to have no 
impact on the JRE used for build the projects.
marking as F3 candidate. We had another bug here - when the libraries (jars) of 
the default JRE changed, but the default JRE did not change instances, we did 
not update classpath variables.

Fixed.
Please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19605" />
    <CreationDate amount="2002-06-07 11:06:00 -0400" />
    <DupId amount="19184" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Markers for multi-line errors do not show error on hover</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="47" end="162" />
        <code>public class Hello {
  public int foo() {
    int x= 1;
    switch(x) {
      case 1:
        return 1;
    }
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Define the following class:</Line>
          <Line />
          <Line>2. Save and build.</Line>
          <Line>3. Hover the mouse over the error marker which is created. Hover help with</Line>
          <Line>the marker message is not displayed.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020607

1. Define the following class:
public class Hello {
  public int foo() {
    int x= 1;
    switch(x) {
      case 1:
        return 1;
    }
  }
}
2. Save and build.
3. Hover the mouse over the error marker which is created. Hover help with 
the marker message is not displayed.


*** This bug has been marked as a duplicate of 19184 ***</WithStack>
    <WithOutStack>Build 20020607

1. Define the following class:
public class Hello {
  public int foo() {
    int x= 1;
    switch(x) {
      case 1:
        return 1;
    }
  }
}
2. Save and build.
3. Hover the mouse over the error marker which is created. Hover help with 
the marker message is not displayed.


*** This bug has been marked as a duplicate of 19184 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19606" />
    <CreationDate amount="2002-06-07 11:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Scoped exception breakpoints disappear randomly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build F2

My scoped exception breakpoints don't seem to have very long lifetimes.

Periodically, I lose some or all of the scoped exception breakpoints from the 
breakpoint view. I'm not quite sure what triggers this, but it may be related 
to restarting Eclipse, or to build errors in projects or classes. Or maybe 
loading classes from CVS?

Non-scoped exception breakpoints seem to stick around indefintely.
My only idea: 

Breakpoints get removed automatically if the package fragment root of the type 
associated with the breakpoint is removed, closed or removed from the 
classpath.  Are you doing any of these things?  
Say changing JREs?  
You create the NPE breakpoint, then changing JRE...no NPE breakpoint.
Should not have anything to do with scoping?
I have been fiddling a lot with JREs in the last few days.

It might not only be scoped breakpoints that disappear. But not all of my 
exception breakpoints seem to disappear.
Verified that removing a JRE asscoiated with an exception breakpoint causes the 
breakpoint to be removed. Closing, unless there is an error case that we need 
to deal with.</WithStack>
    <WithOutStack>Build F2

My scoped exception breakpoints don't seem to have very long lifetimes.

Periodically, I lose some or all of the scoped exception breakpoints from the 
breakpoint view. I'm not quite sure what triggers this, but it may be related 
to restarting Eclipse, or to build errors in projects or classes. Or maybe 
loading classes from CVS?

Non-scoped exception breakpoints seem to stick around indefintely.
My only idea: 

Breakpoints get removed automatically if the package fragment root of the type 
associated with the breakpoint is removed, closed or removed from the 
classpath.  Are you doing any of these things?  
Say changing JREs?  
You create the NPE breakpoint, then changing JRE...no NPE breakpoint.
Should not have anything to do with scoping?
I have been fiddling a lot with JREs in the last few days.

It might not only be scoped breakpoints that disappear. But not all of my 
exception breakpoints seem to disappear.
Verified that removing a JRE asscoiated with an exception breakpoint causes the 
breakpoint to be removed. Closing, unless there is an error case that we need 
to deal with.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19607" />
    <CreationDate amount="2002-06-07 11:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Underscores don't show up in outline view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1. Define a method named "foo_bar()".</Line>
          <Line>2. In the outliner, the method name is displayed as "foo bar".</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>1. Define a method named "foo_bar()".
2. In the outliner, the method name is displayed as "foo bar".

The underscore shows up correctly on other platforms.
Font problem? Or possibly, bottom is clipped on row too high?
Created attachment 1318
Eclipse with foo_bar()
This works for me - see the attached screenshot.
Created attachment 1320
foobar.png - A screenshot of the problem.
I'm getting the problem on build 20020607. Are you running on newer code?
Just looked at the screenshots a little closer and your font is significantly 
smaller than mine.
I don't see this problem in 3.0. The tree widget has been writen since this bug
was logged.</WithStack>
    <WithOutStack>1. Define a method named "foo_bar()".
2. In the outliner, the method name is displayed as "foo bar".

The underscore shows up correctly on other platforms.
Font problem? Or possibly, bottom is clipped on row too high?
Created attachment 1318
Eclipse with foo_bar()
This works for me - see the attached screenshot.
Created attachment 1320
foobar.png - A screenshot of the problem.
I'm getting the problem on build 20020607. Are you running on newer code?
Just looked at the screenshots a little closer and your font is significantly 
smaller than mine.
I don't see this problem in 3.0. The tree widget has been writen since this bug
was logged.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19608" />
    <CreationDate amount="2002-06-07 11:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>DCR - Compiler could be more HCR friendly w/ anon inner classes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build F2

When you add a new anonymous inner class to a class, there's a very good 
chance that it will cause Hot Code Replace to fail in the debugger.

The problem is that anonymous inner classes are assigned names based on their 
sequence in the Java file. So the first anonymous inner classes inner class is 
named OuterClass$0, the next OuterClass$1, etc.

If you add a new anonymous inner class at the top of the Java file, 
OuterClass$0 becomes OuterClass$1, and the HCR fails (because they're usually 
wildly different classes!)

It would be a great feature if the builder could somehow remember which 
anonymous inner class OuterClass$0 corresponds to, and maintain that name for 
the class when the Java file is recompiled, even if another class is added 
before it.
Interesting, but unlikey to ever occur. We would basically need a description 
of existing files to match...

Will keep around it makes sense at some later point...
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Build F2

When you add a new anonymous inner class to a class, there's a very good 
chance that it will cause Hot Code Replace to fail in the debugger.

The problem is that anonymous inner classes are assigned names based on their 
sequence in the Java file. So the first anonymous inner classes inner class is 
named OuterClass$0, the next OuterClass$1, etc.

If you add a new anonymous inner class at the top of the Java file, 
OuterClass$0 becomes OuterClass$1, and the HCR fails (because they're usually 
wildly different classes!)

It would be a great feature if the builder could somehow remember which 
anonymous inner class OuterClass$0 corresponds to, and maintain that name for 
the class when the Java file is recompiled, even if another class is added 
before it.
Interesting, but unlikey to ever occur. We would basically need a description 
of existing files to match...

Will keep around it makes sense at some later point...
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19609" />
    <CreationDate amount="2002-06-07 11:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Renaming getter/setter methods should preserve "is" prefix for boolean fields [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When renaming a boolean field with the "Rename getter" and "Rename setter"
options selected, the getter method name loses "is" prefix and is converted to
"get" instead. For example, a getter method named "isSynchronous()" would be
renamed to "get&lt;newname&gt;".
simple workaround - do a rename refactoring of the generated get method

not critical enough for 2.0
fix went in for 2.0.1</WithStack>
    <WithOutStack>When renaming a boolean field with the "Rename getter" and "Rename setter"
options selected, the getter method name loses "is" prefix and is converted to
"get" instead. For example, a getter method named "isSynchronous()" would be
renamed to "get&lt;newname&gt;".
simple workaround - do a rename refactoring of the generated get method

not critical enough for 2.0
fix went in for 2.0.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19610" />
    <CreationDate amount="2002-06-07 11:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>EventRequestManagerImpl.findRequest doesn't handle VMDeathEvent</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="2448" end="2522" />
        <code>(EventRequestImpl)fEnabledRequests[VM_DEATH_INDEX].get(event.requestID());</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build F2

Launching Eclipse from Eclipse, using J9 2.0, I got the error below printed in 
the console.

This scares me, since InternalError is a VirtualMachineError. But I suspect 
that this error is really being thrown by Java code, which is inappropriate. 
(From the JDK spec: "[InternalError is] thrown to indicate some unexpected 
internal error has occurred in the Java Virtual Machine"

It would be nice if the error reported what the unknown type was, so that we 
could determine if this is a VM or Eclipse bug.

java.lang.InternalError: Got event of unknown type

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/jdi/internal/request/EventRequestManagerImpl.findRequest
(Lorg/eclipse/jdi/internal/event/EventImpl;)
Lorg/eclipse/jdi/internal/request/EventReques
tImpl;
   org/eclipse/jdi/internal/event/EventImpl.read
(Lorg/eclipse/jdi/internal/MirrorImpl;Ljava/io/DataInputStream;)
Lorg/eclipse/jdi/internal/event/EventImpl;
   org/eclipse/jdi/internal/event/EventSetImpl.read
(Lorg/eclipse/jdi/internal/MirrorImpl;Ljava/io/DataInputStream;)
Lorg/eclipse/jdi/internal/event/EventSetImpl;
   org/eclipse/jdi/internal/event/EventQueueImpl.remove(J)
Lcom/sun/jdi/event/EventSet;
   org/eclipse/jdi/internal/event/EventQueueImpl.remove()
Lcom/sun/jdi/event/EventSet;
   org/eclipse/jdt/internal/debug/core/EventDispatcher.run()V
   java/lang/Thread.run()V
The InternalError issue is something we should consider post-2.0.

However, looking at the code there does seem to be a real problem here. 
EventImpl.read() can create VMDeathEventImpl, VMDisconnectEventImpl, or 
VMStartEventImpl, none of which are handled by EventManagerImpl.findRequest().

This code confuses me (we "inherited" it). It looks like the only thing 
stopping us from passing these three unhandled event types into findRequest() 
is an assumption that they don't have request IDs.
I have a theory:
Our JDI implementation was written to be JDK 1.3 compliant. JDK 1.3 did not 
have a VMDeathRequest, only a VMDeathEvent. So if we got a VMDeathEvent, it 
was guaranteed to not have an associated request ID. As of 1.4, however, we 
have a VMDeathRequest, so we can actually get a request ID with a 
VMDeathEvent, which would let us fall into the 
EventManagerImpl.findRequest() code.

Recommand adding code to findRequest() to handle VMDeathEvent as follows:
else if (event instanceof VMDeathEventImpl)
  return 
(EventRequestImpl)fEnabledRequests[VM_DEATH_INDEX].get(event.requestID());
Except that my target was J9 2.0, not JDK 1.4. I don't know if Thomas added a 
VMDeathRequest to J9.

Note that the error occurred whil I was starting the VM.
marking as F3 candidate
Fixed the problem in our JDI client.
Please verify code.
Verified Code.</WithStack>
    <WithOutStack>Build F2

Launching Eclipse from Eclipse, using J9 2.0, I got the error below printed in 
the console.

This scares me, since InternalError is a VirtualMachineError. But I suspect 
that this error is really being thrown by Java code, which is inappropriate. 
(From the JDK spec: "[InternalError is] thrown to indicate some unexpected 
internal error has occurred in the Java Virtual Machine"

It would be nice if the error reported what the unknown type was, so that we 
could determine if this is a VM or Eclipse bug.

java.lang.InternalError: Got event of unknown type

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/jdi/internal/request/EventRequestManagerImpl.findRequest
(Lorg/eclipse/jdi/internal/event/EventImpl;)
Lorg/eclipse/jdi/internal/request/EventReques
tImpl;
   org/eclipse/jdi/internal/event/EventImpl.read
(Lorg/eclipse/jdi/internal/MirrorImpl;Ljava/io/DataInputStream;)
Lorg/eclipse/jdi/internal/event/EventImpl;
   org/eclipse/jdi/internal/event/EventSetImpl.read
(Lorg/eclipse/jdi/internal/MirrorImpl;Ljava/io/DataInputStream;)
Lorg/eclipse/jdi/internal/event/EventSetImpl;
   org/eclipse/jdi/internal/event/EventQueueImpl.remove(J)
Lcom/sun/jdi/event/EventSet;
   org/eclipse/jdi/internal/event/EventQueueImpl.remove()
Lcom/sun/jdi/event/EventSet;
   org/eclipse/jdt/internal/debug/core/EventDispatcher.run()V
   java/lang/Thread.run()V
The InternalError issue is something we should consider post-2.0.

However, looking at the code there does seem to be a real problem here. 
EventImpl.read() can create VMDeathEventImpl, VMDisconnectEventImpl, or 
VMStartEventImpl, none of which are handled by EventManagerImpl.findRequest().

This code confuses me (we "inherited" it). It looks like the only thing 
stopping us from passing these three unhandled event types into findRequest() 
is an assumption that they don't have request IDs.
I have a theory:
Our JDI implementation was written to be JDK 1.3 compliant. JDK 1.3 did not 
have a VMDeathRequest, only a VMDeathEvent. So if we got a VMDeathEvent, it 
was guaranteed to not have an associated request ID. As of 1.4, however, we 
have a VMDeathRequest, so we can actually get a request ID with a 
VMDeathEvent, which would let us fall into the 
EventManagerImpl.findRequest() code.

Recommand adding code to findRequest() to handle VMDeathEvent as follows:
else if (event instanceof VMDeathEventImpl)
  return 
(EventRequestImpl)fEnabledRequests[VM_DEATH_INDEX].get(event.requestID());
Except that my target was J9 2.0, not JDK 1.4. I don't know if Thomas added a 
VMDeathRequest to J9.

Note that the error occurred whil I was starting the VM.
marking as F3 candidate
Fixed the problem in our JDI client.
Please verify code.
Verified Code.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19611" />
    <CreationDate amount="2002-06-07 11:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>F2 - Exception while debugging</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331231251">
        <Exception>com.sun.jdi.InternalException</Exception>
        <Reason>Got error code in reply: 13</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdi.internal.MirrorImpl.defaultReplyErrorHandler(MirrorImpl.java:255)</Frame>
          <Frame depth="1">org.eclipse.jdi.internal.StackFrameImpl.thisObject(StackFrameImpl.java:192)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingThisObject(JDIStackFrame.java:618)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getReceivingTypeName(JDIStackFrame.java:684)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getStackFrameText(JDIModelPresentation.java:1255)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getText(JDIModelPresentation.java:181)</Frame>
          <Frame depth="6">org.eclipse.debug.internal.ui.LazyModelPresentation.getText(LazyModelPresentation.java:68)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.DelegatingModelPresentation.getText(DelegatingModelPresentation.java:121)</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:82)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:354)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1134)</Frame>
          <Frame depth="11">org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem(AbstractTreeViewer.java:258)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:243)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.AbstractTreeViewer.internalExpand(AbstractTreeViewer.java:725)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.AbstractTreeViewer.setSelectionToWidget(AbstractTreeViewer.java:1130)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.StructuredViewer.setSelectionToWidget(StructuredViewer.java:935)</Frame>
          <Frame depth="16">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:902)</Frame>
          <Frame depth="17">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java:773)</Frame>
          <Frame depth="18">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$3.run(LaunchViewEventHandler.java:257)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:93)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1504)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1292)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)</Frame>
          <Frame depth="25">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="26">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="27">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.basicRun(Main.java:244)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.run(Main.java:693)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.main(Main.java:526)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>!MESSAGE com.sun.jdi.InternalException: Got error code in reply: 13 occurred 
retrieving this from stack frame.
!STACK 0
com.sun.jdi.InternalException: Got error code in reply: 13
	at org.eclipse.jdi.internal.MirrorImpl.defaultReplyErrorHandler
(MirrorImpl.java:255)
	at org.eclipse.jdi.internal.StackFrameImpl.thisObject
(StackFrameImpl.java:192)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingThisObject
(JDIStackFrame.java:618)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getReceivingTypeName
(JDIStackFrame.java:684)
	at 
org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getStackFrameText
(JDIModelPresentation.java:1255)
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getText
(JDIModelPresentation.java:181)
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getText
(LazyModelPresentation.java:68)
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getText
(DelegatingModelPresentation.java:121)
	at org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:82)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem
(AbstractTreeViewer.java:354)
	at org.eclipse.jface.viewers.StructuredViewer.updateItem
(StructuredViewer.java:1134)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createTreeItem
(AbstractTreeViewer.java:258)
	at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren
(AbstractTreeViewer.java:243)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalExpand
(AbstractTreeViewer.java:725)
	at org.eclipse.jface.viewers.AbstractTreeViewer.setSelectionToWidget
(AbstractTreeViewer.java:1130)
	at org.eclipse.jface.viewers.StructuredViewer.setSelectionToWidget
(StructuredViewer.java:935)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:902)
	at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java:773)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$3.run
(LaunchViewEventHandler.java:257)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:93)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1504)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1292)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:244)
	at org.eclipse.core.launcher.Main.run(Main.java:693)
	at org.eclipse.core.launcher.Main.main(Main.java:526)
!ENTRY org.eclipse.jdt.debug.ui 4 150 Jun 06, 2002 22:45:30.01
The stack trace alone is not helpful in this case.

What were you doing when this happened? What VM are you on? Can you reproduce 
the problem?
When this exception occurs, Step Over (F6) and (F7) stop working.  So I am 
stepping over code.  JRE is Sun 1.3.1 r08.
This isn't really a problem. It appears that the UI is asynchronously updating 
the thread for a suspend event, but by the time it gets around to querying the 
stack frames, the thread has resumed.

The exception is caught in JDIModelPresentation.getText(), handled, and 
logged. We've been over the issue of logging these exceptions in other bug 
reports.

Move to close.
Only I'm not sure that I pressed F8.  I think I get these exception on F6 and 
F7 sometime.  On older 1.4 JDKs F6 and F7 would stop working and they would 
behave like resume.

I'm using JDK 1.3.1.

So, you will prevent these exception from being logged?
If I continue to have Step-Over problems, I'll report them separately.
Deferred. The issue here is agressive exception logging.
Need to address agressive exception logging in 3.0
This is fixed in the 3.0 stream. The exception is handled and no longer logged.
Verified.</WithStack>
    <WithOutStack>!MESSAGE com.sun.jdi.InternalException: Got error code in reply: 13 occurred 
retrieving this from stack frame.
!STACK 0

!ENTRY org.eclipse.jdt.debug.ui 4 150 Jun 06, 2002 22:45:30.01
The stack trace alone is not helpful in this case.

What were you doing when this happened? What VM are you on? Can you reproduce 
the problem?
When this exception occurs, Step Over (F6) and (F7) stop working.  So I am 
stepping over code.  JRE is Sun 1.3.1 r08.
This isn't really a problem. It appears that the UI is asynchronously updating 
the thread for a suspend event, but by the time it gets around to querying the 
stack frames, the thread has resumed.

The exception is caught in JDIModelPresentation.getText(), handled, and 
logged. We've been over the issue of logging these exceptions in other bug 
reports.

Move to close.
Only I'm not sure that I pressed F8.  I think I get these exception on F6 and 
F7 sometime.  On older 1.4 JDKs F6 and F7 would stop working and they would 
behave like resume.

I'm using JDK 1.3.1.

So, you will prevent these exception from being logged?
If I continue to have Step-Over problems, I'll report them separately.
Deferred. The issue here is agressive exception logging.
Need to address agressive exception logging in 3.0
This is fixed in the 3.0 stream. The exception is handled and no longer logged.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19612" />
    <CreationDate amount="2002-06-07 12:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="critical" />
    <Summery>F2- NullPointer using Find/Replace dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331231251">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.text.TextViewer$FindReplaceRange.uninstall(TextViewer.java:510)</Frame>
          <Frame depth="1">org.eclipse.jface.text.TextViewer$FindReplaceTarget.endSession(TextViewer.java:658)</Frame>
          <Frame depth="2">org.eclipse.ui.texteditor.FindReplaceDialog.handleDialogClose(FindReplaceDialog.java:769)</Frame>
          <Frame depth="3">org.eclipse.ui.texteditor.FindReplaceDialog.close(FindReplaceDialog.java:748)</Frame>
          <Frame depth="4">org.eclipse.jface.window.Window.handleShellCloseEvent(Window.java:479)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window$2.shellClosed(Window.java:430)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:150)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1382)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:1049)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Control.windowProc(Control.java:2658)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1343)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)</Frame>
          <Frame depth="14">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="15">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1343)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)</Frame>
          <Frame depth="20">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="21">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1343)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)</Frame>
          <Frame depth="26">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="27">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1219)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1287)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)</Frame>
          <Frame depth="31">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="32">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="33">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.basicRun(Main.java:244)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.run(Main.java:693)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.main(Main.java:526)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>!STACK 0
java.lang.NullPointerException
	at org.eclipse.jface.text.TextViewer$FindReplaceRange.uninstall
(TextViewer.java:510)
	at org.eclipse.jface.text.TextViewer$FindReplaceTarget.endSession
(TextViewer.java:658)
	at org.eclipse.ui.texteditor.FindReplaceDialog.handleDialogClose
(FindReplaceDialog.java:769)
	at org.eclipse.ui.texteditor.FindReplaceDialog.close
(FindReplaceDialog.java:748)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:479)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:430)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:150)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:1382)
	at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:1049)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2658)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1343)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1343)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1343)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1219)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1287)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:244)
	at org.eclipse.core.launcher.Main.run(Main.java:693)
	at org.eclipse.core.launcher.Main.main(Main.java:526)
Do you have steps to reproduce this?

I was editing source when hitting a breakpoint in the Debugger.  I killed the 
process.  Maybe I then closed the .java file (Ctrl+F4), and then re-debugged 
(F11) the process hitting the same breakpoint again.  At some point the dialog 
was hanging around with no open editor.
non-reproducable, downgrading to P2.
Should guard against the NPE.

Reviewed by Erich Gamma.</WithStack>
    <WithOutStack>!STACK 0

Do you have steps to reproduce this?

I was editing source when hitting a breakpoint in the Debugger.  I killed the 
process.  Maybe I then closed the .java file (Ctrl+F4), and then re-debugged 
(F11) the process hitting the same breakpoint again.  At some point the dialog 
was hanging around with no open editor.
non-reproducable, downgrading to P2.
Should guard against the NPE.

Reviewed by Erich Gamma.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19613" />
    <CreationDate amount="2002-06-07 12:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>LaunchConfig marked PRIVATE shows in Console View</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="21">
      <source_code type="assignment">
        <location start="2256" end="2280" />
        <code>IVMRunner runner = null;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2281" end="2313" />
        <code>JavaRuntime.getVMInstallTypes();</code>
      </source_code>
      <source_code type="assignment">
        <location start="2314" end="2367" />
        <code>IVMInstall vm= JavaRuntime.getVMInstall(javaProject);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2384" end="2423" />
        <code>vm= JavaRuntime.getDefaultVMInstall();</code>
      </source_code>
      <source_code type="assignment">
        <location start="2440" end="2490" />
        <code>runner = vm.getVMRunner(ILaunchManager.RUN_MODE);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2645" end="2702" />
        <code>().buildIncrementalProjectBuilder.INCREMENTAL_BUILD, pm);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2703" end="2721" />
        <code>// Launch the vm.</code>
      </source_code>
      <source_code type="assignment">
        <location start="2721" end="2774" />
        <code>IProgressMonitor spm = new SubProgressMonitor(pm, 1);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2880" end="2936" />
        <code>(IJavaLaunchConfigurationConstants.ID_JAVA_APPLICATION);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2937" end="3006" />
        <code>ILaunchConfigurationWorkingCopy wc= lcType.newInstance(null, vmName);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3007" end="3085" />
        <code>wc.setAttribute(IDebugUIConstants.ATTR_TARGET_RUN_PERSPECTIVE, (String) null);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3086" end="3140" />
        <code>wc.setAttribute(IDebugUIConstants.ATTR_PRIVATE, true);</code>
      </source_code>
      <source_code type="assignment">
        <location start="3141" end="3206" />
        <code>ILaunch runresult= new Launch(wc, ILaunchManager.RUN_MODE, null);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3208" end="3243" />
        <code>runner.run(config, runresult, spm);</code>
      </source_code>
      <source_code type="assignment">
        <location start="3392" end="3439" />
        <code>VMRunnerResult runresult = runner.run(config);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4326" end="4378" />
        <code>p, renderProcessLabel(cmdLine));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4409" end="4461" />
        <code>return new RuntimeProcess(launch, process, label);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4489" end="4515" />
        <code>launch.addProcess(this);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4546" end="4577" />
        <code>getProcesses0().add(process);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4578" end="4594" />
        <code>fireChanged();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4666" end="4745" />
        <code>getLaunchManager()).fireUpdate(this, LaunchManager.CHANGED);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I'm a developer of the WSAD Visual Editor. We launch several remote jvm's. 
However these are private ones and we don't want them to show up in the console 
view. Previous to F2, they did not show up. They now do.

I've marked the launch configuration as private.

This is a big problem for us.

Thanks,
Rich
Also even worse, is that the "Terminate" button on the Console view will 
terminate this jvm right out from under me when I don't expect it.
Are you sure this is a regression? The scrapbook launch configs are marked as 
private, but we have always shown console output for them (which is required).
I've never seen it before. 

And it is important that they be truly private. We open several of them and so 
does another group. Having them show up and being terminatable would be a big 
problem because the customer should not know about them. We use them as work 
areas where do things that can't be done in the IDe itself. Such as run code on 
a different version of the JVM. We then get the results (not from system out, 
but through sockets) and do things in our editor with those results.
I am just trying to distinguish between "feature request" and "regression". My 
belief is that this is a new feature request. The java doc for the "PRIVATE" 
attribute states that private launch configs simply do not appear in the launch 
history, or the launch config dialog. Can you verify the problem did not exist 
on F1? 

Private launches still (always) appear in the debug view and show output.

Other possibilities:
* Was the private launch registered with the launch manager in previous builds? 
(i.e. did you start to register it)?
* Was the process/debug target that is private, recently get added to the 
launch (and was not part of the launch in previous builds).

If either of these situations is true, could that be the bug?
We just went back to an M5 driver and it was doing it then too. We just didn't 
notice until the extensive system testing we were doing this week.

It may of started when we switched from Launch Application to Launch 
Configuration since Launch Applications were removed. When we used Launch 
Applications it definitely didn't show up then. It was sometime after the 
switch.

Here is the code we've been using:

IVMRunner runner = null;
JavaRuntime.getVMInstallTypes();
IVMInstall vm= JavaRuntime.getVMInstall(javaProject);
if (vm == null)
	vm= JavaRuntime.getDefaultVMInstall();
if (vm != null)
	runner = vm.getVMRunner(ILaunchManager.RUN_MODE);

if (runner == null)
	return null;	// Can't find the requested VM.
if (!javaProject.getProject().getWorkspace().isAutoBuilding())
	javaProject.getProject
().buildIncrementalProjectBuilder.INCREMENTAL_BUILD, pm);
// Launch the vm.
IProgressMonitor spm = new SubProgressMonitor(pm, 1);
ILaunchConfigurationType lcType= DebugPlugin.getDefault().getLaunchManager
().getLaunchConfigurationType
(IJavaLaunchConfigurationConstants.ID_JAVA_APPLICATION);
ILaunchConfigurationWorkingCopy wc= lcType.newInstance(null, vmName);
wc.setAttribute(IDebugUIConstants.ATTR_TARGET_RUN_PERSPECTIVE, (String) null);
wc.setAttribute(IDebugUIConstants.ATTR_PRIVATE, true);
ILaunch runresult= new Launch(wc, ILaunchManager.RUN_MODE, null);

runner.run(config, runresult, spm);

Is there any way to tell it not to put out to the console viewer?
In addition, when we used Launch Applications, this is how we launched it then:

	VMRunnerResult runresult = runner.run(config);

And we didn't have the problem then. Back then we were doing a lot of 
System.out in the remote vm, and they never showed on the console. (We have our 
own listener on the StreamsPRoxy to gather the output). Since then we've turned 
all of those system outs off because we didn't need it anymore, so that's why 
we never noticed the console starting to attach itself.
If you are not registering the launch with the launch manager, there should be 
no console output (that is how the debug UI knows to start listening to the 
output). Your code excerpt does not show that the launch gets registered. Is it 
registered later? (i.e. ILaunchManager.addLaunch(ILaunch))


It is not called, but there is another route that is taken that does the same 
thing. It happens in the following way:

StandardVMRunner.run(...) does:
  		IProcess process= DebugPlugin.getDefault().newProcess(launch,
                    p, renderProcessLabel(cmdLine));

DebugPlugin.newProcess does:
		return new RuntimeProcess(launch, process, label);

RuntimeProcess(...) does:
		launch.addProcess(this);

Launch.addProcess(...) does:
		getProcesses0().add(process);
		fireChanged();

Lauch.fireChanged() does:
		((LaunchManager)DebugPlugin.getDefault().
                   getLaunchManager()).fireUpdate(this, LaunchManager.CHANGED);

Now ConsoleDocumentManager is listening, 
   so in launchChanged(final ILaunch launch) is where it creates the
   ConsoleDocument and adds it the viewer.

Even though we are not calling LaunchManager.addLaunch(...) any launch is still 
effectively registered whether you want to or not because Launch.addProcess
(...) fires out Launch.CHANGED.

I don't know if ConsoleDocumentManager treating Launch.ADDED and Launch.CHANGED 
identically is valid or not. That area is completely out of my domain. 

Thanks

We should not fire change notification for launches that are not registered. 
Marking as F3 candidate.
Fixed.
Please verify (Joe S)
Thanks for fixing it so fast. I look forward to trying it out
when it comes into the WSAD build.
Verified the code change.</WithStack>
    <WithOutStack>I'm a developer of the WSAD Visual Editor. We launch several remote jvm's. 
However these are private ones and we don't want them to show up in the console 
view. Previous to F2, they did not show up. They now do.

I've marked the launch configuration as private.

This is a big problem for us.

Thanks,
Rich
Also even worse, is that the "Terminate" button on the Console view will 
terminate this jvm right out from under me when I don't expect it.
Are you sure this is a regression? The scrapbook launch configs are marked as 
private, but we have always shown console output for them (which is required).
I've never seen it before. 

And it is important that they be truly private. We open several of them and so 
does another group. Having them show up and being terminatable would be a big 
problem because the customer should not know about them. We use them as work 
areas where do things that can't be done in the IDe itself. Such as run code on 
a different version of the JVM. We then get the results (not from system out, 
but through sockets) and do things in our editor with those results.
I am just trying to distinguish between "feature request" and "regression". My 
belief is that this is a new feature request. The java doc for the "PRIVATE" 
attribute states that private launch configs simply do not appear in the launch 
history, or the launch config dialog. Can you verify the problem did not exist 
on F1? 

Private launches still (always) appear in the debug view and show output.

Other possibilities:
* Was the private launch registered with the launch manager in previous builds? 
(i.e. did you start to register it)?
* Was the process/debug target that is private, recently get added to the 
launch (and was not part of the launch in previous builds).

If either of these situations is true, could that be the bug?
We just went back to an M5 driver and it was doing it then too. We just didn't 
notice until the extensive system testing we were doing this week.

It may of started when we switched from Launch Application to Launch 
Configuration since Launch Applications were removed. When we used Launch 
Applications it definitely didn't show up then. It was sometime after the 
switch.

Here is the code we've been using:

IVMRunner runner = null;
JavaRuntime.getVMInstallTypes();
IVMInstall vm= JavaRuntime.getVMInstall(javaProject);
if (vm == null)
	vm= JavaRuntime.getDefaultVMInstall();
if (vm != null)
	runner = vm.getVMRunner(ILaunchManager.RUN_MODE);

if (runner == null)
	return null;	// Can't find the requested VM.
if (!javaProject.getProject().getWorkspace().isAutoBuilding())
	javaProject.getProject
().buildIncrementalProjectBuilder.INCREMENTAL_BUILD, pm);
// Launch the vm.
IProgressMonitor spm = new SubProgressMonitor(pm, 1);
ILaunchConfigurationType lcType= DebugPlugin.getDefault().getLaunchManager
().getLaunchConfigurationType
(IJavaLaunchConfigurationConstants.ID_JAVA_APPLICATION);
ILaunchConfigurationWorkingCopy wc= lcType.newInstance(null, vmName);
wc.setAttribute(IDebugUIConstants.ATTR_TARGET_RUN_PERSPECTIVE, (String) null);
wc.setAttribute(IDebugUIConstants.ATTR_PRIVATE, true);
ILaunch runresult= new Launch(wc, ILaunchManager.RUN_MODE, null);

runner.run(config, runresult, spm);

Is there any way to tell it not to put out to the console viewer?
In addition, when we used Launch Applications, this is how we launched it then:

	VMRunnerResult runresult = runner.run(config);

And we didn't have the problem then. Back then we were doing a lot of 
System.out in the remote vm, and they never showed on the console. (We have our 
own listener on the StreamsPRoxy to gather the output). Since then we've turned 
all of those system outs off because we didn't need it anymore, so that's why 
we never noticed the console starting to attach itself.
If you are not registering the launch with the launch manager, there should be 
no console output (that is how the debug UI knows to start listening to the 
output). Your code excerpt does not show that the launch gets registered. Is it 
registered later? (i.e. ILaunchManager.addLaunch(ILaunch))


It is not called, but there is another route that is taken that does the same 
thing. It happens in the following way:

StandardVMRunner.run(...) does:
  		IProcess process= DebugPlugin.getDefault().newProcess(launch,
                    p, renderProcessLabel(cmdLine));

DebugPlugin.newProcess does:
		return new RuntimeProcess(launch, process, label);

RuntimeProcess(...) does:
		launch.addProcess(this);

Launch.addProcess(...) does:
		getProcesses0().add(process);
		fireChanged();

Lauch.fireChanged() does:
		((LaunchManager)DebugPlugin.getDefault().
                   getLaunchManager()).fireUpdate(this, LaunchManager.CHANGED);

Now ConsoleDocumentManager is listening, 
   so in launchChanged(final ILaunch launch) is where it creates the
   ConsoleDocument and adds it the viewer.

Even though we are not calling LaunchManager.addLaunch(...) any launch is still 
effectively registered whether you want to or not because Launch.addProcess
(...) fires out Launch.CHANGED.

I don't know if ConsoleDocumentManager treating Launch.ADDED and Launch.CHANGED 
identically is valid or not. That area is completely out of my domain. 

Thanks

We should not fire change notification for launches that are not registered. 
Marking as F3 candidate.
Fixed.
Please verify (Joe S)
Thanks for fixing it so fast. I look forward to trying it out
when it comes into the WSAD build.
Verified the code change.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19614" />
    <CreationDate amount="2002-06-07 12:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NO_RADIO_GROUP does not work on GTK</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="import">
        <location start="162" end="188" />
        <code>import org.eclipse.swt.*;</code>
      </source_code>
      <source_code type="import">
        <location start="189" end="223" />
        <code>import org.eclipse.swt.graphics.*;</code>
      </source_code>
      <source_code type="import">
        <location start="224" end="257" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="import">
        <location start="258" end="290" />
        <code>import org.eclipse.swt.layout.*;</code>
      </source_code>
      <source_code type="import">
        <location start="291" end="323" />
        <code>import org.eclipse.swt.events.*;</code>
      </source_code>
      <source_code type="class">
        <location start="325" end="1119" />
        <code>public class NoRadioGroupBehavior {
	static Display display;
	static Shell shell;
	static Composite composite;
	static Button radio1, radio2, radio3;
	
	public static void main(String[] args) {
		display = new Display();
		shell = new Shell(display);
		shell.setLayout(new FillLayout());
		shell.setText("NO_RADIO_GROUP Test");
		
		composite = new Composite(shell, SWT.NO_RADIO_GROUP);
		composite.setLayout(new FillLayout());

		Button radio1 = new Button(composite, SWT.RADIO);
		radio1.setText("radio1");
		Button radio2 = new Button(composite, SWT.RADIO);
		radio2.setText("radio1");
		Button radio3 = new Button(composite, SWT.RADIO);
		radio3.setText("radio1");

		shell.pack();
		shell.open();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) display.sleep();
		}
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>1) Did someone look in the GTK source code to confirm this?</Line>
          <Line>2) Is there another widget that looks like radio button we could use?</Line>
          <Line>SSQ: fixed head &gt; 20030707</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- run this test</Line>
          <Line>- you should be able to select multiple radio buttons</Line>
          <Line>- this works on Windows but does not work on GTK</Line>
          <Line>Should try it on other platforms.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20020606
- run this test
- you should be able to select multiple radio buttons
- this works on Windows but does not work on GTK
Should try it on other platforms.

import org.eclipse.swt.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.events.*;

public class NoRadioGroupBehavior {
	static Display display;
	static Shell shell;
	static Composite composite;
	static Button radio1, radio2, radio3;
	
	public static void main(String[] args) {
		display = new Display();
		shell = new Shell(display);
		shell.setLayout(new FillLayout());
		shell.setText("NO_RADIO_GROUP Test");
		
		composite = new Composite(shell, SWT.NO_RADIO_GROUP);
		composite.setLayout(new FillLayout());

		Button radio1 = new Button(composite, SWT.RADIO);
		radio1.setText("radio1");
		Button radio2 = new Button(composite, SWT.RADIO);
		radio2.setText("radio1");
		Button radio3 = new Button(composite, SWT.RADIO);
		radio3.setText("radio1");

		shell.pack();
		shell.open();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) display.sleep();
		}
	}
}
Can we implement that behavior on GTK?

I think so.  Post 2.0.
I am not sure it is possible to create a series of GtkRadioButtons
without grouping them.  I tried to do this in C by passing NULL
as the value for the group.  All radio buttons were selected and it
was not possible to deselect them.
That's too bad.  Sometimes apps want to implement their own radip behavior or 
use radio button widgets in another way.

1) Did someone look in the GTK source code to confirm this?
2) Is there another widget that looks like radio button we could use?
SSQ: fixed head &gt; 20030707</WithStack>
    <WithOutStack>20020606
- run this test
- you should be able to select multiple radio buttons
- this works on Windows but does not work on GTK
Should try it on other platforms.

import org.eclipse.swt.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.events.*;

public class NoRadioGroupBehavior {
	static Display display;
	static Shell shell;
	static Composite composite;
	static Button radio1, radio2, radio3;
	
	public static void main(String[] args) {
		display = new Display();
		shell = new Shell(display);
		shell.setLayout(new FillLayout());
		shell.setText("NO_RADIO_GROUP Test");
		
		composite = new Composite(shell, SWT.NO_RADIO_GROUP);
		composite.setLayout(new FillLayout());

		Button radio1 = new Button(composite, SWT.RADIO);
		radio1.setText("radio1");
		Button radio2 = new Button(composite, SWT.RADIO);
		radio2.setText("radio1");
		Button radio3 = new Button(composite, SWT.RADIO);
		radio3.setText("radio1");

		shell.pack();
		shell.open();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) display.sleep();
		}
	}
}
Can we implement that behavior on GTK?

I think so.  Post 2.0.
I am not sure it is possible to create a series of GtkRadioButtons
without grouping them.  I tried to do this in C by passing NULL
as the value for the group.  All radio buttons were selected and it
was not possible to deselect them.
That's too bad.  Sometimes apps want to implement their own radip behavior or 
use radio button widgets in another way.

1) Did someone look in the GTK source code to confirm this?
2) Is there another widget that looks like radio button we could use?
SSQ: fixed head &gt; 20030707</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19615" />
    <CreationDate amount="2002-06-07 12:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>StyledText - example Text Editor bug in copy/paste</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build 20020602 (F2)

1 - Run TextEditor example on org.eclipse.swt.examples
2 - aaaa on it
3 - set a style (bold, blue, red, whatever you want) for the first and the last 
chars. (it have to be the same style for both)
4 - Copy it and paste
5 - The style you choice will be applied on the first and on the second char of 
the paste string.

Bug, can be on Styled Text, Drag'n Drop, or in the example itself.

Tested on Windows/Motif (both show the problem). 
More info: if you paste the text in the Micrsoft Word it is done correctly.

Likely the problem is on the StyledText when it is parsing RTF to be insert in.
It's a problem with the example.  Text is not pasted in the StyledText widget 
in RTF format.  The example is handling (incorrectly in this instance) the 
caching of style information for pasting.
Fix &gt; 20020703</WithStack>
    <WithOutStack>build 20020602 (F2)

1 - Run TextEditor example on org.eclipse.swt.examples
2 - aaaa on it
3 - set a style (bold, blue, red, whatever you want) for the first and the last 
chars. (it have to be the same style for both)
4 - Copy it and paste
5 - The style you choice will be applied on the first and on the second char of 
the paste string.

Bug, can be on Styled Text, Drag'n Drop, or in the example itself.

Tested on Windows/Motif (both show the problem). 
More info: if you paste the text in the Micrsoft Word it is done correctly.

Likely the problem is on the StyledText when it is parsing RTF to be insert in.
It's a problem with the example.  Text is not pasted in the StyledText widget 
in RTF format.  The example is handling (incorrectly in this instance) the 
caching of style information for pasting.
Fix &gt; 20020703</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19616" />
    <CreationDate amount="2002-06-07 12:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[Tasks] task list does forgets filter options when view closed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build: F2
My tasks list has a bunch of deprecated warnings that I want to filter out.  So 
I used the filter option "Where description [does not contain]" and entered the 
word "deprecated" in the text field.

BUG: If I close the tasks view then re-open it again, I have lost my filter 
specification.
*** Bug 25526 has been marked as a duplicate of this bug. ***
This works as intended.  Views do not persist their settings globally, only on 
a per-instance basis.  Different instances in different windows may have 
different settings.</WithStack>
    <WithOutStack>Build: F2
My tasks list has a bunch of deprecated warnings that I want to filter out.  So 
I used the filter option "Where description [does not contain]" and entered the 
word "deprecated" in the text field.

BUG: If I close the tasks view then re-open it again, I have lost my filter 
specification.
*** Bug 25526 has been marked as a duplicate of this bug. ***
This works as intended.  Views do not persist their settings globally, only on 
a per-instance basis.  Different instances in different windows may have 
different settings.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19617" />
    <CreationDate amount="2002-06-07 12:42:00 -0400" />
    <DupId amount="18050" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>ArrayIndexOutOfBoundsException in CoolBarManager.createCoolItem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="2532" end="2610" />
        <code>org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>F1

Logged for Peter Burka. He is able to reliably reproduce this case.

The following occurred when updating the action bars of a 
MultipageEditorActionBarContributor in WSADIE. In his init method he creates 
two new SubActionBars on the passed action bar.

In createCoolItem the toolbar has no items but we try to access the first item.


!ENTRY org.eclipse.core.resources 1 4 Jun 07, 2002 12:22:10.823
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jun 07, 2002 12:22:10.839
!MESSAGE java.lang.ArrayIndexOutOfBoundsException
!STACK 0
java.lang.ArrayIndexOutOfBoundsException

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/ArrayIndexOutOfBoundsException.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/ui/internal/CoolBarManager.createCoolItem
(Lorg/eclipse/ui/internal/CoolBarContributionItem;Lorg/eclipse/swt/widgets/Tool
Bar;)Lorg/eclipse/swt/widgets/CoolItem;
   org/eclipse/ui/internal/CoolBarManager.update(Z)V
   org/eclipse/ui/internal/WorkbenchWindow.updateActionBars()V
   org/eclipse/ui/internal/WWinActionBars.updateActionBars()V
   org/eclipse/ui/internal/SubActionBars.updateActionBars()V
   com/ibm/etools/ctc/flow/ui/MicroflowActionBarContributor.setActivePage
(Lorg/eclipse/ui/IEditorPart;)V
   org/eclipse/ui/part/MultiPageEditorPart.pageChange(I)V
   com/ibm/etools/ctc/flow/ui/MicroflowMultiPageEditor.pageChange(I)V
   org/eclipse/ui/part/MultiPageEditorPart$2.widgetSelected
(Lorg/eclipse/swt/events/SelectionEvent;)V
   org/eclipse/swt/widgets/TypedListener.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.notifyListeners
(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/CTabFolder.setSelection(IZ)V
   org/eclipse/swt/custom/CTabFolder.onMouseDown
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/CTabFolder.access$4
(Lorg/eclipse/swt/custom/CTabFolder;Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/CTabFolder$1.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   EclipseRuntimeLauncher.main([Ljava/lang/String;)V
I believe this has been fixed since F1.  Lynne?

Yes, this is fixed.  See [Bug 18050] Array Bounds Exception in CoolBarManager. 

*** This bug has been marked as a duplicate of 18050 ***</WithStack>
    <WithOutStack>F1

Logged for Peter Burka. He is able to reliably reproduce this case.

The following occurred when updating the action bars of a 
MultipageEditorActionBarContributor in WSADIE. In his init method he creates 
two new SubActionBars on the passed action bar.

In createCoolItem the toolbar has no items but we try to access the first item.


!ENTRY org.eclipse.core.resources 1 4 Jun 07, 2002 12:22:10.823
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jun 07, 2002 12:22:10.839
!MESSAGE java.lang.ArrayIndexOutOfBoundsException
!STACK 0
java.lang.ArrayIndexOutOfBoundsException

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/ArrayIndexOutOfBoundsException.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/ui/internal/CoolBarManager.createCoolItem
(Lorg/eclipse/ui/internal/CoolBarContributionItem;Lorg/eclipse/swt/widgets/Tool
Bar;)Lorg/eclipse/swt/widgets/CoolItem;
   org/eclipse/ui/internal/CoolBarManager.update(Z)V
   org/eclipse/ui/internal/WorkbenchWindow.updateActionBars()V
   org/eclipse/ui/internal/WWinActionBars.updateActionBars()V
   org/eclipse/ui/internal/SubActionBars.updateActionBars()V
   com/ibm/etools/ctc/flow/ui/MicroflowActionBarContributor.setActivePage
(Lorg/eclipse/ui/IEditorPart;)V
   org/eclipse/ui/part/MultiPageEditorPart.pageChange(I)V
   com/ibm/etools/ctc/flow/ui/MicroflowMultiPageEditor.pageChange(I)V
   org/eclipse/ui/part/MultiPageEditorPart$2.widgetSelected
(Lorg/eclipse/swt/events/SelectionEvent;)V
   org/eclipse/swt/widgets/TypedListener.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.notifyListeners
(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/CTabFolder.setSelection(IZ)V
   org/eclipse/swt/custom/CTabFolder.onMouseDown
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/CTabFolder.access$4
(Lorg/eclipse/swt/custom/CTabFolder;Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/custom/CTabFolder$1.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)
Ljava/lang/Object;
   EclipseRuntimeLauncher.main([Ljava/lang/String;)V
I believe this has been fixed since F1.  Lynne?

Yes, this is fixed.  See [Bug 18050] Array Bounds Exception in CoolBarManager. 

*** This bug has been marked as a duplicate of 18050 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19618" />
    <CreationDate amount="2002-06-07 12:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Doc" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[infrastructure] Request 'infrastructure' as new product category</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>As a place to collect requests about infrastructure, including items about
products, mailing lists, etc.
Old. Removing.</WithStack>
    <WithOutStack>As a place to collect requests about infrastructure, including items about
products, mailing lists, etc.
Old. Removing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19619" />
    <CreationDate amount="2002-06-07 12:44:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Doc" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[infrastructure] Add version "3.0" or "post 2.0"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Add version "3.0" or "post 2.0" so that developers do not need to spend any time
deferring feature requests when the requester knows he sumbitting a post-2.0
feature request.
Old. Removing.</WithStack>
    <WithOutStack>Add version "3.0" or "post 2.0" so that developers do not need to spend any time
deferring feature requests when the requester knows he sumbitting a post-2.0
feature request.
Old. Removing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19620" />
    <CreationDate amount="2002-06-07 12:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Doc" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[infrastructure] "Enter a new feature"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Convenience issue.

After committing a feature request, one ends up at a page which includes the
button "Enter a new bug".  It would be nice if there was a button "Enter a new
feature".
Old. Removing.</WithStack>
    <WithOutStack>Convenience issue.

After committing a feature request, one ends up at a page which includes the
button "Enter a new bug".  It would be nice if there was a button "Enter a new
feature".
Old. Removing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19621" />
    <CreationDate amount="2002-06-07 12:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="critical" />
    <Summery>BSoD Blue Screen  when creating really large Image</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="functioncall">
        <location start="433" end="460" />
        <code>try new Image(300000, 200);</code>
      </source_code>
      <source_code type="assignment">
        <location start="572" end="610" />
        <code>final Display display = new Display();</code>
      </source_code>
      <source_code type="assignment">
        <location start="611" end="660" />
        <code>Image image = new Image(display, 300000, 300000);</code>
      </source_code>
      <source_code type="assignment">
        <location start="661" end="683" />
        <code>GC gc = new GC(image);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="684" end="717" />
        <code>gc.drawLine(100, 100, 100, 1000);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="718" end="731" />
        <code>gc.dispose();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2226" end="2262" />
        <code>new Image(display, 30877665, 1);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>F2/WinXP

When creating a new Image(8000,5000);, my computer bluescreens.

We use to rely on the creation of large images failing by returning an Image 
that was isDisposed(). (has no handle).
Actually, the bluescreen happens later on, perhaps when creating a GC on the 
Image.  I'm stepping through right now, so we'll see how far I can get.
Let us know how far you get.

I can reproduce this just by creating a really large Image.
try new Image(300000, 200);
Silenio, can you reproduce this?
I have tried to reproduce it with the code below, but I was not
successfull.

final Display display = new Display();
Image image = new Image(display, 300000, 300000);
GC gc = new GC(image);
gc.drawLine(100, 100, 100, 1000);
gc.dispose();

Randy, can you send us a wad of code which makes it happen on your machine?

Given how close we are to R2.0, unless we can recreate the problem here and 
find some trivial bug, the only fix we could put in for this would be to pick 
a random number for the maximum image size and just reject anything bigger. 
Say 1024x1024.

For me, it happens about one in 5 times for really large images.
Can the be specific to a video device driver?  Does creating an offscreen 
buffer involve the Display driver?

Someone on the GEF newsgroup is reporting "No more handles" error from SWT.  Is 
this the expected result of a size that cannot be satisfied?  SWT used to just 
return the Image, which GEF would then call isDisposed() to see if the Image 
was actually created or not.

Out of curiosity, would the fact that I never dispose this large Image when the 
process terminates affect anything on XP?  The Image is currently cached, and 
only disposed of when a different size is needed, or when it is deemed 
not "recently used", and thrown out.

Vamos ao penta!

I will give you a specific size later, I can't afford to blue screen right now.
The exception is the correct behavior. We use to
return a disposed image, but this has been fixed
for a while. The code I provided throws the exception
as expected.

The resolution of the screen affects the size in bytes
of images created with Image(Display, int, int).
This is the biggest image I can create on my XP machine with
a 32 bit depth screen.

    new Image(display, 30877665, 1);

For this image, the data size 118M ((30877665 * 4) / 1024 / 1024).

I have not been able to cause a blue screen even
with this image.
I will be at OTI Ottawa next week if you want to see this reproduced on my 
machine.
Otherwise, I think most people are getting the "no more handles" exception.
That will be good.
Where was this left? Silenio apparently is not able to reproduce the problem 
you are Randy is seeing. Randy: Does this happen on more than one machine?

Hm... I've just read through Randy's comments again. The comment "I never 
dispose this large Image when the process terminates." sounds like a potential 
source of problems, although it is supposed to work. 
I showed this to Silenio using a java snippet that news an Image.  It should 
throw a "No more handles" exception, even if I didn't dispose old images.

I have only reproduced this on my Thinkpad.  I cannot reproduce it on other 
Thinkpads like mine.
I've seem this problem only on Randy's machine. On any other
machine I've tried, a "No more handles" exception is thrown.
There is nothing we can do here.</WithStack>
    <WithOutStack>F2/WinXP

When creating a new Image(8000,5000);, my computer bluescreens.

We use to rely on the creation of large images failing by returning an Image 
that was isDisposed(). (has no handle).
Actually, the bluescreen happens later on, perhaps when creating a GC on the 
Image.  I'm stepping through right now, so we'll see how far I can get.
Let us know how far you get.

I can reproduce this just by creating a really large Image.
try new Image(300000, 200);
Silenio, can you reproduce this?
I have tried to reproduce it with the code below, but I was not
successfull.

final Display display = new Display();
Image image = new Image(display, 300000, 300000);
GC gc = new GC(image);
gc.drawLine(100, 100, 100, 1000);
gc.dispose();

Randy, can you send us a wad of code which makes it happen on your machine?

Given how close we are to R2.0, unless we can recreate the problem here and 
find some trivial bug, the only fix we could put in for this would be to pick 
a random number for the maximum image size and just reject anything bigger. 
Say 1024x1024.

For me, it happens about one in 5 times for really large images.
Can the be specific to a video device driver?  Does creating an offscreen 
buffer involve the Display driver?

Someone on the GEF newsgroup is reporting "No more handles" error from SWT.  Is 
this the expected result of a size that cannot be satisfied?  SWT used to just 
return the Image, which GEF would then call isDisposed() to see if the Image 
was actually created or not.

Out of curiosity, would the fact that I never dispose this large Image when the 
process terminates affect anything on XP?  The Image is currently cached, and 
only disposed of when a different size is needed, or when it is deemed 
not "recently used", and thrown out.

Vamos ao penta!

I will give you a specific size later, I can't afford to blue screen right now.
The exception is the correct behavior. We use to
return a disposed image, but this has been fixed
for a while. The code I provided throws the exception
as expected.

The resolution of the screen affects the size in bytes
of images created with Image(Display, int, int).
This is the biggest image I can create on my XP machine with
a 32 bit depth screen.

    new Image(display, 30877665, 1);

For this image, the data size 118M ((30877665 * 4) / 1024 / 1024).

I have not been able to cause a blue screen even
with this image.
I will be at OTI Ottawa next week if you want to see this reproduced on my 
machine.
Otherwise, I think most people are getting the "no more handles" exception.
That will be good.
Where was this left? Silenio apparently is not able to reproduce the problem 
you are Randy is seeing. Randy: Does this happen on more than one machine?

Hm... I've just read through Randy's comments again. The comment "I never 
dispose this large Image when the process terminates." sounds like a potential 
source of problems, although it is supposed to work. 
I showed this to Silenio using a java snippet that news an Image.  It should 
throw a "No more handles" exception, even if I didn't dispose old images.

I have only reproduced this on my Thinkpad.  I cannot reproduce it on other 
Thinkpads like mine.
I've seem this problem only on Randy's machine. On any other
machine I've tried, a "No more handles" exception is thrown.
There is nothing we can do here.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19622" />
    <CreationDate amount="2002-06-07 12:57:00 -0400" />
    <DupId amount="19245" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>template pref page columns should remember where positioned</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In F2 the columns on the template preference page resize to their defaults when 
revisited.  It would be nice if they remembered their spacing.  I have to 
resize them on every visit.
we will fix that the initial size is not correct. we will not remember the 
column width for 2.0
Reopening for 2.1 consideration


*** This bug has been marked as a duplicate of 19245 ***</WithStack>
    <WithOutStack>In F2 the columns on the template preference page resize to their defaults when 
revisited.  It would be nice if they remembered their spacing.  I have to 
resize them on every visit.
we will fix that the initial size is not correct. we will not remember the 
column width for 2.0
Reopening for 2.1 consideration


*** This bug has been marked as a duplicate of 19245 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19623" />
    <CreationDate amount="2002-06-07 13:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[ExternalTools] Display full command line for external tool</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>It would be really, really great if you could see the full command line 
actually being run when you launch an external tool.  This makes debugging 
external tool setup way easier.
I thought we added this.

No, we do not print this information out to the log console. I agree, it would 
be very useful.
Now in the new external tool rework

Note: new external tool work is not yet released to the head stream and won't 
for a while yet.
This bug has not been fixed and should not have been closed.
Java VM processes show the command line used to launch them. We should promote 
this attribute to the debug core, to allow any process to be annotated with its 
command line, such that it can be seen from the "properties" pop-up in the 
debug view.
Fixed - promoted process attribute and property page to debug platform. Program 
launch delegate annotates process with command line.
Please verify, Jared.
Doesn't appear to work. After executing an ant build script, a target and a
process appear in the debug view.

Selecting "Properties" on the process brings up the process information dialog,
but the "command line:" field is empty. Selecting "Properties" on the target
brings up an information dialog that says, "No property pages for ."
This is not for an ant script - it is for a "program" external tool.
adding jared as cc - please see last comment.
I agree we should add the command line info to ant as well - but we do not 
actually generate a command line for Ant, as it runs in the same VM.
Marking as enhancement to also show equivalent command line for an Ant process 
launched in the Eclipse VM.
Fixed. Added a "generated" command line for the ant launch configs (see 
AntLaunchDelegate). 
Darin, please verify (add see if there is anything else we should add to the 
command line).
Verified and slightly modified.
I changed the ordering a little and added the input handler and logger options.</WithStack>
    <WithOutStack>It would be really, really great if you could see the full command line 
actually being run when you launch an external tool.  This makes debugging 
external tool setup way easier.
I thought we added this.

No, we do not print this information out to the log console. I agree, it would 
be very useful.
Now in the new external tool rework

Note: new external tool work is not yet released to the head stream and won't 
for a while yet.
This bug has not been fixed and should not have been closed.
Java VM processes show the command line used to launch them. We should promote 
this attribute to the debug core, to allow any process to be annotated with its 
command line, such that it can be seen from the "properties" pop-up in the 
debug view.
Fixed - promoted process attribute and property page to debug platform. Program 
launch delegate annotates process with command line.
Please verify, Jared.
Doesn't appear to work. After executing an ant build script, a target and a
process appear in the debug view.

Selecting "Properties" on the process brings up the process information dialog,
but the "command line:" field is empty. Selecting "Properties" on the target
brings up an information dialog that says, "No property pages for ."
This is not for an ant script - it is for a "program" external tool.
adding jared as cc - please see last comment.
I agree we should add the command line info to ant as well - but we do not 
actually generate a command line for Ant, as it runs in the same VM.
Marking as enhancement to also show equivalent command line for an Ant process 
launched in the Eclipse VM.
Fixed. Added a "generated" command line for the ant launch configs (see 
AntLaunchDelegate). 
Darin, please verify (add see if there is anything else we should add to the 
command line).
Verified and slightly modified.
I changed the ordering a little and added the input handler and logger options.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19624" />
    <CreationDate amount="2002-06-07 13:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Replace with team stream in ctx menu in Compare and Synchronize views</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>It happens very often when I synchronize or compare I'd like to replace the 
file with the thing from repository. The replace contents is not enough since 
the file is still dirty after this operation. I have to go to navigator and 
from there replace the file. It's annoying when I'm experimenting a lot (usualy 
I'm changing contents of files but then removing what I've written) and after 
this I have to especially "clean files".
not for 2.0 - defer
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>It happens very often when I synchronize or compare I'd like to replace the 
file with the thing from repository. The replace contents is not enough since 
the file is still dirty after this operation. I have to go to navigator and 
from there replace the file. It's annoying when I'm experimenting a lot (usualy 
I'm changing contents of files but then removing what I've written) and after 
this I have to especially "clean files".
not for 2.0 - defer
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19625" />
    <CreationDate amount="2002-06-07 13:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[JUnit] (post 2.0) TestCase wizard for abstract and extended classes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="165" end="660" />
        <code>If Foo extends Bar and there is a class which tests Bar (e.g. BarTest), then {
    FooTest should extend BarTest

    It should be easy!! to create tests *only* for those methods of Foo
    which are public and do not override a method of Bar.

    wizard should add to FooTest "final void setUp() {setUp2();}"
    wizard should add to FooTest "void setUp2() {}"
    if setUp is already final in BarTest, add to FooTest setUp3 and final setUp2
    if setUp2 is already final in BarTest, add...
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Provide a new wizard(s) or add options to existing TestCase wizard which operate
as follows:

Assume we're making a TestCase for class Foo, possibly names FooTest.

If Foo extends Bar and there is a class which tests Bar (e.g. BarTest), then {
    FooTest should extend BarTest

    It should be easy!! to create tests *only* for those methods of Foo
    which are public and do not override a method of Bar.

    wizard should add to FooTest "final void setUp() {setUp2();}"
    wizard should add to FooTest "void setUp2() {}"
    if setUp is already final in BarTest, add to FooTest setUp3 and final setUp2
    if setUp2 is already final in BarTest, add...
}

If Foo is abstract {
    FooTest is abstract
    wizard adds to FooTest "public abstract Foo[] createFooSet();"
}

This should make it easy to create a set of test for an abstract class hierarchy.
defer
I don't use tearDown frequently, but for consistency, anything done for setUp
should be done in the same way for tearDown.
Chaning state from assigned later to resolved later. Assigned later got 
introduced by the last bug conversion and is not a supported Eclipse bug state.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Provide a new wizard(s) or add options to existing TestCase wizard which operate
as follows:

Assume we're making a TestCase for class Foo, possibly names FooTest.

If Foo extends Bar and there is a class which tests Bar (e.g. BarTest), then {
    FooTest should extend BarTest

    It should be easy!! to create tests *only* for those methods of Foo
    which are public and do not override a method of Bar.

    wizard should add to FooTest "final void setUp() {setUp2();}"
    wizard should add to FooTest "void setUp2() {}"
    if setUp is already final in BarTest, add to FooTest setUp3 and final setUp2
    if setUp2 is already final in BarTest, add...
}

If Foo is abstract {
    FooTest is abstract
    wizard adds to FooTest "public abstract Foo[] createFooSet();"
}

This should make it easy to create a set of test for an abstract class hierarchy.
defer
I don't use tearDown frequently, but for consistency, anything done for setUp
should be done in the same way for tearDown.
Chaning state from assigned later to resolved later. Assigned later got 
introduced by the last bug conversion and is not a supported Eclipse bug state.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19626" />
    <CreationDate amount="2002-06-07 13:21:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[JUnit] (post 2.0) Display method icons in TestCase wizard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When using the JUnit TestCase wizard, one ends up at a dialog box labeled, "Test
Methods / Select methods for which test method stubs should be created".

It would be helpful to show the same icons for the various methods that are
shown in the outline view.  (Example: In situations where I'm constructing an
abstract class test hierarchy, I usually only test public methods which are not
overriding the superclass.)
sigh, missed this one, but cannot fix for 2.0
Created attachment 2709
fix

Implementation notes:

uses the internal AppearanceAwareLabelProvider -- I did not want to copy code.

New Public API?
applied patch - we should surface the more sophisticated label provider as 
well. 
However, I'd prefer to not surface the concrete type, suggest a factory method 
in ILabelProvider JavaUI.getStandardLabelProvider()
Not so easy as this would mean that 30 flags would become API as well.
Moving to jdt-inbox for reconsideration.
no further action planned
*sigh*

Thanks for trying.</WithStack>
    <WithOutStack>When using the JUnit TestCase wizard, one ends up at a dialog box labeled, "Test
Methods / Select methods for which test method stubs should be created".

It would be helpful to show the same icons for the various methods that are
shown in the outline view.  (Example: In situations where I'm constructing an
abstract class test hierarchy, I usually only test public methods which are not
overriding the superclass.)
sigh, missed this one, but cannot fix for 2.0
Created attachment 2709
fix

Implementation notes:

uses the internal AppearanceAwareLabelProvider -- I did not want to copy code.

New Public API?
applied patch - we should surface the more sophisticated label provider as 
well. 
However, I'd prefer to not surface the concrete type, suggest a factory method 
in ILabelProvider JavaUI.getStandardLabelProvider()
Not so easy as this would mean that 30 flags would become API as well.
Moving to jdt-inbox for reconsideration.
no further action planned
*sigh*

Thanks for trying.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19627" />
    <CreationDate amount="2002-06-07 13:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[JUnit] (post 2.0) Option to make test method stubs final</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When using the JUnit TestCase wizard, one ends up at a dialog box labeled, "Test
Methods / Select methods for which test method stubs should be created".

I would prefer that all test method stubs be made final, or that there is a
checkbox option which would make all test method stubs final.
agreed, post 2.0
Created attachment 2708
fix
applied patch</WithStack>
    <WithOutStack>When using the JUnit TestCase wizard, one ends up at a dialog box labeled, "Test
Methods / Select methods for which test method stubs should be created".

I would prefer that all test method stubs be made final, or that there is a
checkbox option which would make all test method stubs final.
agreed, post 2.0
Created attachment 2708
fix
applied patch</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19628" />
    <CreationDate amount="2002-06-07 13:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[Wizards] Busy cursor not displayed when importing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>While importing plugins in eclipse version f2 the busy cursor is not displayed 
on the main eclipse window.  The busy cursor is displayed for the 'import 
plugin and fragments' popup.  The java perspective was being displayed in the 
main window at the time of the import operation.
Please indicate the build number in PRs.
Build eclipse-SDK-20020602-win32.zip
PDE is does not show busy cursors in this case. The operation is exectuted in 
the JFace wizard modal context (getContainer().run()) and this behaviour is 
common to all wizards launched from a main Eclipse window.

If it helps, the wizard executes the operation in a separate thread.
Busy cursor is shown in the import dialogs supplied by UI and PDE dialogs in 
20020827. Closing.</WithStack>
    <WithOutStack>While importing plugins in eclipse version f2 the busy cursor is not displayed 
on the main eclipse window.  The busy cursor is displayed for the 'import 
plugin and fragments' popup.  The java perspective was being displayed in the 
main window at the time of the import operation.
Please indicate the build number in PRs.
Build eclipse-SDK-20020602-win32.zip
PDE is does not show busy cursors in this case. The operation is exectuted in 
the JFace wizard modal context (getContainer().run()) and this behaviour is 
common to all wizards launched from a main Eclipse window.

If it helps, the wizard executes the operation in a separate thread.
Busy cursor is shown in the import dialogs supplied by UI and PDE dialogs in 
20020827. Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19629" />
    <CreationDate amount="2002-06-07 13:36:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Releng" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>delete extra files in org.eclipse.platform</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build 20020607 (0843)

The following files end up in the built version of the org.eclipse.platform 
plug-in:

install.ini
notice.html
cpl-v05.html
startup.jar

These files exist in the org.eclipse.platform project, but
belong in the root of the install (only), in &lt;install&gt;/eclipse/ 

These files should not be included in project's build.properties file.
This will mean that the build scripts need to copy these files
from somewhere other than the final "built" plug-in.
startup.jar is interesting in that it is created during the build.

We should make similar changes for the motif library that is 
copied up from the org.eclipse.platform.linux.motif plug-in.
Released changes to the following plug-in projects (no change to
corresponding *-feature projects) - these are tagged as version "v20020608":

   org.eclipse.platform
   org.eclipse.platform.linux.gtk
   org.eclipse.platform.linux.motif

Test build 20020607 (1445) was successful and no longer has an extra copy of 
install.ini, notice.html, cpl-v05.html, or libmotif.so.  However, it does 
still have a startup.jar, which gets included automatically in the plug-in in 
virture of it being a library JAR being built. Rather than change pde.build at 
this late stage, we should arrange in the build scripts to delete
&lt;output&gt;/eclipse/plugins/org.eclipse.platform_2.0.0/startup.jar

Fixed.</WithStack>
    <WithOutStack>build 20020607 (0843)

The following files end up in the built version of the org.eclipse.platform 
plug-in:

install.ini
notice.html
cpl-v05.html
startup.jar

These files exist in the org.eclipse.platform project, but
belong in the root of the install (only), in &lt;install&gt;/eclipse/ 

These files should not be included in project's build.properties file.
This will mean that the build scripts need to copy these files
from somewhere other than the final "built" plug-in.
startup.jar is interesting in that it is created during the build.

We should make similar changes for the motif library that is 
copied up from the org.eclipse.platform.linux.motif plug-in.
Released changes to the following plug-in projects (no change to
corresponding *-feature projects) - these are tagged as version "v20020608":

   org.eclipse.platform
   org.eclipse.platform.linux.gtk
   org.eclipse.platform.linux.motif

Test build 20020607 (1445) was successful and no longer has an extra copy of 
install.ini, notice.html, cpl-v05.html, or libmotif.so.  However, it does 
still have a startup.jar, which gets included automatically in the plug-in in 
virture of it being a library JAR being built. Rather than change pde.build at 
this late stage, we should arrange in the build scripts to delete
&lt;output&gt;/eclipse/plugins/org.eclipse.platform_2.0.0/startup.jar

Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19630" />
    <CreationDate amount="2002-06-07 13:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Windows 98" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Coolbar - odd dispose behavior</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="assignment">
        <location start="511" end="576" />
        <code>boolean showOld = oldControl != null &amp;&amp; oldControl.getVisible ();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="650" end="675" />
        <code>oldControl.getVisible ();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1510" end="1536" />
        <code>setControl(null);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Run the attached test case.
Press the Remove button.  

The remove action will remove the first coolitem.  First the coolitem's 
associated toolbar is disposed, then it executes setControl(null) for the 
coolitem, then it disposes the coolitem.

Note that the setControl(null) method cause an SWTException, which is odd.
Created attachment 1311
test case jar file

It's a bug on setControl.
Fortunately it's not related with the changes about the layout problems.

A fast fix is to change line 326 on CoolItem:
boolean showOld = oldControl != null &amp;&amp; oldControl.getVisible ();
By:
boolean showOld = oldControl != null &amp;&amp; !oldControl.isDisposed() &amp;&amp; 
oldControl.getVisible ();

I've to talk to SN for releasing this code.
Lynne, do you need this fix for R2.0?




I don't think so.  I workaround it by not calling setControl(null) if the 
control is disposed.  Is there any reason why control must be set to null as 
part of disposing the CoolItem?  If so, I can rearrange my code.

Actually, I take that back.  I will not be able to rearrange my code given the 
way the framework is.  The toolbar may be disposed of above me, at which point 
I get rid of the CoolItem.
Ok, but do you really need to call setControl ?
I'll try go get this code released (get two TL's approval).


Steve, the fix I've proposed here follows the same patter find on 
Coolbar.destroyItem(). 
I pretty sure it's Ok.

You're misunderstanding me.  My question - do I need to execute the following 
as part of disposing of a CoolItem?

         setControl(null);

If I do not need to do this, then I do NOT need this to be fixed.

You do not need this line as part of disposing of a CoolItem. You can get rid 
of this setControl(null).

We have to check setControl for ALL types of Items in ALL platform before get 
this PR fixed. But it will done after the 2.0.
(We've already detected this same problem for windows TabItem and Emulated 
CoolItem)

Sorry for the misunderstand.
Fixed &gt; 20020704</WithStack>
    <WithOutStack>Run the attached test case.
Press the Remove button.  

The remove action will remove the first coolitem.  First the coolitem's 
associated toolbar is disposed, then it executes setControl(null) for the 
coolitem, then it disposes the coolitem.

Note that the setControl(null) method cause an SWTException, which is odd.
Created attachment 1311
test case jar file

It's a bug on setControl.
Fortunately it's not related with the changes about the layout problems.

A fast fix is to change line 326 on CoolItem:
boolean showOld = oldControl != null &amp;&amp; oldControl.getVisible ();
By:
boolean showOld = oldControl != null &amp;&amp; !oldControl.isDisposed() &amp;&amp; 
oldControl.getVisible ();

I've to talk to SN for releasing this code.
Lynne, do you need this fix for R2.0?




I don't think so.  I workaround it by not calling setControl(null) if the 
control is disposed.  Is there any reason why control must be set to null as 
part of disposing the CoolItem?  If so, I can rearrange my code.

Actually, I take that back.  I will not be able to rearrange my code given the 
way the framework is.  The toolbar may be disposed of above me, at which point 
I get rid of the CoolItem.
Ok, but do you really need to call setControl ?
I'll try go get this code released (get two TL's approval).


Steve, the fix I've proposed here follows the same patter find on 
Coolbar.destroyItem(). 
I pretty sure it's Ok.

You're misunderstanding me.  My question - do I need to execute the following 
as part of disposing of a CoolItem?

         setControl(null);

If I do not need to do this, then I do NOT need this to be fixed.

You do not need this line as part of disposing of a CoolItem. You can get rid 
of this setControl(null).

We have to check setControl for ALL types of Items in ALL platform before get 
this PR fixed. But it will done after the 2.0.
(We've already detected this same problem for windows TabItem and Emulated 
CoolItem)

Sorry for the misunderstand.
Fixed &gt; 20020704</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19631" />
    <CreationDate amount="2002-06-07 13:43:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Forcing Preview view visible on selection change can cause Eclipse to fail</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Using freeze 2 for release 2.0 (see also bug 19144 for steps to reproduce).

The update plugin is listening for selection events and during the listener 
will call bringToTop() on it's Preview view. This is not recommended behavior. 
Can the update plugin avoid doing this? Imagine if the Preview view is stack in 
the same tab folder as Outline view. Clicking on Outline would cause the 
Preview view to show up instead.

Trying to support this behavior at the workbench level is not trivial and too 
risky of a change so close to release 2.0

This is a F3 fix candidate.
Fixed in 2.0 GM</WithStack>
    <WithOutStack>Using freeze 2 for release 2.0 (see also bug 19144 for steps to reproduce).

The update plugin is listening for selection events and during the listener 
will call bringToTop() on it's Preview view. This is not recommended behavior. 
Can the update plugin avoid doing this? Imagine if the Preview view is stack in 
the same tab folder as Outline view. Clicking on Outline would cause the 
Preview view to show up instead.

Trying to support this behavior at the workbench level is not trivial and too 
risky of a change so close to release 2.0

This is a F3 fix candidate.
Fixed in 2.0 GM</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19632" />
    <CreationDate amount="2002-06-07 13:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Tracker should adjust cursor on mouse not down, not on MENU</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- fix checkStyle</Line>
          <Line>- remove MENU from motif</Line>
          <Line>Fixed &gt; 0724, now behaves like win32</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>post 2.0

- fix checkStyle
- remove MENU from motif
Fixed &gt; 0724, now behaves like win32</WithStack>
    <WithOutStack>post 2.0

- fix checkStyle
- remove MENU from motif
Fixed &gt; 0724, now behaves like win32</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19633" />
    <CreationDate amount="2002-06-07 14:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>JUnit launch configurations are not honoring class path</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>If I make a junit test that needs different things on the classpath than what a 
project needs for building, and try to make a launch configuration that 
reflects that, it looks like the junit runner ignores the LC and just goes with 
the project build classpath.

The concrete example I can give is an EJB, which is built as a generic J2EE 
component (using sun's j2ee SDK), and I want to test against Weblogic, but 
don't want to be forced to put weblogic.jar in the the build classpath.

If I put the vendor-specific jar (i.e. weblogic.jar) into the build path, the 
junit test runs fine.  If I put it into the launch configuration user 
classpath, the weblogic InitialContextFactory is not found (instantiated via 
reflection).  If I put it into the bootstrap classpath, the 
InitialContextFactory is found, but weblogic blows up later on in the test, 
possibly due being loaded by the bootstrap CL.

This problem is repeatable without J2EE app servers involved, and shows up any 
time a unit test is loading a class via reflection.  The trivial case can be 
worked around by using the boostrap classpath, but the more significant one 
cannot.
temporarily tagged as P5
fix ready for review
released, reviewed by Kai
Verified. TB</WithStack>
    <WithOutStack>If I make a junit test that needs different things on the classpath than what a 
project needs for building, and try to make a launch configuration that 
reflects that, it looks like the junit runner ignores the LC and just goes with 
the project build classpath.

The concrete example I can give is an EJB, which is built as a generic J2EE 
component (using sun's j2ee SDK), and I want to test against Weblogic, but 
don't want to be forced to put weblogic.jar in the the build classpath.

If I put the vendor-specific jar (i.e. weblogic.jar) into the build path, the 
junit test runs fine.  If I put it into the launch configuration user 
classpath, the weblogic InitialContextFactory is not found (instantiated via 
reflection).  If I put it into the bootstrap classpath, the 
InitialContextFactory is found, but weblogic blows up later on in the test, 
possibly due being loaded by the bootstrap CL.

This problem is repeatable without J2EE app servers involved, and shows up any 
time a unit test is loading a class via reflection.  The trivial case can be 
worked around by using the boostrap classpath, but the more significant one 
cannot.
temporarily tagged as P5
fix ready for review
released, reviewed by Kai
Verified. TB</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19634" />
    <CreationDate amount="2002-06-07 14:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unreproducable deadlock during refactoring</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Build: 20020602
IBM JDK 1.3.1 20020403

I selected a local variable, right-clicked and 
selected Refactoring-&gt;Rename element.  I typed in the new name of the variable and clicked Finish.  
Eclipse deadlocked with the refactoring dialog still in place.

I cannot reproduce this 
(after trying many times). 

I have included the vm dump file.  It is important to note that the VM 
failed during the printing of the dump.  The main thread's stack trace is incomplete. Because of 
this failure the validity of the dump file is questionable as the failure during the stack 
printing could have corrupted further data in the VM.
Created attachment 1312
javacore.txt
temporarily tagged as P5 for bug managing purposes
for now we can only wait and see...
Nobody else reported a similar problem on 2.0. Unfortunatelly the stack trace 
is incomplete and therefore doesn't really help.

Closing PR. Jed, please reopen if you have additional information</WithStack>
    <WithOutStack>Build: 20020602
IBM JDK 1.3.1 20020403

I selected a local variable, right-clicked and 
selected Refactoring-&gt;Rename element.  I typed in the new name of the variable and clicked Finish.  
Eclipse deadlocked with the refactoring dialog still in place.

I cannot reproduce this 
(after trying many times). 

I have included the vm dump file.  It is important to note that the VM 
failed during the printing of the dump.  The main thread's stack trace is incomplete. Because of 
this failure the validity of the dump file is questionable as the failure during the stack 
printing could have corrupted further data in the VM.
Created attachment 1312
javacore.txt
temporarily tagged as P5 for bug managing purposes
for now we can only wait and see...
Nobody else reported a similar problem on 2.0. Unfortunatelly the stack trace 
is incomplete and therefore doesn't really help.

Closing PR. Jed, please reopen if you have additional information</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19635" />
    <CreationDate amount="2002-06-07 14:16:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JUnit useless launch config name when there is no selection</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) give the packages view focus</Line>
          <Line>2) remove the selection</Line>
          <Line>3) bring up the launch config dialog</Line>
          <Line>4) create a new JUnit launch configuration</Line>
          <Line>-&gt;it is given the name (1)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>1) give the packages view focus 
2) remove the selection
3) bring up the launch config dialog
4) create a new JUnit launch configuration
-&gt;it is given the name (1)

should fix
released, reviewed by Kai
Verified. TB</WithStack>
    <WithOutStack>1) give the packages view focus 
2) remove the selection
3) bring up the launch config dialog
4) create a new JUnit launch configuration
-&gt;it is given the name (1)

should fix
released, reviewed by Kai
Verified. TB</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19636" />
    <CreationDate amount="2002-06-07 14:21:00 -0400" />
    <DupId amount="13730" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New selection behaviour in compare editor causes problems</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Sync in a projectwith outgoing changes</Line>
          <Line>2. Select a file. Compare fills in the rest.</Line>
          <Line>3. Right-click, commit.</Line>
          <Line>4. Item is removed from the tree. BUT the structure viewer and text merge</Line>
          <Line>editors still have the old contents in them! This is quite bad.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Has the way that the structure compare &amp; the text merge editors are fed changed
in recent builds? I now see the following behaviour, which I've never seen before.

1. Sync in a projectwith outgoing changes
2. Select a file. Compare fills in the rest.
3. Right-click, commit.
4. Item is removed from the tree. BUT the structure viewer and text merge
editors still have the old contents in them! This is quite bad.


*** This bug has been marked as a duplicate of 13730 ***</WithStack>
    <WithOutStack>Has the way that the structure compare &amp; the text merge editors are fed changed
in recent builds? I now see the following behaviour, which I've never seen before.

1. Sync in a projectwith outgoing changes
2. Select a file. Compare fills in the rest.
3. Right-click, commit.
4. Item is removed from the tree. BUT the structure viewer and text merge
editors still have the old contents in them! This is quite bad.


*** This bug has been marked as a duplicate of 13730 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19637" />
    <CreationDate amount="2002-06-07 14:22:00 -0400" />
    <DupId amount="18641" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>Coolbar layout messed up</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I met this problem twice but don't know how to recreate.

At sometiming, coolbar suddenly rearrenged onto titlebar and menu bar,
and menu and title bar were hidden by coolbar.

Other editor, view layout also seems a bit odd, and I couldn't close editor
from its close button on the editor tab.

When I tried to close eclipse I got a error dialog (don't remember error 
message).

Then I restarted Eclipse, and found the layout problem is still there.
Once I renamed workbench.xml file, it start normal layout.
Created attachment 1313
Here is the log file
Created attachment 1314
Here is the bad workbench.xml file
This looks like a general workbench UI issue.
Which build were you using?
Lynne, please see the Coolbar exceptions.
Eduardo, please see the EditorManager exceptions.

As part of [Bug 19238] null pointer and isDisposed checks put in.

This looks like it was all kicked off by the EditorManager being unable to 
restore an editor, which I guess leads to the editor action bars getting out of 
whack.  Eduardo, please advise after you look at the log.
Note there is an SWT dispose bug related to CoolItems.  See [Bug 19630].  This 
leads to an SWTException under what I believe are normal conditions (i.e., 
ToolBarManager for a CoolItem is disposing of itself).  The coolbar code has 
been changed to work around this bug, which should get rid of all the coolbar 
exceptions in this log.  The exceptions are all caused by the SWTException 
widgetIsDisposed() which causes the CoolItem not to get properly disposed of, 
which leads to the NPEs.
I was using F2 build.
It is hard to be sure without a reproduceble case but this seems to be a dup of 
bug 18641. And the following exception seems to be concequence of the first NPE.

Please try it in the F3 build (not available yet) and let us know if you see 
this problem again.
Do you remember deleting files from the file system or/and even from the 
workbench before restarting it. Specialy files that had editors opened.
Asahata-San, if you can still reproduce this in F3, please reopen the PR.


*** This bug has been marked as a duplicate of 18641 ***</WithStack>
    <WithOutStack>I met this problem twice but don't know how to recreate.

At sometiming, coolbar suddenly rearrenged onto titlebar and menu bar,
and menu and title bar were hidden by coolbar.

Other editor, view layout also seems a bit odd, and I couldn't close editor
from its close button on the editor tab.

When I tried to close eclipse I got a error dialog (don't remember error 
message).

Then I restarted Eclipse, and found the layout problem is still there.
Once I renamed workbench.xml file, it start normal layout.
Created attachment 1313
Here is the log file
Created attachment 1314
Here is the bad workbench.xml file
This looks like a general workbench UI issue.
Which build were you using?
Lynne, please see the Coolbar exceptions.
Eduardo, please see the EditorManager exceptions.

As part of [Bug 19238] null pointer and isDisposed checks put in.

This looks like it was all kicked off by the EditorManager being unable to 
restore an editor, which I guess leads to the editor action bars getting out of 
whack.  Eduardo, please advise after you look at the log.
Note there is an SWT dispose bug related to CoolItems.  See [Bug 19630].  This 
leads to an SWTException under what I believe are normal conditions (i.e., 
ToolBarManager for a CoolItem is disposing of itself).  The coolbar code has 
been changed to work around this bug, which should get rid of all the coolbar 
exceptions in this log.  The exceptions are all caused by the SWTException 
widgetIsDisposed() which causes the CoolItem not to get properly disposed of, 
which leads to the NPEs.
I was using F2 build.
It is hard to be sure without a reproduceble case but this seems to be a dup of 
bug 18641. And the following exception seems to be concequence of the first NPE.

Please try it in the F3 build (not available yet) and let us know if you see 
this problem again.
Do you remember deleting files from the file system or/and even from the 
workbench before restarting it. Specialy files that had editors opened.
Asahata-San, if you can still reproduce this in F3, please reopen the PR.


*** This bug has been marked as a duplicate of 18641 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19638" />
    <CreationDate amount="2002-06-07 14:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Open Type Hierarchy can start infinite progress monitor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331231298">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.removeType(RegionBasedTypeHierarchy.java:140)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.removeType(RegionBasedTypeHierarchy.java:134)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranches(RegionBasedTypeHierarchy.java:111)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranches(RegionBasedTypeHierarchy.java:107)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranches(RegionBasedTypeHierarchy.java:115)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranches(RegionBasedTypeHierarchy.java:99)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.build(RegionBasedHierarchyBuilder.java:51)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.compute(RegionBasedTypeHierarchy.java:73)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh(TypeHierarchy.java:1131)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation(CreateTypeHierarchyOperation.java:69)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:307)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:515)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.core.JavaModelManager.runOperation(JavaModelManager.java:1181)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:574)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy(JavaProject.java:1597)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.doHierarchyRefresh(TypeHierarchyLifeCycle.java:173)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.access$0(TypeHierarchyLifeCycle.java:133)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle$1.run(TypeHierarchyLifeCycle.java:109)</Frame>
          <Frame depth="18">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:299)</Frame>
          <Frame depth="19">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)</Frame>
          <Frame depth="20">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:394)</Frame>
          <Frame depth="21">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)</Frame>
          <Frame depth="22">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:391)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1068)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.ensureRefreshedTypeHierarchy(TypeHierarchyLifeCycle.java:117)</Frame>
          <Frame depth="25">org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.updateInput(TypeHierarchyViewPart.java:406)</Frame>
          <Frame depth="26">org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.setInputElement(TypeHierarchyViewPart.java:392)</Frame>
          <Frame depth="27">org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.openInViewPart(OpenTypeHierarchyUtil.java:120)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.open(OpenTypeHierarchyUtil.java:97)</Frame>
          <Frame depth="29">org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run(OpenTypeHierarchyAction.java:120)</Frame>
          <Frame depth="30">org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run(OpenTypeHierarchyAction.java:112)</Frame>
          <Frame depth="31">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:178)</Frame>
          <Frame depth="32">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:156)</Frame>
          <Frame depth="33">org.eclipse.jface.action.Action.runWithEvent(Action.java:749)</Frame>
          <Frame depth="34">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="35">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="36">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="37">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)</Frame>
          <Frame depth="44">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="45">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="46">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="47">org.eclipse.core.launcher.Main.basicRun(Main.java:248)</Frame>
          <Frame depth="48">org.eclipse.core.launcher.Main.run(Main.java:697)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.main(Main.java:530)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="6668" end="7456" />
        <code>protected void removeType(IType type) {
	IType[] subtypes = this.getSubtypes(type);
	this.typeToSubtypes.remove(type);
	if (subtypes != null) {
		for (int i= 0; i &lt; subtypes.length; i++) {
			this.removeType(subtypes[i]);
		}
	}
	IType superclass = (IType)this.classToSuperclass.remove(type);
	if (superclass != null) {
		TypeVector types = (TypeVector)this.typeToSubtypes.get
(superclass);
		if (types != null) types.remove(type);
	}
	IType[] superinterfaces = (IType[])this.typeToSuperInterfaces.remove
(type);
	if (superinterfaces != null) {
		for (int i = 0, length = superinterfaces.length; i &lt; length; 
i++) {
			IType superinterface = superinterfaces[i];
			TypeVector types = (TypeVector)this.typeToSubtypes.get
(superinterface);
			if (types != null) types.remove(type);
		}
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="13">
        <Lines>
          <Line>- retrieve the org.eclipse.swt project from dev.eclipse.org into your workspace</Line>
          <Line>(take HEAD)</Line>
          <Line>- in the Resource navigator rename org.eclipse.swt's contained</Line>
          <Line>file .classpath_win32 to .classpath</Line>
          <Line>- Eclipse does a compilation</Line>
          <Line>- Window -&gt; Open Perspective -&gt; Java</Line>
          <Line>- in the packages viewer expand the org.eclipse.swt tree</Line>
          <Line>- select Eclipse SWT/win32</Line>
          <Line>- right-click -&gt; Open Type Hierarchy</Line>
          <Line>- Hierarchy view comes to front but never populates, and progress monitor in</Line>
          <Line>bottom-right goes on indefinitely</Line>
          <Line>Can reproduce and the reason is a NullPointerException during the type</Line>
          <Line>hierarchy computation (see below). Moving to JDT CORE should investigate for F3.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>F2 integration build 0607

- retrieve the org.eclipse.swt project from dev.eclipse.org into your workspace 
(take HEAD)
- in the Resource navigator rename org.eclipse.swt's contained 
file .classpath_win32 to .classpath
- Eclipse does a compilation
- Window -&gt; Open Perspective -&gt; Java
- in the packages viewer expand the org.eclipse.swt tree
- select Eclipse SWT/win32
- right-click -&gt; Open Type Hierarchy
- Hierarchy view comes to front but never populates, and progress monitor in 
bottom-right goes on indefinitely
Can reproduce and the reason is a NullPointerException during the type 
hierarchy computation (see below). Moving to JDT CORE should investigate for F3.

java.version=1.3.0_02
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install 
file:D:/eclipse/20020607/eclipse/
!ENTRY org.eclipse.jdt.ui 4 1 Jun 08, 2002 23:12:50.841
!MESSAGE Internal Error
!STACK 1
org.eclipse.jdt.core.JavaModelException[4]: java.lang.NullPointerException
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.removeType
(RegionBasedTypeHierarchy.java:140)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.removeType
(RegionBasedTypeHierarchy.java:134)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranch
es(RegionBasedTypeHierarchy.java:111)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranch
es(RegionBasedTypeHierarchy.java:107)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranch
es(RegionBasedTypeHierarchy.java:115)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranch
es(RegionBasedTypeHierarchy.java:99)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.build
(RegionBasedHierarchyBuilder.java:51)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.compute
(RegionBasedTypeHierarchy.java:73)
	at org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh
(TypeHierarchy.java:1131)
	at 
org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation
(CreateTypeHierarchyOperation.java:69)
	at org.eclipse.jdt.internal.core.JavaModelOperation.execute
(JavaModelOperation.java:307)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:515)
	at org.eclipse.jdt.internal.core.JavaModelManager.runOperation
(JavaModelManager.java:1181)
	at org.eclipse.jdt.internal.core.JavaElement.runOperation
(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy
(JavaProject.java:1597)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.doHierarchyRefr
esh(TypeHierarchyLifeCycle.java:173)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.access$0
(TypeHierarchyLifeCycle.java:133)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle$1.run
(TypeHierarchyLifeCycle.java:109)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:299)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.window.ApplicationWindow$1.run
(ApplicationWindow.java:394)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)
	at org.eclipse.jface.window.ApplicationWindow.run
(ApplicationWindow.java:391)
	at org.eclipse.ui.internal.WorkbenchWindow.run
(WorkbenchWindow.java:1068)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.ensureRefreshed
TypeHierarchy(TypeHierarchyLifeCycle.java:117)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.updateInput
(TypeHierarchyViewPart.java:406)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.setInputElement
(TypeHierarchyViewPart.java:392)
	at org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.openInViewPart
(OpenTypeHierarchyUtil.java:120)
	at org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.open
(OpenTypeHierarchyUtil.java:97)
	at org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run
(OpenTypeHierarchyAction.java:120)
	at org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run
(OpenTypeHierarchyAction.java:112)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:178)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:156)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:749)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:248)
	at org.eclipse.core.launcher.Main.run(Main.java:697)
	at org.eclipse.core.launcher.Main.main(Main.java:530)
!ENTRY org.eclipse.jdt.core 4 4 Jun 08, 2002 23:12:50.841
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.removeType
(RegionBasedTypeHierarchy.java:140)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.removeType
(RegionBasedTypeHierarchy.java:134)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranch
es(RegionBasedTypeHierarchy.java:111)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranch
es(RegionBasedTypeHierarchy.java:107)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranch
es(RegionBasedTypeHierarchy.java:115)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranch
es(RegionBasedTypeHierarchy.java:99)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.build
(RegionBasedHierarchyBuilder.java:51)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.compute
(RegionBasedTypeHierarchy.java:73)
	at org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh
(TypeHierarchy.java:1131)
	at 
org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation
(CreateTypeHierarchyOperation.java:69)
	at org.eclipse.jdt.internal.core.JavaModelOperation.execute
(JavaModelOperation.java:307)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:515)
	at org.eclipse.jdt.internal.core.JavaModelManager.runOperation
(JavaModelManager.java:1181)
	at org.eclipse.jdt.internal.core.JavaElement.runOperation
(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy
(JavaProject.java:1597)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.doHierarchyRefr
esh(TypeHierarchyLifeCycle.java:173)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.access$0
(TypeHierarchyLifeCycle.java:133)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle$1.run
(TypeHierarchyLifeCycle.java:109)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:299)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.window.ApplicationWindow$1.run
(ApplicationWindow.java:394)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)
	at org.eclipse.jface.window.ApplicationWindow.run
(ApplicationWindow.java:391)
	at org.eclipse.ui.internal.WorkbenchWindow.run
(WorkbenchWindow.java:1068)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.ensureRefreshed
TypeHierarchy(TypeHierarchyLifeCycle.java:117)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.updateInput
(TypeHierarchyViewPart.java:406)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.setInputElement
(TypeHierarchyViewPart.java:392)
	at org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.openInViewPart
(OpenTypeHierarchyUtil.java:120)
	at org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.open
(OpenTypeHierarchyUtil.java:97)
	at org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run
(OpenTypeHierarchyAction.java:120)
	at org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run
(OpenTypeHierarchyAction.java:112)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:178)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:156)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:749)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:248)
	at org.eclipse.core.launcher.Main.run(Main.java:697)
	at org.eclipse.core.launcher.Main.main(Main.java:530)
Added null checks, but scenario should not occur. Would a case where a type 
knows about a superclass which doesn't know it in return.
Might be region pruning causing this to happen. Need to investigate
Offending type is "CoolItem". When it is being removed, the subtypes collection 
is completely empty, even though the hierarchy was build with subtypes flag on.
CoolItem's superclass is Item, defined outside the region (swt/win32) since it 
belongs to (swt/common).

But actually, the implementation of RegionBasedTypeHierarchy#removeType looks 
suspicious, since it is parent from children collection, before iterating into 
children... (see second line in method "this.typeToSubtypes.remove(type)".

Given that, the null check is likely the best fix. Might revisit this code past 
2.0, but it is fairly conservative (delete as much as possible locally before 
iterating into children).

protected void removeType(IType type) {
	IType[] subtypes = this.getSubtypes(type);
	this.typeToSubtypes.remove(type);
	if (subtypes != null) {
		for (int i= 0; i &lt; subtypes.length; i++) {
			this.removeType(subtypes[i]);
		}
	}
	IType superclass = (IType)this.classToSuperclass.remove(type);
	if (superclass != null) {
		TypeVector types = (TypeVector)this.typeToSubtypes.get
(superclass);
		if (types != null) types.remove(type);
	}
	IType[] superinterfaces = (IType[])this.typeToSuperInterfaces.remove
(type);
	if (superinterfaces != null) {
		for (int i = 0, length = superinterfaces.length; i &lt; length; 
i++) {
			IType superinterface = superinterfaces[i];
			TypeVector types = (TypeVector)this.typeToSubtypes.get
(superinterface);
			if (types != null) types.remove(type);
		}
	}
}


Verified.</WithStack>
    <WithOutStack>F2 integration build 0607

- retrieve the org.eclipse.swt project from dev.eclipse.org into your workspace 
(take HEAD)
- in the Resource navigator rename org.eclipse.swt's contained 
file .classpath_win32 to .classpath
- Eclipse does a compilation
- Window -&gt; Open Perspective -&gt; Java
- in the packages viewer expand the org.eclipse.swt tree
- select Eclipse SWT/win32
- right-click -&gt; Open Type Hierarchy
- Hierarchy view comes to front but never populates, and progress monitor in 
bottom-right goes on indefinitely
Can reproduce and the reason is a NullPointerException during the type 
hierarchy computation (see below). Moving to JDT CORE should investigate for F3.

java.version=1.3.0_02
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install 
file:D:/eclipse/20020607/eclipse/
!ENTRY org.eclipse.jdt.ui 4 1 Jun 08, 2002 23:12:50.841
!MESSAGE Internal Error
!STACK 1
org.eclipse.jdt.core.JavaModelException[4]: java.lang.NullPointerException
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.removeType
(RegionBasedTypeHierarchy.java:140)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.removeType
(RegionBasedTypeHierarchy.java:134)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranch
es(RegionBasedTypeHierarchy.java:111)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranch
es(RegionBasedTypeHierarchy.java:107)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranch
es(RegionBasedTypeHierarchy.java:115)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.pruneDeadBranch
es(RegionBasedTypeHierarchy.java:99)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedHierarchyBuilder.build
(RegionBasedHierarchyBuilder.java:51)
	at 
org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy.compute
(RegionBasedTypeHierarchy.java:73)
	at org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy.refresh
(TypeHierarchy.java:1131)
	at 
org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation.executeOperation
(CreateTypeHierarchyOperation.java:69)
	at org.eclipse.jdt.internal.core.JavaModelOperation.execute
(JavaModelOperation.java:307)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:515)
	at org.eclipse.jdt.internal.core.JavaModelManager.runOperation
(JavaModelManager.java:1181)
	at org.eclipse.jdt.internal.core.JavaElement.runOperation
(JavaElement.java:574)
	at org.eclipse.jdt.internal.core.JavaProject.newTypeHierarchy
(JavaProject.java:1597)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.doHierarchyRefr
esh(TypeHierarchyLifeCycle.java:173)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.access$0
(TypeHierarchyLifeCycle.java:133)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle$1.run
(TypeHierarchyLifeCycle.java:109)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:299)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.window.ApplicationWindow$1.run
(ApplicationWindow.java:394)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)
	at org.eclipse.jface.window.ApplicationWindow.run
(ApplicationWindow.java:391)
	at org.eclipse.ui.internal.WorkbenchWindow.run
(WorkbenchWindow.java:1068)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.ensureRefreshed
TypeHierarchy(TypeHierarchyLifeCycle.java:117)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.updateInput
(TypeHierarchyViewPart.java:406)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.setInputElement
(TypeHierarchyViewPart.java:392)
	at org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.openInViewPart
(OpenTypeHierarchyUtil.java:120)
	at org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.open
(OpenTypeHierarchyUtil.java:97)
	at org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run
(OpenTypeHierarchyAction.java:120)
	at org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run
(OpenTypeHierarchyAction.java:112)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:178)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:156)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:749)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:248)
	at org.eclipse.core.launcher.Main.run(Main.java:697)
	at org.eclipse.core.launcher.Main.main(Main.java:530)
!ENTRY org.eclipse.jdt.core 4 4 Jun 08, 2002 23:12:50.841
!MESSAGE 
!STACK 0

Added null checks, but scenario should not occur. Would a case where a type 
knows about a superclass which doesn't know it in return.
Might be region pruning causing this to happen. Need to investigate
Offending type is "CoolItem". When it is being removed, the subtypes collection 
is completely empty, even though the hierarchy was build with subtypes flag on.
CoolItem's superclass is Item, defined outside the region (swt/win32) since it 
belongs to (swt/common).

But actually, the implementation of RegionBasedTypeHierarchy#removeType looks 
suspicious, since it is parent from children collection, before iterating into 
children... (see second line in method "this.typeToSubtypes.remove(type)".

Given that, the null check is likely the best fix. Might revisit this code past 
2.0, but it is fairly conservative (delete as much as possible locally before 
iterating into children).

protected void removeType(IType type) {
	IType[] subtypes = this.getSubtypes(type);
	this.typeToSubtypes.remove(type);
	if (subtypes != null) {
		for (int i= 0; i &lt; subtypes.length; i++) {
			this.removeType(subtypes[i]);
		}
	}
	IType superclass = (IType)this.classToSuperclass.remove(type);
	if (superclass != null) {
		TypeVector types = (TypeVector)this.typeToSubtypes.get
(superclass);
		if (types != null) types.remove(type);
	}
	IType[] superinterfaces = (IType[])this.typeToSuperInterfaces.remove
(type);
	if (superinterfaces != null) {
		for (int i = 0, length = superinterfaces.length; i &lt; length; 
i++) {
			IType superinterface = superinterfaces[i];
			TypeVector types = (TypeVector)this.typeToSubtypes.get
(superinterface);
			if (types != null) types.remove(type);
		}
	}
}


Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19639" />
    <CreationDate amount="2002-06-07 14:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Icons on tollbar not retaining locked positions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>In F2, I arranged my toolbar and locked it.  However when I shutdown and restart
eclipse all my icons are mushed to the left so that an action set that has more
than one button in it shows the first button and a &gt;&gt; arrom for the rest.

I have F2 running on Win2k with JDK 1.4 with the following additional plugins on:

Jalopy
Solareclipse
Genuitec Weblogic
sourceforge.net/projects/eclipse-ccase
Binyan, can you include a bitmap of what your coolbar looks like before you 
exit and what it looks like when you restart? 
Unable to reproduce this behavior.

Note that coolbar layout is per perspective.  If you rearrange the coolbar for 
one perspective, it does not apply to other perspectives.  Also note that the 
coolbar layout is remembered only as long as the perspective is opened.  Once a 
perspective is closed, the coolbar layout will go back to its default.

Also note that in F3, the default coolbar layout will automatically wrap items 
so that all cool items are completely visible.  And you can automatically wrap 
a coolbar by using the Reset Toolbar Layout option.</WithStack>
    <WithOutStack>In F2, I arranged my toolbar and locked it.  However when I shutdown and restart
eclipse all my icons are mushed to the left so that an action set that has more
than one button in it shows the first button and a &gt;&gt; arrom for the rest.

I have F2 running on Win2k with JDK 1.4 with the following additional plugins on:

Jalopy
Solareclipse
Genuitec Weblogic
sourceforge.net/projects/eclipse-ccase
Binyan, can you include a bitmap of what your coolbar looks like before you 
exit and what it looks like when you restart? 
Unable to reproduce this behavior.

Note that coolbar layout is per perspective.  If you rearrange the coolbar for 
one perspective, it does not apply to other perspectives.  Also note that the 
coolbar layout is remembered only as long as the perspective is opened.  Once a 
perspective is closed, the coolbar layout will go back to its default.

Also note that in F3, the default coolbar layout will automatically wrap items 
so that all cool items are completely visible.  And you can automatically wrap 
a coolbar by using the Reset Toolbar Layout option.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19640" />
    <CreationDate amount="2002-06-07 14:34:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Missing message key</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) There is no such key</Line>
          <Line />
          <Line>2) In the particular case, it is a failure in java.io.File.mkdirs().  This</Line>
          <Line>doesn't necessarily mean it was called on an existing file.  We should change</Line>
          <Line>this to use the message key "localstore.couldNotCreateFolder", which more</Line>
          <Line>accurately reflects the error.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020602 (F2)

BlobStore.addBlob(...) there is a reference to the message catalog key 
"fileOverFolder".

1) There is no such key

2) In the particular case, it is a failure in java.io.File.mkdirs().  This 
doesn't necessarily mean it was called on an existing file.  We should change 
this to use the message key "localstore.couldNotCreateFolder", which more 
accurately reflects the error.

This can happen on setting file contents when the disk is full.  It tries to add 
the old file to the local history, and it fails to create the local history 
folder with this error.
Fix for 2.0.

I have a fix candidate for this.
Fix released.  Verified by DJH.</WithStack>
    <WithOutStack>Build 20020602 (F2)

BlobStore.addBlob(...) there is a reference to the message catalog key 
"fileOverFolder".

1) There is no such key

2) In the particular case, it is a failure in java.io.File.mkdirs().  This 
doesn't necessarily mean it was called on an existing file.  We should change 
this to use the message key "localstore.couldNotCreateFolder", which more 
accurately reflects the error.

This can happen on setting file contents when the disk is full.  It tries to add 
the old file to the local history, and it fails to create the local history 
folder with this error.
Fix for 2.0.

I have a fix candidate for this.
Fix released.  Verified by DJH.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19641" />
    <CreationDate amount="2002-06-07 14:44:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[TM] Site explorer view keeps vanishing when right-clicked upon if it is in popup mode.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Steps to reproduce:

Start Eclipse.
Open the Site explorer view.
Make it into a popup.
Activate the view (i.e. pop it up).
Right-click inside the blank area in the left pane and then move the mouse
pointer outside the bounds of the context menu.

Expected bahavior: none.

Actual behavior: The view pops back to the perspective bar and out of sight.
After the 1st time I tried this, it would not pop-away until I actually clicked
on the left pane after conjuring up the context menu.
I've seen this on windows XP as well.
This bug has not been touched in 2 years. Closing as WONTFIX. If you feel this 
bug is important, feel free to reopen it.</WithStack>
    <WithOutStack>Steps to reproduce:

Start Eclipse.
Open the Site explorer view.
Make it into a popup.
Activate the view (i.e. pop it up).
Right-click inside the blank area in the left pane and then move the mouse
pointer outside the bounds of the context menu.

Expected bahavior: none.

Actual behavior: The view pops back to the perspective bar and out of sight.
After the 1st time I tried this, it would not pop-away until I actually clicked
on the left pane after conjuring up the context menu.
I've seen this on windows XP as well.
This bug has not been touched in 2 years. Closing as WONTFIX. If you feel this 
bug is important, feel free to reopen it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19642" />
    <CreationDate amount="2002-06-07 14:52:00 -0400" />
    <DupId amount="18644" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Saving preferences does not work always</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When saving the preferences of a plugin, the method Plugin.savePluginPreferences
does not save the preferences if the directory does not exist in the workspace
meta data. The SafeFileOutputStream will just throw an exception in that case
which is ignored. 

Eclipse Freeze 2 (2002-06-02)


*** This bug has been marked as a duplicate of 18644 ***</WithStack>
    <WithOutStack>When saving the preferences of a plugin, the method Plugin.savePluginPreferences
does not save the preferences if the directory does not exist in the workspace
meta data. The SafeFileOutputStream will just throw an exception in that case
which is ignored. 

Eclipse Freeze 2 (2002-06-02)


*** This bug has been marked as a duplicate of 18644 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19643" />
    <CreationDate amount="2002-06-07 14:53:00 -0400" />
    <DupId amount="18629" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Error dialog for invalid WebDAV site freezes entire IDE.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Steps to reproduce:

Create an invalid WebDAV site in the Site explorer (e.g. bad URL).
Click on the site in the left pane.
An error dialog appears, after which the IDE becomes completely &amp; utterly
unresponsive. In fact, under Gnome, the panel &amp; window manager (Sawfish, in this
case) becomes unresponsive as well, until Eclipse is terminated by killing the
process. 

I replicated this twice on my machine &amp; don't feel like trying it again.
Moving to SWT.
Suspect this is the same as 18629. Boris to verify.


*** This bug has been marked as a duplicate of 18629 ***</WithStack>
    <WithOutStack>Steps to reproduce:

Create an invalid WebDAV site in the Site explorer (e.g. bad URL).
Click on the site in the left pane.
An error dialog appears, after which the IDE becomes completely &amp; utterly
unresponsive. In fact, under Gnome, the panel &amp; window manager (Sawfish, in this
case) becomes unresponsive as well, until Eclipse is terminated by killing the
process. 

I replicated this twice on my machine &amp; don't feel like trying it again.
Moving to SWT.
Suspect this is the same as 18629. Boris to verify.


*** This bug has been marked as a duplicate of 18629 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19644" />
    <CreationDate amount="2002-06-07 14:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>NullMenuManager NullToolBarManager return null for getOverrides</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="127" end="469" />
        <code>new IContributionManagerOverrides() {
   public Boolean getEnabled(IContributionItem item) {
	return null;
   }
   public Integer getAccelerator(IContributionItem item) {
	return null;
   }
   public String getAcceleratorText(IContributionItem item) {
	return null;
   }
   public String getText(IContributionItem item) {
	return null;
   }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20020606

The spec for IContributionManager.getOverrides does not allow null as a return 
value

return the following instead

new IContributionManagerOverrides() {
   public Boolean getEnabled(IContributionItem item) {
	return null;
   }
   public Integer getAccelerator(IContributionItem item) {
	return null;
   }
   public String getAcceleratorText(IContributionItem item) {
	return null;
   }
   public String getText(IContributionItem item) {
	return null;
   }
};
Ack
Implemented.
Verified in F3</WithStack>
    <WithOutStack>20020606

The spec for IContributionManager.getOverrides does not allow null as a return 
value

return the following instead

new IContributionManagerOverrides() {
   public Boolean getEnabled(IContributionItem item) {
	return null;
   }
   public Integer getAccelerator(IContributionItem item) {
	return null;
   }
   public String getAcceleratorText(IContributionItem item) {
	return null;
   }
   public String getText(IContributionItem item) {
	return null;
   }
};
Ack
Implemented.
Verified in F3</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19645" />
    <CreationDate amount="2002-06-07 14:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cannot open a editor on a class file that has a corresponding java file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="15">
        <Lines>
          <Line>1) Create a project</Line>
          <Line>2) Create a class</Line>
          <Line>3) Switch to the resources view and double click on the .class file</Line>
          <Line>4) You will get an error that the editor failed to open due to an invalid</Line>
          <Line>classpath for the file.</Line>
          <Line>investigate, but not critical unless there is a deeper problem behind this</Line>
          <Line>(new) behaviour.</Line>
          <Line>Additional bug details: this behaviour exists due to separation of build and</Line>
          <Line>source paths.  the classpaths stored for the project are all JAR</Line>
          <Line>libraries/paths, and source paths.  Elements in the build path do not come up</Line>
          <Line>as part of the classpath (if the build path is separate from the source path</Line>
          <Line>(s)).  This affects all class file editors and plugins that depend on finding</Line>
          <Line>details about certain class files (has caused problems in junit test generator</Line>
          <Line>plugins, jadeclipse, etc.)</Line>
          <Line>works for me in R3.1</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build 20020607

If you double click on a class file that has a corresponding java file you will
get an error dialog.

STEPS
1) Create a project
2) Create a class
3) Switch to the resources view and double click on the .class file
4) You will get an error that the editor failed to open due to an invalid
classpath for the file.
investigate, but not critical unless there is a deeper problem behind this 
(new) behaviour.
Additional bug details: this behaviour exists due to separation of build and 
source paths.  the classpaths stored for the project are all JAR 
libraries/paths, and source paths.  Elements in the build path do not come up 
as part of the classpath (if the build path is separate from the source path
(s)).  This affects all class file editors and plugins that depend on finding 
details about certain class files (has caused problems in junit test generator 
plugins, jadeclipse, etc.)
works for me in R3.1</WithStack>
    <WithOutStack>Build 20020607

If you double click on a class file that has a corresponding java file you will
get an error dialog.

STEPS
1) Create a project
2) Create a class
3) Switch to the resources view and double click on the .class file
4) You will get an error that the editor failed to open due to an invalid
classpath for the file.
investigate, but not critical unless there is a deeper problem behind this 
(new) behaviour.
Additional bug details: this behaviour exists due to separation of build and 
source paths.  the classpaths stored for the project are all JAR 
libraries/paths, and source paths.  Elements in the build path do not come up 
as part of the classpath (if the build path is separate from the source path
(s)).  This affects all class file editors and plugins that depend on finding 
details about certain class files (has caused problems in junit test generator 
plugins, jadeclipse, etc.)
works for me in R3.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19646" />
    <CreationDate amount="2002-06-07 15:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Doc" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>swt main page: wrong AWT expansion</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- Help -&gt; Help Contents</Line>
          <Line>- go to Platform Plug-in Developer Guide -&gt; Programmer's Guide -&gt; Standard</Line>
          <Line>Widget Toolkit page</Line>
          <Line>- in the Portability and Platform Integration section, AWT is expanded</Line>
          <Line>to "Advanced Widget Toolkit", but according to Sun: "AWT stands for Abstract</Line>
          <Line>Window Toolkit"</Line>
          <Line>duplicate</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>F2 integration build 0607

- Help -&gt; Help Contents
- go to Platform Plug-in Developer Guide -&gt; Programmer's Guide -&gt; Standard 
Widget Toolkit page
- in the Portability and Platform Integration section, AWT is expanded 
to "Advanced Widget Toolkit", but according to Sun: "AWT stands for Abstract 
Window Toolkit"
duplicate</WithStack>
    <WithOutStack>F2 integration build 0607

- Help -&gt; Help Contents
- go to Platform Plug-in Developer Guide -&gt; Programmer's Guide -&gt; Standard 
Widget Toolkit page
- in the Portability and Platform Integration section, AWT is expanded 
to "Advanced Widget Toolkit", but according to Sun: "AWT stands for Abstract 
Window Toolkit"
duplicate</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19647" />
    <CreationDate amount="2002-06-07 15:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Reminder to implement SHADOW_NONE on Label</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>20020606

SHADOW_NONE is not implemented for all Labels. It should at least be 
implemented for GTk.  (It looks like it was implemented in GTk1, but was not 
done yet in GTk).
Should look at other platforms also.
Post R2.0.

I don't know how this came back to my inbox of PRs.
Closing for lack of activity. Please re-open if we ever intend to fix this.</WithStack>
    <WithOutStack>20020606

SHADOW_NONE is not implemented for all Labels. It should at least be 
implemented for GTk.  (It looks like it was implemented in GTk1, but was not 
done yet in GTk).
Should look at other platforms also.
Post R2.0.

I don't know how this came back to my inbox of PRs.
Closing for lack of activity. Please re-open if we ever intend to fix this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19648" />
    <CreationDate amount="2002-06-07 15:15:00 -0400" />
    <DupId amount="13730" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Sync view does not udpate properly when change committed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- made a change to a file (StatusLine.java)</Line>
          <Line>- synced on just the file</Line>
          <Line>- looked through the changes, causing the Java Structure Compare pane to appear</Line>
          <Line>- committed the change</Line>
          <Line>- the Structure Compare pane was cleared, but Java Structure Compare and Java</Line>
          <Line>Source Compare were still showing their previous contents</Line>
          <Line>Compare bug. Fixed tomorrow morning.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020607

- made a change to a file (StatusLine.java)
- synced on just the file
- looked through the changes, causing the Java Structure Compare pane to appear
- committed the change
- the Structure Compare pane was cleared, but Java Structure Compare and Java 
Source Compare were still showing their previous contents
Compare bug. Fixed tomorrow morning.

*** This bug has been marked as a duplicate of 13730 ***</WithStack>
    <WithOutStack>Build 20020607

- made a change to a file (StatusLine.java)
- synced on just the file
- looked through the changes, causing the Java Structure Compare pane to appear
- committed the change
- the Structure Compare pane was cleared, but Java Structure Compare and Java 
Source Compare were still showing their previous contents
Compare bug. Fixed tomorrow morning.

*** This bug has been marked as a duplicate of 13730 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19649" />
    <CreationDate amount="2002-06-07 15:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Windows 98" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Breakpoint marker missing walkback - not sure when it occurred...</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331231298">
        <Exception>org.eclipse.debug.core.DebugException</Exception>
        <Reason>Breakpoint does not have an associated 
marker.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.debug.core.model.Breakpoint.ensureMarker(Breakpoint.java:251)</Frame>
          <Frame depth="1">org.eclipse.debug.core.model.Breakpoint$2.run(Breakpoint.java:169)</Frame>
          <Frame depth="2">org.eclipse.core.internal.resources.Workspace.run(Workspace.java(Compiled Code))</Frame>
          <Frame depth="3">org.eclipse.debug.core.model.Breakpoint.setAttribute(Breakpoint.java:173)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.decrementInstallCount(JavaBreakpoint.java:691)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.deregisterRequest(JavaBreakpoint.java:205)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.removeFromTarget(JavaBreakpoint.java:611)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.removeFromTarget(JavaLineBreakpoint.java:133)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.removeAllBreakpoints(JDIDebugTarget.java:1324)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.cleanup(JDIDebugTarget.java:1289)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.terminated(JDIDebugTarget.java:1256)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.handleVMDeath(JDIDebugTarget.java:920)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch(EventDispatcher.java:135)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.debug.core.EventDispatcher.run(EventDispatcher.java:202)</Frame>
          <Frame depth="14">java.lang.Thread.run(Thread.java:498)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 20020606

The walkback is below.  Looks like it might have occurred while I was importing 
plugins.  Was working in build prior to 20020606, then upgraded to the new 
build, reusing my existing workspace.  I had breakpoints set in the workspace.

!SESSION Jun 07, 2002 04:39:26.880 ---------------------------------------------
java.fullversion=J2RE 1.3.0 IBM build cn130-20010502 (JIT enabled: jitc)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -data c:\eclipse-ws\ui-
ws -install file:C:/eclipse/
!ENTRY org.eclipse.jdt.debug 4 120 Jun 07, 2002 04:39:26.940
!MESSAGE Internal error logged from JDI Debug: 
!STACK 1
org.eclipse.debug.core.DebugException: Breakpoint does not have an associated 
marker.
	at org.eclipse.debug.core.model.Breakpoint.ensureMarker
(Breakpoint.java:251)
	at org.eclipse.debug.core.model.Breakpoint$2.run(Breakpoint.java:169)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java
(Compiled Code))
	at org.eclipse.debug.core.model.Breakpoint.setAttribute
(Breakpoint.java:173)
	at 
org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.decrementInstallC
ount(JavaBreakpoint.java:691)
	at 
org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.deregisterRequest
(JavaBreakpoint.java:205)
	at 
org.eclipse.jdt.internal.debug.core.breakpoints.JavaBreakpoint.removeFromTarget
(JavaBreakpoint.java:611)
	at 
org.eclipse.jdt.internal.debug.core.breakpoints.JavaLineBreakpoint.removeFromTar
get(JavaLineBreakpoint.java:133)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.removeAllBreakpoints
(JDIDebugTarget.java:1324)
	at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.cleanup
(JDIDebugTarget.java:1289)
	at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.terminated
(JDIDebugTarget.java:1256)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.handleVMDeath
(JDIDebugTarget.java:920)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.dispatch
(EventDispatcher.java:135)
	at org.eclipse.jdt.internal.debug.core.EventDispatcher.run
(EventDispatcher.java:202)
	at java.lang.Thread.run(Thread.java:498)
!ENTRY org.eclipse.debug.core 4 5012 Jun 07, 2002 04:39:29.20
!MESSAGE Breakpoint does not have an associated marker.
!SESSION Jun 07, 2002 14:17:17.770 ---------------------------------------------
java.fullversion=J2RE 1.3.0 IBM build cn130-20010502 (JIT enabled: jitc)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -data c:\eclipse-ws\ui-
ws -install file:C:/eclipse/
!ENTRY org.eclipse.pde.ui 4 0 Jun 07, 2002 14:17:17.830
!MESSAGE Problems detected while importing plug-ins
!SUBENTRY 1 org.eclipse.core.resources 4 273 Jun 07, 2002 14:17:17.830
!MESSAGE Could not delete: /org.eclipse.help.ui.win32.
!SUBENTRY 1 org.eclipse.core.resources 4 273 Jun 07, 2002 14:17:17.830
!MESSAGE Could not delete: /org.eclipse.update.ui.win32.
Deferred. Not clear how this can happen - it looks like an unlikely timing 
problem where the breakpoint was removed at the same time a VM was shutting 
down. 

Closing, unless reproduceable. The exception is handled.
marking as won't fix.</WithStack>
    <WithOutStack>Build 20020606

The walkback is below.  Looks like it might have occurred while I was importing 
plugins.  Was working in build prior to 20020606, then upgraded to the new 
build, reusing my existing workspace.  I had breakpoints set in the workspace.

!SESSION Jun 07, 2002 04:39:26.880 ---------------------------------------------
java.fullversion=J2RE 1.3.0 IBM build cn130-20010502 (JIT enabled: jitc)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -data c:\eclipse-ws\ui-
ws -install file:C:/eclipse/
!ENTRY org.eclipse.jdt.debug 4 120 Jun 07, 2002 04:39:26.940
!MESSAGE Internal error logged from JDI Debug: 
!STACK 1

!ENTRY org.eclipse.debug.core 4 5012 Jun 07, 2002 04:39:29.20
!MESSAGE Breakpoint does not have an associated marker.
!SESSION Jun 07, 2002 14:17:17.770 ---------------------------------------------
java.fullversion=J2RE 1.3.0 IBM build cn130-20010502 (JIT enabled: jitc)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -data c:\eclipse-ws\ui-
ws -install file:C:/eclipse/
!ENTRY org.eclipse.pde.ui 4 0 Jun 07, 2002 14:17:17.830
!MESSAGE Problems detected while importing plug-ins
!SUBENTRY 1 org.eclipse.core.resources 4 273 Jun 07, 2002 14:17:17.830
!MESSAGE Could not delete: /org.eclipse.help.ui.win32.
!SUBENTRY 1 org.eclipse.core.resources 4 273 Jun 07, 2002 14:17:17.830
!MESSAGE Could not delete: /org.eclipse.update.ui.win32.
Deferred. Not clear how this can happen - it looks like an unlikely timing 
problem where the breakpoint was removed at the same time a VM was shutting 
down. 

Closing, unless reproduceable. The exception is handled.
marking as won't fix.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19650" />
    <CreationDate amount="2002-06-07 15:28:00 -0400" />
    <DupId amount="19979" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Prompting for password when not required</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Sometimes (always?) when creating a repo location, even after for sure for sure 
typing in my password correctly, when validating it asks me for it again.
I had that happen a couple of times earlier in the week but I always chalked it
up to mistyping my password. It doesn't always happen for me.
Odd but liveable.
Reopening


*** This bug has been marked as a duplicate of 19979 ***</WithStack>
    <WithOutStack>Sometimes (always?) when creating a repo location, even after for sure for sure 
typing in my password correctly, when validating it asks me for it again.
I had that happen a couple of times earlier in the week but I always chalked it
up to mistyping my password. It doesn't always happen for me.
Odd but liveable.
Reopening


*** This bug has been marked as a duplicate of 19979 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19651" />
    <CreationDate amount="2002-06-07 15:34:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Team menu disapear from Hierarchy and Packages view.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="304" end="407" />
        <code>public class TestClass {
  static class InnerClass extends Runnable {
  	public void run() {
  	}
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="26">
        <Lines>
          <Line>1) Open eclipse with an new workspace.</Line>
          <Line>2) Open java perspective and close resouce perspective.</Line>
          <Line>3) Create a Java Project "TestProject"</Line>
          <Line>4) Create a Java class "TestClass"</Line>
          <Line>5) Past the following code in the TestClass and save it.</Line>
          <Line>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</Line>
          <Line />
          <Line>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</Line>
          <Line />
          <Line>6)Change preference-&gt;Workbench-&gt;Perspective to open perspective in new window.</Line>
          <Line>7)Change preference-&gt;Java to "Open a new Type Hierarchy Perspective"</Line>
          <Line>8)Exit workbench and restart it.</Line>
          <Line />
          <Line>9) Select the TestClass (the class not the unit) in the package view and popup</Line>
          <Line>menu</Line>
          <Line>-&gt; The team menu is there (disabled but it does not matter).</Line>
          <Line>10 Exit workbench and restart it. (Again)</Line>
          <Line />
          <Line>11) Select the word InnerClass in the text editor and press F4</Line>
          <Line>12) Popup menu on the new hierarchy view</Line>
          <Line>-&gt; Team menu is not there but that is "OK" since it is a inner class.</Line>
          <Line>13) Select the word TestClass in the new text editor and press F4</Line>
          <Line>-&gt; The team menu is not there but it should since it is not a inner class.</Line>
          <Line>14) You should have 3 opened windows. Close the two new windows.</Line>
          <Line>15) Select the TestClass in the package view and popup menu</Line>
          <Line>-&gt; The team menu is not there anymore. It was there in the step "9".</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build F2

Steps:
1) Open eclipse with an new workspace.
2) Open java perspective and close resouce perspective.
3) Create a Java Project "TestProject"
4) Create a Java class "TestClass"
5) Past the following code in the TestClass and save it.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public class TestClass {
  static class InnerClass extends Runnable {
  	public void run() {
  	}
  }
}
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

6)Change preference-&gt;Workbench-&gt;Perspective to open perspective in new window.
7)Change preference-&gt;Java to "Open a new Type Hierarchy Perspective"
8)Exit workbench and restart it.

9) Select the TestClass (the class not the unit) in the package view and popup 
menu
  -&gt; The team menu is there (disabled but it does not matter).
10 Exit workbench and restart it. (Again)

11) Select the word InnerClass in the text editor and press F4
12) Popup menu on the new hierarchy view
  -&gt; Team menu is not there but that is "OK" since it is a inner class.
13) Select the word TestClass in the new text editor and press F4
  -&gt; The team menu is not there but it should since it is not a inner class.
14) You should have 3 opened windows. Close the two new windows.
15) Select the TestClass in the package view and popup menu
  -&gt; The team menu is not there anymore. It was there in the step "9".

Note: TestClass.java is not in any CVS repository but I first saw the problem 
with a file managed by CVS.
Fixed ObjectContributorManager to keep the object and adaptable list separate 
in the cache instead of combining them into one list.

Designed reviewed by Nick
Code checked by Tod
*** Bug 20864 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Build F2

Steps:
1) Open eclipse with an new workspace.
2) Open java perspective and close resouce perspective.
3) Create a Java Project "TestProject"
4) Create a Java class "TestClass"
5) Past the following code in the TestClass and save it.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public class TestClass {
  static class InnerClass extends Runnable {
  	public void run() {
  	}
  }
}
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

6)Change preference-&gt;Workbench-&gt;Perspective to open perspective in new window.
7)Change preference-&gt;Java to "Open a new Type Hierarchy Perspective"
8)Exit workbench and restart it.

9) Select the TestClass (the class not the unit) in the package view and popup 
menu
  -&gt; The team menu is there (disabled but it does not matter).
10 Exit workbench and restart it. (Again)

11) Select the word InnerClass in the text editor and press F4
12) Popup menu on the new hierarchy view
  -&gt; Team menu is not there but that is "OK" since it is a inner class.
13) Select the word TestClass in the new text editor and press F4
  -&gt; The team menu is not there but it should since it is not a inner class.
14) You should have 3 opened windows. Close the two new windows.
15) Select the TestClass in the package view and popup menu
  -&gt; The team menu is not there anymore. It was there in the step "9".

Note: TestClass.java is not in any CVS repository but I first saw the problem 
with a file managed by CVS.
Fixed ObjectContributorManager to keep the object and adaptable list separate 
in the cache instead of combining them into one list.

Designed reviewed by Nick
Code checked by Tod
*** Bug 20864 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19652" />
    <CreationDate amount="2002-06-07 15:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Resizing columns in properties view doesn't update properly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- Install the examples</Line>
          <Line>- Create a file called 'test.usr'</Line>
          <Line>- Open the Properties view</Line>
          <Line>- In the outline view, click on 'richard'</Line>
          <Line>- In the properties view, click on 'x789' (the phone number)</Line>
          <Line>- Resize the "Property" column</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020607
Redhat 7.2, KDE2.2-10
Motif

Related to PR #19069

- Install the examples
- Create a file called 'test.usr'
- Open the Properties view
- In the outline view, click on 'richard'
- In the properties view, click on 'x789' (the phone number)
- Resize the "Property" column

Notice there is a floating box containing 'x789'. This happens for combo boxes 
as well. Whenever you resize the columns it just leaves the selected field you 
were editing where it was, and you can see the original field underneath as you 
slide the column over.
Oops, this happens in GTK2 as well.
Please debug further: Is this a bug in the example, or in the property viewer, 
or in SWT.

This works for me using 3.1RC1/GTK.
Closing as this seems to be fixed in 3.1.</WithStack>
    <WithOutStack>Build 20020607
Redhat 7.2, KDE2.2-10
Motif

Related to PR #19069

- Install the examples
- Create a file called 'test.usr'
- Open the Properties view
- In the outline view, click on 'richard'
- In the properties view, click on 'x789' (the phone number)
- Resize the "Property" column

Notice there is a floating box containing 'x789'. This happens for combo boxes 
as well. Whenever you resize the columns it just leaves the selected field you 
were editing where it was, and you can see the original field underneath as you 
slide the column over.
Oops, this happens in GTK2 as well.
Please debug further: Is this a bug in the example, or in the property viewer, 
or in SWT.

This works for me using 3.1RC1/GTK.
Closing as this seems to be fixed in 3.1.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19653" />
    <CreationDate amount="2002-06-07 15:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Crash at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1222)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Eclipse crashed on me as I was experimenting with the C-F6 / C-S-F6 keystrokes.
 I'll try to attach a log in a second.
Created attachment 1316
Stack trace from crash
Do you have repeatable steps to cause this?

Nope, sorry.
There is another bug report about random, unfrequent, non-reproducible crashes 
inside the native read-and-dispatch.  I don't really know what to do about it, 
as such crashes never happened here.

Might as well close this with wontfix?
No.
We *most certainly* need to fix this.  It is definitely against our standards 
to ship a product with random/unexplainable segfaults.  I just meant that at 
this moment, I don't know what may be happening.
Crashes of this sort are generally hard to debug, even more so when they only 
happen on certain machines, and ones that are not ours.  I would like to gather 
more details about your setup.  Which GTK2? (.0.0? .0.2?)  Is it the one from 
gtk.org or from ximian or redhat?  Which version of XFree86?  Which Linux 
distro?  Are you using any theme, or just bare gtk?  Anything suspicious 
elsewhere in Eclipse or gtk?

Ok. :)  I just figured that this bug report wasn't that good, and the bug will
probably show up again sooner or later.

I'm using a debian sid setup, so my packages are the latest ones listed on
debian's website:

libgtk2.0-0_2.0.3-1_i386.deb, default theme
xserver-xfree86_4.1.0-17_i386.deb

Is there anything else that eclipse depends on that I should check?
Agreed that GPs should be fixed but without reproducible steps there isn't much 
to investigate.

Closing as WORKSFORME.  If this happens again, please reopen.</WithStack>
    <WithOutStack>Eclipse crashed on me as I was experimenting with the C-F6 / C-S-F6 keystrokes.
 I'll try to attach a log in a second.
Created attachment 1316
Stack trace from crash
Do you have repeatable steps to cause this?

Nope, sorry.
There is another bug report about random, unfrequent, non-reproducible crashes 
inside the native read-and-dispatch.  I don't really know what to do about it, 
as such crashes never happened here.

Might as well close this with wontfix?
No.
We *most certainly* need to fix this.  It is definitely against our standards 
to ship a product with random/unexplainable segfaults.  I just meant that at 
this moment, I don't know what may be happening.
Crashes of this sort are generally hard to debug, even more so when they only 
happen on certain machines, and ones that are not ours.  I would like to gather 
more details about your setup.  Which GTK2? (.0.0? .0.2?)  Is it the one from 
gtk.org or from ximian or redhat?  Which version of XFree86?  Which Linux 
distro?  Are you using any theme, or just bare gtk?  Anything suspicious 
elsewhere in Eclipse or gtk?

Ok. :)  I just figured that this bug report wasn't that good, and the bug will
probably show up again sooner or later.

I'm using a debian sid setup, so my packages are the latest ones listed on
debian's website:

libgtk2.0-0_2.0.3-1_i386.deb, default theme
xserver-xfree86_4.1.0-17_i386.deb

Is there anything else that eclipse depends on that I should check?
Agreed that GPs should be fixed but without reproducible steps there isn't much 
to investigate.

Closing as WORKSFORME.  If this happens again, please reopen.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19654" />
    <CreationDate amount="2002-06-07 15:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Coolbar - resizing window can add rows to coolbars</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1) Start Eclipse.</Line>
          <Line>2) Decrease the width of the workbench well past when the menu bar begins to</Line>
          <Line>wrap. This will cause the coolbar to wrap as well.</Line>
          <Line>3) Return the workbench to its original width. Notice that the coolbar does not</Line>
          <Line>go back to being on one row.</Line>
          <Line>It looks like wrapping because of window size changes isn't distinguished from</Line>
          <Line>explicitely positioning the coolbar on multiple lines. Unfortunate, but not</Line>
          <Line>something which we will fix for R2.0.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build F2 - Linux Motif

It is possible to break up the coolbar so that each set of items gets put onto
its own row, by resizing the window. The coolbar gets changed regardless of
whether the coolbar is locked.

1) Start Eclipse.
2) Decrease the width of the workbench well past when the menu bar begins to
wrap. This will cause the coolbar to wrap as well.
3) Return the workbench to its original width. Notice that the coolbar does not
go back to being on one row.
It looks like wrapping because of window size changes isn't distinguished from 
explicitely positioning the coolbar on multiple lines. Unfortunate, but not 
something which we will fix for R2.0.

*** Bug 49075 has been marked as a duplicate of this bug. ***
Fixed &gt; HEAD 20040304</WithStack>
    <WithOutStack>Build F2 - Linux Motif

It is possible to break up the coolbar so that each set of items gets put onto
its own row, by resizing the window. The coolbar gets changed regardless of
whether the coolbar is locked.

1) Start Eclipse.
2) Decrease the width of the workbench well past when the menu bar begins to
wrap. This will cause the coolbar to wrap as well.
3) Return the workbench to its original width. Notice that the coolbar does not
go back to being on one row.
It looks like wrapping because of window size changes isn't distinguished from 
explicitely positioning the coolbar on multiple lines. Unfortunate, but not 
something which we will fix for R2.0.

*** Bug 49075 has been marked as a duplicate of this bug. ***
Fixed &gt; HEAD 20040304</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19655" />
    <CreationDate amount="2002-06-07 15:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>GTK widgets are grossly large</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>The GTK widgets are enormous. This is a big problem for the launch 
configuration dialog, because it has a lot of widgets. I run my screen at 
1600x1200, and the dialog barely fits on my screen. At lower resolutions, the 
dialog will not fit.

The launch config dialog is coded to expand to the minimum size required to 
fit all widgets. I'll attach a screenshot of the dialog after I shrunk it 
down, closed it, and then reopened it. At this point, it is as small as 
possible to fit all the widgets.
Created attachment 1317
config.png - A screenshot of the launch config dialog
Of course, the obvious answer is "the widgets are the size they are". I'm not 
particularly happy with the default appearance of GTK, but the whole point is 
that it really is the default appearance of GTK. I'd like us to investigate 
the possibility of getting rid of the 3d border around buttons, which could 
potentially make things a bit smaller, but probably not a lot.

Boris, you should make sure that for the widgets in that layout, there aren't 
any places where we are answering something which doesn't match the platform.

The widgets are *not* just the size they are.
The widgets are the size the user prefers them to be in all applications.  If 
you set your theme (you may also call it "skin") to draw a large 3d border 
around your buttons, it means all apps will use it, and it does not make sense 
for Eclipse to be the only app to fight the user preference.  If you don't like 
3d borders, use a flat theme.
Looking at your screenshot, I don't see how the widgets can be any smaller 
given the preferred fontsize.  I also note that the fonts are AA, which we 
currently don't handle very well (in GTK2, this is changed through the USE_XFT 
environment var).
I don't see how the font size matters here. The text isn't coming close to 
filling any of the widgets.
Boris, I think you said they are "not just the size they are" and then went on 
to heatedly agree with the point I was trying to make. 

All I wanted you to do was make sure that we weren't accidentally getting any 
extra space inserted when we shouldn't be.

Also, the argument about whether or not we should use 3d borders is only half 
of the story. If the *design* of the layout of Eclipse is such that it looks 
like poo with 3d borders, but looks elegant and functional without them, and 
the UI team *asks* for them to be flat, then that is what we should do. There 
are *two* things driving our work: the look of the platform *and* the look of 
Eclipse.

This isn't a generic problem with GtkWidgets, as far as I can tell. It seems to
only affect GtkButtons. It looks to me like Eclipse/SWT/Something is hardcoding
a minimuum button width (which is rather large) since I can't find any buttons
below a certain (very wide) size. No other GTK2 programs on my system have
buttons nearly this large (at least, not unless the text pushes them to be this
wide).
The other thing to consider is whether or not the size is being set by Eclipse 
itself. If Eclipse sets the size of the button, then we have to honour it.

Also, since I suspect we actually ask the widget for its prefered size, it's 
possible that the other apps you are explicitely setting the size to be 
smaller.</WithStack>
    <WithOutStack>The GTK widgets are enormous. This is a big problem for the launch 
configuration dialog, because it has a lot of widgets. I run my screen at 
1600x1200, and the dialog barely fits on my screen. At lower resolutions, the 
dialog will not fit.

The launch config dialog is coded to expand to the minimum size required to 
fit all widgets. I'll attach a screenshot of the dialog after I shrunk it 
down, closed it, and then reopened it. At this point, it is as small as 
possible to fit all the widgets.
Created attachment 1317
config.png - A screenshot of the launch config dialog
Of course, the obvious answer is "the widgets are the size they are". I'm not 
particularly happy with the default appearance of GTK, but the whole point is 
that it really is the default appearance of GTK. I'd like us to investigate 
the possibility of getting rid of the 3d border around buttons, which could 
potentially make things a bit smaller, but probably not a lot.

Boris, you should make sure that for the widgets in that layout, there aren't 
any places where we are answering something which doesn't match the platform.

The widgets are *not* just the size they are.
The widgets are the size the user prefers them to be in all applications.  If 
you set your theme (you may also call it "skin") to draw a large 3d border 
around your buttons, it means all apps will use it, and it does not make sense 
for Eclipse to be the only app to fight the user preference.  If you don't like 
3d borders, use a flat theme.
Looking at your screenshot, I don't see how the widgets can be any smaller 
given the preferred fontsize.  I also note that the fonts are AA, which we 
currently don't handle very well (in GTK2, this is changed through the USE_XFT 
environment var).
I don't see how the font size matters here. The text isn't coming close to 
filling any of the widgets.
Boris, I think you said they are "not just the size they are" and then went on 
to heatedly agree with the point I was trying to make. 

All I wanted you to do was make sure that we weren't accidentally getting any 
extra space inserted when we shouldn't be.

Also, the argument about whether or not we should use 3d borders is only half 
of the story. If the *design* of the layout of Eclipse is such that it looks 
like poo with 3d borders, but looks elegant and functional without them, and 
the UI team *asks* for them to be flat, then that is what we should do. There 
are *two* things driving our work: the look of the platform *and* the look of 
Eclipse.

This isn't a generic problem with GtkWidgets, as far as I can tell. It seems to
only affect GtkButtons. It looks to me like Eclipse/SWT/Something is hardcoding
a minimuum button width (which is rather large) since I can't find any buttons
below a certain (very wide) size. No other GTK2 programs on my system have
buttons nearly this large (at least, not unless the text pushes them to be this
wide).
The other thing to consider is whether or not the size is being set by Eclipse 
itself. If Eclipse sets the size of the button, then we have to honour it.

Also, since I suspect we actually ask the widget for its prefered size, it's 
possible that the other apps you are explicitely setting the size to be 
smaller.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19656" />
    <CreationDate amount="2002-06-07 15:39:00 -0400" />
    <DupId amount="18994" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>Typo in template error message</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020602 (Freeze 2)

My disk was full, and I got the following error message:

"Error occured while writing templates"

"occurred" has two r's.


*** This bug has been marked as a duplicate of 18994 ***</WithStack>
    <WithOutStack>Build 20020602 (Freeze 2)

My disk was full, and I got the following error message:

"Error occured while writing templates"

"occurred" has two r's.


*** This bug has been marked as a duplicate of 18994 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19657" />
    <CreationDate amount="2002-06-07 15:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>CompilationUnitDocumentProvider.shutdown() doesn't fully disconnect elements</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build F1

CompilationUnitDocumentProvider.shutdown() has a loop in which it attempts to 
disconnect any connected elements.

This loop may be insufficient to fully disconnect the elements.

The connect() and disconnect() methods count, and disconnect() doesn't 
actually do anything until the number of disconnects == the number of connects.

I believe that the shutdown() code should disconnect each element until its 
count reaches 0 (or it's removed from the connectedElements list.
Note - I haven't encountered any problems because of this bug. I just noticed 
it while debugging another problem.
The observation is correct. Given the use case of JDT UI, this does not harm.
Post 2.0
Reopening for 2.1
Is this still an issue? In any case, lowering the severity since this hasn't come up in &gt;5 years.
No plans to change that code.</WithStack>
    <WithOutStack>Build F1

CompilationUnitDocumentProvider.shutdown() has a loop in which it attempts to 
disconnect any connected elements.

This loop may be insufficient to fully disconnect the elements.

The connect() and disconnect() methods count, and disconnect() doesn't 
actually do anything until the number of disconnects == the number of connects.

I believe that the shutdown() code should disconnect each element until its 
count reaches 0 (or it's removed from the connectedElements list.
Note - I haven't encountered any problems because of this bug. I just noticed 
it while debugging another problem.
The observation is correct. Given the use case of JDT UI, this does not harm.
Post 2.0
Reopening for 2.1
Is this still an issue? In any case, lowering the severity since this hasn't come up in &gt;5 years.
No plans to change that code.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19658" />
    <CreationDate amount="2002-06-07 15:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Auto-fill superclass in New Class Wizard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>A right-click on an existing class in Packages View allows for New&gt;Class..., 
and the containing package is properly auto-filled in the wizard. However, if 
the existing class is the one I want to subclass, I still have to select it -- 
it isn't auto-filled. I think the wizard should auto-fill the superclass field 
with the existing class. If this is not the best default behavior, perhaps an 
item could be added to the context menu for classes: "Create a new subclass..." 
that would bring up the wizard with the superclass field auto-filled.
If you want to fill the super class you have to select a type and not a 
compilation unit.</WithStack>
    <WithOutStack>A right-click on an existing class in Packages View allows for New&gt;Class..., 
and the containing package is properly auto-filled in the wizard. However, if 
the existing class is the one I want to subclass, I still have to select it -- 
it isn't auto-filled. I think the wizard should auto-fill the superclass field 
with the existing class. If this is not the best default behavior, perhaps an 
item could be added to the context menu for classes: "Create a new subclass..." 
that would bring up the wizard with the superclass field auto-filled.
If you want to fill the super class you have to select a type and not a 
compilation unit.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19659" />
    <CreationDate amount="2002-06-07 15:51:00 -0400" />
    <DupId amount="18393" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Orphaned hover help windows don't go away</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build F2

Several times since upgrading to F2 I've noticed JavaDoc hover help windows 
become 'orphaned'. The window seem to lose it's controller, becoming a first 
class, always on top, floating window.

To close the hover help window I need to click inside of it (where I get a 
text cursor!) and press ESC.


*** This bug has been marked as a duplicate of 18393 ***</WithStack>
    <WithOutStack>Build F2

Several times since upgrading to F2 I've noticed JavaDoc hover help windows 
become 'orphaned'. The window seem to lose it's controller, becoming a first 
class, always on top, floating window.

To close the hover help window I need to click inside of it (where I get a 
text cursor!) and press ESC.


*** This bug has been marked as a duplicate of 18393 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19660" />
    <CreationDate amount="2002-06-07 15:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Preference page does not expand to fit all widgets</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020607
Linux-GTK

The preference page dialog often does not expand enough to fully display 
all the widgets it contains. We've only been able to reproduce this problem 
on Linux-GTK, where it happens quite frequently. Just opening the 
preference page and clicking through on various pages, you're pretty much 
guaranteed to see the problem.

Since the platform UI code seems to work as expected on other platforms, it 
looks like either the GTK widget isn't growing as much as the UI is 
requesting or the widgets aren't reporting their true required size.
Created attachment 1319
prefs.png - A screenshot of the problem
Shell returns old size when getSize() is called right after
setSize().
Fixed &gt; 20020610.</WithStack>
    <WithOutStack>Build 20020607
Linux-GTK

The preference page dialog often does not expand enough to fully display 
all the widgets it contains. We've only been able to reproduce this problem 
on Linux-GTK, where it happens quite frequently. Just opening the 
preference page and clicking through on various pages, you're pretty much 
guaranteed to see the problem.

Since the platform UI code seems to work as expected on other platforms, it 
looks like either the GTK widget isn't growing as much as the UI is 
requesting or the widgets aren't reporting their true required size.
Created attachment 1319
prefs.png - A screenshot of the problem
Shell returns old size when getSize() is called right after
setSize().
Fixed &gt; 20020610.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19661" />
    <CreationDate amount="2002-06-07 15:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>StepEventImpl.EVENT_KIND is defined as int</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020607

The static field StepEventImpl.EVENT_KIND is defined as an integer. However, 
the event kinds are spec'ed to be bytes and the value is used as a byte 
everywhere.

The field definition should be changed to byte.
Done. Please verify.
Verified.</WithStack>
    <WithOutStack>Build 20020607

The static field StepEventImpl.EVENT_KIND is defined as an integer. However, 
the event kinds are spec'ed to be bytes and the value is used as a byte 
everywhere.

The field definition should be changed to byte.
Done. Please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19662" />
    <CreationDate amount="2002-06-07 15:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Help menu overwritten by ActiveX editor / editors not returning</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When I add a .doc file or .ppt file to the resource tree and dbl-clk to open I 
get the MS editor in the editor space - nice.

When I click on the help pull-down when one of these editors is active I only 
see MS Help - no Workbench options.  I have to click on some Workbench view or 
native editor to get the Workbench help menu options available.

If I click on the editor tabs to change between welcome.xml. my.ppt, and my.doc 
the editors look fine.

If I click on the resources in the resource tree and the active editor follows 
this selection - the image/content paints - but not the controls associated to 
the active editor.  These only come back if I select the editor tab.
Suspect this is a UI issue. VI to verify.

When you embed an Ole Document you get the help for the embedded Ole Document.  
For example, trying embedding an Excel spreadsheet in Word.

Ole Documents let the application insert menus in three places (File, Window, 
and Container) - Help is not one of these places.
This is just the way Ole works.  If Eclipse wants to show its help menus, it 
must add them to File, Window, or Container - none of which really make sense.

ActiveX editors become active when they get focus or when the tab gets 
selected.  This is required due to keyboard accessibility.</WithStack>
    <WithOutStack>When I add a .doc file or .ppt file to the resource tree and dbl-clk to open I 
get the MS editor in the editor space - nice.

When I click on the help pull-down when one of these editors is active I only 
see MS Help - no Workbench options.  I have to click on some Workbench view or 
native editor to get the Workbench help menu options available.

If I click on the editor tabs to change between welcome.xml. my.ppt, and my.doc 
the editors look fine.

If I click on the resources in the resource tree and the active editor follows 
this selection - the image/content paints - but not the controls associated to 
the active editor.  These only come back if I select the editor tab.
Suspect this is a UI issue. VI to verify.

When you embed an Ole Document you get the help for the embedded Ole Document.  
For example, trying embedding an Excel spreadsheet in Word.

Ole Documents let the application insert menus in three places (File, Window, 
and Container) - Help is not one of these places.
This is just the way Ole works.  If Eclipse wants to show its help menus, it 
must add them to File, Window, or Container - none of which really make sense.

ActiveX editors become active when they get focus or when the tab gets 
selected.  This is required due to keyboard accessibility.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19663" />
    <CreationDate amount="2002-06-07 16:15:00 -0400" />
    <DupId amount="7091" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Java|Compiler|Other|Filtered resources needs to be project/team specific</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The 'Java|Compiler|Other|Filtered resources' tab of the Preferences allows some
resource types to be filtered and not output to the build location as part of
the build. This is useful for things which need to be in revision control, but
not be output into the build (one example is TogetherJ metadata, *.df*).

This setting however needs to be project specific, not user specific. It's not
great for every team member to have to manually add these filters.

Best would probably be to have both project and user specific settings for this.
Defer
Reopening
Clearing resolution
All 'Java|Compiler' preferences needs to be project specific, at least 
'Classfile
Generation' and 'JDK Compliance', if you are developing for different 
platforms
(PC&lt;-&gt;embedded).
Along with per project settings.
Duplicate of bug 7091

*** This bug has been marked as a duplicate of 7091 ***
Solved in latest, still need UI to surface it.
I don't know why this bug is marked resolved or a duplicate of 7019, because 
neither seems correct in Eclipse 2.1.2.  I was logging in to report this same 
bug when I found this bug.

It is very important to us that various files not be copied into the bin 
directory, since they are not part of what we want to ship (they are "hidden" 
files related to the source control system).  Also, we have multiple "source 
folders" per project, each with the same Java package structure below it, so 
the duplicate-named files in them are producing the error "The resource is a 
duplicate and was not copied..." during a build.

It is also very important that the "filtered resources" field be saved into 
the ".project" file, not the user's workspace.  The team is sharing the project 
and classpath files via source control, and there is no good reason why 
filtered resources should just be per-user.  There are already numerous 
settings that unfortunately have to be manually set per user (like using spaces 
instead of tabs) but this one is particulary bad as it results in different 
users producing different builds from the same project files... it is illogical 
for it to be OK for one user to put certain files in a build but not for 
another user to do so -- it must be project-specific.

Please either reopen this or explain how it has been "resolved" because we are 
using 2.1.2 and it is clearly not fixed.  If you mean it is fixed in 3.0, we 
can't move to that yet.  (I doubt you mean it is fixed in 3.0 because the bug 
was closed 1.5 years ago, long before any 3.0 was around.)

Thanks.</WithStack>
    <WithOutStack>The 'Java|Compiler|Other|Filtered resources' tab of the Preferences allows some
resource types to be filtered and not output to the build location as part of
the build. This is useful for things which need to be in revision control, but
not be output into the build (one example is TogetherJ metadata, *.df*).

This setting however needs to be project specific, not user specific. It's not
great for every team member to have to manually add these filters.

Best would probably be to have both project and user specific settings for this.
Defer
Reopening
Clearing resolution
All 'Java|Compiler' preferences needs to be project specific, at least 
'Classfile
Generation' and 'JDK Compliance', if you are developing for different 
platforms
(PC&lt;-&gt;embedded).
Along with per project settings.
Duplicate of bug 7091

*** This bug has been marked as a duplicate of 7091 ***
Solved in latest, still need UI to surface it.
I don't know why this bug is marked resolved or a duplicate of 7019, because 
neither seems correct in Eclipse 2.1.2.  I was logging in to report this same 
bug when I found this bug.

It is very important to us that various files not be copied into the bin 
directory, since they are not part of what we want to ship (they are "hidden" 
files related to the source control system).  Also, we have multiple "source 
folders" per project, each with the same Java package structure below it, so 
the duplicate-named files in them are producing the error "The resource is a 
duplicate and was not copied..." during a build.

It is also very important that the "filtered resources" field be saved into 
the ".project" file, not the user's workspace.  The team is sharing the project 
and classpath files via source control, and there is no good reason why 
filtered resources should just be per-user.  There are already numerous 
settings that unfortunately have to be manually set per user (like using spaces 
instead of tabs) but this one is particulary bad as it results in different 
users producing different builds from the same project files... it is illogical 
for it to be OK for one user to put certain files in a build but not for 
another user to do so -- it must be project-specific.

Please either reopen this or explain how it has been "resolved" because we are 
using 2.1.2 and it is clearly not fixed.  If you mean it is fixed in 3.0, we 
can't move to that yet.  (I doubt you mean it is fixed in 3.0 because the bug 
was closed 1.5 years ago, long before any 3.0 was around.)

Thanks.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19664" />
    <CreationDate amount="2002-06-07 16:15:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Merge wizard: "end point" confusing term</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In the merge wizard, when selecting the branch, it should just say "Where do 
you want to merge the changes from?".

Using the term end-point is confusing because the "end" implies the place where 
the changes are going to end up, which is your workspace projects and the 
branches they are on.
reworded as suggested</WithStack>
    <WithOutStack>In the merge wizard, when selecting the branch, it should just say "Where do 
you want to merge the changes from?".

Using the term end-point is confusing because the "end" implies the place where 
the changes are going to end up, which is your workspace projects and the 
branches they are on.
reworded as suggested</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19665" />
    <CreationDate amount="2002-06-07 16:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Default plugin has compile errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Open a new workspace</Line>
          <Line>2) New-&gt;Project-&gt;Plugin Project</Line>
          <Line>3) Give it a name, Next, Next,</Line>
          <Line>4) Pick "Default Plug-in Structure" on generators page</Line>
          <Line>5) Next, Finish.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020602 (Freeze 2)

1) Open a new workspace
2) New-&gt;Project-&gt;Plugin Project
3) Give it a name, Next, Next,
4) Pick "Default Plug-in Structure" on generators page
5) Next, Finish.

-&gt; Resulting code has compile errors (buildpath not set)
Select all the external plug-ins in the 'Target Platform' PDE preference page 
and try again - should work.
Yes, I know that works.  But shouldn't it work out of the box (all external 
plugins selected by default)?  The comment for this code generator says, "The 
plug-in will be ready to work, compile and run...".   The developer trying this 
for the first time will undoubtedly stumble on this.
Fixed by using a standard template wizard with no templates. This is equivalent 
to the default plug-in/fragment structure, but will generate Welcome page and 
will ask the user if it is OK to enable external plug-ins if it has trouble 
setting the classpath. This will fix the problem.</WithStack>
    <WithOutStack>Build 20020602 (Freeze 2)

1) Open a new workspace
2) New-&gt;Project-&gt;Plugin Project
3) Give it a name, Next, Next,
4) Pick "Default Plug-in Structure" on generators page
5) Next, Finish.

-&gt; Resulting code has compile errors (buildpath not set)
Select all the external plug-ins in the 'Target Platform' PDE preference page 
and try again - should work.
Yes, I know that works.  But shouldn't it work out of the box (all external 
plugins selected by default)?  The comment for this code generator says, "The 
plug-in will be ready to work, compile and run...".   The developer trying this 
for the first time will undoubtedly stumble on this.
Fixed by using a standard template wizard with no templates. This is equivalent 
to the default plug-in/fragment structure, but will generate Welcome page and 
will ask the user if it is OK to enable external plug-ins if it has trouble 
setting the classpath. This will fix the problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19666" />
    <CreationDate amount="2002-06-07 16:24:00 -0400" />
    <DupId amount="50053" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>[CVS UI] Missing "Show in Navigator" in the merge editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>might be missing from sync view too?
Don't know where it went in the sync, but its back now.

Marking later since its just merge we are talking about.
Reopeing


*** This bug has been marked as a duplicate of 50053 ***</WithStack>
    <WithOutStack>might be missing from sync view too?
Don't know where it went in the sync, but its back now.

Marking later since its just merge we are talking about.
Reopeing


*** This bug has been marked as a duplicate of 50053 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19667" />
    <CreationDate amount="2002-06-07 16:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Missing messages in Index Store</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build 2002-06-06.

There are missing messages in the Index Store. All the messages are 
initialized in an array in a static initializer rather than binding the 
strings to messages at runtime like we do in the rest of Core. As a result, 
some of the indexes in the array are left out and the messages are null.

One example is IndexedStoreException.StoreNotCommitted.

We need to review this and potentially change it to be like the rest (using 
Policy.bind("message")) which would at least display a string like "missing 
message my.message" rather than null.
Fixed.</WithStack>
    <WithOutStack>build 2002-06-06.

There are missing messages in the Index Store. All the messages are 
initialized in an array in a static initializer rather than binding the 
strings to messages at runtime like we do in the rest of Core. As a result, 
some of the indexes in the array are left out and the messages are null.

One example is IndexedStoreException.StoreNotCommitted.

We need to review this and potentially change it to be like the rest (using 
Policy.bind("message")) which would at least display a string like "missing 
message my.message" rather than null.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19668" />
    <CreationDate amount="2002-06-07 16:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Emacs: incremental search should set the mark</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When emacs does an incremental search, it sets the mark where the search was 
started from. This allows easy navigation back to where the search started if 
the search goes somewhere unexpected. This would be a useful feature for 
Eclipse to emulate.
The fix is included in the patch for bug 19819.
applied patch &gt;= 20020925</WithStack>
    <WithOutStack>When emacs does an incremental search, it sets the mark where the search was 
started from. This allows easy navigation back to where the search started if 
the search goes somewhere unexpected. This would be a useful feature for 
Eclipse to emulate.
The fix is included in the patch for bug 19819.
applied patch &gt;= 20020925</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19669" />
    <CreationDate amount="2002-06-07 16:29:00 -0400" />
    <DupId amount="15490" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[CVS Core] CVS new repository ok, but Server exception message presented</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When trying to connect to JBoss cvs repository at sourceforce it gives me a 
message : cannot connect to host : Connection refused : connect, but after all 
in connects me to jboss cvs.
What connection method are you using? After the connection succeeds, does 
everything work OK?
pserver and it looks ok after the error message.
But I still have others errors in cvs, as not adding an intire directory to 
source control.
Thsi could be caused by multiple commands over a single connection. Do you know 
if your repository is configured to run scripts on commit, add, etc?


*** This bug has been marked as a duplicate of 15490 ***</WithStack>
    <WithOutStack>When trying to connect to JBoss cvs repository at sourceforce it gives me a 
message : cannot connect to host : Connection refused : connect, but after all 
in connects me to jboss cvs.
What connection method are you using? After the connection succeeds, does 
everything work OK?
pserver and it looks ok after the error message.
But I still have others errors in cvs, as not adding an intire directory to 
source control.
Thsi could be caused by multiple commands over a single connection. Do you know 
if your repository is configured to run scripts on commit, add, etc?


*** This bug has been marked as a duplicate of 15490 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19670" />
    <CreationDate amount="2002-06-07 16:29:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Regression in OLE support</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In F2: 
 
    Reboot your PD
    Create a simple project
    Drag and drop a powerpoint doc.
    Double click to open the powerpoint doc.

    Notice that the editor comes up blank.

    Close the eclipse .ppt editor.
    
    Notice that the editor thinks the file is dirty when it isn't

    Open Powerpoint.
    Create a simple presentation.

    Go back to eclipse.
    Double click on the .ppt file.
     
    Notice that the presentation opens properly.


Trying the same steps on the 0515 build does not recreate the problem.
VI to investigate. If this is real, then it may need to be fixed for R2.0. Let 
me know.

The editor always thinks the file is dirty this is nothing new.

The ole client was not in the running state at the time when the doVerb was 
invoked.  I have put back (sheepish grin) the code that calls OleRun before 
invoking the verb.

Code reviewed by Steve and McQ</WithStack>
    <WithOutStack>In F2: 
 
    Reboot your PD
    Create a simple project
    Drag and drop a powerpoint doc.
    Double click to open the powerpoint doc.

    Notice that the editor comes up blank.

    Close the eclipse .ppt editor.
    
    Notice that the editor thinks the file is dirty when it isn't

    Open Powerpoint.
    Create a simple presentation.

    Go back to eclipse.
    Double click on the .ppt file.
     
    Notice that the presentation opens properly.


Trying the same steps on the 0515 build does not recreate the problem.
VI to investigate. If this is real, then it may need to be fixed for R2.0. Let 
me know.

The editor always thinks the file is dirty this is nothing new.

The ole client was not in the running state at the time when the doVerb was 
invoked.  I have put back (sheepish grin) the code that calls OleRun before 
invoking the verb.

Code reviewed by Steve and McQ</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19671" />
    <CreationDate amount="2002-06-07 16:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unable to expand/collapse trees in properties view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="4">
        <Lines>
          <Line>- Import a plugin, such as ..core.boot</Line>
          <Line>- Open the Properties view</Line>
          <Line>- Highlight the plugin so you can see the properties</Line>
          <Line>- Try to collapse the tree by clicking on the '-' box</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- Install the examples</Line>
          <Line>- Create a file called 'test.usr'</Line>
          <Line>- Open the properties view</Line>
          <Line>- Click on 'richard' in the outline view</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020607
Redhat 7.2, KDE 2.2-10
GTK2

- Import a plugin, such as ..core.boot
- Open the Properties view
- Highlight the plugin so you can see the properties
- Try to collapse the tree by clicking on the '-' box

It doesn't do anything. In fact, it is impossible to expand or collapse any 
tree node from the properties view in GTK2 (as far as I can see). To see a tree 
with more nodes and levels, follow these steps..

- Install the examples
- Create a file called 'test.usr'
- Open the properties view
- Click on 'richard' in the outline view

You'll see a tree with '+' and '-' boxes visible but nothing happens when you 
try to expand/collapse them. 

NOTE: You'll also notice that the children of a node aren't indented at all. On 
top of this, when you click on a child that doesn't have children (no '+' or '-
'), it sometimes scrolls the view such that the selected field appears at the 
top of the view, if your view is small enough vertically. And finally, if you 
have properties that you can edit (such as the "test.usr" one) and you shrink 
your view vertically enough to show vertical scrollbars, then when you click 
on, say, a text field to edit it, the editable box that comes up is on top of 
the scrollbar.

McQ: Should I file each of these as individual PRs? Some of these look related.
Boris to sort through these. If the can't expand/collapse by clicking on the 
+/- box is valid, then it might need to be fixed for R2.0. Let me know.

TableItem.getImageBounds() is not implemented yet.
Sounds like a simple fix. Should we do it?


Yes, I believe should.
Fixed.</WithStack>
    <WithOutStack>Build 20020607
Redhat 7.2, KDE 2.2-10
GTK2

- Import a plugin, such as ..core.boot
- Open the Properties view
- Highlight the plugin so you can see the properties
- Try to collapse the tree by clicking on the '-' box

It doesn't do anything. In fact, it is impossible to expand or collapse any 
tree node from the properties view in GTK2 (as far as I can see). To see a tree 
with more nodes and levels, follow these steps..

- Install the examples
- Create a file called 'test.usr'
- Open the properties view
- Click on 'richard' in the outline view

You'll see a tree with '+' and '-' boxes visible but nothing happens when you 
try to expand/collapse them. 

NOTE: You'll also notice that the children of a node aren't indented at all. On 
top of this, when you click on a child that doesn't have children (no '+' or '-
'), it sometimes scrolls the view such that the selected field appears at the 
top of the view, if your view is small enough vertically. And finally, if you 
have properties that you can edit (such as the "test.usr" one) and you shrink 
your view vertically enough to show vertical scrollbars, then when you click 
on, say, a text field to edit it, the editable box that comes up is on top of 
the scrollbar.

McQ: Should I file each of these as individual PRs? Some of these look related.
Boris to sort through these. If the can't expand/collapse by clicking on the 
+/- box is valid, then it might need to be fixed for R2.0. Let me know.

TableItem.getImageBounds() is not implemented yet.
Sounds like a simple fix. Should we do it?


Yes, I believe should.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19672" />
    <CreationDate amount="2002-06-07 16:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Windows All" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>MSWord in-place loses scroll bars</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 0607 (or other recent build)
Create a project.
Drag a word document into the project (example file attached).
Double click to open word in place.
Double click on the editor tab to maximize the word editor.
Note that horiz and vert scroll bars are now gone.
Double click on editor to restore its size.
Scroll bars are still gone.
Click on another editor and then back on the word editor.
Scroll bars come back.
Observed on 98, XP and 2000.  Office 2000.
Created attachment 1321
Test word file
There's nothing we can do about this. The UI team has been given the code to 
cause the scroll bars to come back. They need to apply it in all places where 
this could occur.

This is the best we can do.  It is a known problem that on resizing the 
scrollbars will disappear.  Note that when you embed Word in Excel the 
scrollbars do not appear.  We are forcing Word to show its scrollbars and this 
appears to not be well supported.
I believe we already did apply the recommended changes from Veronika.
Tod, please reopen if not.


All suggested changed have been applied.</WithStack>
    <WithOutStack>Build 0607 (or other recent build)
Create a project.
Drag a word document into the project (example file attached).
Double click to open word in place.
Double click on the editor tab to maximize the word editor.
Note that horiz and vert scroll bars are now gone.
Double click on editor to restore its size.
Scroll bars are still gone.
Click on another editor and then back on the word editor.
Scroll bars come back.
Observed on 98, XP and 2000.  Office 2000.
Created attachment 1321
Test word file
There's nothing we can do about this. The UI team has been given the code to 
cause the scroll bars to come back. They need to apply it in all places where 
this could occur.

This is the best we can do.  It is a known problem that on resizing the 
scrollbars will disappear.  Note that when you embed Word in Excel the 
scrollbars do not appear.  We are forcing Word to show its scrollbars and this 
appears to not be well supported.
I believe we already did apply the recommended changes from Veronika.
Tod, please reopen if not.


All suggested changed have been applied.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19673" />
    <CreationDate amount="2002-06-07 16:36:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Breakpoint markers do not appear when only the source of selected elements is beong shown</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Normally double-clicking to the right of a line of code will create a breakpoint
there and display a little round marker to indicate the existence of a
breakpoint there. However, if the user clicks the button in the Java Browsing
perspective that says "Show source of selected element only", the marker does
not appear (not in the place it should, anyway), although the breakpoint is set
&amp; added to the list of breakpoints. Interestingly enough, the context menu that
appears when right-clicking beside a line seems to think that there is no
breakpoint set there, as it offers to create a new one. However, attempting to
create a new one does nothing whatsoever. 

This was observed in the 0607 build.

Steps to reproduce:
Start Eclipse.
Open the Java Browsing perspective.
Open a method in the editor.
Hit the button labelled "Show source of selected element only".
Attempt to set a breakpoint in the method by double-clicking on the right of a line.

Expected behavior:
A breakpoint indicator should appear beside the line.

Actual behavior:
Sometime an indicator appears but it is never on the correct line. Mostly the
indicator simply never shows up.

Note: if the breakpoint has been set but the indicator has not shown up,
deactivating the button labelled "Show source of selected element only" will
cause all the breakpoints to appear as they should.
We changed our breakpoint markers to only have line numbers, rather than 
offsets and lengths. This was to fix a different bug (bug# 17868).
could reproduce on 0607.

We could reproduce it on Win too. This is a little bit strange. Between F2 and 
0607 I didn't release any code. The change you released does not make a 
difference. Also, I cannot reproduce the behavior using the HEAD versions of 
debug, jdt-ui, and eclipse-ui. Comparing the relevant classes in the repository 
does not show a relevant difference.
cannot reproduce on 0610. 

Antonio, pls try again on 0610 and reopen the bug if you can still reproduce 
the problem.

The bug appears to have been squished hard into the ground with a heavy boot :-)
Marking closed.</WithStack>
    <WithOutStack>Normally double-clicking to the right of a line of code will create a breakpoint
there and display a little round marker to indicate the existence of a
breakpoint there. However, if the user clicks the button in the Java Browsing
perspective that says "Show source of selected element only", the marker does
not appear (not in the place it should, anyway), although the breakpoint is set
&amp; added to the list of breakpoints. Interestingly enough, the context menu that
appears when right-clicking beside a line seems to think that there is no
breakpoint set there, as it offers to create a new one. However, attempting to
create a new one does nothing whatsoever. 

This was observed in the 0607 build.

Steps to reproduce:
Start Eclipse.
Open the Java Browsing perspective.
Open a method in the editor.
Hit the button labelled "Show source of selected element only".
Attempt to set a breakpoint in the method by double-clicking on the right of a line.

Expected behavior:
A breakpoint indicator should appear beside the line.

Actual behavior:
Sometime an indicator appears but it is never on the correct line. Mostly the
indicator simply never shows up.

Note: if the breakpoint has been set but the indicator has not shown up,
deactivating the button labelled "Show source of selected element only" will
cause all the breakpoints to appear as they should.
We changed our breakpoint markers to only have line numbers, rather than 
offsets and lengths. This was to fix a different bug (bug# 17868).
could reproduce on 0607.

We could reproduce it on Win too. This is a little bit strange. Between F2 and 
0607 I didn't release any code. The change you released does not make a 
difference. Also, I cannot reproduce the behavior using the HEAD versions of 
debug, jdt-ui, and eclipse-ui. Comparing the relevant classes in the repository 
does not show a relevant difference.
cannot reproduce on 0610. 

Antonio, pls try again on 0610 and reopen the bug if you can still reproduce 
the problem.

The bug appears to have been squished hard into the ground with a heavy boot :-)
Marking closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19674" />
    <CreationDate amount="2002-06-07 16:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>LaunchConfigurationDialog is over 3,000 lines (whew!)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>This class needs to be cut down to size post 2.0.
Defered
Marking for 2.1
Marking as later. Time permitting, we can reconsider.
I am working on this in conjuction with bug 26702
Fixed. The dialog has been split up into re-useable components - a launch 
config tree view, and a lanunch configuration tab group viewer. As well, the 
dialog is now subclassed to support editing of a single launch config.
Please verify, Jared.
Verified. Much better. :)</WithStack>
    <WithOutStack>This class needs to be cut down to size post 2.0.
Defered
Marking for 2.1
Marking as later. Time permitting, we can reconsider.
I am working on this in conjuction with bug 26702
Fixed. The dialog has been split up into re-useable components - a launch 
config tree view, and a lanunch configuration tab group viewer. As well, the 
dialog is now subclassed to support editing of a single launch config.
Please verify, Jared.
Verified. Much better. :)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19675" />
    <CreationDate amount="2002-06-07 16:43:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Access denied error when opening javadoc</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="448" end="524" />
        <code>function asd()
{
parent.document.title="Byte (Java 2 Platform SE v1.4.0)";
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When opening Javadoc from eclipse, Internet Explorer open every time a dialog
box with the following message :

"Internet Explorer script error...
Line: 14
...
Error: Access denied
...
"

This is very annoying as this popup is opened again when we click on any href in
the javadoc.

I have this error with IE6, and someone reported it with IE 5.5

The error was in the following lines that every html document in the docs of
SDK 1.4 has:

&lt;SCRIPT&gt;
function asd()
{
parent.document.title="Byte (Java 2 Platform SE v1.4.0)";
}
&lt;/SCRIPT&gt;

This problem is a javascript problem (see
http://dev.eclipse.org/newslists/news.eclipse.tools/msg21513.html), but as all
javadoc pages as this javascript in it we have to do with it.

Without a workaround people will rather launch a browser on javadoc outside of
eclipse. So I think that this could be considered as a major problem for eclipse
help system.

Possible workarounds :
1 - find a settings in IE to tell it not to open this dialog box. :-)
2 - Avoid cross domain problem by using a servlet that will read doc file.
3 - open javadoc in its own browser window (do not show search.jsp, links.jsp,
toolbar.jsp)

Perhaps you have a simple workaround, if this is the case I will be happy to
know it.
   
Bruno
This is the same as what remains to be done in JDT bug 17447.

Option 2) is the preferred way, the only issues there are security related, 
making sure that help does not return arbitrary files from a user's machine. 
This is theoretically easy to fix, but need to see what the JDT team decides, 
and we can fix it accordingly.
I fixed bug 17447 that this bug was dependent on, so I will close this one as 
well. We implemented workaround 2).</WithStack>
    <WithOutStack>When opening Javadoc from eclipse, Internet Explorer open every time a dialog
box with the following message :

"Internet Explorer script error...
Line: 14
...
Error: Access denied
...
"

This is very annoying as this popup is opened again when we click on any href in
the javadoc.

I have this error with IE6, and someone reported it with IE 5.5

The error was in the following lines that every html document in the docs of
SDK 1.4 has:

&lt;SCRIPT&gt;
function asd()
{
parent.document.title="Byte (Java 2 Platform SE v1.4.0)";
}
&lt;/SCRIPT&gt;

This problem is a javascript problem (see
http://dev.eclipse.org/newslists/news.eclipse.tools/msg21513.html), but as all
javadoc pages as this javascript in it we have to do with it.

Without a workaround people will rather launch a browser on javadoc outside of
eclipse. So I think that this could be considered as a major problem for eclipse
help system.

Possible workarounds :
1 - find a settings in IE to tell it not to open this dialog box. :-)
2 - Avoid cross domain problem by using a servlet that will read doc file.
3 - open javadoc in its own browser window (do not show search.jsp, links.jsp,
toolbar.jsp)

Perhaps you have a simple workaround, if this is the case I will be happy to
know it.
   
Bruno
This is the same as what remains to be done in JDT bug 17447.

Option 2) is the preferred way, the only issues there are security related, 
making sure that help does not return arbitrary files from a user's machine. 
This is theoretically easy to fix, but need to see what the JDT team decides, 
and we can fix it accordingly.
I fixed bug 17447 that this bug was dependent on, so I will close this one as 
well. We implemented workaround 2).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19676" />
    <CreationDate amount="2002-06-07 16:48:00 -0400" />
    <DupId amount="18953" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Overwriting an existing project by checking out doesn't update</Summery>
    <Patches amount="0" />
    <Stacktraces amount="5">
      <Stacktrace timestamp="1437331231329">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:80)</Frame>
          <Frame depth="1">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:98)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437331231329">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:269)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:335)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ui.actions.TeamAction.run(TeamAction.java:168)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.ui.actions.AddToWorkspaceAction.execute(AddToWorkspaceAction.java:55)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run(CVSAction.java:76)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:210)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:432)</Frame>
          <Frame depth="18">EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437331231329">
        <Exception>org.eclipse.core.internal.resources.ResourceException</Exception>
        <Reason>Errors during 
build.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:217)</Frame>
          <Frame depth="1">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:733)</Frame>
          <Frame depth="2">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1366)</Frame>
          <Frame depth="3">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:78)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437331231329">
        <Exception>java.lang.IllegalAccessError</Exception>
        <Reason>tried to access method 
org.eclipse.core.resources.IncrementalProjectBuilder.startupOnInitialize()V 
from class org.eclipse.core.internal.events.BuildManager</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.events.BuildManager.getBuilder(BuildManager.java:328)</Frame>
          <Frame depth="1">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:165)</Frame>
          <Frame depth="2">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:186)</Frame>
          <Frame depth="3">org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:146)</Frame>
          <Frame depth="4">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:802)</Frame>
          <Frame depth="5">org.eclipse.core.runtime.Platform.run(Platform.java:416)</Frame>
          <Frame depth="6">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:160)</Frame>
          <Frame depth="7">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:211)</Frame>
          <Frame depth="8">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:733)</Frame>
          <Frame depth="9">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1366)</Frame>
          <Frame depth="10">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:78)</Frame>
          <Frame depth="11">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:98)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437331231329">
        <Exception>java.lang.IllegalAccessError</Exception>
        <Reason>tried to access method 
org.eclipse.core.resources.IncrementalProjectBuilder.startupOnInitialize()V 
from class org.eclipse.core.internal.events.BuildManager</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.events.BuildManager.getBuilder(BuildManager.java:328)</Frame>
          <Frame depth="1">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:165)</Frame>
          <Frame depth="2">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:186)</Frame>
          <Frame depth="3">org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:146)</Frame>
          <Frame depth="4">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:802)</Frame>
          <Frame depth="5">org.eclipse.core.runtime.Platform.run(Platform.java:416)</Frame>
          <Frame depth="6">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:160)</Frame>
          <Frame depth="7">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:211)</Frame>
          <Frame depth="8">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:733)</Frame>
          <Frame depth="9">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1366)</Frame>
          <Frame depth="10">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:78)</Frame>
          <Frame depth="11">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:98)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>- From the main eclipse repository, check out org.apache.ant as a project</Line>
          <Line>- Now delete a few files from the local project</Line>
          <Line>- check out org.apache.ant again, and overwrite existing project</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="12">
        <Lines>
          <Line>- clear workspace</Line>
          <Line>- open cvs repository exploring perspective</Line>
          <Line>- right click in cvs repositories view, new-&gt;anonymous repository location to</Line>
          <Line>dev.eclipse.org -&gt; finish</Line>
          <Line>- find org.apache.ant under head</Line>
          <Line>- right click on it -&gt; check out as project</Line>
          <Line>- open the java perspective</Line>
          <Line>- in the packages view, delete the two .zip files in org.apache.ant</Line>
          <Line>- go back to cvs perspective</Line>
          <Line>- right-click on org.apache.ant again, -&gt; check out as project</Line>
          <Line>- it will prompt to overwrite, say Ok</Line>
          <Line>- go back to java perspective</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020607
Win2k

- From the main eclipse repository, check out org.apache.ant as a project
- Now delete a few files from the local project
- check out org.apache.ant again, and overwrite existing project

Now go look at your project, the files you deleted are still gone. Refreshing 
the view doesn't update it either.
This works for me. Is it reproducable for you? If so, which files did you 
delete and which checkout command did you use?
It's reproducible for me.. let me try to explain it again in more detail.

- clear workspace
- open cvs repository exploring perspective
- right click in cvs repositories view, new-&gt;anonymous repository location to 
dev.eclipse.org -&gt; finish
- find org.apache.ant under head
- right click on it -&gt; check out as project
- open the java perspective
- in the packages view, delete the two .zip files in org.apache.ant
- go back to cvs perspective
- right-click on org.apache.ant again, -&gt; check out as project
- it will prompt to overwrite, say Ok
- go back to java perspective

The .zip files are still missing for me. I tried refreshing the view but still 
nothing. I have to close the packages view and re-open it to see them. Maybe 
I'm just not doing something right?

Curtis, can you see it in the Navigator?

If refreshing doesn't bring them back, but closing/opening the view does, then 
it sounds like a view problem, not a CVS problem.  Moving to JDT UI.

Yes, I can see the files in the Navigator view. I don't have to refresh or do 
anything.
given that closing and reopening the packages view helps, this looks either 
like a refresh problem of the packages view or a delta problem from Java Core.

Philppe can you check into the delta first?
Got following exception when trying to reproduce:

Exception in modal context operation:
java.lang.reflect.InvocationTargetException
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:80)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:98)
Caused by: org.eclipse.core.internal.resources.ResourceException: Errors during 
build.
	at org.eclipse.core.internal.events.BuildManager.build
(BuildManager.java:217)
	at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java:733)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1366)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:78)
	... 1 more
Called from:
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:269)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.team.internal.ui.actions.TeamAction.run
(TeamAction.java:168)
	at 
org.eclipse.team.internal.ccvs.ui.actions.AddToWorkspaceAction.execute
(AddToWorkspaceAction.java:55)
	at org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run
(CVSAction.java:76)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:210)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432)
	at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)
Log was:

!SESSION Jun 11, 2002 14:59:48.358 ---------------------------------------------
java.version=1.4.1-beta
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -dev bin -data D:\eclipse\testing\workspace -debug 
file:D:\eclipse\workspaces\dev2.0
\plugins\.metadata\.plugins\org.eclipse.pde.core\.options -os win32 -ws win32 -
arch x86
!ENTRY org.eclipse.core.resources 4 2 Jun 11, 2002 14:59:48.358
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.resources".
!STACK 0
java.lang.IllegalAccessError: tried to access method 
org.eclipse.core.resources.IncrementalProjectBuilder.startupOnInitialize()V 
from class org.eclipse.core.internal.events.BuildManager
	at org.eclipse.core.internal.events.BuildManager.getBuilder
(BuildManager.java:328)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:165)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:186)
	at org.eclipse.core.internal.events.BuildManager$1.run
(BuildManager.java:146)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:802)
	at org.eclipse.core.runtime.Platform.run(Platform.java:416)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:160)
	at org.eclipse.core.internal.events.BuildManager.build
(BuildManager.java:211)
	at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java:733)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1366)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:78)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:98)
!ENTRY org.eclipse.core.resources 2 566 Jun 11, 2002 15:00:04.91
!MESSAGE tried to access method 
org.eclipse.core.resources.IncrementalProjectBuilder.startupOnInitialize()V 
from class org.eclipse.core.internal.events.BuildManager
!STACK 0
java.lang.IllegalAccessError: tried to access method 
org.eclipse.core.resources.IncrementalProjectBuilder.startupOnInitialize()V 
from class org.eclipse.core.internal.events.BuildManager
	at org.eclipse.core.internal.events.BuildManager.getBuilder
(BuildManager.java:328)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:165)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:186)
	at org.eclipse.core.internal.events.BuildManager$1.run
(BuildManager.java:146)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:802)
	at org.eclipse.core.runtime.Platform.run(Platform.java:416)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:160)
	at org.eclipse.core.internal.events.BuildManager.build
(BuildManager.java:211)
	at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java:733)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1366)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:78)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:98)
Disabled auto-build, and now checkout works fine. Cannot reproduce the original 
scenario, when overriding org.apache.ant, the package view update is fine, the 
delta looks like:

Java Model[*]: {CHILDREN}
	org.apache.ant[*]: {CHILDREN | CONTENT}
		ant.jar[*]: {CONTENT | ARCHIVE CONTENT CHANGED}
		jakarta-ant-1.4.1-optional.jar[*]: {CONTENT | ARCHIVE CONTENT 
CHANGED}
		ResourceDelta(/org.apache.ant/.classpath)[*]
		ResourceDelta(/org.apache.ant/.cvsignore)[*]
		ResourceDelta(/org.apache.ant/.project)[*]
		ResourceDelta(/org.apache.ant/about.html)[*]
		ResourceDelta(/org.apache.ant/antsrc.zip)[+]
		ResourceDelta(/org.apache.ant/build.properties)[*]
		ResourceDelta(/org.apache.ant/jakarta-ant-1.4.1-optionalsrc.zip)
[+]
		ResourceDelta(/org.apache.ant/plugin.properties)[*]
		ResourceDelta(/org.apache.ant/plugin.xml)[*]

Problem could be reproduced in 0607, no delta was issued.
Closing as duplicate of bug 18953

*** This bug has been marked as a duplicate of 18953 ***</WithStack>
    <WithOutStack>Build 20020607
Win2k

- From the main eclipse repository, check out org.apache.ant as a project
- Now delete a few files from the local project
- check out org.apache.ant again, and overwrite existing project

Now go look at your project, the files you deleted are still gone. Refreshing 
the view doesn't update it either.
This works for me. Is it reproducable for you? If so, which files did you 
delete and which checkout command did you use?
It's reproducible for me.. let me try to explain it again in more detail.

- clear workspace
- open cvs repository exploring perspective
- right click in cvs repositories view, new-&gt;anonymous repository location to 
dev.eclipse.org -&gt; finish
- find org.apache.ant under head
- right click on it -&gt; check out as project
- open the java perspective
- in the packages view, delete the two .zip files in org.apache.ant
- go back to cvs perspective
- right-click on org.apache.ant again, -&gt; check out as project
- it will prompt to overwrite, say Ok
- go back to java perspective

The .zip files are still missing for me. I tried refreshing the view but still 
nothing. I have to close the packages view and re-open it to see them. Maybe 
I'm just not doing something right?

Curtis, can you see it in the Navigator?

If refreshing doesn't bring them back, but closing/opening the view does, then 
it sounds like a view problem, not a CVS problem.  Moving to JDT UI.

Yes, I can see the files in the Navigator view. I don't have to refresh or do 
anything.
given that closing and reopening the packages view helps, this looks either 
like a refresh problem of the packages view or a delta problem from Java Core.

Philppe can you check into the delta first?
Got following exception when trying to reproduce:

Exception in modal context operation:
	... 1 more
Called from:
Log was:

!SESSION Jun 11, 2002 14:59:48.358 ---------------------------------------------
java.version=1.4.1-beta
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -dev bin -data D:\eclipse\testing\workspace -debug 
file:D:\eclipse\workspaces\dev2.0
\plugins\.metadata\.plugins\org.eclipse.pde.core\.options -os win32 -ws win32 -
arch x86
!ENTRY org.eclipse.core.resources 4 2 Jun 11, 2002 14:59:48.358
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.resources".
!STACK 0
!ENTRY org.eclipse.core.resources 2 566 Jun 11, 2002 15:00:04.91
!MESSAGE tried to access method 
org.eclipse.core.resources.IncrementalProjectBuilder.startupOnInitialize()V 
from class org.eclipse.core.internal.events.BuildManager
!STACK 0

Disabled auto-build, and now checkout works fine. Cannot reproduce the original 
scenario, when overriding org.apache.ant, the package view update is fine, the 
delta looks like:

Java Model[*]: {CHILDREN}
	org.apache.ant[*]: {CHILDREN | CONTENT}
		ant.jar[*]: {CONTENT | ARCHIVE CONTENT CHANGED}
		jakarta-ant-1.4.1-optional.jar[*]: {CONTENT | ARCHIVE CONTENT 
CHANGED}
		ResourceDelta(/org.apache.ant/.classpath)[*]
		ResourceDelta(/org.apache.ant/.cvsignore)[*]
		ResourceDelta(/org.apache.ant/.project)[*]
		ResourceDelta(/org.apache.ant/about.html)[*]
		ResourceDelta(/org.apache.ant/antsrc.zip)[+]
		ResourceDelta(/org.apache.ant/build.properties)[*]
		ResourceDelta(/org.apache.ant/jakarta-ant-1.4.1-optionalsrc.zip)
[+]
		ResourceDelta(/org.apache.ant/plugin.properties)[*]
		ResourceDelta(/org.apache.ant/plugin.xml)[*]

Problem could be reproduced in 0607, no delta was issued.
Closing as duplicate of bug 18953

*** This bug has been marked as a duplicate of 18953 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19677" />
    <CreationDate amount="2002-06-07 17:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Invalid/un-necessary import statement</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build 2002-06-07.

org.eclipse.core.internal.boot.PlatformConfiguration imports 
sun.security.action.GetPropertyAction;

Not only does this give you a red X error if your classes.zip doesn't have it, 
but it is unused.
fixed, released in HEAD</WithStack>
    <WithOutStack>build 2002-06-07.

org.eclipse.core.internal.boot.PlatformConfiguration imports 
sun.security.action.GetPropertyAction;

Not only does this give you a red X error if your classes.zip doesn't have it, 
but it is unused.
fixed, released in HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19678" />
    <CreationDate amount="2002-06-07 17:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[ExternalTools] Update AntUtil to use XMLMemento</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Now that the XMLMemento has been fixed to throw the proper exception and read 
the correct element, AntUtil can drop its override of that method. Also drop 
it's dependency on xerces plugin
Not applicable anymore

Note: new external tool work is not yet released to the head stream and won't 
for a while yet.</WithStack>
    <WithOutStack>Now that the XMLMemento has been fixed to throw the proper exception and read 
the correct element, AntUtil can drop its override of that method. Also drop 
it's dependency on xerces plugin
Not applicable anymore

Note: new external tool work is not yet released to the head stream and won't 
for a while yet.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19679" />
    <CreationDate amount="2002-06-07 17:16:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Option to automatically organize imports before building [code manipulation]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>It would be nice to have a preferences option to automatically perform an 
organize imports before a build (either via a save if the build on save option 
is enabled, or an explicit build request).
to be considered after 2.0
This will slow down the build process due to the fact that currently builders 
are isolated from each other and organize imports is done in the UI. Due to the 
constraints we have for 2.x releases (API stability) this will not be address 
in the 2.x stream. 

Can be reconsidered for 3.x

John are you aware that you can perform Organize Imports for a list of 
packages. So may be it would be enough to do it before checking the code into a 
repository or before deploying the code.
Yes, I was aware of this, and use this feature all the time.  I just thought it 
would be nice to not have to worry about performing the step at all, since in 
all cases at all times I want my imports to be organized.  Is there a schedule 
yet for 3.0, or for that matter any post-2.0 release?
The time lines were posted to the Eclipse mailing list and the Eclipse news 
group. Title was "Eclipse next steps: beyond 2.0"
Chaning state from assigned later to resolved later. Assigned later got 
introduced by the last bug conversion and is not a supported Eclipse bug state.
This is now possible, see bug 6749.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>It would be nice to have a preferences option to automatically perform an 
organize imports before a build (either via a save if the build on save option 
is enabled, or an explicit build request).
to be considered after 2.0
This will slow down the build process due to the fact that currently builders 
are isolated from each other and organize imports is done in the UI. Due to the 
constraints we have for 2.x releases (API stability) this will not be address 
in the 2.x stream. 

Can be reconsidered for 3.x

John are you aware that you can perform Organize Imports for a list of 
packages. So may be it would be enough to do it before checking the code into a 
repository or before deploying the code.
Yes, I was aware of this, and use this feature all the time.  I just thought it 
would be nice to not have to worry about performing the step at all, since in 
all cases at all times I want my imports to be organized.  Is there a schedule 
yet for 3.0, or for that matter any post-2.0 release?
The time lines were posted to the Eclipse mailing list and the Eclipse news 
group. Title was "Eclipse next steps: beyond 2.0"
Chaning state from assigned later to resolved later. Assigned later got 
introduced by the last bug conversion and is not a supported Eclipse bug state.
This is now possible, see bug 6749.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19680" />
    <CreationDate amount="2002-06-07 17:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Review exceptions in index store.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build 2002-06-07.

We need to review exceptions in the index store. Specifically the following 
classes:
  IndexedStoreException
  ObjectStoreException
  PageStoreException

We should consider making them a subclass of CoreException so they can hold 
onto an IStatus.

Minimally, we need to be able to construct these exceptions with nested 
exceptions. Currently 2 out of 3 you can only pass a message. As a result, 
some underlying exceptions may not be reported to the user.
Also investigate areas where IOExceptions are being caught and another message 
is being generated for the user. One example of this is LogWriter.write(). 
This catches IOExceptions and then returns false "I couldn't write" which then 
causes a message to be generated to the user, which isn't as specific as the 
originating IOException probably was.

Investigate adding a throws clause to this method signature and embedding the 
IOException in an indexed store exception.
Created new bug 19953 for refactoring Index Store exceptions to be subclasses 
of CoreException.

Added new abstract class StoreException which accepts a nested exception in 
the constructor and prints out its info in printStackTrace(). Changed 
IndexedStoreException, ObjectStoreException, PageStoreException to subclass 
this new class.</WithStack>
    <WithOutStack>build 2002-06-07.

We need to review exceptions in the index store. Specifically the following 
classes:
  IndexedStoreException
  ObjectStoreException
  PageStoreException

We should consider making them a subclass of CoreException so they can hold 
onto an IStatus.

Minimally, we need to be able to construct these exceptions with nested 
exceptions. Currently 2 out of 3 you can only pass a message. As a result, 
some underlying exceptions may not be reported to the user.
Also investigate areas where IOExceptions are being caught and another message 
is being generated for the user. One example of this is LogWriter.write(). 
This catches IOExceptions and then returns false "I couldn't write" which then 
causes a message to be generated to the user, which isn't as specific as the 
originating IOException probably was.

Investigate adding a throws clause to this method signature and embedding the 
IOException in an indexed store exception.
Created new bug 19953 for refactoring Index Store exceptions to be subclasses 
of CoreException.

Added new abstract class StoreException which accepts a nested exception in 
the constructor and prints out its info in printStackTrace(). Changed 
IndexedStoreException, ObjectStoreException, PageStoreException to subclass 
this new class.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19681" />
    <CreationDate amount="2002-06-07 17:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Default package name population when creating a new package [code manipulation]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It would be nice if when you select create a new package, the package field 
would be pre-populated with, if present, the selected package or enclosing 
package of the selected file.
we could be more supportive here, so when junit.framework is selected we could 
offer "junit." as the default text.

defer to after 2.0
*** Bug 7551 has been marked as a duplicate of this bug. ***
What about reopening this bug for 2.1? This seems to be forgotten. It is really 
annoying to type the full package name again and again and again. I wouldn't 
say this is an enhancement any more. It is rather a bug when using the new 
hierarchical tree view of packages in the Package Explorer
Was planning on voting for this bug but didn't see that functionality so I will
just cast my vote to get this annoying bug fixed in the comments.
feature is in 2.1</WithStack>
    <WithOutStack>It would be nice if when you select create a new package, the package field 
would be pre-populated with, if present, the selected package or enclosing 
package of the selected file.
we could be more supportive here, so when junit.framework is selected we could 
offer "junit." as the default text.

defer to after 2.0
*** Bug 7551 has been marked as a duplicate of this bug. ***
What about reopening this bug for 2.1? This seems to be forgotten. It is really 
annoying to type the full package name again and again and again. I wouldn't 
say this is an enhancement any more. It is rather a bug when using the new 
hierarchical tree view of packages in the Package Explorer
Was planning on voting for this bug but didn't see that functionality so I will
just cast my vote to get this annoying bug fixed in the comments.
feature is in 2.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19682" />
    <CreationDate amount="2002-06-07 17:24:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Find] Unable to do 2 case sensitive searches if case only difference</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>(1) I porting software from another language (Cedar) to Java. One approach is to</Line>
          <Line>have all the Cedar code in some java module as comments, and convert to java on</Line>
          <Line>an as-needed basis.  The difference between the original Cedar procedure and the</Line>
          <Line>corresponding is the case of the initial character.  Once I've searched for one,</Line>
          <Line>I can no longer search easily for the other.</Line>
          <Line />
          <Line>(2) I frequesntly have a class name and the name of an instance of that class</Line>
          <Line>that differ only in the initial cap.  Same result.</Line>
          <Line>can you provide reproducable steps. When I check the Case Sensitive checkbox in</Line>
          <Line>the dialog then case sensitive searching works fine.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Once one has done Edit/Find (CTRL-f) for "NewFoo", it is no longer possible to
do a case-sensitive search for "newFoo", because the #@#&amp;@*# smart find feature
knows better than I do that I *really* want to search for "NewFoo".  

I can find no workaround, and this turns out to be really frustrating for my
project.  Two examples:

(1) I porting software from another language (Cedar) to Java. One approach is to
have all the Cedar code in some java module as comments, and convert to java on
an as-needed basis.  The difference between the original Cedar procedure and the
corresponding is the case of the initial character.  Once I've searched for one,
I can no longer search easily for the other.

(2) I frequesntly have a class name and the name of an instance of that class
that differ only in the initial cap.  Same result.
can you provide reproducable steps. When I check the Case Sensitive checkbox in 
the dialog then case sensitive searching works fine.

Test case
	int newName;
	int NewName;
searching for newName only finds newName, searching for NewName only finds 
NewName.

pls reopen if you can reproduce the problem</WithStack>
    <WithOutStack>Once one has done Edit/Find (CTRL-f) for "NewFoo", it is no longer possible to
do a case-sensitive search for "newFoo", because the #@#&amp;@*# smart find feature
knows better than I do that I *really* want to search for "NewFoo".  

I can find no workaround, and this turns out to be really frustrating for my
project.  Two examples:

(1) I porting software from another language (Cedar) to Java. One approach is to
have all the Cedar code in some java module as comments, and convert to java on
an as-needed basis.  The difference between the original Cedar procedure and the
corresponding is the case of the initial character.  Once I've searched for one,
I can no longer search easily for the other.

(2) I frequesntly have a class name and the name of an instance of that class
that differ only in the initial cap.  Same result.
can you provide reproducable steps. When I check the Case Sensitive checkbox in 
the dialog then case sensitive searching works fine.

Test case
	int newName;
	int NewName;
searching for newName only finds newName, searching for NewName only finds 
NewName.

pls reopen if you can reproduce the problem</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19683" />
    <CreationDate amount="2002-06-07 17:32:00 -0400" />
    <DupId amount="17344" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[About] inexact sensitive region for URLs in about blurbs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Start eclipse</Line>
          <Line>2. open the about box</Line>
          <Line>3. click on blank area at the end of a line containing an underlined URL</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>build 20020607

1. Start eclipse
2. open the about box
3. click on blank area at the end of a line containing an underlined URL

Observe: It opens a web browser.

Expectation: The sensitive region of test should be exactly the highlighted 
URL text.


*** This bug has been marked as a duplicate of 17344 ***</WithStack>
    <WithOutStack>build 20020607

1. Start eclipse
2. open the about box
3. click on blank area at the end of a line containing an underlined URL

Observe: It opens a web browser.

Expectation: The sensitive region of test should be exactly the highlighted 
URL text.


*** This bug has been marked as a duplicate of 17344 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19684" />
    <CreationDate amount="2002-06-07 17:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[About] URLs do not include trailing punctuation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>0. edit &lt;install&gt;/eclipse/plugins/org.eclipse.platform_2.0.0/about.properties</Line>
          <Line>and put parentheses around the URL embedded in the blurb.</Line>
          <Line>e.g., Visit (http://www.eclipse.org/platform)</Line>
          <Line>1. Start eclipse</Line>
          <Line>2. open the about box</Line>
          <Line>3. click on the URL</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>build 20020607

0. edit &lt;install&gt;/eclipse/plugins/org.eclipse.platform_2.0.0/about.properties
and put parentheses around the URL embedded in the blurb.
e.g., Visit (http://www.eclipse.org/platform)
1. Start eclipse
2. open the about box
3. click on the URL

Observe: It opens a web browser to the non-existent page 
http://www.eclipse.org/platform)

Expectation: There are specs governing the set of legal characters
in a URL. The URL detector/parser should be sensitive to these rules
and stop when it hits an illegal character.


Expectation: The sensitive region of test should be exactly the highlighted 
URL text.
See bug 19684 for a similar problem reported against update component.
We should probably have a similar solution across Eclipse.


Correct number is bug 19685.
As indicated in bug 19685 syntatically () are not illegal characters.  What is 
being requested is context sensitive parsing.  My fear is if we parse the () 
out of the URL there may be a user somewhere who has () in their URL and we 
would incorrectly parse their URL
Concur with Andrew. A much easier solution is to make sure that we leave one 
blank character to allow URL decompiler to make a correct conclusion.
Defer
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>build 20020607

0. edit &lt;install&gt;/eclipse/plugins/org.eclipse.platform_2.0.0/about.properties
and put parentheses around the URL embedded in the blurb.
e.g., Visit (http://www.eclipse.org/platform)
1. Start eclipse
2. open the about box
3. click on the URL

Observe: It opens a web browser to the non-existent page 
http://www.eclipse.org/platform)

Expectation: There are specs governing the set of legal characters
in a URL. The URL detector/parser should be sensitive to these rules
and stop when it hits an illegal character.


Expectation: The sensitive region of test should be exactly the highlighted 
URL text.
See bug 19684 for a similar problem reported against update component.
We should probably have a similar solution across Eclipse.


Correct number is bug 19685.
As indicated in bug 19685 syntatically () are not illegal characters.  What is 
being requested is context sensitive parsing.  My fear is if we parse the () 
out of the URL there may be a user somewhere who has () in their URL and we 
would incorrectly parse their URL
Concur with Andrew. A much easier solution is to make sure that we leave one 
blank character to allow URL decompiler to make a correct conclusion.
Defer
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19685" />
    <CreationDate amount="2002-06-07 17:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>URLs do not include trailing punctuation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>0. edit &lt;install&gt;/eclipse/plugins/org.eclipse.platform_2.0.0/about.properties</Line>
          <Line>and put parentheses around the URL embedded in the blurb.</Line>
          <Line>e.g., Visit (http://www.eclipse.org/platform)</Line>
          <Line>1. Start eclipse</Line>
          <Line>2. open the update manager and select the Eclipse Platform feature</Line>
          <Line>3. click on the URL</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>build 20020607

0. edit &lt;install&gt;/eclipse/plugins/org.eclipse.platform_2.0.0/about.properties
and put parentheses around the URL embedded in the blurb.
e.g., Visit (http://www.eclipse.org/platform)
1. Start eclipse
2. open the update manager and select the Eclipse Platform feature
3. click on the URL

Observe: It opens a web browser to the non-existent page 
http://www.eclipse.org/platform)

Expectation: There are specs governing the set of legal characters
in a URL. The URL detector/parser should be sensitive to these rules
and stop when it hits an illegal character.

Expectation: The sensitive region of test should be exactly the highlighted 
URL text.
Should terminate URL scanning at illegal URL chars.
Believe to be in UI
Official specs for URIs do not specify that '(' or ')' are illegal characters. 
When sending a Lotus Notes note with the above URL to myself, I have noticed 
that it didn't include ')' in the hyperlink. Therefore, the rules for 
decompiling hyperlinks from regular texts seem to be more restrictive than a 
URI spec would suggest.

See http://www.ietf.org/rfc/rfc2396.txt

Need more investigation to find the accepted rules for extracting hyperlinks 
from the regular text.
See bug 19684 for a similar problem reported against UI component.
We should probably have a similar solution across Eclipse.


Defer.
[LATER-&gt;WONTFIX] The "LATER" bugzilla resolution is being removed so reopening
to mark as WONTFIX.

[LATER-&gt;WONTFIX] The "LATER" bugzilla resolution is being removed so reopening
to mark as WONTFIX.</WithStack>
    <WithOutStack>build 20020607

0. edit &lt;install&gt;/eclipse/plugins/org.eclipse.platform_2.0.0/about.properties
and put parentheses around the URL embedded in the blurb.
e.g., Visit (http://www.eclipse.org/platform)
1. Start eclipse
2. open the update manager and select the Eclipse Platform feature
3. click on the URL

Observe: It opens a web browser to the non-existent page 
http://www.eclipse.org/platform)

Expectation: There are specs governing the set of legal characters
in a URL. The URL detector/parser should be sensitive to these rules
and stop when it hits an illegal character.

Expectation: The sensitive region of test should be exactly the highlighted 
URL text.
Should terminate URL scanning at illegal URL chars.
Believe to be in UI
Official specs for URIs do not specify that '(' or ')' are illegal characters. 
When sending a Lotus Notes note with the above URL to myself, I have noticed 
that it didn't include ')' in the hyperlink. Therefore, the rules for 
decompiling hyperlinks from regular texts seem to be more restrictive than a 
URI spec would suggest.

See http://www.ietf.org/rfc/rfc2396.txt

Need more investigation to find the accepted rules for extracting hyperlinks 
from the regular text.
See bug 19684 for a similar problem reported against UI component.
We should probably have a similar solution across Eclipse.


Defer.
[LATER-&gt;WONTFIX] The "LATER" bugzilla resolution is being removed so reopening
to mark as WONTFIX.

[LATER-&gt;WONTFIX] The "LATER" bugzilla resolution is being removed so reopening
to mark as WONTFIX.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19686" />
    <CreationDate amount="2002-06-07 17:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>hover help stops working after mousing over end of file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="package">
        <location start="585" end="609" />
        <code>package junit.framework;</code>
      </source_code>
      <source_code type="class">
        <location start="611" end="644" />
        <code>public class T {
	TestCase t;
	
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="17">
        <Lines>
          <Line>1) create CU T.java</Line>
          <Line />
          <Line />
          <Line />
          <Line />
          <Line>2) move the mouse cursor after the close brace of the class as described below.</Line>
          <Line>Reviewed by Erich.</Line>
          <Line>I added the hover help capability to my own custom-made source editor/viewer.</Line>
          <Line>In general, whenever I hover over any whitespace, not just the end of the file,</Line>
          <Line>I noticed hoverhelp stopped working.  (My hover help used to work before F2)</Line>
          <Line>Will this fix probably fix that problem as well?  If so, could you describe the</Line>
          <Line>fix and is this a fix that can be made into a patch for F2?  (I would like to</Line>
          <Line>stay on the F2 base and provide a temporary patch till moving up to F3)  Thanks.</Line>
          <Line>Verified. TB, but leaving as resolved fixed for further discussion</Line>
          <Line>Nevermind, I'm going to move up to F3, and it looks like my hover help problems</Line>
          <Line>were fixed with this fix.  Thanks.</Line>
          <Line>Just moved up to GM1 build, and this bug is back again!</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="10">
        <Lines>
          <Line>1. Does my workaround sound good?</Line>
          <Line />
          <Line>2. I am concerned about decreased performance due to the call to</Line>
          <Line>TextHoverManager.computeArea(..) after checking ITextHover.getHoverRegion(..) !</Line>
          <Line>= null.  Is there some better solution/workaround?</Line>
          <Line />
          <Line>3. Should I open a new defect or continue discussion in this defect since it</Line>
          <Line>sounds like the fix for this defect will be different than it was before?</Line>
          <Line />
          <Line>4. Is it still very likely that your fix will not make it into v2.0?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>From Stable F2 Build

In a java file in Java Editor.  Move the mouse to the whitespace at the end of 
the file..like the lower-right-most region of the java file.  Stay there for 
about 3 secs or so, then mouse over some text in the java file where you would 
expect hover help.  The hover help no longer works for the file.  I tried 
toggling the hover help button on/off/on, switching to other editors then back, 
none of those methods seem to bring the hoverhelp back on.  I need to close and 
reopen the file to get hover help back.
can reproduce. 
JUnit setup
1) create CU T.java
package junit.framework;

public class T {
	TestCase t;
	
}

2) move the mouse cursor after the close brace of the class as described below.
Reviewed by Erich.
I added the hover help capability to my own custom-made source editor/viewer.  
In general, whenever I hover over any whitespace, not just the end of the file, 
I noticed hoverhelp stopped working.  (My hover help used to work before F2)  
Will this fix probably fix that problem as well?  If so, could you describe the 
fix and is this a fix that can be made into a patch for F2?  (I would like to 
stay on the F2 base and provide a temporary patch till moving up to F3)  Thanks.
Verified. TB, but leaving as resolved fixed for further discussion
Nevermind, I'm going to move up to F3, and it looks like my hover help problems 
were fixed with this fix.  Thanks.
Just moved up to GM1 build, and this bug is back again!

Within F3, bug has been "resolved" by an improper implementation that has been 
fixed for F4. This was (almost) undetectable. Thus, the problem is back.
I don't think the fix will make it into 2.0

Created attachment 1597
patch for TextViewerHoverManager
i wanted to add another case where hover help fails (that is related to this 
defect/fix)  there was a bugzilla defect #19719 stating that hover help stopped 
working after you turned it on then off.  This problem also came back.  If you 
turn hoverhelp off, hover over text in the file, then turn hoverhelp back on, 
hoverhelp still doesn't work.
I had originally discovered this problem because my ITextHover stopped working 
every time I hovered over whitespace, not just at the end of the file, like 
Java's hover, so this defect was more detectable for me.  Since I can only 
build off of eclipse's stable builds, I cannot put in your patch for 
TextViewerHoverManager.  I have, however, come up with a workaround.  
   I noticed that hoverhelp would stop working when I returned null in 
ITextHover.getHoverRegion(viewer, offset), which is what I return when hovering 
over whitespace.  As a workaround, rather than returning null, I will instead 
return a region where offset=offset &amp; length=0 in ITextHover.getHoverRegion(..)

Questions:
1. Does my workaround sound good?

2. I am concerned about decreased performance due to the call to 
TextHoverManager.computeArea(..) after checking ITextHover.getHoverRegion(..) !
= null.  Is there some better solution/workaround?

3. Should I open a new defect or continue discussion in this defect since it 
sounds like the fix for this defect will be different than it was before?

4. Is it still very likely that your fix will not make it into v2.0?

Thanks.
Patch applied in the 2.0.1 and the 2.1 stream.
verified on 2.0.1 build 20020821</WithStack>
    <WithOutStack>From Stable F2 Build

In a java file in Java Editor.  Move the mouse to the whitespace at the end of 
the file..like the lower-right-most region of the java file.  Stay there for 
about 3 secs or so, then mouse over some text in the java file where you would 
expect hover help.  The hover help no longer works for the file.  I tried 
toggling the hover help button on/off/on, switching to other editors then back, 
none of those methods seem to bring the hoverhelp back on.  I need to close and 
reopen the file to get hover help back.
can reproduce. 
JUnit setup
1) create CU T.java
package junit.framework;

public class T {
	TestCase t;
	
}

2) move the mouse cursor after the close brace of the class as described below.
Reviewed by Erich.
I added the hover help capability to my own custom-made source editor/viewer.  
In general, whenever I hover over any whitespace, not just the end of the file, 
I noticed hoverhelp stopped working.  (My hover help used to work before F2)  
Will this fix probably fix that problem as well?  If so, could you describe the 
fix and is this a fix that can be made into a patch for F2?  (I would like to 
stay on the F2 base and provide a temporary patch till moving up to F3)  Thanks.
Verified. TB, but leaving as resolved fixed for further discussion
Nevermind, I'm going to move up to F3, and it looks like my hover help problems 
were fixed with this fix.  Thanks.
Just moved up to GM1 build, and this bug is back again!

Within F3, bug has been "resolved" by an improper implementation that has been 
fixed for F4. This was (almost) undetectable. Thus, the problem is back.
I don't think the fix will make it into 2.0

Created attachment 1597
patch for TextViewerHoverManager
i wanted to add another case where hover help fails (that is related to this 
defect/fix)  there was a bugzilla defect #19719 stating that hover help stopped 
working after you turned it on then off.  This problem also came back.  If you 
turn hoverhelp off, hover over text in the file, then turn hoverhelp back on, 
hoverhelp still doesn't work.
I had originally discovered this problem because my ITextHover stopped working 
every time I hovered over whitespace, not just at the end of the file, like 
Java's hover, so this defect was more detectable for me.  Since I can only 
build off of eclipse's stable builds, I cannot put in your patch for 
TextViewerHoverManager.  I have, however, come up with a workaround.  
   I noticed that hoverhelp would stop working when I returned null in 
ITextHover.getHoverRegion(viewer, offset), which is what I return when hovering 
over whitespace.  As a workaround, rather than returning null, I will instead 
return a region where offset=offset &amp; length=0 in ITextHover.getHoverRegion(..)

Questions:
1. Does my workaround sound good?

2. I am concerned about decreased performance due to the call to 
TextHoverManager.computeArea(..) after checking ITextHover.getHoverRegion(..) !
= null.  Is there some better solution/workaround?

3. Should I open a new defect or continue discussion in this defect since it 
sounds like the fix for this defect will be different than it was before?

4. Is it still very likely that your fix will not make it into v2.0?

Thanks.
Patch applied in the 2.0.1 and the 2.1 stream.
verified on 2.0.1 build 20020821</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19687" />
    <CreationDate amount="2002-06-07 17:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="critical" />
    <Summery>Preferences not working with import/export</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>- Added/Removed classpath variables</Line>
          <Line>Java&gt;JUnit</Line>
          <Line>- Show the Junit results</Line>
          <Line>- Removed stack filter patterns</Line>
          <Line>Java&gt;Templates</Line>
          <Line>- New, Edited, Removed</Line>
          <Line>&gt;Java&gt;Classpath Variables</Line>
          <Line>&gt; - Added/Removed classpath variables</Line>
          <Line>they are persisted by JDT core in a custom store. Could be migrated to use the</Line>
          <Line>preference store.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build F2

The following preferences were not transfered from one workspace to another 
using the export/import preferences feature.

Java&gt;Classpath Variables
 - Added/Removed classpath variables
Java&gt;JUnit
 - Show the Junit results
 - Removed stack filter patterns
Java&gt;Templates
 - New, Edited, Removed
&gt;Java&gt;Classpath Variables
&gt; - Added/Removed classpath variables
they are persisted by JDT core in a custom store. Could be migrated to use the 
preference store. 

&gt;Java&gt;JUnit
&gt; - Show the Junit results
&gt; - Removed stack filter patterns
works for me

&gt;Java&gt;Templates
&gt; - New, Edited, Removed
templates are stored in a separate xml file that can be imported/exported. No 
action planned on this item.

Moving bug to JDT Core for considereing moving the persisted class path 
variables to the preference store.
We should store their values into the preference store only, however read them 
from persistent properties if any... this way, gradually there would be none 
left.
Each variable is now persisted as a separate preference, e.g.:
org.eclipse.jdt.core.classpathVariable.JRE_LIB=d:\rt.jar

Fixed
I started a new empty workspace, added a new classpath variable and exported 
the variables... the generated file is empty. Importing the 'variables' from 
this file, deleted all my existing variables.
Need to ensure your pref page saves the preferences when it is OK'ed.
Core has an F3 PR for losing your settings.

This is a consequence of bug 19885, since platform may fail saving preferences 
if plugin state folder doesn't preexist. 

Added protection in JavaCore startup code.
Fixed
Verified.</WithStack>
    <WithOutStack>Build F2

The following preferences were not transfered from one workspace to another 
using the export/import preferences feature.

Java&gt;Classpath Variables
 - Added/Removed classpath variables
Java&gt;JUnit
 - Show the Junit results
 - Removed stack filter patterns
Java&gt;Templates
 - New, Edited, Removed
&gt;Java&gt;Classpath Variables
&gt; - Added/Removed classpath variables
they are persisted by JDT core in a custom store. Could be migrated to use the 
preference store. 

&gt;Java&gt;JUnit
&gt; - Show the Junit results
&gt; - Removed stack filter patterns
works for me

&gt;Java&gt;Templates
&gt; - New, Edited, Removed
templates are stored in a separate xml file that can be imported/exported. No 
action planned on this item.

Moving bug to JDT Core for considereing moving the persisted class path 
variables to the preference store.
We should store their values into the preference store only, however read them 
from persistent properties if any... this way, gradually there would be none 
left.
Each variable is now persisted as a separate preference, e.g.:
org.eclipse.jdt.core.classpathVariable.JRE_LIB=d:\rt.jar

Fixed
I started a new empty workspace, added a new classpath variable and exported 
the variables... the generated file is empty. Importing the 'variables' from 
this file, deleted all my existing variables.
Need to ensure your pref page saves the preferences when it is OK'ed.
Core has an F3 PR for losing your settings.

This is a consequence of bug 19885, since platform may fail saving preferences 
if plugin state folder doesn't preexist. 

Added protection in JavaCore startup code.
Fixed
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19688" />
    <CreationDate amount="2002-06-07 17:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="critical" />
    <Summery>Preferences not working with import/export</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="13">
        <Lines>
          <Line>- Added, Removed</Line>
          <Line>Plug-In Devlopment&gt;Target Platform</Line>
          <Line>- another compatible application</Line>
          <Line>- Application Location</Line>
          <Line>- Selection</Line>
          <Line>What can I do about it?</Line>
          <Line>Ensure that these settings are saved in and read from your plug-in's</Line>
          <Line>preference store (if possible).</Line>
          <Line>Ah, now I figured out. The settings listed below are saved in PDE Core settings</Line>
          <Line>(not a preference store) because PDE Core routines and builders must be able to</Line>
          <Line>access them without upward references to PDE UI. We had a lot of problems from</Line>
          <Line>running UI code during builds or activating UI plug-in triggered by core plug-</Line>
          <Line>ins.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build F2

The following preferences were not transfered from one workspace to another 
using the export/import preferences feature.

Plug-In Devlopment&gt;Source Code Location
 - Added, Removed
Plug-In Devlopment&gt;Target Platform
 - another compatible application
 - Application Location
 - Selection
What can I do about it?
Ensure that these settings are saved in and read from your plug-in's 
preference store (if possible).
Ah, now I figured out. The settings listed below are saved in PDE Core settings 
(not a preference store) because PDE Core routines and builders must be able to 
access them without upward references to PDE UI. We had a lot of problems from 
running UI code during builds or activating UI plug-in triggered by core plug-
ins.

How do you transfer preferences that are affecting core settings in the UI? 
Dual book-keeping is dangerous.
I have just found out that preference store has been moved from 
AbstractUIPlugin to Plugin. This would make things much easier if we knew about 
this earlier. We had to use our own file to store and retreive values because 
we had to extend Plugin in PDECore and had to have access to them.

For 2.0, these values will not be copied. After 2.0, we will rework PDE core to 
use moved preference store instead of our own settings. 

We will document this in the README.
This support was mentioned on the core mailing list in mid April.
http://dev.eclipse.org/mhonarc/lists/platform-core-dev/msg00114.html

Fixed.</WithStack>
    <WithOutStack>Build F2

The following preferences were not transfered from one workspace to another 
using the export/import preferences feature.

Plug-In Devlopment&gt;Source Code Location
 - Added, Removed
Plug-In Devlopment&gt;Target Platform
 - another compatible application
 - Application Location
 - Selection
What can I do about it?
Ensure that these settings are saved in and read from your plug-in's 
preference store (if possible).
Ah, now I figured out. The settings listed below are saved in PDE Core settings 
(not a preference store) because PDE Core routines and builders must be able to 
access them without upward references to PDE UI. We had a lot of problems from 
running UI code during builds or activating UI plug-in triggered by core plug-
ins.

How do you transfer preferences that are affecting core settings in the UI? 
Dual book-keeping is dangerous.
I have just found out that preference store has been moved from 
AbstractUIPlugin to Plugin. This would make things much easier if we knew about 
this earlier. We had to use our own file to store and retreive values because 
we had to extend Plugin in PDECore and had to have access to them.

For 2.0, these values will not be copied. After 2.0, we will rework PDE core to 
use moved preference store instead of our own settings. 

We will document this in the README.
This support was mentioned on the core mailing list in mid April.
http://dev.eclipse.org/mhonarc/lists/platform-core-dev/msg00114.html

Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19689" />
    <CreationDate amount="2002-06-07 18:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>FTP upload fails after one file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I'm using the team feature.  I set up a target site to an FTP account that I 
have.  When I say Team -&gt; Upload, it begins the upload process.  However it, 
fails after one file.  It creates the directory structure
&lt;root&gt;/investor/reminders and adds the first file Alerts.class (it would be 
nice it if ignored class files).  Then I get an "550: investor file exists" and 
the upload stops.

I'm using JDK 1.3.1-b24 and the F2 release of Eclipse on Windows XP.
This just happend to me too. On the LIST command some servers (such as our test 
server) return the full path of a file while others just return the name. 
Currently, we only handle the first case.
Actually, after more investigation, it appears the problem is that servers 
respond differently to the same situation. Some servers return a code of 521 if 
the directory exists when you try to create it while others return 550. We were 
trying to be smart about creating parents that didn't exist when uploading 
resources so we made use of the return codes to help us out.
Fixed and verified by James</WithStack>
    <WithOutStack>I'm using the team feature.  I set up a target site to an FTP account that I 
have.  When I say Team -&gt; Upload, it begins the upload process.  However it, 
fails after one file.  It creates the directory structure
&lt;root&gt;/investor/reminders and adds the first file Alerts.class (it would be 
nice it if ignored class files).  Then I get an "550: investor file exists" and 
the upload stops.

I'm using JDK 1.3.1-b24 and the F2 release of Eclipse on Windows XP.
This just happend to me too. On the LIST command some servers (such as our test 
server) return the full path of a file while others just return the name. 
Currently, we only handle the first case.
Actually, after more investigation, it appears the problem is that servers 
respond differently to the same situation. Some servers return a code of 521 if 
the directory exists when you try to create it while others return 550. We were 
trying to be smart about creating parents that didn't exist when uploading 
resources so we made use of the return codes to help us out.
Fixed and verified by James</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19690" />
    <CreationDate amount="2002-06-07 18:15:00 -0400" />
    <DupId amount="19369" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>FTP Target sites in Team</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I used the rightclick -&gt; Team -&gt; Target Sites to set up an FTP account to 
upload my project to.  However, I typed in the password wrong.  There was no 
way to modify it after the fact.  It would be nice to be able to delete and 
edit target sites that are already in the list.
This bugs me too :)


*** This bug has been marked as a duplicate of 19369 ***</WithStack>
    <WithOutStack>I used the rightclick -&gt; Team -&gt; Target Sites to set up an FTP account to 
upload my project to.  However, I typed in the password wrong.  There was no 
way to modify it after the fact.  It would be nice to be able to delete and 
edit target sites that are already in the list.
This bugs me too :)


*** This bug has been marked as a duplicate of 19369 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19691" />
    <CreationDate amount="2002-06-07 18:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="critical" />
    <Summery>[Team UI] Preferences not working with import/export</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- Use Incoming/Outgoing</Line>
          <Line>Team&gt;File Content</Line>
          <Line>- Add, Remove, Change</Line>
          <Line>Team&gt;Ignored Resources</Line>
          <Line>- Add, Remove, Selected</Line>
          <Line>Please consider this for F3, or it will diminish the usefulness of the</Line>
          <Line>import/export feature.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build F2

The following preferences were not transfered from one workspace to another 
using the export/import preferences feature.

Ensure that these settings are saved in and read from your plug-in's 
preference store (if possible).

Team
 - Use Incoming/Outgoing
Team&gt;File Content
 - Add, Remove, Change
Team&gt;Ignored Resources
 - Add, Remove, Selected
Please consider this for F3, or it will diminish the usefulness of the 
import/export feature.

Use Incoming/Outgoing transfered fine for me. Checked the export file and
verified that the preference is present.

Discussed with Kevin M; File Content and Ignored Resources won't be put in for F3.

Moving to future.
reopening for remaining work
For 2.1 we should support storing/retrieving of ignore, text/bin.


*** Bug 16334 has been marked as a duplicate of this bug. ***
I believe the approach for persisting ASCII/Binary and ignore patterns that is 
described in bug 16334 is more appropriate because these are not really 
preferences. This apporach advocates a preference which identifies a single 
file that persists these settings. Only changes made by the user should be 
placed in this file (i.e. either additions or changes to entires contributed by 
plugins).
*** Bug 28715 has been marked as a duplicate of this bug. ***
Created attachment 3164
Patch for ignores
Patch needs to be backwards compatible
Created attachment 3252
Better version

This patch addresses two deficiencies:	(1) backward compatibility with
state-based ignores, and (2) saving the "enabled" state of plugin-defined
ignores.
Created attachment 3283
Same change for file types
Fix released to HEAD</WithStack>
    <WithOutStack>Build F2

The following preferences were not transfered from one workspace to another 
using the export/import preferences feature.

Ensure that these settings are saved in and read from your plug-in's 
preference store (if possible).

Team
 - Use Incoming/Outgoing
Team&gt;File Content
 - Add, Remove, Change
Team&gt;Ignored Resources
 - Add, Remove, Selected
Please consider this for F3, or it will diminish the usefulness of the 
import/export feature.

Use Incoming/Outgoing transfered fine for me. Checked the export file and
verified that the preference is present.

Discussed with Kevin M; File Content and Ignored Resources won't be put in for F3.

Moving to future.
reopening for remaining work
For 2.1 we should support storing/retrieving of ignore, text/bin.


*** Bug 16334 has been marked as a duplicate of this bug. ***
I believe the approach for persisting ASCII/Binary and ignore patterns that is 
described in bug 16334 is more appropriate because these are not really 
preferences. This apporach advocates a preference which identifies a single 
file that persists these settings. Only changes made by the user should be 
placed in this file (i.e. either additions or changes to entires contributed by 
plugins).
*** Bug 28715 has been marked as a duplicate of this bug. ***
Created attachment 3164
Patch for ignores
Patch needs to be backwards compatible
Created attachment 3252
Better version

This patch addresses two deficiencies:	(1) backward compatibility with
state-based ignores, and (2) saving the "enabled" state of plugin-defined
ignores.
Created attachment 3283
Same change for file types
Fix released to HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19692" />
    <CreationDate amount="2002-06-07 18:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="major" />
    <Summery>[CVS CVSNT] Eclipse should detect use of a repository prefix</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I'm using cvsnt as my cvs server, version 1.11.1.3 build 57d.  Eclipse works 
fine with the respository.

However, if I use the command-line cvs client to check out the project 
somewhere else, modify a file, and then commit cvs, Eclipse will break.  When I 
try to Synchronize with the Repository, everything works fine until it comes to 
the modified file, then it says "An error has occured processing file 
&lt;filename&gt;".  The same message is in the .log file.

I'm using the F2 build with Java 1.3.1 on WinXP.
Could you please attach the log file. It may contain more specific information 
that will help us determine the problem.
cvsnt unsupported.

If we receive more info we might be able to investigate, but unlikely in 
remaining 2.0 timeframe.
Here's my log file contents.  I checked out the project from a command line 
using :pserver:user@machine:/Repository.  I modified a file and did a cvs 
commit.  I deleted my .log file, then started Eclipse, right-clicked on my 
project and said Team -&gt; Synchronize with Repository.  Here's what was left in 
the log file:

!SESSION Jun 10, 2002 08:23:14.584 ---------------------------------------------
java.version=1.3.1
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:D:/eclipse/
!ENTRY org.eclipse.team.cvs.core 4 -6 Jun 10, 2002 08:23:14.584
!MESSAGE An error has occurred processing 
file 'D:/CVS/Repository/Projects/Reminders/test/investor/reminders/TestCompany.j
ava 1.13'

We now have time to investigate further.
This is the old repository profix problem again (see bug 21349). When using 
Eclipse with CVSNT, the CVSNT server must be configured to use the full path 
name and NOT a repository prefix. I'm not sure if there is anything we can do 
from the Eclipse end to fix the problem but I'll try to come up with something 
since this happens quite a bit.
At least we could detect the case where the server is CVSNT and a prefix is 
being used and warn the user.
Changed title from "CVS problems with externally modified files"
*** Bug 24151 has been marked as a duplicate of this bug. ***
Fix released to HEAD.

This fix will detect the use of a repository pefix and warn the user that this 
is incompatible with some Eclipse operations. The user can still choose to keep 
the location.</WithStack>
    <WithOutStack>I'm using cvsnt as my cvs server, version 1.11.1.3 build 57d.  Eclipse works 
fine with the respository.

However, if I use the command-line cvs client to check out the project 
somewhere else, modify a file, and then commit cvs, Eclipse will break.  When I 
try to Synchronize with the Repository, everything works fine until it comes to 
the modified file, then it says "An error has occured processing file 
&lt;filename&gt;".  The same message is in the .log file.

I'm using the F2 build with Java 1.3.1 on WinXP.
Could you please attach the log file. It may contain more specific information 
that will help us determine the problem.
cvsnt unsupported.

If we receive more info we might be able to investigate, but unlikely in 
remaining 2.0 timeframe.
Here's my log file contents.  I checked out the project from a command line 
using :pserver:user@machine:/Repository.  I modified a file and did a cvs 
commit.  I deleted my .log file, then started Eclipse, right-clicked on my 
project and said Team -&gt; Synchronize with Repository.  Here's what was left in 
the log file:

!SESSION Jun 10, 2002 08:23:14.584 ---------------------------------------------
java.version=1.3.1
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:D:/eclipse/
!ENTRY org.eclipse.team.cvs.core 4 -6 Jun 10, 2002 08:23:14.584
!MESSAGE An error has occurred processing 
file 'D:/CVS/Repository/Projects/Reminders/test/investor/reminders/TestCompany.j
ava 1.13'

We now have time to investigate further.
This is the old repository profix problem again (see bug 21349). When using 
Eclipse with CVSNT, the CVSNT server must be configured to use the full path 
name and NOT a repository prefix. I'm not sure if there is anything we can do 
from the Eclipse end to fix the problem but I'll try to come up with something 
since this happens quite a bit.
At least we could detect the case where the server is CVSNT and a prefix is 
being used and warn the user.
Changed title from "CVS problems with externally modified files"
*** Bug 24151 has been marked as a duplicate of this bug. ***
Fix released to HEAD.

This fix will detect the use of a repository pefix and warn the user that this 
is incompatible with some Eclipse operations. The user can still choose to keep 
the location.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19693" />
    <CreationDate amount="2002-06-07 18:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Slow-to-evaluate conditional breakpoint causes UI problems</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="441" end="994" />
        <code>public class InfiniteLoop {
     
public static void main(String[] args) {
         (new InfiniteLoop()).loop();
     }
     public void 
loop() {
         int i = 0;
         while (true) {
              System.out.println("Looping " + i); // Set bp here
              
i++;
              try {
                  Thread.sleep(1000);
              } catch (InterruptedException e) {
              }
         }
     }    
     public 
int slowIntFinder() {
		try {
			Thread.sleep(2000);
		} catch (InterruptedException 
e) {
		}
     	return 1;
     }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Debug the following program with a conditional breakpoint where indicated.  Set the condition to 
"slowIntFinder() == 2".  Debug.  Sometimes, you see the main thread expanded with stack frames 
shown, even though the program never actually suspends.  Other times, the overlay on the main 
thread icon oscillates between 'paused' and 'running', causing the DebugView actions to change 
their enabled state when the main thread is selected.


public class InfiniteLoop {
     
public static void main(String[] args) {
         (new InfiniteLoop()).loop();
     }
     public void 
loop() {
         int i = 0;
         while (true) {
              System.out.println("Looping " + i); // Set bp here
              
i++;
              try {
                  Thread.sleep(1000);
              } catch (InterruptedException e) {
              }
         }
     }    
     public 
int slowIntFinder() {
		try {
			Thread.sleep(2000);
		} catch (InterruptedException 
e) {
		}
     	return 1;
     }
}
The fact that the thread shows up as suspended at startup is a known issue 
(can't find the old bug report now).

The fact that the thread updates for long evaluations is a feature. Without 
this updating, there would be no way for the user to know that a thread was 
stuck evaluating a conditional breakpoint. The UI updating only occurs after a 
timeout to avoid flicker.

Move to close.
Agreed, this is actually working as designed. The thread hits the breakpoint, 
and shows as "suspended", but the condition evals to false, so the thread 
resumes. The eval takes longer than the "timtout", so it moves from suspended 
to evaluating.

It might be nice to avoid the "suspended" label until we know the thread will 
suspend, but do not want to change this now. Marking as deferred. 
This actually works (even) better now. The thread label changes from "running" 
to "evaluating", and never suspends. Opening to mark as fixed.
Fixed.
Verified.</WithStack>
    <WithOutStack>Debug the following program with a conditional breakpoint where indicated.  Set the condition to 
"slowIntFinder() == 2".  Debug.  Sometimes, you see the main thread expanded with stack frames 
shown, even though the program never actually suspends.  Other times, the overlay on the main 
thread icon oscillates between 'paused' and 'running', causing the DebugView actions to change 
their enabled state when the main thread is selected.


public class InfiniteLoop {
     
public static void main(String[] args) {
         (new InfiniteLoop()).loop();
     }
     public void 
loop() {
         int i = 0;
         while (true) {
              System.out.println("Looping " + i); // Set bp here
              
i++;
              try {
                  Thread.sleep(1000);
              } catch (InterruptedException e) {
              }
         }
     }    
     public 
int slowIntFinder() {
		try {
			Thread.sleep(2000);
		} catch (InterruptedException 
e) {
		}
     	return 1;
     }
}
The fact that the thread shows up as suspended at startup is a known issue 
(can't find the old bug report now).

The fact that the thread updates for long evaluations is a feature. Without 
this updating, there would be no way for the user to know that a thread was 
stuck evaluating a conditional breakpoint. The UI updating only occurs after a 
timeout to avoid flicker.

Move to close.
Agreed, this is actually working as designed. The thread hits the breakpoint, 
and shows as "suspended", but the condition evals to false, so the thread 
resumes. The eval takes longer than the "timtout", so it moves from suspended 
to evaluating.

It might be nice to avoid the "suspended" label until we know the thread will 
suspend, but do not want to change this now. Marking as deferred. 
This actually works (even) better now. The thread label changes from "running" 
to "evaluating", and never suspends. Opening to mark as fixed.
Fixed.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19694" />
    <CreationDate amount="2002-06-07 18:50:00 -0400" />
    <DupId amount="18629" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Launch Configurations] Dialog box lock-up</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>(1) It is not possible to mouse-click any of the visible buttons. (ESC and</Line>
          <Line>return work, however.)</Line>
          <Line>(2) eclipse blocks other applications from grabbing the focus while this dialog</Line>
          <Line>is displayed.</Line>
          <Line>cannot reproduce, can you?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Select a launch configuration under Java Application or under JUnit.

Go to the arguments tab, and edit the VM arguments. (I didn't test the Program
arguments.)

Select a different launch configuration.

A dialog box appears, 'The configuration "blah" has unsaved changes. Do you wish
to save them.'

Problems:
(1) It is not possible to mouse-click any of the visible buttons. (ESC and
return work, however.)
(2) eclipse blocks other applications from grabbing the focus while this dialog
is displayed.
cannot reproduce, can you?

moving to platform-debug
Eric...which build are you using?

Jared...can you take a look at this one...see if it is a gtk problem?


*** This bug has been marked as a duplicate of 18629 ***</WithStack>
    <WithOutStack>Select a launch configuration under Java Application or under JUnit.

Go to the arguments tab, and edit the VM arguments. (I didn't test the Program
arguments.)

Select a different launch configuration.

A dialog box appears, 'The configuration "blah" has unsaved changes. Do you wish
to save them.'

Problems:
(1) It is not possible to mouse-click any of the visible buttons. (ESC and
return work, however.)
(2) eclipse blocks other applications from grabbing the focus while this dialog
is displayed.
cannot reproduce, can you?

moving to platform-debug
Eric...which build are you using?

Jared...can you take a look at this one...see if it is a gtk problem?


*** This bug has been marked as a duplicate of 18629 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19695" />
    <CreationDate amount="2002-06-07 19:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[JUnit] (post 2.0) Support iterative method+testmethod development</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Provide a wizard which compares methods in class Foo with corresponding
testMethods in class FooTest.

Identifies methods in Foo (preferably only public methods which don't override a
superclass' method) for which there is no test in FooTest.

Provides checkboxes of the methods above, and on "OK" generates testMethod stubs
in FooTest.

(Alternative pipe dream: A JUnit perspective which monitors constraints
established for a project, warns of deviations from those constraints, and
provides wizards to help bring things back into line.  Example constraint: Every
public method in com.mycom.* must have a corresponding test method in test.mycom.*)
*** Bug 19696 has been marked as a duplicate of this bug. ***
yes - but not for 2.0
Chaning state from assigned later to resolved later. Assigned later got 
introduced by the last bug conversion and is not a supported Eclipse bug state.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Provide a wizard which compares methods in class Foo with corresponding
testMethods in class FooTest.

Identifies methods in Foo (preferably only public methods which don't override a
superclass' method) for which there is no test in FooTest.

Provides checkboxes of the methods above, and on "OK" generates testMethod stubs
in FooTest.

(Alternative pipe dream: A JUnit perspective which monitors constraints
established for a project, warns of deviations from those constraints, and
provides wizards to help bring things back into line.  Example constraint: Every
public method in com.mycom.* must have a corresponding test method in test.mycom.*)
*** Bug 19696 has been marked as a duplicate of this bug. ***
yes - but not for 2.0
Chaning state from assigned later to resolved later. Assigned later got 
introduced by the last bug conversion and is not a supported Eclipse bug state.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19696" />
    <CreationDate amount="2002-06-07 19:08:00 -0400" />
    <DupId amount="19695" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[JUnit] (post 2.0) Support iterative method+testmethod development</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Provide a wizard which compares methods in class Foo with corresponding
testMethods in class FooTest.

Identifies methods in Foo (preferably only public methods which don't override a
superclass' method) for which there is no test in FooTest.

Provides checkboxes of the methods above, and on "OK" generates testMethod stubs
in FooTest.

(Alternative pipe dream: A JUnit perspective which monitors constraints
established for a project, warns of deviations from those constraints, and
provides wizards to help bring things back into line.  Example constraint: Every
public method in com.mycom.* must have a corresponding test method in test.mycom.*)
double commit; removing

*** This bug has been marked as a duplicate of 19695 ***</WithStack>
    <WithOutStack>Provide a wizard which compares methods in class Foo with corresponding
testMethods in class FooTest.

Identifies methods in Foo (preferably only public methods which don't override a
superclass' method) for which there is no test in FooTest.

Provides checkboxes of the methods above, and on "OK" generates testMethod stubs
in FooTest.

(Alternative pipe dream: A JUnit perspective which monitors constraints
established for a project, warns of deviations from those constraints, and
provides wizards to help bring things back into line.  Example constraint: Every
public method in com.mycom.* must have a corresponding test method in test.mycom.*)
double commit; removing

*** This bug has been marked as a duplicate of 19695 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19697" />
    <CreationDate amount="2002-06-07 19:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>RepositoryProvider.map() should trigger project description delta</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="singlecomment">
        <location start="129" end="210" />
        <code>//removing the nature would've caused project description delta, so trigger one</code>
      </source_code>
      <source_code type="functioncall">
        <location start="210" end="265" />
        <code>project.setDescription(project.getDescription(), null);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>unmap() was changed to trigger project description deltas, as in the code 
below, and map() should do the same to be consistent.

//removing the nature would've caused project description delta, so trigger one
project.setDescription(project.getDescription(), null);
done</WithStack>
    <WithOutStack>unmap() was changed to trigger project description deltas, as in the code 
below, and map() should do the same to be consistent.

//removing the nature would've caused project description delta, so trigger one
project.setDescription(project.getDescription(), null);
done</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19698" />
    <CreationDate amount="2002-06-07 21:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Source/Format] (post 2.0) Line breaks after /* .. */ comments</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>If the "/*" and "*/" both occur on the same line, it is a Bad Thing for
Source/Format to add line breaks that weren't already present.  /*...*/ comments
are the best way, IMHO, to clarify the indices of multidimensional array, or to
hint the expected type of objects in a collection (prior to the arrival of
generics).

Examples:
  double[/*colorant*/][/*plane*/] alpha;
  Map/*&lt;String,Airport&gt;*/ airports;
Post 2.0
Resurrecting formatter issues in 2.1 stream.
Clearing resolution
*** Bug 21918 has been marked as a duplicate of this bug. ***
We need to clear 2.1 bug reports that won't be addressed before 2.1. The new 
implementation is still in the works. Therefore we cannot include it for 2.1. 
Not enough testing and we need to polish the preferences. This will be address 
for 2.2 as stated in the JDT/Core plan.
Resurrecting for 3.0
Removing milestone of deferred item.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>If the "/*" and "*/" both occur on the same line, it is a Bad Thing for
Source/Format to add line breaks that weren't already present.  /*...*/ comments
are the best way, IMHO, to clarify the indices of multidimensional array, or to
hint the expected type of objects in a collection (prior to the arrival of
generics).

Examples:
  double[/*colorant*/][/*plane*/] alpha;
  Map/*&lt;String,Airport&gt;*/ airports;
Post 2.0
Resurrecting formatter issues in 2.1 stream.
Clearing resolution
*** Bug 21918 has been marked as a duplicate of this bug. ***
We need to clear 2.1 bug reports that won't be addressed before 2.1. The new 
implementation is still in the works. Therefore we cannot include it for 2.1. 
Not enough testing and we need to polish the preferences. This will be address 
for 2.2 as stated in the JDT/Core plan.
Resurrecting for 3.0
Removing milestone of deferred item.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19699" />
    <CreationDate amount="2002-06-07 21:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.4" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[templates] no simple comment context</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Currently, the interior of /* ... */ does not respond to either java or javadoc
templates.  It should be included in one or the other. My preference is javadoc.
agreed to defer
Reopening for 2.1 consideration
"Unassign" PRs because of changes in staffing</WithStack>
    <WithOutStack>Currently, the interior of /* ... */ does not respond to either java or javadoc
templates.  It should be included in one or the other. My preference is javadoc.
agreed to defer
Reopening for 2.1 consideration
"Unassign" PRs because of changes in staffing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19700" />
    <CreationDate amount="2002-06-07 22:11:00 -0400" />
    <DupId amount="18642" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Task List / Console undocking on occasion</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build F2, Windows 2000

The elements of the task view window (console, task view, etc.) can become semi-
undocked on occasion, where they exist in the same location as if they were 
docked, but do not respond resizing of their container ('split pane' segment).  

This seems to happen to me when synchronizing with the repository.  The 
synchronize view appears as an element of the task list window.  I select 'fast 
view' (right click on title bar and select from drop down menu) for the 
synchronize view, then the task view window undocks itself on occasion.  I've 
even had a console window show up that had no title bar.  (I could not get rid 
of it but I could see the task list behind it.)  No .log entries are produced 
when this happens.


*** This bug has been marked as a duplicate of 18642 ***</WithStack>
    <WithOutStack>Build F2, Windows 2000

The elements of the task view window (console, task view, etc.) can become semi-
undocked on occasion, where they exist in the same location as if they were 
docked, but do not respond resizing of their container ('split pane' segment).  

This seems to happen to me when synchronizing with the repository.  The 
synchronize view appears as an element of the task list window.  I select 'fast 
view' (right click on title bar and select from drop down menu) for the 
synchronize view, then the task view window undocks itself on occasion.  I've 
even had a console window show up that had no title bar.  (I could not get rid 
of it but I could see the task list behind it.)  No .log entries are produced 
when this happens.


*** This bug has been marked as a duplicate of 18642 ***</WithOutStack>
  </Bug>
</infozilla-output>

