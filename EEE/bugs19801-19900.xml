<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="19801" />
    <CreationDate amount="2002-06-10 11:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>AntCorePreferences, Type, Tasks could be a public class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>build F2

The AntCorePreferences is an internal class but AntCorePlugin.getPreferences() 
returns an instance of this class. Either the method should be removed from 
the plug-in class or the class should be made public.
Defer after 2.0.
Reopening.
Note that this could be related to the investigative work being done w.r.t. 
having preferences on a pre-project basis.

*** Bug 23409 has been marked as a duplicate of this bug. ***
Note that this also applies to the Task and Type classes.
*** Bug 19937 has been marked as a duplicate of this bug. ***
As well the external tools project makes "illegal" references to these internal 
classes.  See AntPreferencePage, AntTasksPage, AntTypesPage and 
AntPageLabelProvider.
Fixed. Please verify Jared.
Please verify (Luc)
Verified.
Please update the build notes (jared)</WithStack>
    <WithOutStack>build F2

The AntCorePreferences is an internal class but AntCorePlugin.getPreferences() 
returns an instance of this class. Either the method should be removed from 
the plug-in class or the class should be made public.
Defer after 2.0.
Reopening.
Note that this could be related to the investigative work being done w.r.t. 
having preferences on a pre-project basis.

*** Bug 23409 has been marked as a duplicate of this bug. ***
Note that this also applies to the Task and Type classes.
*** Bug 19937 has been marked as a duplicate of this bug. ***
As well the external tools project makes "illegal" references to these internal 
classes.  See AntPreferencePage, AntTasksPage, AntTypesPage and 
AntPageLabelProvider.
Fixed. Please verify Jared.
Please verify (Luc)
Verified.
Please update the build notes (jared)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19802" />
    <CreationDate amount="2002-06-10 11:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>initial index of help never progresses</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When trying to search the help documentation for the first time, Eclipse brings 
up a frame saying "Indexing..." with a progress bar and a percent complete 
label underneath. No matter how long I leave it running, no progress is made. 
The progress bar stays empty and it hangs on 0% complete.

I first saw the problem with the 20020602 build, then upgraded to the 20020610 
build, but the problem is still present.
Jim,

Can you check the content of the following directory
eclipse\workspace\.metadata\.plugins\org.eclipse.help\nl\en_US 
(depending on your locale setting you may see something else, not en_US)
and attach a screenshot of what is there?

Also, try searching from the workbench menu Search-&gt;Help ... and see what you 
get. 

Thanks!
Created attachment 1340
screenshot of eclipse\workspace\.metadata\.plugins\org.eclipse.help\nl\en_US
searching from the workbench menu Search-&gt;Help produces zero results no matter 
what I search for.
It looks like you have some old eclipse driver or that the workspace is 
corrupted.
I'd suggest using one of the latest stable builds, preferably F2.
It looks like you have some really old eclipse driver or that the workspace is 
corrupted.
I'd suggest using one of the latest stable builds, preferably F2.

You can also try removing the .metadata\.plugins\org.eclipse.help directory and 
try again.
removing the .metadata\.plugins\org.eclipse.help directory fixed it. thanks.
I will close the bug then.</WithStack>
    <WithOutStack>When trying to search the help documentation for the first time, Eclipse brings 
up a frame saying "Indexing..." with a progress bar and a percent complete 
label underneath. No matter how long I leave it running, no progress is made. 
The progress bar stays empty and it hangs on 0% complete.

I first saw the problem with the 20020602 build, then upgraded to the 20020610 
build, but the problem is still present.
Jim,

Can you check the content of the following directory
eclipse\workspace\.metadata\.plugins\org.eclipse.help\nl\en_US 
(depending on your locale setting you may see something else, not en_US)
and attach a screenshot of what is there?

Also, try searching from the workbench menu Search-&gt;Help ... and see what you 
get. 

Thanks!
Created attachment 1340
screenshot of eclipse\workspace\.metadata\.plugins\org.eclipse.help\nl\en_US
searching from the workbench menu Search-&gt;Help produces zero results no matter 
what I search for.
It looks like you have some old eclipse driver or that the workspace is 
corrupted.
I'd suggest using one of the latest stable builds, preferably F2.
It looks like you have some really old eclipse driver or that the workspace is 
corrupted.
I'd suggest using one of the latest stable builds, preferably F2.

You can also try removing the .metadata\.plugins\org.eclipse.help directory and 
try again.
removing the .metadata\.plugins\org.eclipse.help directory fixed it. thanks.
I will close the bug then.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19803" />
    <CreationDate amount="2002-06-10 11:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Overview causing a SWTError: No more handles</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Summary:
 * Workbench crashes with "SWTError: No more handles" when trying to pop-up 
overview in a viewer with large contents. The problem seems to concern the size 
of the viewport rather than the number of EditParts within.

Steps to reproduce the bug:
 * extract the contents of the attached zip file to 
ECLIPSE_HOME/workspace/OverviewProblem
 * set up the plug-in project OverviewProblem
 * run the Run-time Workbench
 * open the test view: Show View -&gt; Other -&gt; Bad View
 * click on the Overview tab

The run-time workbench will crash. (If it won't, try to increase the value of 
constant BadView.ITEM_COUNT and restart the run-time workbench.)

I tested this in the F2 build of Eclipse with the latest build of GEF 
(proposal_0604). The problem occurs in the older version of GEF on the M5 
Eclipse build as well.
Created attachment 1337
test case for the bug (a workspace plugin)
Created attachment 1338
the log file produced by the run-time workbench
We will fix this using a tiled update strategy for Thumbnail figure.
Redesigned the Thumbnail to paint incrementally using tiles.</WithStack>
    <WithOutStack>Summary:
 * Workbench crashes with "SWTError: No more handles" when trying to pop-up 
overview in a viewer with large contents. The problem seems to concern the size 
of the viewport rather than the number of EditParts within.

Steps to reproduce the bug:
 * extract the contents of the attached zip file to 
ECLIPSE_HOME/workspace/OverviewProblem
 * set up the plug-in project OverviewProblem
 * run the Run-time Workbench
 * open the test view: Show View -&gt; Other -&gt; Bad View
 * click on the Overview tab

The run-time workbench will crash. (If it won't, try to increase the value of 
constant BadView.ITEM_COUNT and restart the run-time workbench.)

I tested this in the F2 build of Eclipse with the latest build of GEF 
(proposal_0604). The problem occurs in the older version of GEF on the M5 
Eclipse build as well.
Created attachment 1337
test case for the bug (a workspace plugin)
Created attachment 1338
the log file produced by the run-time workbench
We will fix this using a tiled update strategy for Thumbnail figure.
Redesigned the Thumbnail to paint incrementally using tiles.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19804" />
    <CreationDate amount="2002-06-10 11:27:00 -0400" />
    <DupId amount="32688" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Popup menu in java editor margin doesn't work as expected</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Press and hold your right mouse button in the left margin of the java editor
(i.e. where the breakpoints go). Nothing happens. Release the mouse button. The
menu appears.

This is contrary to the standard Motif behaviour of popping the menu up when the
right mouse button is pressed. Other menus in Eclipse do not behave in this way.
The behavior is caused by the following:

The vertical ruler is a composite to which you can dynamically add columns (see 
Java editor preference show/hide line numbers). From a programmer's and user's 
perspective I want to have a single context menu (including all XML contributed 
actions) for all columns. Setting the menu to multiple widgets doesn't work 
also cloning doesn't work. I haven't found another way than managing the menu 
myself. (see CompositeRuler.CompositeRulerCanvas)

SWT does not provide a more abstract notification than mouse up, down etc. I.e. 
I would have to add platform specific code in a layer that does not know 
anything about platforms.

Is there any way to achieve this with SWT?
Kai, why doesn't setting one menu on multiple widgets work?
In order to dyamically show/hide line numbers, the widget showing them is 
created and disposed. When the widget is disposed, the menu is disposed as 
well, "stealing" the menu from the others.
That can be fixed by setting the menu to null before disposing the control.
If this solution works for you, can you take ownership of this PR?
This is not SWT.  Moving to UI.  Does it still apply?
This looks related to the problem reported in 27232.  Assigning for further 
assessment.
Not the same as the gesture-related menu behaviour in the main text editor area.

Fix for 32688 fixes this one as well.


*** This bug has been marked as a duplicate of 32688 ***</WithStack>
    <WithOutStack>Press and hold your right mouse button in the left margin of the java editor
(i.e. where the breakpoints go). Nothing happens. Release the mouse button. The
menu appears.

This is contrary to the standard Motif behaviour of popping the menu up when the
right mouse button is pressed. Other menus in Eclipse do not behave in this way.
The behavior is caused by the following:

The vertical ruler is a composite to which you can dynamically add columns (see 
Java editor preference show/hide line numbers). From a programmer's and user's 
perspective I want to have a single context menu (including all XML contributed 
actions) for all columns. Setting the menu to multiple widgets doesn't work 
also cloning doesn't work. I haven't found another way than managing the menu 
myself. (see CompositeRuler.CompositeRulerCanvas)

SWT does not provide a more abstract notification than mouse up, down etc. I.e. 
I would have to add platform specific code in a layer that does not know 
anything about platforms.

Is there any way to achieve this with SWT?
Kai, why doesn't setting one menu on multiple widgets work?
In order to dyamically show/hide line numbers, the widget showing them is 
created and disposed. When the widget is disposed, the menu is disposed as 
well, "stealing" the menu from the others.
That can be fixed by setting the menu to null before disposing the control.
If this solution works for you, can you take ownership of this PR?
This is not SWT.  Moving to UI.  Does it still apply?
This looks related to the problem reported in 27232.  Assigning for further 
assessment.
Not the same as the gesture-related menu behaviour in the main text editor area.

Fix for 32688 fixes this one as well.


*** This bug has been marked as a duplicate of 32688 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19805" />
    <CreationDate amount="2002-06-10 11:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Bug in SearchResultViewer.java</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>if (actionBars != null)
 actionBars.setGlobalActionHandler(IWorkbenchActionConstants.NEXT,
fShowNextResultAction);
 actionBars.setGlobalActionHandler(IWorkbenchActionConstants.PREVIOUS,
fShowPreviousResultAction);

should have { and } about the two setter lines. Could fail if actionBars is null.
should fix for F3
Fix available in builds &gt; 20020610
Reviewed by EG

Verified. TB</WithStack>
    <WithOutStack>if (actionBars != null)
 actionBars.setGlobalActionHandler(IWorkbenchActionConstants.NEXT,
fShowNextResultAction);
 actionBars.setGlobalActionHandler(IWorkbenchActionConstants.PREVIOUS,
fShowPreviousResultAction);

should have { and } about the two setter lines. Could fail if actionBars is null.
should fix for F3
Fix available in builds &gt; 20020610
Reviewed by EG

Verified. TB</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19806" />
    <CreationDate amount="2002-06-10 11:43:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[GlobalActions] Alt + Enter (File-&gt;Properties) should be more generic</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Alt+Enter is widely used shortcut key to show/edit selected object properties.
It should not be only for "File".

Actually our editor had an (HTML) Attributes menu item in Edit menu and it 
had "Alt+Enter". Now we changed it to "Ctrl+Alt+Enter", but still
I think "Alt+Enter" should not be limited only to "File" object.
Sorry I chose wrong Product.
not a key bindings issue. (key bindings are fully customizable). alt+enter can 
be mapped to any action that properly exposes itself to the key binding 
service. if you are looking for support for the 'Show Properties' action in a 
particular part of eclipse, please log a bug to that part.
Yes, this is NOT key binding issue. (I don't know who assigned this to key 
binding. )

Original my request is "Properties@Alt+Enter" menu should not be under "File" 
menu but it should be under "Edit" menu, and other plugins should be able to 
customize its behaviour.

Please assign this to more appropriate component.
There is a precedent for this.  Windows Explorer has Properties in the File 
menu, but it also operates on non-File objects (e.g. recycle bin, printers, 
network connections).

We have no plans to change the location of the Properties menu item.

I recommend you either use the File / Properties action for HTML Attributes, 
or continue to use a different action with a different accelerator.


Well, then, with 2.1's new keybinding mechanism, can I retarget Alt+Enter key 
to another action based on what view/editor has a focus?
I mean, if Navigator view has a focus, Alt+Enter invokes File-&gt;Properties,
and if our editor has a focus, Alt+Enter invokes our Edit-&gt;Attributes action.

If so, can Eclipse 2.1 remove "Alt+Enter" string from "File-&gt;Properties" menu
if Navigator view loses focus, and add "Alt+Enter" string to our action
if our Editor gets focus?

No, it's not recommended to change the keybinding for global actions depending 
on which view is active.  This would be very surprising to the user.


Then I disagree your dicision.

Appendix B in "Windows User Experience" by Microsoft Press said that
"Alt+Enter's meaning is defined as to display property sheet for current 
selection".

To be a good citizen of Windows environment, "Alt+Enter" should be more 
generic.

And if we can't retarget "Alt+Enter" to another menu item, then "Properties 
Alt+Enter" menu item should be placed to more generic place such as "Edit",
since showing HTML Attributes from "File-&gt;Properties" would also be very 
surprising.

Currently when you choose Edit / HTML Attributes in WSAD you get an Attributes 
view.  It would be confusing to choose Edit / Properties and get a view called 
Attributes.  It would be best if this used the workbench Properties view.
For 2.1, we will leave the Properties action on the File menu.
For 2.2, we will consider moving Properties to the Edit menu, but we feel this 
should only be done if handlers use the workbench Properties view or the 
properties dialog.  If there are reasons why you cannot currently use either of 
these options, we need to understand why and address these deeper limitations.


In my personal opinion, I agree with you. I mean, Page Designer should show 
properties view by Alt+Enter, and Attribute view by Ctl+Alt+Enter.

If I heard different opinion from our team, I will append it.
There is currently no plan to work on this feature
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Alt+Enter is widely used shortcut key to show/edit selected object properties.
It should not be only for "File".

Actually our editor had an (HTML) Attributes menu item in Edit menu and it 
had "Alt+Enter". Now we changed it to "Ctrl+Alt+Enter", but still
I think "Alt+Enter" should not be limited only to "File" object.
Sorry I chose wrong Product.
not a key bindings issue. (key bindings are fully customizable). alt+enter can 
be mapped to any action that properly exposes itself to the key binding 
service. if you are looking for support for the 'Show Properties' action in a 
particular part of eclipse, please log a bug to that part.
Yes, this is NOT key binding issue. (I don't know who assigned this to key 
binding. )

Original my request is "Properties@Alt+Enter" menu should not be under "File" 
menu but it should be under "Edit" menu, and other plugins should be able to 
customize its behaviour.

Please assign this to more appropriate component.
There is a precedent for this.  Windows Explorer has Properties in the File 
menu, but it also operates on non-File objects (e.g. recycle bin, printers, 
network connections).

We have no plans to change the location of the Properties menu item.

I recommend you either use the File / Properties action for HTML Attributes, 
or continue to use a different action with a different accelerator.


Well, then, with 2.1's new keybinding mechanism, can I retarget Alt+Enter key 
to another action based on what view/editor has a focus?
I mean, if Navigator view has a focus, Alt+Enter invokes File-&gt;Properties,
and if our editor has a focus, Alt+Enter invokes our Edit-&gt;Attributes action.

If so, can Eclipse 2.1 remove "Alt+Enter" string from "File-&gt;Properties" menu
if Navigator view loses focus, and add "Alt+Enter" string to our action
if our Editor gets focus?

No, it's not recommended to change the keybinding for global actions depending 
on which view is active.  This would be very surprising to the user.


Then I disagree your dicision.

Appendix B in "Windows User Experience" by Microsoft Press said that
"Alt+Enter's meaning is defined as to display property sheet for current 
selection".

To be a good citizen of Windows environment, "Alt+Enter" should be more 
generic.

And if we can't retarget "Alt+Enter" to another menu item, then "Properties 
Alt+Enter" menu item should be placed to more generic place such as "Edit",
since showing HTML Attributes from "File-&gt;Properties" would also be very 
surprising.

Currently when you choose Edit / HTML Attributes in WSAD you get an Attributes 
view.  It would be confusing to choose Edit / Properties and get a view called 
Attributes.  It would be best if this used the workbench Properties view.
For 2.1, we will leave the Properties action on the File menu.
For 2.2, we will consider moving Properties to the Edit menu, but we feel this 
should only be done if handlers use the workbench Properties view or the 
properties dialog.  If there are reasons why you cannot currently use either of 
these options, we need to understand why and address these deeper limitations.


In my personal opinion, I agree with you. I mean, Page Designer should show 
properties view by Alt+Enter, and Attribute view by Ctl+Alt+Enter.

If I heard different opinion from our team, I will append it.
There is currently no plan to work on this feature
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19807" />
    <CreationDate amount="2002-06-10 12:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>DND in Java outliner should should move elements by default [dnd] [ccp]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>The default action should be "move" instead of "copy" when using the Java
outliner to drag and drop elements inside the same type and modifier keys do not
change the action. This is annoying since it prevents DND from being used to
arrange elements.
please not that move is problematic because of sorters.
we will investigate in a solution for after 2.0
no action for 2.0
Any chance of this being reconsidered for 2.1?
No, unless we get external help to do so.
Chaning state from assigned later to resolved later. Assigned later got 
introduced by the last bug conversion and is not a supported Eclipse bug state.
.
works for me in I20070717-1020
*** Bug 27042 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>The default action should be "move" instead of "copy" when using the Java
outliner to drag and drop elements inside the same type and modifier keys do not
change the action. This is annoying since it prevents DND from being used to
arrange elements.
please not that move is problematic because of sorters.
we will investigate in a solution for after 2.0
no action for 2.0
Any chance of this being reconsidered for 2.1?
No, unless we get external help to do so.
Chaning state from assigned later to resolved later. Assigned later got 
introduced by the last bug conversion and is not a supported Eclipse bug state.
.
works for me in I20070717-1020
*** Bug 27042 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19808" />
    <CreationDate amount="2002-06-10 12:36:00 -0400" />
    <DupId amount="19586" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>core ClassCastException exception in log</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331254956">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason>org.eclipse.core.internal.resources.File</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.core.DeltaProcessor.elementAdded(DeltaProcessor.java:589)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.DeltaProcessor.updateCurrentDeltaAndIndex(DeltaProcessor.java:1152)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.DeltaProcessor.traverseDelta(DeltaProcessor.java(Compiled Code))</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.DeltaProcessor.traverseDelta(DeltaProcessor.java(Compiled Code))</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.DeltaProcessor.processResourceDelta(DeltaProcessor.java:1120)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:1287)</Frame>
          <Frame depth="6">org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java(Compiled Code))</Frame>
          <Frame depth="7">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java(Compiled Code))</Frame>
          <Frame depth="8">org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))</Frame>
          <Frame depth="9">org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java(Compiled Code))</Frame>
          <Frame depth="10">org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:67)</Frame>
          <Frame depth="11">org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:133)</Frame>
          <Frame depth="12">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:741)</Frame>
          <Frame depth="13">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1366)</Frame>
          <Frame depth="14">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:78)</Frame>
          <Frame depth="15">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:299)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)</Frame>
          <Frame depth="17">org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:720)</Frame>
          <Frame depth="18">org.eclipse.pde.internal.ui.wizards.project.ConvertedProjectsPage.finish(ConvertedProjectsPage.java:178)</Frame>
          <Frame depth="19">org.eclipse.pde.internal.ui.wizards.project.ConvertedProjectWizard.performFinish(ConvertedProjectWizard.java:34)</Frame>
          <Frame depth="20">org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:577)</Frame>
          <Frame depth="21">org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:312)</Frame>
          <Frame depth="22">org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:398)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java(Compiled Code))</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="28">org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled Code))</Frame>
          <Frame depth="29">org.eclipse.jface.window.Window.open(Window.java:538)</Frame>
          <Frame depth="30">org.eclipse.ui.actions.NewWizardAction.run(NewWizardAction.java:88)</Frame>
          <Frame depth="31">org.eclipse.jface.action.Action.runWithEvent(Action.java:749)</Frame>
          <Frame depth="32">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="33">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java(Compiled Code))</Frame>
          <Frame depth="34">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))</Frame>
          <Frame depth="35">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="40">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="41">org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)</Frame>
          <Frame depth="42">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="43">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="44">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.basicRun(Main.java:244)</Frame>
          <Frame depth="46">org.eclipse.core.launcher.Main.run(Main.java:693)</Frame>
          <Frame depth="47">org.eclipse.core.launcher.Main.main(Main.java:526)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>running 20020606

java.lang.ClassCastException: org.eclipse.core.internal.resources.File
	at org.eclipse.jdt.internal.core.DeltaProcessor.elementAdded
(DeltaProcessor.java:589)
	at 
org.eclipse.jdt.internal.core.DeltaProcessor.updateCurrentDeltaAndIndex
(DeltaProcessor.java:1152)
	at org.eclipse.jdt.internal.core.DeltaProcessor.traverseDelta
(DeltaProcessor.java(Compiled Code))
	at org.eclipse.jdt.internal.core.DeltaProcessor.traverseDelta
(DeltaProcessor.java(Compiled Code))
	at org.eclipse.jdt.internal.core.DeltaProcessor.processResourceDelta
(DeltaProcessor.java:1120)
	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged
(DeltaProcessor.java:1287)
	at org.eclipse.core.internal.events.NotificationManager$1.run
(NotificationManager.java(Compiled Code))
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.events.NotificationManager.notify
(NotificationManager.java(Compiled Code))
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges
(NotificationManager.java:67)
	at org.eclipse.core.internal.resources.Workspace.broadcastChanges
(Workspace.java:133)
	at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java:741)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1366)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:78)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:299)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:720)
	at 
org.eclipse.pde.internal.ui.wizards.project.ConvertedProjectsPage.finish
(ConvertedProjectsPage.java:178)
	at 
org.eclipse.pde.internal.ui.wizards.project.ConvertedProjectWizard.performFinish
(ConvertedProjectWizard.java:34)
	at org.eclipse.jface.wizard.WizardDialog.finishPressed
(WizardDialog.java:577)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed
(WizardDialog.java:312)
	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:398)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java
(Compiled Code))
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.jface.window.Window.runEventLoop(Window.java(Compiled 
Code))
	at org.eclipse.jface.window.Window.open(Window.java:538)
	at org.eclipse.ui.actions.NewWizardAction.run(NewWizardAction.java:88)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:749)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java(Compiled Code))
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java(Compiled Code))
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java(Compiled Code))
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:244)
	at org.eclipse.core.launcher.Main.run(Main.java:693)
	at org.eclipse.core.launcher.Main.main(Main.java:526)
What did you do to get there ? Seems like a duplicate of bug 19586.

dunno,
seems like 
org.eclipse.pde.internal.ui.wizards.project.ConvertedProjectWizard.performFinish

Closing as duplicate.

*** This bug has been marked as a duplicate of 19586 ***</WithStack>
    <WithOutStack>running 20020606


What did you do to get there ? Seems like a duplicate of bug 19586.

dunno,
seems like 
org.eclipse.pde.internal.ui.wizards.project.ConvertedProjectWizard.performFinish

Closing as duplicate.

*** This bug has been marked as a duplicate of 19586 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19809" />
    <CreationDate amount="2002-06-10 12:37:00 -0400" />
    <DupId amount="19349" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>DebugException in the log</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331254956">
        <Exception>org.eclipse.debug.core.DebugException</Exception>
        <Reason>Thread not suspended, stack frame 
unavailable.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException(JDIDebugElement.java:277)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:235)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame(JDIStackFrame.java(Compiled Code))</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingMethod(JDIStackFrame.java(Compiled Code))</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getDeclaringTypeName(JDIStackFrame.java(Compiled Code))</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getStackFrameText(JDIModelPresentation.java(Compiled Code))</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getText(JDIModelPresentation.java(Compiled Code))</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.LazyModelPresentation.getText(LazyModelPresentation.java(Compiled Code))</Frame>
          <Frame depth="8">org.eclipse.debug.internal.ui.DelegatingModelPresentation.getText(DelegatingModelPresentation.java(Compiled Code))</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java(Compiled Code))</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java(Compiled Code))</Frame>
          <Frame depth="11">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java(Compiled Code))</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java(Compiled Code))</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java(Compiled Code))</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.StructuredViewer$4.run(StructuredViewer.java(Compiled Code))</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java(Compiled Code))</Frame>
          <Frame depth="16">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java(Compiled Code))</Frame>
          <Frame depth="17">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java(Compiled Code))</Frame>
          <Frame depth="18">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java(Compiled Code))</Frame>
          <Frame depth="19">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspendThreadEvent(LaunchViewEventHandler.java(Compiled Code))</Frame>
          <Frame depth="20">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugEvents(LaunchViewEventHandler.java(Compiled Code))</Frame>
          <Frame depth="21">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugEvents(LaunchViewEventHandler.java(Compiled Code))</Frame>
          <Frame depth="22">org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run(AbstractDebugEventHandler.java(Compiled Code))</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Compiled Code))</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(Compiled Code))</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java(Compiled Code))</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)</Frame>
          <Frame depth="29">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="30">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="31">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.basicRun(Main.java:244)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.run(Main.java:693)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.main(Main.java:526)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>running 20020606

org.eclipse.debug.core.DebugException: Thread not suspended, stack frame 
unavailable.
	at 
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException
(JDIDebugElement.java:277)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed
(JDIDebugElement.java:235)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame
(JDIStackFrame.java(Compiled Code))
	at 
org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingMethod
(JDIStackFrame.java(Compiled Code))
	at 
org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getDeclaringTypeName
(JDIStackFrame.java(Compiled Code))
	at 
org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getStackFrameText
(JDIModelPresentation.java(Compiled Code))
	at org.eclipse.jdt.internal.debug.ui.JDIModelPresentation.getText
(JDIModelPresentation.java(Compiled Code))
	at org.eclipse.debug.internal.ui.LazyModelPresentation.getText
(LazyModelPresentation.java(Compiled Code))
	at org.eclipse.debug.internal.ui.DelegatingModelPresentation.getText
(DelegatingModelPresentation.java(Compiled Code))
	at org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java
(Compiled Code))
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem
(AbstractTreeViewer.java(Compiled Code))
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java(Compiled Code))
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java(Compiled Code))
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java(Compiled Code))
	at org.eclipse.jface.viewers.StructuredViewer$4.run
(StructuredViewer.java(Compiled Code))
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java(Compiled Code))
	at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java(Compiled Code))
	at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java(Compiled Code))
	at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java(Compiled Code))
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspen
dThreadEvent(LaunchViewEventHandler.java(Compiled Code))
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugE
vents(LaunchViewEventHandler.java(Compiled Code))
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugE
vents(LaunchViewEventHandler.java(Compiled Code))
	at org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run
(AbstractDebugEventHandler.java(Compiled Code))
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:244)
	at org.eclipse.core.launcher.Main.run(Main.java:693)
	at org.eclipse.core.launcher.Main.main(Main.java:526)
We've had this filed against us many times. We handle the exception well, but 
then log it. The only question is, should we be logging this exception?
Marking as dup.

*** This bug has been marked as a duplicate of 19349 ***</WithStack>
    <WithOutStack>running 20020606


We've had this filed against us many times. We handle the exception well, but 
then log it. The only question is, should we be logging this exception?
Marking as dup.

*** This bug has been marked as a duplicate of 19349 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19810" />
    <CreationDate amount="2002-06-10 12:39:00 -0400" />
    <DupId amount="19555" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ConcurrentModificationException in AnnotationModel</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331254956">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.HashMap$HashIterator.next(HashMap.java(Compiled Code))</Frame>
          <Frame depth="1">org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator(AnnotationModel.java(Compiled Code))</Frame>
          <Frame depth="2">org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator(AnnotationModel.java(Compiled Code))</Frame>
          <Frame depth="3">org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator(AnnotationModel.java(Compiled Code))</Frame>
          <Frame depth="4">org.eclipse.jdt.ui.ProblemsLabelDecorator.getErrorTicksFromWorkingCopy(ProblemsLabelDecorator.java(Compiled Code))</Frame>
          <Frame depth="5">org.eclipse.jdt.ui.ProblemsLabelDecorator.computeAdornmentFlags(ProblemsLabelDecorator.java(Compiled Code))</Frame>
          <Frame depth="6">org.eclipse.jdt.ui.ProblemsLabelDecorator.decorateImage(ProblemsLabelDecorator.java(Compiled Code))</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.getImage(JavaUILabelProvider.java(Compiled Code))</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.DecoratingLabelProvider.getImage(DecoratingLabelProvider.java(Compiled Code))</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java(Compiled Code))</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java(Compiled Code))</Frame>
          <Frame depth="11">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java(Compiled Code))</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java(Compiled Code))</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java(Compiled Code))</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java(Compiled Code))</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged(AbstractTreeViewer.java:936)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.handleLabelProviderChanged(JavaOutlinePage.java(Compiled Code))</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.handleLabelProviderChanged(JavaOutlinePage.java(Compiled Code))</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.handleLabelProviderChanged(JavaOutlinePage.java(Compiled Code))</Frame>
          <Frame depth="19">org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged(ContentViewer.java(Compiled Code))</Frame>
          <Frame depth="20">org.eclipse.jdt.ui.ProblemsLabelDecorator.fireProblemsChanged(ProblemsLabelDecorator.java(Compiled Code))</Frame>
          <Frame depth="21">org.eclipse.jdt.ui.ProblemsLabelDecorator$1.problemsChanged(ProblemsLabelDecorator.java(Compiled Code))</Frame>
          <Frame depth="22">org.eclipse.jdt.ui.ProblemsLabelDecorator$1.problemsChanged(ProblemsLabelDecorator.java(Compiled Code))</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.viewsupport.ProblemMarkerManager$1.run(ProblemMarkerManager.java(Compiled Code))</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Compiled Code))</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(Compiled Code))</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java(Compiled Code))</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)</Frame>
          <Frame depth="30">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="31">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="32">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.basicRun(Main.java:244)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.run(Main.java:693)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.main(Main.java:526)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>20020606
(shoot - looks like everything got jit'ed - no line numbers)

java.util.ConcurrentModificationException
	at java.util.HashMap$HashIterator.next(HashMap.java(Compiled Code))
	at org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator
(AnnotationModel.java(Compiled Code))
	at org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator
(AnnotationModel.java(Compiled Code))
	at org.eclipse.jface.text.source.AnnotationModel.getAnnotationIterator
(AnnotationModel.java(Compiled Code))
	at 
org.eclipse.jdt.ui.ProblemsLabelDecorator.getErrorTicksFromWorkingCopy
(ProblemsLabelDecorator.java(Compiled Code))
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.computeAdornmentFlags
(ProblemsLabelDecorator.java(Compiled Code))
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.decorateImage
(ProblemsLabelDecorator.java(Compiled Code))
	at org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.getImage
(JavaUILabelProvider.java(Compiled Code))
	at org.eclipse.jface.viewers.DecoratingLabelProvider.getImage
(DecoratingLabelProvider.java(Compiled Code))
	at org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java
(Compiled Code))
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem
(AbstractTreeViewer.java(Compiled Code))
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java(Compiled Code))
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java(Compiled Code))
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java(Compiled Code))
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java(Compiled Code))
	at org.eclipse.jface.viewers.AbstractTreeViewer.labelProviderChanged
(AbstractTreeViewer.java:936)
	at 
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.handleL
abelProviderChanged(JavaOutlinePage.java(Compiled Code))
	at 
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.handleL
abelProviderChanged(JavaOutlinePage.java(Compiled Code))
	at 
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.handleL
abelProviderChanged(JavaOutlinePage.java(Compiled Code))
	at org.eclipse.jface.viewers.ContentViewer$1.labelProviderChanged
(ContentViewer.java(Compiled Code))
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.fireProblemsChanged
(ProblemsLabelDecorator.java(Compiled Code))
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$1.problemsChanged
(ProblemsLabelDecorator.java(Compiled Code))
	at org.eclipse.jdt.ui.ProblemsLabelDecorator$1.problemsChanged
(ProblemsLabelDecorator.java(Compiled Code))
	at org.eclipse.jdt.internal.ui.viewsupport.ProblemMarkerManager$1.run
(ProblemMarkerManager.java(Compiled Code))
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:244)
	at org.eclipse.core.launcher.Main.run(Main.java:693)
	at org.eclipse.core.launcher.Main.main(Main.java:526)


*** This bug has been marked as a duplicate of 19555 ***</WithStack>
    <WithOutStack>20020606
(shoot - looks like everything got jit'ed - no line numbers)




*** This bug has been marked as a duplicate of 19555 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19811" />
    <CreationDate amount="2002-06-10 12:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Code formatter bugs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="27">
      <source_code type="singlecomment">
        <location start="196" end="269" />
        <code>// Here is how it should look like acording to Java conventions</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="269" end="340" />
        <code>// longName1 = longName2 * (longName3 + longName4 - longName5)</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="340" end="389" />
        <code>//            + 4 * longname6; // PREFER</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="389" end="401" />
        <code>//</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="401" end="439" />
        <code>// Here is Eclipse formatting</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="536" end="580" />
        <code>// Here is how it should look like</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="580" end="652" />
        <code>// System.out.println("Server Name: " + serverName_ + ", port="</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="652" end="708" />
        <code>//    + serverPort_ + ", numOrbs=" + numOrbs_);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="708" end="720" />
        <code>//</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="720" end="758" />
        <code>// Here is Eclipse formatting</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="962" end="971" />
        <code>//</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="971" end="1047" />
        <code>// Here is how I would format it (Sun's code converntions does not say)</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1047" end="1083" />
        <code>//    String[][] doubleList = {</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1083" end="1121" />
        <code>//            { "alfa", "beta" },</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1121" end="1159" />
        <code>//            { "alfa", "beta" },</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1159" end="1197" />
        <code>//            { "alfa", "beta" },</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1197" end="1247" />
        <code>//            { "alfa", "beta" },</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1247" end="1260" />
        <code>//    };</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1260" end="1268" />
        <code>//</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1268" end="1305" />
        <code>// Here is how Eclipse format it</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1454" end="1492" />
        <code>// Method parameters formatting.</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1492" end="1513" />
        <code>// My formatting</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1513" end="1589" />
        <code>// protected void processRequest(long param1, long param2,long param3,</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1589" end="1615" />
        <code>//     long param4) {</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1615" end="1624" />
        <code>// }</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1624" end="1631" />
        <code>//</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1631" end="1657" />
        <code>// Eclipse formatting</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse code formatter should abide to Sun's Java code conventions. Most of the
time it does a good job, but at line splitting it has some problems.

I included examples of what I think are bugs:

        // Here is how it should look like acording to Java conventions
        // longName1 = longName2 * (longName3 + longName4 - longName5)
        //            + 4 * longname6; // PREFER
        // 
        // Here is Eclipse formatting
        longName1 =
            longName2 * (longName3 + longName4 - longName5) + 4 *
longName6;

        // Here is how it should look like
        // System.out.println("Server Name: " + serverName_ + ", port="
        //    + serverPort_ + ", numOrbs=" + numOrbs_);
        // 
        // Here is Eclipse formatting
        System.out.println(
            "Server Name: "
                + serverName_
                + ", port="
                + serverPort_
                + ", numOrbs="
                + numOrbs_);

    // 
    // Here is how I would format it (Sun's code converntions does not say)
    //    String[][] doubleList = {
    //            { "alfa", "beta" },
    //            { "alfa", "beta" },
    //            { "alfa", "beta" },
    //            { "alfa", "beta" },            
    //    };
    // 
    // Here is how Eclipse format it
    String[][] doubleList = { { "alfa", "beta" }, {
            "alfa", "beta" }, {
            "alfa", "beta" }, {
            "alfa", "beta" }, };

    // Method parameters formatting.
    // My formatting
    // protected void processRequest(long param1, long param2,long param3, 
    //     long param4) {
    // }
    //
    // Eclipse formatting
    protected void processRequest(
        long param1,
        long param2,
        long param3,
        long param4) {
    }
Thanks, will consider post 2.0
Resurrecting formatter issues in 2.1 stream.
Clearing resolution
We need to clear 2.1 bug reports that won't be addressed before 2.1. The new 
implementation is still in the works. Therefore we cannot include it for 2.1. 
Not enough testing and we need to polish the preferences. This will be address 
for 2.2 as stated in the JDT/Core plan.
Resurrecting for 3.0
Reopen for 3.0 consideration.
This is improved with the new formatter.
Fixed and released in HEAD.
Verified.</WithStack>
    <WithOutStack>Eclipse code formatter should abide to Sun's Java code conventions. Most of the
time it does a good job, but at line splitting it has some problems.

I included examples of what I think are bugs:

        // Here is how it should look like acording to Java conventions
        // longName1 = longName2 * (longName3 + longName4 - longName5)
        //            + 4 * longname6; // PREFER
        // 
        // Here is Eclipse formatting
        longName1 =
            longName2 * (longName3 + longName4 - longName5) + 4 *
longName6;

        // Here is how it should look like
        // System.out.println("Server Name: " + serverName_ + ", port="
        //    + serverPort_ + ", numOrbs=" + numOrbs_);
        // 
        // Here is Eclipse formatting
        System.out.println(
            "Server Name: "
                + serverName_
                + ", port="
                + serverPort_
                + ", numOrbs="
                + numOrbs_);

    // 
    // Here is how I would format it (Sun's code converntions does not say)
    //    String[][] doubleList = {
    //            { "alfa", "beta" },
    //            { "alfa", "beta" },
    //            { "alfa", "beta" },
    //            { "alfa", "beta" },            
    //    };
    // 
    // Here is how Eclipse format it
    String[][] doubleList = { { "alfa", "beta" }, {
            "alfa", "beta" }, {
            "alfa", "beta" }, {
            "alfa", "beta" }, };

    // Method parameters formatting.
    // My formatting
    // protected void processRequest(long param1, long param2,long param3, 
    //     long param4) {
    // }
    //
    // Eclipse formatting
    protected void processRequest(
        long param1,
        long param2,
        long param3,
        long param4) {
    }
Thanks, will consider post 2.0
Resurrecting formatter issues in 2.1 stream.
Clearing resolution
We need to clear 2.1 bug reports that won't be addressed before 2.1. The new 
implementation is still in the works. Therefore we cannot include it for 2.1. 
Not enough testing and we need to polish the preferences. This will be address 
for 2.2 as stated in the JDT/Core plan.
Resurrecting for 3.0
Reopen for 3.0 consideration.
This is improved with the new formatter.
Fixed and released in HEAD.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19812" />
    <CreationDate amount="2002-06-10 12:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[EditorMgmt] tabs: Paint titles of defocused editors with different pastels</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Feature request:

Provide an option in Preferences/Workbench/Editor which if checked, causes the
background color of the title bars of editors which are not currently in use to
be painted with a pastel color rather than the current gray.  The pastel is one
of ~10 and is selected on the basis of a hashcode of the text in the titlebar.

Has the following positive UI benefit:
 -- User glancing at the titles of open editors can still distinguish the active
editor from non-active (saturated blue vs unsaturated colors).
 -- Users will learn to associate certain colors with certain files, making it
easier to find.  This will pay off both for short term situations and long term.
Suggestion for post 2.0
Reopened for investigation
Additional variation:

If there are more files open for editing than have their tabs displayed in the
editor, *and* if this colorized background is enabled, *and* the tabs which are
being displayed don't need to completely fill the space alloted for the tabs,
*then* ...

Created additional tabs, allocated more or less equally to the left and right of
the tabs displayed, which contain no text, but only contain the background
pastel of the corresponding file.

I suspect that this may enable a user to have a larger number of files open and
still be able to switch to the desired tab quickly.  It also provides an
alternate way to move left and right in the list of open but untabbed files,
i.e. by selecting a micro-tabbed file.
To be considered for 3.1.... 
*** Bug 37158 has been marked as a duplicate of this bug. ***
*** Bug 108617 has been marked as a duplicate of this bug. ***
Moving Dougs bugs
I believe we are satisfied with our tab color story at present.  Please reopen if you disagree.</WithStack>
    <WithOutStack>Feature request:

Provide an option in Preferences/Workbench/Editor which if checked, causes the
background color of the title bars of editors which are not currently in use to
be painted with a pastel color rather than the current gray.  The pastel is one
of ~10 and is selected on the basis of a hashcode of the text in the titlebar.

Has the following positive UI benefit:
 -- User glancing at the titles of open editors can still distinguish the active
editor from non-active (saturated blue vs unsaturated colors).
 -- Users will learn to associate certain colors with certain files, making it
easier to find.  This will pay off both for short term situations and long term.
Suggestion for post 2.0
Reopened for investigation
Additional variation:

If there are more files open for editing than have their tabs displayed in the
editor, *and* if this colorized background is enabled, *and* the tabs which are
being displayed don't need to completely fill the space alloted for the tabs,
*then* ...

Created additional tabs, allocated more or less equally to the left and right of
the tabs displayed, which contain no text, but only contain the background
pastel of the corresponding file.

I suspect that this may enable a user to have a larger number of files open and
still be able to switch to the desired tab quickly.  It also provides an
alternate way to move left and right in the list of open but untabbed files,
i.e. by selecting a micro-tabbed file.
To be considered for 3.1.... 
*** Bug 37158 has been marked as a duplicate of this bug. ***
*** Bug 108617 has been marked as a duplicate of this bug. ***
Moving Dougs bugs
I believe we are satisfied with our tab color story at present.  Please reopen if you disagree.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19813" />
    <CreationDate amount="2002-06-10 12:49:00 -0400" />
    <DupId amount="18625" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="Sun" />
    <op_sys amount="Solaris" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Tab key does not tab in Text Editor. (Switches focus to other view)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Eclipse Drop: F3
OS: Solaris 8 w/ Sun Recommended Patches
HW: Sun Blade 100
JRE: Sun 1.3.1
Motif: 2.1

Basically when editing a file in a text editor view the 
tab key will switch focus to another view and not tab
the cursor.

To Reproduce:

Open a Java Project
New File
Enter some text
Hit tab key
Error: Watch the focus switch to another view.
I presume that you meant build F2?
Moving to Platform/SWT for comment.


*** This bug has been marked as a duplicate of 18625 ***</WithStack>
    <WithOutStack>Eclipse Drop: F3
OS: Solaris 8 w/ Sun Recommended Patches
HW: Sun Blade 100
JRE: Sun 1.3.1
Motif: 2.1

Basically when editing a file in a text editor view the 
tab key will switch focus to another view and not tab
the cursor.

To Reproduce:

Open a Java Project
New File
Enter some text
Hit tab key
Error: Watch the focus switch to another view.
I presume that you meant build F2?
Moving to Platform/SWT for comment.


*** This bug has been marked as a duplicate of 18625 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19814" />
    <CreationDate amount="2002-06-10 12:51:00 -0400" />
    <DupId amount="18438" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Refactor-&gt;Pull Up may cause code w/ infinite recursion</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="class">
        <location start="62" end="153" />
        <code>public class Base {
	public void sayHi() {
		System.out.println("Hello from Base");
	}
		
}</code>
      </source_code>
      <source_code type="class">
        <location start="155" end="192" />
        <code>public class Derived extends Base {
}</code>
      </source_code>
      <source_code type="class">
        <location start="194" end="330" />
        <code>public class EvenMoreDerived extends Derived {
	public void sayHi()  {
		super.sayHi();
		System.out.println("Hello from derived");
	}
}</code>
      </source_code>
      <source_code type="class">
        <location start="469" end="593" />
        <code>public class Derived extends Base {
	public void sayHi()  {
		this.sayHi();
		System.out.println("Hello from derived");
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Using version 20020416.

Given the following three classes: 

public class Base {
	public void sayHi() {
		System.out.println("Hello from Base");
	}
		
}

public class Derived extends Base {
}

public class EvenMoreDerived extends Derived {
	public void sayHi()  {
		super.sayHi();
		System.out.println("Hello from derived");
	}
}

if you were to select the method EvenMoreDerived.sayHi and select the Refactor-
&gt;Pull Up option the code resulting in Derived would be:

public class Derived extends Base {
	public void sayHi()  {
		this.sayHi();
		System.out.println("Hello from derived");
	}
}

which, if run, will cause infinite recursion in the line "this.sayHi();".


*** This bug has been marked as a duplicate of 18438 ***</WithStack>
    <WithOutStack>Using version 20020416.

Given the following three classes: 

public class Base {
	public void sayHi() {
		System.out.println("Hello from Base");
	}
		
}

public class Derived extends Base {
}

public class EvenMoreDerived extends Derived {
	public void sayHi()  {
		super.sayHi();
		System.out.println("Hello from derived");
	}
}

if you were to select the method EvenMoreDerived.sayHi and select the Refactor-
&gt;Pull Up option the code resulting in Derived would be:

public class Derived extends Base {
	public void sayHi()  {
		this.sayHi();
		System.out.println("Hello from derived");
	}
}

which, if run, will cause infinite recursion in the line "this.sayHi();".


*** This bug has been marked as a duplicate of 18438 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19815" />
    <CreationDate amount="2002-06-10 12:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows All" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>JRE crashes using error log and progress bar.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We wrote a set of plugins for VCM/Team. In our architecture, we have it so 
that every time some sort of error or anomily occurs, it is printed as an 
error or warning to the plugin error log. The problem is that every time we 
put something into the error log, while a progress monitor is up the JRE 
crashes with an access violation. When I say it crashes, I mean it CRASHES, 
not just throwing an exception.

Drilling down a bit into the code, we find that the JRE crashes whenever the 
refresh() method of the TableTreeViewer widget gets called. In the Error log 
implementation, the TableTreeViewer gets refreshed on every message that comes 
in. Everything works perfectly when there is no progress bar anywhere, but 
when there is one, watch out. We have tried wrapping everything using 
Display.syncExec() and Display.asyncExec() to no avail.

It seems to have to do with the fact that our plugin uses JNI to bind with 
C/C++ code.  We have written a simple test case plugin to help you debug and 
sent it to Stephen Lauzon at IBM as there is no way to attach files in 
bugzilla that I know of. Since SWT was written using JNI I can't imagine why 
there is this problem.  We have reproduced the problem on both Eclipse R1.0 as 
well as 2.0 F2 using both IBM's JRE 1.3 and Sun's JRE 1.3.1 and 1.4.0. 

This is a show-stopper bug for us because there are many circumstances in 
Eclipse when a progress bar comes out and it is out of our control. Once a 
progress bar pops up, our program will crash when messages start coming in.
Could be a problem in the C/C++ code, or the JNI interface to it.
Strange that it consistently occurs with the use of a progress bar though.
Moving to SWT for comment.
First off, you create attachments by clicking on the "Create a new attachment" 
link above.

If you are calling something from the wrong thread, then you should see 
an "Invalid thread access" exception. If you aren't seeing these, then 
syncExec/asyncExec probably won't help.

Now, what's interesting about this is that, progress bars are *also* 
displaying something in a different thread. That *shouldn't* cause you grief 
mind you, but there could be issues with thread switching in callin, or 
something like that.

In any case, please attach a zip with the example code (which hopefully, 
repeatedly causes the crash) and also attach one of the crash javacore files. 
We'll take a look at it. Currently at least, I strongly suspect it's in the 
application code, but you never know.

Note: No milestone being assigned for this, since it's likely something which 
will need to be fixed in application code. Downgrading priority, since this is 
not P1 for the SWT team. Upgrading severity to match comment from 
reporter: "This is a show-stopper".

Created attachment 1356
Core file from JDK 1.4
Created attachment 1357
Core from JDK 1.3
Created attachment 1358
Zip FIle with test data
Chris is setting up the test case.
Wow, I didn't realize you could attach files in bugzilla!  Man I wished I knew 
about this before! 

Anyway, I have attached the java core files from my test which used Eclipse 2.0 
F2 and Sun's JDK 1.4.0_01, and from a co-worker's test using Eclipse 1.0 and 
the JRE that comes with it.

I have also attached the test program that I have been using.  It is in the 
form of an Eclipse plugin.  When you run it, there should be a new menu item on 
the top menu that says "Log Test" click on the menu item and your Eclipse 
should crash. There is also a lot of commented out code in the test if you want 
to see all of the different combinations that we've tried. 

Thanks, and let me know if there is anything that I can do to help.

Joe
Joseph:
I built the plugin from your zip file but I don't see any new menu. I probably 
did something wrong - could you attach a zip file containing the plugin exactly 
as it should be unzipped into the /plugins directory (for Eclipse 2.0)? You can 
ignore the Dll which is large, I'll add it myself.
Thanks!
Chris

Ignore my former email - I was able to run the plugin and reproduce the crash.
Created attachment 1370
Test for PR19815
Joseph:
Can you try the attachment 'Test for PR19815' and let us know if the bug still 
occurs? This is a modified version of the plugin's dll which does not cache 
the JNIEnv* (JNIEnv* is thread specific).
Thanks,
Chris
Hi Chris,

I tested with your new DLL and it does not crash anymore although the error log 
is not refreshing. It doesn't crash any more though, and that's a huge 
difference. I'd like to do some more extensive testing of it in the morning and 
get back to you if that's OK.

Thanks!
Joe
Hi Chris, 

While the test case works now, our adapter still has a problem.

Your fix was to pass the JNIEnv pointer into the StartTest function so that it 
is available for the call to OnStreamMessage.

What allows that approach, unfortunately stems from the fact that this is a 
simplified test program. In the real program the JCaOStream object is a static 
log interface. Our server (written in C++) writes asynchronous log entries to 
an ostream as they occur. The JCaOStream object is used as that ostream for 
the Eclipse interface. When a log entry comes in, the OnStreamMessage function 
is invoked to pass the message through the JNI layer to the java log. On the 
Java side we create a Status object and insert it into the plugin log.

The question then is how can a long-term static c++ object asynchronously 
invoke a java function in a plugin in a thread safe way? Are there any 
examples of this in the SWT source code?

I have been reading some of the SWT source code and in the file callback.c it 
looks as if you are storing the JNIEnv pointer in a struct. How come it works 
in that case but not in ours? 

Thanks as always,
Joe
This is a JNI question. There are different ways to do it. One way is to attach 
your native thread to the JVM (you can try looking up for 'JNI 
AttachCurrentThread' on Google - AttachCurrentThread returns a JNIEnv* pointer 
for the calling thread). Or you can use a client/server approach in which the 
java side (your plugin) fetches data through a native queue or a socket. No 
matter which solution you prefer, the plugin's api has to be thread safe if it 
is going to be invoked from different threads (as it is the case here).

SWT internally caches JNIEnv* for the current thread - and won't access it from 
any other thread.
AttachCurrentThread it will be.  Thanks for going above and beyond.
I'm going to close this.  The problem has been resolved.  No action for SWT 
required.</WithStack>
    <WithOutStack>We wrote a set of plugins for VCM/Team. In our architecture, we have it so 
that every time some sort of error or anomily occurs, it is printed as an 
error or warning to the plugin error log. The problem is that every time we 
put something into the error log, while a progress monitor is up the JRE 
crashes with an access violation. When I say it crashes, I mean it CRASHES, 
not just throwing an exception.

Drilling down a bit into the code, we find that the JRE crashes whenever the 
refresh() method of the TableTreeViewer widget gets called. In the Error log 
implementation, the TableTreeViewer gets refreshed on every message that comes 
in. Everything works perfectly when there is no progress bar anywhere, but 
when there is one, watch out. We have tried wrapping everything using 
Display.syncExec() and Display.asyncExec() to no avail.

It seems to have to do with the fact that our plugin uses JNI to bind with 
C/C++ code.  We have written a simple test case plugin to help you debug and 
sent it to Stephen Lauzon at IBM as there is no way to attach files in 
bugzilla that I know of. Since SWT was written using JNI I can't imagine why 
there is this problem.  We have reproduced the problem on both Eclipse R1.0 as 
well as 2.0 F2 using both IBM's JRE 1.3 and Sun's JRE 1.3.1 and 1.4.0. 

This is a show-stopper bug for us because there are many circumstances in 
Eclipse when a progress bar comes out and it is out of our control. Once a 
progress bar pops up, our program will crash when messages start coming in.
Could be a problem in the C/C++ code, or the JNI interface to it.
Strange that it consistently occurs with the use of a progress bar though.
Moving to SWT for comment.
First off, you create attachments by clicking on the "Create a new attachment" 
link above.

If you are calling something from the wrong thread, then you should see 
an "Invalid thread access" exception. If you aren't seeing these, then 
syncExec/asyncExec probably won't help.

Now, what's interesting about this is that, progress bars are *also* 
displaying something in a different thread. That *shouldn't* cause you grief 
mind you, but there could be issues with thread switching in callin, or 
something like that.

In any case, please attach a zip with the example code (which hopefully, 
repeatedly causes the crash) and also attach one of the crash javacore files. 
We'll take a look at it. Currently at least, I strongly suspect it's in the 
application code, but you never know.

Note: No milestone being assigned for this, since it's likely something which 
will need to be fixed in application code. Downgrading priority, since this is 
not P1 for the SWT team. Upgrading severity to match comment from 
reporter: "This is a show-stopper".

Created attachment 1356
Core file from JDK 1.4
Created attachment 1357
Core from JDK 1.3
Created attachment 1358
Zip FIle with test data
Chris is setting up the test case.
Wow, I didn't realize you could attach files in bugzilla!  Man I wished I knew 
about this before! 

Anyway, I have attached the java core files from my test which used Eclipse 2.0 
F2 and Sun's JDK 1.4.0_01, and from a co-worker's test using Eclipse 1.0 and 
the JRE that comes with it.

I have also attached the test program that I have been using.  It is in the 
form of an Eclipse plugin.  When you run it, there should be a new menu item on 
the top menu that says "Log Test" click on the menu item and your Eclipse 
should crash. There is also a lot of commented out code in the test if you want 
to see all of the different combinations that we've tried. 

Thanks, and let me know if there is anything that I can do to help.

Joe
Joseph:
I built the plugin from your zip file but I don't see any new menu. I probably 
did something wrong - could you attach a zip file containing the plugin exactly 
as it should be unzipped into the /plugins directory (for Eclipse 2.0)? You can 
ignore the Dll which is large, I'll add it myself.
Thanks!
Chris

Ignore my former email - I was able to run the plugin and reproduce the crash.
Created attachment 1370
Test for PR19815
Joseph:
Can you try the attachment 'Test for PR19815' and let us know if the bug still 
occurs? This is a modified version of the plugin's dll which does not cache 
the JNIEnv* (JNIEnv* is thread specific).
Thanks,
Chris
Hi Chris,

I tested with your new DLL and it does not crash anymore although the error log 
is not refreshing. It doesn't crash any more though, and that's a huge 
difference. I'd like to do some more extensive testing of it in the morning and 
get back to you if that's OK.

Thanks!
Joe
Hi Chris, 

While the test case works now, our adapter still has a problem.

Your fix was to pass the JNIEnv pointer into the StartTest function so that it 
is available for the call to OnStreamMessage.

What allows that approach, unfortunately stems from the fact that this is a 
simplified test program. In the real program the JCaOStream object is a static 
log interface. Our server (written in C++) writes asynchronous log entries to 
an ostream as they occur. The JCaOStream object is used as that ostream for 
the Eclipse interface. When a log entry comes in, the OnStreamMessage function 
is invoked to pass the message through the JNI layer to the java log. On the 
Java side we create a Status object and insert it into the plugin log.

The question then is how can a long-term static c++ object asynchronously 
invoke a java function in a plugin in a thread safe way? Are there any 
examples of this in the SWT source code?

I have been reading some of the SWT source code and in the file callback.c it 
looks as if you are storing the JNIEnv pointer in a struct. How come it works 
in that case but not in ours? 

Thanks as always,
Joe
This is a JNI question. There are different ways to do it. One way is to attach 
your native thread to the JVM (you can try looking up for 'JNI 
AttachCurrentThread' on Google - AttachCurrentThread returns a JNIEnv* pointer 
for the calling thread). Or you can use a client/server approach in which the 
java side (your plugin) fetches data through a native queue or a socket. No 
matter which solution you prefer, the plugin's api has to be thread safe if it 
is going to be invoked from different threads (as it is the case here).

SWT internally caches JNIEnv* for the current thread - and won't access it from 
any other thread.
AttachCurrentThread it will be.  Thanks for going above and beyond.
I'm going to close this.  The problem has been resolved.  No action for SWT 
required.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19816" />
    <CreationDate amount="2002-06-10 12:58:00 -0400" />
    <DupId amount="19109" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Incoming deletion not indicated in icon</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020610

On an incoming deletion, the icon for the item in the sync view's Structure 
Compare pane does not show a minus.  It is obscured by the orange repository 
overlay.


*** This bug has been marked as a duplicate of 19109 ***</WithStack>
    <WithOutStack>Build 20020610

On an incoming deletion, the icon for the item in the sync view's Structure 
Compare pane does not show a minus.  It is obscured by the orange repository 
overlay.


*** This bug has been marked as a duplicate of 19109 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19817" />
    <CreationDate amount="2002-06-10 13:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>cannot view other help books when error loading toc for just one of them</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437331254972">
        <Exception>java.lang.NoSuchMethodError</Exception>
        <Reason>org.eclipse.help.servlet.ContentUtil: method 
loadPreferences()Lorg/w3c/dom/Element; not found 

I think this is because the help code for one of the plugins in my target is 
referencing a directory that does not exist.  The stack trace below was in the 
log file (I replaced the real file and directory names with descriptive 
file/dir names):

The problem now is that I cannot see any of the other help books now beacuse 
someone made a mistake in referencing a toc that does not exist.  If one of the 
help contributions does not work, that one should just be ignored and the 
others still be visible to the user.

!ENTRY org.eclipse.help 4 0 Jun 10, 2002 13:15:31.544
!MESSAGE Failed to parse Table of Contents file, URL: 
file:///&lt;dir_does_not_exist&gt;/some_arbitrary_toc.xml at line: 5, column: 7.
Content is not allowed in trailing section.
!STACK 0
org.xml.sax.SAXParseException: Content is not allowed in trailing section.</Reason>
        <Frames>
          <Frame depth="0">org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:232)</Frame>
          <Frame depth="1">org.apache.xerces.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:213)</Frame>
          <Frame depth="2">org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:366)</Frame>
          <Frame depth="3">org.apache.xerces.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:296)</Frame>
          <Frame depth="4">org.apache.xerces.impl.XMLScanner.reportFatalError(XMLScanner.java:1244)</Frame>
          <Frame depth="5">org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher.dispatch(XMLDocumentScannerImpl.java:1040)</Frame>
          <Frame depth="6">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:333)</Frame>
          <Frame depth="7">org.apache.xerces.parsers.StandardParserConfiguration.parse(StandardParserConfiguration.java:525)</Frame>
          <Frame depth="8">org.apache.xerces.parsers.StandardParserConfiguration.parse(StandardParserConfiguration.java:581)</Frame>
          <Frame depth="9">org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:147)</Frame>
          <Frame depth="10">org.apache.xerces.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1158)</Frame>
          <Frame depth="11">org.eclipse.help.internal.toc.TocFileParser.parse(TocFileParser.java:77)</Frame>
          <Frame depth="12">org.eclipse.help.internal.toc.TocBuilder.buildTocFile(TocBuilder.java:61)</Frame>
          <Frame depth="13">org.eclipse.help.internal.toc.TocFile.build(TocFile.java:107)</Frame>
          <Frame depth="14">org.eclipse.help.internal.toc.TocBuilder.build(TocBuilder.java:44)</Frame>
          <Frame depth="15">org.eclipse.help.internal.toc.TocManager.build(TocManager.java:88)</Frame>
          <Frame depth="16">org.eclipse.help.internal.toc.TocManager.&lt;init&gt;(TocManager.java:33)</Frame>
          <Frame depth="17">org.eclipse.help.internal.HelpSystem.getTocManager(HelpSystem.java:53)</Frame>
          <Frame depth="18">org.eclipse.help.internal.ui.DefaultHelp.getTocs(DefaultHelp.java:233)</Frame>
          <Frame depth="19">org.eclipse.help.internal.ui.DefaultHelp.displayHelp(DefaultHelp.java:45)</Frame>
          <Frame depth="20">org.eclipse.help.internal.ui.HelpContentsAction$1.run(HelpContentsAction.java:41)</Frame>
          <Frame depth="21">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)</Frame>
          <Frame depth="22">org.eclipse.help.internal.ui.HelpContentsAction.run(HelpContentsAction.java:38)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:210)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:171)</Frame>
          <Frame depth="25">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="26">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="27">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="28">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1085)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.Workbench.run(Workbench.java:1068)</Frame>
          <Frame depth="35">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="36">org.eclipse.core.boot.BootLoader.run(BootLoader.java:432)</Frame>
          <Frame depth="37">EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437331254972">
        <Exception>org.xml.sax.SAXParseException</Exception>
        <Reason>Content is not allowed in trailing section.</Reason>
        <Frames>
          <Frame depth="0">org.apache.xerces.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1172)</Frame>
          <Frame depth="1">org.eclipse.help.internal.toc.TocFileParser.parse(TocFileParser.java:77)</Frame>
          <Frame depth="2">org.eclipse.help.internal.toc.TocBuilder.buildTocFile(TocBuilder.java:61)</Frame>
          <Frame depth="3">org.eclipse.help.internal.toc.TocFile.build(TocFile.java:107)</Frame>
          <Frame depth="4">org.eclipse.help.internal.toc.TocBuilder.build(TocBuilder.java:44)</Frame>
          <Frame depth="5">org.eclipse.help.internal.toc.TocManager.build(TocManager.java:88)</Frame>
          <Frame depth="6">org.eclipse.help.internal.toc.TocManager.&lt;init&gt;(TocManager.java:33)</Frame>
          <Frame depth="7">org.eclipse.help.internal.HelpSystem.getTocManager(HelpSystem.java:53)</Frame>
          <Frame depth="8">org.eclipse.help.internal.ui.DefaultHelp.getTocs(DefaultHelp.java:233)</Frame>
          <Frame depth="9">org.eclipse.help.internal.ui.DefaultHelp.displayHelp(DefaultHelp.java:45)</Frame>
          <Frame depth="10">org.eclipse.help.internal.ui.HelpContentsAction$1.run(HelpContentsAction.java:41)</Frame>
          <Frame depth="11">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)</Frame>
          <Frame depth="12">org.eclipse.help.internal.ui.HelpContentsAction.run(HelpContentsAction.java:38)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:210)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:171)</Frame>
          <Frame depth="15">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="16">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1085)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.run(Workbench.java:1068)</Frame>
          <Frame depth="25">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="26">org.eclipse.core.boot.BootLoader.run(BootLoader.java:432)</Frame>
          <Frame depth="27">EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build: F2
When I tried to invoke the help using Help-&gt;Help Contents menu item, the help 
window comes up containing the following text:

There was an error in your action: 
java.lang.NoSuchMethodError: org.eclipse.help.servlet.ContentUtil: method 
loadPreferences()Lorg/w3c/dom/Element; not found 

I think this is because the help code for one of the plugins in my target is 
referencing a directory that does not exist.  The stack trace below was in the 
log file (I replaced the real file and directory names with descriptive 
file/dir names):

The problem now is that I cannot see any of the other help books now beacuse 
someone made a mistake in referencing a toc that does not exist.  If one of the 
help contributions does not work, that one should just be ignored and the 
others still be visible to the user.

!ENTRY org.eclipse.help 4 0 Jun 10, 2002 13:15:31.544
!MESSAGE Failed to parse Table of Contents file, URL: 
file:///&lt;dir_does_not_exist&gt;/some_arbitrary_toc.xml at line: 5, column: 7.
Content is not allowed in trailing section.
!STACK 0
org.xml.sax.SAXParseException: Content is not allowed in trailing section.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException
(ErrorHandlerWrapper.java:232)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError
(ErrorHandlerWrapper.java:213)
	at org.apache.xerces.impl.XMLErrorReporter.reportError
(XMLErrorReporter.java:366)
	at org.apache.xerces.impl.XMLErrorReporter.reportError
(XMLErrorReporter.java:296)
	at org.apache.xerces.impl.XMLScanner.reportFatalError
(XMLScanner.java:1244)
	at 
org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher.dispatch
(XMLDocumentScannerImpl.java:1040)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument
(XMLDocumentFragmentScannerImpl.java:333)
	at org.apache.xerces.parsers.StandardParserConfiguration.parse
(StandardParserConfiguration.java:525)
	at org.apache.xerces.parsers.StandardParserConfiguration.parse
(StandardParserConfiguration.java:581)
	at org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:147)
	at org.apache.xerces.parsers.AbstractSAXParser.parse
(AbstractSAXParser.java:1158)
	at org.eclipse.help.internal.toc.TocFileParser.parse
(TocFileParser.java:77)
	at org.eclipse.help.internal.toc.TocBuilder.buildTocFile
(TocBuilder.java:61)
	at org.eclipse.help.internal.toc.TocFile.build(TocFile.java:107)
	at org.eclipse.help.internal.toc.TocBuilder.build(TocBuilder.java:44)
	at org.eclipse.help.internal.toc.TocManager.build(TocManager.java:88)
	at org.eclipse.help.internal.toc.TocManager.&lt;init&gt;(TocManager.java:33)
	at org.eclipse.help.internal.HelpSystem.getTocManager
(HelpSystem.java:53)
	at org.eclipse.help.internal.ui.DefaultHelp.getTocs
(DefaultHelp.java:233)
	at org.eclipse.help.internal.ui.DefaultHelp.displayHelp
(DefaultHelp.java:45)
	at org.eclipse.help.internal.ui.HelpContentsAction$1.run
(HelpContentsAction.java:41)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)
	at org.eclipse.help.internal.ui.HelpContentsAction.run
(HelpContentsAction.java:38)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:210)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:171)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1085)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1068)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432)
	at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)
!ENTRY org.eclipse.help 4 0 Jun 10, 2002 13:15:32.45
!MESSAGE Error loading Table of Contents 
file /&lt;dir_does_not_exist&gt;/some_arbitrary_toc.xml.
!STACK 0
org.xml.sax.SAXParseException: Content is not allowed in trailing section.
	at org.apache.xerces.parsers.AbstractSAXParser.parse
(AbstractSAXParser.java:1172)
	at org.eclipse.help.internal.toc.TocFileParser.parse
(TocFileParser.java:77)
	at org.eclipse.help.internal.toc.TocBuilder.buildTocFile
(TocBuilder.java:61)
	at org.eclipse.help.internal.toc.TocFile.build(TocFile.java:107)
	at org.eclipse.help.internal.toc.TocBuilder.build(TocBuilder.java:44)
	at org.eclipse.help.internal.toc.TocManager.build(TocManager.java:88)
	at org.eclipse.help.internal.toc.TocManager.&lt;init&gt;(TocManager.java:33)
	at org.eclipse.help.internal.HelpSystem.getTocManager
(HelpSystem.java:53)
	at org.eclipse.help.internal.ui.DefaultHelp.getTocs
(DefaultHelp.java:233)
	at org.eclipse.help.internal.ui.DefaultHelp.displayHelp
(DefaultHelp.java:45)
	at org.eclipse.help.internal.ui.HelpContentsAction$1.run
(HelpContentsAction.java:41)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)
	at org.eclipse.help.internal.ui.HelpContentsAction.run
(HelpContentsAction.java:38)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:210)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:171)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1085)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1068)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432)
	at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)
Can you attach the toc xml file and the plugin.xml file to the bug?
Created attachment 1345
TOC
Looks like the TOC is not formed properly.
Created attachment 1346
plugin.xml
The file has a typo at the very end

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?NLS TYPE="org.eclipse.help.toc"?&gt;
&lt;toc id="IMSAPIs"&gt;
	&lt;link toc="imsconnectapi_api_details_toc.xml" /&gt;
&lt;/toc&gt;s&gt;

It is assumed that all the parse errors are dealt with at development time 
(just like with java classes, they are build and jar'ed before deployment).
Do you mean that with the errors in one of your TOC XML files, affected are  
Workbench Users Guide, Java Development Guide and all rest of the books that 
are correct?

From your log, I see that error is handled by help (which writes that messeage 
to the log), and do not see any un

Which build are you testing, because for me the error that you have in your TOC 
does not prevent this TOC from being displayed?  If I make an error near the 
beginning, the TOC is not shown, but it does not affect the others.
When I experienced this problem, yes all of the other books were affected since 
the only contents of the help window was the error message:
java.lang.NoSuchMethodError: org.eclipse.help.servlet.ContentUtil: method 
loadPreferences()Lorg/w3c/dom/Element; not found 

In the original report I said it was build F2, that is incorrect.  My target 
was actually running on build F1 while my dev was on F2.  
I've seen this problem before and it was caused by the changes to the XML 
parsers: org.apache.xerces plugin has been refreshed with different jar files 
and that's probably the cause.

I will close the defect, but please re-open if you can reproduce using the same 
driver (0611 integration build) or F3.</WithStack>
    <WithOutStack>Build: F2
When I tried to invoke the help using Help-&gt;Help Contents menu item, the help 
window comes up containing the following text:

There was an error in your action: 
!ENTRY org.eclipse.help 4 0 Jun 10, 2002 13:15:32.45
!MESSAGE Error loading Table of Contents 
file /&lt;dir_does_not_exist&gt;/some_arbitrary_toc.xml.
!STACK 0
Can you attach the toc xml file and the plugin.xml file to the bug?
Created attachment 1345
TOC
Looks like the TOC is not formed properly.
Created attachment 1346
plugin.xml
The file has a typo at the very end

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?NLS TYPE="org.eclipse.help.toc"?&gt;
&lt;toc id="IMSAPIs"&gt;
	&lt;link toc="imsconnectapi_api_details_toc.xml" /&gt;
&lt;/toc&gt;s&gt;

It is assumed that all the parse errors are dealt with at development time 
(just like with java classes, they are build and jar'ed before deployment).
Do you mean that with the errors in one of your TOC XML files, affected are  
Workbench Users Guide, Java Development Guide and all rest of the books that 
are correct?

From your log, I see that error is handled by help (which writes that messeage 
to the log), and do not see any un

Which build are you testing, because for me the error that you have in your TOC 
does not prevent this TOC from being displayed?  If I make an error near the 
beginning, the TOC is not shown, but it does not affect the others.
When I experienced this problem, yes all of the other books were affected since 
the only contents of the help window was the error message:
java.lang.NoSuchMethodError: org.eclipse.help.servlet.ContentUtil: method 
loadPreferences()Lorg/w3c/dom/Element; not found 

In the original report I said it was build F2, that is incorrect.  My target 
was actually running on build F1 while my dev was on F2.  
I've seen this problem before and it was caused by the changes to the XML 
parsers: org.apache.xerces plugin has been refreshed with different jar files 
and that's probably the cause.

I will close the defect, but please re-open if you can reproduce using the same 
driver (0611 integration build) or F3.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19818" />
    <CreationDate amount="2002-06-10 13:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Java Editor in dirty state, checkin file, a later save fails</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you have a pessimistic team installed (I'm using the 
org.eclipse.team.examples.pessimistic) installed, open a java editor, make a 
change, then for some reason go over and check the file in. It nows becomes 
read-only. Come back to the java editor and close the editor. It will say 
changes have been made, do you want to save the changes. If you say yes you get 
a message:

   Save could not be completed:
   Reason: update conflict

If you do the same process using the default internal text editor, it will 
automatically check the file out and then save it.

Thanks,
Rich Kulp
pls investigate
This is the consequence of the core internal validateSave call.
Work in resent builds. Adapted file buffers and associated document providers 
to work as expected.</WithStack>
    <WithOutStack>If you have a pessimistic team installed (I'm using the 
org.eclipse.team.examples.pessimistic) installed, open a java editor, make a 
change, then for some reason go over and check the file in. It nows becomes 
read-only. Come back to the java editor and close the editor. It will say 
changes have been made, do you want to save the changes. If you say yes you get 
a message:

   Save could not be completed:
   Reason: update conflict

If you do the same process using the default internal text editor, it will 
automatically check the file out and then save it.

Thanks,
Rich Kulp
pls investigate
This is the consequence of the core internal validateSave call.
Work in resent builds. Adapted file buffers and associated document providers 
to work as expected.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19819" />
    <CreationDate amount="2002-06-10 13:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Emacs-style incremental search</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- repeat previous search with a second Ctrl+J (Emacs: Ctrl+S)</Line>
          <Line>- find next match by hitting Ctrl+J again (Emacs: Ctrl+S)</Line>
          <Line>- create an accelerator for reverse-incremental search (Emacs: Ctrl+R)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The current incremental search support in Eclipse is awkward at best. Emacs' 
incremental search is much more polished, and Eclipse's usability would benefit 
greatly from more closely emulating Emacs' behaviour.

Specifically, the features that Emacs incremental has and Eclipse incremental 
search does not have are:
- repeat previous search with a second Ctrl+J (Emacs: Ctrl+S)
- find next match by hitting Ctrl+J again (Emacs: Ctrl+S)
- create an accelerator for reverse-incremental search (Emacs: Ctrl+R)

Eclipse does support finding the next match, and reversing the search once it 
is started, however these functions are bound to the up/down arrow keys which 
requires that the user move their hands away from the home row of the keyboard 
to use. This is more invasive than it has to be.
*** Bug 20992 has been marked as a duplicate of this bug. ***
Created attachment 1856
Patch implementing changes
The above patch implements the necessary changes. It also includes fixes for 
bug 19668 and bug 21207.

This patch also includes code to indicate the direction of the search using the 
caret position relative to the selection (reverse search -&gt; caret to the left 
of selection).

The patch has not yet been checked in to the repository since I do not have 
commit rights.
applied patch &gt;= 20020925</WithStack>
    <WithOutStack>The current incremental search support in Eclipse is awkward at best. Emacs' 
incremental search is much more polished, and Eclipse's usability would benefit 
greatly from more closely emulating Emacs' behaviour.

Specifically, the features that Emacs incremental has and Eclipse incremental 
search does not have are:
- repeat previous search with a second Ctrl+J (Emacs: Ctrl+S)
- find next match by hitting Ctrl+J again (Emacs: Ctrl+S)
- create an accelerator for reverse-incremental search (Emacs: Ctrl+R)

Eclipse does support finding the next match, and reversing the search once it 
is started, however these functions are bound to the up/down arrow keys which 
requires that the user move their hands away from the home row of the keyboard 
to use. This is more invasive than it has to be.
*** Bug 20992 has been marked as a duplicate of this bug. ***
Created attachment 1856
Patch implementing changes
The above patch implements the necessary changes. It also includes fixes for 
bug 19668 and bug 21207.

This patch also includes code to indicate the direction of the search using the 
caret position relative to the selection (reverse search -&gt; caret to the left 
of selection).

The patch has not yet been checked in to the repository since I do not have 
commit rights.
applied patch &gt;= 20020925</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19820" />
    <CreationDate amount="2002-06-10 13:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Neutrino" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cannot open Help on QNX</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="26">
      <source_code type="functioncall">
        <location start="2471" end="2509" />
        <code>(Ljava/lang/String;Z)Ljava/lang/Class;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2510" end="2581" />
        <code>java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3093" end="3131" />
        <code>(Ljava/lang/String;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4153" end="4191" />
        <code>(Ljava/lang/String;Z)Ljava/lang/Class;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4192" end="4263" />
        <code>java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4775" end="4813" />
        <code>(Ljava/lang/String;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="6152" end="6230" />
        <code>org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="6830" end="6906" />
        <code>org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="8139" end="8191" />
        <code>java/net/URLClassLoader$4.run()Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="8329" end="8402" />
        <code>java/net/URLClassLoader.findClass(Ljava/lang/String;)Ljava/lang/Class;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="8831" end="8869" />
        <code>(Ljava/lang/String;Z)Ljava/lang/Class;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="8870" end="8941" />
        <code>java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="9345" end="9397" />
        <code>java/net/URLClassLoader$4.run()Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="9535" end="9608" />
        <code>java/net/URLClassLoader.findClass(Ljava/lang/String;)Ljava/lang/Class;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="10037" end="10075" />
        <code>(Ljava/lang/String;Z)Ljava/lang/Class;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="10076" end="10147" />
        <code>java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="11538" end="11576" />
        <code>(Ljava/lang/String;Z)Ljava/lang/Class;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="11577" end="11648" />
        <code>java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="12160" end="12198" />
        <code>(Ljava/lang/String;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="13537" end="13615" />
        <code>org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="14215" end="14291" />
        <code>org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="14685" end="14712" />
        <code>tomcat.setUseNaming(false);</code>
      </source_code>
      <source_code type="assignment">
        <location start="16472" end="16506" />
        <code>String executable ="java";</code>
      </source_code>
      <source_code type="assignment">
        <location start="16513" end="16561" />
        <code>String vm = System.getProperty("java.vm.name");</code>
      </source_code>
      <source_code type="assignment">
        <location start="16562" end="16613" />
        <code>String executable = "J9".equals(vm) ? "j9":"java";</code>
      </source_code>
      <source_code type="assignment">
        <location start="16778" end="16831" />
        <code>String executable = "J9".equals(vm) ? "j9":"java";</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Tested on F2 with J9 runtime at 
http://www.embedded.oti.com/download/technologies/wce_eclipse.phtml

As shipped, when you launch eclipse and attempt to open help contents you get 
an error about missing java.beans.propertyChangeSupport. This is because the 
stock J9 runtime does not include java beans. 

As a workaround, I added in parts of the Personal Configuration for J9 
(includes beans and awt) to the J9 bootpath. I get further, but cannot proceed 
because JNDI is used and J9 does not support JNDI. 
(javax.naming.directory.DirContext) is the specific class.

.log excerpts included below:

----------------------------------------------------------
Initial error:

!SESSION Jun 10, 2002 10:34:51.166 ---------------------------------------------
java.version=1.3.0 subset
java.vendor=IBM Corporation
BootLoader constants: OS=qnx, ARCH=x86, WS=photon, NL=en_US
Command-line arguments: -os qnx -ws photon -arch x86 -install 
file:/eclipseF2/eclipse/
!ENTRY org.eclipse.core.runtime 4 2 Jun 10, 2002 10:34:51.238
!MESSAGE Plug-in "org.eclipse.tomcat" was unable to instantiate 
class "org.eclipse.tomcat.internal.TomcatPlugin".
!STACK 0
java.lang.reflect.InvocationTargetException: java.lang.NoClassDefFoundError: 
java.beans.PropertyChangeSupport

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/NoClassDefFoundError.&lt;init&gt;(Ljava/lang/String;)V
   org/apache/catalina/logger/LoggerBase.&lt;init&gt;()V
   org/apache/catalina/logger/FileLogger.&lt;init&gt;()V
   org/eclipse/tomcat/internal/TomcatPlugin.&lt;init&gt;
(Lorg/eclipse/core/runtime/IPluginDescriptor;)V
   java/lang/reflect/AccessibleObject.invokeV(Ljava/lang/Object;
[Ljava/lang/Object;)V
   java/lang/reflect/Constructor.newInstance([Ljava/lang/Object;)
Ljava/lang/Object;
   org/eclipse/core/internal/plugins/PluginDescriptor.internalDoPluginActivation
()V
   org/eclipse/core/internal/plugins/PluginDescriptor.doPluginActivation()V
   org/eclipse/core/internal/plugins/PluginClassLoader.activatePlugin
(Ljava/lang/String;)V
   org/eclipse/core/internal/plugins/PluginClassLoader.findClassParentsSelf
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Z)
Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Lja
va/util/Vector;Z)Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;Z)Ljava/lang/Class;
   java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;
   org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension
(Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtime/IConfigurationEle
ment;Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension
(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtime
/IConfigurationElement;Ljava/lang/String;)Ljava/lang/Object;
   
org/eclipse/core/internal/plugins/ConfigurationElement.createExecutableExtension
(Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/help/AppServer.&lt;clinit&gt;()V
   java/lang/Class.initializeImpl()V
   java/lang/Class.initialize()V
   org/eclipse/help/ui/internal/WorkbenchHelpPlugin.startup()V
   org/eclipse/core/internal/plugins/PluginDescriptor$1.run()V
   org/eclipse/core/internal/runtime/InternalPlatform.run
(Lorg/eclipse/core/runtime/ISafeRunnable;)V
   org/eclipse/core/internal/plugins/PluginDescriptor.internalDoPluginActivation
()V
   org/eclipse/core/internal/plugins/PluginDescriptor.doPluginActivation()V
   org/eclipse/core/internal/plugins/PluginClassLoader.activatePlugin
(Ljava/lang/String;)V
   org/eclipse/core/internal/plugins/PluginClassLoader.findClassParentsSelf
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Z)
Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Lja
va/util/Vector;Z)Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;Z)Ljava/lang/Class;
   java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;
   org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension
(Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtime/IConfigurationEle
ment;Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension
(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtime
/IConfigurationElement;Ljava/lang/String;)Ljava/lang/Object;
   
org/eclipse/core/internal/plugins/ConfigurationElement.createExecutableExtension
(Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/ui/internal/WorkbenchPlugin$1.run()V
   org/eclipse/swt/custom/BusyIndicator.showWhile
(Lorg/eclipse/swt/widgets/Display;Ljava/lang/Runnable;)V
   org/eclipse/ui/internal/WorkbenchPlugin.createExtension
(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/ui/internal/PluginAction.createDelegate()V
   org/eclipse/ui/internal/PluginAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/ui/internal/WWinPluginAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.access$0
(Lorg/eclipse/jface/action/ActionContributionItem;Lorg/eclipse/swt/widgets/Event
;)V
   org/eclipse/jface/action/ActionContributionItem$ActionListener.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)
V
   org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   java/lang/reflect/AccessibleObject.invokeL(Ljava/lang/Object;
[Ljava/lang/Object;)Ljava/lang/Object;
   java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)
Ljava/lang/Object;
   org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/launcher/Main.main([Ljava/lang/String;)V




-----------------------------------------------------------------
After installing beans/awt:

!SESSION Jun 10, 2002 10:53:54.514 ---------------------------------------------
java.version=1.3.0 subset
java.vendor=IBM Corporation
BootLoader constants: OS=qnx, ARCH=x86, WS=photon, NL=en_US
Command-line arguments: -os qnx -ws photon -arch x86 -install 
file:/eclipseF2/eclipse/
!ENTRY org.eclipse.core.runtime 4 2 Jun 10, 2002 10:53:54.586
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.lang.NoClassDefFoundError: javax.naming.directory.DirContext

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/NoClassDefFoundError.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/ClassLoader.defineClassImpl(Ljava/lang/String;[BII)
Ljava/lang/Class;
   java/lang/ClassLoader.defineClass(Ljava/lang/String;
[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;
   java/security/SecureClassLoader.defineClass(Ljava/lang/String;
[BIILjava/security/CodeSource;)Ljava/lang/Class;
   java/net/URLClassLoader.findClassImpl([Ljava/net/URL;Ljava/lang/String;)
Ljava/lang/Class;
   java/net/URLClassLoader$4.run()Ljava/lang/Object;
   java/security/AccessController.doPrivileged
(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)
Ljava/lang/Object;
   java/net/URLClassLoader.findClass(Ljava/lang/String;)Ljava/lang/Class;
   org/eclipse/core/internal/plugins/PluginClassLoader.findClassParentsSelf
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Z)
Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Lja
va/util/Vector;Z)Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;Z)Ljava/lang/Class;
   java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;
   java/lang/ClassLoader.defineClassImpl(Ljava/lang/String;[BII)
Ljava/lang/Class;
   java/lang/ClassLoader.defineClass(Ljava/lang/String;
[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;
   java/security/SecureClassLoader.defineClass(Ljava/lang/String;
[BIILjava/security/CodeSource;)Ljava/lang/Class;
   java/net/URLClassLoader.findClassImpl([Ljava/net/URL;Ljava/lang/String;)
Ljava/lang/Class;
   java/net/URLClassLoader$4.run()Ljava/lang/Object;
   java/security/AccessController.doPrivileged
(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)
Ljava/lang/Object;
   java/net/URLClassLoader.findClass(Ljava/lang/String;)Ljava/lang/Class;
   org/eclipse/core/internal/plugins/PluginClassLoader.findClassParentsSelf
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Z)
Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Lja
va/util/Vector;Z)Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;Z)Ljava/lang/Class;
   java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;
   org/apache/catalina/core/StandardContext.start()V
   org/apache/catalina/core/ContainerBase.addChild
(Lorg/apache/catalina/Container;)V
   org/apache/catalina/core/StandardHost.addChild
(Lorg/apache/catalina/Container;)V
   org/eclipse/tomcat/internal/TomcatAppServer.start()Z
   org/eclipse/tomcat/internal/TomcatAppServer.add
(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
   org/eclipse/help/AppServer.add
(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
   org/eclipse/help/ui/internal/WorkbenchHelpPlugin.startup()V
   org/eclipse/core/internal/plugins/PluginDescriptor$1.run()V
   org/eclipse/core/internal/runtime/InternalPlatform.run
(Lorg/eclipse/core/runtime/ISafeRunnable;)V
   org/eclipse/core/internal/plugins/PluginDescriptor.internalDoPluginActivation
()V
   org/eclipse/core/internal/plugins/PluginDescriptor.doPluginActivation()V
   org/eclipse/core/internal/plugins/PluginClassLoader.activatePlugin
(Ljava/lang/String;)V
   org/eclipse/core/internal/plugins/PluginClassLoader.findClassParentsSelf
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Z)
Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Lja
va/util/Vector;Z)Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;Z)Ljava/lang/Class;
   java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;
   org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension
(Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtime/IConfigurationEle
ment;Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension
(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtime
/IConfigurationElement;Ljava/lang/String;)Ljava/lang/Object;
   
org/eclipse/core/internal/plugins/ConfigurationElement.createExecutableExtension
(Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/ui/internal/WorkbenchPlugin$1.run()V
   org/eclipse/swt/custom/BusyIndicator.showWhile
(Lorg/eclipse/swt/widgets/Display;Ljava/lang/Runnable;)V
   org/eclipse/ui/internal/WorkbenchPlugin.createExtension
(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/ui/internal/PluginAction.createDelegate()V
   org/eclipse/ui/internal/PluginAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/ui/internal/WWinPluginAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.access$0
(Lorg/eclipse/jface/action/ActionContributionItem;Lorg/eclipse/swt/widgets/Event
;)V
   org/eclipse/jface/action/ActionContributionItem$ActionListener.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)
V
   org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   java/lang/reflect/AccessibleObject.invokeL(Ljava/lang/Object;
[Ljava/lang/Object;)Ljava/lang/Object;
   java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)
Ljava/lang/Object;
   org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/launcher/Main.main([Ljava/lang/String;)V
Help uses the Tomcat plugin and jdk 1.3 or higher.
I think there is an option to start Tomcat without JNDI, and we can 
investigate. The easiest workaround is to have the appropriate missing jar 
files (jndi, etc.) in a fragment for org.eclipse.tomcat.
There is a way to disable naming, so if you setup self hosting, add this line

tomcat.setUseNaming(false);

to line 39 in the constructor of org.eclipse.tomcat.internal.TomcatPlugin

and see if help works.
Created attachment 1347
jar file containing the code change mentioned.  Copy in org.eclipse.tomcat.
If you want to run without self hosting, just download the attached 
tomcatwrapper.jar file into the plugins\org.eclipse.tomcat and give it a try. 
I tried both with self-hosting change and with attached tomcatwrapper.jar and 
still get 

java.lang.NoClassDefFoundError: javax.naming.directory.DirContext.

Did some google searching and found a reference to system property 
catalina.useNaming. That doesn't seem to help either.


OK, I will investigate a bit more.
I just checked the log again, and it appears that java bean classes are not in 
J9.

java.lang.reflect.InvocationTargetException: java.lang.NoClassDefFoundError: 
java.beans.PropertyChangeSupport

So, this has nothing to do with JNDI.
Correct, j9 does not have beans by default. If you notice in the description I 
mentioned that I worked around the java beans problem by using the Personal 
Configuration for J9. I created a beans.jar based on Personal Configuration, 
which has java.beans and java.awt classes, but has org.eclipse.swt classes 
removed to avoid conflicts with Eclipse.

I will attach beans.jar
Can't seem to create the attachment. You can email me for file in the meantime.

On Windows, this is related to bug 20645 
The help engine is expecting an executable called javaw.exe. This does not work
with other jre's (i.e. J9). The help system CAN NOT on the 'java' executable
being called a particular name.

Here is the fix (in help system):

In class org.eclipse.help.ui.internal.browser.win32.IEBrowserAdapter change 
the constructor to replace the following line (line 35)

        String executable ="java";
 with
	String vm = System.getProperty("java.vm.name");
	String executable = "J9".equals(vm) ? "j9":"java";

Do you know of a better way to handle the name of the java executable? Can you 
post a patch ?
No other ideas on the fix.

However, the second line of the 'fix':

		 String executable = "J9".equals(vm) ? "j9":"java";

seems to be simply trying to lowercase the result.  I'm not sure what the spec
is for the java.vm.name -- that code might not work on other VMs.. 
Did you test this against any others?
The code does not lower case the vm.
It simply checks if the vm is J9 and calls j9 if so(w is appended on the next 
line that is not included here, when running on Windows) , else it defaults to 
java
The supported JVM's (Sun's and IBM's) use java as the executable name.


when will this be available
The change is in the repository, Vlad has approved it, and if nobody vetos it, 
it will be submitted to the next integration build.
It looks like this bug has been fixed long time ago. I will close it.</WithStack>
    <WithOutStack>Tested on F2 with J9 runtime at 
http://www.embedded.oti.com/download/technologies/wce_eclipse.phtml

As shipped, when you launch eclipse and attempt to open help contents you get 
an error about missing java.beans.propertyChangeSupport. This is because the 
stock J9 runtime does not include java beans. 

As a workaround, I added in parts of the Personal Configuration for J9 
(includes beans and awt) to the J9 bootpath. I get further, but cannot proceed 
because JNDI is used and J9 does not support JNDI. 
(javax.naming.directory.DirContext) is the specific class.

.log excerpts included below:

----------------------------------------------------------
Initial error:

!SESSION Jun 10, 2002 10:34:51.166 ---------------------------------------------
java.version=1.3.0 subset
java.vendor=IBM Corporation
BootLoader constants: OS=qnx, ARCH=x86, WS=photon, NL=en_US
Command-line arguments: -os qnx -ws photon -arch x86 -install 
file:/eclipseF2/eclipse/
!ENTRY org.eclipse.core.runtime 4 2 Jun 10, 2002 10:34:51.238
!MESSAGE Plug-in "org.eclipse.tomcat" was unable to instantiate 
class "org.eclipse.tomcat.internal.TomcatPlugin".
!STACK 0
java.lang.reflect.InvocationTargetException: java.lang.NoClassDefFoundError: 
java.beans.PropertyChangeSupport

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/NoClassDefFoundError.&lt;init&gt;(Ljava/lang/String;)V
   org/apache/catalina/logger/LoggerBase.&lt;init&gt;()V
   org/apache/catalina/logger/FileLogger.&lt;init&gt;()V
   org/eclipse/tomcat/internal/TomcatPlugin.&lt;init&gt;
(Lorg/eclipse/core/runtime/IPluginDescriptor;)V
   java/lang/reflect/AccessibleObject.invokeV(Ljava/lang/Object;
[Ljava/lang/Object;)V
   java/lang/reflect/Constructor.newInstance([Ljava/lang/Object;)
Ljava/lang/Object;
   org/eclipse/core/internal/plugins/PluginDescriptor.internalDoPluginActivation
()V
   org/eclipse/core/internal/plugins/PluginDescriptor.doPluginActivation()V
   org/eclipse/core/internal/plugins/PluginClassLoader.activatePlugin
(Ljava/lang/String;)V
   org/eclipse/core/internal/plugins/PluginClassLoader.findClassParentsSelf
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Z)
Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Lja
va/util/Vector;Z)Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;Z)Ljava/lang/Class;
   java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;
   org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension
(Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtime/IConfigurationEle
ment;Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension
(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtime
/IConfigurationElement;Ljava/lang/String;)Ljava/lang/Object;
   
org/eclipse/core/internal/plugins/ConfigurationElement.createExecutableExtension
(Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/help/AppServer.&lt;clinit&gt;()V
   java/lang/Class.initializeImpl()V
   java/lang/Class.initialize()V
   org/eclipse/help/ui/internal/WorkbenchHelpPlugin.startup()V
   org/eclipse/core/internal/plugins/PluginDescriptor$1.run()V
   org/eclipse/core/internal/runtime/InternalPlatform.run
(Lorg/eclipse/core/runtime/ISafeRunnable;)V
   org/eclipse/core/internal/plugins/PluginDescriptor.internalDoPluginActivation
()V
   org/eclipse/core/internal/plugins/PluginDescriptor.doPluginActivation()V
   org/eclipse/core/internal/plugins/PluginClassLoader.activatePlugin
(Ljava/lang/String;)V
   org/eclipse/core/internal/plugins/PluginClassLoader.findClassParentsSelf
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Z)
Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Lja
va/util/Vector;Z)Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;Z)Ljava/lang/Class;
   java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;
   org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension
(Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtime/IConfigurationEle
ment;Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension
(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtime
/IConfigurationElement;Ljava/lang/String;)Ljava/lang/Object;
   
org/eclipse/core/internal/plugins/ConfigurationElement.createExecutableExtension
(Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/ui/internal/WorkbenchPlugin$1.run()V
   org/eclipse/swt/custom/BusyIndicator.showWhile
(Lorg/eclipse/swt/widgets/Display;Ljava/lang/Runnable;)V
   org/eclipse/ui/internal/WorkbenchPlugin.createExtension
(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/ui/internal/PluginAction.createDelegate()V
   org/eclipse/ui/internal/PluginAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/ui/internal/WWinPluginAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.access$0
(Lorg/eclipse/jface/action/ActionContributionItem;Lorg/eclipse/swt/widgets/Event
;)V
   org/eclipse/jface/action/ActionContributionItem$ActionListener.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)
V
   org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   java/lang/reflect/AccessibleObject.invokeL(Ljava/lang/Object;
[Ljava/lang/Object;)Ljava/lang/Object;
   java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)
Ljava/lang/Object;
   org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/launcher/Main.main([Ljava/lang/String;)V




-----------------------------------------------------------------
After installing beans/awt:

!SESSION Jun 10, 2002 10:53:54.514 ---------------------------------------------
java.version=1.3.0 subset
java.vendor=IBM Corporation
BootLoader constants: OS=qnx, ARCH=x86, WS=photon, NL=en_US
Command-line arguments: -os qnx -ws photon -arch x86 -install 
file:/eclipseF2/eclipse/
!ENTRY org.eclipse.core.runtime 4 2 Jun 10, 2002 10:53:54.586
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.lang.NoClassDefFoundError: javax.naming.directory.DirContext

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/NoClassDefFoundError.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/ClassLoader.defineClassImpl(Ljava/lang/String;[BII)
Ljava/lang/Class;
   java/lang/ClassLoader.defineClass(Ljava/lang/String;
[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;
   java/security/SecureClassLoader.defineClass(Ljava/lang/String;
[BIILjava/security/CodeSource;)Ljava/lang/Class;
   java/net/URLClassLoader.findClassImpl([Ljava/net/URL;Ljava/lang/String;)
Ljava/lang/Class;
   java/net/URLClassLoader$4.run()Ljava/lang/Object;
   java/security/AccessController.doPrivileged
(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)
Ljava/lang/Object;
   java/net/URLClassLoader.findClass(Ljava/lang/String;)Ljava/lang/Class;
   org/eclipse/core/internal/plugins/PluginClassLoader.findClassParentsSelf
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Z)
Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Lja
va/util/Vector;Z)Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;Z)Ljava/lang/Class;
   java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;
   java/lang/ClassLoader.defineClassImpl(Ljava/lang/String;[BII)
Ljava/lang/Class;
   java/lang/ClassLoader.defineClass(Ljava/lang/String;
[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;
   java/security/SecureClassLoader.defineClass(Ljava/lang/String;
[BIILjava/security/CodeSource;)Ljava/lang/Class;
   java/net/URLClassLoader.findClassImpl([Ljava/net/URL;Ljava/lang/String;)
Ljava/lang/Class;
   java/net/URLClassLoader$4.run()Ljava/lang/Object;
   java/security/AccessController.doPrivileged
(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)
Ljava/lang/Object;
   java/net/URLClassLoader.findClass(Ljava/lang/String;)Ljava/lang/Class;
   org/eclipse/core/internal/plugins/PluginClassLoader.findClassParentsSelf
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Z)
Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Lja
va/util/Vector;Z)Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;Z)Ljava/lang/Class;
   java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;
   org/apache/catalina/core/StandardContext.start()V
   org/apache/catalina/core/ContainerBase.addChild
(Lorg/apache/catalina/Container;)V
   org/apache/catalina/core/StandardHost.addChild
(Lorg/apache/catalina/Container;)V
   org/eclipse/tomcat/internal/TomcatAppServer.start()Z
   org/eclipse/tomcat/internal/TomcatAppServer.add
(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
   org/eclipse/help/AppServer.add
(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
   org/eclipse/help/ui/internal/WorkbenchHelpPlugin.startup()V
   org/eclipse/core/internal/plugins/PluginDescriptor$1.run()V
   org/eclipse/core/internal/runtime/InternalPlatform.run
(Lorg/eclipse/core/runtime/ISafeRunnable;)V
   org/eclipse/core/internal/plugins/PluginDescriptor.internalDoPluginActivation
()V
   org/eclipse/core/internal/plugins/PluginDescriptor.doPluginActivation()V
   org/eclipse/core/internal/plugins/PluginClassLoader.activatePlugin
(Ljava/lang/String;)V
   org/eclipse/core/internal/plugins/PluginClassLoader.findClassParentsSelf
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Z)
Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;ZLorg/eclipse/core/internal/boot/DelegatingURLClassLoader;Lja
va/util/Vector;Z)Ljava/lang/Class;
   org/eclipse/core/internal/boot/DelegatingURLClassLoader.loadClass
(Ljava/lang/String;Z)Ljava/lang/Class;
   java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;
   org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension
(Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtime/IConfigurationEle
ment;Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/internal/plugins/PluginDescriptor.createExecutableExtension
(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/eclipse/core/runtime
/IConfigurationElement;Ljava/lang/String;)Ljava/lang/Object;
   
org/eclipse/core/internal/plugins/ConfigurationElement.createExecutableExtension
(Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/ui/internal/WorkbenchPlugin$1.run()V
   org/eclipse/swt/custom/BusyIndicator.showWhile
(Lorg/eclipse/swt/widgets/Display;Ljava/lang/Runnable;)V
   org/eclipse/ui/internal/WorkbenchPlugin.createExtension
(Lorg/eclipse/core/runtime/IConfigurationElement;Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/ui/internal/PluginAction.createDelegate()V
   org/eclipse/ui/internal/PluginAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/ui/internal/WWinPluginAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.access$0
(Lorg/eclipse/jface/action/ActionContributionItem;Lorg/eclipse/swt/widgets/Event
;)V
   org/eclipse/jface/action/ActionContributionItem$ActionListener.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)
V
   org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   java/lang/reflect/AccessibleObject.invokeL(Ljava/lang/Object;
[Ljava/lang/Object;)Ljava/lang/Object;
   java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)
Ljava/lang/Object;
   org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/launcher/Main.main([Ljava/lang/String;)V
Help uses the Tomcat plugin and jdk 1.3 or higher.
I think there is an option to start Tomcat without JNDI, and we can 
investigate. The easiest workaround is to have the appropriate missing jar 
files (jndi, etc.) in a fragment for org.eclipse.tomcat.
There is a way to disable naming, so if you setup self hosting, add this line

tomcat.setUseNaming(false);

to line 39 in the constructor of org.eclipse.tomcat.internal.TomcatPlugin

and see if help works.
Created attachment 1347
jar file containing the code change mentioned.  Copy in org.eclipse.tomcat.
If you want to run without self hosting, just download the attached 
tomcatwrapper.jar file into the plugins\org.eclipse.tomcat and give it a try. 
I tried both with self-hosting change and with attached tomcatwrapper.jar and 
still get 

java.lang.NoClassDefFoundError: javax.naming.directory.DirContext.

Did some google searching and found a reference to system property 
catalina.useNaming. That doesn't seem to help either.


OK, I will investigate a bit more.
I just checked the log again, and it appears that java bean classes are not in 
J9.

java.lang.reflect.InvocationTargetException: java.lang.NoClassDefFoundError: 
java.beans.PropertyChangeSupport

So, this has nothing to do with JNDI.
Correct, j9 does not have beans by default. If you notice in the description I 
mentioned that I worked around the java beans problem by using the Personal 
Configuration for J9. I created a beans.jar based on Personal Configuration, 
which has java.beans and java.awt classes, but has org.eclipse.swt classes 
removed to avoid conflicts with Eclipse.

I will attach beans.jar
Can't seem to create the attachment. You can email me for file in the meantime.

On Windows, this is related to bug 20645 
The help engine is expecting an executable called javaw.exe. This does not work
with other jre's (i.e. J9). The help system CAN NOT on the 'java' executable
being called a particular name.

Here is the fix (in help system):

In class org.eclipse.help.ui.internal.browser.win32.IEBrowserAdapter change 
the constructor to replace the following line (line 35)

        String executable ="java";
 with
	String vm = System.getProperty("java.vm.name");
	String executable = "J9".equals(vm) ? "j9":"java";

Do you know of a better way to handle the name of the java executable? Can you 
post a patch ?
No other ideas on the fix.

However, the second line of the 'fix':

		 String executable = "J9".equals(vm) ? "j9":"java";

seems to be simply trying to lowercase the result.  I'm not sure what the spec
is for the java.vm.name -- that code might not work on other VMs.. 
Did you test this against any others?
The code does not lower case the vm.
It simply checks if the vm is J9 and calls j9 if so(w is appended on the next 
line that is not included here, when running on Windows) , else it defaults to 
java
The supported JVM's (Sun's and IBM's) use java as the executable name.


when will this be available
The change is in the repository, Vlad has approved it, and if nobody vetos it, 
it will be submitted to the next integration build.
It looks like this bug has been fixed long time ago. I will close it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19821" />
    <CreationDate amount="2002-06-10 13:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>System Info does not show/list Features</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="39">
        <Lines>
          <Line>1. Given the default of 10, the probability that products will push this number</Line>
          <Line>much higher (such as 100+ to ensure they have a full log), and the update</Line>
          <Line>manager UI change to show them in the reverse order so that the most recent is</Line>
          <Line>at the top:</Line>
          <Line />
          <Line>&gt;System Info may want to move the configuration change log to after the error</Line>
          <Line>log and reverse the order to be consistent with the UI rendering of the same</Line>
          <Line>information.</Line>
          <Line />
          <Line>2.Product service may require both a granular and conceptual view of what is</Line>
          <Line>installed.  Plugin details are granular.  Features are conceptual.  Visibility</Line>
          <Line>to the active features, with version info, is available in both the About</Line>
          <Line>features dialog and the Update Manager perspective.</Line>
          <Line />
          <Line>&gt;This information must be in the system info, near/before the plug-in details</Line>
          <Line>(or indented plugins under a feature (like fragments are shown for a plugin)</Line>
          <Line>would work too).</Line>
          <Line />
          <Line>3.Nit.  The spaced line after each indented fragment for a plug-in implies that</Line>
          <Line>there is a grouping of the plugins.  This is false as the fragment existence</Line>
          <Line>triggers the blank link - but the implication drives confusion when trying to</Line>
          <Line>visually parse the content.</Line>
          <Line />
          <Line>&gt; If plug-ins were listed by feature - then blanks/separator's before the</Line>
          <Line>feature would work.  If not, then maybe the blank after a fragment should be</Line>
          <Line>removed as the indentation would be enough and reduce the visual confusion.</Line>
          <Line />
          <Line>4.Trying to determine if more detail about features/plugins impacted by a</Line>
          <Line>configuration change is available.  If it is, this would be requested as part of</Line>
          <Line>the system info content.</Line>
          <Line>1. Currently we display in the order they are given to us.</Line>
          <Line>3. The spaced line is already removed.</Line>
          <Line>Item 2 (including a list of features in the set of config data) is viewed as</Line>
          <Line>required.  Status on getting this in the configuration detail?</Line>
          <Line>Added features section.</Line>
          <Line>This displays the same list as is present in the About &gt; Feature Details</Line>
          <Line>dialog.</Line>
          <Line>Checked with Kevin H., Simon</Line>
          <Line>Released.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Per the last go around: "Please file another PR if support for additional 
diagnostics is required."

The System Info content may need another pass.  Based on the discussion in 
(http://dev.eclipse.org/bugs/show_bug.cgi?id=19301) we may need to consider some 
restructure to the order of the content as well as adding more information about 
the active features.

Points:
1. Given the default of 10, the probability that products will push this number 
much higher (such as 100+ to ensure they have a full log), and the update 
manager UI change to show them in the reverse order so that the most recent is 
at the top:

&gt;System Info may want to move the configuration change log to after the error 
log and reverse the order to be consistent with the UI rendering of the same 
information.

2.Product service may require both a granular and conceptual view of what is 
installed.  Plugin details are granular.  Features are conceptual.  Visibility 
to the active features, with version info, is available in both the About 
features dialog and the Update Manager perspective.  

&gt;This information must be in the system info, near/before the plug-in details 
(or indented plugins under a feature (like fragments are shown for a plugin) 
would work too).

3.Nit.  The spaced line after each indented fragment for a plug-in implies that 
there is a grouping of the plugins.  This is false as the fragment existence 
triggers the blank link - but the implication drives confusion when trying to 
visually parse the content.

&gt; If plug-ins were listed by feature - then blanks/separator's before the 
feature would work.  If not, then maybe the blank after a fragment should be 
removed as the indentation would be enough and reduce the visual confusion.

4.Trying to determine if more detail about features/plugins impacted by a 
configuration change is available.  If it is, this would be requested as part of 
the system info content.
1. Currently we display in the order they are given to us.
3. The spaced line is already removed.
Item 2 (including a list of features in the set of config data) is viewed as 
required.  Status on getting this in the configuration detail?
Added features section.
This displays the same list as is present in the About &gt; Feature Details 
dialog.
Checked with Kevin H., Simon
Released.</WithStack>
    <WithOutStack>Per the last go around: "Please file another PR if support for additional 
diagnostics is required."

The System Info content may need another pass.  Based on the discussion in 
(http://dev.eclipse.org/bugs/show_bug.cgi?id=19301) we may need to consider some 
restructure to the order of the content as well as adding more information about 
the active features.

Points:
1. Given the default of 10, the probability that products will push this number 
much higher (such as 100+ to ensure they have a full log), and the update 
manager UI change to show them in the reverse order so that the most recent is 
at the top:

&gt;System Info may want to move the configuration change log to after the error 
log and reverse the order to be consistent with the UI rendering of the same 
information.

2.Product service may require both a granular and conceptual view of what is 
installed.  Plugin details are granular.  Features are conceptual.  Visibility 
to the active features, with version info, is available in both the About 
features dialog and the Update Manager perspective.  

&gt;This information must be in the system info, near/before the plug-in details 
(or indented plugins under a feature (like fragments are shown for a plugin) 
would work too).

3.Nit.  The spaced line after each indented fragment for a plug-in implies that 
there is a grouping of the plugins.  This is false as the fragment existence 
triggers the blank link - but the implication drives confusion when trying to 
visually parse the content.

&gt; If plug-ins were listed by feature - then blanks/separator's before the 
feature would work.  If not, then maybe the blank after a fragment should be 
removed as the indentation would be enough and reduce the visual confusion.

4.Trying to determine if more detail about features/plugins impacted by a 
configuration change is available.  If it is, this would be requested as part of 
the system info content.
1. Currently we display in the order they are given to us.
3. The spaced line is already removed.
Item 2 (including a list of features in the set of config data) is viewed as 
required.  Status on getting this in the configuration detail?
Added features section.
This displays the same list as is present in the About &gt; Feature Details 
dialog.
Checked with Kevin H., Simon
Released.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19822" />
    <CreationDate amount="2002-06-10 13:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Type hierarchy on binary types reports wrong hierarchy</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="assignment">
        <location start="217" end="273" />
        <code>ITypeHierarchy h = b.getType.newSupertypeHierarchy(...);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="274" end="296" />
        <code>System.out.println(h);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1936" end="2002" />
        <code>// analyzeFile is indirectly called by the run(IAction) method</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2003" end="2532" />
        <code>private void analyzeFile(IFile f) throws JavaModelException {
    IJavaElement e = JavaCore.create((IFile) f);
// Commented out is the code that works, based on compilation units, not sources
//    if (e instanceof ICompilationUnit) {
//      IType[] types = ((ICompilationUnit) e).getAllTypes();
//      for (int t = 0; t &lt; types.length; t++)
//        analyzeClass(types[t]);
//    }

// Here is the code that reproduces the problem
    if (e instanceof IClassFile) {
      analyzeClass(((IClassFile) e).getType());
    }
  }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2534" end="3589" />
        <code>private void analyzeClass(IType c) throws JavaModelException {
    System.out.println("Analyzing class " + c.getElementName());
    IMethod[] methods = c.getMethods();
    ITypeHierarchy hierarchy =
      c.newSupertypeHierarchy(new NullProgressMonitor());
    IType[] supers = hierarchy.getAllSuperclasses(hierarchy.getType());

    for (int m = 0; m &lt; methods.length; m++)
      if (isVirtual(methods[m])) {
        resultsTable.addCallTarget(c.getElementName(),
                                   methods[m].getElementName(),
                                   c.getElementName());

        int i = 0;
        while ((i &lt; supers.length) &amp;&amp;
               superHasMethod(supers[i], methods[m])) {
          resultsTable.addCallTarget(supers[i].getElementName(),
                                     methods[m].getElementName(),
                                     c.getElementName());
          System.out.println("(analyzeClass: superclass name is " +
                             supers[i].getSuperclassName());
          i++;
        }
      }
  }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3593" end="3772" />
        <code>private boolean isVirtual(IMethod m) throws JavaModelException {
    return !(m.isConstructor() || Flags.isStatic(m.getFlags()) ||
             Flags.isFinal(m.getFlags()));
  }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3776" end="3992" />
        <code>private boolean superHasMethod(IType c, IMethod m) throws JavaModelException {
    IMethod[] methods = c.findMethods(m);
    return (methods != null) &amp;&amp; (methods.length &gt; 0) &amp;&amp;
           isVirtual(methods[0]);
  }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Given a simple class hierarchy (i.e. classes A, B with B a subclass of A),
retrieve a type hierarchy from B's classfile object's corresponding type.
Now try this: If b is an IClassFile corresponding to class B -

...
ITypeHierarchy h = b.getType.newSupertypeHierarchy(...);
System.out.println(h);
...

In the printout, class B will be reported as both a root, and a subclass.
Furthermore, the following code - "h.getSuperclass(h.getType())" - yields null.

Note: This all works perfectly well when dealing with sources (i.e.
ICompilationUnit) rather than class files.

I'm using Eclipse build 20020602.
Is it for any classfile or certain ones only ?


Pls investigate
I ran into this in a plugin I wrote that traverses the class hierarchy/s in a
project by looking only at class files and retrieving hierarchies thru their
ITypes. I ran it only on a simple test project, like the one I describe in the
original report (i.e. two classes, one inheriting from the other). For both the
super and the subclass I got strange results.

I tried delving a bit into the actual TypeHierarchy code, but I don't have the
time now to actually understand what goes on there. Any ideas for further
investigation?
I can not reproduce.

Ittai - Could you give me exact step to reproduce this bug.
Created attachment 1359
Test case project, as taken from my runtime-workspace
Shall I simply give you a copy of my plugin? It does depend on Xalan and its
versions of the xerces jars, so it might be a hassle to install.

In any case, here's a code excerpt that reproduces this behavior. This is from
the plugin's action class (as derived from the Hello World plugin).
The thing to look for is analyzeFile and analyzeClass.
I'm also attaching the test case project, on which I tested my plugin's
analysis, as taken from my runtime-workspace (this is a simple two-class
hierarchy with inheritance).

Let me know what else you need.

Ittai

-------------

...

  // analyzeFile is indirectly called by the run(IAction) method

  private void analyzeFile(IFile f) throws JavaModelException {
    IJavaElement e = JavaCore.create((IFile) f);
// Commented out is the code that works, based on compilation units, not sources
//    if (e instanceof ICompilationUnit) {
//      IType[] types = ((ICompilationUnit) e).getAllTypes();
//      for (int t = 0; t &lt; types.length; t++)
//        analyzeClass(types[t]);
//    }

// Here is the code that reproduces the problem
    if (e instanceof IClassFile) {
      analyzeClass(((IClassFile) e).getType());
    }
  }

  private void analyzeClass(IType c) throws JavaModelException {
    System.out.println("Analyzing class " + c.getElementName());
    IMethod[] methods = c.getMethods();
    ITypeHierarchy hierarchy =
      c.newSupertypeHierarchy(new NullProgressMonitor());
    IType[] supers = hierarchy.getAllSuperclasses(hierarchy.getType());

    for (int m = 0; m &lt; methods.length; m++)
      if (isVirtual(methods[m])) {
        resultsTable.addCallTarget(c.getElementName(),
                                   methods[m].getElementName(),
                                   c.getElementName());

        int i = 0;
        while ((i &lt; supers.length) &amp;&amp;
               superHasMethod(supers[i], methods[m])) {
          resultsTable.addCallTarget(supers[i].getElementName(),
                                     methods[m].getElementName(),
                                     c.getElementName());
          System.out.println("(analyzeClass: superclass name is " +
                             supers[i].getSuperclassName());
          i++;
        }
      }
  }
  
  private boolean isVirtual(IMethod m) throws JavaModelException {
    return !(m.isConstructor() || Flags.isStatic(m.getFlags()) ||
             Flags.isFinal(m.getFlags()));
  }
  
  private boolean superHasMethod(IType c, IMethod m) throws JavaModelException {
    IMethod[] methods = c.findMethods(m);
    return (methods != null) &amp;&amp; (methods.length &gt; 0) &amp;&amp;
           isVirtual(methods[0]);
  }

---------------------

In your test case the class file is in a source folder because source folder 
and binary folder are the same (the project root). The class file in a source 
folder are not supposed to be manipulated.

The problem is not that the hierarchy is wrong but that the hierachy should not 
be computed and should failed earlier.

If the class file is in a jar or a class folder then type hierarchy computation 
works.


Ok. I wasn't aware where the test project's class files were stored, nor that
there is a special notion of a "classfile folder". Thanks.

BTW Perhaps this should be documented in the API.
Look at project properties and select Java Build Path. You can change source 
directory, build output directory and add class folder. To add a class folder 
select the 'Libraries' tab and click on the 'Advanced...' button.
Defer
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Given a simple class hierarchy (i.e. classes A, B with B a subclass of A),
retrieve a type hierarchy from B's classfile object's corresponding type.
Now try this: If b is an IClassFile corresponding to class B -

...
ITypeHierarchy h = b.getType.newSupertypeHierarchy(...);
System.out.println(h);
...

In the printout, class B will be reported as both a root, and a subclass.
Furthermore, the following code - "h.getSuperclass(h.getType())" - yields null.

Note: This all works perfectly well when dealing with sources (i.e.
ICompilationUnit) rather than class files.

I'm using Eclipse build 20020602.
Is it for any classfile or certain ones only ?


Pls investigate
I ran into this in a plugin I wrote that traverses the class hierarchy/s in a
project by looking only at class files and retrieving hierarchies thru their
ITypes. I ran it only on a simple test project, like the one I describe in the
original report (i.e. two classes, one inheriting from the other). For both the
super and the subclass I got strange results.

I tried delving a bit into the actual TypeHierarchy code, but I don't have the
time now to actually understand what goes on there. Any ideas for further
investigation?
I can not reproduce.

Ittai - Could you give me exact step to reproduce this bug.
Created attachment 1359
Test case project, as taken from my runtime-workspace
Shall I simply give you a copy of my plugin? It does depend on Xalan and its
versions of the xerces jars, so it might be a hassle to install.

In any case, here's a code excerpt that reproduces this behavior. This is from
the plugin's action class (as derived from the Hello World plugin).
The thing to look for is analyzeFile and analyzeClass.
I'm also attaching the test case project, on which I tested my plugin's
analysis, as taken from my runtime-workspace (this is a simple two-class
hierarchy with inheritance).

Let me know what else you need.

Ittai

-------------

...

  // analyzeFile is indirectly called by the run(IAction) method

  private void analyzeFile(IFile f) throws JavaModelException {
    IJavaElement e = JavaCore.create((IFile) f);
// Commented out is the code that works, based on compilation units, not sources
//    if (e instanceof ICompilationUnit) {
//      IType[] types = ((ICompilationUnit) e).getAllTypes();
//      for (int t = 0; t &lt; types.length; t++)
//        analyzeClass(types[t]);
//    }

// Here is the code that reproduces the problem
    if (e instanceof IClassFile) {
      analyzeClass(((IClassFile) e).getType());
    }
  }

  private void analyzeClass(IType c) throws JavaModelException {
    System.out.println("Analyzing class " + c.getElementName());
    IMethod[] methods = c.getMethods();
    ITypeHierarchy hierarchy =
      c.newSupertypeHierarchy(new NullProgressMonitor());
    IType[] supers = hierarchy.getAllSuperclasses(hierarchy.getType());

    for (int m = 0; m &lt; methods.length; m++)
      if (isVirtual(methods[m])) {
        resultsTable.addCallTarget(c.getElementName(),
                                   methods[m].getElementName(),
                                   c.getElementName());

        int i = 0;
        while ((i &lt; supers.length) &amp;&amp;
               superHasMethod(supers[i], methods[m])) {
          resultsTable.addCallTarget(supers[i].getElementName(),
                                     methods[m].getElementName(),
                                     c.getElementName());
          System.out.println("(analyzeClass: superclass name is " +
                             supers[i].getSuperclassName());
          i++;
        }
      }
  }
  
  private boolean isVirtual(IMethod m) throws JavaModelException {
    return !(m.isConstructor() || Flags.isStatic(m.getFlags()) ||
             Flags.isFinal(m.getFlags()));
  }
  
  private boolean superHasMethod(IType c, IMethod m) throws JavaModelException {
    IMethod[] methods = c.findMethods(m);
    return (methods != null) &amp;&amp; (methods.length &gt; 0) &amp;&amp;
           isVirtual(methods[0]);
  }

---------------------

In your test case the class file is in a source folder because source folder 
and binary folder are the same (the project root). The class file in a source 
folder are not supposed to be manipulated.

The problem is not that the hierarchy is wrong but that the hierachy should not 
be computed and should failed earlier.

If the class file is in a jar or a class folder then type hierarchy computation 
works.


Ok. I wasn't aware where the test project's class files were stored, nor that
there is a special notion of a "classfile folder". Thanks.

BTW Perhaps this should be documented in the API.
Look at project properties and select Java Build Path. You can change source 
directory, build output directory and add class folder. To add a class folder 
select the 'Libraries' tab and click on the 'Advanced...' button.
Defer
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19823" />
    <CreationDate amount="2002-06-10 14:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Doc" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>enablesFor   attribute of viewAction is ignored</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>The documented enablesFor attribute of a viewAction is never referred to in 
ActionDescriptor. It should either be hooked up or removed from the 
documentation.
This attribute is used in the code for the extension point viewActions. Its the 
(super) class PluginAction that refers to it. There is an article 
("contributing actions to the workbench) that shows this attribute being used.</WithStack>
    <WithOutStack>The documented enablesFor attribute of a viewAction is never referred to in 
ActionDescriptor. It should either be hooked up or removed from the 
documentation.
This attribute is used in the code for the extension point viewActions. Its the 
(super) class PluginAction that refers to it. There is an article 
("contributing actions to the workbench) that shows this attribute being used.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19824" />
    <CreationDate amount="2002-06-10 14:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Needed multi-monitor methods.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="18">
        <Lines>
          <Line>1. A way to determine the bounds/client area of the monitor the application is</Line>
          <Line>primarily running on.  In a win32 env his can be accomplished using the api</Line>
          <Line>MonitorFromWindow().  Alternatively, SWT could provide a way to get the bounds</Line>
          <Line>of a specific monitor.  That would also include being able to get all the</Line>
          <Line>monitors connected to the system and also determining which one is the primary.</Line>
          <Line />
          <Line>2. A way to determine the bounds/client area of a monitor based on a specific</Line>
          <Line>point.  In a win32 env his can be accomplished using the api MonitorFromPoint</Line>
          <Line>().</Line>
          <Line />
          <Line>3. A way to determine the virtual bounds/client area of all connected monitors</Line>
          <Line>on the system.  This is currently how Display.getBounds() works, but should</Line>
          <Line>probably be renamed to something like Display.getVirtualBounds() for clarity.</Line>
          <Line>The current Display.getClientArea() does not work properly as it doesn't</Line>
          <Line>account for task bars and such.</Line>
          <Line>Any solution we come up with needs to be implementable on at least win32,</Line>
          <Line>linux and macosx, since multi-moniter setups are common for all these</Line>
          <Line>platforms.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="9">
        <Lines>
          <Line>- we require GTK 2.2.  There is no API in earlier GTK versions</Line>
          <Line>- there is no prototype yet for Mac and Photon but we have looked at the API</Line>
          <Line>Regarding this issue: the only problem i have is that when i restart eclipse,</Line>
          <Line>the window is not positioned as it was closed. My second monitor is left to the</Line>
          <Line>primary so coordinates are negative for the second monitor. Multi-monitor</Line>
          <Line>support is ok if you stretch the window over the two screens in minimize mode</Line>
          <Line>(windows). The only anoying thisg is to reposition the window manually each</Line>
          <Line>time is start Eclipse.</Line>
          <Line>Andre: I have opened a separate bug 34239 to track down your issue.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>A programmer needs the following support in SWT in order to be able to program 
for multi-monitors correctly.

1. A way to determine the bounds/client area of the monitor the application is 
primarily running on.  In a win32 env his can be accomplished using the api 
MonitorFromWindow().  Alternatively, SWT could provide a way to get the bounds 
of a specific monitor.  That would also include being able to get all the 
monitors connected to the system and also determining which one is the primary.

2. A way to determine the bounds/client area of a monitor based on a specific 
point.  In a win32 env his can be accomplished using the api MonitorFromPoint
().

3. A way to determine the virtual bounds/client area of all connected monitors 
on the system.  This is currently how Display.getBounds() works, but should 
probably be renamed to something like Display.getVirtualBounds() for clarity.  
The current Display.getClientArea() does not work properly as it doesn't 
account for task bars and such.
Any solution we come up with needs to be implementable on at least win32, 
linux and macosx, since multi-moniter setups are common for all these 
platforms.

Defer until post R2.0.

We need to look at this again, if not for 2.1 then 3.0.
*** Bug 22224 has been marked as a duplicate of this bug. ***
*** Bug 30386 has been marked as a duplicate of this bug. ***
Chrix is working on this.
*** Bug 26895 has been marked as a duplicate of this bug. ***
*** Bug 30387 has been marked as a duplicate of this bug. ***
*** Bug 7232 has been marked as a duplicate of this bug. ***
*** Bug 20223 has been marked as a duplicate of this bug. ***
I have investigated support for multi monitor support. This won't make it in 
Eclipse 2.1.  Outstanding issues:

- we require GTK 2.2.  There is no API in earlier GTK versions
- there is no prototype yet for Mac and Photon but we have looked at the API
Regarding this issue: the only problem i have is that when i restart eclipse, 
the window is not positioned as it was closed. My second monitor is left to the 
primary so coordinates are negative for the second monitor. Multi-monitor 
support is ok if you stretch the window over the two screens in minimize mode 
(windows). The only anoying thisg is to reposition the window manually each 
time is start Eclipse.
Andre: I have opened a separate bug 34239 to track down your issue.

Chris
New multimonitor api has been added since I20030429.

Please see javadoc for:
org.eclipse.swt.widgets.Monitor
org.eclipse.swt.widgets.Display.getPrimaryMonitor
org.eclipse.swt.widgets.Display.getMonitors

A new snippet has been added to show how to center a Shell on the primary 
monitor.
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/snippits/snippet120.html

SWT will detect multimonitor configurations on Windows, GTK 2.2 (which 
provides multimonitor api unlike older GTK 2.0), Mac, Linux Motif.</WithStack>
    <WithOutStack>A programmer needs the following support in SWT in order to be able to program 
for multi-monitors correctly.

1. A way to determine the bounds/client area of the monitor the application is 
primarily running on.  In a win32 env his can be accomplished using the api 
MonitorFromWindow().  Alternatively, SWT could provide a way to get the bounds 
of a specific monitor.  That would also include being able to get all the 
monitors connected to the system and also determining which one is the primary.

2. A way to determine the bounds/client area of a monitor based on a specific 
point.  In a win32 env his can be accomplished using the api MonitorFromPoint
().

3. A way to determine the virtual bounds/client area of all connected monitors 
on the system.  This is currently how Display.getBounds() works, but should 
probably be renamed to something like Display.getVirtualBounds() for clarity.  
The current Display.getClientArea() does not work properly as it doesn't 
account for task bars and such.
Any solution we come up with needs to be implementable on at least win32, 
linux and macosx, since multi-moniter setups are common for all these 
platforms.

Defer until post R2.0.

We need to look at this again, if not for 2.1 then 3.0.
*** Bug 22224 has been marked as a duplicate of this bug. ***
*** Bug 30386 has been marked as a duplicate of this bug. ***
Chrix is working on this.
*** Bug 26895 has been marked as a duplicate of this bug. ***
*** Bug 30387 has been marked as a duplicate of this bug. ***
*** Bug 7232 has been marked as a duplicate of this bug. ***
*** Bug 20223 has been marked as a duplicate of this bug. ***
I have investigated support for multi monitor support. This won't make it in 
Eclipse 2.1.  Outstanding issues:

- we require GTK 2.2.  There is no API in earlier GTK versions
- there is no prototype yet for Mac and Photon but we have looked at the API
Regarding this issue: the only problem i have is that when i restart eclipse, 
the window is not positioned as it was closed. My second monitor is left to the 
primary so coordinates are negative for the second monitor. Multi-monitor 
support is ok if you stretch the window over the two screens in minimize mode 
(windows). The only anoying thisg is to reposition the window manually each 
time is start Eclipse.
Andre: I have opened a separate bug 34239 to track down your issue.

Chris
New multimonitor api has been added since I20030429.

Please see javadoc for:
org.eclipse.swt.widgets.Monitor
org.eclipse.swt.widgets.Display.getPrimaryMonitor
org.eclipse.swt.widgets.Display.getMonitors

A new snippet has been added to show how to center a Shell on the primary 
monitor.
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/snippits/snippet120.html

SWT will detect multimonitor configurations on Windows, GTK 2.2 (which 
provides multimonitor api unlike older GTK 2.0), Mac, Linux Motif.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19825" />
    <CreationDate amount="2002-06-10 14:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[misc] Right clicking in an editor window should operate where clicked</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="6">
      <Enumeration lines="136">
        <Lines>
          <Line>a. Right-click is inherently a mouse gesture, and thus should target what's</Line>
          <Line>under the mouse. That's where the user's eyes and intent are - at least for me</Line>
          <Line>and six others who cared enough to write.</Line>
          <Line />
          <Line>b. Options #1 and especially #2 fail the predictability test, especially if the</Line>
          <Line>caret or selection has scrolled off the screen: you can't tell what a right-</Line>
          <Line>click will do based on what you see.</Line>
          <Line />
          <Line>c. The rest of Eclipse works as #3: tree views, list views, and multi-field</Line>
          <Line>views (like the plugin.xml editor) all move the selection to the item or field</Line>
          <Line>under the mouse when you right-click, then pop up the context menu. So</Line>
          <Line>does "Professional Windows" (Word, Visual Studio), as mentioned in this thread.</Line>
          <Line />
          <Line>d. Besides being inconsistent with the rest of Eclipse and much of Windows, #1</Line>
          <Line>and #2 are inconsistent with LEFT-click behavior of the entire universe.</Line>
          <Line />
          <Line>In my opinion, the argument in favor of #1 that it makes the right-click "hit</Line>
          <Line>zone" larger is specious: the whole editor experience is based on using the</Line>
          <Line>mouse to target word- and character-sized areas. (See letter 'd' above.)</Line>
          <Line>Accessibility is served with larger fonts; purely keyboard operation is served</Line>
          <Line>by the context-menu buttons on Windows keyboards, which (correctly, IMO)</Line>
          <Line>operate based on the caret or selection, regardless of the mouse location.</Line>
          <Line />
          <Line>I have no objection to adding an option to control this behavior. Of course, I</Line>
          <Line>would then argue for my preferred default setting...</Line>
          <Line />
          <Line>*** Bug 83301 has been marked as a duplicate of this bug. ***</Line>
          <Line>*** Bug 105176 has been marked as a duplicate of this bug. ***</Line>
          <Line>This bug's third birthday has passed without ceremony. The number of users who</Line>
          <Line>have filed this bug is up to nine: one original and eight duplicates.</Line>
          <Line />
          <Line>In comment #20, I provided what I thought were reasonable arguments in favor of</Line>
          <Line>a change, and I gave what I thought was a good counter-argument regarding the</Line>
          <Line>only solid reason given earlier against the change (that it reduces the hit</Line>
          <Line>area size).</Line>
          <Line />
          <Line>Is there any hope? Can we not at least continue the debate?</Line>
          <Line />
          <Line>*** Bug 130112 has been marked as a duplicate of this bug. ***</Line>
          <Line>Another lonely voice in the wind, another duplicate registered against this 3.75-year-old bug. When it turns 18, will it be able to vote for itself?</Line>
          <Line />
          <Line>Ping.</Line>
          <Line />
          <Line>I don't want to be a pain (which is why I haven't commented in this bug for over 4 years), but I wanted to get some dev feedback on getting this into the next release.  It'd be great if 3.3 was the release where I could stop the infuriating left-click-right-click dance every time I want a context menu on some Java code element.</Line>
          <Line />
          <Line>At least it's managed so far to escape the dreaded RESOLVED/NEVER.  :-)</Line>
          <Line />
          <Line>Seconded. Is there anybody in the core editor group who is willing to speak up on this topic? For or against, it would be nice to hear from somebody. One default attitude in open source is "You want it, you implement it," but in this case the patch exists (well, for the 2003 version anyway) so that advice doesn't apply. How can we move forward on this?</Line>
          <Line>This won't happen for 3.3 and if we decide to add this it won't be the default.</Line>
          <Line>Just like that? I could have hoped that thirteen duplicate bugs over four years would have an impact. Even McQ said in Comment #8 that consistency with the host UI can trump consistency with VA/Smalltalk.</Line>
          <Line />
          <Line>It is easier to change the right-click behavior to match the platform all the time, because that won't require a Preferences UI change. Saying it will have to be an option makes this a bigger job and thus less likely to happen at all.</Line>
          <Line />
          <Line>In order to make this a preference-selectable item, there has to be a compelling reason to keep the current behavior available. Remember, we're talking about the mouse here, not F3 or any other hot key. Can you describe the UI interaction style where it's correct or preferred to have right-click operate on a part of the program that isn't under the mouse?</Line>
          <Line />
          <Line>For the record, our product (Wind River) also gets periodic user complaints about this issue.  I'm OK with leaving the default behavior as is, but a preference would be a great relief.</Line>
          <Line />
          <Line>Re comment 29: if you argue it's a Platform/OS thing then it is something that should come from SWT. Please read previous comments for reasons why we have it the way it is.</Line>
          <Line>I referred to working the same way as the platform as a nice way of saying "working the right way, not the wrong way." I'm sorry my attempt at polite phrasing led to a distraction.</Line>
          <Line />
          <Line>Regarding the reasons it works the way it does today, I only find two concrete statements in this thread supporting the current behavior: in comment #8 (All VisualAge editors worked this way) and in comment #10 (It makes the hit zone for right-clicks larger). I rebutted both of those in comment #20 and I haven't seen any reply to my rebuttal arguments. Everything else in this thread is either an argument for the other side or a discussion of the details of a change.</Line>
          <Line />
          <Line>If I missed any concrete reasons to preserve current behavior or if you want to discuss other reasons, please spell them out and we can talk about them.</Line>
          <Line />
          <Line>+1 on behalf of Symbian. Developers here (using Carbide/CDT) are asking for this behaviour.</Line>
          <Line />
          <Line>(In reply to comment #33)</Line>
          <Line>&gt; +1 on behalf of Symbian. Developers here (using Carbide/CDT) are asking for</Line>
          <Line>&gt; this behaviour.</Line>
          <Line>&gt;</Line>
          <Line />
          <Line>Hi Andrew,</Line>
          <Line>To make your +1 more effective please use the voting (https://bugs.eclipse.org/bugs/page.cgi?id=voting.html) mechanism.  With your vote, this bug will make it into 66 top-voted bugs in platform :-)</Line>
          <Line>Agree with this and have voted accordingly, after searching for some time to find this report.  If there are actions in the context menu that are specific to the cursor position, then it is counter-intuitive for the cursor not to shift.</Line>
          <Line />
          <Line>If I want to open a type hierarchy for a class, I expect to right-click on the class name and select 'type hierarchy'.  To have to manually position the cursor within the class name first feels very clumsy, and hurts the usefulness of the context menu.</Line>
          <Line>I just discovered a UI contradiction quite by chance - clicking the middle mouse button anywhere in the editor cancels the selection (if any), inserts the contents of the clipboard at the mouse cursor and places the caret at the end of the newly pasted text.</Line>
          <Line />
          <Line>This behaviour occurs regardless of the current selection and the mouse position.  Why was this implemented considering the resistance to right-click cursor shifting?</Line>
          <Line />
          <Line>Behaviour noticed in M20090211-1700 (Linux), in every editor I tried (including basic text).</Line>
          <Line>What Luke describes is platform-standard behavior for X applications on Unix: the middle button pastes the clipboard contents at the mouse pointer. On Windows, the center button generally initiates mouse-based scrolling.</Line>
          <Line />
          <Line>I'm glad to see the discussion of this bug start up again. Is anybody home at Platform-Text-Inbox who cares to comment? This 6.5-year-old bug now has nine duplicates and 16 votes, and I haven't seen a rebuttal to my specific arguments (a through d) in comment #20.</Line>
          <Line />
          <Line>To review:</Line>
          <Line />
          <Line>When the text caret or selection has scrolled off the screen, I think having the right-click context menu operate on the (distant, invisible) caret or selection is confusing and unexpected. Following my logic forward, I say that the user intention for a mouse button click ALWAYS follows the mouse pointer, not the text caret or selection. It's where the user's eyes and attention are.</Line>
          <Line />
          <Line>This is universally true of left clicks. Thanks to Luke, we know it's also true of center-clicks on Linux. I think it should be true of right-clicks too.</Line>
          <Line />
          <Line>Here is a summary of the desired behavior: (1) When there is a text selection and the right-click happens inside it, operate there. (2) For all other right-clicks (that is, no selection exists or the click is outside the selection), remove the selection if any, move the text caret to the mouse pointer, and then operate based on that location.</Line>
          <Line />
          <Line>Any comments from the Platform-Text-Inbox people?</Line>
          <Line />
          <Line>Further central-click investigations:</Line>
          <Line />
          <Line>I've tried various Gnome apps on my Ubuntu Intrepid installation (TextEdit, Terminal, OpenOffice Writer) and none of them paste on a central click.  Dialog boxes (e.g. open/save files) do not support it in their text fields.  No Windows applications I could find supported it.  So far as I can see it seems to be an eclipse-specific extension.  Note that I have no particular problem with it, it's just an anachronism.</Line>
          <Line />
          <Line>I found the code in Eclipse that implements it, in org.eclipse.swt.custom.StyledText, in the handleMouseDown function.  It's right at the top of the function, under the 'paste clipboard selection' comment.</Line>
          <Line />
          <Line>This code is present and active in both the Linux and Windows versions of Eclipse, although it doesn't work in Windows (center-click has no effect) because the getClipboardContent(DND.SELECTION_CLIPBOARD) call returns null even when there is text in the clipboard.  I note that in Eclipse, in Windows, center-click does not activate scrolling.  On Linux the call works, and so we get the center-click functionality.</Line>
          <Line>Thanks for checking on the behavior of X apps. I use creaky old xterm a lot, and the middle button pastes the current X selection into the text input stream as if it had been typed at the keyboard. This might be where the Eclipse people got the idea.</Line>
          <Line />
          <Line>Sorry about the digression. Still hoping for a reply from Platform-Text-Inbox.</Line>
          <Line>&gt;Any comments from the Platform-Text-Inbox people?</Line>
          <Line />
          <Line>OK, let's summarize my standpoint: I still like the current behavior better and not just Notepad but also powerful editors, like e.g. UltraEdit, do behave the same. So, it is definitely not a bug but a personal taste/policy. Given we prefer the current behavior and our limited resources we won't work on this. However, if someone wants this badly then a good quality patch can be provided that adds a new preference (off by default) to enable setting the caret on right-click.</Line>
          <Line />
          <Line>Note that people also have different opinions on what to do on right-click in presence of a selection: different editors  behave differently (e.g. Word vs. WordPad). So the patch should offer all three variants to satisfy all people once and forever.</Line>
          <Line>Created attachment 130504</Line>
          <Line>patch for AbstractTextEdit right-click behaviour against HEAD 1/4/08</Line>
          <Line />
          <Line>Patch to provide the requested behaviour for right-click in AbstractTextEdit.  Follows specifications for behaviours 1-3 as laid out in comment #20 and requested in comment #40.  Default behaviour is unchanged, also as specified in comment #40.  Patch was shifted from StyledText, as suggested by Lynne in comment #5.</Line>
          <Line />
          <Line>Happy to modify the patch as necessary after review, I am new to patching eclipse so I expect there are things I could have done differently!</Line>
          <Line>Sorry, meant to add that the patch adds a property to TextEditorDefaultsPreferencePage, found at Window-&gt;Preferences-&gt;General-&gt;Editors-&gt;Text Editors.  "Right click moves caret when:".</Line>
          <Line>Thanks for the patch Luke. It starts into the right direction but needs some more work:</Line>
          <Line>- the patch does not work: it throws an IAE when clicking outside of text</Line>
          <Line>- the implementation should be at the text viewer level with API that allows to</Line>
          <Line>set it (take a look at how the enrich mode is implemented) and even better would</Line>
          <Line>be to get this at StyledText level (filed bug 271333 to ask for this)</Line>
          <Line>- don't catch exceptions and leave the handle code empty (must at least have a</Line>
          <Line>comment)</Line>
          <Line>- also declare the constant in AbstractDecoratedTextEditorPreferenceConstants and</Line>
          <Line>use this in the preference page</Line>
          <Line>- preference wording: I would change it to: Move caret on right-click:</Line>
          <Line>- replace 'a' as mnemonic: this is already taken for 'Apply'</Line>
          <Line>- add "right-click" as preference keyword</Line>
          <Line>- respect formatting (e.g. no space before assignment) and style (e.g. use 'f'</Line>
          <Line>prefix for fields)</Line>
          <Line>- I would place the preference below "Smart caret positioning..."</Line>
          <Line>- add your copyright info to the header of each file in the following form:</Line>
          <Line>name &lt;e-mail&gt; - bugzilla summary - bugzilla URL</Line>
          <Line>e.g.</Line>
          <Line>Dani Megert &lt;dani@eclipse.org&gt; - this is a bug - https://bugs.eclipse.org...</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="13">
        <Lines>
          <Line>1. My main concern has to do with ease of use.  If the normal case is that you</Line>
          <Line>want the menu to apply to the current selection, then you now must ensure you</Line>
          <Line>pop up the menu over the selection, otherwise it will change the selection.</Line>
          <Line>This drastically reduces the size of the target area for the right click</Line>
          <Line>action, from the size of the whole editor to the size of the selection (which</Line>
          <Line>may be quite small).  Fitts's law explains why this is bad</Line>
          <Line>(http://www.asktog.com/basics/firstPrinciples.html#fitts's%20law).</Line>
          <Line />
          <Line>2. This may not be the recommended mode on other platforms (I checked the Mac</Line>
          <Line>guidelines, but didn't see anything relevant).</Line>
          <Line />
          <Line>3. This may not be everyone's preferred mode of operation (as evidenced by the</Line>
          <Line>discussion here, and the disparity between other editors out there).</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="12">
        <Lines>
          <Line>1. Current behavior: with or without a selection, right-click operates based on</Line>
          <Line>the selection or caret, not the mouse location. (Even if the caret or selection</Line>
          <Line>is off-screen!) This is the behavior that motivated at least seven people to</Line>
          <Line>file this bug report, so clearly some people find it surprising and irritating.</Line>
          <Line />
          <Line>2. Intermediate change: without a selection, right-click moves the caret to the</Line>
          <Line>mouse location and then operates. If there is a selection, right-click operates</Line>
          <Line>on the selection, regardless of the mouse location.</Line>
          <Line />
          <Line>3. Complete change: right-click on a selected area operates on that area;</Line>
          <Line>otherwise a right-click moves the caret (removing any existing selection) and</Line>
          <Line>then operates.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>1) API freeze has passed which means this will have to wait for 3.6.</Line>
          <Line>2) your contribution will most likely hit the legal barrier so that we need to</Line>
          <Line>get legal review and approval of yozr code. This deadline has passed for 3.5.</Line>
          <Line>3) I still hope that we get the implementation (not the preferences) from SWT,</Line>
          <Line>which would change the patch quite a bit</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- "Support user selection using either mouse button."</Line>
          <Line>- "If the user presses the secondary mouse button to make a selection, display</Line>
          <Line>the shortcut menu for the selection when the user releases the mouse button."</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="18">
        <Lines>
          <Line>- the patch does not work: it throws an IAE when clicking outside of text</Line>
          <Line>- the implementation should be at the text viewer level with API that allows to</Line>
          <Line>set it (take a look at how the enrich mode is implemented) and even better would</Line>
          <Line>be to get this at StyledText level (filed bug 271333 to ask for this)</Line>
          <Line>- don't catch exceptions and leave the handle code empty (must at least have a</Line>
          <Line>comment)</Line>
          <Line>- also declare the constant in AbstractDecoratedTextEditorPreferenceConstants and</Line>
          <Line>use this in the preference page</Line>
          <Line>- preference wording: I would change it to: Move caret on right-click:</Line>
          <Line>- replace 'a' as mnemonic: this is already taken for 'Apply'</Line>
          <Line>- add "right-click" as preference keyword</Line>
          <Line>- respect formatting (e.g. no space before assignment) and style (e.g. use 'f'</Line>
          <Line>prefix for fields)</Line>
          <Line>- I would place the preference below "Smart caret positioning..."</Line>
          <Line>- add your copyright info to the header of each file in the following form:</Line>
          <Line>name &lt;e-mail&gt; - bugzilla summary - bugzilla URL</Line>
          <Line>e.g.</Line>
          <Line>Dani Megert &lt;dani@eclipse.org&gt; - this is a bug - https://bugs.eclipse.org...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Right clicking in an editor should move the caret on the mouse down to the
current mouse position (unless you right click on selected text) so the context
menu affects where you clicked.  Right now, the context menu operates on where
the caret currently is (which could even be off screen!).  It is very irritating
to do something like right click on a method call and select "Open Declaration"
and not get the method you right clicked on.
I believe this is a bug, not an enhancement.  It is not correct for the context
menu to not affect the point clicked.

Created attachment 3148
Right click fix

This patch correctly handles context menus and text selections.  It basically
works like this: 

On mouse down:
* if the mouse is not over selected text, move the caret 
* if the mouse is over selected text, leave the selection alone

On mouse move:
* if the mouse is not over selected text, change pointer to i-beam
* if the mouse is over selected text, change pointer to arrow
It strikes me that this is neither a bug, nor an enhancement, but rather a policy issue. I personally find the "right click selects" behavior vastly irritating in the subset of text editors which support it. Having said that, I'm sure that there are many who would find it desirable.In any case, this needs to be considered by the UI and Text teams to decide if this is the behavior they want.
I'm not sure I understand what you mean by "right click selects".  Do you mean
you: 1) never want the caret to move when you right click, 2) never want the
caret to move when there is a selection, or 3) something else?  I would strongly
disagree with #1 (this is what *I* consider vastly irritating), disagree (but
less strongly) on #2, and can't really give an opinion on #3 until I find out
what it is :-).

I'm not convinced that this should be the default behavior of the widget or 
that we should change this behavior.  I certainly don't find the behavior as 
irritating as Ron does, the behavior is not "standard" (e.g., the platform text 
widget on Windows does not provide the behavior), and the popup menus for the 
editors in Eclipse are context-sensitive based on the selection, not the caret 
location.  

Anyway, I imagine that changing the StyledText widget is not the only way to 
provide this behavior.  Ron, have you tried hooking mouse down/mouse move on 
the Text Editor to provide the behavior?
Oops, my mistake about the context-sensitive nature of the Java editor.  I use 
F3 a lot vs. the context menu.  Anyway, it is kind of annoying if that is your 
mode of operation.  Still, this is pretty particular to the Eclipse editor 
usage of the StyledText widget.  Can you see if a solution on top of StyledText 
can be provided.
You're right about the fact that the native text widget in Windows doesn't have
this behavior.  But then, Notepad has a reputation for a reason... :-)

While the behavior may not be "platform standard," it does seem to be "text
editor standard."  With the exception of Notepad, every other text editor on my
system moves the caret on a right click when there is no selection, and are
nearly evenly split on whether a right click outside an existing selection moves
the caret:

right click outside existing selection, doesn't remove selection or move caret:
   WordPad, TextPad, UltraEdit, IDEA

click outside existing selection, removes selection, moves caret:
   Visual C, Visual Basic, Word

I prefer the second way (which is what the patch implements), but I wouldn't be
surprised to find that many prefer the first way.  Either way is considerably
better than the current behavior.

It comes down to this: something this common in "real" text editors is a strong
argument for inclusion in Eclipse's text editor.  Besides, it's consistent with
the way context menus interact with the rest of the UI (both Eclipse and Windows
in general) and is therefore intuitive -- you expect a context menu opened by a
mouse click to operate where clicked.  Otherwise, what's the point of using the
mouse?

Ok, I'm stepping down from my soapbox now...

As to looking for an alternate solution, are your suggesting a modification to
somewhere else in the Eclipse codebase, or a 3rd party plug-in solution?  (If it
was the latter, perhaps I've persuaded you to reconsider?)

"right click outside existing selection, doesn't remove selection or move caret:"
       As far as I can see, this *is* the current behavior of the widget, and for the record, *we* like it that way, since it's the way every IDE we've ever built (i.e. VA/ME 1.0, VA/Java, VA/Smalltalk, ...) works.

Separate from that however, SWT ought to do whatever the platform widgets do. If native text widgets, used in the canonical way do not move the selection, then SWT should not.

However, there is a consistancy argument in favor of Ron's view _at_the_Eclipse_UI_ level: Eclipse implements "right click selects before popping up the menu" behavior in Trees. It would seem that we should do the closest "typical" behavior in the text widgets as well (which is the behavior Ron wants). This is a UI TEAM decision, and as such they were in error to send you back to the SWT team.
Ron, yes I'm suggesting that you try to put the behavior elsewhere in the 
Eclipse code base (e.g., hook Mouse events on the StyledText widget associated 
to the TextViewer).  Putting the behavior in StyledText is a behavior change 
that would potentially break someone (e.g., what if someone had a menu option 
for inserting something at the caret location, then the proposed right click 
behavior would break them).  You should be able to provide the behavior by 
hooking mouse events and using StyledText API.  
The MS UI Guidelines ("Windows User Experience") has this to say about 
selection in Chapter 6's section on "Mouse Selection":
- "Support user selection using either mouse button."
- "If the user presses the secondary mouse button to make a selection, display 
the shortcut menu for the selection when the user releases the mouse button."

Although they don't give a concrete example of this particular scenario for 
text, the chapter does include examples of selecting text, not just other kinds 
of objects, and they don't mention any exceptions for selecting text.

The Mouse Interface Summary in Appendix A backs this up.

See:
http://msdn.microsoft.com/library/en-us/dnwue/html/ch06c.asp
http://msdn.microsoft.com/library/en-us/dnwue/html/appxA.asp

So it sounds like MS recommends Ron's preferred mode of operation.
However, I have some concerns.

1. My main concern has to do with ease of use.  If the normal case is that you 
want the menu to apply to the current selection, then you now must ensure you 
pop up the menu over the selection, otherwise it will change the selection.  
This drastically reduces the size of the target area for the right click 
action, from the size of the whole editor to the size of the selection (which 
may be quite small).  Fitts's law explains why this is bad 
(http://www.asktog.com/basics/firstPrinciples.html#fitts's%20law).

2. This may not be the recommended mode on other platforms (I checked the Mac 
guidelines, but didn't see anything relevant).

3. This may not be everyone's preferred mode of operation (as evidenced by the 
discussion here, and the disparity between other editors out there).

Based on (1), I question whether we should support this at all.
If we do decide to support it, then due to (2) and (3), the user should be able 
to decide which mode they prefer via a preference.  

StyledText should not be changed to adopt this as its default mode of 
operation, although support could be added to simplify adopting it where 
desired.

But it's the Text team's final call on whether they want to support this in the 
text editors, and whether they want to adopt Ron's patch.

McQ:  After your comment about doing whatever the platform widgets do, I wonder
if we talking about the same thing.  It seems you are referring to SWT's text
widget, and I'm talking about Eclipse's text editor.  I say this because it
doesn't make sense for the text editor to "follow platform behavior."  If this
were to be followed, we would have to remove indent/unindent, scrolling without
moving the caret position (Ctrl+Up/Down), and syntax highlighting (among
others), because the platform (Windows, anyway) doesn't do those either.  For
the record, I do believe it is reasonable and valid for the text *widget* to
follow the platform behavior.
There have been a number of concerns about changing the behavior when there is a
selection.  Please note that changing this behavior is *not* my primary
objective.  In fact, I could live with exactly the way it works now.  My primary
issue is what happens when there is *no selection*.  I maintain that it is
clumsy and non-intuitive (see McQ's comment #8 about trees) to not move the
caret when there is no selection.  To my knowledge, no one has raised any
objections to this particular aspect.

Having said that, I do prefer that a right click that is not on a selection move
the caret.  But why should it only work one way?  Why should everyone be forced
to do it McQ's preferred way, or my preferred way?  There is no reason why
Eclipse's text editor shouldn't be the most powerful, configurable text editor
available.  When differences of opinion arise on an issue such as this, I
propose that it become a matter of policy that instead of deciding that it
should or should not be supported, it should be supported and a preference added
to control it (this is, of course, assuming the behavior is reasonable).  This
allows each developer to configure Eclipse's editor the way *they* want it to
work, and everyone wins.

I concur with Nick in both, his concerns and his proposal. This behavior must 
be configurable. E.g., the Java editor considers the caret a valid selection. 
The action "Open Declaration" tries to extend a selection of length 0 to cover 
a correct identifier whose declaration can be opened in an editor. So, it must 
be the user's decision whether selecting this action from the context menu 
should behave differently from pressing "F3".
Also one word in favor of this behavior: The text editor does not only consist 
of the text widget but also of the vertical ruler. The context menu in the 
vertical ruler already considers the location of the right mouse click as the 
target of the action to be chosen from the context menu. Having the new 
behavior enabled would make the text widget and the vertical ruler behave more 
similar.
*** Bug 50467 has been marked as a duplicate of this bug. ***
*** Bug 39329 has been marked as a duplicate of this bug. ***
*** Bug 37908 has been marked as a duplicate of this bug. ***
*** Bug 55200 has been marked as a duplicate of this bug. ***
*** Bug 75069 has been marked as a duplicate of this bug. ***
*** Bug 77988 has been marked as a duplicate of this bug. ***
The last discussion/comment on this bug was in February, 2003. Since then, six 
other bugs have been closed as duplicates of this bug, including one of mine. 
Is there any chance of starting up the discussion again?

Allow me to distill the comments I see here. First, I think we can dismiss the 
question of keyboard shortcuts like F3: they should always operate based on the 
caret or selection, regardless of mouse location. That leaves these options:

1. Current behavior: with or without a selection, right-click operates based on 
the selection or caret, not the mouse location. (Even if the caret or selection 
is off-screen!) This is the behavior that motivated at least seven people to 
file this bug report, so clearly some people find it surprising and irritating.

2. Intermediate change: without a selection, right-click moves the caret to the 
mouse location and then operates. If there is a selection, right-click operates 
on the selection, regardless of the mouse location.

3. Complete change: right-click on a selected area operates on that area; 
otherwise a right-click moves the caret (removing any existing selection) and 
then operates.

My preference is for #3, for the following reasons:

a. Right-click is inherently a mouse gesture, and thus should target what's 
under the mouse. That's where the user's eyes and intent are - at least for me 
and six others who cared enough to write.

b. Options #1 and especially #2 fail the predictability test, especially if the 
caret or selection has scrolled off the screen: you can't tell what a right-
click will do based on what you see.

c. The rest of Eclipse works as #3: tree views, list views, and multi-field 
views (like the plugin.xml editor) all move the selection to the item or field 
under the mouse when you right-click, then pop up the context menu. So 
does "Professional Windows" (Word, Visual Studio), as mentioned in this thread.

d. Besides being inconsistent with the rest of Eclipse and much of Windows, #1 
and #2 are inconsistent with LEFT-click behavior of the entire universe.

In my opinion, the argument in favor of #1 that it makes the right-click "hit 
zone" larger is specious: the whole editor experience is based on using the 
mouse to target word- and character-sized areas. (See letter 'd' above.) 
Accessibility is served with larger fonts; purely keyboard operation is served 
by the context-menu buttons on Windows keyboards, which (correctly, IMO) 
operate based on the caret or selection, regardless of the mouse location.

I have no objection to adding an option to control this behavior. Of course, I 
would then argue for my preferred default setting...

*** Bug 83301 has been marked as a duplicate of this bug. ***
*** Bug 105176 has been marked as a duplicate of this bug. ***
This bug's third birthday has passed without ceremony. The number of users who 
have filed this bug is up to nine: one original and eight duplicates.

In comment #20, I provided what I thought were reasonable arguments in favor of 
a change, and I gave what I thought was a good counter-argument regarding the 
only solid reason given earlier against the change (that it reduces the hit 
area size). 

Is there any hope? Can we not at least continue the debate?

*** Bug 130112 has been marked as a duplicate of this bug. ***
Another lonely voice in the wind, another duplicate registered against this 3.75-year-old bug. When it turns 18, will it be able to vote for itself?

Ping.

I don't want to be a pain (which is why I haven't commented in this bug for over 4 years), but I wanted to get some dev feedback on getting this into the next release.  It'd be great if 3.3 was the release where I could stop the infuriating left-click-right-click dance every time I want a context menu on some Java code element.

At least it's managed so far to escape the dreaded RESOLVED/NEVER.  :-)

Seconded. Is there anybody in the core editor group who is willing to speak up on this topic? For or against, it would be nice to hear from somebody. One default attitude in open source is "You want it, you implement it," but in this case the patch exists (well, for the 2003 version anyway) so that advice doesn't apply. How can we move forward on this?
This won't happen for 3.3 and if we decide to add this it won't be the default.
Just like that? I could have hoped that thirteen duplicate bugs over four years would have an impact. Even McQ said in Comment #8 that consistency with the host UI can trump consistency with VA/Smalltalk.

It is easier to change the right-click behavior to match the platform all the time, because that won't require a Preferences UI change. Saying it will have to be an option makes this a bigger job and thus less likely to happen at all.

In order to make this a preference-selectable item, there has to be a compelling reason to keep the current behavior available. Remember, we're talking about the mouse here, not F3 or any other hot key. Can you describe the UI interaction style where it's correct or preferred to have right-click operate on a part of the program that isn't under the mouse?

For the record, our product (Wind River) also gets periodic user complaints about this issue.  I'm OK with leaving the default behavior as is, but a preference would be a great relief.

Re comment 29: if you argue it's a Platform/OS thing then it is something that should come from SWT. Please read previous comments for reasons why we have it the way it is.
I referred to working the same way as the platform as a nice way of saying "working the right way, not the wrong way." I'm sorry my attempt at polite phrasing led to a distraction. 

Regarding the reasons it works the way it does today, I only find two concrete statements in this thread supporting the current behavior: in comment #8 (All VisualAge editors worked this way) and in comment #10 (It makes the hit zone for right-clicks larger). I rebutted both of those in comment #20 and I haven't seen any reply to my rebuttal arguments. Everything else in this thread is either an argument for the other side or a discussion of the details of a change.

If I missed any concrete reasons to preserve current behavior or if you want to discuss other reasons, please spell them out and we can talk about them.

+1 on behalf of Symbian. Developers here (using Carbide/CDT) are asking for this behaviour.

(In reply to comment #33)
&gt; +1 on behalf of Symbian. Developers here (using Carbide/CDT) are asking for
&gt; this behaviour.
&gt; 

Hi Andrew,
To make your +1 more effective please use the voting (https://bugs.eclipse.org/bugs/page.cgi?id=voting.html) mechanism.  With your vote, this bug will make it into 66 top-voted bugs in platform :-)
Agree with this and have voted accordingly, after searching for some time to find this report.  If there are actions in the context menu that are specific to the cursor position, then it is counter-intuitive for the cursor not to shift.

If I want to open a type hierarchy for a class, I expect to right-click on the class name and select 'type hierarchy'.  To have to manually position the cursor within the class name first feels very clumsy, and hurts the usefulness of the context menu.
I just discovered a UI contradiction quite by chance - clicking the middle mouse button anywhere in the editor cancels the selection (if any), inserts the contents of the clipboard at the mouse cursor and places the caret at the end of the newly pasted text.

This behaviour occurs regardless of the current selection and the mouse position.  Why was this implemented considering the resistance to right-click cursor shifting?

Behaviour noticed in M20090211-1700 (Linux), in every editor I tried (including basic text).
What Luke describes is platform-standard behavior for X applications on Unix: the middle button pastes the clipboard contents at the mouse pointer. On Windows, the center button generally initiates mouse-based scrolling.

I'm glad to see the discussion of this bug start up again. Is anybody home at Platform-Text-Inbox who cares to comment? This 6.5-year-old bug now has nine duplicates and 16 votes, and I haven't seen a rebuttal to my specific arguments (a through d) in comment #20.

To review:

When the text caret or selection has scrolled off the screen, I think having the right-click context menu operate on the (distant, invisible) caret or selection is confusing and unexpected. Following my logic forward, I say that the user intention for a mouse button click ALWAYS follows the mouse pointer, not the text caret or selection. It's where the user's eyes and attention are. 

This is universally true of left clicks. Thanks to Luke, we know it's also true of center-clicks on Linux. I think it should be true of right-clicks too.

Here is a summary of the desired behavior: (1) When there is a text selection and the right-click happens inside it, operate there. (2) For all other right-clicks (that is, no selection exists or the click is outside the selection), remove the selection if any, move the text caret to the mouse pointer, and then operate based on that location.

Any comments from the Platform-Text-Inbox people?

Further central-click investigations:

I've tried various Gnome apps on my Ubuntu Intrepid installation (TextEdit, Terminal, OpenOffice Writer) and none of them paste on a central click.  Dialog boxes (e.g. open/save files) do not support it in their text fields.  No Windows applications I could find supported it.  So far as I can see it seems to be an eclipse-specific extension.  Note that I have no particular problem with it, it's just an anachronism.

I found the code in Eclipse that implements it, in org.eclipse.swt.custom.StyledText, in the handleMouseDown function.  It's right at the top of the function, under the 'paste clipboard selection' comment.

This code is present and active in both the Linux and Windows versions of Eclipse, although it doesn't work in Windows (center-click has no effect) because the getClipboardContent(DND.SELECTION_CLIPBOARD) call returns null even when there is text in the clipboard.  I note that in Eclipse, in Windows, center-click does not activate scrolling.  On Linux the call works, and so we get the center-click functionality.
Thanks for checking on the behavior of X apps. I use creaky old xterm a lot, and the middle button pastes the current X selection into the text input stream as if it had been typed at the keyboard. This might be where the Eclipse people got the idea.

Sorry about the digression. Still hoping for a reply from Platform-Text-Inbox.
&gt;Any comments from the Platform-Text-Inbox people?

OK, let's summarize my standpoint: I still like the current behavior better and not just Notepad but also powerful editors, like e.g. UltraEdit, do behave the same. So, it is definitely not a bug but a personal taste/policy. Given we prefer the current behavior and our limited resources we won't work on this. However, if someone wants this badly then a good quality patch can be provided that adds a new preference (off by default) to enable setting the caret on right-click. 

Note that people also have different opinions on what to do on right-click in presence of a selection: different editors  behave differently (e.g. Word vs. WordPad). So the patch should offer all three variants to satisfy all people once and forever.
Created attachment 130504
patch for AbstractTextEdit right-click behaviour against HEAD 1/4/08

Patch to provide the requested behaviour for right-click in AbstractTextEdit.  Follows specifications for behaviours 1-3 as laid out in comment #20 and requested in comment #40.  Default behaviour is unchanged, also as specified in comment #40.  Patch was shifted from StyledText, as suggested by Lynne in comment #5.

Happy to modify the patch as necessary after review, I am new to patching eclipse so I expect there are things I could have done differently!
Sorry, meant to add that the patch adds a property to TextEditorDefaultsPreferencePage, found at Window-&gt;Preferences-&gt;General-&gt;Editors-&gt;Text Editors.  "Right click moves caret when:".
Thanks for the patch Luke. It starts into the right direction but needs some more work:
- the patch does not work: it throws an IAE when clicking outside of text
- the implementation should be at the text viewer level with API that allows to
  set it (take a look at how the enrich mode is implemented) and even better would
  be to get this at StyledText level (filed bug 271333 to ask for this)
- don't catch exceptions and leave the handle code empty (must at least have a
  comment)
- also declare the constant in AbstractDecoratedTextEditorPreferenceConstants and
  use this in the preference page
- preference wording: I would change it to: Move caret on right-click:
- replace 'a' as mnemonic: this is already taken for 'Apply'
- add "right-click" as preference keyword
- respect formatting (e.g. no space before assignment) and style (e.g. use 'f'
  prefix for fields)
- I would place the preference below "Smart caret positioning..."
- add your copyright info to the header of each file in the following form:
name &lt;e-mail&gt; - bugzilla summary - bugzilla URL
e.g.
Dani Megert &lt;dani@eclipse.org&gt; - this is a bug - https://bugs.eclipse.org...

Thanks for your feedback!  An IAE, how embarrassing!  I thought i'd tested quite a bit but i'll check again.

I did look at implementing them at the TextViewer level but I thought there might already be a few too many ITextViewerExtensionX interfaces.  Is that what you're suggesting (ITextViewerExtension9)?  Or do you want an patch to TextViewer itself?  I'll look at enrich mode as you suggested.

I looked at AbstractDecoratedTextEditorPreferences, but decided not to patch it as I was patching AbstractTextEditor, not AbstractDecoratedTextEditor.  Is that still an appropriate place for the preference if I patch TextViewer?

Apologies for formatting, naming and commenting issues, I tried to be neat and did read through the development conventions and guidelines but I figured there'd always be something to catch me out.  Re: copyright info, many of the files have been patched but did not have this appended?  I didn't want to spam my name everywhere, so I just put it in AbstractTextEditor.

Thanks again for chasing this, I'm on holiday but will revise the patch first thing after Easter.
Hi Luke, we don't need to hurry on this for two reasons:
1) API freeze has passed which means this will have to wait for 3.6.
2) your contribution will most likely hit the legal barrier so that we need to
   get legal review and approval of yozr code. This deadline has passed for 3.5.
3) I still hope that we get the implementation (not the preferences) from SWT,
   which would change the patch quite a bit

Yes, adding the method to a new extension interface is the right way. The reason why the preference is duplicated is to have all the higher level (AbstractDecoratedTextEditor and its subclasses) preferences at the same place.
Happy birthday to this bug. It's seven years old this week.

Has there been any movement since April, when the patch missed the cutoffs for release 3.5? I gather the patch needed rework and possibly legal review, and might need to be redone entirely if implementation comes from SWT. Is any of that happening? Just asking as an interested observer.
Hullo Allan :) As it turned out, lecturing a class was a lot more work than I thought.  I have some marking to finish, but I haven't forgotten about this bug!  Back into eclipse work probably next week.
FYI, I'm no longer doing eclipse-based dev (have switched to Netbeans), so I no longer plan on patching this.
*** Bug 304484 has been marked as a duplicate of this bug. ***
*** Bug 277411 has been marked as a duplicate of this bug. ***
So I guess this bug's eighth birthday passed just this June. :)

Any further updates? I just want to add my voice to the crowd in support of getting this fixed ASAP. (Is there any way I can use ALL my allowed votes on one bug? No? You sure? ;)

I just recently switched to Eclipse as my primary IDE (from Visual Studio); this highly surprising and annoying behavior was one of the first things I noticed. Right-clicking brings up a context menu, and it seems to me that the context should be the thing I right-clicked on. It makes little sense for right-clicking on an identifier and selecting "Open Declaration" to do nothing at all, or, even worse, open the declaration of some entirely other identifier that does not even appear on the current screen.

If there really are people who prefer the current behavior, I agree it should be made a preference. But I really can't see any argument for preserving the counter-intuitive behavior. As far as I can tell the only real argument for the current behavior is that it increases the size of the "target area" to the whole window.

Quite aside from the fact that this does not make sense (the window encompasses many targets, and in any case, why should the whole window be a right-click target for an element that is not necessarily even within the window?) most keyboards these days come equipped with a perfectly serviceable context menu button, which expands the "target area" to the entire observable universe, so long as your keyboard is within reach. ;)

To summarize, I'm very much with Ron Baldwin on this one. I don't see that the current behavior makes any kind of sense (from an IDE UI perspective). I also agree that this is NOT an SWT/platform text widget behavior issue. This is an Eclipse IDE behavior issue.</WithStack>
    <WithOutStack>Right clicking in an editor should move the caret on the mouse down to the
current mouse position (unless you right click on selected text) so the context
menu affects where you clicked.  Right now, the context menu operates on where
the caret currently is (which could even be off screen!).  It is very irritating
to do something like right click on a method call and select "Open Declaration"
and not get the method you right clicked on.
I believe this is a bug, not an enhancement.  It is not correct for the context
menu to not affect the point clicked.

Created attachment 3148
Right click fix

This patch correctly handles context menus and text selections.  It basically
works like this: 

On mouse down:
* if the mouse is not over selected text, move the caret 
* if the mouse is over selected text, leave the selection alone

On mouse move:
* if the mouse is not over selected text, change pointer to i-beam
* if the mouse is over selected text, change pointer to arrow
It strikes me that this is neither a bug, nor an enhancement, but rather a policy issue. I personally find the "right click selects" behavior vastly irritating in the subset of text editors which support it. Having said that, I'm sure that there are many who would find it desirable.In any case, this needs to be considered by the UI and Text teams to decide if this is the behavior they want.
I'm not sure I understand what you mean by "right click selects".  Do you mean
you: 1) never want the caret to move when you right click, 2) never want the
caret to move when there is a selection, or 3) something else?  I would strongly
disagree with #1 (this is what *I* consider vastly irritating), disagree (but
less strongly) on #2, and can't really give an opinion on #3 until I find out
what it is :-).

I'm not convinced that this should be the default behavior of the widget or 
that we should change this behavior.  I certainly don't find the behavior as 
irritating as Ron does, the behavior is not "standard" (e.g., the platform text 
widget on Windows does not provide the behavior), and the popup menus for the 
editors in Eclipse are context-sensitive based on the selection, not the caret 
location.  

Anyway, I imagine that changing the StyledText widget is not the only way to 
provide this behavior.  Ron, have you tried hooking mouse down/mouse move on 
the Text Editor to provide the behavior?
Oops, my mistake about the context-sensitive nature of the Java editor.  I use 
F3 a lot vs. the context menu.  Anyway, it is kind of annoying if that is your 
mode of operation.  Still, this is pretty particular to the Eclipse editor 
usage of the StyledText widget.  Can you see if a solution on top of StyledText 
can be provided.
You're right about the fact that the native text widget in Windows doesn't have
this behavior.  But then, Notepad has a reputation for a reason... :-)

While the behavior may not be "platform standard," it does seem to be "text
editor standard."  With the exception of Notepad, every other text editor on my
system moves the caret on a right click when there is no selection, and are
nearly evenly split on whether a right click outside an existing selection moves
the caret:

right click outside existing selection, doesn't remove selection or move caret:
   WordPad, TextPad, UltraEdit, IDEA

click outside existing selection, removes selection, moves caret:
   Visual C, Visual Basic, Word

I prefer the second way (which is what the patch implements), but I wouldn't be
surprised to find that many prefer the first way.  Either way is considerably
better than the current behavior.

It comes down to this: something this common in "real" text editors is a strong
argument for inclusion in Eclipse's text editor.  Besides, it's consistent with
the way context menus interact with the rest of the UI (both Eclipse and Windows
in general) and is therefore intuitive -- you expect a context menu opened by a
mouse click to operate where clicked.  Otherwise, what's the point of using the
mouse?

Ok, I'm stepping down from my soapbox now...

As to looking for an alternate solution, are your suggesting a modification to
somewhere else in the Eclipse codebase, or a 3rd party plug-in solution?  (If it
was the latter, perhaps I've persuaded you to reconsider?)

"right click outside existing selection, doesn't remove selection or move caret:"
       As far as I can see, this *is* the current behavior of the widget, and for the record, *we* like it that way, since it's the way every IDE we've ever built (i.e. VA/ME 1.0, VA/Java, VA/Smalltalk, ...) works.

Separate from that however, SWT ought to do whatever the platform widgets do. If native text widgets, used in the canonical way do not move the selection, then SWT should not.

However, there is a consistancy argument in favor of Ron's view _at_the_Eclipse_UI_ level: Eclipse implements "right click selects before popping up the menu" behavior in Trees. It would seem that we should do the closest "typical" behavior in the text widgets as well (which is the behavior Ron wants). This is a UI TEAM decision, and as such they were in error to send you back to the SWT team.
Ron, yes I'm suggesting that you try to put the behavior elsewhere in the 
Eclipse code base (e.g., hook Mouse events on the StyledText widget associated 
to the TextViewer).  Putting the behavior in StyledText is a behavior change 
that would potentially break someone (e.g., what if someone had a menu option 
for inserting something at the caret location, then the proposed right click 
behavior would break them).  You should be able to provide the behavior by 
hooking mouse events and using StyledText API.  
The MS UI Guidelines ("Windows User Experience") has this to say about 
selection in Chapter 6's section on "Mouse Selection":
- "Support user selection using either mouse button."
- "If the user presses the secondary mouse button to make a selection, display 
the shortcut menu for the selection when the user releases the mouse button."

Although they don't give a concrete example of this particular scenario for 
text, the chapter does include examples of selecting text, not just other kinds 
of objects, and they don't mention any exceptions for selecting text.

The Mouse Interface Summary in Appendix A backs this up.

See:
http://msdn.microsoft.com/library/en-us/dnwue/html/ch06c.asp
http://msdn.microsoft.com/library/en-us/dnwue/html/appxA.asp

So it sounds like MS recommends Ron's preferred mode of operation.
However, I have some concerns.

1. My main concern has to do with ease of use.  If the normal case is that you 
want the menu to apply to the current selection, then you now must ensure you 
pop up the menu over the selection, otherwise it will change the selection.  
This drastically reduces the size of the target area for the right click 
action, from the size of the whole editor to the size of the selection (which 
may be quite small).  Fitts's law explains why this is bad 
(http://www.asktog.com/basics/firstPrinciples.html#fitts's%20law).

2. This may not be the recommended mode on other platforms (I checked the Mac 
guidelines, but didn't see anything relevant).

3. This may not be everyone's preferred mode of operation (as evidenced by the 
discussion here, and the disparity between other editors out there).

Based on (1), I question whether we should support this at all.
If we do decide to support it, then due to (2) and (3), the user should be able 
to decide which mode they prefer via a preference.  

StyledText should not be changed to adopt this as its default mode of 
operation, although support could be added to simplify adopting it where 
desired.

But it's the Text team's final call on whether they want to support this in the 
text editors, and whether they want to adopt Ron's patch.

McQ:  After your comment about doing whatever the platform widgets do, I wonder
if we talking about the same thing.  It seems you are referring to SWT's text
widget, and I'm talking about Eclipse's text editor.  I say this because it
doesn't make sense for the text editor to "follow platform behavior."  If this
were to be followed, we would have to remove indent/unindent, scrolling without
moving the caret position (Ctrl+Up/Down), and syntax highlighting (among
others), because the platform (Windows, anyway) doesn't do those either.  For
the record, I do believe it is reasonable and valid for the text *widget* to
follow the platform behavior.
There have been a number of concerns about changing the behavior when there is a
selection.  Please note that changing this behavior is *not* my primary
objective.  In fact, I could live with exactly the way it works now.  My primary
issue is what happens when there is *no selection*.  I maintain that it is
clumsy and non-intuitive (see McQ's comment #8 about trees) to not move the
caret when there is no selection.  To my knowledge, no one has raised any
objections to this particular aspect.

Having said that, I do prefer that a right click that is not on a selection move
the caret.  But why should it only work one way?  Why should everyone be forced
to do it McQ's preferred way, or my preferred way?  There is no reason why
Eclipse's text editor shouldn't be the most powerful, configurable text editor
available.  When differences of opinion arise on an issue such as this, I
propose that it become a matter of policy that instead of deciding that it
should or should not be supported, it should be supported and a preference added
to control it (this is, of course, assuming the behavior is reasonable).  This
allows each developer to configure Eclipse's editor the way *they* want it to
work, and everyone wins.

I concur with Nick in both, his concerns and his proposal. This behavior must 
be configurable. E.g., the Java editor considers the caret a valid selection. 
The action "Open Declaration" tries to extend a selection of length 0 to cover 
a correct identifier whose declaration can be opened in an editor. So, it must 
be the user's decision whether selecting this action from the context menu 
should behave differently from pressing "F3".
Also one word in favor of this behavior: The text editor does not only consist 
of the text widget but also of the vertical ruler. The context menu in the 
vertical ruler already considers the location of the right mouse click as the 
target of the action to be chosen from the context menu. Having the new 
behavior enabled would make the text widget and the vertical ruler behave more 
similar.
*** Bug 50467 has been marked as a duplicate of this bug. ***
*** Bug 39329 has been marked as a duplicate of this bug. ***
*** Bug 37908 has been marked as a duplicate of this bug. ***
*** Bug 55200 has been marked as a duplicate of this bug. ***
*** Bug 75069 has been marked as a duplicate of this bug. ***
*** Bug 77988 has been marked as a duplicate of this bug. ***
The last discussion/comment on this bug was in February, 2003. Since then, six 
other bugs have been closed as duplicates of this bug, including one of mine. 
Is there any chance of starting up the discussion again?

Allow me to distill the comments I see here. First, I think we can dismiss the 
question of keyboard shortcuts like F3: they should always operate based on the 
caret or selection, regardless of mouse location. That leaves these options:

1. Current behavior: with or without a selection, right-click operates based on 
the selection or caret, not the mouse location. (Even if the caret or selection 
is off-screen!) This is the behavior that motivated at least seven people to 
file this bug report, so clearly some people find it surprising and irritating.

2. Intermediate change: without a selection, right-click moves the caret to the 
mouse location and then operates. If there is a selection, right-click operates 
on the selection, regardless of the mouse location.

3. Complete change: right-click on a selected area operates on that area; 
otherwise a right-click moves the caret (removing any existing selection) and 
then operates.

My preference is for #3, for the following reasons:

a. Right-click is inherently a mouse gesture, and thus should target what's 
under the mouse. That's where the user's eyes and intent are - at least for me 
and six others who cared enough to write.

b. Options #1 and especially #2 fail the predictability test, especially if the 
caret or selection has scrolled off the screen: you can't tell what a right-
click will do based on what you see.

c. The rest of Eclipse works as #3: tree views, list views, and multi-field 
views (like the plugin.xml editor) all move the selection to the item or field 
under the mouse when you right-click, then pop up the context menu. So 
does "Professional Windows" (Word, Visual Studio), as mentioned in this thread.

d. Besides being inconsistent with the rest of Eclipse and much of Windows, #1 
and #2 are inconsistent with LEFT-click behavior of the entire universe.

In my opinion, the argument in favor of #1 that it makes the right-click "hit 
zone" larger is specious: the whole editor experience is based on using the 
mouse to target word- and character-sized areas. (See letter 'd' above.) 
Accessibility is served with larger fonts; purely keyboard operation is served 
by the context-menu buttons on Windows keyboards, which (correctly, IMO) 
operate based on the caret or selection, regardless of the mouse location.

I have no objection to adding an option to control this behavior. Of course, I 
would then argue for my preferred default setting...

*** Bug 83301 has been marked as a duplicate of this bug. ***
*** Bug 105176 has been marked as a duplicate of this bug. ***
This bug's third birthday has passed without ceremony. The number of users who 
have filed this bug is up to nine: one original and eight duplicates.

In comment #20, I provided what I thought were reasonable arguments in favor of 
a change, and I gave what I thought was a good counter-argument regarding the 
only solid reason given earlier against the change (that it reduces the hit 
area size). 

Is there any hope? Can we not at least continue the debate?

*** Bug 130112 has been marked as a duplicate of this bug. ***
Another lonely voice in the wind, another duplicate registered against this 3.75-year-old bug. When it turns 18, will it be able to vote for itself?

Ping.

I don't want to be a pain (which is why I haven't commented in this bug for over 4 years), but I wanted to get some dev feedback on getting this into the next release.  It'd be great if 3.3 was the release where I could stop the infuriating left-click-right-click dance every time I want a context menu on some Java code element.

At least it's managed so far to escape the dreaded RESOLVED/NEVER.  :-)

Seconded. Is there anybody in the core editor group who is willing to speak up on this topic? For or against, it would be nice to hear from somebody. One default attitude in open source is "You want it, you implement it," but in this case the patch exists (well, for the 2003 version anyway) so that advice doesn't apply. How can we move forward on this?
This won't happen for 3.3 and if we decide to add this it won't be the default.
Just like that? I could have hoped that thirteen duplicate bugs over four years would have an impact. Even McQ said in Comment #8 that consistency with the host UI can trump consistency with VA/Smalltalk.

It is easier to change the right-click behavior to match the platform all the time, because that won't require a Preferences UI change. Saying it will have to be an option makes this a bigger job and thus less likely to happen at all.

In order to make this a preference-selectable item, there has to be a compelling reason to keep the current behavior available. Remember, we're talking about the mouse here, not F3 or any other hot key. Can you describe the UI interaction style where it's correct or preferred to have right-click operate on a part of the program that isn't under the mouse?

For the record, our product (Wind River) also gets periodic user complaints about this issue.  I'm OK with leaving the default behavior as is, but a preference would be a great relief.

Re comment 29: if you argue it's a Platform/OS thing then it is something that should come from SWT. Please read previous comments for reasons why we have it the way it is.
I referred to working the same way as the platform as a nice way of saying "working the right way, not the wrong way." I'm sorry my attempt at polite phrasing led to a distraction. 

Regarding the reasons it works the way it does today, I only find two concrete statements in this thread supporting the current behavior: in comment #8 (All VisualAge editors worked this way) and in comment #10 (It makes the hit zone for right-clicks larger). I rebutted both of those in comment #20 and I haven't seen any reply to my rebuttal arguments. Everything else in this thread is either an argument for the other side or a discussion of the details of a change.

If I missed any concrete reasons to preserve current behavior or if you want to discuss other reasons, please spell them out and we can talk about them.

+1 on behalf of Symbian. Developers here (using Carbide/CDT) are asking for this behaviour.

(In reply to comment #33)
&gt; +1 on behalf of Symbian. Developers here (using Carbide/CDT) are asking for
&gt; this behaviour.
&gt; 

Hi Andrew,
To make your +1 more effective please use the voting (https://bugs.eclipse.org/bugs/page.cgi?id=voting.html) mechanism.  With your vote, this bug will make it into 66 top-voted bugs in platform :-)
Agree with this and have voted accordingly, after searching for some time to find this report.  If there are actions in the context menu that are specific to the cursor position, then it is counter-intuitive for the cursor not to shift.

If I want to open a type hierarchy for a class, I expect to right-click on the class name and select 'type hierarchy'.  To have to manually position the cursor within the class name first feels very clumsy, and hurts the usefulness of the context menu.
I just discovered a UI contradiction quite by chance - clicking the middle mouse button anywhere in the editor cancels the selection (if any), inserts the contents of the clipboard at the mouse cursor and places the caret at the end of the newly pasted text.

This behaviour occurs regardless of the current selection and the mouse position.  Why was this implemented considering the resistance to right-click cursor shifting?

Behaviour noticed in M20090211-1700 (Linux), in every editor I tried (including basic text).
What Luke describes is platform-standard behavior for X applications on Unix: the middle button pastes the clipboard contents at the mouse pointer. On Windows, the center button generally initiates mouse-based scrolling.

I'm glad to see the discussion of this bug start up again. Is anybody home at Platform-Text-Inbox who cares to comment? This 6.5-year-old bug now has nine duplicates and 16 votes, and I haven't seen a rebuttal to my specific arguments (a through d) in comment #20.

To review:

When the text caret or selection has scrolled off the screen, I think having the right-click context menu operate on the (distant, invisible) caret or selection is confusing and unexpected. Following my logic forward, I say that the user intention for a mouse button click ALWAYS follows the mouse pointer, not the text caret or selection. It's where the user's eyes and attention are. 

This is universally true of left clicks. Thanks to Luke, we know it's also true of center-clicks on Linux. I think it should be true of right-clicks too.

Here is a summary of the desired behavior: (1) When there is a text selection and the right-click happens inside it, operate there. (2) For all other right-clicks (that is, no selection exists or the click is outside the selection), remove the selection if any, move the text caret to the mouse pointer, and then operate based on that location.

Any comments from the Platform-Text-Inbox people?

Further central-click investigations:

I've tried various Gnome apps on my Ubuntu Intrepid installation (TextEdit, Terminal, OpenOffice Writer) and none of them paste on a central click.  Dialog boxes (e.g. open/save files) do not support it in their text fields.  No Windows applications I could find supported it.  So far as I can see it seems to be an eclipse-specific extension.  Note that I have no particular problem with it, it's just an anachronism.

I found the code in Eclipse that implements it, in org.eclipse.swt.custom.StyledText, in the handleMouseDown function.  It's right at the top of the function, under the 'paste clipboard selection' comment.

This code is present and active in both the Linux and Windows versions of Eclipse, although it doesn't work in Windows (center-click has no effect) because the getClipboardContent(DND.SELECTION_CLIPBOARD) call returns null even when there is text in the clipboard.  I note that in Eclipse, in Windows, center-click does not activate scrolling.  On Linux the call works, and so we get the center-click functionality.
Thanks for checking on the behavior of X apps. I use creaky old xterm a lot, and the middle button pastes the current X selection into the text input stream as if it had been typed at the keyboard. This might be where the Eclipse people got the idea.

Sorry about the digression. Still hoping for a reply from Platform-Text-Inbox.
&gt;Any comments from the Platform-Text-Inbox people?

OK, let's summarize my standpoint: I still like the current behavior better and not just Notepad but also powerful editors, like e.g. UltraEdit, do behave the same. So, it is definitely not a bug but a personal taste/policy. Given we prefer the current behavior and our limited resources we won't work on this. However, if someone wants this badly then a good quality patch can be provided that adds a new preference (off by default) to enable setting the caret on right-click. 

Note that people also have different opinions on what to do on right-click in presence of a selection: different editors  behave differently (e.g. Word vs. WordPad). So the patch should offer all three variants to satisfy all people once and forever.
Created attachment 130504
patch for AbstractTextEdit right-click behaviour against HEAD 1/4/08

Patch to provide the requested behaviour for right-click in AbstractTextEdit.  Follows specifications for behaviours 1-3 as laid out in comment #20 and requested in comment #40.  Default behaviour is unchanged, also as specified in comment #40.  Patch was shifted from StyledText, as suggested by Lynne in comment #5.

Happy to modify the patch as necessary after review, I am new to patching eclipse so I expect there are things I could have done differently!
Sorry, meant to add that the patch adds a property to TextEditorDefaultsPreferencePage, found at Window-&gt;Preferences-&gt;General-&gt;Editors-&gt;Text Editors.  "Right click moves caret when:".
Thanks for the patch Luke. It starts into the right direction but needs some more work:
- the patch does not work: it throws an IAE when clicking outside of text
- the implementation should be at the text viewer level with API that allows to
  set it (take a look at how the enrich mode is implemented) and even better would
  be to get this at StyledText level (filed bug 271333 to ask for this)
- don't catch exceptions and leave the handle code empty (must at least have a
  comment)
- also declare the constant in AbstractDecoratedTextEditorPreferenceConstants and
  use this in the preference page
- preference wording: I would change it to: Move caret on right-click:
- replace 'a' as mnemonic: this is already taken for 'Apply'
- add "right-click" as preference keyword
- respect formatting (e.g. no space before assignment) and style (e.g. use 'f'
  prefix for fields)
- I would place the preference below "Smart caret positioning..."
- add your copyright info to the header of each file in the following form:
name &lt;e-mail&gt; - bugzilla summary - bugzilla URL
e.g.
Dani Megert &lt;dani@eclipse.org&gt; - this is a bug - https://bugs.eclipse.org...

Thanks for your feedback!  An IAE, how embarrassing!  I thought i'd tested quite a bit but i'll check again.

I did look at implementing them at the TextViewer level but I thought there might already be a few too many ITextViewerExtensionX interfaces.  Is that what you're suggesting (ITextViewerExtension9)?  Or do you want an patch to TextViewer itself?  I'll look at enrich mode as you suggested.

I looked at AbstractDecoratedTextEditorPreferences, but decided not to patch it as I was patching AbstractTextEditor, not AbstractDecoratedTextEditor.  Is that still an appropriate place for the preference if I patch TextViewer?

Apologies for formatting, naming and commenting issues, I tried to be neat and did read through the development conventions and guidelines but I figured there'd always be something to catch me out.  Re: copyright info, many of the files have been patched but did not have this appended?  I didn't want to spam my name everywhere, so I just put it in AbstractTextEditor.

Thanks again for chasing this, I'm on holiday but will revise the patch first thing after Easter.
Hi Luke, we don't need to hurry on this for two reasons:
1) API freeze has passed which means this will have to wait for 3.6.
2) your contribution will most likely hit the legal barrier so that we need to
   get legal review and approval of yozr code. This deadline has passed for 3.5.
3) I still hope that we get the implementation (not the preferences) from SWT,
   which would change the patch quite a bit

Yes, adding the method to a new extension interface is the right way. The reason why the preference is duplicated is to have all the higher level (AbstractDecoratedTextEditor and its subclasses) preferences at the same place.
Happy birthday to this bug. It's seven years old this week.

Has there been any movement since April, when the patch missed the cutoffs for release 3.5? I gather the patch needed rework and possibly legal review, and might need to be redone entirely if implementation comes from SWT. Is any of that happening? Just asking as an interested observer.
Hullo Allan :) As it turned out, lecturing a class was a lot more work than I thought.  I have some marking to finish, but I haven't forgotten about this bug!  Back into eclipse work probably next week.
FYI, I'm no longer doing eclipse-based dev (have switched to Netbeans), so I no longer plan on patching this.
*** Bug 304484 has been marked as a duplicate of this bug. ***
*** Bug 277411 has been marked as a duplicate of this bug. ***
So I guess this bug's eighth birthday passed just this June. :)

Any further updates? I just want to add my voice to the crowd in support of getting this fixed ASAP. (Is there any way I can use ALL my allowed votes on one bug? No? You sure? ;)

I just recently switched to Eclipse as my primary IDE (from Visual Studio); this highly surprising and annoying behavior was one of the first things I noticed. Right-clicking brings up a context menu, and it seems to me that the context should be the thing I right-clicked on. It makes little sense for right-clicking on an identifier and selecting "Open Declaration" to do nothing at all, or, even worse, open the declaration of some entirely other identifier that does not even appear on the current screen.

If there really are people who prefer the current behavior, I agree it should be made a preference. But I really can't see any argument for preserving the counter-intuitive behavior. As far as I can tell the only real argument for the current behavior is that it increases the size of the "target area" to the whole window.

Quite aside from the fact that this does not make sense (the window encompasses many targets, and in any case, why should the whole window be a right-click target for an element that is not necessarily even within the window?) most keyboards these days come equipped with a perfectly serviceable context menu button, which expands the "target area" to the entire observable universe, so long as your keyboard is within reach. ;)

To summarize, I'm very much with Ron Baldwin on this one. I don't see that the current behavior makes any kind of sense (from an IDE UI perspective). I also agree that this is NOT an SWT/platform text widget behavior issue. This is an Eclipse IDE behavior issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19826" />
    <CreationDate amount="2002-06-10 14:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>livelock during indexing?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>build 20020610 - Windows XP - Japanese

In a fresh workspace, I imported all the plug-ins and ran a runtime-workbench. 
Closed the runtime workbench. CTRL+SHIFT+O and a dialog showed up with 185 
files to index, CPU at 100% and nothing else seems to be happening neither the 
progress monitor is updating. I've done a CTRL+Break and will attach the 
stack. The UI seem to be alive (I can move the progress dialog and the 
perspective is repainted).
Created attachment 1341
stack
Adding more stacks (not sure if useful but different times could provide more 
info).
Created attachment 1342
stack 1
Created attachment 1343
stack 2
Hiting cancel works but if I try to search again, the same problem happens.
Correction: I meant CTRL+SHIFT+T and not O. I restarted Eclipse and it now 
says 124 files need to be indexed. So it seems it actually has done some work?
Which VM are you using ? Seems like the indexing thread is waiting on a sleep
(50) for ever...
Oops, misread the trace. The search is paused while the indexer is processing 
all files to be added. Need to double check. Could be indexing is slower on 
japanese due to encoding ? 

Would you notice such a performance degradation when compiling ?
I was using:
java version "1.4.1-beta"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.1-beta-b08)
Java HotSpot(TM) Client VM (build 1.4.1-beta-b08, mixed mode)

It works with IBM 1.3.1 although I noticed it being slower than usual. I 
waited a few minutes when using the 1.4.1 but nothing seemed to have happened. 
Although, as I wrote above, the number of files to index decreased after I 
restarted. Will try again with 1.4.1 and leave the machine on for a while and 
see what happens.
Also, you might want to enable some of the tracing of org.eclipse.jdt.core.
I recommend:

# Turn on debug tracing for org.eclipse.jdt.core plugin
org.eclipse.jdt.core/debug=true

# Reports background indexer activity: indexing, saving index file, index 
queries
org.eclipse.jdt.core/debug/indexmanager=true
I left it running for 1 hour and the dialog did not change (185 files to 
index). Restarted with .options and the dialog is now showing 124 files to 
index like previous test (note that I started a new workspace after I ran with 
JDK 1.3.1). Attaching console with debug info.

Created attachment 1344
debug info
pls investigate
I left it running yesterday and today I've got the Open Types dialog. So it 
seems to be really slow. Will attach what I've got in the console but I'm not 
sure if it helps. The info is truncated because it seems the console did not 
have enough buffer.
Created attachment 1354
more debug info - truncated
It seems that indexing works but is very slow. Perhaps indexing is slower on 
japanese encoding.
Japanese encoding support seems really slow. This would be a runtime issue.
Closing</WithStack>
    <WithOutStack>build 20020610 - Windows XP - Japanese

In a fresh workspace, I imported all the plug-ins and ran a runtime-workbench. 
Closed the runtime workbench. CTRL+SHIFT+O and a dialog showed up with 185 
files to index, CPU at 100% and nothing else seems to be happening neither the 
progress monitor is updating. I've done a CTRL+Break and will attach the 
stack. The UI seem to be alive (I can move the progress dialog and the 
perspective is repainted).
Created attachment 1341
stack
Adding more stacks (not sure if useful but different times could provide more 
info).
Created attachment 1342
stack 1
Created attachment 1343
stack 2
Hiting cancel works but if I try to search again, the same problem happens.
Correction: I meant CTRL+SHIFT+T and not O. I restarted Eclipse and it now 
says 124 files need to be indexed. So it seems it actually has done some work?
Which VM are you using ? Seems like the indexing thread is waiting on a sleep
(50) for ever...
Oops, misread the trace. The search is paused while the indexer is processing 
all files to be added. Need to double check. Could be indexing is slower on 
japanese due to encoding ? 

Would you notice such a performance degradation when compiling ?
I was using:
java version "1.4.1-beta"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.1-beta-b08)
Java HotSpot(TM) Client VM (build 1.4.1-beta-b08, mixed mode)

It works with IBM 1.3.1 although I noticed it being slower than usual. I 
waited a few minutes when using the 1.4.1 but nothing seemed to have happened. 
Although, as I wrote above, the number of files to index decreased after I 
restarted. Will try again with 1.4.1 and leave the machine on for a while and 
see what happens.
Also, you might want to enable some of the tracing of org.eclipse.jdt.core.
I recommend:

# Turn on debug tracing for org.eclipse.jdt.core plugin
org.eclipse.jdt.core/debug=true

# Reports background indexer activity: indexing, saving index file, index 
queries
org.eclipse.jdt.core/debug/indexmanager=true
I left it running for 1 hour and the dialog did not change (185 files to 
index). Restarted with .options and the dialog is now showing 124 files to 
index like previous test (note that I started a new workspace after I ran with 
JDK 1.3.1). Attaching console with debug info.

Created attachment 1344
debug info
pls investigate
I left it running yesterday and today I've got the Open Types dialog. So it 
seems to be really slow. Will attach what I've got in the console but I'm not 
sure if it helps. The info is truncated because it seems the console did not 
have enough buffer.
Created attachment 1354
more debug info - truncated
It seems that indexing works but is very slow. Perhaps indexing is slower on 
japanese encoding.
Japanese encoding support seems really slow. This would be a runtime issue.
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19827" />
    <CreationDate amount="2002-06-10 14:04:00 -0400" />
    <DupId amount="19933" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Emacs: incremental search status not always displayed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>While in an editor that has Emacs keybindings, hitting Ctrl+S will not show the 
initial "Incremental Search:" message in the status line. The status is only 
shown after another character is pressed.

This behaviour does not occur when incremental search is run with the default 
keybindings.


*** This bug has been marked as a duplicate of 19933 ***</WithStack>
    <WithOutStack>While in an editor that has Emacs keybindings, hitting Ctrl+S will not show the 
initial "Incremental Search:" message in the status line. The status is only 
shown after another character is pressed.

This behaviour does not occur when incremental search is run with the default 
keybindings.


*** This bug has been marked as a duplicate of 19933 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19828" />
    <CreationDate amount="2002-06-10 14:04:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CTabFolder popups should not span monitors.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The default behavior in a win32 environment is for popups to not span monitors 
in a multi monitor situation.
Agreed, but not until post R2.0.

*** Bug 19830 has been marked as a duplicate of this bug. ***
Post 2.0. Re-opening bug reports for review.
Works in 3.0.</WithStack>
    <WithOutStack>The default behavior in a win32 environment is for popups to not span monitors 
in a multi monitor situation.
Agreed, but not until post R2.0.

*** Bug 19830 has been marked as a duplicate of this bug. ***
Post 2.0. Re-opening bug reports for review.
Works in 3.0.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19829" />
    <CreationDate amount="2002-06-10 14:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>isLocal() should handle the Sun's incorrect anonymous classes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="188" end="295" />
        <code>/**
 * Answer true if the receiver is a local type, false otherwise
 *
 * @return 
&lt;CODE&gt;boolean&lt;/CODE&gt;
 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="296" end="507" />
        <code>public boolean isLocal() {
	return 
		this.innerInfo != null 

		&amp;&amp; this.innerInfo.getEnclosingTypeName() == null 
		&amp;&amp; 
this.innerInfo.getSourceName() != null
		&amp;&amp; this.innerInfo.getSourceName().length != 
0;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>We changed the implementation of isAnonymous() to handle the Sun's boggus anonymous .class 
files, but we should change in the same way the isLocal() implementation.
isLocal() should 
be:
/**
 * Answer true if the receiver is a local type, false otherwise
 *
 * @return 
&lt;CODE&gt;boolean&lt;/CODE&gt;
 */
public boolean isLocal() {
	return 
		this.innerInfo != null 

		&amp;&amp; this.innerInfo.getEnclosingTypeName() == null 
		&amp;&amp; 
this.innerInfo.getSourceName() != null
		&amp;&amp; this.innerInfo.getSourceName().length != 
0;
}
Defer post 2.0.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>We changed the implementation of isAnonymous() to handle the Sun's boggus anonymous .class 
files, but we should change in the same way the isLocal() implementation.
isLocal() should 
be:
/**
 * Answer true if the receiver is a local type, false otherwise
 *
 * @return 
&lt;CODE&gt;boolean&lt;/CODE&gt;
 */
public boolean isLocal() {
	return 
		this.innerInfo != null 

		&amp;&amp; this.innerInfo.getEnclosingTypeName() == null 
		&amp;&amp; 
this.innerInfo.getSourceName() != null
		&amp;&amp; this.innerInfo.getSourceName().length != 
0;
}
Defer post 2.0.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19830" />
    <CreationDate amount="2002-06-10 14:13:00 -0400" />
    <DupId amount="19828" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Code insight popup should not span monitors.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The code insight popup on(at the very least) a win32 environment should not 
span monitors as it makes it unusable.  Plus the default on win32 is for 
popups to not span monitors.
I don't know who we can control this with the current SWT API. Moving to SWT 
for comment.


*** This bug has been marked as a duplicate of 19828 ***</WithStack>
    <WithOutStack>The code insight popup on(at the very least) a win32 environment should not 
span monitors as it makes it unusable.  Plus the default on win32 is for 
popups to not span monitors.
I don't know who we can control this with the current SWT API. Moving to SWT 
for comment.


*** This bug has been marked as a duplicate of 19828 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19831" />
    <CreationDate amount="2002-06-10 14:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Need native access to tooltips.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>SWT needs to provide native access to tooltips.  If a programmer does his own 
tooltips via a Label it doesn't quite function/look the same way as native 
ones on a win32 platform.  The natvies ones have a shadow while CTabFolder 
ones do not.  The hovering and mouse moving do not quite act the same either.
Unless there is new support for this in XP, the only tool tips provided by the 
platform take a simple string to display. We *do* have support for this 
(see "Control.setToolTipText(String)"). The Eclipse UI team wanted to 
implement more complex kinds of interactions, which is why we gave them the 
hover callback support.</WithStack>
    <WithOutStack>SWT needs to provide native access to tooltips.  If a programmer does his own 
tooltips via a Label it doesn't quite function/look the same way as native 
ones on a win32 platform.  The natvies ones have a shadow while CTabFolder 
ones do not.  The hovering and mouse moving do not quite act the same either.
Unless there is new support for this in XP, the only tool tips provided by the 
platform take a simple string to display. We *do* have support for this 
(see "Control.setToolTipText(String)"). The Eclipse UI team wanted to 
implement more complex kinds of interactions, which is why we gave them the 
hover callback support.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19832" />
    <CreationDate amount="2002-06-10 14:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Editor switcher should use Ctrl+E</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="multicomment">
        <location start="313" end="473" />
        <code>/*
 * Convert and event to an Integer.
 * 
 * Note: this is basically a copy of AcceleratorScope.convertEvent.
 * It could be moved to Action to be reused.
 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="474" end="950" />
        <code>private static int convertEvent(KeyEvent event) {
	char upper = Character.toUpperCase(event.character);
	if(((event.stateMask &amp; (SWT.CONTROL | SWT.SHIFT)) != 0) &amp;&amp; 
(event.keyCode == 0)) {
		if (upper == 0);
			//TBD: What is the diff between CTRL+SHIFT and 
CTRL+SHIFT+@
		if (0 &lt; upper &amp;&amp; upper &lt;= 30) 
			return upper + 64;
		if (upper == 31)
			return (int)'_';
		if((upper &gt; 32 &amp;&amp; upper &lt;= 64) || (upper &gt; 90 &amp;&amp; upper != 127))
			return upper;
	}
	return event.keyCode;
}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="974" end="1027" />
        <code>} else if(e.keyCode == acelaratorKey) {
to:
    }</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="1022" end="1072" />
        <code>} else if (convertEvent(e) == acelaratorKey) {</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Add the following method to CyclePartAction</Line>
          <Line />
          <Line />
          <Line />
          <Line>2)Change the line:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>F2

The editor switcher, currently bound to Ctrl+F6, should be changed to use 
Ctrl+E.

I tried changing it earlier, but it requires more than just changing the 
accelerator text.  It currently dismisses immediately when using Ctrl+E.
Once SWT is fixed, I have to:

1) Add the following method to CyclePartAction

/*
 * Convert and event to an Integer.
 * 
 * Note: this is basically a copy of AcceleratorScope.convertEvent.
 * It could be moved to Action to be reused.
 */
private static int convertEvent(KeyEvent event) {
	char upper = Character.toUpperCase(event.character);
	if(((event.stateMask &amp; (SWT.CONTROL | SWT.SHIFT)) != 0) &amp;&amp; 
(event.keyCode == 0)) {
		if (upper == 0);
			//TBD: What is the diff between CTRL+SHIFT and 
CTRL+SHIFT+@
		if (0 &lt; upper &amp;&amp; upper &lt;= 30) 
			return upper + 64;
		if (upper == 31)
			return (int)'_';
		if((upper &gt; 32 &amp;&amp; upper &lt;= 64) || (upper &gt; 90 &amp;&amp; upper != 127))
			return upper;
	}
	return event.keyCode;
}

2)Change the line:			
    } else if(e.keyCode == acelaratorKey) {
to:
    } else if (convertEvent(e) == acelaratorKey) {


What is the SWT PR?
Filed bug 19896 for the key up event problem.

Gave Ctrl+E to editor for delete line.</WithStack>
    <WithOutStack>F2

The editor switcher, currently bound to Ctrl+F6, should be changed to use 
Ctrl+E.

I tried changing it earlier, but it requires more than just changing the 
accelerator text.  It currently dismisses immediately when using Ctrl+E.
Once SWT is fixed, I have to:

1) Add the following method to CyclePartAction

/*
 * Convert and event to an Integer.
 * 
 * Note: this is basically a copy of AcceleratorScope.convertEvent.
 * It could be moved to Action to be reused.
 */
private static int convertEvent(KeyEvent event) {
	char upper = Character.toUpperCase(event.character);
	if(((event.stateMask &amp; (SWT.CONTROL | SWT.SHIFT)) != 0) &amp;&amp; 
(event.keyCode == 0)) {
		if (upper == 0);
			//TBD: What is the diff between CTRL+SHIFT and 
CTRL+SHIFT+@
		if (0 &lt; upper &amp;&amp; upper &lt;= 30) 
			return upper + 64;
		if (upper == 31)
			return (int)'_';
		if((upper &gt; 32 &amp;&amp; upper &lt;= 64) || (upper &gt; 90 &amp;&amp; upper != 127))
			return upper;
	}
	return event.keyCode;
}

2)Change the line:			
    } else if(e.keyCode == acelaratorKey) {
to:
    } else if (convertEvent(e) == acelaratorKey) {


What is the SWT PR?
Filed bug 19896 for the key up event problem.

Gave Ctrl+E to editor for delete line.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19833" />
    <CreationDate amount="2002-06-10 14:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Doc" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>Missing documentation for extension points</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Our extension point doc is missing for the following points we define in the 
plugin.xml for org.eclipse.ui.

acceleratorSets
aceleratorConfigurations
acceleratorScopes
actionDefinitions
markerImageProviders (only if this is now API)
markerUpdaters
documentProviders
startup


These are missing entries for certain attributes

perspective 
   default, singleton

preferencePage
   icon

propertyPages
   value

editors
   extendedType

views
   accelerator (do we even use this anymore)?

viewActions, editorActions
   definitionId, description, retarget,allowLabelUpdate

editors
  icon,extendedType
  OBSOLETE IN DOC: contributorClass

newWizard
  enablesFor
The doc for markerResolution is named markerResolutions.html (with an s)
The HTML title is wrong also.
The title and file name should be switched to markerResolution
Randy, could you please fix up the markerResolution doc?
Released fixes to marker resolution doc
Released docs for acceleratorSets, aceleratorConfigurations, acceleratorScopes, 
actionDefinitions and startup.
contributorClass is still needed and the editor doc describing its use looks OK
editors =&gt; extendedType - Not reference anywhere in the code. I think this is 
some left over experimental code. Can we remove it?

viewActions/editorActions =&gt; definitionId - Not a supported attribute yet. 
Maybe in the future when key binding is more "real".

viewActions/editorActions =&gt; description - Not a supported element. We do not 
show descriptions for these actions in the UI (but we do for Action Sets, which 
is why it has a decription element)

viewActions/editorActions =&gt; retarget/allowLabelUpdate - Not a supported 
attribute. These attributes make no sense for viewActions. For editorActions, 
it would, but the better way is to use action set part associations instead.

editors =&gt; icon - Is in the document already.
These should all be fixed up in the extension point doc.
If an attribute applies in some contexts but not others, that should be stated.

cc'ing KH.
Just to clarify my comment above. The extension point doc is correct in that it 
does not include these attributes. Some attributes exist in the code as 
constants but are either not reference anywhere in the code or only used by 
specific readers (i.e the abstract actions reader has the description element 
contants but only the action set reader does anything with it).

So the documentation is correct.
Could you please capture the required code fixups in a separate PR?
All needed changes to the documentation were done.</WithStack>
    <WithOutStack>Our extension point doc is missing for the following points we define in the 
plugin.xml for org.eclipse.ui.

acceleratorSets
aceleratorConfigurations
acceleratorScopes
actionDefinitions
markerImageProviders (only if this is now API)
markerUpdaters
documentProviders
startup


These are missing entries for certain attributes

perspective 
   default, singleton

preferencePage
   icon

propertyPages
   value

editors
   extendedType

views
   accelerator (do we even use this anymore)?

viewActions, editorActions
   definitionId, description, retarget,allowLabelUpdate

editors
  icon,extendedType
  OBSOLETE IN DOC: contributorClass

newWizard
  enablesFor
The doc for markerResolution is named markerResolutions.html (with an s)
The HTML title is wrong also.
The title and file name should be switched to markerResolution
Randy, could you please fix up the markerResolution doc?
Released fixes to marker resolution doc
Released docs for acceleratorSets, aceleratorConfigurations, acceleratorScopes, 
actionDefinitions and startup.
contributorClass is still needed and the editor doc describing its use looks OK
editors =&gt; extendedType - Not reference anywhere in the code. I think this is 
some left over experimental code. Can we remove it?

viewActions/editorActions =&gt; definitionId - Not a supported attribute yet. 
Maybe in the future when key binding is more "real".

viewActions/editorActions =&gt; description - Not a supported element. We do not 
show descriptions for these actions in the UI (but we do for Action Sets, which 
is why it has a decription element)

viewActions/editorActions =&gt; retarget/allowLabelUpdate - Not a supported 
attribute. These attributes make no sense for viewActions. For editorActions, 
it would, but the better way is to use action set part associations instead.

editors =&gt; icon - Is in the document already.
These should all be fixed up in the extension point doc.
If an attribute applies in some contexts but not others, that should be stated.

cc'ing KH.
Just to clarify my comment above. The extension point doc is correct in that it 
does not include these attributes. Some attributes exist in the code as 
constants but are either not reference anywhere in the code or only used by 
specific readers (i.e the abstract actions reader has the description element 
contants but only the action set reader does anything with it).

So the documentation is correct.
Could you please capture the required code fixups in a separate PR?
All needed changes to the documentation were done.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19834" />
    <CreationDate amount="2002-06-10 14:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>need ability to set layout/alignment of  Button's label (mainly for checkbox/radio button)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="WONTFIX" />
    <WithStack>Currently, the labels for radio buttons and checkboxes always appear to the 
right of the control.  I would like a way to specify my checkbox's label to 
appear above the checkbox.  It would be nice to be able to place the label to 
the left, above, below the control.  The label placement is needed for 
conserving space, and other UI-type reasons.  I currently just use a separate 
label, but since focus for radio buttons/checkboxes is indicated by 
highlighting its label, this lost.
Need to look at the support for this across the various platforms to see what 
is doable. Defer to post R2.0.

Moving from Later.
This isn't supported on all platforms.  It's not worth the fight to try and 
force them to do it.
that's fine with me.</WithStack>
    <WithOutStack>Currently, the labels for radio buttons and checkboxes always appear to the 
right of the control.  I would like a way to specify my checkbox's label to 
appear above the checkbox.  It would be nice to be able to place the label to 
the left, above, below the control.  The label placement is needed for 
conserving space, and other UI-type reasons.  I currently just use a separate 
label, but since focus for radio buttons/checkboxes is indicated by 
highlighting its label, this lost.
Need to look at the support for this across the various platforms to see what 
is doable. Defer to post R2.0.

Moving from Later.
This isn't supported on all platforms.  It's not worth the fight to try and 
force them to do it.
that's fine with me.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19835" />
    <CreationDate amount="2002-06-10 15:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[MPE] MultiPageEditorPart.removePage() does not dispose controls</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="428" end="696" />
        <code>public void removePage(int index) {
		if (getContainer() instanceof CTabFolder) {
			CTabFolder folder = (CTabFolder)getContainer();
			CTabItem item = folder.getItem(index);
			item.getControl().dispose();
			item.setControl(null);
		}

		super.removePage(index);
	}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="1313" end="1375" />
        <code>Good, point, it looks like that "else if (pageControl!=null) {</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build F1

MultiPageEditorPart.removePage() does not destroy the widgets associated with 
the disposed page.

It simply disposes of the CTabItem. But the CTabItem is not the parent of the 
child editors' controls, so they are not disposed of until the entire folder 
gets disposed.

This is contrary to the method's documentation.

To work around this bug, subclasses of MultiPageEditorPart can override 
removePage as follows:

	public void removePage(int index) {
		if (getContainer() instanceof CTabFolder) {
			CTabFolder folder = (CTabFolder)getContainer();
			CTabItem item = folder.getItem(index);
			item.getControl().dispose();
			item.setControl(null);
		}

		super.removePage(index);
	}

Also note that this method probably isn't widely used, since I've discovered a 
bug in CTabFolder as well (no Bug# yet) which makes removePage() crash if you 
try to remove the rightmost page.
The removePage() seems to take care of IEditorPart right away, but just depend
on a dispose later for controls.

I'll look at this for 3.2.

PW

Released into HEAD &gt;20050929.

If we remove a page and it's NOT an editor, then dispose the control.

PW

Which code would have to dispose the control, if there is an editor? From what I
understand removePage() should always dispose the control before the editor is
disposed.

Good, point, it looks like that "else if (pageControl!=null) {" should be an if,
and should be moved before the editor dispose.

PW

Updated so the control is always disposed.

Released into HEAD &gt;20051104

PW

in I20051213-0010

PW</WithStack>
    <WithOutStack>Build F1

MultiPageEditorPart.removePage() does not destroy the widgets associated with 
the disposed page.

It simply disposes of the CTabItem. But the CTabItem is not the parent of the 
child editors' controls, so they are not disposed of until the entire folder 
gets disposed.

This is contrary to the method's documentation.

To work around this bug, subclasses of MultiPageEditorPart can override 
removePage as follows:

	public void removePage(int index) {
		if (getContainer() instanceof CTabFolder) {
			CTabFolder folder = (CTabFolder)getContainer();
			CTabItem item = folder.getItem(index);
			item.getControl().dispose();
			item.setControl(null);
		}

		super.removePage(index);
	}

Also note that this method probably isn't widely used, since I've discovered a 
bug in CTabFolder as well (no Bug# yet) which makes removePage() crash if you 
try to remove the rightmost page.
The removePage() seems to take care of IEditorPart right away, but just depend
on a dispose later for controls.

I'll look at this for 3.2.

PW

Released into HEAD &gt;20050929.

If we remove a page and it's NOT an editor, then dispose the control.

PW

Which code would have to dispose the control, if there is an editor? From what I
understand removePage() should always dispose the control before the editor is
disposed.

Good, point, it looks like that "else if (pageControl!=null) {" should be an if,
and should be moved before the editor dispose.

PW

Updated so the control is always disposed.

Released into HEAD &gt;20051104

PW

in I20051213-0010

PW</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19836" />
    <CreationDate amount="2002-06-10 15:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[Commit] Commit comment dialog should be bigger and wrapped</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Commit Comment dialog in CVS is too small and it doesn't wrap text. As a result,
writing more than a few words of check-in comments is inconvenient.
I assume you meant to report this against 2.0, not 1.0.
Yes, I forgot to choose the rihgt version from the dropdown.
Reopening
*** Bug 31006 has been marked as a duplicate of this bug. ***
The dialog is at least easy to resize (in 2.1, 3.0). Just drag the lower right
corner.

But I have missed the wrap functionality a lot. I had hoped it was fixed in 3.0,
as I use CVS a lot and have this problem several times every day.
If it bothers you that much, feel free to submit a patch;-) Otherwise, we may 
get to it when other higher priority items are addressed.
Sorry, I didn't mean to be demanding in any way. I just tried to express how
much I personally would appreciate if this was implemented, so you know that if
you implement it, you would make at least two people happy. Sometimes it can be
difficult to know what users find important. But maybe I should only express
that through adding me to the Cc field and voting for the bug.

I do not find it important enough, though, to try to understand the CVS code
part, learn GUI programming, make the change, learn to build Eclipse, and test
it. :o) I thought it might be a lot easier to do for someone who knows a little
more about this. Otherwise I would submit a patch. 

But sometime I guess I have to learn all this.
Created attachment 14766
sets SWT.WRAP
This is fixed in 3.1M4 (actually in an earlier version but I don't know which).
 This can probably be closed.
Works in 3.1</WithStack>
    <WithOutStack>Commit Comment dialog in CVS is too small and it doesn't wrap text. As a result,
writing more than a few words of check-in comments is inconvenient.
I assume you meant to report this against 2.0, not 1.0.
Yes, I forgot to choose the rihgt version from the dropdown.
Reopening
*** Bug 31006 has been marked as a duplicate of this bug. ***
The dialog is at least easy to resize (in 2.1, 3.0). Just drag the lower right
corner.

But I have missed the wrap functionality a lot. I had hoped it was fixed in 3.0,
as I use CVS a lot and have this problem several times every day.
If it bothers you that much, feel free to submit a patch;-) Otherwise, we may 
get to it when other higher priority items are addressed.
Sorry, I didn't mean to be demanding in any way. I just tried to express how
much I personally would appreciate if this was implemented, so you know that if
you implement it, you would make at least two people happy. Sometimes it can be
difficult to know what users find important. But maybe I should only express
that through adding me to the Cc field and voting for the bug.

I do not find it important enough, though, to try to understand the CVS code
part, learn GUI programming, make the change, learn to build Eclipse, and test
it. :o) I thought it might be a lot easier to do for someone who knows a little
more about this. Otherwise I would submit a patch. 

But sometime I guess I have to learn all this.
Created attachment 14766
sets SWT.WRAP
This is fixed in 3.1M4 (actually in an earlier version but I don't know which).
 This can probably be closed.
Works in 3.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19837" />
    <CreationDate amount="2002-06-10 15:41:00 -0400" />
    <DupId amount="19389" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Restore from Local History should allow multiple selections</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>It should be possible to choose multiple elements in the "Restore from Local
History" dialog box.


*** This bug has been marked as a duplicate of 19389 ***</WithStack>
    <WithOutStack>It should be possible to choose multiple elements in the "Restore from Local
History" dialog box.


*** This bug has been marked as a duplicate of 19389 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19838" />
    <CreationDate amount="2002-06-10 15:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Error codes for Ant Core should be public</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>build F2

Currently the error codes for Ant Core are internal and other plug-ins cannot 
make use of them. We should look into making them public.
Defer after 2.0.
Reopening for consideration.
Constants are now definied in the AntCorePlugin.
Please verify (Jared).
Please verify (Joe)
Verified.</WithStack>
    <WithOutStack>build F2

Currently the error codes for Ant Core are internal and other plug-ins cannot 
make use of them. We should look into making them public.
Defer after 2.0.
Reopening for consideration.
Constants are now definied in the AntCorePlugin.
Please verify (Jared).
Please verify (Joe)
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19839" />
    <CreationDate amount="2002-06-10 16:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Can't search for declaration of methods in inner types [search] [general issue]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="51" end="159" />
        <code>public class Foo {
	public void bar() {
	}
	public Object x = new Object() {
		public void quux() {
		}
	}
}</code>
      </source_code>
      <source_code type="class">
        <location start="570" end="679" />
        <code>public class Foo {
	public void bar() {
	}
	public Object x = new Object() {
		public void quux() {
		}
	};
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- we are using code resolve to convert a selection into a Java element. Since</Line>
          <Line>there isn't a Java element for local and anonymous types code resolve doesn't</Line>
          <Line>return the correct Java element.</Line>
          <Line>- I even didn't find a way to do the search in the Search dialog. There is no</Line>
          <Line>way to enter a "signature" for anonymous inner types.</Line>
          <Line>Moving to J Core for comment.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build F2

Enter the following class into Eclipse:

public class Foo {
	public void bar() {
	}
	public Object x = new Object() {
		public void quux() {
		}
	}
}

If you select 'bar' in the Java editor and search for 'Declarations'-&gt;'In 
Workspace' the search proceeds as expected.

But if you select 'quux' instead, you get an error dialog that 'The operation 
is unavailable on the current element, please select a valid Java element 
name.'

quux is a valid Java element name, and the search should work.
Oops - missing a semicolon in the example. The code should be:

public class Foo {
	public void bar() {
	}
	public Object x = new Object() {
		public void quux() {
		}
	};
}

Two issues:
- we are using code resolve to convert a selection into a Java element. Since
  there isn't a Java element for local and anonymous types code resolve doesn't
  return the correct Java element.
- I even didn't find a way to do the search in the Search dialog. There is no
  way to enter a "signature" for anonymous inner types.
Moving to J Core for comment.

As Dirk said there is no IJavaElement for anonymous or local types in the Java 
model.
When resolving maybe we could return a non-existing 
IJavaElement: "java.lang.Object.quux()"
What should I do with a non-existent Java Element? How would I feed it into the
Search engine?
I was just thinking out loud. I was expecting that SearchEngine.search
(IWorkspace, IJavaElement, int, IJavaSearchScope, IJavaSearchResultCollector) 
would not need to open the element. This is not currently true.

Need to find another solution.

The more general issue of having IJavaElements for local and anonymous types 
will be investigated after 2.1.
It is now "after 2.1" as comment #7 says. Would this bug be investigated now? 
or later?
Having IJavaElement handles on local constructs is on the 3.0 plan (see 
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/jdt-core-
home/r3.0/main.html#release-plan).
Closing as this is now supported.
This issue appears to be fixed in eclipse 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Build F2

Enter the following class into Eclipse:

public class Foo {
	public void bar() {
	}
	public Object x = new Object() {
		public void quux() {
		}
	}
}

If you select 'bar' in the Java editor and search for 'Declarations'-&gt;'In 
Workspace' the search proceeds as expected.

But if you select 'quux' instead, you get an error dialog that 'The operation 
is unavailable on the current element, please select a valid Java element 
name.'

quux is a valid Java element name, and the search should work.
Oops - missing a semicolon in the example. The code should be:

public class Foo {
	public void bar() {
	}
	public Object x = new Object() {
		public void quux() {
		}
	};
}

Two issues:
- we are using code resolve to convert a selection into a Java element. Since
  there isn't a Java element for local and anonymous types code resolve doesn't
  return the correct Java element.
- I even didn't find a way to do the search in the Search dialog. There is no
  way to enter a "signature" for anonymous inner types.
Moving to J Core for comment.

As Dirk said there is no IJavaElement for anonymous or local types in the Java 
model.
When resolving maybe we could return a non-existing 
IJavaElement: "java.lang.Object.quux()"
What should I do with a non-existent Java Element? How would I feed it into the
Search engine?
I was just thinking out loud. I was expecting that SearchEngine.search
(IWorkspace, IJavaElement, int, IJavaSearchScope, IJavaSearchResultCollector) 
would not need to open the element. This is not currently true.

Need to find another solution.

The more general issue of having IJavaElements for local and anonymous types 
will be investigated after 2.1.
It is now "after 2.1" as comment #7 says. Would this bug be investigated now? 
or later?
Having IJavaElement handles on local constructs is on the 3.0 plan (see 
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/jdt-core-
home/r3.0/main.html#release-plan).
Closing as this is now supported.
This issue appears to be fixed in eclipse 3.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19840" />
    <CreationDate amount="2002-06-10 16:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Poor grammar in search error dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build F2

In some cases, search will fail with the following error: 'The operation is 
unavailable on the current element, please select a valid Java element name.'

This is a run-on sentence. It should be: 'The operation is unavailable on the 
current element. Please select a valid Java element name.'
fix for F3
Fix available in builds &gt; 20020610
Reviewed by EG

Verified. TB</WithStack>
    <WithOutStack>Build F2

In some cases, search will fail with the following error: 'The operation is 
unavailable on the current element, please select a valid Java element name.'

This is a run-on sentence. It should be: 'The operation is unavailable on the 
current element. Please select a valid Java element name.'
fix for F3
Fix available in builds &gt; 20020610
Reviewed by EG

Verified. TB</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19841" />
    <CreationDate amount="2002-06-10 16:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[HELP] WorkbenchHelp calling depricated IHelp API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20020610

WorkbenchHelp should call displayContext, displayHelp has been deprecated
Please reopen and let me know if this is needed for 2.0.
Reopened for investigation
Created attachment 1923
Patch file for PR 19841
Patch by Andrew Irvine approved and released.</WithStack>
    <WithOutStack>20020610

WorkbenchHelp should call displayContext, displayHelp has been deprecated
Please reopen and let me know if this is needed for 2.0.
Reopened for investigation
Created attachment 1923
Patch file for PR 19841
Patch by Andrew Irvine approved and released.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19842" />
    <CreationDate amount="2002-06-10 16:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ctrl+D is associated with 2 action in emacs.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- org.eclipse.ui.edit.delete</Line>
          <Line>- org.eclipse.ui.edit.text.deleteNext</Line>
          <Line>Ctrl+D should delete next.</Line>
          <Line>Fix reviewed by NE and EJP and released.</Line>
          <Line>Verified in 20020612</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 0607 + UI Head Stream

Ctrl+D is associated with 2 action in emacs:
 - org.eclipse.ui.edit.delete
 - org.eclipse.ui.edit.text.deleteNext
Ctrl+D should delete next.
Fix reviewed by NE and EJP and released.
Verified in 20020612</WithStack>
    <WithOutStack>Build 0607 + UI Head Stream

Ctrl+D is associated with 2 action in emacs:
 - org.eclipse.ui.edit.delete
 - org.eclipse.ui.edit.text.deleteNext
Ctrl+D should delete next.
Fix reviewed by NE and EJP and released.
Verified in 20020612</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19843" />
    <CreationDate amount="2002-06-10 16:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[resources] IndexedStoreException while shutting down workspace</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Issue Tracker number is HD100123.

Everytime the workbench is shutdown the following error is seen: 

"Problems occured while trying to save the state of the workbench" in a window 
dialog box entitled: "Problem saving workspace'. When the Press Details button 
is pressed,it says: 

"Problems occurred during save" 

By the way there is lots of disk space. 

Here is the log:

Log: Thu Jun 06 18:32:50 GMT+02:00 2002
2 org.eclipse.core.runtime 1 Problems encountered loading the plug-in registry.
	1=============&lt;children&gt;=============
	2 org.eclipse.core.runtime 1 Unknown extension point 
com.rational.clearcase.editorFeatures specified in plug-in 
com.rational.hshell.ratltool.
	1=============&lt;/children&gt;=============
Log: Thu Jun 06 18:34:05 GMT+02:00 2002
2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-
in: org.eclipse.core.resources.
org.eclipse.core.internal.resources.ResourceException()[272]: 
org.eclipse.core.internal.resources.ResourceException()[272]: 
IndexedStoreException:Object was not stored.
	at org.eclipse.core.internal.indexing.IndexedStore.insertObject
(IndexedStore.java:304)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:176)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:185)
	at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject
(IndexedStoreWrapper.java:80)
	at org.eclipse.core.internal.properties.PropertyStore.basicUpdate
(PropertyStore.java:87)
	at org.eclipse.core.internal.properties.PropertyStore.commonSet
(PropertyStore.java:110)
	at org.eclipse.core.internal.properties.PropertyStore.set
(PropertyStore.java:419)
	at org.eclipse.core.internal.properties.PropertyManager.setProperty
(PropertyManager.java:151)
	at org.eclipse.core.internal.resources.Resource.setPersistentProperty
(Resource.java:939)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveVariables
(JavaModelManager.java:1121)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving
(JavaModelManager.java:1130)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:244)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:87)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:98)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:725)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1220)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace
(Workbench.java:185)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)
	at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:155)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:256)
	at org.eclipse.ui.internal.WorkbenchWindow.access$3
(WorkbenchWindow.java:251)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:291)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:289)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:462)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:148)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:910)
	at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:807)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:437)
	at org.eclipse.core.launcher.Main.main(Main.java:310)
	4 org.eclipse.core.resources 272 Could not write property: 
org.eclipse.jdt.core variables.
org.eclipse.core.internal.resources.ResourceException()[272]: 
IndexedStoreException:Object was not stored.
	at org.eclipse.core.internal.indexing.IndexedStore.insertObject
(IndexedStore.java:304)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:176)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:185)
	at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject
(IndexedStoreWrapper.java:80)
	at org.eclipse.core.internal.properties.PropertyStore.basicUpdate
(PropertyStore.java:87)
	at org.eclipse.core.internal.properties.PropertyStore.commonSet
(PropertyStore.java:110)
	at org.eclipse.core.internal.properties.PropertyStore.set
(PropertyStore.java:419)
	at org.eclipse.core.internal.properties.PropertyManager.setProperty
(PropertyManager.java:151)
	at org.eclipse.core.internal.resources.Resource.setPersistentProperty
(Resource.java:939)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveVariables
(JavaModelManager.java:1121)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving
(JavaModelManager.java:1130)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:244)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:87)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:98)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:725)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1220)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace
(Workbench.java:185)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)
	at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:155)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:256)
	at org.eclipse.ui.internal.WorkbenchWindow.access$3
(WorkbenchWindow.java:251)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:291)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:289)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:462)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:148)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:910)
	at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:807)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:437)
	at org.eclipse.core.launcher.Main.main(Main.java:310)
		4 org.eclipse.core.resources 272 Could not write to indexed 
store: C:\Programme\IBM\Application 
Developer\workspace\.metadata\.plugins\org.eclipse.core.resources\.root\.propert
ies.
IndexedStoreException:Object was not stored.
	at org.eclipse.core.internal.indexing.IndexedStore.insertObject
(IndexedStore.java:304)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:176)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:185)
	at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject
(IndexedStoreWrapper.java:80)
	at org.eclipse.core.internal.properties.PropertyStore.basicUpdate
(PropertyStore.java:87)
	at org.eclipse.core.internal.properties.PropertyStore.commonSet
(PropertyStore.java:110)
	at org.eclipse.core.internal.properties.PropertyStore.set
(PropertyStore.java:419)
	at org.eclipse.core.internal.properties.PropertyManager.setProperty
(PropertyManager.java:151)
	at org.eclipse.core.internal.resources.Resource.setPersistentProperty
(Resource.java:939)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveVariables
(JavaModelManager.java:1121)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving
(JavaModelManager.java:1130)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:244)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:87)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:98)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:725)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1220)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace
(Workbench.java:185)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)
	at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:155)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:256)
	at org.eclipse.ui.internal.WorkbenchWindow.access$3
(WorkbenchWindow.java:251)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:291)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:289)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:462)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:148)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:910)
	at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:807)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:437)
	at org.eclipse.core.launcher.Main.main(Main.java:310)
Log: Thu Jun 06 18:34:10 GMT+02:00 2002
1 org.eclipse.core.resources 4 Problems saving workspace
Log: Thu Jun 06 18:34:10 GMT+02:00 2002
2 org.eclipse.ui 1 Problems occurred while trying to save the state of the 
workbench.
	1=============&lt;children&gt;=============
	2 org.eclipse.core.resources 566 Problems occurred during save.
org.eclipse.core.internal.resources.ResourceException()[272]: 
org.eclipse.core.internal.resources.ResourceException()[272]: 
IndexedStoreException:Object was not stored.
	at org.eclipse.core.internal.indexing.IndexedStore.insertObject
(IndexedStore.java:304)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:176)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:185)
	at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject
(IndexedStoreWrapper.java:80)
	at org.eclipse.core.internal.properties.PropertyStore.basicUpdate
(PropertyStore.java:87)
	at org.eclipse.core.internal.properties.PropertyStore.commonSet
(PropertyStore.java:110)
	at org.eclipse.core.internal.properties.PropertyStore.set
(PropertyStore.java:419)
	at org.eclipse.core.internal.properties.PropertyManager.setProperty
(PropertyManager.java:151)
	at org.eclipse.core.internal.resources.Resource.setPersistentProperty
(Resource.java:939)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveVariables
(JavaModelManager.java:1121)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving
(JavaModelManager.java:1130)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:244)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:87)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:98)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:725)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1220)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace
(Workbench.java:185)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)
	at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:155)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:256)
	at org.eclipse.ui.internal.WorkbenchWindow.access$3
(WorkbenchWindow.java:251)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:291)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:289)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:462)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:148)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:910)
	at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:807)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:437)
	at org.eclipse.core.launcher.Main.main(Main.java:310)
		4 org.eclipse.core.resources 272 Could not write property: 
org.eclipse.jdt.core variables.
org.eclipse.core.internal.resources.ResourceException()[272]: 
IndexedStoreException:Object was not stored.
	at org.eclipse.core.internal.indexing.IndexedStore.insertObject
(IndexedStore.java:304)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:176)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:185)
	at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject
(IndexedStoreWrapper.java:80)
	at org.eclipse.core.internal.properties.PropertyStore.basicUpdate
(PropertyStore.java:87)
	at org.eclipse.core.internal.properties.PropertyStore.commonSet
(PropertyStore.java:110)
	at org.eclipse.core.internal.properties.PropertyStore.set
(PropertyStore.java:419)
	at org.eclipse.core.internal.properties.PropertyManager.setProperty
(PropertyManager.java:151)
	at org.eclipse.core.internal.resources.Resource.setPersistentProperty
(Resource.java:939)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveVariables
(JavaModelManager.java:1121)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving
(JavaModelManager.java:1130)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:244)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:87)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:98)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:725)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1220)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace
(Workbench.java:185)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)
	at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:155)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:256)
	at org.eclipse.ui.internal.WorkbenchWindow.access$3
(WorkbenchWindow.java:251)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:291)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:289)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:462)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:148)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:910)
	at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:807)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:437)
	at org.eclipse.core.launcher.Main.main(Main.java:310)
			4 org.eclipse.core.resources 272 Could not write to 
indexed store: C:\Programme\IBM\Application 
Developer\workspace\.metadata\.plugins\org.eclipse.core.resources\.root\.propert
ies.
IndexedStoreException:Object was not stored.
	at org.eclipse.core.internal.indexing.IndexedStore.insertObject
(IndexedStore.java:304)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:176)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:185)
	at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject
(IndexedStoreWrapper.java:80)
	at org.eclipse.core.internal.properties.PropertyStore.basicUpdate
(PropertyStore.java:87)
	at org.eclipse.core.internal.properties.PropertyStore.commonSet
(PropertyStore.java:110)
	at org.eclipse.core.internal.properties.PropertyStore.set
(PropertyStore.java:419)
	at org.eclipse.core.internal.properties.PropertyManager.setProperty
(PropertyManager.java:151)
	at org.eclipse.core.internal.resources.Resource.setPersistentProperty
(Resource.java:939)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveVariables
(JavaModelManager.java:1121)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving
(JavaModelManager.java:1130)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:244)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:87)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:98)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:725)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1220)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace
(Workbench.java:185)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)
	at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:155)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:256)
	at org.eclipse.ui.internal.WorkbenchWindow.access$3
(WorkbenchWindow.java:251)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:291)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:289)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:462)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:148)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:910)
	at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:807)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:437)
	at org.eclipse.core.launcher.Main.main(Main.java:310)
	1=============&lt;/children&gt;=============
Is there a reproducible case?  I don't get this error when I shutdown a 
workspace.

This error is occurring while writing java variables.  If you look under 
Preferences-&gt;Java-&gt;Classpath Variables, do you see anything out of the ordinary?

One final thing that would help us track it down... search in the .metadata area 
for files called ".properties".  Are there any .properties files in the 
workspace that are *very* large?
I will check to see if there is anything out of the ordinary with Preferences-
&gt;Java-&gt;Classpath Variables.  The .properties file is 1808 KB.
I suspect this is a side-effect of bug 10548.  We had a leak in the property 
store that caused it to grow indefinitely.  I suspect if you let this keep 
growing, the index store reaches a size limit and fails to save any more 
properties.  The "workaround" is to delete the .properties file.  You will lose 
any java classpath variables that you had defined.
Deleting the .properties file seems to have solved the customer problem. This 
bug also suggests that there is a limit on the size of this file. If so, is 
this size limitation of the .poperties file documented somewhere? If not, what 
is the limitation?

I haven't been able to find a maximum size for the property store.  I tried a 
test case where the store grew to 25MB and still remained consistent, although 
performance drops off dramatically after about 2MB.

I can't say for sure if the property store corruption you encountered was due to 
the leak or not.  Deleting the property store is only a temporary solution, 
since with a 1.0 version of eclipse the memory leak still exists.  The best 
solution is to upgrade to a 2.0 stream drop if possible.
The customer has closed this on his side.
Closing.
Please re-open if this occurs in the latest builds.</WithStack>
    <WithOutStack>Issue Tracker number is HD100123.

Everytime the workbench is shutdown the following error is seen: 

"Problems occured while trying to save the state of the workbench" in a window 
dialog box entitled: "Problem saving workspace'. When the Press Details button 
is pressed,it says: 

"Problems occurred during save" 

By the way there is lots of disk space. 

Here is the log:

Log: Thu Jun 06 18:32:50 GMT+02:00 2002
2 org.eclipse.core.runtime 1 Problems encountered loading the plug-in registry.
	1=============&lt;children&gt;=============
	2 org.eclipse.core.runtime 1 Unknown extension point 
com.rational.clearcase.editorFeatures specified in plug-in 
com.rational.hshell.ratltool.
	1=============&lt;/children&gt;=============
Log: Thu Jun 06 18:34:05 GMT+02:00 2002
2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-
in: org.eclipse.core.resources.
org.eclipse.core.internal.resources.ResourceException()[272]: 
org.eclipse.core.internal.resources.ResourceException()[272]: 
IndexedStoreException:Object was not stored.
	at org.eclipse.core.internal.indexing.IndexedStore.insertObject
(IndexedStore.java:304)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:176)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:185)
	at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject
(IndexedStoreWrapper.java:80)
	at org.eclipse.core.internal.properties.PropertyStore.basicUpdate
(PropertyStore.java:87)
	at org.eclipse.core.internal.properties.PropertyStore.commonSet
(PropertyStore.java:110)
	at org.eclipse.core.internal.properties.PropertyStore.set
(PropertyStore.java:419)
	at org.eclipse.core.internal.properties.PropertyManager.setProperty
(PropertyManager.java:151)
	at org.eclipse.core.internal.resources.Resource.setPersistentProperty
(Resource.java:939)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveVariables
(JavaModelManager.java:1121)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving
(JavaModelManager.java:1130)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:244)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:87)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:98)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:725)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1220)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace
(Workbench.java:185)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)
	at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:155)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:256)
	at org.eclipse.ui.internal.WorkbenchWindow.access$3
(WorkbenchWindow.java:251)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:291)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:289)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:462)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:148)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:910)
	at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:807)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:437)
	at org.eclipse.core.launcher.Main.main(Main.java:310)
	4 org.eclipse.core.resources 272 Could not write property: 
org.eclipse.jdt.core variables.
org.eclipse.core.internal.resources.ResourceException()[272]: 
IndexedStoreException:Object was not stored.
	at org.eclipse.core.internal.indexing.IndexedStore.insertObject
(IndexedStore.java:304)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:176)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:185)
	at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject
(IndexedStoreWrapper.java:80)
	at org.eclipse.core.internal.properties.PropertyStore.basicUpdate
(PropertyStore.java:87)
	at org.eclipse.core.internal.properties.PropertyStore.commonSet
(PropertyStore.java:110)
	at org.eclipse.core.internal.properties.PropertyStore.set
(PropertyStore.java:419)
	at org.eclipse.core.internal.properties.PropertyManager.setProperty
(PropertyManager.java:151)
	at org.eclipse.core.internal.resources.Resource.setPersistentProperty
(Resource.java:939)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveVariables
(JavaModelManager.java:1121)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving
(JavaModelManager.java:1130)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:244)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:87)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:98)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:725)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1220)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace
(Workbench.java:185)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)
	at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:155)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:256)
	at org.eclipse.ui.internal.WorkbenchWindow.access$3
(WorkbenchWindow.java:251)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:291)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:289)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:462)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:148)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:910)
	at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:807)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:437)
	at org.eclipse.core.launcher.Main.main(Main.java:310)
		4 org.eclipse.core.resources 272 Could not write to indexed 
store: C:\Programme\IBM\Application 
Developer\workspace\.metadata\.plugins\org.eclipse.core.resources\.root\.propert
ies.
IndexedStoreException:Object was not stored.
	at org.eclipse.core.internal.indexing.IndexedStore.insertObject
(IndexedStore.java:304)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:176)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:185)
	at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject
(IndexedStoreWrapper.java:80)
	at org.eclipse.core.internal.properties.PropertyStore.basicUpdate
(PropertyStore.java:87)
	at org.eclipse.core.internal.properties.PropertyStore.commonSet
(PropertyStore.java:110)
	at org.eclipse.core.internal.properties.PropertyStore.set
(PropertyStore.java:419)
	at org.eclipse.core.internal.properties.PropertyManager.setProperty
(PropertyManager.java:151)
	at org.eclipse.core.internal.resources.Resource.setPersistentProperty
(Resource.java:939)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveVariables
(JavaModelManager.java:1121)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving
(JavaModelManager.java:1130)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:244)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:87)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:98)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:725)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1220)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace
(Workbench.java:185)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)
	at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:155)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:256)
	at org.eclipse.ui.internal.WorkbenchWindow.access$3
(WorkbenchWindow.java:251)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:291)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:289)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:462)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:148)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:910)
	at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:807)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:437)
	at org.eclipse.core.launcher.Main.main(Main.java:310)
Log: Thu Jun 06 18:34:10 GMT+02:00 2002
1 org.eclipse.core.resources 4 Problems saving workspace
Log: Thu Jun 06 18:34:10 GMT+02:00 2002
2 org.eclipse.ui 1 Problems occurred while trying to save the state of the 
workbench.
	1=============&lt;children&gt;=============
	2 org.eclipse.core.resources 566 Problems occurred during save.
org.eclipse.core.internal.resources.ResourceException()[272]: 
org.eclipse.core.internal.resources.ResourceException()[272]: 
IndexedStoreException:Object was not stored.
	at org.eclipse.core.internal.indexing.IndexedStore.insertObject
(IndexedStore.java:304)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:176)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:185)
	at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject
(IndexedStoreWrapper.java:80)
	at org.eclipse.core.internal.properties.PropertyStore.basicUpdate
(PropertyStore.java:87)
	at org.eclipse.core.internal.properties.PropertyStore.commonSet
(PropertyStore.java:110)
	at org.eclipse.core.internal.properties.PropertyStore.set
(PropertyStore.java:419)
	at org.eclipse.core.internal.properties.PropertyManager.setProperty
(PropertyManager.java:151)
	at org.eclipse.core.internal.resources.Resource.setPersistentProperty
(Resource.java:939)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveVariables
(JavaModelManager.java:1121)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving
(JavaModelManager.java:1130)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:244)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:87)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:98)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:725)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1220)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace
(Workbench.java:185)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)
	at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:155)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:256)
	at org.eclipse.ui.internal.WorkbenchWindow.access$3
(WorkbenchWindow.java:251)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:291)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:289)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:462)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:148)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:910)
	at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:807)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:437)
	at org.eclipse.core.launcher.Main.main(Main.java:310)
		4 org.eclipse.core.resources 272 Could not write property: 
org.eclipse.jdt.core variables.
org.eclipse.core.internal.resources.ResourceException()[272]: 
IndexedStoreException:Object was not stored.
	at org.eclipse.core.internal.indexing.IndexedStore.insertObject
(IndexedStore.java:304)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:176)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:185)
	at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject
(IndexedStoreWrapper.java:80)
	at org.eclipse.core.internal.properties.PropertyStore.basicUpdate
(PropertyStore.java:87)
	at org.eclipse.core.internal.properties.PropertyStore.commonSet
(PropertyStore.java:110)
	at org.eclipse.core.internal.properties.PropertyStore.set
(PropertyStore.java:419)
	at org.eclipse.core.internal.properties.PropertyManager.setProperty
(PropertyManager.java:151)
	at org.eclipse.core.internal.resources.Resource.setPersistentProperty
(Resource.java:939)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveVariables
(JavaModelManager.java:1121)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving
(JavaModelManager.java:1130)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:244)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:87)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:98)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:725)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1220)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace
(Workbench.java:185)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)
	at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:155)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:256)
	at org.eclipse.ui.internal.WorkbenchWindow.access$3
(WorkbenchWindow.java:251)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:291)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:289)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:462)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:148)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:910)
	at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:807)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:437)
	at org.eclipse.core.launcher.Main.main(Main.java:310)
			4 org.eclipse.core.resources 272 Could not write to 
indexed store: C:\Programme\IBM\Application 
Developer\workspace\.metadata\.plugins\org.eclipse.core.resources\.root\.propert
ies.
IndexedStoreException:Object was not stored.
	at org.eclipse.core.internal.indexing.IndexedStore.insertObject
(IndexedStore.java:304)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:176)
	at org.eclipse.core.internal.indexing.IndexedStore.createObject
(IndexedStore.java:185)
	at org.eclipse.core.internal.properties.IndexedStoreWrapper.createObject
(IndexedStoreWrapper.java:80)
	at org.eclipse.core.internal.properties.PropertyStore.basicUpdate
(PropertyStore.java:87)
	at org.eclipse.core.internal.properties.PropertyStore.commonSet
(PropertyStore.java:110)
	at org.eclipse.core.internal.properties.PropertyStore.set
(PropertyStore.java:419)
	at org.eclipse.core.internal.properties.PropertyManager.setProperty
(PropertyManager.java:151)
	at org.eclipse.core.internal.resources.Resource.setPersistentProperty
(Resource.java:939)
	at org.eclipse.jdt.internal.core.JavaModelManager.saveVariables
(JavaModelManager.java:1121)
	at org.eclipse.jdt.internal.core.JavaModelManager.saving
(JavaModelManager.java:1130)
	at org.eclipse.core.internal.resources.SaveManager.executeLifecycle
(SaveManager.java:244)
	at org.eclipse.core.internal.resources.SaveManager$1.run
(SaveManager.java:87)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.resources.SaveManager.broadcastLifecycle
(SaveManager.java:98)
	at org.eclipse.core.internal.resources.SaveManager.save
(SaveManager.java:725)
	at org.eclipse.core.internal.resources.Workspace.save
(Workspace.java:1220)
	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:178)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:335)
	at org.eclipse.ui.internal.Workbench.disconnectFromWorkspace
(Workbench.java:185)
	at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:108)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:76)
	at org.eclipse.ui.internal.Workbench$3.run(Workbench.java:157)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.Workbench.close(Workbench.java:155)
	at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:256)
	at org.eclipse.ui.internal.WorkbenchWindow.access$3
(WorkbenchWindow.java:251)
	at org.eclipse.ui.internal.WorkbenchWindow$1.run
(WorkbenchWindow.java:291)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:289)
	at org.eclipse.jface.window.Window.handleShellCloseEvent
(Window.java:462)
	at org.eclipse.jface.window.Window$2.shellClosed(Window.java:389)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:148)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Decorations.WM_CLOSE(Decorations.java:910)
	at org.eclipse.swt.widgets.Shell.WM_CLOSE(Shell.java:807)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(Native Method)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:873)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:656)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:437)
	at org.eclipse.core.launcher.Main.main(Main.java:310)
	1=============&lt;/children&gt;=============
Is there a reproducible case?  I don't get this error when I shutdown a 
workspace.

This error is occurring while writing java variables.  If you look under 
Preferences-&gt;Java-&gt;Classpath Variables, do you see anything out of the ordinary?

One final thing that would help us track it down... search in the .metadata area 
for files called ".properties".  Are there any .properties files in the 
workspace that are *very* large?
I will check to see if there is anything out of the ordinary with Preferences-
&gt;Java-&gt;Classpath Variables.  The .properties file is 1808 KB.
I suspect this is a side-effect of bug 10548.  We had a leak in the property 
store that caused it to grow indefinitely.  I suspect if you let this keep 
growing, the index store reaches a size limit and fails to save any more 
properties.  The "workaround" is to delete the .properties file.  You will lose 
any java classpath variables that you had defined.
Deleting the .properties file seems to have solved the customer problem. This 
bug also suggests that there is a limit on the size of this file. If so, is 
this size limitation of the .poperties file documented somewhere? If not, what 
is the limitation?

I haven't been able to find a maximum size for the property store.  I tried a 
test case where the store grew to 25MB and still remained consistent, although 
performance drops off dramatically after about 2MB.

I can't say for sure if the property store corruption you encountered was due to 
the leak or not.  Deleting the property store is only a temporary solution, 
since with a 1.0 version of eclipse the memory leak still exists.  The best 
solution is to upgrade to a 2.0 stream drop if possible.
The customer has closed this on his side.
Closing.
Please re-open if this occurs in the latest builds.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19844" />
    <CreationDate amount="2002-06-10 16:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Bad feature.xml/plug-in content breaks other features</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I was trying to prove that if feat/plugin A-2.0.0 was installed and I added a 
feat/plugin B-2.1.0 that required plugin A-2.1.0 that B would be blocked(it was 
- good).

I then noticed that the next time I started the workbench that feat/plugin 
A-2.0.0 was disabled along with feat/plugin B-2.1.0.  Made no sense.

In my testing I found the problem (mine).  My feat B-2.1.0 had plugin B-2.0.0 
listed in the xml.  B-2.0.0 never existed.  A B-2.1.0 plugin was 
defined/included in the dir referenced by the link when adding the 
feat/plugin to the workbench.  This is what caused the strange behavior.

That said, it might still be better if a bad feature def (B-2.0.1) did not break 
other features (A-2.0.0) when the only relationship was that the plugin(B-2.1.0) 
that was included in the linked-to /plugin dir and the feature(B-2.1.0) that did 
not reference the plugin both had a requires for a plugin in the A-2.0.0 
feature.

Let me know if this is confusing - I can post the xml involved.

This is the message I saw in the log that seems to be related:

!ENTRY org.eclipse.core.runtime 2 1 Jun 10, 2002 16:34:59.184
!MESSAGE Problems encountered loading the plug-in registry.
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jun 10, 2002 16:34:59.184
!MESSAGE Unable to satisfy prerequisite constraint from 
"com.ibm.etools.gef.examples.logicdesigner" to "com.ibm.etools.gef".
a couple issues are fixed in 2.0.2 re reconciliation when a abad feature is
recognized
can you check in 2.0.2 and reopen with details description if necessary ? thanks Pat</WithStack>
    <WithOutStack>I was trying to prove that if feat/plugin A-2.0.0 was installed and I added a 
feat/plugin B-2.1.0 that required plugin A-2.1.0 that B would be blocked(it was 
- good).

I then noticed that the next time I started the workbench that feat/plugin 
A-2.0.0 was disabled along with feat/plugin B-2.1.0.  Made no sense.

In my testing I found the problem (mine).  My feat B-2.1.0 had plugin B-2.0.0 
listed in the xml.  B-2.0.0 never existed.  A B-2.1.0 plugin was 
defined/included in the dir referenced by the link when adding the 
feat/plugin to the workbench.  This is what caused the strange behavior.

That said, it might still be better if a bad feature def (B-2.0.1) did not break 
other features (A-2.0.0) when the only relationship was that the plugin(B-2.1.0) 
that was included in the linked-to /plugin dir and the feature(B-2.1.0) that did 
not reference the plugin both had a requires for a plugin in the A-2.0.0 
feature.

Let me know if this is confusing - I can post the xml involved.

This is the message I saw in the log that seems to be related:

!ENTRY org.eclipse.core.runtime 2 1 Jun 10, 2002 16:34:59.184
!MESSAGE Problems encountered loading the plug-in registry.
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jun 10, 2002 16:34:59.184
!MESSAGE Unable to satisfy prerequisite constraint from 
"com.ibm.etools.gef.examples.logicdesigner" to "com.ibm.etools.gef".
a couple issues are fixed in 2.0.2 re reconciliation when a abad feature is
recognized
can you check in 2.0.2 and reopen with details description if necessary ? thanks Pat</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19845" />
    <CreationDate amount="2002-06-10 16:44:00 -0400" />
    <DupId amount="19560" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Windows come to front for no reason</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build F2

I normally run Eclipse with two windows open: a Debug perspective in one, and 
Resource and Java perspectives in the other.

I've noticed several times that the Debug window will come to the front for no 
particular reason when I'm working in the Java window.

For instance, a few minutes ago a had a code assist shell open in the Java 
window. The JavaDoc shell opened automatically. I clicked on the JavaDoc shell 
to make it go away. It disappeared, and the Debug window came to the front!

I'm afraid that I can't repeat these problems reliably, but I wanted to report 
this in case someone knows what might be happening.
Kai, have you seen this?  Sounds like the Javadoc shell has the wrong parent.



*** This bug has been marked as a duplicate of 19560 ***</WithStack>
    <WithOutStack>Build F2

I normally run Eclipse with two windows open: a Debug perspective in one, and 
Resource and Java perspectives in the other.

I've noticed several times that the Debug window will come to the front for no 
particular reason when I'm working in the Java window.

For instance, a few minutes ago a had a code assist shell open in the Java 
window. The JavaDoc shell opened automatically. I clicked on the JavaDoc shell 
to make it go away. It disappeared, and the Debug window came to the front!

I'm afraid that I can't repeat these problems reliably, but I wanted to report 
this in case someone knows what might be happening.
Kai, have you seen this?  Sounds like the Javadoc shell has the wrong parent.



*** This bug has been marked as a duplicate of 19560 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19846" />
    <CreationDate amount="2002-06-10 16:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Coolbar] Investigate coolbar layout problem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. Open a new Debug perspective.</Line>
          <Line>2. Close any open editors, so that coolbar items are as follows (ui, launch,</Line>
          <Line>open type, search, external tools).</Line>
          <Line>3. Size the workbench window smaller until the Run menu item flows to another</Line>
          <Line>line.  Keep sizing the window as small as you can without the Project menu item</Line>
          <Line>going to another line.</Line>
          <Line>4. Reset Toolbar Layout</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>1. Open a new Debug perspective.
2. Close any open editors, so that coolbar items are as follows (ui, launch, 
open type, search, external tools).
3. Size the workbench window smaller until the Run menu item flows to another 
line.  Keep sizing the window as small as you can without the Project menu item 
going to another line.
4. Reset Toolbar Layout

Notice that the perspective views are not resized to accomodate the taller 
coolbar.  Resize the workbench window and the perspective layout will be 
updated properly.  Could be layout bug or a coolbar bug or a platform bug.  
Investigate post 2.0.  Put in workaround to force a layout when toolbar layout 
reset.
Note - happens sporadically.
Unable to recreate in 20020827 build.</WithStack>
    <WithOutStack>1. Open a new Debug perspective.
2. Close any open editors, so that coolbar items are as follows (ui, launch, 
open type, search, external tools).
3. Size the workbench window smaller until the Run menu item flows to another 
line.  Keep sizing the window as small as you can without the Project menu item 
going to another line.
4. Reset Toolbar Layout

Notice that the perspective views are not resized to accomodate the taller 
coolbar.  Resize the workbench window and the perspective layout will be 
updated properly.  Could be layout bug or a coolbar bug or a platform bug.  
Investigate post 2.0.  Put in workaround to force a layout when toolbar layout 
reset.
Note - happens sporadically.
Unable to recreate in 20020827 build.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19847" />
    <CreationDate amount="2002-06-10 17:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>NPE setting default JRE when running on J9</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="functioncall">
        <location start="2616" end="2691" />
        <code>org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2696" end="2858" />
        <code>org/eclipse/core/internal/boot/InternalBootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2864" end="3009" />
        <code>org/eclipse/core/boot/BootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3015" end="3114" />
        <code>java/lang/reflect/AccessibleObject.invokeL(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3120" end="3208" />
        <code>java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3211" end="3291" />
        <code>org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3296" end="3369" />
        <code>org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build: 20020607
J9 VM 20020531, IVE 20020606, JCLMax 20020606

I get a NPE every time I try to 
set my default JRE when I have launched Eclipse with J9.  Note that there are no JRE's detected when 
you launch with J9.

When I debugged this, the NPE happened on line 439.  The local variable 
oldDefault was null.

!ENTRY org.eclipse.ui 4 4 Jun 10, 2002 16:02:22.876
!MESSAGE 
Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jun 10, 2002 
16:02:22.876
!MESSAGE java.lang.NullPointerException
!STACK 
0
java.lang.NullPointerException

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   
java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   
java/lang/NullPointerException.&lt;init&gt;(Ljava/lang/String;)V
   
org/eclipse/jdt/internal/debug/ui/launcher/VMPreferencePage.commitVMInstalls()V
   
org/eclipse/jdt/internal/debug/ui/launcher/VMPreferencePage.performOk()Z
   
org/eclipse/jface/preference/PreferenceDialog.okPressed()V
   
org/eclipse/jface/preference/PreferenceDialog.buttonPressed(I)V
   
org/eclipse/ui/internal/dialogs/WorkbenchPreferenceDialog.buttonPressed(I)V
   
org/eclipse/jface/dialogs/Dialog$1.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V
 
  
org/eclipse/swt/widgets/TypedListener.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
 
  org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   
org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   
org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   
org/eclipse/swt/widgets/Display.readAndDispatch()Z
   
org/eclipse/jface/window/Window.runEventLoop(Lorg/eclipse/swt/widgets/Shell;)V
   
org/eclipse/jface/window/Window.open()I
   
org/eclipse/ui/internal/OpenPreferencesAction.run()V
   
org/eclipse/jface/action/Action.runWithEvent(Lorg/eclipse/swt/widgets/Event;)V
   
org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection(Lorg/eclipse/swt/widgets/Event;)V
 
  
org/eclipse/jface/action/ActionContributionItem.handleWidgetEvent(Lorg/eclipse/swt/widgets/Event;)V
 
  
org/eclipse/jface/action/ActionContributionItem.access$0(Lorg/eclipse/jface/action/ActionContributionItem;Lorg/eclipse/swt/widgets/Event;)V
 
  
org/eclipse/jface/action/ActionContributionItem$ActionListener.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
 
  org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   
org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   
org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   
org/eclipse/swt/widgets/Display.readAndDispatch()Z
   
org/eclipse/ui/internal/Workbench.runEventLoop()V
   
org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   
org/eclipse/core/internal/boot/InternalBootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
 
  
org/eclipse/core/boot/BootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
 
  
java/lang/reflect/AccessibleObject.invokeL(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 
  
java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 
  org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;)Ljava/lang/Object;
   
org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;
   
org/eclipse/core/launcher/Main.main([Ljava/lang/String;)V
NOTE:  This is a problem because I was launching Eclipse with J9, but I did not have the J9 Launching 
plugin.

To reproduce this test case, get a clean install of Eclipse and launch it with J9 (do 
not include the J9 launching plugin).  Hit the preferences page for installed vms.  There should be 
no vms in the list.  Add one and hit ok.
Marking as F3 candidate.
Fixed. 
Please verify.
Verified</WithStack>
    <WithOutStack>Build: 20020607
J9 VM 20020531, IVE 20020606, JCLMax 20020606

I get a NPE every time I try to 
set my default JRE when I have launched Eclipse with J9.  Note that there are no JRE's detected when 
you launch with J9.

When I debugged this, the NPE happened on line 439.  The local variable 
oldDefault was null.

!ENTRY org.eclipse.ui 4 4 Jun 10, 2002 16:02:22.876
!MESSAGE 
Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jun 10, 2002 
16:02:22.876
!MESSAGE java.lang.NullPointerException
!STACK 
0
java.lang.NullPointerException

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   
java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   
java/lang/NullPointerException.&lt;init&gt;(Ljava/lang/String;)V
   
org/eclipse/jdt/internal/debug/ui/launcher/VMPreferencePage.commitVMInstalls()V
   
org/eclipse/jdt/internal/debug/ui/launcher/VMPreferencePage.performOk()Z
   
org/eclipse/jface/preference/PreferenceDialog.okPressed()V
   
org/eclipse/jface/preference/PreferenceDialog.buttonPressed(I)V
   
org/eclipse/ui/internal/dialogs/WorkbenchPreferenceDialog.buttonPressed(I)V
   
org/eclipse/jface/dialogs/Dialog$1.widgetSelected(Lorg/eclipse/swt/events/SelectionEvent;)V
 
  
org/eclipse/swt/widgets/TypedListener.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
 
  org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   
org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   
org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   
org/eclipse/swt/widgets/Display.readAndDispatch()Z
   
org/eclipse/jface/window/Window.runEventLoop(Lorg/eclipse/swt/widgets/Shell;)V
   
org/eclipse/jface/window/Window.open()I
   
org/eclipse/ui/internal/OpenPreferencesAction.run()V
   
org/eclipse/jface/action/Action.runWithEvent(Lorg/eclipse/swt/widgets/Event;)V
   
org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection(Lorg/eclipse/swt/widgets/Event;)V
 
  
org/eclipse/jface/action/ActionContributionItem.handleWidgetEvent(Lorg/eclipse/swt/widgets/Event;)V
 
  
org/eclipse/jface/action/ActionContributionItem.access$0(Lorg/eclipse/jface/action/ActionContributionItem;Lorg/eclipse/swt/widgets/Event;)V
 
  
org/eclipse/jface/action/ActionContributionItem$ActionListener.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
 
  org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   
org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   
org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   
org/eclipse/swt/widgets/Display.readAndDispatch()Z
   
org/eclipse/ui/internal/Workbench.runEventLoop()V
   
org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   
org/eclipse/core/internal/boot/InternalBootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
 
  
org/eclipse/core/boot/BootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
 
  
java/lang/reflect/AccessibleObject.invokeL(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 
  
java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
 
  org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;)Ljava/lang/Object;
   
org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;
   
org/eclipse/core/launcher/Main.main([Ljava/lang/String;)V
NOTE:  This is a problem because I was launching Eclipse with J9, but I did not have the J9 Launching 
plugin.

To reproduce this test case, get a clean install of Eclipse and launch it with J9 (do 
not include the J9 launching plugin).  Hit the preferences page for installed vms.  There should be 
no vms in the list.  Add one and hit ok.
Marking as F3 candidate.
Fixed. 
Please verify.
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19848" />
    <CreationDate amount="2002-06-10 17:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>Action multiple set contributions lost when one action set removed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="496" end="930" />
        <code>public IContributionItem find(String id) {
	IContributionItem item = parentMgr.find(id);
	if (item instanceof SubContributionItem)
		// Return the item passed to us, not the wrapper.
		item = unwrap(item);
		
	if (item instanceof IMenuManager) {
		IMenuManager menu = (IMenuManager)item;
		if (menu instanceof SubMenuManager)
			menu = (IMenuManager) ((SubMenuManager)menu).getParent
();
		item = getWrapper(menu);
	}

	return item;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>1) Open resource perspective</Line>
          <Line>2) Window&gt;Customize Perspective</Line>
          <Line>3) Turn on Java Debug, OK</Line>
          <Line>4) Look at the contents of the run menu</Line>
          <Line>5) Window&gt;Customize Perspective</Line>
          <Line>6) Turn on Debug, Launch, OK</Line>
          <Line>7) Look at the contents of the run menu</Line>
          <Line>8) Window&gt;Customize Perspective</Line>
          <Line>9) Turn off Java Debug, OK</Line>
          <Line>10) Look at the contents of the run menu, all action set contributions are gone.</Line>
          <Line>In SubMenuManager find, in the case of an ImenuManager, we need to remove any</Line>
          <Line>wrapper before wrapping it ourselves.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20020610

1) Open resource perspective
2) Window&gt;Customize Perspective
3) Turn on Java Debug, OK
4) Look at the contents of the run menu
5) Window&gt;Customize Perspective
6) Turn on Debug, Launch, OK
7) Look at the contents of the run menu
8) Window&gt;Customize Perspective
9) Turn off Java Debug, OK
10) Look at the contents of the run menu, all action set contributions are gone.
In SubMenuManager find, in the case of an ImenuManager, we need to remove any 
wrapper before wrapping it ourselves.

public IContributionItem find(String id) {
	IContributionItem item = parentMgr.find(id);
	if (item instanceof SubContributionItem)
		// Return the item passed to us, not the wrapper.
		item = unwrap(item);
		
	if (item instanceof IMenuManager) {
		IMenuManager menu = (IMenuManager)item;
		if (menu instanceof SubMenuManager)
			menu = (IMenuManager) ((SubMenuManager)menu).getParent
();
		item = getWrapper(menu);
	}

	return item;
}

This appears to also fix 18597


Checked with Eduardo, Released
Verified in F3</WithStack>
    <WithOutStack>20020610

1) Open resource perspective
2) Window&gt;Customize Perspective
3) Turn on Java Debug, OK
4) Look at the contents of the run menu
5) Window&gt;Customize Perspective
6) Turn on Debug, Launch, OK
7) Look at the contents of the run menu
8) Window&gt;Customize Perspective
9) Turn off Java Debug, OK
10) Look at the contents of the run menu, all action set contributions are gone.
In SubMenuManager find, in the case of an ImenuManager, we need to remove any 
wrapper before wrapping it ourselves.

public IContributionItem find(String id) {
	IContributionItem item = parentMgr.find(id);
	if (item instanceof SubContributionItem)
		// Return the item passed to us, not the wrapper.
		item = unwrap(item);
		
	if (item instanceof IMenuManager) {
		IMenuManager menu = (IMenuManager)item;
		if (menu instanceof SubMenuManager)
			menu = (IMenuManager) ((SubMenuManager)menu).getParent
();
		item = getWrapper(menu);
	}

	return item;
}

This appears to also fix 18597


Checked with Eduardo, Released
Verified in F3</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19849" />
    <CreationDate amount="2002-06-10 17:19:00 -0400" />
    <DupId amount="17462" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>IllegalArgumentException thrown when automatically changing to Debug perspective</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437331255065">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable
(java.lang.IllegalArgumentException: Argument not valid)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:1887)</Frame>
          <Frame depth="1">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:96)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1504)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1292)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)</Frame>
          <Frame depth="6">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="7">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="8">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="9">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="10">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="11">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="12">org.eclipse.core.launcher.Main.basicRun(Main.java:244)</Frame>
          <Frame depth="13">org.eclipse.core.launcher.Main.run(Main.java:693)</Frame>
          <Frame depth="14">org.eclipse.core.launcher.Main.main(Main.java:526)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437331255065">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>Argument not valid</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:1873)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:1819)</Frame>
          <Frame depth="2">org.eclipse.jface.text.DocumentAdapter.getLine(DocumentAdapter.java:87)</Frame>
          <Frame depth="3">org.eclipse.swt.custom.WrappedContent.getLine(WrappedContent.java:88)</Frame>
          <Frame depth="4">org.eclipse.swt.custom.StyledText.wordWrapResize(StyledText.java:7312)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.StyledText.handleResize(StyledText.java:4710)</Frame>
          <Frame depth="6">org.eclipse.swt.custom.StyledText$14.handleEvent(StyledText.java:4367)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:846)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Control.WM_SIZE(Control.java:3773)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Scrollable.WM_SIZE(Scrollable.java:302)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:692)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Control.windowProc(Control.java:2718)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)</Frame>
          <Frame depth="15">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="16">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)</Frame>
          <Frame depth="20">org.eclipse.swt.internal.win32.OS.EndDeferWindowPos(Native Method)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:706)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Control.windowProc(Control.java:2718)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)</Frame>
          <Frame depth="24">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="25">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)</Frame>
          <Frame depth="29">org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Control.setBounds(Control.java:1741)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Control.setBounds(Control.java:1726)</Frame>
          <Frame depth="32">org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:95)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:691)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Control.windowProc(Control.java:2718)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)</Frame>
          <Frame depth="36">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="37">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)</Frame>
          <Frame depth="41">org.eclipse.swt.internal.win32.OS.EndDeferWindowPos(Native Method)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:706)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Control.windowProc(Control.java:2718)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)</Frame>
          <Frame depth="45">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="46">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)</Frame>
          <Frame depth="50">org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Control.setBounds(Control.java:1741)</Frame>
          <Frame depth="52">org.eclipse.swt.widgets.Control.setBounds(Control.java:1726)</Frame>
          <Frame depth="53">org.eclipse.swt.widgets.Control.setBounds(Control.java:1775)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.LayoutPart.setBounds(LayoutPart.java:202)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.PartTabFolder.setControlSize(PartTabFolder.java:828)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.PartTabFolder.access$5(PartTabFolder.java:820)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.PartTabFolder$3.handleEvent(PartTabFolder.java:201)</Frame>
          <Frame depth="58">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:846)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Control.WM_SIZE(Control.java:3773)</Frame>
          <Frame depth="62">org.eclipse.swt.widgets.Scrollable.WM_SIZE(Scrollable.java:302)</Frame>
          <Frame depth="63">org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:692)</Frame>
          <Frame depth="64">org.eclipse.swt.widgets.Control.windowProc(Control.java:2718)</Frame>
          <Frame depth="65">org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)</Frame>
          <Frame depth="66">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="67">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)</Frame>
          <Frame depth="68">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)</Frame>
          <Frame depth="69">org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)</Frame>
          <Frame depth="70">org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)</Frame>
          <Frame depth="71">org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)</Frame>
          <Frame depth="72">org.eclipse.swt.widgets.Control.setBounds(Control.java:1741)</Frame>
          <Frame depth="73">org.eclipse.swt.widgets.Control.setBounds(Control.java:1726)</Frame>
          <Frame depth="74">org.eclipse.swt.widgets.Control.setBounds(Control.java:1775)</Frame>
          <Frame depth="75">org.eclipse.ui.internal.PartTabFolder.setBounds(PartTabFolder.java:814)</Frame>
          <Frame depth="76">org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:162)</Frame>
          <Frame depth="77">org.eclipse.ui.internal.LayoutTreeNode.setBounds(LayoutTreeNode.java:292)</Frame>
          <Frame depth="78">org.eclipse.ui.internal.PartSashContainer.resizeSashes(PartSashContainer.java:421)</Frame>
          <Frame depth="79">org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:185)</Frame>
          <Frame depth="80">org.eclipse.ui.internal.PerspectivePresentation.activate(PerspectivePresentation.java:94)</Frame>
          <Frame depth="81">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:656)</Frame>
          <Frame depth="82">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2108)</Frame>
          <Frame depth="83">org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:532)</Frame>
          <Frame depth="84">org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:520)</Frame>
          <Frame depth="85">org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2170)</Frame>
          <Frame depth="86">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)</Frame>
          <Frame depth="87">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2168)</Frame>
          <Frame depth="88">org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1259)</Frame>
          <Frame depth="89">org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$1.run(PerspectiveManager.java:132)</Frame>
          <Frame depth="90">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29)</Frame>
          <Frame depth="91">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:93)</Frame>
          <Frame depth="92">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1504)</Frame>
          <Frame depth="93">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1292)</Frame>
          <Frame depth="94">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)</Frame>
          <Frame depth="95">org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)</Frame>
          <Frame depth="96">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="97">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="98">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="99">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="100">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="101">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="102">org.eclipse.core.launcher.Main.basicRun(Main.java:244)</Frame>
          <Frame depth="103">org.eclipse.core.launcher.Main.run(Main.java:693)</Frame>
          <Frame depth="104">org.eclipse.core.launcher.Main.main(Main.java:526)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build F2. I got the following trace from .metadata/.log:

!ENTRY org.eclipse.ui 4 4 Jun 10, 2002 15:22:48.902
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jun 10, 2002 15:22:48.902
!MESSAGE Failed to execute runnable (java.lang.IllegalArgumentException:
Argument not valid)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.IllegalArgumentException: Argument not valid)
	at org.eclipse.swt.SWT.error(SWT.java:1887)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:96)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1504)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1292)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:244)
	at org.eclipse.core.launcher.Main.run(Main.java:693)
	at org.eclipse.core.launcher.Main.main(Main.java:526)
!ENTRY org.eclipse.ui 4 4 Jun 10, 2002 15:22:48.902
!MESSAGE 
*** Stack trace of contained exception ***
!ENTRY org.eclipse.ui 4 0 Jun 10, 2002 15:22:48.902
!MESSAGE Argument not valid
!STACK 0
java.lang.IllegalArgumentException: Argument not valid
	at org.eclipse.swt.SWT.error(SWT.java:1873)
	at org.eclipse.swt.SWT.error(SWT.java:1819)
	at org.eclipse.jface.text.DocumentAdapter.getLine(DocumentAdapter.java:87)
	at org.eclipse.swt.custom.WrappedContent.getLine(WrappedContent.java:88)
	at org.eclipse.swt.custom.StyledText.wordWrapResize(StyledText.java:7312)
	at org.eclipse.swt.custom.StyledText.handleResize(StyledText.java:4710)
	at org.eclipse.swt.custom.StyledText$14.handleEvent(StyledText.java:4367)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:846)
	at org.eclipse.swt.widgets.Control.WM_SIZE(Control.java:3773)
	at org.eclipse.swt.widgets.Scrollable.WM_SIZE(Scrollable.java:302)
	at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:692)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2718)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)
	at org.eclipse.swt.internal.win32.OS.EndDeferWindowPos(Native Method)
	at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:706)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2718)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)
	at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:1741)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:1726)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:95)
	at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:691)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2718)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)
	at org.eclipse.swt.internal.win32.OS.EndDeferWindowPos(Native Method)
	at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:706)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2718)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)
	at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:1741)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:1726)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:1775)
	at org.eclipse.ui.internal.LayoutPart.setBounds(LayoutPart.java:202)
	at org.eclipse.ui.internal.PartTabFolder.setControlSize(PartTabFolder.java:828)
	at org.eclipse.ui.internal.PartTabFolder.access$5(PartTabFolder.java:820)
	at org.eclipse.ui.internal.PartTabFolder$3.handleEvent(PartTabFolder.java:201)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:846)
	at org.eclipse.swt.widgets.Control.WM_SIZE(Control.java:3773)
	at org.eclipse.swt.widgets.Scrollable.WM_SIZE(Scrollable.java:302)
	at org.eclipse.swt.widgets.Composite.WM_SIZE(Composite.java:692)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2718)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)
	at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java:1214)
	at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java:70)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2730)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:1984)
	at org.eclipse.swt.internal.win32.OS.SetWindowPos(Native Method)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:1741)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:1726)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:1775)
	at org.eclipse.ui.internal.PartTabFolder.setBounds(PartTabFolder.java:814)
	at org.eclipse.ui.internal.LayoutTree.setBounds(LayoutTree.java:162)
	at org.eclipse.ui.internal.LayoutTreeNode.setBounds(LayoutTreeNode.java:292)
	at org.eclipse.ui.internal.PartSashContainer.resizeSashes(PartSashContainer.java:421)
	at
org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:185)
	at
org.eclipse.ui.internal.PerspectivePresentation.activate(PerspectivePresentation.java:94)
	at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:656)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2108)
	at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:532)
	at org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:520)
	at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2170)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2168)
	at org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1259)
	at
org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager$1.run(PerspectiveManager.java:132)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:29)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:93)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1504)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1292)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:244)
	at org.eclipse.core.launcher.Main.run(Main.java:693)
	at org.eclipse.core.launcher.Main.main(Main.java:526)
This is due to line wrapping in the debug console. This will no longer be 
supported in F3. I.e. wrapping is then switched off. Moving to debug for 
confirmation.
That's correct. We're implementing our own (variable-width) wrapping now.

*** This bug has been marked as a duplicate of 17462 ***</WithStack>
    <WithOutStack>Build F2. I got the following trace from .metadata/.log:

!ENTRY org.eclipse.ui 4 4 Jun 10, 2002 15:22:48.902
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jun 10, 2002 15:22:48.902
!MESSAGE Failed to execute runnable (java.lang.IllegalArgumentException:
Argument not valid)
!STACK 0
!ENTRY org.eclipse.ui 4 4 Jun 10, 2002 15:22:48.902
!MESSAGE 
*** Stack trace of contained exception ***
!ENTRY org.eclipse.ui 4 0 Jun 10, 2002 15:22:48.902
!MESSAGE Argument not valid
!STACK 0

This is due to line wrapping in the debug console. This will no longer be 
supported in F3. I.e. wrapping is then switched off. Moving to debug for 
confirmation.
That's correct. We're implementing our own (variable-width) wrapping now.

*** This bug has been marked as a duplicate of 17462 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19850" />
    <CreationDate amount="2002-06-10 17:27:00 -0400" />
    <DupId amount="14034" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Large string printed in Console overstrikes/disappears depending on length</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="186" end="817" />
        <code>public class LineWrap
{
	public static void main(String[] args)
	{
		 int i = 1000; // This value prints the line correctly
		// int i = 32768; // The End prints twice in the Console (at 
beginning and end of line)
		// int i = 65520; // This value overstrikes the "Begin" text; 
the End shows at the end of the line correctly
		// int i = 65526; // This printed line in the Console will 
disappear when the program finishes
		
		int j;
		char[] charArray = new char[i];
		for (j = 0; j &lt; (charArray.length);)
		{ 
			charArray[j++] = '0';
		}

		String s = new String(charArray); 
		System.out.println("Begin " + s + " End");
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1. Create a new class with the code above.</Line>
          <Line>2. Comment/uncomment the various "i=..." lines and then run the class.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>F2 (WSWB F2) on Win 2000

If you print large strings to the Console window, strange behavior, such as 
overstriking and disappearing lines, will occur.


STEPS TO REPRODUCE:
Test class:
public class LineWrap
{
	public static void main(String[] args)
	{
		 int i = 1000; // This value prints the line correctly
		// int i = 32768; // The End prints twice in the Console (at 
beginning and end of line)
		// int i = 65520; // This value overstrikes the "Begin" text; 
the End shows at the end of the line correctly
		// int i = 65526; // This printed line in the Console will 
disappear when the program finishes
		
		int j;
		char[] charArray = new char[i];
		for (j = 0; j &lt; (charArray.length);)
		{ 
			charArray[j++] = '0';
		}

		String s = new String(charArray); 
		System.out.println("Begin " + s + " End");
	}
}
1. Create a new class with the code above.
2. Comment/uncomment the various "i=..." lines and then run the class. 


Logged as HD100118.
moving to Debug - a good test case for the new wrapping behaviour.
Ran program using console wrapping (fixed width 80). There were no problems.

The problems specified exist when no line wrapping used due to SWT limitations. 
Moving to SWT for future consideration or disposal.
(Sorry, these may not be SWT limitiations - I think they are limitiations in 
the actual platform widgets).


*** This bug has been marked as a duplicate of 14034 ***</WithStack>
    <WithOutStack>F2 (WSWB F2) on Win 2000

If you print large strings to the Console window, strange behavior, such as 
overstriking and disappearing lines, will occur.


STEPS TO REPRODUCE:
Test class:
public class LineWrap
{
	public static void main(String[] args)
	{
		 int i = 1000; // This value prints the line correctly
		// int i = 32768; // The End prints twice in the Console (at 
beginning and end of line)
		// int i = 65520; // This value overstrikes the "Begin" text; 
the End shows at the end of the line correctly
		// int i = 65526; // This printed line in the Console will 
disappear when the program finishes
		
		int j;
		char[] charArray = new char[i];
		for (j = 0; j &lt; (charArray.length);)
		{ 
			charArray[j++] = '0';
		}

		String s = new String(charArray); 
		System.out.println("Begin " + s + " End");
	}
}
1. Create a new class with the code above.
2. Comment/uncomment the various "i=..." lines and then run the class. 


Logged as HD100118.
moving to Debug - a good test case for the new wrapping behaviour.
Ran program using console wrapping (fixed width 80). There were no problems.

The problems specified exist when no line wrapping used due to SWT limitations. 
Moving to SWT for future consideration or disposal.
(Sorry, these may not be SWT limitiations - I think they are limitiations in 
the actual platform widgets).


*** This bug has been marked as a duplicate of 14034 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19851" />
    <CreationDate amount="2002-06-10 17:28:00 -0400" />
    <DupId amount="18708" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>IllegalArgumentException in refactor-extract method</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="functioncall">
        <location start="2853" end="2931" />
        <code>org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3531" end="3607" />
        <code>org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="class">
        <location start="3794" end="3916" />
        <code>public class Foo {

	protected void primExecute() {
		this.toString();
	}

	if (image != null) {
		Object loc = null;
	}
}</code>
      </source_code>
      <source_code type="class">
        <location start="4931" end="5155" />
        <code>public class Foo {

        protected void primExecute() {
                test();
        }

	private String test() {
		return this.toString();
	}

        if (image != null) {
                Object loc = null;
        }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build F2

I selected three lines of code in a .java file and chose 'Refactor'-&gt;'Extract 
Method'. The following IllegalArgumentException was recorded in my .log file:

java.lang.IllegalArgumentException

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   org/eclipse/jdt/core/dom/ASTNode.setSourceRange(II)V
   org/eclipse/jdt/core/dom/ASTConverter.checkAndAddMultipleFieldDeclaration
([Lorg/eclipse/jdt/internal/compiler/ast/FieldDeclaration;ILjava/util/List;)V
   org/eclipse/jdt/core/dom/ASTConverter.buildBodyDeclarations
(Lorg/eclipse/jdt/internal/compiler/ast/TypeDeclaration;Lorg/eclipse/jdt/core/d
om/TypeDeclaration;)V
   org/eclipse/jdt/core/dom/ASTConverter.convert
(Lorg/eclipse/jdt/internal/compiler/ast/TypeDeclaration;)
Lorg/eclipse/jdt/core/dom/TypeDeclaration;
   org/eclipse/jdt/core/dom/ASTConverter.convert
(Lorg/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration;[C)
Lorg/eclipse/jdt/core/dom/CompilationUnit;
   org/eclipse/jdt/core/dom/AST.parseCompilationUnit
(Lorg/eclipse/jdt/core/ICompilationUnit;Z)
Lorg/eclipse/jdt/core/dom/CompilationUnit;
   
org/eclipse/jdt/internal/corext/refactoring/code/ExtractMethodRefactoring.check
Activation(Lorg/eclipse/core/runtime/IProgressMonitor;)
Lorg/eclipse/jdt/internal/corext/refactoring/base/RefactoringStatus;
   org/eclipse/jdt/internal/ui/refactoring/actions/RefactoringStarter.activate
(Lorg/eclipse/jdt/internal/corext/refactoring/base/Refactoring;Lorg/eclipse/jdt
/internal/ui/refactoring/RefactoringWizard;Ljava/lang/String;Z)
Ljava/lang/Object;
   org/eclipse/jdt/ui/actions/ExtractMethodAction.run
(Lorg/eclipse/jface/text/ITextSelection;)V
   org/eclipse/jdt/ui/actions/SelectionDispatchAction.dispatchRun
(Lorg/eclipse/jface/viewers/ISelection;)V
   org/eclipse/jdt/ui/actions/SelectionDispatchAction.run()V
   org/eclipse/jface/action/Action.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/ui/actions/RetargetAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/ui/internal/WWinPluginAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.access$0
(Lorg/eclipse/jface/action/ActionContributionItem;Lorg/eclipse/swt/widgets/Even
t;)V
   org/eclipse/jface/action/ActionContributionItem$ActionListener.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   java/lang/reflect/AccessibleObject.invokeL(Ljava/lang/Object;
[Ljava/lang/Object;)Ljava/lang/Object;
   java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)
Ljava/lang/Object;
   org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/launcher/Main.main([Ljava/lang/String;)V

I was able to repeat the problem with a stripped down version of the class.

Enter the following class into a Java editor:

public class Foo {

	protected void primExecute() {
		this.toString();
	}

	if (image != null) {
		Object loc = null;
	}
}

Select the 'this.toString()' line.
Choose 'Refactor'-&gt;'Extract Method'
i think the problem is on our (refactoring) side
this class is so messed up that cu.isStructureKnown() returns false
we should guard our code against it
more actions fail:
OrganizeImport
SurroundWithTryCatch
Rename (when you select sth in the file)
SelfEncapsulateField (add a field, select and invoke the action)

i suggest moving to the ui land and putting guards in the  ui actions
I don't agree with this. As we can see from the walkback there is an old AST 
which somehow can't be converted into a new AST. Even if the CU is totally 
broken creating an AST for it should not result in an IllegalArgumentException. 
What I would expect to get is an AST containing only a CompilationUnitNode.
Pls investigate - internal calls should never result in invalid argument 
exceptions.
I cannot reproduce in latest. This seems to be a duplicate of bug 18708. I got 
the following cu after applying refact -&gt; extract method on the selected line:

public class Foo {

        protected void primExecute() {
                test();
        }

	private String test() {
		return this.toString();
	}

        if (image != null) {
                Object loc = null;
        }
}
I could reproduce in F2, but not in latest. So this is a duplicate of bug 18708.

*** This bug has been marked as a duplicate of 18708 ***</WithStack>
    <WithOutStack>Build F2

I selected three lines of code in a .java file and chose 'Refactor'-&gt;'Extract 
Method'. The following IllegalArgumentException was recorded in my .log file:

java.lang.IllegalArgumentException

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   org/eclipse/jdt/core/dom/ASTNode.setSourceRange(II)V
   org/eclipse/jdt/core/dom/ASTConverter.checkAndAddMultipleFieldDeclaration
([Lorg/eclipse/jdt/internal/compiler/ast/FieldDeclaration;ILjava/util/List;)V
   org/eclipse/jdt/core/dom/ASTConverter.buildBodyDeclarations
(Lorg/eclipse/jdt/internal/compiler/ast/TypeDeclaration;Lorg/eclipse/jdt/core/d
om/TypeDeclaration;)V
   org/eclipse/jdt/core/dom/ASTConverter.convert
(Lorg/eclipse/jdt/internal/compiler/ast/TypeDeclaration;)
Lorg/eclipse/jdt/core/dom/TypeDeclaration;
   org/eclipse/jdt/core/dom/ASTConverter.convert
(Lorg/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration;[C)
Lorg/eclipse/jdt/core/dom/CompilationUnit;
   org/eclipse/jdt/core/dom/AST.parseCompilationUnit
(Lorg/eclipse/jdt/core/ICompilationUnit;Z)
Lorg/eclipse/jdt/core/dom/CompilationUnit;
   
org/eclipse/jdt/internal/corext/refactoring/code/ExtractMethodRefactoring.check
Activation(Lorg/eclipse/core/runtime/IProgressMonitor;)
Lorg/eclipse/jdt/internal/corext/refactoring/base/RefactoringStatus;
   org/eclipse/jdt/internal/ui/refactoring/actions/RefactoringStarter.activate
(Lorg/eclipse/jdt/internal/corext/refactoring/base/Refactoring;Lorg/eclipse/jdt
/internal/ui/refactoring/RefactoringWizard;Ljava/lang/String;Z)
Ljava/lang/Object;
   org/eclipse/jdt/ui/actions/ExtractMethodAction.run
(Lorg/eclipse/jface/text/ITextSelection;)V
   org/eclipse/jdt/ui/actions/SelectionDispatchAction.dispatchRun
(Lorg/eclipse/jface/viewers/ISelection;)V
   org/eclipse/jdt/ui/actions/SelectionDispatchAction.run()V
   org/eclipse/jface/action/Action.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/ui/actions/RetargetAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/ui/internal/WWinPluginAction.runWithEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetSelection
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.handleWidgetEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/jface/action/ActionContributionItem.access$0
(Lorg/eclipse/jface/action/ActionContributionItem;Lorg/eclipse/swt/widgets/Even
t;)V
   org/eclipse/jface/action/ActionContributionItem$ActionListener.handleEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent
(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Display.runDeferredEvents()Z
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run
(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;
[Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Object;
   java/lang/reflect/AccessibleObject.invokeL(Ljava/lang/Object;
[Ljava/lang/Object;)Ljava/lang/Object;
   java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)
Ljava/lang/Object;
   org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;)
Ljava/lang/Object;
   org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/launcher/Main.main([Ljava/lang/String;)V

I was able to repeat the problem with a stripped down version of the class.

Enter the following class into a Java editor:

public class Foo {

	protected void primExecute() {
		this.toString();
	}

	if (image != null) {
		Object loc = null;
	}
}

Select the 'this.toString()' line.
Choose 'Refactor'-&gt;'Extract Method'
i think the problem is on our (refactoring) side
this class is so messed up that cu.isStructureKnown() returns false
we should guard our code against it
more actions fail:
OrganizeImport
SurroundWithTryCatch
Rename (when you select sth in the file)
SelfEncapsulateField (add a field, select and invoke the action)

i suggest moving to the ui land and putting guards in the  ui actions
I don't agree with this. As we can see from the walkback there is an old AST 
which somehow can't be converted into a new AST. Even if the CU is totally 
broken creating an AST for it should not result in an IllegalArgumentException. 
What I would expect to get is an AST containing only a CompilationUnitNode.
Pls investigate - internal calls should never result in invalid argument 
exceptions.
I cannot reproduce in latest. This seems to be a duplicate of bug 18708. I got 
the following cu after applying refact -&gt; extract method on the selected line:

public class Foo {

        protected void primExecute() {
                test();
        }

	private String test() {
		return this.toString();
	}

        if (image != null) {
                Object loc = null;
        }
}
I could reproduce in F2, but not in latest. So this is a duplicate of bug 18708.

*** This bug has been marked as a duplicate of 18708 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19852" />
    <CreationDate amount="2002-06-10 17:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>F1 enabling of PDE UI</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Do a pass over major UI elements and register F1 context identifiers.
Following attachements add F1 to pde.runtime plugin, and some contexts to 
pde.ui pluigin.  In this plugin the contexts were added to preference pages, 
plugin view and its context actions, preference pages, and all global actions 
contributed through plugin.xml.

There was not enough time to cover all ui elements before F3 build.
Created attachment 1367
patch for org.eclipse.pde.runtime plugin
Created attachment 1368
patch for org.eclipse.pde.ui plugin
Created attachment 1369
patch for org.eclipse.pde.doc.user plugin
Dejan, you can reassign back when you need help with doing the rest of F1 
enablement.
Wassim, work with Konrad on enabling F1 in PDE.
Fixed.</WithStack>
    <WithOutStack>Do a pass over major UI elements and register F1 context identifiers.
Following attachements add F1 to pde.runtime plugin, and some contexts to 
pde.ui pluigin.  In this plugin the contexts were added to preference pages, 
plugin view and its context actions, preference pages, and all global actions 
contributed through plugin.xml.

There was not enough time to cover all ui elements before F3 build.
Created attachment 1367
patch for org.eclipse.pde.runtime plugin
Created attachment 1368
patch for org.eclipse.pde.ui plugin
Created attachment 1369
patch for org.eclipse.pde.doc.user plugin
Dejan, you can reassign back when you need help with doing the rest of F1 
enablement.
Wassim, work with Konrad on enabling F1 in PDE.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19853" />
    <CreationDate amount="2002-06-10 18:04:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Should clear out decorators when RepositoryProvider.deconfigure()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="2008" end="2033" />
        <code>: decorate(resource);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- when the provider is deconfigured, it informs the decorator</Line>
          <Line>- the decorator adds the project to a field 'deconfiguredProjects'</Line>
          <Line>- this field is checked in 'resourceChanged', and if the project matches, the</Line>
          <Line>decorator for the project and all its resources are refreshed, and the project</Line>
          <Line>is removed from the 'deconfiguredProjects'.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>See also 19751.

To make this less likely, we should just stop decorating when the 
RepositoryProvider is deconfigured.

At present we do this only partially:

- when the provider is deconfigured, it informs the decorator
- the decorator adds the project to a field 'deconfiguredProjects'
- this field is checked in 'resourceChanged', and if the project matches, the 
decorator for the project and all its resources are refreshed, and the project 
is removed from the 'deconfiguredProjects'.

This works ok for the project, but we're not handling deltas on resources in a 
deconfigured project.  There are three places to consider:

(a): We may still have resources in the queue to be decorated 
('decoratorNeedsUpdating' ) when the project is deconfigured. Since this list 
is processed in the background, it increases the changes of the persistent 
property being fetched (for decorating) at the same time its being removed (for 
deconfiguring).

(b): We may get requests from the UI for decorating resources in projects being 
deconfigured.  However, I don't think this can happen, since the deconfiguring 
is almost always occuring the UI thread (e.g. picked "Disconnect" in the team 
menu).

(c): We may be processing deltas on resources in projects being deconfigured.  
See (b) below.

What I think we need to do:

1 - To fix (a), on deconfigure, remove all resources 
from 'decoratorNeedsUpdating' whose project is the deconfigured project

2- For (c), not sure if needed: in 'resourceChanged', if the resource is in a 
deconfigured project, remove its decorator from the cache and don't add it to 
the list of resources to be decorated (we will de-decorate it when the project 
delta comes in).
The reason not sure if needed is because I don't think we can get deltas on 
resources in a project which is being deconfigured, since they would've occured 
in a different runnable.
			CVSDecoration decoration = 
				CVSDecorator.getActiveCVSDecorator
().isMemberDeactivatedProject(resource)
				? null
				: decorate(resource);
			

Fixed and verified by Kevin</WithStack>
    <WithOutStack>See also 19751.

To make this less likely, we should just stop decorating when the 
RepositoryProvider is deconfigured.

At present we do this only partially:

- when the provider is deconfigured, it informs the decorator
- the decorator adds the project to a field 'deconfiguredProjects'
- this field is checked in 'resourceChanged', and if the project matches, the 
decorator for the project and all its resources are refreshed, and the project 
is removed from the 'deconfiguredProjects'.

This works ok for the project, but we're not handling deltas on resources in a 
deconfigured project.  There are three places to consider:

(a): We may still have resources in the queue to be decorated 
('decoratorNeedsUpdating' ) when the project is deconfigured. Since this list 
is processed in the background, it increases the changes of the persistent 
property being fetched (for decorating) at the same time its being removed (for 
deconfiguring).

(b): We may get requests from the UI for decorating resources in projects being 
deconfigured.  However, I don't think this can happen, since the deconfiguring 
is almost always occuring the UI thread (e.g. picked "Disconnect" in the team 
menu).

(c): We may be processing deltas on resources in projects being deconfigured.  
See (b) below.

What I think we need to do:

1 - To fix (a), on deconfigure, remove all resources 
from 'decoratorNeedsUpdating' whose project is the deconfigured project

2- For (c), not sure if needed: in 'resourceChanged', if the resource is in a 
deconfigured project, remove its decorator from the cache and don't add it to 
the list of resources to be decorated (we will de-decorate it when the project 
delta comes in).
The reason not sure if needed is because I don't think we can get deltas on 
resources in a project which is being deconfigured, since they would've occured 
in a different runnable.
			CVSDecoration decoration = 
				CVSDecorator.getActiveCVSDecorator
().isMemberDeactivatedProject(resource)
				? null
				: decorate(resource);
			

Fixed and verified by Kevin</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19854" />
    <CreationDate amount="2002-06-10 18:19:00 -0400" />
    <DupId amount="17453" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Deleting project does not delete associated launch configuration</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build F2

Deleting the project does not delete associated configurations or give
warnings about configurations that point to deleted projects
This is the same issue as 17453. A launch config can be viewed as a "batch 
file" that describes how to launch an application. Currently, we do no auto-
updating of launch configs as related types are renamed/deleted/moved. This is 
a refactoring issue to be dealt with, post 2.0.

*** This bug has been marked as a duplicate of 17453 ***</WithStack>
    <WithOutStack>Build F2

Deleting the project does not delete associated configurations or give
warnings about configurations that point to deleted projects
This is the same issue as 17453. A launch config can be viewed as a "batch 
file" that describes how to launch an application. Currently, we do no auto-
updating of launch configs as related types are renamed/deleted/moved. This is 
a refactoring issue to be dealt with, post 2.0.

*** This bug has been marked as a duplicate of 17453 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19855" />
    <CreationDate amount="2002-06-10 18:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Test class not found in project [JUnit]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="functiondef">
        <location start="973" end="1068" />
        <code>double[] apply(double[] vectorIn, Space space) {
			assert false : "nyi";
			return null;
		}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1231" end="1278" />
        <code>static void fail() {
		assert false: "nyi";
	}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1586" end="1743" />
        <code>static OperatorClass classLinear = new OperatorClass() {

		double[] apply(double[] vectorIn, Space space) {
			assert false : "nyi";
			return null;
		}
	}</code>
      </source_code>
      <source_code type="assignment">
        <location start="1837" end="1905" />
        <code>static OperatorClass classLinear = new StaticLinearOperatorClass();</code>
      </source_code>
      <source_code type="class">
        <location start="1906" end="2047" />
        <code>static class StaticLinearOperatorClass {

		double[] apply(double[] vectorIn, Space space) {
			assert false : "nyi";
			return null;
		}
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Is this a bug or am I missing something?

I have a class which the JUnit Failure Trace window seems unable to GoTo,
instead bringing up an error dialog which reads, "Test class not found in project".

Steps:
[1] Run a JUnit launch configuration which has failures.
[2] In the failures tab, select "test_mumble". Right-menu/GoTo has the expected,
correct behavior.
[3] In the Failure Trace window below, I see the stack trace.  I can double
click or right-menu/GoTo all but one of the line in this window that correspond
to my code, and be taken to the appropriate code position.

For this trace, however, I cannot double click or use right-menu/GoTo for the
method which raised an assert exception.  If I try, I get the "Test class not
found in project" error.  I should point out that the assert is not being raised
in test code, but in an unimplemented stub.

Possibly relevant:
The actual assert is in a method of a static inner class, said method looking
roughly like

		double[] apply(double[] vectorIn, Space space) {
			assert false : "nyi";
			return null;
		}
Further testing:

In the code just a level up from the stub which asserts false, if I insert a
call to a static method of the outer class whose form looks like,

	static void fail() {
		assert false: "nyi";
	}

then I can open the class to the point at which the assert was raised.
Correction and further testing:

The assert was *not* simply in a static inner class.  Instead, the assert was
inside the method of an *anonymous* inner class which was being assigned to a
static member of the top level class.  A la


	static OperatorClass classLinear = new OperatorClass() {

		double[] apply(double[] vectorIn, Space space) {
			assert false : "nyi";
			return null;
		}
	}
If I change the assignemnt to something like the following, GoTo can find the
correct class:
	static OperatorClass classLinear = new StaticLinearOperatorClass();
	static class StaticLinearOperatorClass {

		double[] apply(double[] vectorIn, Space space) {
			assert false : "nyi";
			return null;
		}
	}

So it seems the problem is related to being able to go to anonymous classes, or
some subset of anonymous classes.

If it's possible to fix this one for 2.0, I would appreciate it.
Apparently can't find it when the class is a top-level non-public class which
trails a public class in the same compilation unit.
The class matching is done in a naive way by only matching the name in the 
trace against the name of compilation units. As a consequence local or 
anonymous classes will not be found. 
*** Bug 11035 has been marked as a duplicate of this bug. ***
not sure if this is a dupe...
Created attachment 3600
patch
released patch for RC1</WithStack>
    <WithOutStack>Is this a bug or am I missing something?

I have a class which the JUnit Failure Trace window seems unable to GoTo,
instead bringing up an error dialog which reads, "Test class not found in project".

Steps:
[1] Run a JUnit launch configuration which has failures.
[2] In the failures tab, select "test_mumble". Right-menu/GoTo has the expected,
correct behavior.
[3] In the Failure Trace window below, I see the stack trace.  I can double
click or right-menu/GoTo all but one of the line in this window that correspond
to my code, and be taken to the appropriate code position.

For this trace, however, I cannot double click or use right-menu/GoTo for the
method which raised an assert exception.  If I try, I get the "Test class not
found in project" error.  I should point out that the assert is not being raised
in test code, but in an unimplemented stub.

Possibly relevant:
The actual assert is in a method of a static inner class, said method looking
roughly like

		double[] apply(double[] vectorIn, Space space) {
			assert false : "nyi";
			return null;
		}
Further testing:

In the code just a level up from the stub which asserts false, if I insert a
call to a static method of the outer class whose form looks like,

	static void fail() {
		assert false: "nyi";
	}

then I can open the class to the point at which the assert was raised.
Correction and further testing:

The assert was *not* simply in a static inner class.  Instead, the assert was
inside the method of an *anonymous* inner class which was being assigned to a
static member of the top level class.  A la


	static OperatorClass classLinear = new OperatorClass() {

		double[] apply(double[] vectorIn, Space space) {
			assert false : "nyi";
			return null;
		}
	}
If I change the assignemnt to something like the following, GoTo can find the
correct class:
	static OperatorClass classLinear = new StaticLinearOperatorClass();
	static class StaticLinearOperatorClass {

		double[] apply(double[] vectorIn, Space space) {
			assert false : "nyi";
			return null;
		}
	}

So it seems the problem is related to being able to go to anonymous classes, or
some subset of anonymous classes.

If it's possible to fix this one for 2.0, I would appreciate it.
Apparently can't find it when the class is a top-level non-public class which
trails a public class in the same compilation unit.
The class matching is done in a naive way by only matching the name in the 
trace against the name of compilation units. As a consequence local or 
anonymous classes will not be found. 
*** Bug 11035 has been marked as a duplicate of this bug. ***
not sure if this is a dupe...
Created attachment 3600
patch
released patch for RC1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19856" />
    <CreationDate amount="2002-06-10 18:24:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Create a new launch configuration should always be an option in launch configuration wizard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Create a new configuration is greyed out if user has a configuration selected.
This can be confusing because the user must figure out to click the top 
level 'type' before the 'new' button allows the user to create a new 
configuration.
Deferred
True, "new" can also be enabled when a config is selected. It should do the 
same as when a config type is selected.
Fixed in LaunchConfigurationDialog.
Please verify (DarinW)
Verified.</WithStack>
    <WithOutStack>Create a new configuration is greyed out if user has a configuration selected.
This can be confusing because the user must figure out to click the top 
level 'type' before the 'new' button allows the user to create a new 
configuration.
Deferred
True, "new" can also be enabled when a config is selected. It should do the 
same as when a config type is selected.
Fixed in LaunchConfigurationDialog.
Please verify (DarinW)
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19857" />
    <CreationDate amount="2002-06-10 18:34:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Refactor - need two undos to completely undo method extraction [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build F2

If you use Refactor to extract a method, it requires two 'Undo' operations to 
undo the refactoring. The first Undo removes the call to the new method, and 
the second Undo removes the new method.

Refactor-&gt;Extract Method is a single operation, so it should only require a 
single Undo.
cannot be addressed for 2.0
Fixed in build &gt; 20020108</WithStack>
    <WithOutStack>Build F2

If you use Refactor to extract a method, it requires two 'Undo' operations to 
undo the refactoring. The first Undo removes the call to the new method, and 
the second Undo removes the new method.

Refactor-&gt;Extract Method is a single operation, so it should only require a 
single Undo.
cannot be addressed for 2.0
Fixed in build &gt; 20020108</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19858" />
    <CreationDate amount="2002-06-10 18:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Wizards] Create new project should have default right-hand for each left-hand when solitary</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When creating a new project via File|New|Project, there is
a list of categories is on the left and individual parts of
categories is on the right.  When there is only one part for
a category, it should be selected by default when the category
on the left is chosen.  (It's silly to choose Java then Java Project,
or Simple then Project.)  Perhaps the first of multiple should be
chosen as well, but the single is most important.
There are currently no plans to work on this feature</WithStack>
    <WithOutStack>When creating a new project via File|New|Project, there is
a list of categories is on the left and individual parts of
categories is on the right.  When there is only one part for
a category, it should be selected by default when the category
on the left is chosen.  (It's silly to choose Java then Java Project,
or Simple then Project.)  Perhaps the first of multiple should be
chosen as well, but the single is most important.
There are currently no plans to work on this feature</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19859" />
    <CreationDate amount="2002-06-10 19:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="other" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[JUnit] Socket connection error</Summery>
    <Patches amount="1">
      <Patch>
        <index>RemoteTestRunner.java</index>
        <original_file>RemoteTestRunner.java</original_file>
        <modified_file>RemoteTestRunner.java</modified_file>
        <Hunks>
          <hunk>if (fDebugMode)&#xD;
&#xD;
 			System.out.println("RemoteTestRunner: trying to</hunk>
          <hunk>exception= e;&#xD;
&#xD;
 			}&#xD;
&#xD;
 			try {&#xD;
&#xD;
-				Thread.currentThread().sleep(200);&#xD;
&#xD;
+				Thread.currentThread().sleep(2000);&#xD;
&#xD;
 			} catch(InterruptedException e) {&#xD;
&#xD;
 			}&#xD;
&#xD;
 		}</hunk>
        </Hunks>
      </Patch>
    </Patches>
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437331255081">
        <Exception>java.net.ConnectException</Exception>
        <Reason>Connection refused</Reason>
        <Frames>
          <Frame depth="0">java.net.PlainSocketImpl.socketConnect(Native Method)</Frame>
          <Frame depth="1">java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:295)</Frame>
          <Frame depth="2">java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:161)</Frame>
          <Frame depth="3">java.net.PlainSocketImpl.connect(PlainSocketImpl.java:148)</Frame>
          <Frame depth="4">java.net.Socket.connect(Socket.java:425)</Frame>
          <Frame depth="5">java.net.Socket.connect(Socket.java:375)</Frame>
          <Frame depth="6">java.net.Socket.&lt;init&gt;(Socket.java:290)</Frame>
          <Frame depth="7">java.net.Socket.&lt;init&gt;(Socket.java:118)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.connect(RemoteTestRunner.java:440)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:210)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:151)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437331255081">
        <Exception>java.net.ConnectException</Exception>
        <Reason>Connection refused</Reason>
        <Frames>
          <Frame depth="0">java.net.PlainSocketImpl.socketConnect(Native Method)</Frame>
          <Frame depth="1">java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:295)</Frame>
          <Frame depth="2">java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:161)</Frame>
          <Frame depth="3">java.net.PlainSocketImpl.connect(PlainSocketImpl.java:148)</Frame>
          <Frame depth="4">java.net.Socket.connect(Socket.java:425)</Frame>
          <Frame depth="5">java.net.Socket.connect(Socket.java:375)</Frame>
          <Frame depth="6">java.net.Socket.&lt;init&gt;(Socket.java:290)</Frame>
          <Frame depth="7">java.net.Socket.&lt;init&gt;(Socket.java:118)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.connect(RemoteTestRunner.java:443)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:212)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:151)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="3">
      <source_code type="assignment">
        <location start="2925" end="2954" />
        <code>Exception exception= null;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2955" end="2986" />
        <code>-		for (int i= 1; i &lt; 5; i++) {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2987" end="3339" />
        <code>+		for (int i= 1; i &lt; 10; i++) {
 			try{
 				fClientSocket= new Socket(fHost, fPort);
 				fWriter= new PrintWriter
(fClientSocket.getOutputStream(), false/*true*/);
@@ -449,7 +449,7 @@
 				exception= e;
 			}
 			try {
-				Thread.currentThread().sleep(200);
+				Thread.currentThread().sleep(2000);
 			} catch(InterruptedException e) {
 			}
 		}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I'll provide more specifics as I come across them.  Sorry for the sparse detail.

Sometimes (but not always) when I Run.. or Debug.. a JUnit launcher, I get the
following exception:

Console [&lt;disconnected&gt; org.eclipse.jdt.internal.junit.runner.RemoteTestRunner
at localHost:9613]

Could not connect to:  : 6293			
java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:295)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:161)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:148)
	at java.net.Socket.connect(Socket.java:425)
	at java.net.Socket.connect(Socket.java:375)
	at java.net.Socket.&lt;init&gt;(Socket.java:290)
	at java.net.Socket.&lt;init&gt;(Socket.java:118)
	at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.connect(RemoteTestRunner.java:440)
	at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:210)
	at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:151)


Could be related to one of the following:
**I'm running a dual head linux systems via xinerama, but other apps have not
had any difficulty.
**I'm suspicious that the problem occurs when I have more than one perspective
open in different windows, OR when using Debug... would cause a new perspective
to be started.
After a little more spelunking...

Cases when I *don't* get the socket error:
[1] Perspectives open in a new window
    I have open a Java perspective and a Debug perspective
    Debug or run from either perspective
[2] Perspectives open in a new window
    I only have a Java perspective open
    Don't have a JUnit view open anywhere
    I Run a JUnit launcher
[3] Perspectives open in a new window
    I only have 2 Java perspectives open
    Don't have a JUnit view open anywhere
    I Run a JUnit launcher

Cases when I *do* get the socket error:
[A] Perspectives open in a new window
    I only have a Java perspective open
    I Debug a JUnit launcher

Note: the fact that I've catogorized the cases above does not mean that I
haven't gotten the other outcome at a different.  I am sure that I've previously
gotten this error with Run before, but none of the cases above covers that.

*sigh*
[F3] While I have had several times where a debug perspective fired up and ran
correctly, I have just seen a socket failure under F3.  Stack trace is...

Could not connect to:  : 8727			
java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:295)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:161)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:148)
	at java.net.Socket.connect(Socket.java:425)
	at java.net.Socket.connect(Socket.java:375)
	at java.net.Socket.&lt;init&gt;(Socket.java:290)
	at java.net.Socket.&lt;init&gt;(Socket.java:118)
	at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.connect(RemoteTestRunner.java:443)
	at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:212)
	at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:151)

Could reproduce under Win2000. The problem shows up when the Eclipse JUnit 
server is slow in starting up. This can happen when switching to debug 
perspective or when launching JUnit tests under the debugger. There is a loop 
that attempts to compensate for this delay by retrying to connect multiple 
times with a delay. However, the timeout for the retries is too small for 
common cases, i.e., the retry is only done for 1 second. 

F4 fix candidate.

Impact if not fixed: running JUnit tests doesn't seem to run reliably and you 
often have to retry twice. The problem seems to be worse on Linux. Fix is 
trivial to increase the retry count and the retry interval. 

Index: RemoteTestRunner.java
===================================================================
RCS 
file: /home/eclipse/org.eclipse.jdt.junit/src/org/eclipse/jdt/internal/junit/run
ner/RemoteTestRunner.java,v
retrieving revision 1.8
diff -u -r1.8 RemoteTestRunner.java
--- RemoteTestRunner.java	11 Jun 2002 23:03:28 -0000	1.8
+++ RemoteTestRunner.java	18 Jun 2002 20:23:56 -0000
@@ -438,7 +438,7 @@
 		if (fDebugMode)
 			System.out.println("RemoteTestRunner: trying to 
connect" + fHost + ":" + fPort); //$NON-NLS-1$ //$NON-NLS-2$
 		Exception exception= null;
-		for (int i= 1; i &lt; 5; i++) {
+		for (int i= 1; i &lt; 10; i++) {
 			try{
 				fClientSocket= new Socket(fHost, fPort);
 				fWriter= new PrintWriter
(fClientSocket.getOutputStream(), false/*true*/);
@@ -449,7 +449,7 @@
 				exception= e;
 			}
 			try {
-				Thread.currentThread().sleep(200);
+				Thread.currentThread().sleep(2000);
 			} catch(InterruptedException e) {
 			}
 		}

Reviewed by Dirk Baeumer and Kai-Uwe Maetzel.</WithStack>
    <WithOutStack>I'll provide more specifics as I come across them.  Sorry for the sparse detail.

Sometimes (but not always) when I Run.. or Debug.. a JUnit launcher, I get the
following exception:

Console [&lt;disconnected&gt; org.eclipse.jdt.internal.junit.runner.RemoteTestRunner
at localHost:9613]

Could not connect to:  : 6293			


Could be related to one of the following:
**I'm running a dual head linux systems via xinerama, but other apps have not
had any difficulty.
**I'm suspicious that the problem occurs when I have more than one perspective
open in different windows, OR when using Debug... would cause a new perspective
to be started.
After a little more spelunking...

Cases when I *don't* get the socket error:
[1] Perspectives open in a new window
    I have open a Java perspective and a Debug perspective
    Debug or run from either perspective
[2] Perspectives open in a new window
    I only have a Java perspective open
    Don't have a JUnit view open anywhere
    I Run a JUnit launcher
[3] Perspectives open in a new window
    I only have 2 Java perspectives open
    Don't have a JUnit view open anywhere
    I Run a JUnit launcher

Cases when I *do* get the socket error:
[A] Perspectives open in a new window
    I only have a Java perspective open
    I Debug a JUnit launcher

Note: the fact that I've catogorized the cases above does not mean that I
haven't gotten the other outcome at a different.  I am sure that I've previously
gotten this error with Run before, but none of the cases above covers that.

*sigh*
[F3] While I have had several times where a debug perspective fired up and ran
correctly, I have just seen a socket failure under F3.  Stack trace is...

Could not connect to:  : 8727			


Could reproduce under Win2000. The problem shows up when the Eclipse JUnit 
server is slow in starting up. This can happen when switching to debug 
perspective or when launching JUnit tests under the debugger. There is a loop 
that attempts to compensate for this delay by retrying to connect multiple 
times with a delay. However, the timeout for the retries is too small for 
common cases, i.e., the retry is only done for 1 second. 

F4 fix candidate.

Impact if not fixed: running JUnit tests doesn't seem to run reliably and you 
often have to retry twice. The problem seems to be worse on Linux. Fix is 
trivial to increase the retry count and the retry interval. 

Index: RemoteTestRunner.java
===================================================================
RCS 
file: /home/eclipse/org.eclipse.jdt.junit/src/org/eclipse/jdt/internal/junit/run
ner/RemoteTestRunner.java,v
retrieving revision 1.8
diff -u -r1.8 RemoteTestRunner.java
--- RemoteTestRunner.java	11 Jun 2002 23:03:28 -0000	1.8
+++ RemoteTestRunner.java	18 Jun 2002 20:23:56 -0000
@@ -438,7 +438,7 @@
 		if (fDebugMode)
 			System.out.println("RemoteTestRunner: trying to 
connect" + fHost + ":" + fPort); //$NON-NLS-1$ //$NON-NLS-2$
 		Exception exception= null;
-		for (int i= 1; i &lt; 5; i++) {
+		for (int i= 1; i &lt; 10; i++) {
 			try{
 				fClientSocket= new Socket(fHost, fPort);
 				fWriter= new PrintWriter
(fClientSocket.getOutputStream(), false/*true*/);
@@ -449,7 +449,7 @@
 				exception= e;
 			}
 			try {
-				Thread.currentThread().sleep(200);
+				Thread.currentThread().sleep(2000);
 			} catch(InterruptedException e) {
 			}
 		}

Reviewed by Dirk Baeumer and Kai-Uwe Maetzel.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19860" />
    <CreationDate amount="2002-06-10 19:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="major" />
    <Summery>[CVS CVSNT] CVS : protocol error: directory '/repository1' not within root 'e:/repository1'</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="6">
      <Enumeration lines="2">
        <Lines>
          <Line>1.  e:/repository1</Line>
          <Line>2.  e:/repository2</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>1. repository1/src/ checkout as one</Line>
          <Line>2. repository2/src/ checkout as two</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>1.  CVS files in workspace from a different repository</Line>
          <Line>2.  Once I get the noted error, the CVSNT server is closed for business, until</Line>
          <Line>the entire server is restarted (not good, but definitely a server issue).</Line>
          <Line>3.  Old project's (now subdirectories) .project, .classpath files CANNOT be</Line>
          <Line>removed through Eclipse.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>1.  Create two java packages: com.a and com.a.b</Line>
          <Line>2.  Create two java classes in com.a.*</Line>
          <Line>3.  Refactor | Move on a java class to com.a.b</Line>
          <Line>4.  Team | Synchronize with Repository</Line>
          <Line>Reopening</Line>
          <Line>Not reproducable on CVSNT 1.11.1.3 and Eclipse 2.0.1</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- build #</Line>
          <Line>- CVS server version and type (I assume CVSNT from your repo path)</Line>
          <Line>- any relevant info in .log</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- build #</Line>
          <Line>&gt;&gt;&gt;06022002 F2</Line>
          <Line>- CVS server version and type</Line>
          <Line>&gt;&gt;&gt;CVSNT 1.11.1.3</Line>
          <Line>- any relevant info in .log</Line>
          <Line>&gt;&gt;&gt;nothing shown</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Case:

Repositories (same server, happens on both repositories)
1.  e:/repository1
2.  e:/repository2

Projects (created via 'checkout as')
1. repository1/src/ checkout as one
2. repository2/src/ checkout as two

All is well until you try to check in the .project and .classpath for each of 
the projects.  Then it yields the error listed above.  My search on the net 
revealed that you can recreate this error by trying a 'cvs update' on a 
directory that exists on a different cvs server...not sure it that helps any.

This error is experienced when synchronizing, as well as in the cvs repository 
navigator.  Click on HEAD and the same appears ( you cannot browse at all ).
Presumably according the paths in your example this is logged against CVSNT, 
which is unsupported.

Please provide:

- build #
- CVS server version and type (I assume CVSNT from your repo path)
- any relevant info in .log

Q: Did the projects already have .project's in the repo at the start of 
your "check out" step?

I have tried your steps (assuming the answer to my question above is 'no') 
against CVSNT 1.11.1.1 with no problem

Since you fail on expanding HEAD the indication is that there is something 
fishy in the repository location.  I don't believe this has to do with the fact 
you have to locations/projects in your steps. 

Q: Can you test whether you get the error if you've removed one of the 
locations and projects? (According to my guess you still will).

Q: Are the paths for your repo locations absolute/fully-qualified?

Marking post 2.0 for further investigation.
- build # 
&gt;&gt;&gt;06022002 F2
- CVS server version and type 
&gt;&gt;&gt;CVSNT 1.11.1.3
- any relevant info in .log 
&gt;&gt;&gt;nothing shown

Q: Did the projects already have .project's in the repo at the start of 
your "check out" step?
&gt;&gt;&gt;One project did.

Q: Can you test whether you get the error if you've removed one of the 
locations and projects? (According to my guess you still will).
&gt;&gt;&gt;to be done, i'll get back to you

Q: Are the paths for your repo locations absolute/fully-qualified?
&gt;&gt;&gt;yes

Also, I have been reorganizing the cvs quite a bit from within Eclipse.  
Sometimes it was a copy, paste and commit, other times it was a move, then 
commit.

My repository has been up and running for a couple of months with no problems 
using netbeans.  I believe Eclipse is a superior ide, so hopefully I can get it 
ironed out.

I believe it has something to do with Eclipse or it's working files because 
WinCVS has not problem, nor does netbeans.  I've also done a Team Project 
Export, killed eclipse altogether, then reinstalled (same version), and 
imported the team project.  No dice.
Latest findings:

1.  CVS files in workspace from a different repository
2.  Once I get the noted error, the CVSNT server is closed for business, until 
the entire server is restarted (not good, but definitely a server issue).
3.  Old project's (now subdirectories) .project, .classpath files CANNOT be 
removed through Eclipse.

Does this indicate some issues with the copy/move functionality?
Recreated Bug:

1.  Create two java packages: com.a and com.a.b
2.  Create two java classes in com.a.*
3.  Refactor | Move on a java class to com.a.b
4.  Team | Synchronize with Repository
Reopening
Not reproducable on CVSNT 1.11.1.3 and Eclipse 2.0.1 


--------------- Versions ---------------

Eclipse Platform
Version: 2.0.1
Build id: 200208291828
Relevant Plugins: 
      CVS Team Provider Core 2.0.0
      CVS Team Provider UI 2.0.1

-----------
CVSNT
cvsnt_1.11.1.3 CVSNT 1.11.1.3 (Build 57i)
----------------

Kevin Ross, can we close this now since its been indicated the bug is no longer 
reproduceable?
I have since switched to cvs on Linux.  I believe that upgrading to Eclipse
2.0.1 fixed any issues with this error, since other side effects went away as well.</WithStack>
    <WithOutStack>Case:

Repositories (same server, happens on both repositories)
1.  e:/repository1
2.  e:/repository2

Projects (created via 'checkout as')
1. repository1/src/ checkout as one
2. repository2/src/ checkout as two

All is well until you try to check in the .project and .classpath for each of 
the projects.  Then it yields the error listed above.  My search on the net 
revealed that you can recreate this error by trying a 'cvs update' on a 
directory that exists on a different cvs server...not sure it that helps any.

This error is experienced when synchronizing, as well as in the cvs repository 
navigator.  Click on HEAD and the same appears ( you cannot browse at all ).
Presumably according the paths in your example this is logged against CVSNT, 
which is unsupported.

Please provide:

- build #
- CVS server version and type (I assume CVSNT from your repo path)
- any relevant info in .log

Q: Did the projects already have .project's in the repo at the start of 
your "check out" step?

I have tried your steps (assuming the answer to my question above is 'no') 
against CVSNT 1.11.1.1 with no problem

Since you fail on expanding HEAD the indication is that there is something 
fishy in the repository location.  I don't believe this has to do with the fact 
you have to locations/projects in your steps. 

Q: Can you test whether you get the error if you've removed one of the 
locations and projects? (According to my guess you still will).

Q: Are the paths for your repo locations absolute/fully-qualified?

Marking post 2.0 for further investigation.
- build # 
&gt;&gt;&gt;06022002 F2
- CVS server version and type 
&gt;&gt;&gt;CVSNT 1.11.1.3
- any relevant info in .log 
&gt;&gt;&gt;nothing shown

Q: Did the projects already have .project's in the repo at the start of 
your "check out" step?
&gt;&gt;&gt;One project did.

Q: Can you test whether you get the error if you've removed one of the 
locations and projects? (According to my guess you still will).
&gt;&gt;&gt;to be done, i'll get back to you

Q: Are the paths for your repo locations absolute/fully-qualified?
&gt;&gt;&gt;yes

Also, I have been reorganizing the cvs quite a bit from within Eclipse.  
Sometimes it was a copy, paste and commit, other times it was a move, then 
commit.

My repository has been up and running for a couple of months with no problems 
using netbeans.  I believe Eclipse is a superior ide, so hopefully I can get it 
ironed out.

I believe it has something to do with Eclipse or it's working files because 
WinCVS has not problem, nor does netbeans.  I've also done a Team Project 
Export, killed eclipse altogether, then reinstalled (same version), and 
imported the team project.  No dice.
Latest findings:

1.  CVS files in workspace from a different repository
2.  Once I get the noted error, the CVSNT server is closed for business, until 
the entire server is restarted (not good, but definitely a server issue).
3.  Old project's (now subdirectories) .project, .classpath files CANNOT be 
removed through Eclipse.

Does this indicate some issues with the copy/move functionality?
Recreated Bug:

1.  Create two java packages: com.a and com.a.b
2.  Create two java classes in com.a.*
3.  Refactor | Move on a java class to com.a.b
4.  Team | Synchronize with Repository
Reopening
Not reproducable on CVSNT 1.11.1.3 and Eclipse 2.0.1 


--------------- Versions ---------------

Eclipse Platform
Version: 2.0.1
Build id: 200208291828
Relevant Plugins: 
      CVS Team Provider Core 2.0.0
      CVS Team Provider UI 2.0.1

-----------
CVSNT
cvsnt_1.11.1.3 CVSNT 1.11.1.3 (Build 57i)
----------------

Kevin Ross, can we close this now since its been indicated the bug is no longer 
reproduceable?
I have since switched to cvs on Linux.  I believe that upgrading to Eclipse
2.0.1 fixed any issues with this error, since other side effects went away as well.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19861" />
    <CreationDate amount="2002-06-10 20:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>Repeatable GPF while debugging</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1) Debug&gt;Runtime Workbench (Accept defaults)</Line>
          <Line>2) Breakpoint hits, Resume</Line>
          <Line>3) Breakpoint hits, Resume</Line>
          <Line>4) GPF</Line>
          <Line>Created attachment 1348</Line>
          <Line>Attache java dump</Line>
          <Line>The dump looks like it is the target that crashed.</Line>
          <Line>Is that correct, or is it the host?</Line>
          <Line>Can you reproduce it with the latest IBM 1.3.1 VM?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>20020610 

I have a breakpoint with the condition 
"breakpointGroup".equals(id) || "jdtGroup".equals(id)
on line 197 of PluginActionBuilder

1) Debug&gt;Runtime Workbench (Accept defaults)
2) Breakpoint hits, Resume
3) Breakpoint hits, Resume
4) GPF
Created attachment 1348
Attache java dump
The dump looks like it is the target that crashed.
Is that correct, or is it the host?
Can you reproduce it with the latest IBM 1.3.1 VM?

It was the target.
Unable to repeat with 1.3.1 jdk.
I thought I recognized the dump and thus downloaded 1.3.1 and used it to run 
the dev. I assumed this would also cause the target to run using 1.3.1 but I 
had to manually add the new JRE as the default.
I think this can be closed as a duplicate.
Duplicate of which PR?
I remember seeing this several times with jdk 1.3.0 and when jdk 1.3.1 was 
made available it was mentioned that it got rid of some GPF's. Hopefully Mike 
will recognize the attached dump.
It looks like the pattern we were seeing then, which was attributed to a JIT 
problem in a particular stepping of the Hursley VM. Unfortunately, I don't 
remember the number of the failing VM, and I couldn't find the original PR 
which made reference to it in the SWT bucket (was it UI?).

I'm not planning to do anything more with this.</WithStack>
    <WithOutStack>20020610 

I have a breakpoint with the condition 
"breakpointGroup".equals(id) || "jdtGroup".equals(id)
on line 197 of PluginActionBuilder

1) Debug&gt;Runtime Workbench (Accept defaults)
2) Breakpoint hits, Resume
3) Breakpoint hits, Resume
4) GPF
Created attachment 1348
Attache java dump
The dump looks like it is the target that crashed.
Is that correct, or is it the host?
Can you reproduce it with the latest IBM 1.3.1 VM?

It was the target.
Unable to repeat with 1.3.1 jdk.
I thought I recognized the dump and thus downloaded 1.3.1 and used it to run 
the dev. I assumed this would also cause the target to run using 1.3.1 but I 
had to manually add the new JRE as the default.
I think this can be closed as a duplicate.
Duplicate of which PR?
I remember seeing this several times with jdk 1.3.0 and when jdk 1.3.1 was 
made available it was mentioned that it got rid of some GPF's. Hopefully Mike 
will recognize the attached dump.
It looks like the pattern we were seeing then, which was attributed to a JIT 
problem in a particular stepping of the Hursley VM. Unfortunately, I don't 
remember the number of the failing VM, and I couldn't find the original PR 
which made reference to it in the SWT bucket (was it UI?).

I'm not planning to do anything more with this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19862" />
    <CreationDate amount="2002-06-10 20:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Can't get plugin project to forget project dependencies</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) You want to have a classpath that will be as close to the run-time as</Line>
          <Line>possible, so you should let PDE compute it</Line>
          <Line>2) Use plug-in dependencies (in Dependencies page of the plug-in manifest) to</Line>
          <Line>express inter-plug-in relations. PDE will compute the appropriate classpath out</Line>
          <Line>of this information.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>F2, Win2K. I had a working plugin from which I broke out two library projects
and set these projects up as build/project dependencies. Builds fine, but
doesn't load in PDE. So I made two new plugin projects with same contents,
changed the build/project dependencies to point to the new projects instead and
made them required in plugin.xml. Now it builds and loads fine, but the build is
still referring to the old projects! If I close the old projects, plugin won't
build at all (complains they are missing). If I open the old projects, compiler
sees only them and not the new projects, which are by now modified so I can't build.
The problem appears to show itself in .classpath, which has these entries:

    &lt;classpathentry kind="lib" path="/util/bin"/&gt;
    &lt;classpathentry kind="lib" path="/xml/bin"/&gt;
    &lt;classpathentry kind="src" path="/com.objfac.xml"/&gt;
    &lt;classpathentry kind="src" path="/com.objfac.util"/&gt;

The first two should have been removed when the Properties were changed, but are
still there.

Manually removing the first two entries resolves the build problem. But somebody
obviously still thinks there is a dependency, as closing the util and xml
project still triggers a plugin rebuild. But at least it now builds.
The rebuilds may have been triggered because the copy of .classpath in memory
was out of synch with the disk. I had to refresh it before checking in the change.
The rebuild did occur since the .classpath file has been touched (resource 
change will cause builders to be activated).

Moving to PDE for investigation, PDE is responsible for setting the classpath 
from the plugin.xml.
When using PDE, never set your classpath manually for two reasons:

1) You want to have a classpath that will be as close to the run-time as 
possible, so you should let PDE compute it
2) Use plug-in dependencies (in Dependencies page of the plug-in manifest) to 
express inter-plug-in relations. PDE will compute the appropriate classpath out 
of this information.

If you insist on setting the classpath manually, you will constantly fight with 
PDE and you may end up with a situation where your projects compile but will 
not run (classes cannot be found or plug-ins are not loaded).
Thanks for the advice but setting my classpath manually has nothing to do with
this bug. The bug was that a classpath setting from the Properties / Java Build
Path / Projects and Properties / Project References didn't go away even after
these were changed. This dependency was never reflected in the plugin.xml file,
as the projects depended upon were not plugins.</WithStack>
    <WithOutStack>F2, Win2K. I had a working plugin from which I broke out two library projects
and set these projects up as build/project dependencies. Builds fine, but
doesn't load in PDE. So I made two new plugin projects with same contents,
changed the build/project dependencies to point to the new projects instead and
made them required in plugin.xml. Now it builds and loads fine, but the build is
still referring to the old projects! If I close the old projects, plugin won't
build at all (complains they are missing). If I open the old projects, compiler
sees only them and not the new projects, which are by now modified so I can't build.
The problem appears to show itself in .classpath, which has these entries:

    &lt;classpathentry kind="lib" path="/util/bin"/&gt;
    &lt;classpathentry kind="lib" path="/xml/bin"/&gt;
    &lt;classpathentry kind="src" path="/com.objfac.xml"/&gt;
    &lt;classpathentry kind="src" path="/com.objfac.util"/&gt;

The first two should have been removed when the Properties were changed, but are
still there.

Manually removing the first two entries resolves the build problem. But somebody
obviously still thinks there is a dependency, as closing the util and xml
project still triggers a plugin rebuild. But at least it now builds.
The rebuilds may have been triggered because the copy of .classpath in memory
was out of synch with the disk. I had to refresh it before checking in the change.
The rebuild did occur since the .classpath file has been touched (resource 
change will cause builders to be activated).

Moving to PDE for investigation, PDE is responsible for setting the classpath 
from the plugin.xml.
When using PDE, never set your classpath manually for two reasons:

1) You want to have a classpath that will be as close to the run-time as 
possible, so you should let PDE compute it
2) Use plug-in dependencies (in Dependencies page of the plug-in manifest) to 
express inter-plug-in relations. PDE will compute the appropriate classpath out 
of this information.

If you insist on setting the classpath manually, you will constantly fight with 
PDE and you may end up with a situation where your projects compile but will 
not run (classes cannot be found or plug-ins are not loaded).
Thanks for the advice but setting my classpath manually has nothing to do with
this bug. The bug was that a classpath setting from the Properties / Java Build
Path / Projects and Properties / Project References didn't go away even after
these were changed. This dependency was never reflected in the plugin.xml file,
as the projects depended upon were not plugins.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19863" />
    <CreationDate amount="2002-06-10 20:32:00 -0400" />
    <DupId amount="12917" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Browser Choice] linux/gtk should use user's default browser</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Gnome provides a way for the user to specify their preferred html browser.

(See Gnome Control Center/Document Handlers/Default Applications/Web Browser.)

I find it disconcerting to have Mozilla manage my help system, since I have
galeon configured with all of my creature comforts.
Added detail:

Here's my workaround.  When I bring up the eclipse help system, I copy the URL
in the mozilla address line, open a new tab in galeon, paste, bring it up, and
then kill the mozilla window.

Shouldn't have to go to that much effort.
This is a dup of bug 12917 which is to be looked at post 2.0

For now, please use the workaround suggested by Nick.


*** This bug has been marked as a duplicate of 12917 ***</WithStack>
    <WithOutStack>Gnome provides a way for the user to specify their preferred html browser.

(See Gnome Control Center/Document Handlers/Default Applications/Web Browser.)

I find it disconcerting to have Mozilla manage my help system, since I have
galeon configured with all of my creature comforts.
Added detail:

Here's my workaround.  When I bring up the eclipse help system, I copy the URL
in the mozilla address line, open a new tab in galeon, paste, bring it up, and
then kill the mozilla window.

Shouldn't have to go to that much effort.
This is a dup of bug 12917 which is to be looked at post 2.0

For now, please use the workaround suggested by Nick.


*** This bug has been marked as a duplicate of 12917 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19864" />
    <CreationDate amount="2002-06-10 21:04:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Code completion does not filter fully qualified class names</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- Type: java.io.</Line>
          <Line>- Press CTRL+SPACE to make the Auto completion box appear.</Line>
          <Line>- Type: O</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Steps to reproduce:
 - Type: java.io.
 - Press CTRL+SPACE to make the Auto completion box appear.
 - Type: O

The auto completion box then disapears.
It should instead filter out those classes that do not begin with O.

I'm using build 20020607.
Reproduced. Completion after java.io.O would work. This is a UI bug.
fixed &gt;= 20020917 (not inintegration build)
fixed
*** Bug 20623 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Steps to reproduce:
 - Type: java.io.
 - Press CTRL+SPACE to make the Auto completion box appear.
 - Type: O

The auto completion box then disapears.
It should instead filter out those classes that do not begin with O.

I'm using build 20020607.
Reproduced. Completion after java.io.O would work. This is a UI bug.
fixed &gt;= 20020917 (not inintegration build)
fixed
*** Bug 20623 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19865" />
    <CreationDate amount="2002-06-10 22:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Watch/Edit] Support -l locking</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>As posted to eclipse.org, read from bottom up.

====================================================================


Some references FYI.
Kevin

==================================

http://cvsbook.red-bean.com/cvsbook.html#Watches__CVS_As_Telephone_
http://www.loria.fr/~molli/fom-serve/cache/122.html

http://cvsbook.red-bean.com/cvsbook.html#admin (note the line " I'm not sure
how useful this really is,")

-l[REV] - Locks the file's revision to REV. If REV is omitted, it locks the
latest revision on the default branch (usually the trunk). If REV is a
branch, it locks the latest revision on that branch.

The intent of this option is to give you a way to do reserved checkouts,
where only one user can be editing the file at a time. I'm not sure how
useful this really is, but if you want to try it, you should probably do so
in conjunction with the rcslock.pl script in the CVS source distribution's
contrib/ directory. See comments in that file for further information. Among
other things, those comments indicate that the locking must be set to
strict. (See -L.) There is no space between -l and its argument.





"Kevin McGuire" &lt;kevin_mcguire@oti.com&gt; wrote in message
news:a8dben$c2h$1@rogue.oti.com...
&gt; Hi Ali,
&gt;
&gt; CVS doesn't really support this.
&gt; What they do support is called watch/edit, which are both explicit
&gt; additional steps people must take in their workflow and the result is
email
&gt; notification.  See cvs doc (eg. at cvshome.org).  It doesn't have the
&gt; exclusive locking semantics of other repositories but is really just a "by
&gt; participation" notification mechanism.
&gt;
&gt; We are interested in this but likely won't have the cycles to put it in
for
&gt; 2.0.
&gt;
&gt; Kevin
&gt;
&gt;
&gt; "Ali Manji" &lt;amanji@ca.ibm.com&gt; wrote in message
&gt; news:a8d4hq$9bh$1@rogue.oti.com...
&gt; &gt; Hi,
&gt; &gt;
&gt; &gt; For 2.0, will the CVS plugin have a notion of checking out a file
&gt; &gt; "exclusively".  That is, can someone check out a file so that is
&gt; effectively
&gt; &gt; "locked" and no one else can work on it while checked out? If so, what
&gt; would
&gt; &gt; be the context menu item to do this, or if possible could you provide
&gt; &gt; details about how to accomplish this?
&gt; &gt;
&gt; &gt; Thanks,Ali
There is currently no plan to address this item
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>As posted to eclipse.org, read from bottom up.

====================================================================


Some references FYI.
Kevin

==================================

http://cvsbook.red-bean.com/cvsbook.html#Watches__CVS_As_Telephone_
http://www.loria.fr/~molli/fom-serve/cache/122.html

http://cvsbook.red-bean.com/cvsbook.html#admin (note the line " I'm not sure
how useful this really is,")

-l[REV] - Locks the file's revision to REV. If REV is omitted, it locks the
latest revision on the default branch (usually the trunk). If REV is a
branch, it locks the latest revision on that branch.

The intent of this option is to give you a way to do reserved checkouts,
where only one user can be editing the file at a time. I'm not sure how
useful this really is, but if you want to try it, you should probably do so
in conjunction with the rcslock.pl script in the CVS source distribution's
contrib/ directory. See comments in that file for further information. Among
other things, those comments indicate that the locking must be set to
strict. (See -L.) There is no space between -l and its argument.





"Kevin McGuire" &lt;kevin_mcguire@oti.com&gt; wrote in message
news:a8dben$c2h$1@rogue.oti.com...
&gt; Hi Ali,
&gt;
&gt; CVS doesn't really support this.
&gt; What they do support is called watch/edit, which are both explicit
&gt; additional steps people must take in their workflow and the result is
email
&gt; notification.  See cvs doc (eg. at cvshome.org).  It doesn't have the
&gt; exclusive locking semantics of other repositories but is really just a "by
&gt; participation" notification mechanism.
&gt;
&gt; We are interested in this but likely won't have the cycles to put it in
for
&gt; 2.0.
&gt;
&gt; Kevin
&gt;
&gt;
&gt; "Ali Manji" &lt;amanji@ca.ibm.com&gt; wrote in message
&gt; news:a8d4hq$9bh$1@rogue.oti.com...
&gt; &gt; Hi,
&gt; &gt;
&gt; &gt; For 2.0, will the CVS plugin have a notion of checking out a file
&gt; &gt; "exclusively".  That is, can someone check out a file so that is
&gt; effectively
&gt; &gt; "locked" and no one else can work on it while checked out? If so, what
&gt; would
&gt; &gt; be the context menu item to do this, or if possible could you provide
&gt; &gt; details about how to accomplish this?
&gt; &gt;
&gt; &gt; Thanks,Ali
There is currently no plan to address this item
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19866" />
    <CreationDate amount="2002-06-10 22:44:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Tooltips (for JDT compiler errors) stop working after switching tasks in Win2K</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1.  Open a compilable Java class file.</Line>
          <Line>2.  Add a typo (for example, an extraneous character in a class name).</Line>
          <Line>3.  Save.</Line>
          <Line>4.  Roll over icon to left of line with typo.  Tooltip describing compiler error</Line>
          <Line>(s) on that line should appear.</Line>
          <Line>5.  Switch to another process in Windows (click on the taskbar, for example).</Line>
          <Line>6.  Switch back to the Eclipse window.</Line>
          <Line>7.  Roll over icon again.  Tooltip does not appear.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I am guessing this is a general SWT or SWT/OS interaction bug, but I have only
noticed it in the JDT, so it may be specific to that plug-in.

Background: Java compiler errors are displayed in the Tasks view; as underlined 
code in the editor view; and (of interest here) as a circled red 'x' (or yellow 
lightbulb over 'x') icon in the left (breakpoint) margin of the editor view.

Problem: Mousing over the icon should bring up a tooltip with the same text as 
in the Tasks entry for the error, but this only works some of the time and/or 
stops working in the editor for no good reason.

Steps to reproduce:

1.  Open a compilable Java class file.
2.  Add a typo (for example, an extraneous character in a class name).
3.  Save.
4.  Roll over icon to left of line with typo.  Tooltip describing compiler error
(s) on that line should appear.
5.  Switch to another process in Windows (click on the taskbar, for example).
6.  Switch back to the Eclipse window.
7.  Roll over icon again.  Tooltip does not appear.

At this point, no more tooltips will show up in that editor no matter what I 
do.  If I close the editor and reopen it, tooltips will work again until I 
switch processes again.

This is Eclipse SDK 20020610.
Can't reproduce in 2.0. Please reopen PR if you have more information to 
reproduce the bug.</WithStack>
    <WithOutStack>I am guessing this is a general SWT or SWT/OS interaction bug, but I have only
noticed it in the JDT, so it may be specific to that plug-in.

Background: Java compiler errors are displayed in the Tasks view; as underlined 
code in the editor view; and (of interest here) as a circled red 'x' (or yellow 
lightbulb over 'x') icon in the left (breakpoint) margin of the editor view.

Problem: Mousing over the icon should bring up a tooltip with the same text as 
in the Tasks entry for the error, but this only works some of the time and/or 
stops working in the editor for no good reason.

Steps to reproduce:

1.  Open a compilable Java class file.
2.  Add a typo (for example, an extraneous character in a class name).
3.  Save.
4.  Roll over icon to left of line with typo.  Tooltip describing compiler error
(s) on that line should appear.
5.  Switch to another process in Windows (click on the taskbar, for example).
6.  Switch back to the Eclipse window.
7.  Roll over icon again.  Tooltip does not appear.

At this point, no more tooltips will show up in that editor no matter what I 
do.  If I close the editor and reopen it, tooltips will work again until I 
switch processes again.

This is Eclipse SDK 20020610.
Can't reproduce in 2.0. Please reopen PR if you have more information to 
reproduce the bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19867" />
    <CreationDate amount="2002-06-11 00:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Clean up preference handling for # of histories</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>For 2.0 we have released a workaround fix because the histories were not handled 
correctly between ui and core. Konrad supplied the workaround. Neew to clean 
this up post 2.0
Fixed in 2.0.2

A log file is now created for all activities</WithStack>
    <WithOutStack>For 2.0 we have released a workaround fix because the histories were not handled 
correctly between ui and core. Konrad supplied the workaround. Neew to clean 
this up post 2.0
Fixed in 2.0.2

A log file is now created for all activities</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19868" />
    <CreationDate amount="2002-06-11 00:15:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Provide a full history log</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>1) The file should be called .install-log</Line>
          <Line>2) The file should be written in the .config directory in the metadata.</Line>
          <Line>3) Whenever a new configuration is pushed on top, the following entry</Line>
          <Line>should be appended:</Line>
          <Line />
          <Line>!CONFIGURATION &lt;label&gt;</Line>
          <Line />
          <Line>where &lt;label&gt; is the value returned from IInstallConfiguration.getLabel().</Line>
          <Line />
          <Line>4) Whenever a new activity is added to the current configuration,</Line>
          <Line>it should be appended to the file as follows:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The WSAD service people have a requirement to maintain a full service log of all 
install/ update activities. For 2.0 we have set the default number of histories 
to 50, but this is not a good solution. We should simply write a flat log that 
we append activities to (not xml, similar to .log)
See bug 19301 for additional details

*** Bug 21363 has been marked as a duplicate of this bug. ***
Here is the log file spec:

1) The file should be called .install-log
2) The file should be written in the .config directory in the metadata.
3) Whenever a new configuration is pushed on top, the following entry
should be appended:

!CONFIGURATION &lt;label&gt;

where &lt;label&gt; is the value returned from IInstallConfiguration.getLabel().

4) Whenever a new activity is added to the current configuration, 
it should be appended to the file as follows:

!ACTIVITY &lt;date&gt; &lt;target&gt; &lt;action&gt; &lt;status&gt;

There should be a blank line between the last activity entry of the previous
configuration and the configuration entry of the next configuration, as in:

!ACTIVITY Sep 29, 2002 10:47:20 PM com.example.e388_1.0.0 feature-install 
success

!CONFIGURATION Sep 29, 2002 10:55:08 PM
!ACTIVITY Sep 29, 2002 10:55:15 PM com.example.root_1.0.1 configure success

Activity fields:

&lt;date&gt; is the date string as stored in IActivity object.
&lt;target&gt; is the value return by IActivity.getLabel()
&lt;action&gt; is one of: 
      feature-install
      feature-remove
      site-install
      site-remove
      unconfigure
      configure
      revert
      reconciliation

&lt;status&gt; is one of:

      success (for STATUS_OK from IActivity.getStatus())
      failure (for STATUS_NOK from IActivity.getAStatus())

The file should be opened for writing only for the duration of the append,
then immediately closed to release the handle.

See PlatformLogWriter.java in org.eclipse.core.runtime plug-in for 
implementation ideas. We should duplicate behaviour, encoding, 
and error handling.


In the current model, due to implementation, activities are not added to the
current configuration. They are added to a clone of the configuration. The clone
is added as the current configuration.  So activities will be logged when the
new configuration is added as current configuraton... thoughts ?
When the new configuration is pushed on top of the stack as the new current 
configuration (or even better - when 'save' is called to preserve the 
configuration), you should append the log file with the configuration entry and 
all the activities. It is not important to immediately append the log for each 
event: what is important is to have an ever-growing log of all the 
install/update activities that can be sent to service/support in case of 
problems.
The log is created when the Configuration is saved, thus logging the exact same
content as the configuration XML files.
Test in integration build</WithStack>
    <WithOutStack>The WSAD service people have a requirement to maintain a full service log of all 
install/ update activities. For 2.0 we have set the default number of histories 
to 50, but this is not a good solution. We should simply write a flat log that 
we append activities to (not xml, similar to .log)
See bug 19301 for additional details

*** Bug 21363 has been marked as a duplicate of this bug. ***
Here is the log file spec:

1) The file should be called .install-log
2) The file should be written in the .config directory in the metadata.
3) Whenever a new configuration is pushed on top, the following entry
should be appended:

!CONFIGURATION &lt;label&gt;

where &lt;label&gt; is the value returned from IInstallConfiguration.getLabel().

4) Whenever a new activity is added to the current configuration, 
it should be appended to the file as follows:

!ACTIVITY &lt;date&gt; &lt;target&gt; &lt;action&gt; &lt;status&gt;

There should be a blank line between the last activity entry of the previous
configuration and the configuration entry of the next configuration, as in:

!ACTIVITY Sep 29, 2002 10:47:20 PM com.example.e388_1.0.0 feature-install 
success

!CONFIGURATION Sep 29, 2002 10:55:08 PM
!ACTIVITY Sep 29, 2002 10:55:15 PM com.example.root_1.0.1 configure success

Activity fields:

&lt;date&gt; is the date string as stored in IActivity object.
&lt;target&gt; is the value return by IActivity.getLabel()
&lt;action&gt; is one of: 
      feature-install
      feature-remove
      site-install
      site-remove
      unconfigure
      configure
      revert
      reconciliation

&lt;status&gt; is one of:

      success (for STATUS_OK from IActivity.getStatus())
      failure (for STATUS_NOK from IActivity.getAStatus())

The file should be opened for writing only for the duration of the append,
then immediately closed to release the handle.

See PlatformLogWriter.java in org.eclipse.core.runtime plug-in for 
implementation ideas. We should duplicate behaviour, encoding, 
and error handling.


In the current model, due to implementation, activities are not added to the
current configuration. They are added to a clone of the configuration. The clone
is added as the current configuration.  So activities will be logged when the
new configuration is added as current configuraton... thoughts ?
When the new configuration is pushed on top of the stack as the new current 
configuration (or even better - when 'save' is called to preserve the 
configuration), you should append the log file with the configuration entry and 
all the activities. It is not important to immediately append the log for each 
event: what is important is to have an ever-growing log of all the 
install/update activities that can be sent to service/support in case of 
problems.
The log is created when the Configuration is saved, thus logging the exact same
content as the configuration XML files.
Test in integration build</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19869" />
    <CreationDate amount="2002-06-11 00:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Update parsers do not set error handlers</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>All of our parsers implement the error handler methods (error(), faralError(), 
etc), but none of the parsers actually set the handler .... so our methods never 
get called.

I have set the handler for DefaultSiteParser because it was causing a problem 
(bug 18350), but did not set the others because I did not want to change the 
error handling paths a day before F3. However, we should clean this up post 2.0
Changed code for FeatureParser, in 2.0.2 stream
Verified in dev environment</WithStack>
    <WithOutStack>All of our parsers implement the error handler methods (error(), faralError(), 
etc), but none of the parsers actually set the handler .... so our methods never 
get called.

I have set the handler for DefaultSiteParser because it was causing a problem 
(bug 18350), but did not set the others because I did not want to change the 
error handling paths a day before F3. However, we should clean this up post 2.0
Changed code for FeatureParser, in 2.0.2 stream
Verified in dev environment</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19870" />
    <CreationDate amount="2002-06-11 00:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ctrl+Shift+Click does not work in Trees</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>- in Navigator, select a range of files using Click and Shift+Click</Line>
          <Line>- skip a file and then select the next one using Ctrl+Click</Line>
          <Line>- a few more items down, try to extend the selection without clearing the</Line>
          <Line>other selected items by using Ctrl+Shift+Click</Line>
          <Line>- it ignores the Shift and simply toggles selection of the last clicked item</Line>
          <Line>I could have sworn this was working a while back (about a month ago).</Line>
          <Line>As you know, the multi-select behavior is being emulated, since the native</Line>
          <Line>widget does not support it. I also thought this was left in reasonably good</Line>
          <Line>state, but I don't know if this case was working or not. SN to investigate.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 20020610

- in Navigator, select a range of files using Click and Shift+Click
- skip a file and then select the next one using Ctrl+Click
- a few more items down, try to extend the selection without clearing the 
other selected items by using Ctrl+Shift+Click 
- it ignores the Shift and simply toggles selection of the last clicked item
I could have sworn this was working a while back (about a month ago).
As you know, the multi-select behavior is being emulated, since the native 
widget does not support it. I also thought this was left in reasonably good 
state, but I don't know if this case was working or not. SN to investigate.

*** Bug 11027 has been marked as a duplicate of this bug. ***
The problem is that in the current implemenation, when both the control and 
shift keys are held down, the control is honoured first.  I took a quick look 
at fixing this in the past but there were lots of changes.  I would have to 
throw away the strategy I am using now to convince Windows to the multi-select 
for me requiring a rewrite.  At the time, I decide it wasn't worth it.

Just to be clear, both Ctrl and Shift work separately but when both are 
pressed, the tree honours Ctrl instead of Shift.
Can defer.

I don't think this one is worth fixing, given the amount of code that must 
change and the limited benefit.
*** Bug 29325 has been marked as a duplicate of this bug. ***
*** Bug 66024 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Build 20020610

- in Navigator, select a range of files using Click and Shift+Click
- skip a file and then select the next one using Ctrl+Click
- a few more items down, try to extend the selection without clearing the 
other selected items by using Ctrl+Shift+Click 
- it ignores the Shift and simply toggles selection of the last clicked item
I could have sworn this was working a while back (about a month ago).
As you know, the multi-select behavior is being emulated, since the native 
widget does not support it. I also thought this was left in reasonably good 
state, but I don't know if this case was working or not. SN to investigate.

*** Bug 11027 has been marked as a duplicate of this bug. ***
The problem is that in the current implemenation, when both the control and 
shift keys are held down, the control is honoured first.  I took a quick look 
at fixing this in the past but there were lots of changes.  I would have to 
throw away the strategy I am using now to convince Windows to the multi-select 
for me requiring a rewrite.  At the time, I decide it wasn't worth it.

Just to be clear, both Ctrl and Shift work separately but when both are 
pressed, the tree honours Ctrl instead of Shift.
Can defer.

I don't think this one is worth fixing, given the amount of code that must 
change and the limited benefit.
*** Bug 29325 has been marked as a duplicate of this bug. ***
*** Bug 66024 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19871" />
    <CreationDate amount="2002-06-11 00:50:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>InternalPlatform.assertInitialized does a Policy.bind</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020610

InternalPlatform.assertInitialized always calls Policy.bind.
This costs at least a dictionary lookup.

Among other places, InternalPlatform.assertInitialized is called by 
getAdapterManager(), which is called quite often.

Recommend calling Policy.bind only if needed.
Fix for 2.0
Fixed and released.</WithStack>
    <WithOutStack>Build 20020610

InternalPlatform.assertInitialized always calls Policy.bind.
This costs at least a dictionary lookup.

Among other places, InternalPlatform.assertInitialized is called by 
getAdapterManager(), which is called quite often.

Recommend calling Policy.bind only if needed.
Fix for 2.0
Fixed and released.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19872" />
    <CreationDate amount="2002-06-11 01:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Go to Line should use ".." instead of "..."</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020610

"..." usually means more info is needed.
".." indicates a range.

Or, use "to".
Fixed.
Verified by Adam S in F3.</WithStack>
    <WithOutStack>Build 20020610

"..." usually means more info is needed.
".." indicates a range.

Or, use "to".
Fixed.
Verified by Adam S in F3.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19873" />
    <CreationDate amount="2002-06-11 01:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Sync View: Internal error refreshing from repo on deleted project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331255097">
        <Exception>org.eclipse.team.internal.ccvs.core.CVSException</Exception>
        <Reason>Error retrieving remote 
resource tree for /Test2. Parent is not managed by CVS.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteTreeFromParent(CVSWorkspaceRoot.java:88)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteSyncTree(CVSWorkspaceRoot.java:130)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.ui.sync.CVSSyncCompareInput.createSyncElements(CVSSyncCompareInput.java:216)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ui.sync.SyncCompareInput.prepareInput(SyncCompareInput.java:207)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.ui.sync.CVSSyncCompareInput.access$3(CVSSyncCompareInput.java:1)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.ui.sync.CVSSyncCompareInput$5.run(CVSSyncCompareInput.java:323)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.ui.CVSUIPlugin.runWithRefresh(CVSUIPlugin.java:149)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.ui.sync.CVSSyncCompareInput$4.run(CVSSyncCompareInput.java:321)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ccvs.core.client.Session.run(Session.java:163)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.ui.sync.CVSSyncCompareInput.prepareInput(CVSSyncCompareInput.java:318)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ui.sync.SyncCompareInput$3.run(SyncCompareInput.java:361)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. sync a project but don't commit</Line>
          <Line>2. delete project.  Project remains in sync view (should be removed)</Line>
          <Line>3. "Refresh from Remote" will blow.</Line>
          <Line>Marking as F3 assuming there is an easy fix.  Will get approval.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1. sync a project but don't commit
2. delete project.  Project remains in sync view (should be removed)
3. "Refresh from Remote" will blow.
Marking as F3 assuming there is an easy fix.  Will get approval.


Exception below.
==========================
org.eclipse.team.internal.ccvs.core.CVSException: Error retrieving remote 
resource tree for /Test2. Parent is not managed by CVS.
	at 
org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteTreeFrom
Parent(CVSWorkspaceRoot.java:88)
	at 
org.eclipse.team.internal.ccvs.core.resources.CVSWorkspaceRoot.getRemoteSyncTree
(CVSWorkspaceRoot.java:130)
	at 
org.eclipse.team.internal.ccvs.ui.sync.CVSSyncCompareInput.createSyncElements
(CVSSyncCompareInput.java:216)
	at org.eclipse.team.internal.ui.sync.SyncCompareInput.prepareInput
(SyncCompareInput.java:207)
	at org.eclipse.team.internal.ccvs.ui.sync.CVSSyncCompareInput.access$3
(CVSSyncCompareInput.java:1)
	at org.eclipse.team.internal.ccvs.ui.sync.CVSSyncCompareInput$5.run
(CVSSyncCompareInput.java:323)
	at org.eclipse.team.internal.ccvs.ui.CVSUIPlugin.runWithRefresh
(CVSUIPlugin.java:149)
	at org.eclipse.team.internal.ccvs.ui.sync.CVSSyncCompareInput$4.run
(CVSSyncCompareInput.java:321)
	at org.eclipse.team.internal.ccvs.core.client.Session.run
(Session.java:163)
	at 
org.eclipse.team.internal.ccvs.ui.sync.CVSSyncCompareInput.prepareInput
(CVSSyncCompareInput.java:318)
	at org.eclipse.team.internal.ui.sync.SyncCompareInput$3.run
(SyncCompareInput.java:361)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(
Assigning to Mike to investigate.
Fixed and verified by James</WithStack>
    <WithOutStack>1. sync a project but don't commit
2. delete project.  Project remains in sync view (should be removed)
3. "Refresh from Remote" will blow.
Marking as F3 assuming there is an easy fix.  Will get approval.


Exception below.
==========================

	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(
Assigning to Mike to investigate.
Fixed and verified by James</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19874" />
    <CreationDate amount="2002-06-11 01:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Unable to read workbench state</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331255112">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.String$CaseInsensitiveComparator.compare(Unknown Source)</Frame>
          <Frame depth="1">java.lang.String.compareToIgnoreCase(Unknown Source)</Frame>
          <Frame depth="2">org.eclipse.debug.internal.ui.launchConfigurations.ShortcutComparator.compare(LaunchConfigurationManager.java:934)</Frame>
          <Frame depth="3">java.util.Arrays.mergeSort(Unknown Source)</Frame>
          <Frame depth="4">java.util.Arrays.sort(Unknown Source)</Frame>
          <Frame depth="5">java.util.Collections.sort(Unknown Source)</Frame>
          <Frame depth="6">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationManager.getLaunchShortcuts(LaunchConfigurationManager.java:853)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.actions.LaunchWithConfigurationAction.getMenu(LaunchWithConfigurationAction.java:110)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.fill(ActionContributionItem.java:227)</Frame>
          <Frame depth="9">org.eclipse.jface.action.SubContributionItem.fill(SubContributionItem.java:45)</Frame>
          <Frame depth="10">org.eclipse.jface.action.SubContributionItem.fill(SubContributionItem.java:45)</Frame>
          <Frame depth="11">org.eclipse.jface.action.MenuManager.update(MenuManager.java:528)</Frame>
          <Frame depth="12">org.eclipse.jface.action.MenuManager.update(MenuManager.java:444)</Frame>
          <Frame depth="13">org.eclipse.jface.action.MenuManager.fill(MenuManager.java:187)</Frame>
          <Frame depth="14">org.eclipse.jface.action.SubMenuManager.fill(SubMenuManager.java:65)</Frame>
          <Frame depth="15">org.eclipse.jface.action.SubMenuManager.fill(SubMenuManager.java:65)</Frame>
          <Frame depth="16">org.eclipse.jface.action.SubContributionItem.fill(SubContributionItem.java:45)</Frame>
          <Frame depth="17">org.eclipse.jface.action.MenuManager.update(MenuManager.java:528)</Frame>
          <Frame depth="18">org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.WorkbenchWindow.updateActionBars(WorkbenchWindow.java:1364)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.WorkbenchWindow.updateActionSets(WorkbenchWindow.java:1382)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.WorkbenchWindow$7.run(WorkbenchWindow.java:1185)</Frame>
          <Frame depth="22">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.WorkbenchWindow.setActivePage(WorkbenchWindow.java:1159)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1052)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1080)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.access$7(Workbench.java:1060)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench$6.run(Workbench.java:796)</Frame>
          <Frame depth="28">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:802)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.Platform.run(Platform.java:416)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:748)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.init(Workbench.java:562)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.run(Workbench.java:1153)</Frame>
          <Frame depth="33">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="34">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="35">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.basicRun(Main.java:244)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.run(Main.java:693)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.main(Main.java:526)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="16112" end="16213" />
        <code>((LaunchShortcutExtension)a).getLabel().compareToIgnoreCase(((LaunchShortcutExtension)b).getLabel());</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="23">
        <Lines>
          <Line>1) Running on a dual processor Dell workstation, Win2k, plenty of disk and</Line>
          <Line>memory.</Line>
          <Line />
          <Line>2)  The problem appears when I have more than one window open.  The pattern</Line>
          <Line>seems to be open a new window and it does not map to the screen (this is</Line>
          <Line>clearly part of the problem as well).  Exit/reopen - new window appears; if I</Line>
          <Line>restart at this point, no error.  Configure the new window by opening Java</Line>
          <Line>Plugin perspective, filter package view - work - exit.  On restart the first</Line>
          <Line>window reopens and I get the error on attempting to reopen the second.  Second</Line>
          <Line>window appears in a virgin state.</Line>
          <Line />
          <Line>3)  Logfile</Line>
          <Line>!SESSION Jun 10, 2002 19:57:38.781 ---------------------------------------------</Line>
          <Line>java.version=1.3.1_03</Line>
          <Line>java.vendor=Sun Microsystems Inc.</Line>
          <Line>BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_GB</Line>
          <Line>Command-line arguments: -os win32 -ws win32 -arch x86 -install file:E:/eclipse/</Line>
          <Line>!ENTRY org.eclipse.ui 4 2 Jun 10, 2002 19:57:38.781</Line>
          <Line>!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui".</Line>
          <Line>!STACK 0</Line>
          <Line />
          <Line />
          <Line>4)  Workbench.xml</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="8">
        <Lines>
          <Line>1)  Install F2.  Open a couple more windows and set them so they have a Plugin</Line>
          <Line>perspective.</Line>
          <Line>2)  Open the update perspective and take the latest/any update.</Line>
          <Line>3)  On my system I get the above mentioned error when the eclipse attempts to</Line>
          <Line>restart.</Line>
          <Line>4)  Restart by hand.  At this point one window usually opens correctly, the</Line>
          <Line>rest are reset.</Line>
          <Line>5)  The 'unmapped' window syndrome also appears(maybe) at this point.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>The above error pops up consistently when Eclipse starts up.  Relevant info 
follows:

1) Running on a dual processor Dell workstation, Win2k, plenty of disk and 
memory.

2)  The problem appears when I have more than one window open.  The pattern 
seems to be open a new window and it does not map to the screen (this is 
clearly part of the problem as well).  Exit/reopen - new window appears; if I 
restart at this point, no error.  Configure the new window by opening Java 
Plugin perspective, filter package view - work - exit.  On restart the first 
window reopens and I get the error on attempting to reopen the second.  Second 
window appears in a virgin state.

3)  Logfile
!SESSION Jun 10, 2002 19:57:38.781 ---------------------------------------------
java.version=1.3.1_03
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_GB
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:E:/eclipse/
!ENTRY org.eclipse.ui 4 2 Jun 10, 2002 19:57:38.781
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui".
!STACK 0
java.lang.NullPointerException
	at java.lang.String$CaseInsensitiveComparator.compare(Unknown Source)
	at java.lang.String.compareToIgnoreCase(Unknown Source)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.ShortcutComparator.compare
(LaunchConfigurationManager.java:934)
	at java.util.Arrays.mergeSort(Unknown Source)
	at java.util.Arrays.sort(Unknown Source)
	at java.util.Collections.sort(Unknown Source)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationManager.ge
tLaunchShortcuts(LaunchConfigurationManager.java:853)
	at 
org.eclipse.debug.internal.ui.actions.LaunchWithConfigurationAction.getMenu
(LaunchWithConfigurationAction.java:110)
	at org.eclipse.jface.action.ActionContributionItem.fill
(ActionContributionItem.java:227)
	at org.eclipse.jface.action.SubContributionItem.fill
(SubContributionItem.java:45)
	at org.eclipse.jface.action.SubContributionItem.fill
(SubContributionItem.java:45)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:528)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:444)
	at org.eclipse.jface.action.MenuManager.fill(MenuManager.java:187)
	at org.eclipse.jface.action.SubMenuManager.fill(SubMenuManager.java:65)
	at org.eclipse.jface.action.SubMenuManager.fill(SubMenuManager.java:65)
	at org.eclipse.jface.action.SubContributionItem.fill
(SubContributionItem.java:45)
	at org.eclipse.jface.action.MenuManager.update(MenuManager.java:528)
	at org.eclipse.jface.action.MenuManager.updateAll(MenuManager.java:575)
	at org.eclipse.ui.internal.WorkbenchWindow.updateActionBars
(WorkbenchWindow.java:1364)
	at org.eclipse.ui.internal.WorkbenchWindow.updateActionSets
(WorkbenchWindow.java:1382)
	at org.eclipse.ui.internal.WorkbenchWindow$7.run
(WorkbenchWindow.java:1185)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)
	at org.eclipse.ui.internal.WorkbenchWindow.setActivePage
(WorkbenchWindow.java:1159)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState
(WorkbenchWindow.java:1052)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1080)
	at org.eclipse.ui.internal.Workbench.access$7(Workbench.java:1060)
	at org.eclipse.ui.internal.Workbench$6.run(Workbench.java:796)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:802)
	at org.eclipse.core.runtime.Platform.run(Platform.java:416)
	at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState
(Workbench.java:748)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:562)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1153)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:244)
	at org.eclipse.core.launcher.Main.run(Main.java:693)
	at org.eclipse.core.launcher.Main.main(Main.java:526)

4)  Workbench.xml

Editor" 
path="/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/IPDEEditorPage.
java" title="IPDEEditorPage.java" 
tooltip="org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/IPDEEditorPag
e.java" workbook="DefaultEditorWorkbook"&gt;&lt;input 
factoryID="org.eclipse.ui.part.FileEditorInputFactory" 
path="/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/IPDEEditorPage.
java"/&gt;&lt;/editor&gt;&lt;editor id="org.eclipse.jdt.ui.CompilationUnitEditor" 
path="/org.eclipse.update.ui.forms/src/org/eclipse/update/ui/forms/internal/IFor
mPage.java" title="IFormPage.java" 
tooltip="org.eclipse.update.ui.forms/src/org/eclipse/update/ui/forms/internal/IF
ormPage.java" workbook="DefaultEditorWorkbook"&gt;&lt;input 
factoryID="org.eclipse.ui.part.FileEditorInputFactory" 
path="/org.eclipse.update.ui.forms/src/org/eclipse/update/ui/forms/internal/IFor
mPage.java"/&gt;&lt;/editor&gt;&lt;/editors&gt;&lt;views&gt;&lt;view 
id="org.eclipse.jdt.ui.TypesView"&gt;&lt;viewState workingSetName=""&gt;&lt;customFilters 
userDefinedPatternsEnabled="false"/&gt;&lt;/viewState&gt;&lt;/view&gt;&lt;view 
id="org.eclipse.jdt.ui.MembersView"&gt;&lt;viewState hidefields="true" 
hidenonpublic="false" hidestatic="false"/&gt;&lt;/view&gt;&lt;view 
id="org.eclipse.jdt.ui.ProjectsView"&gt;&lt;viewState 
workingSetName="PDE"&gt;&lt;customFilters 
userDefinedPatternsEnabled="false"&gt;&lt;xmlDefinedFilters&gt;&lt;child 
filterId="org.eclipse.jdt.ui.PackagesView.LibraryFilter" 
isEnabled="true"/&gt;&lt;child filterId="org.eclipse.pde.ui.BinaryProjectFilter2" 
isEnabled="false"/&gt;&lt;/xmlDefinedFilters&gt;&lt;/customFilters&gt;&lt;/viewState&gt;&lt;/view&gt;&lt;view 
id="org.eclipse.search.SearchResultView"&gt;&lt;viewState&gt;&lt;defaultSorters&gt;&lt;element 
pageId="org.eclipse.jdt.ui.JavaSearchPage" 
sorterId="org.eclipse.search.internal.ui.ElementNameSorter"/&gt;&lt;/defaultSorters&gt;&lt;s
orters&gt;&lt;element pageId="org.eclipse.jdt.ui.JavaSearchPage" 
sorterId="org.eclipse.search.internal.ui.ElementNameSorter"/&gt;&lt;/sorters&gt;&lt;/viewSta
te&gt;&lt;/view&gt;&lt;view id="org.eclipse.jdt.ui.PackagesView"&gt;&lt;viewState 
workingSetName=""&gt;&lt;customFilters 
userDefinedPatternsEnabled="false"&gt;&lt;xmlDefinedFilters&gt;&lt;child 
filterId="org.eclipse.jdt.internal.ui.PackagesView.EmptyPackageFilter" 
isEnabled="false"/&gt;&lt;child 
filterId="org.eclipse.jdt.internal.ui.PackagesView.EmptyInnerPackageFilter" 
isEnabled="true"/&gt;&lt;/xmlDefinedFilters&gt;&lt;/customFilters&gt;&lt;/viewState&gt;&lt;/view&gt;&lt;/views
&gt;&lt;perspectives activePart="org.eclipse.search.SearchResultView" 
activePerspective="org.eclipse.jdt.ui.JavaBrowsingPerspective"&gt;&lt;perspective 
editorAreaVisible="1" version="0.016"&gt;&lt;descriptor 
class="org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPerspectiveFactory" 
file="org.eclipse.jdt.ui.JavaBrowsingPerspective_persp.xml" 
id="org.eclipse.jdt.ui.JavaBrowsingPerspective" label="Java 
Browsing"/&gt;&lt;actionSet id="org.eclipse.cdt.cpp.ui.CppActionSet"/&gt;&lt;actionSet 
id="org.eclipse.cdt.pa.ui.PAActionSet"/&gt;&lt;actionSet 
id="org.eclipse.help.internal.ui.HelpActionSet"/&gt;&lt;actionSet 
id="org.eclipse.search.searchActionSet"/&gt;&lt;actionSet 
id="org_eclipse_ui_examples_readmetool_actionSet"/&gt;&lt;actionSet 
id="org.eclipse.ui.externaltools.ExternalToolsSet"/&gt;&lt;actionSet 
id="org.eclipse.update.ui.softwareUpdates"/&gt;&lt;actionSet 
id="org.eclipse.debug.ui.launchActionSet"/&gt;&lt;actionSet 
id="org.eclipse.jdt.ui.JavaActionSet"/&gt;&lt;actionSet 
id="org.eclipse.jdt.ui.JavaElementCreationActionSet"/&gt;&lt;actionSet 
id="org.eclipse.jdt.debug.ui.JDTDebugActionSet"/&gt;&lt;actionSet 
id="org.eclipse.jdt.ui.CodingActionSet"/&gt;&lt;actionSet 
id="org.eclipse.jdt.ui.SearchActionSet"/&gt;&lt;actionSet 
id="org.eclipse.jdt.ui.A_OpenActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.cdt.cpp.ui.CppActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.cdt.pa.ui.PAActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.help.internal.ui.HelpActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.search.searchActionSet"/&gt;&lt;alwaysOnActionSet 
id="org_eclipse_ui_examples_readmetool_actionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.ui.externaltools.ExternalToolsSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.update.ui.softwareUpdates"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.debug.ui.launchActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.jdt.ui.JavaActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.jdt.ui.JavaElementCreationActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.jdt.debug.ui.JDTDebugActionSet"/&gt;&lt;show_view_action 
id="org.eclipse.jdt.ui.TypeHierarchy"/&gt;&lt;show_view_action 
id="org.eclipse.search.SearchResultView"/&gt;&lt;show_view_action 
id="org.eclipse.debug.ui.ConsoleView"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.ContentOutline"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.TaskList"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.ResourceNavigator"/&gt;&lt;new_wizard_action 
id="org.eclipse.jdt.ui.wizards.NewPackageCreationWizard"/&gt;&lt;new_wizard_action 
id="org.eclipse.jdt.ui.wizards.NewClassCreationWizard"/&gt;&lt;new_wizard_action 
id="org.eclipse.jdt.ui.wizards.NewInterfaceCreationWizard"/&gt;&lt;new_wizard_action 
id="org.eclipse.jdt.ui.wizards.NewSnippetCreationWizard"/&gt;&lt;perspective_action 
id="org.eclipse.jdt.ui.JavaBrowsingPerspective"/&gt;&lt;perspective_action 
id="org.eclipse.jdt.ui.JavaPerspective"/&gt;&lt;perspective_action 
id="org.eclipse.debug.ui.DebugPerspective"/&gt;&lt;view 
id="org.eclipse.jdt.ui.ProjectsView"/&gt;&lt;view 
id="org.eclipse.jdt.ui.PackagesView"/&gt;&lt;view 
id="org.eclipse.jdt.ui.TypesView"/&gt;&lt;view 
id="org.eclipse.jdt.ui.MembersView"/&gt;&lt;view 
id="org.eclipse.search.SearchResultView"/&gt;&lt;layout&gt;&lt;mainWindow&gt;&lt;info 
part="org.eclipse.jdt.ui.ProjectsView"/&gt;&lt;info folder="true" part="left" 
ratio="0.2597826" relationship="4" 
relative="org.eclipse.jdt.ui.ProjectsView"&gt;&lt;folder&gt;&lt;page 
content="org.eclipse.jdt.ui.TypeHierarchy" label="Hierarchy"/&gt;&lt;page 
content="org.eclipse.ui.views.ContentOutline" label="Outline"/&gt;&lt;page 
content="org.eclipse.jdt.ui.PackageExplorer" label="Packages"/&gt;&lt;page 
content="org.eclipse.ui.views.ResourceNavigator" 
label="Navigator"/&gt;&lt;/folder&gt;&lt;/info&gt;&lt;info part="org.eclipse.ui.editorss" 
ratio="0.25" relationship="2" relative="left"/&gt;&lt;info folder="true" 
part="org.eclipse.ui.internal.PartTabFolder@4189d0" ratio="0.75" 
relationship="4" relative="org.eclipse.ui.editorss"&gt;&lt;folder 
activePageID="org.eclipse.search.SearchResultView"&gt;&lt;page 
content="org.eclipse.ui.views.TaskList" label="Tasks"/&gt;&lt;page 
content="org.eclipse.debug.ui.ConsoleView" label="Console"/&gt;&lt;page 
content="org.eclipse.ui.views.BookmarkNavigator" label="Bookmarks"/&gt;&lt;page 
content="org.eclipse.ui.examples.readmetool.views.SectionsView" label="Readme 
Sections"/&gt;&lt;page content="de.mvmsoft.slime.core.overview" label="Diagram 
Overview"/&gt;&lt;page content="org.eclipse.search.SearchResultView" 
label="Search"/&gt;&lt;/folder&gt;&lt;/info&gt;&lt;info part="org.eclipse.jdt.ui.PackagesView" 
ratio="0.25" relationship="2" relative="org.eclipse.jdt.ui.ProjectsView"/&gt;&lt;info 
part="org.eclipse.jdt.ui.TypesView" ratio="0.33" relationship="2" 
relative="org.eclipse.jdt.ui.PackagesView"/&gt;&lt;info 
part="org.eclipse.jdt.ui.MembersView" ratio="0.5" relationship="2" 
relative="org.eclipse.jdt.ui.TypesView"/&gt;&lt;/mainWindow&gt;&lt;/layout&gt;&lt;toolbarLayout&gt;&lt;i
temSize x="130" y="22"/&gt;&lt;itemSize x="59" y="22"/&gt;&lt;itemSize x="53" 
y="22"/&gt;&lt;itemSize x="93" y="22"/&gt;&lt;itemSize x="36" y="22"/&gt;&lt;itemSize x="128" 
y="22"/&gt;&lt;itemSize x="36" y="22"/&gt;&lt;itemSize x="53" y="22"/&gt;&lt;itemSize x="82" 
y="22"/&gt;&lt;itemSize x="105" y="22"/&gt;&lt;item id="org.eclipse.ui.internal"/&gt;&lt;item 
id="org.eclipse.cdt.cpp.ui.CppActionSet"/&gt;&lt;item 
id="org.eclipse.cdt.pa.ui.PAActionSet"/&gt;&lt;item 
id="org.eclipse.debug.ui.launchActionSet"/&gt;&lt;item 
id="org.eclipse.jdt.ui.JavaActionSet"/&gt;&lt;item 
id="org.eclipse.jdt.ui.JavaElementCreationActionSet"/&gt;&lt;item 
id="org.eclipse.search.searchActionSet"/&gt;&lt;item 
id="org.eclipse.ui.externaltools.ExternalToolsSet"/&gt;&lt;item 
id="org_eclipse_ui_examples_readmetool_actionSet"/&gt;&lt;item 
id="org.eclipse.jdt.ui.CompilationUnitEditor"/&gt;&lt;/toolbarLayout&gt;&lt;/perspective&gt;&lt;/p
erspectives&gt;&lt;input factoryID="org.eclipse.ui.internal.model.ResourceFactory" 
path="/"/&gt;&lt;/page&gt;&lt;/window&gt;&lt;window height="600" toolbarLayout="0" width="800" 
x="245" y="270"&gt;&lt;page focus="true"&gt;&lt;editors&gt;&lt;editorArea 
activeWorkbook="DefaultEditorWorkbook"&gt;&lt;info 
part="DefaultEditorWorkbook"/&gt;&lt;/editorArea&gt;&lt;/editors&gt;&lt;views&gt;&lt;view 
id="org.eclipse.ui.views.ResourceNavigator"&gt;&lt;viewState horizontalPosition="0" 
sorter="1" verticalPosition="0"/&gt;&lt;/view&gt;&lt;view 
id="org.eclipse.ui.views.ContentOutline"&gt;&lt;viewState/&gt;&lt;/view&gt;&lt;view 
id="org.eclipse.ui.views.TaskList"&gt;&lt;viewState sorterColumn="5" 
sorterReversed="0" topIndex="0"&gt;&lt;filter completionFilter="0" 
descriptionFilter="" descriptionFilterKind="0" filterOnCompletion="0" 
filterOnDescription="0" filterOnMarkerLimit="1" filterOnPriority="0" 
filterOnSeverity="0" markerLimit="2000" onResource="0" priorityFilter="0" 
severityFilter="0"&gt;&lt;type id="org.eclipse.core.resources.problemmarker"/&gt;&lt;type 
id="org.eclipse.core.resources.taskmarker"/&gt;&lt;/filter&gt;&lt;column number="3" 
width="207"/&gt;&lt;column number="4" width="78"/&gt;&lt;column number="5" 
width="155"/&gt;&lt;column number="6" 
width="61"/&gt;&lt;/viewState&gt;&lt;/view&gt;&lt;/views&gt;&lt;perspectives 
activePerspective="org.eclipse.ui.resourcePerspective"&gt;&lt;perspective 
editorAreaVisible="1" version="0.016"&gt;&lt;descriptor 
class="org.eclipse.ui.internal.ResourcePerspective" 
file="org.eclipse.ui.resourcePerspective_persp.xml" 
id="org.eclipse.ui.resourcePerspective" label="Resource"/&gt;&lt;actionSet 
id="org.eclipse.cdt.cpp.ui.CppActionSet"/&gt;&lt;actionSet 
id="org.eclipse.cdt.pa.ui.PAActionSet"/&gt;&lt;actionSet 
id="org.eclipse.help.internal.ui.HelpActionSet"/&gt;&lt;actionSet 
id="org.eclipse.search.searchActionSet"/&gt;&lt;actionSet 
id="org_eclipse_ui_examples_readmetool_actionSet"/&gt;&lt;actionSet 
id="org.eclipse.ui.externaltools.ExternalToolsSet"/&gt;&lt;actionSet 
id="org.eclipse.update.ui.softwareUpdates"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.cdt.cpp.ui.CppActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.cdt.pa.ui.PAActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.help.internal.ui.HelpActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.search.searchActionSet"/&gt;&lt;alwaysOnActionSet 
id="org_eclipse_ui_examples_readmetool_actionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.ui.externaltools.ExternalToolsSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.update.ui.softwareUpdates"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.ResourceNavigator"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.BookmarkNavigator"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.ContentOutline"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.PropertySheet"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.TaskList"/&gt;&lt;new_wizard_action 
id="org.eclipse.ui.wizards.new.folder"/&gt;&lt;new_wizard_action 
id="org.eclipse.ui.wizards.new.file"/&gt;&lt;perspective_action 
id="org.eclipse.cdt.cpp.ui.CppPerspective"/&gt;&lt;perspective_action 
id="org.eclipse.jdt.ui.JavaPerspective"/&gt;&lt;perspective_action 
id="org.eclipse.jdt.ui.JavaBrowsingPerspective"/&gt;&lt;perspective_action 
id="org.eclipse.team.cvs.ui.cvsPerspective"/&gt;&lt;view 
id="org.eclipse.ui.views.ResourceNavigator"/&gt;&lt;view 
id="org.eclipse.ui.views.ContentOutline"/&gt;&lt;view 
id="org.eclipse.ui.views.TaskList"/&gt;&lt;layout&gt;&lt;mainWindow&gt;&lt;info folder="true" 
part="topLeft"&gt;&lt;folder 
activePageID="org.eclipse.ui.views.ResourceNavigator"&gt;&lt;page 
content="org.eclipse.ui.views.BookmarkNavigator" label="Bookmarks"/&gt;&lt;page 
content="org.eclipse.team.ccvs.ui.RepositoriesView" label=""/&gt;&lt;page 
content="org.eclipse.team.ui.target.SiteExplorerView" label=""/&gt;&lt;page 
content="org.eclipse.ui.views.ResourceNavigator" 
label="Navigator"/&gt;&lt;/folder&gt;&lt;/info&gt;&lt;info part="org.eclipse.ui.editorss" 
ratio="0.26" relationship="2" relative="topLeft"/&gt;&lt;info folder="true" 
part="org.eclipse.ui.internal.PartTabFolder@7c3828" ratio="0.66" 
relationship="4" relative="org.eclipse.ui.editorss"&gt;&lt;folder 
activePageID="org.eclipse.ui.views.TaskList"&gt;&lt;page 
content="org.eclipse.team.ccvs.ui.console" label=""/&gt;&lt;page 
content="org.eclipse.team.ccvs.ui.HistoryView" label=""/&gt;&lt;page 
content="org.eclipse.team.ui.sync.SyncView" label=""/&gt;&lt;page 
content="org.eclipse.ui.views.TaskList" label="Tasks"/&gt;&lt;/folder&gt;&lt;/info&gt;&lt;info 
folder="true" part="bottomLeft" ratio="0.5" relationship="4" 
relative="topLeft"&gt;&lt;folder 
activePageID="org.eclipse.ui.views.ContentOutline"&gt;&lt;page 
content="org.eclipse.ui.views.ContentOutline" 
label="Outline"/&gt;&lt;/folder&gt;&lt;/info&gt;&lt;/mainWindow&gt;&lt;/layout&gt;&lt;toolbarLayout&gt;&lt;itemSize 
x="130" y="22"/&gt;&lt;itemSize x="59" y="22"/&gt;&lt;itemSize x="53" y="22"/&gt;&lt;itemSize 
x="36" y="22"/&gt;&lt;itemSize x="53" y="22"/&gt;&lt;itemSize x="82" y="22"/&gt;&lt;item 
id="org.eclipse.ui.internal"/&gt;&lt;item 
id="org.eclipse.cdt.cpp.ui.CppActionSet"/&gt;&lt;item 
id="org.eclipse.cdt.pa.ui.PAActionSet"/&gt;&lt;item 
id="org.eclipse.search.searchActionSet"/&gt;&lt;item 
id="org.eclipse.ui.externaltools.ExternalToolsSet"/&gt;&lt;item 
id="org_eclipse_ui_examples_readmetool_actionSet"/&gt;&lt;/toolbarLayout&gt;&lt;/perspective
&gt;&lt;/perspectives&gt;&lt;input 
factoryID="org.eclipse.ui.internal.model.ResourceFactory" 
path="/"/&gt;&lt;/page&gt;&lt;/window&gt;&lt;mruList&gt;&lt;file 
factoryID="org.eclipse.ui.part.FileEditorInputFactory" 
id="org.eclipse.jdt.ui.CompilationUnitEditor"&gt;&lt;persistable 
path="/org.eclipse.update.ui.forms/src/org/eclipse/update/ui/forms/internal/IFor
mPage.java"/&gt;&lt;/file&gt;&lt;file 
factoryID="org.eclipse.jdt.ui.ClassFileEditorInputFactory" 
id="org.eclipse.jdt.ui.ClassFileEditor"&gt;&lt;persistable 
org.eclipse.jdt.ui.ClassFileIdentifier="=com.objectforge.mascot.acpeditor/E:/ecl
ipse/plugins/org.eclipse.ui_2.0.0.v20020606/workbench.jar&amp;lt;org.eclipse.ui
(IEditorPart.class"/&gt;&lt;/file&gt;&lt;file 
factoryID="org.eclipse.ui.part.FileEditorInputFactory" 
id="org.eclipse.jdt.ui.CompilationUnitEditor"&gt;&lt;persistable 
path="/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/IPDEEditorPage.
java"/&gt;&lt;/file&gt;&lt;file factoryID="org.eclipse.ui.part.FileEditorInputFactory" 
id="org.eclipse.jdt.ui.CompilationUnitEditor"&gt;&lt;persistable 
path="/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/PDEFormPage.jav
a"/&gt;&lt;/file&gt;&lt;/mruList&gt;&lt;perspHistory&gt;&lt;desc 
IMemento.internal.id="org.eclipse.update.ui.UpdatePerspective"/&gt;&lt;desc 
IMemento.internal.id="org.eclipse.jdt.ui.JavaBrowsingPerspective"/&gt;&lt;desc 
IMemento.internal.id="org.eclipse.debug.ui.DebugPerspective"/&gt;&lt;desc 
IMemento.internal.id="org.eclipse.pde.ui.PDEPerspective"/&gt;&lt;desc 
IMemento.internal.id="org.eclipse.jdt.ui.JavaPerspective"/&gt;&lt;desc 
IMemento.internal.id="org.eclipse.team.cvs.ui.cvsPerspective"/&gt;&lt;desc 
IMemento.internal.id="org.eclipse.ui.resourcePerspective"/&gt;&lt;/perspHistory&gt;&lt;/work
bench&gt;
Error occurs in platform debug UI.
Please investigate.
I cannot duplicate this problem.  Allan, can you provide an explicit set of steps to duplicate?  
Also, what build are you running?  And what do you mean by "The pattern seems to be open a new window 
and it does not map to the screen"? Do you mean you choose the 'New Window' action from the Window 
menu, and nothing happens?  Have you created any launch configurations in your workspace prior to 
seeing this problem?  If so, are any of them shared launch configurations?  Any and all context you 
can provide for recreating this problem would be greatly appreciated.  Thanks.
The underlying cause of this bug may be more subtle, but the cause of the 
NPE in the code is obvious. 

The specified line in the stack trace reads:
return 
((LaunchShortcutExtension)a).getLabel().compareToIgnoreCase(((LaunchShortcutExtension)b).getLabel());

The JavaDoc on LaunchShortcutExtension#getLabel() reads:
  * @return the label of this shortcut, or &lt;code&gt;null&lt;/code&gt; if not
  *  specified

The call to b.getLabel() is returning null. We should defend against null 
in ShortcutComparator.compare(Object, Object).

Additionally, we should also investigate why the label is null.
I just came to the same conclusion... Looking at the code, the only thing I can 
see is that one of the shortcuts is returning "null" for a label, and the 
compare is failing in the Sun class libs. We can guard against this 
in "ShortcutComparator".
marking as F3 candidate
The important question is - are you contributing a "launch shortcut", that does 
not specify a label argument?
All of this started when I updated my F2 installation.  You are correct in your 
interpretion of '...window does not open'.  The sequence was as follows:

1)  Install F2.  Open a couple more windows and set them so they have a Plugin 
perspective.
2)  Open the update perspective and take the latest/any update.
3)  On my system I get the above mentioned error when the eclipse attempts to 
restart.
4)  Restart by hand.  At this point one window usually opens correctly, the 
rest are reset.
5)  The 'unmapped' window syndrome also appears(maybe) at this point.

From the above it is clear to me that this problem is somehow entwined with the 
update process.  I have also note that if you update your systems and have 
variables set to plugin directories these variable are not pointing the current 
versions after the update.  This can be timeconsuming to fix.
We have added protection against "null" labels. Moving to Update for 
comment/investigation.
Too old - we didn't have this problem appear for a long time. Please reopen if 
you see it again.</WithStack>
    <WithOutStack>The above error pops up consistently when Eclipse starts up.  Relevant info 
follows:

1) Running on a dual processor Dell workstation, Win2k, plenty of disk and 
memory.

2)  The problem appears when I have more than one window open.  The pattern 
seems to be open a new window and it does not map to the screen (this is 
clearly part of the problem as well).  Exit/reopen - new window appears; if I 
restart at this point, no error.  Configure the new window by opening Java 
Plugin perspective, filter package view - work - exit.  On restart the first 
window reopens and I get the error on attempting to reopen the second.  Second 
window appears in a virgin state.

3)  Logfile
!SESSION Jun 10, 2002 19:57:38.781 ---------------------------------------------
java.version=1.3.1_03
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_GB
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:E:/eclipse/
!ENTRY org.eclipse.ui 4 2 Jun 10, 2002 19:57:38.781
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui".
!STACK 0


4)  Workbench.xml

Editor" 
path="/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/IPDEEditorPage.
java" title="IPDEEditorPage.java" 
tooltip="org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/IPDEEditorPag
e.java" workbook="DefaultEditorWorkbook"&gt;&lt;input 
factoryID="org.eclipse.ui.part.FileEditorInputFactory" 
path="/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/IPDEEditorPage.
java"/&gt;&lt;/editor&gt;&lt;editor id="org.eclipse.jdt.ui.CompilationUnitEditor" 
path="/org.eclipse.update.ui.forms/src/org/eclipse/update/ui/forms/internal/IFor
mPage.java" title="IFormPage.java" 
tooltip="org.eclipse.update.ui.forms/src/org/eclipse/update/ui/forms/internal/IF
ormPage.java" workbook="DefaultEditorWorkbook"&gt;&lt;input 
factoryID="org.eclipse.ui.part.FileEditorInputFactory" 
path="/org.eclipse.update.ui.forms/src/org/eclipse/update/ui/forms/internal/IFor
mPage.java"/&gt;&lt;/editor&gt;&lt;/editors&gt;&lt;views&gt;&lt;view 
id="org.eclipse.jdt.ui.TypesView"&gt;&lt;viewState workingSetName=""&gt;&lt;customFilters 
userDefinedPatternsEnabled="false"/&gt;&lt;/viewState&gt;&lt;/view&gt;&lt;view 
id="org.eclipse.jdt.ui.MembersView"&gt;&lt;viewState hidefields="true" 
hidenonpublic="false" hidestatic="false"/&gt;&lt;/view&gt;&lt;view 
id="org.eclipse.jdt.ui.ProjectsView"&gt;&lt;viewState 
workingSetName="PDE"&gt;&lt;customFilters 
userDefinedPatternsEnabled="false"&gt;&lt;xmlDefinedFilters&gt;&lt;child 
filterId="org.eclipse.jdt.ui.PackagesView.LibraryFilter" 
isEnabled="true"/&gt;&lt;child filterId="org.eclipse.pde.ui.BinaryProjectFilter2" 
isEnabled="false"/&gt;&lt;/xmlDefinedFilters&gt;&lt;/customFilters&gt;&lt;/viewState&gt;&lt;/view&gt;&lt;view 
id="org.eclipse.search.SearchResultView"&gt;&lt;viewState&gt;&lt;defaultSorters&gt;&lt;element 
pageId="org.eclipse.jdt.ui.JavaSearchPage" 
sorterId="org.eclipse.search.internal.ui.ElementNameSorter"/&gt;&lt;/defaultSorters&gt;&lt;s
orters&gt;&lt;element pageId="org.eclipse.jdt.ui.JavaSearchPage" 
sorterId="org.eclipse.search.internal.ui.ElementNameSorter"/&gt;&lt;/sorters&gt;&lt;/viewSta
te&gt;&lt;/view&gt;&lt;view id="org.eclipse.jdt.ui.PackagesView"&gt;&lt;viewState 
workingSetName=""&gt;&lt;customFilters 
userDefinedPatternsEnabled="false"&gt;&lt;xmlDefinedFilters&gt;&lt;child 
filterId="org.eclipse.jdt.internal.ui.PackagesView.EmptyPackageFilter" 
isEnabled="false"/&gt;&lt;child 
filterId="org.eclipse.jdt.internal.ui.PackagesView.EmptyInnerPackageFilter" 
isEnabled="true"/&gt;&lt;/xmlDefinedFilters&gt;&lt;/customFilters&gt;&lt;/viewState&gt;&lt;/view&gt;&lt;/views
&gt;&lt;perspectives activePart="org.eclipse.search.SearchResultView" 
activePerspective="org.eclipse.jdt.ui.JavaBrowsingPerspective"&gt;&lt;perspective 
editorAreaVisible="1" version="0.016"&gt;&lt;descriptor 
class="org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPerspectiveFactory" 
file="org.eclipse.jdt.ui.JavaBrowsingPerspective_persp.xml" 
id="org.eclipse.jdt.ui.JavaBrowsingPerspective" label="Java 
Browsing"/&gt;&lt;actionSet id="org.eclipse.cdt.cpp.ui.CppActionSet"/&gt;&lt;actionSet 
id="org.eclipse.cdt.pa.ui.PAActionSet"/&gt;&lt;actionSet 
id="org.eclipse.help.internal.ui.HelpActionSet"/&gt;&lt;actionSet 
id="org.eclipse.search.searchActionSet"/&gt;&lt;actionSet 
id="org_eclipse_ui_examples_readmetool_actionSet"/&gt;&lt;actionSet 
id="org.eclipse.ui.externaltools.ExternalToolsSet"/&gt;&lt;actionSet 
id="org.eclipse.update.ui.softwareUpdates"/&gt;&lt;actionSet 
id="org.eclipse.debug.ui.launchActionSet"/&gt;&lt;actionSet 
id="org.eclipse.jdt.ui.JavaActionSet"/&gt;&lt;actionSet 
id="org.eclipse.jdt.ui.JavaElementCreationActionSet"/&gt;&lt;actionSet 
id="org.eclipse.jdt.debug.ui.JDTDebugActionSet"/&gt;&lt;actionSet 
id="org.eclipse.jdt.ui.CodingActionSet"/&gt;&lt;actionSet 
id="org.eclipse.jdt.ui.SearchActionSet"/&gt;&lt;actionSet 
id="org.eclipse.jdt.ui.A_OpenActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.cdt.cpp.ui.CppActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.cdt.pa.ui.PAActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.help.internal.ui.HelpActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.search.searchActionSet"/&gt;&lt;alwaysOnActionSet 
id="org_eclipse_ui_examples_readmetool_actionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.ui.externaltools.ExternalToolsSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.update.ui.softwareUpdates"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.debug.ui.launchActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.jdt.ui.JavaActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.jdt.ui.JavaElementCreationActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.jdt.debug.ui.JDTDebugActionSet"/&gt;&lt;show_view_action 
id="org.eclipse.jdt.ui.TypeHierarchy"/&gt;&lt;show_view_action 
id="org.eclipse.search.SearchResultView"/&gt;&lt;show_view_action 
id="org.eclipse.debug.ui.ConsoleView"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.ContentOutline"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.TaskList"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.ResourceNavigator"/&gt;&lt;new_wizard_action 
id="org.eclipse.jdt.ui.wizards.NewPackageCreationWizard"/&gt;&lt;new_wizard_action 
id="org.eclipse.jdt.ui.wizards.NewClassCreationWizard"/&gt;&lt;new_wizard_action 
id="org.eclipse.jdt.ui.wizards.NewInterfaceCreationWizard"/&gt;&lt;new_wizard_action 
id="org.eclipse.jdt.ui.wizards.NewSnippetCreationWizard"/&gt;&lt;perspective_action 
id="org.eclipse.jdt.ui.JavaBrowsingPerspective"/&gt;&lt;perspective_action 
id="org.eclipse.jdt.ui.JavaPerspective"/&gt;&lt;perspective_action 
id="org.eclipse.debug.ui.DebugPerspective"/&gt;&lt;view 
id="org.eclipse.jdt.ui.ProjectsView"/&gt;&lt;view 
id="org.eclipse.jdt.ui.PackagesView"/&gt;&lt;view 
id="org.eclipse.jdt.ui.TypesView"/&gt;&lt;view 
id="org.eclipse.jdt.ui.MembersView"/&gt;&lt;view 
id="org.eclipse.search.SearchResultView"/&gt;&lt;layout&gt;&lt;mainWindow&gt;&lt;info 
part="org.eclipse.jdt.ui.ProjectsView"/&gt;&lt;info folder="true" part="left" 
ratio="0.2597826" relationship="4" 
relative="org.eclipse.jdt.ui.ProjectsView"&gt;&lt;folder&gt;&lt;page 
content="org.eclipse.jdt.ui.TypeHierarchy" label="Hierarchy"/&gt;&lt;page 
content="org.eclipse.ui.views.ContentOutline" label="Outline"/&gt;&lt;page 
content="org.eclipse.jdt.ui.PackageExplorer" label="Packages"/&gt;&lt;page 
content="org.eclipse.ui.views.ResourceNavigator" 
label="Navigator"/&gt;&lt;/folder&gt;&lt;/info&gt;&lt;info part="org.eclipse.ui.editorss" 
ratio="0.25" relationship="2" relative="left"/&gt;&lt;info folder="true" 
part="org.eclipse.ui.internal.PartTabFolder@4189d0" ratio="0.75" 
relationship="4" relative="org.eclipse.ui.editorss"&gt;&lt;folder 
activePageID="org.eclipse.search.SearchResultView"&gt;&lt;page 
content="org.eclipse.ui.views.TaskList" label="Tasks"/&gt;&lt;page 
content="org.eclipse.debug.ui.ConsoleView" label="Console"/&gt;&lt;page 
content="org.eclipse.ui.views.BookmarkNavigator" label="Bookmarks"/&gt;&lt;page 
content="org.eclipse.ui.examples.readmetool.views.SectionsView" label="Readme 
Sections"/&gt;&lt;page content="de.mvmsoft.slime.core.overview" label="Diagram 
Overview"/&gt;&lt;page content="org.eclipse.search.SearchResultView" 
label="Search"/&gt;&lt;/folder&gt;&lt;/info&gt;&lt;info part="org.eclipse.jdt.ui.PackagesView" 
ratio="0.25" relationship="2" relative="org.eclipse.jdt.ui.ProjectsView"/&gt;&lt;info 
part="org.eclipse.jdt.ui.TypesView" ratio="0.33" relationship="2" 
relative="org.eclipse.jdt.ui.PackagesView"/&gt;&lt;info 
part="org.eclipse.jdt.ui.MembersView" ratio="0.5" relationship="2" 
relative="org.eclipse.jdt.ui.TypesView"/&gt;&lt;/mainWindow&gt;&lt;/layout&gt;&lt;toolbarLayout&gt;&lt;i
temSize x="130" y="22"/&gt;&lt;itemSize x="59" y="22"/&gt;&lt;itemSize x="53" 
y="22"/&gt;&lt;itemSize x="93" y="22"/&gt;&lt;itemSize x="36" y="22"/&gt;&lt;itemSize x="128" 
y="22"/&gt;&lt;itemSize x="36" y="22"/&gt;&lt;itemSize x="53" y="22"/&gt;&lt;itemSize x="82" 
y="22"/&gt;&lt;itemSize x="105" y="22"/&gt;&lt;item id="org.eclipse.ui.internal"/&gt;&lt;item 
id="org.eclipse.cdt.cpp.ui.CppActionSet"/&gt;&lt;item 
id="org.eclipse.cdt.pa.ui.PAActionSet"/&gt;&lt;item 
id="org.eclipse.debug.ui.launchActionSet"/&gt;&lt;item 
id="org.eclipse.jdt.ui.JavaActionSet"/&gt;&lt;item 
id="org.eclipse.jdt.ui.JavaElementCreationActionSet"/&gt;&lt;item 
id="org.eclipse.search.searchActionSet"/&gt;&lt;item 
id="org.eclipse.ui.externaltools.ExternalToolsSet"/&gt;&lt;item 
id="org_eclipse_ui_examples_readmetool_actionSet"/&gt;&lt;item 
id="org.eclipse.jdt.ui.CompilationUnitEditor"/&gt;&lt;/toolbarLayout&gt;&lt;/perspective&gt;&lt;/p
erspectives&gt;&lt;input factoryID="org.eclipse.ui.internal.model.ResourceFactory" 
path="/"/&gt;&lt;/page&gt;&lt;/window&gt;&lt;window height="600" toolbarLayout="0" width="800" 
x="245" y="270"&gt;&lt;page focus="true"&gt;&lt;editors&gt;&lt;editorArea 
activeWorkbook="DefaultEditorWorkbook"&gt;&lt;info 
part="DefaultEditorWorkbook"/&gt;&lt;/editorArea&gt;&lt;/editors&gt;&lt;views&gt;&lt;view 
id="org.eclipse.ui.views.ResourceNavigator"&gt;&lt;viewState horizontalPosition="0" 
sorter="1" verticalPosition="0"/&gt;&lt;/view&gt;&lt;view 
id="org.eclipse.ui.views.ContentOutline"&gt;&lt;viewState/&gt;&lt;/view&gt;&lt;view 
id="org.eclipse.ui.views.TaskList"&gt;&lt;viewState sorterColumn="5" 
sorterReversed="0" topIndex="0"&gt;&lt;filter completionFilter="0" 
descriptionFilter="" descriptionFilterKind="0" filterOnCompletion="0" 
filterOnDescription="0" filterOnMarkerLimit="1" filterOnPriority="0" 
filterOnSeverity="0" markerLimit="2000" onResource="0" priorityFilter="0" 
severityFilter="0"&gt;&lt;type id="org.eclipse.core.resources.problemmarker"/&gt;&lt;type 
id="org.eclipse.core.resources.taskmarker"/&gt;&lt;/filter&gt;&lt;column number="3" 
width="207"/&gt;&lt;column number="4" width="78"/&gt;&lt;column number="5" 
width="155"/&gt;&lt;column number="6" 
width="61"/&gt;&lt;/viewState&gt;&lt;/view&gt;&lt;/views&gt;&lt;perspectives 
activePerspective="org.eclipse.ui.resourcePerspective"&gt;&lt;perspective 
editorAreaVisible="1" version="0.016"&gt;&lt;descriptor 
class="org.eclipse.ui.internal.ResourcePerspective" 
file="org.eclipse.ui.resourcePerspective_persp.xml" 
id="org.eclipse.ui.resourcePerspective" label="Resource"/&gt;&lt;actionSet 
id="org.eclipse.cdt.cpp.ui.CppActionSet"/&gt;&lt;actionSet 
id="org.eclipse.cdt.pa.ui.PAActionSet"/&gt;&lt;actionSet 
id="org.eclipse.help.internal.ui.HelpActionSet"/&gt;&lt;actionSet 
id="org.eclipse.search.searchActionSet"/&gt;&lt;actionSet 
id="org_eclipse_ui_examples_readmetool_actionSet"/&gt;&lt;actionSet 
id="org.eclipse.ui.externaltools.ExternalToolsSet"/&gt;&lt;actionSet 
id="org.eclipse.update.ui.softwareUpdates"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.cdt.cpp.ui.CppActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.cdt.pa.ui.PAActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.help.internal.ui.HelpActionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.search.searchActionSet"/&gt;&lt;alwaysOnActionSet 
id="org_eclipse_ui_examples_readmetool_actionSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.ui.externaltools.ExternalToolsSet"/&gt;&lt;alwaysOnActionSet 
id="org.eclipse.update.ui.softwareUpdates"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.ResourceNavigator"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.BookmarkNavigator"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.ContentOutline"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.PropertySheet"/&gt;&lt;show_view_action 
id="org.eclipse.ui.views.TaskList"/&gt;&lt;new_wizard_action 
id="org.eclipse.ui.wizards.new.folder"/&gt;&lt;new_wizard_action 
id="org.eclipse.ui.wizards.new.file"/&gt;&lt;perspective_action 
id="org.eclipse.cdt.cpp.ui.CppPerspective"/&gt;&lt;perspective_action 
id="org.eclipse.jdt.ui.JavaPerspective"/&gt;&lt;perspective_action 
id="org.eclipse.jdt.ui.JavaBrowsingPerspective"/&gt;&lt;perspective_action 
id="org.eclipse.team.cvs.ui.cvsPerspective"/&gt;&lt;view 
id="org.eclipse.ui.views.ResourceNavigator"/&gt;&lt;view 
id="org.eclipse.ui.views.ContentOutline"/&gt;&lt;view 
id="org.eclipse.ui.views.TaskList"/&gt;&lt;layout&gt;&lt;mainWindow&gt;&lt;info folder="true" 
part="topLeft"&gt;&lt;folder 
activePageID="org.eclipse.ui.views.ResourceNavigator"&gt;&lt;page 
content="org.eclipse.ui.views.BookmarkNavigator" label="Bookmarks"/&gt;&lt;page 
content="org.eclipse.team.ccvs.ui.RepositoriesView" label=""/&gt;&lt;page 
content="org.eclipse.team.ui.target.SiteExplorerView" label=""/&gt;&lt;page 
content="org.eclipse.ui.views.ResourceNavigator" 
label="Navigator"/&gt;&lt;/folder&gt;&lt;/info&gt;&lt;info part="org.eclipse.ui.editorss" 
ratio="0.26" relationship="2" relative="topLeft"/&gt;&lt;info folder="true" 
part="org.eclipse.ui.internal.PartTabFolder@7c3828" ratio="0.66" 
relationship="4" relative="org.eclipse.ui.editorss"&gt;&lt;folder 
activePageID="org.eclipse.ui.views.TaskList"&gt;&lt;page 
content="org.eclipse.team.ccvs.ui.console" label=""/&gt;&lt;page 
content="org.eclipse.team.ccvs.ui.HistoryView" label=""/&gt;&lt;page 
content="org.eclipse.team.ui.sync.SyncView" label=""/&gt;&lt;page 
content="org.eclipse.ui.views.TaskList" label="Tasks"/&gt;&lt;/folder&gt;&lt;/info&gt;&lt;info 
folder="true" part="bottomLeft" ratio="0.5" relationship="4" 
relative="topLeft"&gt;&lt;folder 
activePageID="org.eclipse.ui.views.ContentOutline"&gt;&lt;page 
content="org.eclipse.ui.views.ContentOutline" 
label="Outline"/&gt;&lt;/folder&gt;&lt;/info&gt;&lt;/mainWindow&gt;&lt;/layout&gt;&lt;toolbarLayout&gt;&lt;itemSize 
x="130" y="22"/&gt;&lt;itemSize x="59" y="22"/&gt;&lt;itemSize x="53" y="22"/&gt;&lt;itemSize 
x="36" y="22"/&gt;&lt;itemSize x="53" y="22"/&gt;&lt;itemSize x="82" y="22"/&gt;&lt;item 
id="org.eclipse.ui.internal"/&gt;&lt;item 
id="org.eclipse.cdt.cpp.ui.CppActionSet"/&gt;&lt;item 
id="org.eclipse.cdt.pa.ui.PAActionSet"/&gt;&lt;item 
id="org.eclipse.search.searchActionSet"/&gt;&lt;item 
id="org.eclipse.ui.externaltools.ExternalToolsSet"/&gt;&lt;item 
id="org_eclipse_ui_examples_readmetool_actionSet"/&gt;&lt;/toolbarLayout&gt;&lt;/perspective
&gt;&lt;/perspectives&gt;&lt;input 
factoryID="org.eclipse.ui.internal.model.ResourceFactory" 
path="/"/&gt;&lt;/page&gt;&lt;/window&gt;&lt;mruList&gt;&lt;file 
factoryID="org.eclipse.ui.part.FileEditorInputFactory" 
id="org.eclipse.jdt.ui.CompilationUnitEditor"&gt;&lt;persistable 
path="/org.eclipse.update.ui.forms/src/org/eclipse/update/ui/forms/internal/IFor
mPage.java"/&gt;&lt;/file&gt;&lt;file 
factoryID="org.eclipse.jdt.ui.ClassFileEditorInputFactory" 
id="org.eclipse.jdt.ui.ClassFileEditor"&gt;&lt;persistable 
org.eclipse.jdt.ui.ClassFileIdentifier="=com.objectforge.mascot.acpeditor/E:/ecl
ipse/plugins/org.eclipse.ui_2.0.0.v20020606/workbench.jar&amp;lt;org.eclipse.ui
(IEditorPart.class"/&gt;&lt;/file&gt;&lt;file 
factoryID="org.eclipse.ui.part.FileEditorInputFactory" 
id="org.eclipse.jdt.ui.CompilationUnitEditor"&gt;&lt;persistable 
path="/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/IPDEEditorPage.
java"/&gt;&lt;/file&gt;&lt;file factoryID="org.eclipse.ui.part.FileEditorInputFactory" 
id="org.eclipse.jdt.ui.CompilationUnitEditor"&gt;&lt;persistable 
path="/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/PDEFormPage.jav
a"/&gt;&lt;/file&gt;&lt;/mruList&gt;&lt;perspHistory&gt;&lt;desc 
IMemento.internal.id="org.eclipse.update.ui.UpdatePerspective"/&gt;&lt;desc 
IMemento.internal.id="org.eclipse.jdt.ui.JavaBrowsingPerspective"/&gt;&lt;desc 
IMemento.internal.id="org.eclipse.debug.ui.DebugPerspective"/&gt;&lt;desc 
IMemento.internal.id="org.eclipse.pde.ui.PDEPerspective"/&gt;&lt;desc 
IMemento.internal.id="org.eclipse.jdt.ui.JavaPerspective"/&gt;&lt;desc 
IMemento.internal.id="org.eclipse.team.cvs.ui.cvsPerspective"/&gt;&lt;desc 
IMemento.internal.id="org.eclipse.ui.resourcePerspective"/&gt;&lt;/perspHistory&gt;&lt;/work
bench&gt;
Error occurs in platform debug UI.
Please investigate.
I cannot duplicate this problem.  Allan, can you provide an explicit set of steps to duplicate?  
Also, what build are you running?  And what do you mean by "The pattern seems to be open a new window 
and it does not map to the screen"? Do you mean you choose the 'New Window' action from the Window 
menu, and nothing happens?  Have you created any launch configurations in your workspace prior to 
seeing this problem?  If so, are any of them shared launch configurations?  Any and all context you 
can provide for recreating this problem would be greatly appreciated.  Thanks.
The underlying cause of this bug may be more subtle, but the cause of the 
NPE in the code is obvious. 

The specified line in the stack trace reads:
return 
((LaunchShortcutExtension)a).getLabel().compareToIgnoreCase(((LaunchShortcutExtension)b).getLabel());

The JavaDoc on LaunchShortcutExtension#getLabel() reads:
  * @return the label of this shortcut, or &lt;code&gt;null&lt;/code&gt; if not
  *  specified

The call to b.getLabel() is returning null. We should defend against null 
in ShortcutComparator.compare(Object, Object).

Additionally, we should also investigate why the label is null.
I just came to the same conclusion... Looking at the code, the only thing I can 
see is that one of the shortcuts is returning "null" for a label, and the 
compare is failing in the Sun class libs. We can guard against this 
in "ShortcutComparator".
marking as F3 candidate
The important question is - are you contributing a "launch shortcut", that does 
not specify a label argument?
All of this started when I updated my F2 installation.  You are correct in your 
interpretion of '...window does not open'.  The sequence was as follows:

1)  Install F2.  Open a couple more windows and set them so they have a Plugin 
perspective.
2)  Open the update perspective and take the latest/any update.
3)  On my system I get the above mentioned error when the eclipse attempts to 
restart.
4)  Restart by hand.  At this point one window usually opens correctly, the 
rest are reset.
5)  The 'unmapped' window syndrome also appears(maybe) at this point.

From the above it is clear to me that this problem is somehow entwined with the 
update process.  I have also note that if you update your systems and have 
variables set to plugin directories these variable are not pointing the current 
versions after the update.  This can be timeconsuming to fix.
We have added protection against "null" labels. Moving to Update for 
comment/investigation.
Too old - we didn't have this problem appear for a long time. Please reopen if 
you see it again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19875" />
    <CreationDate amount="2002-06-11 01:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Editor Mgmt] Switchers should limit size</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- open many different editors (&gt; 70)</Line>
          <Line>- hit Ctrl+F6</Line>
          <Line>- the top and bottom of the switcher are off screen</Line>
          <Line>- the initial selection is not visible</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020610

- open many different editors (&gt; 70)
- hit Ctrl+F6
- the top and bottom of the switcher are off screen
- the initial selection is not visible

Should limit the size of the switchers, e.g. to 25 items.
MRU order becomes unusable with &gt; 5-10 items anyway.

For the case of the editor switcher, the editors dialog can pick up where the 
switcher leaves off.
See bug 28775 for request to increase size of editor list as large as 
necessary.  This is in contrast to the proposal for this bug.
Limited switcher to 20 items in 20030123</WithStack>
    <WithOutStack>Build 20020610

- open many different editors (&gt; 70)
- hit Ctrl+F6
- the top and bottom of the switcher are off screen
- the initial selection is not visible

Should limit the size of the switchers, e.g. to 25 items.
MRU order becomes unusable with &gt; 5-10 items anyway.

For the case of the editor switcher, the editors dialog can pick up where the 
switcher leaves off.
See bug 28775 for request to increase size of editor list as large as 
necessary.  This is in contrast to the proposal for this bug.
Limited switcher to 20 items in 20030123</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19876" />
    <CreationDate amount="2002-06-11 02:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No message if nothing for "Sync outgoing"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>If you sync outgoing and you have no outgoing changes, all you get is a 
progress flash and then nothing.

You should get a message saying there was nothing to do.
Appears to work in 0611</WithStack>
    <WithOutStack>If you sync outgoing and you have no outgoing changes, all you get is a 
progress flash and then nothing.

You should get a message saying there was nothing to do.
Appears to work in 0611</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19877" />
    <CreationDate amount="2002-06-11 02:26:00 -0400" />
    <DupId amount="20223" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Status windows split between mutiple monitors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Some status windows (like the one that shows the progress of saving workspace
state after shuting down) displays split between monitors on multiple monitor
systems instead of being centered on the monitor eclipse was in.  This used to
work correctly, but was broken sometime around M5/F1/F2 (don't remember exactly
when).  There are other windows that do this as well, such as the "An SWT error
has occurred" error dialog.
I just discovered Ctrl-F6, and this window too gets split between monitors. 
This makes Ctrl-F6 a real pain.


*** This bug has been marked as a duplicate of 20223 ***</WithStack>
    <WithOutStack>Some status windows (like the one that shows the progress of saving workspace
state after shuting down) displays split between monitors on multiple monitor
systems instead of being centered on the monitor eclipse was in.  This used to
work correctly, but was broken sometime around M5/F1/F2 (don't remember exactly
when).  There are other windows that do this as well, such as the "An SWT error
has occurred" error dialog.
I just discovered Ctrl-F6, and this window too gets split between monitors. 
This makes Ctrl-F6 a real pain.


*** This bug has been marked as a duplicate of 20223 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19878" />
    <CreationDate amount="2002-06-11 02:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>collapse/expand symbol  (+/-) dissappears in inspect window</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>BUILD F2.
Debug an application, 
Inspect an array of bytes. (e.g byte[] byteArray = new 
byte[10];)
Collapse the array. (-&gt; not showing the elements of byteArray)
Press the "Show 
Type names"-button.
-&gt; The +-sign (to expand the array) dissapears, Pressing the "Show Type 
names"-button doesn't solve this problem.
-&gt;Solution . Double click on the array. -&gt; array is 
expanded and the collapse-sign is back again.
BTW, I don't know the exact name of that 
expand/collapse symbol? Any Idea?
I can duplicate the problem, but I don't know the name of the expand/collapse symbol.  
Problem is duplicatable with ShowQualifiedNames as well, and shows up for both toggling on and 
toggling off these actions.
Also for ShowStatic and ShowFinal actions.
I believe the problem is in ExpressionViewContentHandler.hasChildren().  This code checks if 
the element is the expression manager, but otherwise defers to super.  In the case of an 
IExpression, this will always return false, since it only checks for variables, values, and 
stack frames.  The fix would appear to be to simply add a check for IExpression, and return whether 
the expression's value has any children.
This is a simple fix, and is visually misleading to the user (although there is 
a "double click" workaround, the user may not know to double-click, since 
visually, we show there are no children). Marking as F4 candidate.
ARCH team approval: the consequence of not fixing this is that the top level 
items in the "expression view" lose their "+" sign when display options in the 
expression view are changed. This is misleading to the user since they "see" 
that their expressions have no sub-structure/children. The workaround is to 
double click a top level item in the expression view. 
Fixed.
Please verify.
Verified.</WithStack>
    <WithOutStack>BUILD F2.
Debug an application, 
Inspect an array of bytes. (e.g byte[] byteArray = new 
byte[10];)
Collapse the array. (-&gt; not showing the elements of byteArray)
Press the "Show 
Type names"-button.
-&gt; The +-sign (to expand the array) dissapears, Pressing the "Show Type 
names"-button doesn't solve this problem.
-&gt;Solution . Double click on the array. -&gt; array is 
expanded and the collapse-sign is back again.
BTW, I don't know the exact name of that 
expand/collapse symbol? Any Idea?
I can duplicate the problem, but I don't know the name of the expand/collapse symbol.  
Problem is duplicatable with ShowQualifiedNames as well, and shows up for both toggling on and 
toggling off these actions.
Also for ShowStatic and ShowFinal actions.
I believe the problem is in ExpressionViewContentHandler.hasChildren().  This code checks if 
the element is the expression manager, but otherwise defers to super.  In the case of an 
IExpression, this will always return false, since it only checks for variables, values, and 
stack frames.  The fix would appear to be to simply add a check for IExpression, and return whether 
the expression's value has any children.
This is a simple fix, and is visually misleading to the user (although there is 
a "double click" workaround, the user may not know to double-click, since 
visually, we show there are no children). Marking as F4 candidate.
ARCH team approval: the consequence of not fixing this is that the top level 
items in the "expression view" lose their "+" sign when display options in the 
expression view are changed. This is misleading to the user since they "see" 
that their expressions have no sub-structure/children. The workaround is to 
double click a top level item in the expression view. 
Fixed.
Please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19879" />
    <CreationDate amount="2002-06-11 02:36:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Red wavy problem indication underline obscures text</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The red wavy underline needs to be dropped a pixel or two to prevent obscuring
characters such as periods, commas, and underscores.
cannot be addressed for 2.0
Moving to Text
This is especially problematic using my perferred font, Courier-regular-10 (same
as the default font in VC++, not the Courier New TrueType font).

Tested with Courier (not Courier New) Regular 10 using R3.4M6. I am not seeing the text get obscured, so I assume this has been fixed.</WithStack>
    <WithOutStack>The red wavy underline needs to be dropped a pixel or two to prevent obscuring
characters such as periods, commas, and underscores.
cannot be addressed for 2.0
Moving to Text
This is especially problematic using my perferred font, Courier-regular-10 (same
as the default font in VC++, not the Courier New TrueType font).

Tested with Courier (not Courier New) Regular 10 using R3.4M6. I am not seeing the text get obscured, so I assume this has been fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19880" />
    <CreationDate amount="2002-06-11 03:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Launcher configuration doesn't show up, NullPointerException in getMemento()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331255112">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.launching.RuntimeClasspathEntry.getMemento(RuntimeClasspathEntry.java:261)</Frame>
          <Frame depth="1">org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab.performApply(JavaClasspathTab.java:294)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.performApply(AbstractLaunchConfigurationTabGroup.java:90)</Frame>
          <Frame depth="3">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.updateWorkingCopyFromPages(LaunchConfigurationDialog.java:2181)</Frame>
          <Frame depth="4">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.isWorkingCopyDirty(LaunchConfigurationDialog.java:1648)</Frame>
          <Frame depth="5">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.updateButtons(LaunchConfigurationDialog.java:2627)</Frame>
          <Frame depth="6">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.refreshStatus(LaunchConfigurationDialog.java:830)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.setLaunchConfiguration(LaunchConfigurationDialog.java:1456)</Frame>
          <Frame depth="8">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.selectionChanged(LaunchConfigurationDialog.java:1377)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:147)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1153)</Frame>
          <Frame depth="11">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:903)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:342)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.doInitialTreeSelection(LaunchConfigurationDialog.java:532)</Frame>
          <Frame depth="14">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.createContents(LaunchConfigurationDialog.java:451)</Frame>
          <Frame depth="15">org.eclipse.jface.window.Window.create(Window.java:278)</Frame>
          <Frame depth="16">org.eclipse.jface.window.Window.open(Window.java:527)</Frame>
          <Frame depth="17">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.doLastLaunchedConfig(LaunchConfigurationDialog.java:612)</Frame>
          <Frame depth="18">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.open(LaunchConfigurationDialog.java:573)</Frame>
          <Frame depth="19">org.eclipse.debug.internal.ui.actions.OpenLaunchConfigurationsAction.run(OpenLaunchConfigurationsAction.java:132)</Frame>
          <Frame depth="20">org.eclipse.jface.action.Action.runWithEvent(Action.java:749)</Frame>
          <Frame depth="21">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="22">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="23">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="24">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)</Frame>
          <Frame depth="31">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="32">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="33">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.basicRun(Main.java:244)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.run(Main.java:693)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.main(Main.java:526)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When trying to open the Launch configuration in F2 (Run ...), the dialog 
suddenly doesn't show up anymore, but a NullPointerException is logged:

!ENTRY org.eclipse.ui 4 4 Jun 11, 2002 10:05:20.812
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jun 11, 2002 10:05:20.812
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.launching.RuntimeClasspathEntry.getMemento
(RuntimeClasspathEntry.java:261)
	at 
org.eclipse.jdt.debug.ui.launchConfigurations.JavaClasspathTab.performApply
(JavaClasspathTab.java:294)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.performApply
(AbstractLaunchConfigurationTabGroup.java:90)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.upd
ateWorkingCopyFromPages(LaunchConfigurationDialog.java:2181)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.isW
orkingCopyDirty(LaunchConfigurationDialog.java:1648)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.upd
ateButtons(LaunchConfigurationDialog.java:2627)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.ref
reshStatus(LaunchConfigurationDialog.java:830)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.set
LaunchConfiguration(LaunchConfigurationDialog.java:1456)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.sel
ectionChanged(LaunchConfigurationDialog.java:1377)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:147)
	at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:1153)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:903)
	at org.eclipse.jface.viewers.Viewer.setSelection(Viewer.java:342)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.doI
nitialTreeSelection(LaunchConfigurationDialog.java:532)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.cre
ateContents(LaunchConfigurationDialog.java:451)
	at org.eclipse.jface.window.Window.create(Window.java:278)
	at org.eclipse.jface.window.Window.open(Window.java:527)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.doL
astLaunchedConfig(LaunchConfigurationDialog.java:612)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationDialog.ope
n(LaunchConfigurationDialog.java:573)
	at 
org.eclipse.debug.internal.ui.actions.OpenLaunchConfigurationsAction.run
(OpenLaunchConfigurationsAction.java:132)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:749)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:244)
	at org.eclipse.core.launcher.Main.run(Main.java:693)
	at org.eclipse.core.launcher.Main.main(Main.java:526)
Workaround: Delete metadata of debug plugin, and the "Launch configurations" 
dialog can be opened again.
I was unable to reproduce the error, but I have guarded against the NPE by 
using the IPath instead of the IResource to create a memento.
Fixed - marked as F3 candidate. Please verify.
Verified.</WithStack>
    <WithOutStack>When trying to open the Launch configuration in F2 (Run ...), the dialog 
suddenly doesn't show up anymore, but a NullPointerException is logged:

!ENTRY org.eclipse.ui 4 4 Jun 11, 2002 10:05:20.812
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jun 11, 2002 10:05:20.812
!MESSAGE java.lang.NullPointerException
!STACK 0

Workaround: Delete metadata of debug plugin, and the "Launch configurations" 
dialog can be opened again.
I was unable to reproduce the error, but I have guarded against the NPE by 
using the IPath instead of the IResource to create a memento.
Fixed - marked as F3 candidate. Please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19881" />
    <CreationDate amount="2002-06-11 04:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>copy/paste fails for .java files out of buid path (in resource folders) [ccp]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="641" end="708" />
        <code>- create a file "resource/A.java" with contents "public class A { }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>- create a new project "test.rename" with a source folder "src"</Line>
          <Line>- create a folder "resource" directly in the project (sibling to src)</Line>
          <Line>"</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- select A.java; Copy; Paste (call it "B"); ==&gt; nothing happens</Line>
          <Line>- select A.java; Copy; select folder 'resource'; Paste (call it "B.java") ==&gt;</Line>
          <Line>file copied (contents not adapted to name change, which is OK)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20020610
select a .java file in a resource folder
copy/paste (do not change the selection)
nothing happens (in the ctrl+c/ctrl+v case as well)

it does work with not .java files

nasty
nope, not major
happens only in the rare case when you have no primary type in the cu
fixed
not fixed
Build id: 200209171408

* not fixed: &gt; ... rare case when you have no primary type in the cu
still doesn't work (nothing happens) 

* not fixed: &gt; select a .java file in a resource folder; copy/paste
Steps to reproduce:
- create a new project "test.rename" with a source folder "src"
- create a folder "resource" directly in the project (sibling to src)
- create a file "resource/A.java" with contents "public class A { }"

- select A.java; Copy; Paste (call it "B"); ==&gt; nothing happens
- select A.java; Copy; select folder 'resource'; Paste (call it "B.java") ==&gt;
file copied (contents not adapted to name change, which is OK)

there was a bug in the new text edit infrastructure
fixed - please verify
fixed.
verified</WithStack>
    <WithOutStack>20020610
select a .java file in a resource folder
copy/paste (do not change the selection)
nothing happens (in the ctrl+c/ctrl+v case as well)

it does work with not .java files

nasty
nope, not major
happens only in the rare case when you have no primary type in the cu
fixed
not fixed
Build id: 200209171408

* not fixed: &gt; ... rare case when you have no primary type in the cu
still doesn't work (nothing happens) 

* not fixed: &gt; select a .java file in a resource folder; copy/paste
Steps to reproduce:
- create a new project "test.rename" with a source folder "src"
- create a folder "resource" directly in the project (sibling to src)
- create a file "resource/A.java" with contents "public class A { }"

- select A.java; Copy; Paste (call it "B"); ==&gt; nothing happens
- select A.java; Copy; select folder 'resource'; Paste (call it "B.java") ==&gt;
file copied (contents not adapted to name change, which is OK)

there was a bug in the new text edit infrastructure
fixed - please verify
fixed.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19882" />
    <CreationDate amount="2002-06-11 05:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>maybe a cu's single type can be its proimary type too</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>i think Primary Type is not anything defined in the spec (might be wrong but i 
could not locate it)

if it is only an eclipse thing, then
it's be very useful if its defintion could be extended with one more case:
if there's only 1 type declared in a cu, then it is the cu's the primary type

it does not conflict with what we have now and i think it's make sense
I'd rather have it remain as it is currently. This API is here to find the type 
matching the unit name if any, not to find anything else. If a unit only 
contains one type with a non-matching type name, then this type is a secondary 
one, which means lookups may fail depending on the compilation order etc...

Closing, no action.</WithStack>
    <WithOutStack>i think Primary Type is not anything defined in the spec (might be wrong but i 
could not locate it)

if it is only an eclipse thing, then
it's be very useful if its defintion could be extended with one more case:
if there's only 1 type declared in a cu, then it is the cu's the primary type

it does not conflict with what we have now and i think it's make sense
I'd rather have it remain as it is currently. This API is here to find the type 
matching the unit name if any, not to find anything else. If a unit only 
contains one type with a non-matching type name, then this type is a secondary 
one, which means lookups may fail depending on the compilation order etc...

Closing, no action.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19883" />
    <CreationDate amount="2002-06-11 05:24:00 -0400" />
    <DupId amount="44512" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>cannot work on two versions of the same plugin</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>- create a Hello World plug-in with the Plug-in Developpement wizard

- copy the project 

- in the copy modify the code in your plug-in (plug.action.SampleAction.run()) to 
display "Hello, another Eclipse world" instead of"Hello, Eclipse world" (save 
the file)

- in the copy change the version of the plugin 1.0.0 =&gt; 1.0.1

- Rebuilt your project (menu Project =&gt; Rebuilt Project)

- use menu Run =&gt; Run as=&gt; run-time workbench

- in the tab "Plug-ins &amp; Fragments" in the workspace plug-ins section you have
yourProject 1.0.0
and
yourProject 1.0.1

I can only manage to run 1.0.1 if I select both plugin.
If i only select one of them the plugin is not running in the run time workbench.
I can't run the 1.0.0 version of the plugin.

I'm using NT4 sp6, JDK 1.4, eclipse F2

Aurélien
PDE is working as designed. Since both plug-ins have the same ID, the run-time 
workbench thinks 1.0.1 is a newer version of the plug-in (since 1.0.1 &gt; 1.0.0) 
and it is picking the newer one. This is platform standard behaviour. You will 
need to change the ID of the plug-in if you want it to be recognized as a 
different one.
I understand it is a standard behavior
but still
In my case if I only check the 1.0.1 version of my plugin I'm not able to test it.
I have to check both 1.0.0 and 1.0.1 to be able to test 1.0.1


*** This bug has been marked as a duplicate of 44512 ***</WithStack>
    <WithOutStack>- create a Hello World plug-in with the Plug-in Developpement wizard

- copy the project 

- in the copy modify the code in your plug-in (plug.action.SampleAction.run()) to 
display "Hello, another Eclipse world" instead of"Hello, Eclipse world" (save 
the file)

- in the copy change the version of the plugin 1.0.0 =&gt; 1.0.1

- Rebuilt your project (menu Project =&gt; Rebuilt Project)

- use menu Run =&gt; Run as=&gt; run-time workbench

- in the tab "Plug-ins &amp; Fragments" in the workspace plug-ins section you have
yourProject 1.0.0
and
yourProject 1.0.1

I can only manage to run 1.0.1 if I select both plugin.
If i only select one of them the plugin is not running in the run time workbench.
I can't run the 1.0.0 version of the plugin.

I'm using NT4 sp6, JDK 1.4, eclipse F2

Aurélien
PDE is working as designed. Since both plug-ins have the same ID, the run-time 
workbench thinks 1.0.1 is a newer version of the plug-in (since 1.0.1 &gt; 1.0.0) 
and it is picking the newer one. This is platform standard behaviour. You will 
need to change the ID of the plug-in if you want it to be recognized as a 
different one.
I understand it is a standard behavior
but still
In my case if I only check the 1.0.1 version of my plugin I'm not able to test it.
I have to check both 1.0.0 and 1.0.1 to be able to test 1.0.1


*** This bug has been marked as a duplicate of 44512 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19884" />
    <CreationDate amount="2002-06-11 06:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="other" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Double quoted property containing blank not handled correctly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If the "basedir" property is specified in the "Run Ant" dialog as an argument, 
the double quotes are not recognized, but include in the property value.
For example, if the "basedir" property is specified as argument in the 
following way:
   -Dbasedir="C:/eclipse/workspace_1/My project"
the eclipse Ant runner interprets this as:
   C:\eclipse\"C:\eclipse\workspace_1\My project"
and the following exception appears on output:
   Basedir C:\eclipse\"C:\eclipse\workspace_1\My project" does not exist
	at org.apache.tools.ant.Project.setBaseDir(Project.java:356)
	at org.apache.tools.ant.Project.setBasedir(Project.java:350)
	at org.apache.tools.ant.ProjectHelper$ProjectHandler.init
(ProjectHelper.java:320)
	at org.apache.tools.ant.ProjectHelper$RootHandler.startElement
(ProjectHelper.java:262)
......

If Ant is not run in eclipse but externally, it works with the above property.
The problem is in InternalAntRunner.getArrayList(...). When parsing the 
arguments we are not removing the quotes from it. The fix is easy and suggest 
fixing.
Fix for 2.0
Fixed and released.</WithStack>
    <WithOutStack>If the "basedir" property is specified in the "Run Ant" dialog as an argument, 
the double quotes are not recognized, but include in the property value.
For example, if the "basedir" property is specified as argument in the 
following way:
   -Dbasedir="C:/eclipse/workspace_1/My project"
the eclipse Ant runner interprets this as:
   C:\eclipse\"C:\eclipse\workspace_1\My project"
and the following exception appears on output:
   Basedir C:\eclipse\"C:\eclipse\workspace_1\My project" does not exist
	at org.apache.tools.ant.Project.setBaseDir(Project.java:356)
	at org.apache.tools.ant.Project.setBasedir(Project.java:350)
	at org.apache.tools.ant.ProjectHelper$ProjectHandler.init
(ProjectHelper.java:320)
	at org.apache.tools.ant.ProjectHelper$RootHandler.startElement
(ProjectHelper.java:262)
......

If Ant is not run in eclipse but externally, it works with the above property.
The problem is in InternalAntRunner.getArrayList(...). When parsing the 
arguments we are not removing the quotes from it. The fix is easy and suggest 
fixing.
Fix for 2.0
Fixed and released.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19885" />
    <CreationDate amount="2002-06-11 07:01:00 -0400" />
    <DupId amount="18644" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Plug-in pref saving fails if plug-in state folder doesn't exist already</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20020607

IPlugin#savePluginPreferences() will silently fail in case the plug-in state 
folder doesn't already exist. 

This can prevent exporting prefereces from an empty workspace, at least the 
JDT/Core ones.

It should invoke internally IPlugin#getStateLocation().


*** This bug has been marked as a duplicate of 18644 ***</WithStack>
    <WithOutStack>Build 20020607

IPlugin#savePluginPreferences() will silently fail in case the plug-in state 
folder doesn't already exist. 

This can prevent exporting prefereces from an empty workspace, at least the 
JDT/Core ones.

It should invoke internally IPlugin#getStateLocation().


*** This bug has been marked as a duplicate of 18644 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19886" />
    <CreationDate amount="2002-06-11 07:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>setProjectJavadocLocation() only in internal package [api] [javadoc]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>If You want to set the project javadoc location by API so You have to use an 
internal class, there is no public interface.

see class org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations

(Otherwise the method setLibraryJavadocLocation() is public at 
org.eclipse.jdt.ui.JavaUI - thats ok.)
new API methods added &gt; 20021022</WithStack>
    <WithOutStack>If You want to set the project javadoc location by API so You have to use an 
internal class, there is no public interface.

see class org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations

(Otherwise the method setLibraryJavadocLocation() is public at 
org.eclipse.jdt.ui.JavaUI - thats ok.)
new API methods added &gt; 20021022</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19887" />
    <CreationDate amount="2002-06-11 07:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Would like compiler options for projects [general issue]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>At the moment (20020610) all the compiler options are global, but I would like 
to develop some projects that are JDK1.4 compliant, and some that are JDK1.3 
compliant in the same workspace.

Today I cannot specify that one project should have different compiler options 
to another project, so I cannot, for example, set the compiler compliance level 
differently or change the errors and warnings to be stricter for my own code 
than the code I import from other sources.
I, too, would find this useful. Our usecase is as follows: we have all the core 
source (regular and tests) in our workspaces. I want to know about non-
externalized strings in the regular plugins but I don't need to know about the 
(roughly 12,000) non-externalized strings in the test suites.

Currently I get around this via task list filtering but I question the 
performance implications of having almost 13,000 items in the task list. How 
fast is it to search for markers? filter markers? create the markers? etc etc. 

We will do some performance testing in the area of markers.

added UI for compiler settings per project &gt; 20021028</WithStack>
    <WithOutStack>At the moment (20020610) all the compiler options are global, but I would like 
to develop some projects that are JDK1.4 compliant, and some that are JDK1.3 
compliant in the same workspace.

Today I cannot specify that one project should have different compiler options 
to another project, so I cannot, for example, set the compiler compliance level 
differently or change the errors and warnings to be stricter for my own code 
than the code I import from other sources.
I, too, would find this useful. Our usecase is as follows: we have all the core 
source (regular and tests) in our workspaces. I want to know about non-
externalized strings in the regular plugins but I don't need to know about the 
(roughly 12,000) non-externalized strings in the test suites.

Currently I get around this via task list filtering but I question the 
performance implications of having almost 13,000 items in the task list. How 
fast is it to search for markers? filter markers? create the markers? etc etc. 

We will do some performance testing in the area of markers.

added UI for compiler settings per project &gt; 20021028</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19888" />
    <CreationDate amount="2002-06-11 07:48:00 -0400" />
    <DupId amount="19988" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Autofix adds stubs implementing required abstract methods</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I have an interface In and a class Cl implementing In.

Now I add a method to In.  Consequently, Cl now has an error: It needs to
implement that method.

I suggest that "autofix" should know how to add a stub for that method to Cl.
After all, when I create a new class OtherCl from scratch that also implements
In, class creation also knows how to generate a stub for each of In's methods.
defer to after 2.0
Workaround:

I found that functionality even in 2.0, it is available through the
"Outline" view for class Cl, Cl's context menue, "override methods".
Reopeing


*** This bug has been marked as a duplicate of 19988 ***</WithStack>
    <WithOutStack>I have an interface In and a class Cl implementing In.

Now I add a method to In.  Consequently, Cl now has an error: It needs to
implement that method.

I suggest that "autofix" should know how to add a stub for that method to Cl.
After all, when I create a new class OtherCl from scratch that also implements
In, class creation also knows how to generate a stub for each of In's methods.
defer to after 2.0
Workaround:

I found that functionality even in 2.0, it is available through the
"Outline" view for class Cl, Cl's context menue, "override methods".
Reopeing


*** This bug has been marked as a duplicate of 19988 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19889" />
    <CreationDate amount="2002-06-11 08:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[assist] completion in throws clause or in javadoc @throws tag should propose only exception class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When I'm here:

/** {@link Unsupp

and ask for autocompletion, it comes up with a window listing a few types, among
them java.lang.UnsupportedOperationException.

When I'm here:

/** @throws Unsupp

or here:

/** @exception Unsupp

autocompletion has no idea what could possibly follow.
Martin, any comments ?
Should work. But it presents only the exceptions declared as thrown by the 
method. Will investigate.
By design it only returns the names of Exceptions declared by the method.
changed the code assist to give back all type names 
(unfortunatly I can't limit it to Exceptions only)

&gt; 20020911
I agree this is better than it was, but not yet really what the user (I) wants.

I would want the offer limited to Exceptions thrown by the method,
any subtypes of such exceptions,
plus any runtime exceptions available in the CLASSPATH.
Is it ok if I reopen this bug, or should I file a new bug?
Code assist on a throws declaration does also return all types (not only 
exceptions)

void foo throws E|code assist.

Moving to JCore for comments.
Would it be possible to only show Exceptions?
Not directly, this would require to resolve hierarchies of all type so as to 
figure they relate to Throwable (way to expensive).

Currently, you get a better relevance for type names ending with Exception or 
Error.

Back to jdt/ui

void wirSprechenDeutsch() throws EclipseNichtAusnahme
A little experiment:

I started Eclipse anew, navigated to RuntimeException.
Opening RuntimeException up in the type hirarchy browser
took about three seconds I did it the first time.
The second time, it came up instantaniously.
I see no need to "resolve hierarchies of all type".

For the @throws javadoc tag, the thing to do is
settle with only those exceptions that are declared to be thrown by the method,
including any exception classes derived from them,
plus anything derived from RuntimeException.

The type hirarchy browser can do most of this work in three seconds.
That's comparable to how long I wait for autocompletion in other
situations.

Do you really think to find that list would be too expensive?

Even though I'm not a member of the eclipse team,
I take the liberty to move this back to core for comment one more time.
Actually, we still need to offer all types, since the exception may be a member 
type (indirected through its enclosing one). The relevance approach is best 
suited for this. 

We could do some real relevance computation for exception types, we simply use 
a simple heuristic instead. The numbers you give are not the ones we usually 
see, this is why we went down this path.

BTW, 3 seconds for codeassist is too long. It would be worth logging PRs with 
reproduceable steps.
May reconsider post 2.1, if we start caching exception hierarchies.
Reopen for 3.2


*** This bug has been marked as a duplicate of 3270 ***
Reopen as this bug history is more complete than bug 3270.
This is a general issue for code assist which should implement specific solution
not to have performance issue in this case.

*** Bug 3270 has been marked as a duplicate of this bug. ***
*** Bug 48478 has been marked as a duplicate of this bug. ***
Defer port 3.2
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>When I'm here:

/** {@link Unsupp

and ask for autocompletion, it comes up with a window listing a few types, among
them java.lang.UnsupportedOperationException.

When I'm here:

/** @throws Unsupp

or here:

/** @exception Unsupp

autocompletion has no idea what could possibly follow.
Martin, any comments ?
Should work. But it presents only the exceptions declared as thrown by the 
method. Will investigate.
By design it only returns the names of Exceptions declared by the method.
changed the code assist to give back all type names 
(unfortunatly I can't limit it to Exceptions only)

&gt; 20020911
I agree this is better than it was, but not yet really what the user (I) wants.

I would want the offer limited to Exceptions thrown by the method,
any subtypes of such exceptions,
plus any runtime exceptions available in the CLASSPATH.
Is it ok if I reopen this bug, or should I file a new bug?
Code assist on a throws declaration does also return all types (not only 
exceptions)

void foo throws E|code assist.

Moving to JCore for comments.
Would it be possible to only show Exceptions?
Not directly, this would require to resolve hierarchies of all type so as to 
figure they relate to Throwable (way to expensive).

Currently, you get a better relevance for type names ending with Exception or 
Error.

Back to jdt/ui

void wirSprechenDeutsch() throws EclipseNichtAusnahme
A little experiment:

I started Eclipse anew, navigated to RuntimeException.
Opening RuntimeException up in the type hirarchy browser
took about three seconds I did it the first time.
The second time, it came up instantaniously.
I see no need to "resolve hierarchies of all type".

For the @throws javadoc tag, the thing to do is
settle with only those exceptions that are declared to be thrown by the method,
including any exception classes derived from them,
plus anything derived from RuntimeException.

The type hirarchy browser can do most of this work in three seconds.
That's comparable to how long I wait for autocompletion in other
situations.

Do you really think to find that list would be too expensive?

Even though I'm not a member of the eclipse team,
I take the liberty to move this back to core for comment one more time.
Actually, we still need to offer all types, since the exception may be a member 
type (indirected through its enclosing one). The relevance approach is best 
suited for this. 

We could do some real relevance computation for exception types, we simply use 
a simple heuristic instead. The numbers you give are not the ones we usually 
see, this is why we went down this path.

BTW, 3 seconds for codeassist is too long. It would be worth logging PRs with 
reproduceable steps.
May reconsider post 2.1, if we start caching exception hierarchies.
Reopen for 3.2


*** This bug has been marked as a duplicate of 3270 ***
Reopen as this bug history is more complete than bug 3270.
This is a general issue for code assist which should implement specific solution
not to have performance issue in this case.

*** Bug 3270 has been marked as a duplicate of this bug. ***
*** Bug 48478 has been marked as a duplicate of this bug. ***
Defer port 3.2
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19890" />
    <CreationDate amount="2002-06-11 08:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>artwork: remove icons for shift left/right</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>These are the only actions in the Source menu with icons and we look 
inconsistent.
Pair programmed with Dirk.
Verified. TB</WithStack>
    <WithOutStack>These are the only actions in the Source menu with icons and we look 
inconsistent.
Pair programmed with Dirk.
Verified. TB</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19891" />
    <CreationDate amount="2002-06-11 08:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Exception opening update manager</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331255128">
        <Exception>org.eclipse.swt.SWTError</Exception>
        <Reason>No more handles</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2083)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:1990)</Frame>
          <Frame depth="2">org.eclipse.swt.graphics.Image.init(Image.java:1778)</Frame>
          <Frame depth="3">org.eclipse.swt.graphics.Image.init(Image.java:1807)</Frame>
          <Frame depth="4">org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:696)</Frame>
          <Frame depth="5">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:128)</Frame>
          <Frame depth="6">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:87)</Frame>
          <Frame depth="7">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:76)</Frame>
          <Frame depth="8">org.eclipse.update.internal.ui.forms.DetailsForm.&lt;init&gt;(DetailsForm.java:208)</Frame>
          <Frame depth="9">org.eclipse.update.internal.ui.pages.DetailsPage.createForm(DetailsPage.java:19)</Frame>
          <Frame depth="10">org.eclipse.update.internal.ui.pages.UpdateFormPage.&lt;init&gt;(UpdateFormPage.java:20)</Frame>
          <Frame depth="11">org.eclipse.update.internal.ui.pages.DetailsPage.&lt;init&gt;(DetailsPage.java:15)</Frame>
          <Frame depth="12">org.eclipse.update.internal.ui.views.DetailsView.createPages(DetailsView.java:81)</Frame>
          <Frame depth="13">org.eclipse.update.internal.ui.views.MultiPageView.&lt;init&gt;(MultiPageView.java:30)</Frame>
          <Frame depth="14">org.eclipse.update.internal.ui.views.DetailsView.&lt;init&gt;(DetailsView.java:72)</Frame>
          <Frame depth="15">java.lang.Class.newInstance0(Native Method)</Frame>
          <Frame depth="16">java.lang.Class.newInstance(Class.java:237)</Frame>
          <Frame depth="17">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:138)</Frame>
          <Frame depth="18">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:167)</Frame>
          <Frame depth="19">org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:102)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:109)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.registry.ViewDescriptor.createView(ViewDescriptor.java:45)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.ViewFactory$1.run(ViewFactory.java:93)</Frame>
          <Frame depth="23">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:802)</Frame>
          <Frame depth="24">org.eclipse.core.runtime.Platform.run(Platform.java:416)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.ViewFactory.restoreView(ViewFactory.java:79)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.ViewFactory.access$0(ViewFactory.java:71)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.ViewFactory$ViewReference.getPart(ViewFactory.java:262)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.FolderLayout.addView(FolderLayout.java:69)</Frame>
          <Frame depth="29">org.eclipse.update.internal.ui.UpdatePerspective.createInitialLayout(UpdatePerspective.java:32)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Perspective.loadPredefinedPersp(Perspective.java:606)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Perspective.createPresentation(Perspective.java:231)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Perspective.&lt;init&gt;(Perspective.java:131)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.WorkbenchPage.createPerspective(WorkbenchPage.java:842)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:529)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:524)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2174)</Frame>
          <Frame depth="37">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:2172)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1316)</Frame>
          <Frame depth="40">org.eclipse.update.internal.ui.UpdateManagerAction.run(UpdateManagerAction.java:39)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:210)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:172)</Frame>
          <Frame depth="43">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="44">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="45">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="46">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)</Frame>
          <Frame depth="53">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:739)</Frame>
          <Frame depth="54">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="55">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="56">org.eclipse.core.launcher.Main.basicRun(Main.java:248)</Frame>
          <Frame depth="57">org.eclipse.core.launcher.Main.run(Main.java:697)</Frame>
          <Frame depth="58">org.eclipse.core.launcher.Main.main(Main.java:530)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>On Windows 98 with 24 or 32 bit color you can not open the Update Manager. The 
following error is logged:

!SESSION Jun 11, 2002 08:47:31.140 ---------------------------------------------
java.version=1.3.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install 
file:C:/0610/eclipse/
!ENTRY org.eclipse.ui 4 4 Jun 11, 2002 08:47:31.140
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jun 11, 2002 08:47:31.140
!MESSAGE No more handles
!STACK 0
org.eclipse.swt.SWTError: No more handles
	at org.eclipse.swt.SWT.error(SWT.java:2083)
	at org.eclipse.swt.SWT.error(SWT.java:1990)
	at org.eclipse.swt.graphics.Image.init(Image.java:1778)
	at org.eclipse.swt.graphics.Image.init(Image.java:1807)
	at org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:696)
	at org.eclipse.jface.resource.ImageDescriptor.createImage
(ImageDescriptor.java:128)
	at org.eclipse.jface.resource.ImageDescriptor.createImage
(ImageDescriptor.java:87)
	at org.eclipse.jface.resource.ImageDescriptor.createImage
(ImageDescriptor.java:76)
	at org.eclipse.update.internal.ui.forms.DetailsForm.&lt;init&gt;
(DetailsForm.java:208)
	at org.eclipse.update.internal.ui.pages.DetailsPage.createForm
(DetailsPage.java:19)
	at org.eclipse.update.internal.ui.pages.UpdateFormPage.&lt;init&gt;
(UpdateFormPage.java:20)
	at org.eclipse.update.internal.ui.pages.DetailsPage.&lt;init&gt;
(DetailsPage.java:15)
	at org.eclipse.update.internal.ui.views.DetailsView.createPages
(DetailsView.java:81)
	at org.eclipse.update.internal.ui.views.MultiPageView.&lt;init&gt;
(MultiPageView.java:30)
	at org.eclipse.update.internal.ui.views.DetailsView.&lt;init&gt;
(DetailsView.java:72)
	at java.lang.Class.newInstance0(Native Method)
	at java.lang.Class.newInstance(Class.java:237)
	at 
org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension
(PluginDescriptor.java:138)
	at 
org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension
(PluginDescriptor.java:167)
	at 
org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension
(ConfigurationElement.java:102)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension
(WorkbenchPlugin.java:109)
	at org.eclipse.ui.internal.registry.ViewDescriptor.createView
(ViewDescriptor.java:45)
	at org.eclipse.ui.internal.ViewFactory$1.run(ViewFactory.java:93)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:802)
	at org.eclipse.core.runtime.Platform.run(Platform.java:416)
	at org.eclipse.ui.internal.ViewFactory.restoreView(ViewFactory.java:79)
	at org.eclipse.ui.internal.ViewFactory.access$0(ViewFactory.java:71)
	at org.eclipse.ui.internal.ViewFactory$ViewReference.getPart
(ViewFactory.java:262)
	at org.eclipse.ui.internal.FolderLayout.addView(FolderLayout.java:69)
	at org.eclipse.update.internal.ui.UpdatePerspective.createInitialLayout
(UpdatePerspective.java:32)
	at org.eclipse.ui.internal.Perspective.loadPredefinedPersp
(Perspective.java:606)
	at org.eclipse.ui.internal.Perspective.createPresentation
(Perspective.java:231)
	at org.eclipse.ui.internal.Perspective.&lt;init&gt;(Perspective.java:131)
	at org.eclipse.ui.internal.WorkbenchPage.createPerspective
(WorkbenchPage.java:842)
	at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective
(WorkbenchPage.java:529)
	at org.eclipse.ui.internal.WorkbenchPage.access$6
(WorkbenchPage.java:524)
	at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2174)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:64)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective
(WorkbenchPage.java:2172)
	at org.eclipse.ui.internal.Workbench.showPerspective
(Workbench.java:1316)
	at org.eclipse.update.internal.ui.UpdateManagerAction.run
(UpdateManagerAction.java:39)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:210)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:172)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:75)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1527)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1289)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1177)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1160)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:739)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:248)
	at org.eclipse.core.launcher.Main.run(Main.java:697)
	at org.eclipse.core.launcher.Main.main(Main.java:530)
I suspect this is related to the fact that GIF files are converted to ICON 
objects and there is a limit on icon sizes. 

I converted all large GIF images in Update to JPEG. Please test with 20020611 
build to see if that helps.
*** Bug 16539 has been marked as a duplicate of this bug. ***
Verified on Win 98 set to 32-bit color.
Fails with "out of handles" using build 0610.
Works with build 0611.
Closing.</WithStack>
    <WithOutStack>On Windows 98 with 24 or 32 bit color you can not open the Update Manager. The 
following error is logged:

!SESSION Jun 11, 2002 08:47:31.140 ---------------------------------------------
java.version=1.3.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install 
file:C:/0610/eclipse/
!ENTRY org.eclipse.ui 4 4 Jun 11, 2002 08:47:31.140
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jun 11, 2002 08:47:31.140
!MESSAGE No more handles
!STACK 0

I suspect this is related to the fact that GIF files are converted to ICON 
objects and there is a limit on icon sizes. 

I converted all large GIF images in Update to JPEG. Please test with 20020611 
build to see if that helps.
*** Bug 16539 has been marked as a duplicate of this bug. ***
Verified on Win 98 set to 32-bit color.
Fails with "out of handles" using build 0610.
Works with build 0611.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19892" />
    <CreationDate amount="2002-06-11 09:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[content assist] Code completion offers same choice twice.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="201" end="292" />
        <code>class X {
   void bar(){
	new Object(){
		void foo(){
			getClas&lt;CODE ASSIST&gt;
		}
	}
   }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>I'll insert a screen shot that gives you the details.
Created attachment 1351
Context is a static method in a class that's badly indented.
moving to JDT CORE
Filtering with enclosing types is guilty.

class X {
   void bar(){
	new Object(){
		void foo(){
			getClas&lt;CODE ASSIST&gt;
		}
	}
   }
}
Actually, the code assist infrastructure effectively find 2 legite matches, but 
the UI doesn't present the difference.

First match would be 'this.getClass()' --&gt; X$1.class
Second match would be 'X.this.getClass()' --&gt; X.class

The second match completion name would cause insertion of qualified X.this.

Back to JDT/UI.
Candidate fpor F4
defer
A solution would be to show

getClass() for this.getClass()
X.this.getClass() for X.this.getClass()


Reopening for 2.1 consideration
Still an issue in 3.0 M2
Removing the 'readme' keyword: this is to minor to put it into the README.
Still an issue in 3.5 M7.
*** Bug 289976 has been marked as a duplicate of this bug. ***
*** Bug 295229 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>I'll insert a screen shot that gives you the details.
Created attachment 1351
Context is a static method in a class that's badly indented.
moving to JDT CORE
Filtering with enclosing types is guilty.

class X {
   void bar(){
	new Object(){
		void foo(){
			getClas&lt;CODE ASSIST&gt;
		}
	}
   }
}
Actually, the code assist infrastructure effectively find 2 legite matches, but 
the UI doesn't present the difference.

First match would be 'this.getClass()' --&gt; X$1.class
Second match would be 'X.this.getClass()' --&gt; X.class

The second match completion name would cause insertion of qualified X.this.

Back to JDT/UI.
Candidate fpor F4
defer
A solution would be to show

getClass() for this.getClass()
X.this.getClass() for X.this.getClass()


Reopening for 2.1 consideration
Still an issue in 3.0 M2
Removing the 'readme' keyword: this is to minor to put it into the README.
Still an issue in 3.5 M7.
*** Bug 289976 has been marked as a duplicate of this bug. ***
*** Bug 295229 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19893" />
    <CreationDate amount="2002-06-11 09:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>corrupt workspace in F2</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331255128">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason>java.lang.NullPointerException</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.InternalPlatform.activateDefaultPlugins(InternalPlatform.java:113)</Frame>
          <Frame depth="1">org.eclipse.core.internal.runtime.InternalPlatform.loaderStartup(InternalPlatform.java:554)</Frame>
          <Frame depth="2">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="3">org.eclipse.core.internal.boot.InternalBootLoader.startup(InternalBootLoader.java:873)</Frame>
          <Frame depth="4">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:732)</Frame>
          <Frame depth="5">org.eclipse.core.boot.BootLoader.run(BootLoader.java:432)</Frame>
          <Frame depth="6">EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- adding new writer (increment version id)</Line>
          <Line>- adding new reader</Line>
          <Line>- adding known bytes at end of file (4 3 2 1?) to ensure we have read the</Line>
          <Line>whole registry cache</Line>
          <Line>Fix is even easier than expected. (gotta like it when that happens!)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: F2
I can no longer run my target workbench.  I get the following exception in my 
dev workbench when I try to run the target:
java.lang.reflect.InvocationTargetException: java.lang.NullPointerException
	at 
org.eclipse.core.internal.runtime.InternalPlatform.activateDefaultPlugins
(InternalPlatform.java:113)
	at org.eclipse.core.internal.runtime.InternalPlatform.loaderStartup
(InternalPlatform.java:554)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.internal.boot.InternalBootLoader.startup
(InternalBootLoader.java:873)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:732)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432)
	at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)
Exception in thread "main" 

(in activateDefaultPlugins(), descriptor is null - that is what is causing the 
null pointer exception)

I will attach the contents of the log for the session.

In my development environment, I am using around 400 external plugins, 
including the eclipse base plugins.  There are about 20 projects in my 
workpsace (session.txt).

Before this happened, I would close my target workbench and it would still 
appear to still be running in the Debug view, so i would terminate it.  Then I 
would get an error that said there were problems terminating, even though the 
target workbench now appeared to be terminated in the Debug view.  
I will attach what I think was written to the log when this happened (terminate-
problem.txt)
Created attachment 1352
log contents for corrupt ws
Created attachment 1353
log contents for problem terminating target wb
The corrupt workspace is in my public directory.  It is called runtime-
workspace.zip
Registry file may be corrupt since i terminated the target while it was 
shutting down.  I have placed the .registry file, along with the corrupt 
workspace .zip, in my public directory, in directory named with bug ID#.
The runtime plugin was not in the plugin registry, which caused the NPE.  When I 
deleted the .registry file, it started up with no further problems.
Investigate for 2.0.

Look at:
- adding new writer (increment version id)
- adding new reader
- adding known bytes at end of file (4 3 2 1?) to ensure we have read the 
whole registry cache
Fix is even easier than expected. (gotta like it when that happens!)

We already serialize begin/end tags for the registry cache file. 

If we read the end tag, then we returned the cache that we have read. 

If we got an EOF exception then we returned what we had read. This is 
incorrect and should return "no cached registry, please re-parse". (read: null)

Fix ready to be reviewed and released.
Fixed. Reviewed. Tested. Released.</WithStack>
    <WithOutStack>Build: F2
I can no longer run my target workbench.  I get the following exception in my 
dev workbench when I try to run the target:

Exception in thread "main" 

(in activateDefaultPlugins(), descriptor is null - that is what is causing the 
null pointer exception)

I will attach the contents of the log for the session.

In my development environment, I am using around 400 external plugins, 
including the eclipse base plugins.  There are about 20 projects in my 
workpsace (session.txt).

Before this happened, I would close my target workbench and it would still 
appear to still be running in the Debug view, so i would terminate it.  Then I 
would get an error that said there were problems terminating, even though the 
target workbench now appeared to be terminated in the Debug view.  
I will attach what I think was written to the log when this happened (terminate-
problem.txt)
Created attachment 1352
log contents for corrupt ws
Created attachment 1353
log contents for problem terminating target wb
The corrupt workspace is in my public directory.  It is called runtime-
workspace.zip
Registry file may be corrupt since i terminated the target while it was 
shutting down.  I have placed the .registry file, along with the corrupt 
workspace .zip, in my public directory, in directory named with bug ID#.
The runtime plugin was not in the plugin registry, which caused the NPE.  When I 
deleted the .registry file, it started up with no further problems.
Investigate for 2.0.

Look at:
- adding new writer (increment version id)
- adding new reader
- adding known bytes at end of file (4 3 2 1?) to ensure we have read the 
whole registry cache
Fix is even easier than expected. (gotta like it when that happens!)

We already serialize begin/end tags for the registry cache file. 

If we read the end tag, then we returned the cache that we have read. 

If we got an EOF exception then we returned what we had read. This is 
incorrect and should return "no cached registry, please re-parse". (read: null)

Fix ready to be reviewed and released.
Fixed. Reviewed. Tested. Released.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19894" />
    <CreationDate amount="2002-06-11 09:39:00 -0400" />
    <DupId amount="22815" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Delete Key doesn't work for debug applications</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In WSAD 1.0 I was able to select an app that I have been debugging in the Debug 
window and hit the delete key. The app would be terminated and removed in one 
step. The delete key doesn't do anything in Eclipse 2.0.
Is this a regression or was this feature intentionally removed?
I can see that is was removed because all of our actions are now contributed 
via XML, and there is not way to hook the "delete key" action via XML. I do not 
think this was not intentionally removed.
Clarification of last statement: "I do not think this was intentional.". 

However, we also had some complaints about this action in 1.0, since it was a 
bit too powerful, and there was no "delete" confirmation when the delete key 
was pressed.
Since this does not appear critical, and there were some complaints about this 
feature, I'm going to defer this for post 2.0 consideration.
I would like to close this bug report. Are there any "user" complaints/requests 
for this feature to re-appear?
Re-open as dup


*** This bug has been marked as a duplicate of 22815 ***</WithStack>
    <WithOutStack>In WSAD 1.0 I was able to select an app that I have been debugging in the Debug 
window and hit the delete key. The app would be terminated and removed in one 
step. The delete key doesn't do anything in Eclipse 2.0.
Is this a regression or was this feature intentionally removed?
I can see that is was removed because all of our actions are now contributed 
via XML, and there is not way to hook the "delete key" action via XML. I do not 
think this was not intentionally removed.
Clarification of last statement: "I do not think this was intentional.". 

However, we also had some complaints about this action in 1.0, since it was a 
bit too powerful, and there was no "delete" confirmation when the delete key 
was pressed.
Since this does not appear critical, and there were some complaints about this 
feature, I'm going to defer this for post 2.0 consideration.
I would like to close this bug report. Are there any "user" complaints/requests 
for this feature to re-appear?
Re-open as dup


*** This bug has been marked as a duplicate of 22815 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19895" />
    <CreationDate amount="2002-06-11 09:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No source when importing swt</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>0. new SDK build; new workspace</Line>
          <Line>1. import the following plug-ins from base install:</Line>
          <Line>org.apache.xerces</Line>
          <Line>org.eclipse.core.boot</Line>
          <Line>org.eclipse.core.resources</Line>
          <Line>org.eclipse.core.resources.win32</Line>
          <Line>org.eclipse.core.runtime</Line>
          <Line>org.eclipse.swt</Line>
          <Line>org.eclipse.swt.win32</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Eclipse Release: f2 (20020602)
Platform: Windows 2000/Windows 98

When importing the swt plugin org.eclipse.swt and org.eclipse.swt.win32 I only 
receive the binary, there is no source associated with these plugins.

file -&gt; import -&gt; External Plug-ins and Fragments 
Both Choose from plug-in and Extract source archives are checked on the Import 
Plug-ins and Fragments pop-up.
Works for me with SDK build 20020610 on Windows XP. My steps:
0. new SDK build; new workspace
1. import the following plug-ins from base install:
org.apache.xerces
org.eclipse.core.boot
org.eclipse.core.resources
org.eclipse.core.resources.win32
org.eclipse.core.runtime
org.eclipse.swt
org.eclipse.swt.win32

Observe: org.eclipse.swt.win32/ws/win32/ contains swt.jar and swtsrc.zip

The above steps were with Extract source archives unchecked.

When I check Extract source archives and re-import the two SWT plug-ins,
the result is the same. That is, the source zip is not unzipped.
So this problem does still exist in 20020610.

PDE cannot reconstruct SWT because it uses non-standard plug-in/fragment 
separation. SWT is one big project in the repository that is cut into plug-in 
and fragments during the build using the custom Ant script. It is done in such 
a way that it cannot be reconstructed back. This is a permanent limitation for 
2.0
I don't understand.  It is not neccessary to reconstruct the structure SWT has 
in the CVS repository.  All you need to do is have one source folder under 
which all the classes in the jar appear.

How is this different from any other fragment that contributes a jar?  Is it 
non-standard to have a jar in the fragment?
It is certanly strange to use a fragment as a classpath expansion, as in SWT. 
SWT has a 'library' statement that is resolved into a JAR in a fragment 
project. What does importing with source mean in this case? Do we extract 
source code into swt plug-in project or swt fragment project that physically 
has the JAR but has no formal statements about it? Extraction from source is 
designed to create a layout that is very close to the original repository 
layout, which is not possible with SWT, or with any plug-in that makes cross-
fragment references using replacement variables.</WithStack>
    <WithOutStack>Eclipse Release: f2 (20020602)
Platform: Windows 2000/Windows 98

When importing the swt plugin org.eclipse.swt and org.eclipse.swt.win32 I only 
receive the binary, there is no source associated with these plugins.

file -&gt; import -&gt; External Plug-ins and Fragments 
Both Choose from plug-in and Extract source archives are checked on the Import 
Plug-ins and Fragments pop-up.
Works for me with SDK build 20020610 on Windows XP. My steps:
0. new SDK build; new workspace
1. import the following plug-ins from base install:
org.apache.xerces
org.eclipse.core.boot
org.eclipse.core.resources
org.eclipse.core.resources.win32
org.eclipse.core.runtime
org.eclipse.swt
org.eclipse.swt.win32

Observe: org.eclipse.swt.win32/ws/win32/ contains swt.jar and swtsrc.zip

The above steps were with Extract source archives unchecked.

When I check Extract source archives and re-import the two SWT plug-ins,
the result is the same. That is, the source zip is not unzipped.
So this problem does still exist in 20020610.

PDE cannot reconstruct SWT because it uses non-standard plug-in/fragment 
separation. SWT is one big project in the repository that is cut into plug-in 
and fragments during the build using the custom Ant script. It is done in such 
a way that it cannot be reconstructed back. This is a permanent limitation for 
2.0
I don't understand.  It is not neccessary to reconstruct the structure SWT has 
in the CVS repository.  All you need to do is have one source folder under 
which all the classes in the jar appear.

How is this different from any other fragment that contributes a jar?  Is it 
non-standard to have a jar in the fragment?
It is certanly strange to use a fragment as a classpath expansion, as in SWT. 
SWT has a 'library' statement that is resolved into a JAR in a fragment 
project. What does importing with source mean in this case? Do we extract 
source code into swt plug-in project or swt fragment project that physically 
has the JAR but has no formal statements about it? Extraction from source is 
designed to create a layout that is very close to the original repository 
layout, which is not possible with SWT, or with any plug-in that makes cross-
fragment references using replacement variables.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19896" />
    <CreationDate amount="2002-06-11 09:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Key up event says Ctrl is released when it's not</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="functiondef">
        <location start="1201" end="1896" />
        <code>public static void main (String [] args) {
	Display display = new Display ();
	Shell shell = new Shell (display);
	shell.setSize (200, 200);
	shell.open ();
	shell.addListener (SWT.KeyDown, new Listener () {
		public void handleEvent (Event e) {
			System.out.println ("DOWN char='" + (short)e.character 
+ "' keyCode=" + e.keyCode + " stateMask=" + e.stateMask);
		}
	});
	shell.addListener (SWT.KeyUp, new Listener () {
		public void handleEvent (Event e) {
			System.out.println ("UP char='" + (short)e.character 
+ "' keyCode=" + e.keyCode + " stateMask=" + e.stateMask);
		}
	});
	while (!shell.isDisposed ()) {
		if (!display.readAndDispatch ()) display.sleep ();
	}
	display.dispose ();
}</code>
      </source_code>
      <source_code type="import">
        <location start="1974" end="2001" />
        <code>import org.eclipse.swt.*;</code>
      </source_code>
      <source_code type="import">
        <location start="2002" end="2035" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="class">
        <location start="2037" end="4128" />
        <code>public class PR_19896 {
public static void main (String [] args) {
	Display display = new Display ();
	final Shell shell = new Shell (display);
	Menu menuBar = new Menu (shell, SWT.BAR);
	MenuItem fileItem = new MenuItem (menuBar, SWT.CASCADE);
	fileItem.setText ("File");
	Menu fileMenu = new Menu (shell, SWT.DROP_DOWN);
	MenuItem editItem = new MenuItem (fileMenu, SWT.PUSH);
	editItem.setText ("Edit\tCtrl+E");
	editItem.setAccelerator (SWT.CTRL + 'E');
	fileItem.setMenu (fileMenu);
	shell.setMenuBar (menuBar);
	editItem.addListener (SWT.Selection, new Listener () {
		public void handleEvent (Event e) {
			final Shell dialog = new Shell (shell);
			dialog.setSize (200, 200);
			dialog.open ();
			Listener listener = new Listener() {
				public void handleEvent(Event e) {
					String string = e.type == 
SWT.KeyDown ? "DOWN" : "UP  ";
					string += ": stateMask=0x" + 
Integer.toHexString(e.stateMask);
					if ((e.stateMask &amp; SWT.CTRL) != 0) 
string += " CTRL";
					if ((e.stateMask &amp; SWT.ALT) != 0) 
string += " ALT";
					if ((e.stateMask &amp; SWT.SHIFT) != 0) 
string += " SHIFT";
					if ((e.stateMask &amp; SWT.COMMAND) != 0) 
string += " COMMAND";
					string += ", keyCode=0x" + 
Integer.toHexString (e.keyCode);
					string += ", character=0x" + 
Integer.toHexString (e.character);
					switch (e.character) {
						case 0: 		string 
+= " '\\0'"; break;
						case SWT.BS:	string 
+= " '\\b'"; break;
						case SWT.CR:	string 
+= " '\\r'"; break;
						case SWT.DEL:	string += " 
DEL"; break;
						case SWT.ESC:	string += " 
ESC"; break;
						case SWT.LF:	string 
+= " '\\n'"; break;
						case SWT.TAB:	string 
+= " '\\t'"; break;
						default:		string 
+= " '" + e.character +"'"; break;
					}
					System.out.println (string);
					if (e.type == SWT.KeyUp &amp;&amp; e.stateMask 
== e.keyCode) dialog.close ();
				}
			};
			dialog.addListener(SWT.KeyDown, listener);
			dialog.addListener(SWT.KeyUp, listener);
		}
	});
	shell.setSize (200, 200);
	shell.open ();
	while (!shell.isDisposed ()) {
		if (!display.readAndDispatch ()) display.sleep ();
	}
	display.dispose ();
}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- press Ctrl -&gt; key down event for Ctrl</Line>
          <Line>- press Ctrl E -&gt; key down event for E (with Ctrl state still set)</Line>
          <Line>- accelerator for Ctrl+E fires, bringing up editor switcher</Line>
          <Line>- we hook a key listener</Line>
          <Line>- release E (with Ctrl still held down) -&gt; key up event for E, but claims Ctrl</Line>
          <Line>has been released</Line>
          <Line>- so we dismiss the switcher</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020610

We would like to change the editor switcher to use Ctrl+E instead of Ctrl+F6 
(bug 19832).  In investigating this, we noticed the following behaviour:

- press Ctrl -&gt; key down event for Ctrl
- press Ctrl E -&gt; key down event for E (with Ctrl state still set)
- accelerator for Ctrl+E fires, bringing up editor switcher
- we hook a key listener
- release E (with Ctrl still held down) -&gt; key up event for E, but claims Ctrl 
has been released
- so we dismiss the switcher

The key up event should still have the state mask indicating Ctrl is still down.
Please consider this for F3.  I think Ctrl+E would be much more usable than 
Ctrl+F6.

A workaround would be fine.

Steve, is there anything we can do about this. It's causing them serious grief 
in their editor implementation
This is moot for 2.0.  I've given Ctrl+E to the editor for delete line.
We will not be changing the editor switcher for 2.0.

Should still look at the key up event situation though.
The problem is that the original accel gets eaten by Windows and this messes up 
our key up strategy.  I can't prove this right now but I suspect it is true 
given that the following simple code does not have the problem:

public static void main (String [] args) {
	Display display = new Display ();
	Shell shell = new Shell (display);
	shell.setSize (200, 200);
	shell.open ();
	shell.addListener (SWT.KeyDown, new Listener () {
		public void handleEvent (Event e) {
			System.out.println ("DOWN char='" + (short)e.character 
+ "' keyCode=" + e.keyCode + " stateMask=" + e.stateMask);
		}
	});
	shell.addListener (SWT.KeyUp, new Listener () {
		public void handleEvent (Event e) {
			System.out.println ("UP char='" + (short)e.character 
+ "' keyCode=" + e.keyCode + " stateMask=" + e.stateMask);
		}
	});
	while (!shell.isDisposed ()) {
		if (!display.readAndDispatch ()) display.sleep ();
	}
	display.dispose ();
}

Here is some code that shows the problem.  NOTE: The behavior intermittant.


import org.eclipse.swt.*;
import org.eclipse.swt.widgets.*;

public class PR_19896 {
public static void main (String [] args) {
	Display display = new Display ();
	final Shell shell = new Shell (display);
	Menu menuBar = new Menu (shell, SWT.BAR);
	MenuItem fileItem = new MenuItem (menuBar, SWT.CASCADE);
	fileItem.setText ("File");
	Menu fileMenu = new Menu (shell, SWT.DROP_DOWN);
	MenuItem editItem = new MenuItem (fileMenu, SWT.PUSH);
	editItem.setText ("Edit\tCtrl+E");
	editItem.setAccelerator (SWT.CTRL + 'E');
	fileItem.setMenu (fileMenu);
	shell.setMenuBar (menuBar);
	editItem.addListener (SWT.Selection, new Listener () {
		public void handleEvent (Event e) {
			final Shell dialog = new Shell (shell);
			dialog.setSize (200, 200);
			dialog.open ();
			Listener listener = new Listener() {
				public void handleEvent(Event e) {
					String string = e.type == 
SWT.KeyDown ? "DOWN" : "UP  ";
					string += ": stateMask=0x" + 
Integer.toHexString(e.stateMask);
					if ((e.stateMask &amp; SWT.CTRL) != 0) 
string += " CTRL";
					if ((e.stateMask &amp; SWT.ALT) != 0) 
string += " ALT";
					if ((e.stateMask &amp; SWT.SHIFT) != 0) 
string += " SHIFT";
					if ((e.stateMask &amp; SWT.COMMAND) != 0) 
string += " COMMAND";
					string += ", keyCode=0x" + 
Integer.toHexString (e.keyCode);
					string += ", character=0x" + 
Integer.toHexString (e.character);
					switch (e.character) {
						case 0: 		string 
+= " '\\0'"; break;
						case SWT.BS:	string 
+= " '\\b'"; break;
						case SWT.CR:	string 
+= " '\\r'"; break;
						case SWT.DEL:	string += " 
DEL"; break;
						case SWT.ESC:	string += " 
ESC"; break;
						case SWT.LF:	string 
+= " '\\n'"; break;
						case SWT.TAB:	string 
+= " '\\t'"; break;
						default:		string 
+= " '" + e.character +"'"; break;
					}
					System.out.println (string);
					if (e.type == SWT.KeyUp &amp;&amp; e.stateMask 
== e.keyCode) dialog.close ();
				}
			};
			dialog.addListener(SWT.KeyDown, listener);
			dialog.addListener(SWT.KeyUp, listener);
		}
	});
	shell.setSize (200, 200);
	shell.open ();
	while (!shell.isDisposed ()) {
		if (!display.readAndDispatch ()) display.sleep ();
	}
	display.dispose ();
}
}
Fixed &gt; 20030304

You will no longer get the key release with the wrong value.</WithStack>
    <WithOutStack>Build 20020610

We would like to change the editor switcher to use Ctrl+E instead of Ctrl+F6 
(bug 19832).  In investigating this, we noticed the following behaviour:

- press Ctrl -&gt; key down event for Ctrl
- press Ctrl E -&gt; key down event for E (with Ctrl state still set)
- accelerator for Ctrl+E fires, bringing up editor switcher
- we hook a key listener
- release E (with Ctrl still held down) -&gt; key up event for E, but claims Ctrl 
has been released
- so we dismiss the switcher

The key up event should still have the state mask indicating Ctrl is still down.
Please consider this for F3.  I think Ctrl+E would be much more usable than 
Ctrl+F6.

A workaround would be fine.

Steve, is there anything we can do about this. It's causing them serious grief 
in their editor implementation
This is moot for 2.0.  I've given Ctrl+E to the editor for delete line.
We will not be changing the editor switcher for 2.0.

Should still look at the key up event situation though.
The problem is that the original accel gets eaten by Windows and this messes up 
our key up strategy.  I can't prove this right now but I suspect it is true 
given that the following simple code does not have the problem:

public static void main (String [] args) {
	Display display = new Display ();
	Shell shell = new Shell (display);
	shell.setSize (200, 200);
	shell.open ();
	shell.addListener (SWT.KeyDown, new Listener () {
		public void handleEvent (Event e) {
			System.out.println ("DOWN char='" + (short)e.character 
+ "' keyCode=" + e.keyCode + " stateMask=" + e.stateMask);
		}
	});
	shell.addListener (SWT.KeyUp, new Listener () {
		public void handleEvent (Event e) {
			System.out.println ("UP char='" + (short)e.character 
+ "' keyCode=" + e.keyCode + " stateMask=" + e.stateMask);
		}
	});
	while (!shell.isDisposed ()) {
		if (!display.readAndDispatch ()) display.sleep ();
	}
	display.dispose ();
}

Here is some code that shows the problem.  NOTE: The behavior intermittant.


import org.eclipse.swt.*;
import org.eclipse.swt.widgets.*;

public class PR_19896 {
public static void main (String [] args) {
	Display display = new Display ();
	final Shell shell = new Shell (display);
	Menu menuBar = new Menu (shell, SWT.BAR);
	MenuItem fileItem = new MenuItem (menuBar, SWT.CASCADE);
	fileItem.setText ("File");
	Menu fileMenu = new Menu (shell, SWT.DROP_DOWN);
	MenuItem editItem = new MenuItem (fileMenu, SWT.PUSH);
	editItem.setText ("Edit\tCtrl+E");
	editItem.setAccelerator (SWT.CTRL + 'E');
	fileItem.setMenu (fileMenu);
	shell.setMenuBar (menuBar);
	editItem.addListener (SWT.Selection, new Listener () {
		public void handleEvent (Event e) {
			final Shell dialog = new Shell (shell);
			dialog.setSize (200, 200);
			dialog.open ();
			Listener listener = new Listener() {
				public void handleEvent(Event e) {
					String string = e.type == 
SWT.KeyDown ? "DOWN" : "UP  ";
					string += ": stateMask=0x" + 
Integer.toHexString(e.stateMask);
					if ((e.stateMask &amp; SWT.CTRL) != 0) 
string += " CTRL";
					if ((e.stateMask &amp; SWT.ALT) != 0) 
string += " ALT";
					if ((e.stateMask &amp; SWT.SHIFT) != 0) 
string += " SHIFT";
					if ((e.stateMask &amp; SWT.COMMAND) != 0) 
string += " COMMAND";
					string += ", keyCode=0x" + 
Integer.toHexString (e.keyCode);
					string += ", character=0x" + 
Integer.toHexString (e.character);
					switch (e.character) {
						case 0: 		string 
+= " '\\0'"; break;
						case SWT.BS:	string 
+= " '\\b'"; break;
						case SWT.CR:	string 
+= " '\\r'"; break;
						case SWT.DEL:	string += " 
DEL"; break;
						case SWT.ESC:	string += " 
ESC"; break;
						case SWT.LF:	string 
+= " '\\n'"; break;
						case SWT.TAB:	string 
+= " '\\t'"; break;
						default:		string 
+= " '" + e.character +"'"; break;
					}
					System.out.println (string);
					if (e.type == SWT.KeyUp &amp;&amp; e.stateMask 
== e.keyCode) dialog.close ();
				}
			};
			dialog.addListener(SWT.KeyDown, listener);
			dialog.addListener(SWT.KeyUp, listener);
		}
	});
	shell.setSize (200, 200);
	shell.open ();
	while (!shell.isDisposed ()) {
		if (!display.readAndDispatch ()) display.sleep ();
	}
	display.dispose ();
}
}
Fixed &gt; 20030304

You will no longer get the key release with the wrong value.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19897" />
    <CreationDate amount="2002-06-11 09:52:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cheese in Java editor with highlight current line option and text selection</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build F2. Try this: Write a statement with an unimported type, for example "Map
map = new HashMap();". Select "HashMap" and press Ctrl+Shift+M to add an import.
Observe the cheese on the highlighted line. It goes away when the cursor is
moved to this line again.
Forgot to add that the problem seems to result from opening a new window/dialog
or losing the focus to another.
Works for me in 2.0</WithStack>
    <WithOutStack>Build F2. Try this: Write a statement with an unimported type, for example "Map
map = new HashMap();". Select "HashMap" and press Ctrl+Shift+M to add an import.
Observe the cheese on the highlighted line. It goes away when the cursor is
moved to this line again.
Forgot to add that the problem seems to result from opening a new window/dialog
or losing the focus to another.
Works for me in 2.0</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19898" />
    <CreationDate amount="2002-06-11 09:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>StackOverflowError in BinaryExpression</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="assignment">
        <location start="814" end="867" />
        <code>e.g. String s = "aaa" + "aab" + "aac" + .... + "zzz";</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>1) open org.eclipse.jdt.tests.core.TypeHierarchyTests.</Line>
          <Line>2) add an error in this class.</Line>
          <Line>3) click on the Quick Fix light.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="8">
        <Lines>
          <Line>1) open the ASTView (Window-&gt;Show View-&gt;Other...-&gt;Java-&gt;ASTView),</Line>
          <Line>2) open the file (ConformTest.java or OldSearchTests.java),</Line>
          <Line>3) click on ASTView bar button 'Show AST of active editor'</Line>
          <Line>=&gt; you get the StackOverflow exception...</Line>
          <Line>This is fixed and released in HEAD.</Line>
          <Line>AST view is still failing for OldSearchTests, because of the recursion done in</Line>
          <Line>the AST visitor, but it is fixed for ConformTests.</Line>
          <Line>Verified for 3.0M9</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>1) open org.eclipse.jdt.tests.core.TypeHierarchyTests.
2) add an error in this class.
3) click on the Quick Fix light.

StackTrace:
	at org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType
(BinaryExpression.java:1638)
	at org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType
(BinaryExpression.java:1638)
	at org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType

        ...

(BinaryExpression.java:1638)
	at org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType
(BinaryExpression.java:1638)
	at org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType
(BinaryExpression.java:1638
Defer... DOM APIs should be protected.
There is some potential for this to occur in outliner. The DOM AST isn't able 
to treat multi string concatenations in one node.

e.g. String s = "aaa" + "aab" + "aac" + .... + "zzz";

It should perform similar optimization as compiler does.
Actually, previous comment should have said that it has potential to occur in 
AST created during reconcile operation.
InfixExpression.extendedOperands allows multi-string concatenations etc. to be 
represented as broad, flat ASTs.
Olivier - pls verify that DOM AST had now support for handling these n-ary 
operations (should be InfixExpression.extendedOperands).

Also check that DOM AST constructed during #reconcile operation is indeed 
building such a flavor of an AST.
Suspecting this to cause the fact we cannot open the ASTView on OldSearchTests.
Ask Frederic Fusier for exact steps to reproduce.
You can get it also with ConformTest.
To reproduce it:
1) open the ASTView (Window-&gt;Show View-&gt;Other...-&gt;Java-&gt;ASTView), 
2) open the file (ConformTest.java or OldSearchTests.java),
3) click on ASTView bar button 'Show AST of active editor'
=&gt; you get the StackOverflow exception...
This is fixed and released in HEAD.
AST view is still failing for OldSearchTests, because of the recursion done in
the AST visitor, but it is fixed for ConformTests.
Verified for 3.0M9</WithStack>
    <WithOutStack>1) open org.eclipse.jdt.tests.core.TypeHierarchyTests.
2) add an error in this class.
3) click on the Quick Fix light.

StackTrace:
	at org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType
(BinaryExpression.java:1638)
	at org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType
(BinaryExpression.java:1638)
	at org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType

        ...

(BinaryExpression.java:1638)
	at org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType
(BinaryExpression.java:1638)
	at org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType
(BinaryExpression.java:1638
Defer... DOM APIs should be protected.
There is some potential for this to occur in outliner. The DOM AST isn't able 
to treat multi string concatenations in one node.

e.g. String s = "aaa" + "aab" + "aac" + .... + "zzz";

It should perform similar optimization as compiler does.
Actually, previous comment should have said that it has potential to occur in 
AST created during reconcile operation.
InfixExpression.extendedOperands allows multi-string concatenations etc. to be 
represented as broad, flat ASTs.
Olivier - pls verify that DOM AST had now support for handling these n-ary 
operations (should be InfixExpression.extendedOperands).

Also check that DOM AST constructed during #reconcile operation is indeed 
building such a flavor of an AST.
Suspecting this to cause the fact we cannot open the ASTView on OldSearchTests.
Ask Frederic Fusier for exact steps to reproduce.
You can get it also with ConformTest.
To reproduce it:
1) open the ASTView (Window-&gt;Show View-&gt;Other...-&gt;Java-&gt;ASTView), 
2) open the file (ConformTest.java or OldSearchTests.java),
3) click on ASTView bar button 'Show AST of active editor'
=&gt; you get the StackOverflow exception...
This is fixed and released in HEAD.
AST view is still failing for OldSearchTests, because of the recursion done in
the AST visitor, but it is fixed for ConformTests.
Verified for 3.0M9</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19899" />
    <CreationDate amount="2002-06-11 09:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>If the user never changes the Ant classpath, it should always be computed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>build F2

Currently, the first time Eclipse runs, the Ant classpath is computed and 
saved on exit even if the user has not changed it. If the user gets a new 
version of Eclipse and installs it in a different location, the Ant classpath 
is incorrect.
In order to make it better the classpath should only be saved if the user has 
changed it. Otherwise, it should always be computed.
Defer after 2.0.
Reconsider.
If ant classpath is the default ant classpath, it is not stored as a preference.
This has the side effect of the default ant classpath always being computed if 
no custom classpath is set.
Please verify changes to AntCorePreferences.
Please verify (Darin W)
Note that if the user has been using a workspace for some time and has changed 
the installed version of Eclipse, the default classpath will not be correct.  
The user will have to "restore default" on the External Tools-&gt;Ant preference 
page to fix the problem.  After this single intervention by the user, older 
workspaces will stay up to date.
That is exactly why I've opened this bug :-)
If a workspace has been used on the old codebase there is no way to tell that 
the persisted classpath is an old default classpath.  Any workspace that is 
only used on the new codebase can never get into this state (the default 
classpath is never persisted).
Reopening to reassign for M2 verification.
Please verify Darin W
Verified. (But I'm going to open a new feature request... :-)</WithStack>
    <WithOutStack>build F2

Currently, the first time Eclipse runs, the Ant classpath is computed and 
saved on exit even if the user has not changed it. If the user gets a new 
version of Eclipse and installs it in a different location, the Ant classpath 
is incorrect.
In order to make it better the classpath should only be saved if the user has 
changed it. Otherwise, it should always be computed.
Defer after 2.0.
Reconsider.
If ant classpath is the default ant classpath, it is not stored as a preference.
This has the side effect of the default ant classpath always being computed if 
no custom classpath is set.
Please verify changes to AntCorePreferences.
Please verify (Darin W)
Note that if the user has been using a workspace for some time and has changed 
the installed version of Eclipse, the default classpath will not be correct.  
The user will have to "restore default" on the External Tools-&gt;Ant preference 
page to fix the problem.  After this single intervention by the user, older 
workspaces will stay up to date.
That is exactly why I've opened this bug :-)
If a workspace has been used on the old codebase there is no way to tell that 
the persisted classpath is an old default classpath.  Any workspace that is 
only used on the new codebase can never get into this state (the default 
classpath is never persisted).
Reopening to reassign for M2 verification.
Please verify Darin W
Verified. (But I'm going to open a new feature request... :-)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="19900" />
    <CreationDate amount="2002-06-11 10:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Emacs: Alt+&lt; bindings</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20020610

The current binding for goto.textStart includes the declarations
"Alt+Shift+&amp;lt;" and "Esc Shift+&amp;lt;". These declarations are incorrect. In 
0610, pressing the three keys Alt, Shift, and &lt; will insert a '&lt;' character.
The bindings shoud be changed to read "Alt+&amp;lt;" and "Esc &amp;lt;". 

There is a corresponding problem with the bindings for goto.textEnd.
Fix reviewed by NE and EJP and released.
Verified in 20020612</WithStack>
    <WithOutStack>Build 20020610

The current binding for goto.textStart includes the declarations
"Alt+Shift+&amp;lt;" and "Esc Shift+&amp;lt;". These declarations are incorrect. In 
0610, pressing the three keys Alt, Shift, and &lt; will insert a '&lt;' character.
The bindings shoud be changed to read "Alt+&amp;lt;" and "Esc &amp;lt;". 

There is a corresponding problem with the bindings for goto.textEnd.
Fix reviewed by NE and EJP and released.
Verified in 20020612</WithOutStack>
  </Bug>
</infozilla-output>

