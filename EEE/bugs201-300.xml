<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="201" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[Team API] Need a version proposer (1GFZCAS)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I programmatically version something to the repository using the "non official" vcm API. While doing so I encountered the
	problem to propose a version label. It would be helpful to have something like an IVersionLabelProposer in the API.


NOTES:
PRODUCT VERSION:
	R 0.9


marked feature request
Reopening
We would need a standard API for versioning before a version proposer would be 
useful but we should keep this around since it is conceivable that we will 
eventually have one.
There is no plan to address this item. The RelEng release tool proposes 
versions when releasing</WithStack>
    <WithOutStack>I programmatically version something to the repository using the "non official" vcm API. While doing so I encountered the
	problem to propose a version label. It would be helpful to have something like an IVersionLabelProposer in the API.


NOTES:
PRODUCT VERSION:
	R 0.9


marked feature request
Reopening
We would need a standard API for versioning before a version proposer would be 
useful but we should keep this around since it is conceivable that we will 
eventually have one.
There is no plan to address this item. The RelEng release tool proposes 
versions when releasing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="202" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>SSH: crc error on connection close (1GGFZV9)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. why do we care about the crc at when closing?</Line>
          <Line>2. is the crc calculation correct in close?</Line>
          <Line />
          <Line>JEM (7/9/2001 11:30:48 AM)</Line>
          <Line>3. is this crc error brought about by the flushing that we're doing when closing the connection?</Line>
          <Line>I think this only appeared after we fixed that code, but I'm not positive.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I am using the R0.9 version.  Several times now when I try to synchronize my
project I get the following error:
 
 java.io.IOException: crc error
  at org.eclipse.vcm.internal.core.ccvs.ssh.ServerPacket$PacketInputStream.close(
 ServerPacket.java(Compiled Code))
  at org.eclipse.vcm.internal.core.ccvs.ssh.Client$StandardInputStream.close(Clie
 nt.java:111)
  at org.eclipse.vcm.internal.core.ccvs.ssh.SSHServerConnection.close(SSHServerCo
 nnection.java:39)
  at org.eclipse.vcm.internal.core.ccvs.client.Connection.close(Connection.java:8
 3)
  at org.eclipse.vcm.internal.core.ccvs.client.Client.disconnect(Client.java:251)
  at  org.eclipse.vcm.internal.core.ccvs.CVSAdapter.fetchRemoteTree(CVSAdapter.jav
 a:578) 
  at org.eclipse.vcm.internal.core.Subscriber.refresh(Subscriber.java:516)
  at org.eclipse.vcm.internal.core.Subscriber$3.run(Subscriber.java:484)
  at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1194)
  at org.eclipse.vcm.internal.core.Subscriber.run(Subscriber.java:535)
  at
 org.eclipse.vcm.internal.core.SharingManager.run(SharingManager.java:676)
  at org.eclipse.vcm.internal.core.Subscriber.refresh(Subscriber.java:478)
  at
 org.eclipse.vcm.internal.ui.sync.Repository.doServerDelta(Repository.java:18
 1)
  at
 org.eclipse.vcm.internal.ui.sync.Repository$1.execute(Repository.java:225)
  at
 org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperati
 on.java:64)
  at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1194)
  at
 org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation
 .java:78)
  at
 org.eclipse.vcm.internal.ui.sync.Repository.localServerDelta(Repository.java
 :229)
  at
 org.eclipse.vcm.internal.ui.sync.SyncCompareInput.prepareInput(SyncCompareIn
 put.java:434)
  at org.eclipse.compare.CompareEditorInput.run(CompareEditorInput.java:596)
  at
 org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext
 .java:98)

NOTES:

Jean-Michel (7/6/01 8:40:15 AM)
	We should review the code and find out the following:
	1. why do we care about the crc at when closing?
	2. is the crc calculation correct in close?

JEM (7/9/2001 11:30:48 AM)
	3. is this crc error brought about by the flushing that we're doing when closing the connection?
		I think this only appeared after we fixed that code, but I'm not positive.

Jean-Michel (23/07/2001 10:51:52 AM)
	The code in close looks fine. I cannot reproduce this error. I would like to install ssh onto cvslnx
	so that we can test ssh during our daily development. SSH is already installed on dj and fiji 
	test machines.

Jean-Michel (26/07/2001 9:53:40 AM)
	SSH installed on both fiji and cvslnx. Sent an e-mail to vcm team so that we all use
	the 'extssh' connection method for development.
See bug 4944
[Fixed in v205]
PRODUCT VERSION:
R0.9</WithStack>
    <WithOutStack>I am using the R0.9 version.  Several times now when I try to synchronize my
project I get the following error:
 
 java.io.IOException: crc error
  at org.eclipse.vcm.internal.core.ccvs.ssh.ServerPacket$PacketInputStream.close(
 ServerPacket.java(Compiled Code))
  at org.eclipse.vcm.internal.core.ccvs.ssh.Client$StandardInputStream.close(Clie
 nt.java:111)
  at org.eclipse.vcm.internal.core.ccvs.ssh.SSHServerConnection.close(SSHServerCo
 nnection.java:39)
  at org.eclipse.vcm.internal.core.ccvs.client.Connection.close(Connection.java:8
 3)
  at org.eclipse.vcm.internal.core.ccvs.client.Client.disconnect(Client.java:251)
  at  org.eclipse.vcm.internal.core.ccvs.CVSAdapter.fetchRemoteTree(CVSAdapter.jav
 a:578) 
  at org.eclipse.vcm.internal.core.Subscriber.refresh(Subscriber.java:516)
  at org.eclipse.vcm.internal.core.Subscriber$3.run(Subscriber.java:484)
  at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1194)
  at org.eclipse.vcm.internal.core.Subscriber.run(Subscriber.java:535)
  at
 org.eclipse.vcm.internal.core.SharingManager.run(SharingManager.java:676)
  at org.eclipse.vcm.internal.core.Subscriber.refresh(Subscriber.java:478)
  at
 org.eclipse.vcm.internal.ui.sync.Repository.doServerDelta(Repository.java:18
 1)
  at
 org.eclipse.vcm.internal.ui.sync.Repository$1.execute(Repository.java:225)
  at
 org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperati
 on.java:64)
  at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1194)
  at
 org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation
 .java:78)
  at
 org.eclipse.vcm.internal.ui.sync.Repository.localServerDelta(Repository.java
 :229)
  at
 org.eclipse.vcm.internal.ui.sync.SyncCompareInput.prepareInput(SyncCompareIn
 put.java:434)
  at org.eclipse.compare.CompareEditorInput.run(CompareEditorInput.java:596)
  at
 org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext
 .java:98)

NOTES:

Jean-Michel (7/6/01 8:40:15 AM)
	We should review the code and find out the following:
	1. why do we care about the crc at when closing?
	2. is the crc calculation correct in close?

JEM (7/9/2001 11:30:48 AM)
	3. is this crc error brought about by the flushing that we're doing when closing the connection?
		I think this only appeared after we fixed that code, but I'm not positive.

Jean-Michel (23/07/2001 10:51:52 AM)
	The code in close looks fine. I cannot reproduce this error. I would like to install ssh onto cvslnx
	so that we can test ssh during our daily development. SSH is already installed on dj and fiji 
	test machines.

Jean-Michel (26/07/2001 9:53:40 AM)
	SSH installed on both fiji and cvslnx. Sent an e-mail to vcm team so that we all use
	the 'extssh' connection method for development.
See bug 4944
[Fixed in v205]
PRODUCT VERSION:
R0.9</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="203" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>(ECORNER) Missing nature when adding a project from an open source repository (1GGMAJC)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>EG (7/9/2001 12:12:23 PM)
	I've successfully connect to the sourceforge CVS repository using the SSH connection.
	However, when adding the project to the workspace it comes nature-less and there
	is no way assign a nature after the fact.

NOTES:
EG (7/9/2001 12:24:35 PM)
	the workaround is to manually create a .vcm_meta file, release it, delete the project, and
	load the project again. However, this only worked since I had release permissions in this 
	particular repository.

EG (7/10/01 10:38:02 AM)
	VCM should check whether there is a .vcm_meta file after the project
	got added to the workspace. If there isn't one the user is prompted for the
	project kind so that natures can be assigned.

Jean-Michel (10/07/2001 10:28:26 AM)
	Indeed, this is a problem. Another workaround, instead of having to manually create the .vcm_meta
	file, create a java project with the same name then add to workspace. The added project will retain the
	nature of the destination project. The .vcm_meta and .classpath 	files should then be released to the repo.

KM (7/10/2001 2:23:10 PM)
	Its not up to VCM to provide facilities for adding the nature (this is a core/desktop responsibility).
	Our job is to ensure that the state of the project is correctly reflected in the .vcm_meta.

	When do people get to configure nature specific values? (eg. Java build path list, setting of output folder, etc).
	There would need to be an extension point that people would register with for choosing and configuring the natures for a project.
	This is similar to the new wizard except it happens that VCM is the one who is initiating the project creation,
	but others could too programatically.
	If there were a facility to call in the UI such that natures could be chosen and configured, we would call it.

KM (8/23/2001 4:09:17 PM)
	As a quick fix, VCM could prompt for project type if there is no .vcm_meta, before loading the project.
	We then load overtop.
*** Bug 9513 has been marked as a duplicate of this bug. ***
Solved by Core/Desktop capabilities</WithStack>
    <WithOutStack>EG (7/9/2001 12:12:23 PM)
	I've successfully connect to the sourceforge CVS repository using the SSH connection.
	However, when adding the project to the workspace it comes nature-less and there
	is no way assign a nature after the fact.

NOTES:
EG (7/9/2001 12:24:35 PM)
	the workaround is to manually create a .vcm_meta file, release it, delete the project, and
	load the project again. However, this only worked since I had release permissions in this 
	particular repository.

EG (7/10/01 10:38:02 AM)
	VCM should check whether there is a .vcm_meta file after the project
	got added to the workspace. If there isn't one the user is prompted for the
	project kind so that natures can be assigned.

Jean-Michel (10/07/2001 10:28:26 AM)
	Indeed, this is a problem. Another workaround, instead of having to manually create the .vcm_meta
	file, create a java project with the same name then add to workspace. The added project will retain the
	nature of the destination project. The .vcm_meta and .classpath 	files should then be released to the repo.

KM (7/10/2001 2:23:10 PM)
	Its not up to VCM to provide facilities for adding the nature (this is a core/desktop responsibility).
	Our job is to ensure that the state of the project is correctly reflected in the .vcm_meta.

	When do people get to configure nature specific values? (eg. Java build path list, setting of output folder, etc).
	There would need to be an extension point that people would register with for choosing and configuring the natures for a project.
	This is similar to the new wizard except it happens that VCM is the one who is initiating the project creation,
	but others could too programatically.
	If there were a facility to call in the UI such that natures could be chosen and configured, we would call it.

KM (8/23/2001 4:09:17 PM)
	As a quick fix, VCM could prompt for project type if there is no .vcm_meta, before loading the project.
	We then load overtop.
*** Bug 9513 has been marked as a duplicate of this bug. ***
Solved by Core/Desktop capabilities</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="204" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>"Show version info" should show actual version info (1GGNLNU)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The show version info mode displays the team stream I am in, i.e. suffix [HEAD] which is generally useless. What I would like instead is to have show me the
version timestamp I have loaded (if any), and whether or not I am in sync with a team stream. 

If caring about the team stream name, there could be an extra optional 'show team stream info' menu action if necessary (unclear that this would be super necessary). 
I would rather want then a way to navigate from a project to its team stream/server connection in a synthetic view.

NOTES:

Jean-Michel (10/07/2001 11:32:14 AM)
	The stream name is useless if you are always working in the same stream but for those using multiple streams it is very useful!
	I'm not sure I understand what you mean by "version timestamp"? If you mean the version number, than
	that is already shown. Also, we show outgoing changes and dirty status for each file propagate to their parents.

PM (7/11/2001 1:25:14 PM)
	Switch on 'show version info', look in Navigator: you do not see anything useful at the project level. I would like to see the version
	name I entered.

	Unclear what value is provided by individual time stamps given I do not control these... but I guess they can be useful...

KM (9/12/2001 4:26:43 PM)
	If you've loaded a project version we should display its version info.
	We may need alternative display mechanism for those working in multiple streams.
	Or, if the project is modified since loaded as version we could reverse to showing stream name?

PM (9/24/2001 10:37:36 AM)
	All I would like is to see is the version name it was given when creating a project version. The stream it belongs to is always mentionned in the project
	properties.
PRODUCT VERSION:
SDK 125


tags now shown</WithStack>
    <WithOutStack>The show version info mode displays the team stream I am in, i.e. suffix [HEAD] which is generally useless. What I would like instead is to have show me the
version timestamp I have loaded (if any), and whether or not I am in sync with a team stream. 

If caring about the team stream name, there could be an extra optional 'show team stream info' menu action if necessary (unclear that this would be super necessary). 
I would rather want then a way to navigate from a project to its team stream/server connection in a synthetic view.

NOTES:

Jean-Michel (10/07/2001 11:32:14 AM)
	The stream name is useless if you are always working in the same stream but for those using multiple streams it is very useful!
	I'm not sure I understand what you mean by "version timestamp"? If you mean the version number, than
	that is already shown. Also, we show outgoing changes and dirty status for each file propagate to their parents.

PM (7/11/2001 1:25:14 PM)
	Switch on 'show version info', look in Navigator: you do not see anything useful at the project level. I would like to see the version
	name I entered.

	Unclear what value is provided by individual time stamps given I do not control these... but I guess they can be useful...

KM (9/12/2001 4:26:43 PM)
	If you've loaded a project version we should display its version info.
	We may need alternative display mechanism for those working in multiple streams.
	Or, if the project is modified since loaded as version we could reverse to showing stream name?

PM (9/24/2001 10:37:36 AM)
	All I would like is to see is the version name it was given when creating a project version. The stream it belongs to is always mentionned in the project
	properties.
PRODUCT VERSION:
SDK 125


tags now shown</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="205" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Replicate functionality (1GGP770)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>In regular use, it is often necessary to be able to copy project version from a repository to another one.
Currently this is really difficult (have to manually to the source repository, then add from it, then create another team stream on target repository, 
and release the added project version into the target repository new team stream, and re-version).

NOTES:
PRODUCT VERSION:
SDK 125


Since we will be command line compatible presumably there will be opportunity 
for use of existing third party tools.  I have to believe someone has written 
something to do this already.

Not something we should be writing - repo management is outside our scope.</WithStack>
    <WithOutStack>In regular use, it is often necessary to be able to copy project version from a repository to another one.
Currently this is really difficult (have to manually to the source repository, then add from it, then create another team stream on target repository, 
and release the added project version into the target repository new team stream, and re-version).

NOTES:
PRODUCT VERSION:
SDK 125


Since we will be command line compatible presumably there will be opportunity 
for use of existing third party tools.  I have to believe someone has written 
something to do this already.

Not something we should be writing - repo management is outside our scope.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="206" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 98" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Creating version of project with J characters in project name fails (1GGYV0U)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Create a project with a J character in the name.
	Release the contents to the server.
	Version the project.

	The versioning appears to work, but no project version is created.

NOTES:

JEM (8/14/2001 10:21:46 AM)
	I have not been able to figure out why the project version is not created.

JEM (9/5/2001 12:04:15 PM)
	May be related to
	1GFMS6C: ITPVCM:WINNT - Version not created if tag contains pipe character

JEM (9/11/2001 2:59:09 PM)
	Unrelated to the above, it's due to a CVS limitation when reading the history file.
	Added to Readme.
Readme has been updated.
[Fixed in v205]
PRODUCT VERSION:

	0.9
	Win98 Japanese</WithStack>
    <WithOutStack>Create a project with a J character in the name.
	Release the contents to the server.
	Version the project.

	The versioning appears to work, but no project version is created.

NOTES:

JEM (8/14/2001 10:21:46 AM)
	I have not been able to figure out why the project version is not created.

JEM (9/5/2001 12:04:15 PM)
	May be related to
	1GFMS6C: ITPVCM:WINNT - Version not created if tag contains pipe character

JEM (9/11/2001 2:59:09 PM)
	Unrelated to the above, it's due to a CVS limitation when reading the history file.
	Added to Readme.
Readme has been updated.
[Fixed in v205]
PRODUCT VERSION:

	0.9
	Win98 Japanese</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="207" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 98" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[CVS Repo View] Repository view should select new repository (1GH1GJM)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- create a new repository connection</Line>
          <Line>- select it</Line>
          <Line>- create another repository connection to a different repository</Line>
          <Line>- the first one remains selected</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>- create a new repository connection
- select it
- create another repository connection to a different repository
- the first one remains selected

It should select the newly created connection, since the next step is usually to expand it and tunnel down.

NOTES

JEM (9/6/2001 9:46:54 AM)
	We can't do that right now because the newly-created repository is not filled in on the event, so we don't
	know which one is new.

JEM (9/19/2001 12:40:06 PM)
	Awaiting VCM Event advancements
PRODUCT VERSION:
0.9


post 2.0
Reopening
We should check if this is still an issue.
This bug has not been touched in 2 years. Closing as WONTFIX.
I still think we should be consistent in selecting newly created items.
To have it not do this feels like a "GUI Blooper".

Plus you'll have the glory of fixing a PR as low as 207.

There is currently no plan to address this item.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>- create a new repository connection
- select it
- create another repository connection to a different repository
- the first one remains selected

It should select the newly created connection, since the next step is usually to expand it and tunnel down.

NOTES

JEM (9/6/2001 9:46:54 AM)
	We can't do that right now because the newly-created repository is not filled in on the event, so we don't
	know which one is new.

JEM (9/19/2001 12:40:06 PM)
	Awaiting VCM Event advancements
PRODUCT VERSION:
0.9


post 2.0
Reopening
We should check if this is still an issue.
This bug has not been touched in 2 years. Closing as WONTFIX.
I still think we should be consistent in selecting newly created items.
To have it not do this feels like a "GUI Blooper".

Plus you'll have the glory of fixing a PR as low as 207.

There is currently no plan to address this item.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="208" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Progress inaccurate when loading project version (1GH1HFQ)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When loading a project version from the repository view, the progress monitor reaches 98%
in the first 5% of the work or so, then stays there for the rest of the work.

NOTES:

Jean-Michel (19/07/2001 10:17:18 AM)
	We could make the progress monitor progress logarithmic? Since we don't know how many
	resources we are loaded from the repository, we guess.
This was fixed in 202.
[Fixed in v202]
PRODUCT VERSION:
0.9 jdk</WithStack>
    <WithOutStack>When loading a project version from the repository view, the progress monitor reaches 98%
in the first 5% of the work or so, then stays there for the rest of the work.

NOTES:

Jean-Michel (19/07/2001 10:17:18 AM)
	We could make the progress monitor progress logarithmic? Since we don't know how many
	resources we are loaded from the repository, we guess.
This was fixed in 202.
[Fixed in v202]
PRODUCT VERSION:
0.9 jdk</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="209" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 98" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Can't compare CU with version after loading project version (1GH4H95)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="4">
        <Lines>
          <Line>- in repository view, create (first) repository connection to cvslnx:/home/cvs/corerepo</Line>
          <Line>- load org.eclipse.core.launcher v123</Line>
          <Line>- in packages view, select UIMain.java and choose Compare With / Version...</Line>
          <Line>- it says there are no versions to compare it with</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- Select the project and choose Compare With / Version...</Line>
          <Line>- you have to select the repository</Line>
          <Line>- you can then choose a version</Line>
          <Line>- but you still can't do this with a CU like UIMain.java</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>- in repository view, create (first) repository connection to cvslnx:/home/cvs/corerepo
- load org.eclipse.core.launcher v123
- in packages view, select UIMain.java and choose Compare With / Version...
- it says there are no versions to compare it with

But of course there are, I just loaded it from a version.

- Select the project and choose Compare With / Version...
- you have to select the repository 
- you can then choose a version
- but you still can't do this with a CU like UIMain.java

In both cases, it should know which repository it came from. 
If there's no associated repository, it should still allow you to look in any known repositories.
If there's only one repository connection, assume it might have a version in there.
If there are multiple repository connections, prompt.

NOTES:

Jean-Michel (23/07/2001 10:32:27 AM)
	See comments in 1GH2VG2: ITPVCM:WIN98 - Many conflicts on first sync with team stream based on same version.
	
	I would like to see workspace sync info maintained for project versions in your workspace, but the
	current vcm implementation does not allow this. The vcm ui could be smarter and prompt for a repo
	if the resource is not managed.

	As a workaround, select UIMain.java from the repositories view and select show in history. From there 
	you can compare with other versions of that resources.
PRODUCT VERSION:
0.9 jdk


stale</WithStack>
    <WithOutStack>- in repository view, create (first) repository connection to cvslnx:/home/cvs/corerepo
- load org.eclipse.core.launcher v123
- in packages view, select UIMain.java and choose Compare With / Version...
- it says there are no versions to compare it with

But of course there are, I just loaded it from a version.

- Select the project and choose Compare With / Version...
- you have to select the repository 
- you can then choose a version
- but you still can't do this with a CU like UIMain.java

In both cases, it should know which repository it came from. 
If there's no associated repository, it should still allow you to look in any known repositories.
If there's only one repository connection, assume it might have a version in there.
If there are multiple repository connections, prompt.

NOTES:

Jean-Michel (23/07/2001 10:32:27 AM)
	See comments in 1GH2VG2: ITPVCM:WIN98 - Many conflicts on first sync with team stream based on same version.
	
	I would like to see workspace sync info maintained for project versions in your workspace, but the
	current vcm implementation does not allow this. The vcm ui could be smarter and prompt for a repo
	if the resource is not managed.

	As a workaround, select UIMain.java from the repositories view and select show in history. From there 
	you can compare with other versions of that resources.
PRODUCT VERSION:
0.9 jdk


stale</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="210" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 98" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Compare with version missing changes (1GH4HNG)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="7">
        <Lines>
          <Line>- in repository view, create (first) repository connection to cvslnx:/home/cvs/corerepo</Line>
          <Line>- load org.eclipse.core.launcher v123</Line>
          <Line>- in packages view, open UIMain.java and modify it</Line>
          <Line>I changed:</Line>
          <Line>* @see #run</Line>
          <Line>to:</Line>
          <Line>* @see #run sdfgsdfg</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- save it</Line>
          <Line>- select project and compare with version v123 (see 1GH4H95)</Line>
          <Line>- it shows changes to .classpath, .cvsignore, .vcm_meta, build.properties, and folder Eclipse Core Launcher,</Line>
          <Line>but not UIMain.java or any of the intermediate folders.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>- in repository view, create (first) repository connection to cvslnx:/home/cvs/corerepo
- load org.eclipse.core.launcher v123
- in packages view, open UIMain.java and modify it
I changed:
 * @see #run
to:
 * @see #run sdfgsdfg

- save it
- select project and compare with version v123 (see 1GH4H95)
- it shows changes to .classpath, .cvsignore, .vcm_meta, build.properties, and folder Eclipse Core Launcher,
but not UIMain.java or any of the intermediate folders.


NOTES:

JohnA (7/30/2001 10:14:10 AM)
	This is because when you load a project version, it has no sharing information.  It has to be
	associated with a stream before it can be meaningfully compared against server resources.
	This is obviously not intuitive for users though... 

	Related PRs:
		1GH2VG2: ITPVCM:WIN98 - Many conflicts on first sync with team stream based on same version
		1GH4H95: ITPVCM:WIN98 - Can't compare CU with version after loading project version
PRODUCT VERSION:
0.9 jdk


can no longer get in this state</WithStack>
    <WithOutStack>- in repository view, create (first) repository connection to cvslnx:/home/cvs/corerepo
- load org.eclipse.core.launcher v123
- in packages view, open UIMain.java and modify it
I changed:
 * @see #run
to:
 * @see #run sdfgsdfg

- save it
- select project and compare with version v123 (see 1GH4H95)
- it shows changes to .classpath, .cvsignore, .vcm_meta, build.properties, and folder Eclipse Core Launcher,
but not UIMain.java or any of the intermediate folders.


NOTES:

JohnA (7/30/2001 10:14:10 AM)
	This is because when you load a project version, it has no sharing information.  It has to be
	associated with a stream before it can be meaningfully compared against server resources.
	This is obviously not intuitive for users though... 

	Related PRs:
		1GH2VG2: ITPVCM:WIN98 - Many conflicts on first sync with team stream based on same version
		1GH4H95: ITPVCM:WIN98 - Can't compare CU with version after loading project version
PRODUCT VERSION:
0.9 jdk


can no longer get in this state</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="211" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 98" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Compare editor not restored on startup (1GH4I27)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="1000" end="1153" />
        <code>/**
	 * Returns &lt;code&gt;null&lt;/code&gt; since this editor cannot be persisted.
	 *
	 * @return &lt;code&gt;null&lt;/code&gt; because this editor cannot be persisted
	 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1154" end="1218" />
        <code>public IPersistableElement getPersistable() {
		return null;
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The compare editor does not survive shutdown and startup.
Sometimes compares are quite large and may take a while to peruse.
It should save its state like the other editors and views.

NOTES:

JEM (9/13/2001 10:56:28 AM)
	We can persist the state of the editor, but it will still have to re-perform
	the compare. The persistence happens via getPersistable() of the
	CompareEditorInput object. (For example, the persistable could remember
	the local project and the team stream element that were being compared).
	The compare editor will still re-perform the comparation based on that
	input when the editor opens. But this behaviour is better than the current
	behaviour of nothing. This is equivalent to the behaviour of other editors,
	where the text editor remembers the name of the file it was editing, but upon
	re-creation it still has to go and re-discover the content from disk.

JEM (9/13/2001 2:43:37 PM)
	The general compare framework would also need to be fixed. From CompareEditorInput:

	/**
	 * Returns &lt;code&gt;null&lt;/code&gt; since this editor cannot be persisted.
	 *
	 * @return &lt;code&gt;null&lt;/code&gt; because this editor cannot be persisted
	 */
	public IPersistableElement getPersistable() {
		return null;
	}

JEM (9/14/2001 10:47:34 AM)
	Logged JUI PR

		1GK1SLZ: ITPJUI:WIN2000 - Compare editor not restored on startup
PRODUCT VERSION:
0.9 jdk


*** Bug 2860 has been marked as a duplicate of this bug. ***
I actually think we don't want to do this.  If the editor input is refreshed on 
open, that will mean contacting the server, which would be happening on 
workbench startup.

Unless there was a way to preserve the contents without recomputing them on 
startup, which it doesn't sound like there is easely, we should leave as is.</WithStack>
    <WithOutStack>The compare editor does not survive shutdown and startup.
Sometimes compares are quite large and may take a while to peruse.
It should save its state like the other editors and views.

NOTES:

JEM (9/13/2001 10:56:28 AM)
	We can persist the state of the editor, but it will still have to re-perform
	the compare. The persistence happens via getPersistable() of the
	CompareEditorInput object. (For example, the persistable could remember
	the local project and the team stream element that were being compared).
	The compare editor will still re-perform the comparation based on that
	input when the editor opens. But this behaviour is better than the current
	behaviour of nothing. This is equivalent to the behaviour of other editors,
	where the text editor remembers the name of the file it was editing, but upon
	re-creation it still has to go and re-discover the content from disk.

JEM (9/13/2001 2:43:37 PM)
	The general compare framework would also need to be fixed. From CompareEditorInput:

	/**
	 * Returns &lt;code&gt;null&lt;/code&gt; since this editor cannot be persisted.
	 *
	 * @return &lt;code&gt;null&lt;/code&gt; because this editor cannot be persisted
	 */
	public IPersistableElement getPersistable() {
		return null;
	}

JEM (9/14/2001 10:47:34 AM)
	Logged JUI PR

		1GK1SLZ: ITPJUI:WIN2000 - Compare editor not restored on startup
PRODUCT VERSION:
0.9 jdk


*** Bug 2860 has been marked as a duplicate of this bug. ***
I actually think we don't want to do this.  If the editor input is refreshed on 
open, that will mean contacting the server, which would be happening on 
workbench startup.

Unless there was a way to preserve the contents without recomputing them on 
startup, which it doesn't sound like there is easely, we should leave as is.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="212" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="15169" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[Team API] Local history and versions should be combined (1GHD4WU)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I find painfull to have to deal differently with my local history and the repository history. I would appreciate having them both merged, having still a way to
know where they do come from (timestamp?). But in general, it would make the use of history much simpler and transparent.

NOTES:

JohnA (7/25/2001 12:17:10 PM)
	I agree that this would be nice.  Generally people don't care where the old version is located, they just want to
	see them all together.  It might also be confusing for more basic users who don't understand the distinction
	between the two storage mechanisms.
PRODUCT VERSION:
SDK 125


Post 2.0
Reopening


*** This bug has been marked as a duplicate of 15169 ***</WithStack>
    <WithOutStack>I find painfull to have to deal differently with my local history and the repository history. I would appreciate having them both merged, having still a way to
know where they do come from (timestamp?). But in general, it would make the use of history much simpler and transparent.

NOTES:

JohnA (7/25/2001 12:17:10 PM)
	I agree that this would be nice.  Generally people don't care where the old version is located, they just want to
	see them all together.  It might also be confusing for more basic users who don't understand the distinction
	between the two storage mechanisms.
PRODUCT VERSION:
SDK 125


Post 2.0
Reopening


*** This bug has been marked as a duplicate of 15169 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="213" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>No easy way to synchronize a file with a different version (1GHD58J)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When attempting to synchronize an individual file with a previous version, I currently have to synchronize the entire project in order to get the synchronization
view allowing me to interact with the version (grab one change or content).

At the file level, there is no such functionality. This is somewhat painfull in the sense that an entire project comparison is far longer and disruptive when
I simply want to grab one change in a well-know version. If I did want an entire project compare I would have meant it.

NOTES:

Jean-Michel (25/07/2001 10:33:18 AM)
	Dup of: 1GGAS1J: ITPVCM:WIN2000 - Compare resource with stream: can't merge

JohnA (7/30/2001 10:04:50 AM)
	True, there is missing functionality.  As a workaround, you can use the history view to open an
	editor on the version you are interested in, and place it alongside the editor for the local file.  Then
	you can copy and paste bits across.  This is less than ideal, but saves you have to do a full project compare.
PRODUCT VERSION:
SDK 125


Can now compare with revision and you get the compare (sync) view</WithStack>
    <WithOutStack>When attempting to synchronize an individual file with a previous version, I currently have to synchronize the entire project in order to get the synchronization
view allowing me to interact with the version (grab one change or content).

At the file level, there is no such functionality. This is somewhat painfull in the sense that an entire project comparison is far longer and disruptive when
I simply want to grab one change in a well-know version. If I did want an entire project compare I would have meant it.

NOTES:

Jean-Michel (25/07/2001 10:33:18 AM)
	Dup of: 1GGAS1J: ITPVCM:WIN2000 - Compare resource with stream: can't merge

JohnA (7/30/2001 10:04:50 AM)
	True, there is missing functionality.  As a workaround, you can use the history view to open an
	editor on the version you are interested in, and place it alongside the editor for the local file.  Then
	you can copy and paste bits across.  This is less than ideal, but saves you have to do a full project compare.
PRODUCT VERSION:
SDK 125


Can now compare with revision and you get the compare (sync) view</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="214" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Unimplemented methods in VCMEvent (1GHFDSZ)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="multicomment">
        <location start="0" end="43" />
        <code>/**
	 * @see IVCMEvent#getTeamStream()
	 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="44" end="99" />
        <code>public ITeamStream getTeamStream() {
		return null;
	}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="101" end="145" />
        <code>/**
	 * @see IVCMEvent#getResources()
	 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="146" end="200" />
        <code>public IResource[] getResources() {
		return null;
	}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="201" end="246" />
        <code>/**
	 * @see IVCMEvent#getRepository()
	 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="247" end="302" />
        <code>public IRepository getRepository() {
		return null;
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>/**
	 * @see IVCMEvent#getTeamStream()
	 */
	public ITeamStream getTeamStream() {
		return null;
	}	

	/**
	 * @see IVCMEvent#getResources()
	 */
	public IResource[] getResources() {
		return null;
	}

	/**
	 * @see IVCMEvent#getRepository()
	 */
	public IRepository getRepository() {
		return null;
	}


NOTES:

JohnA (7/30/2001 10:18:41 AM)
	Known issue.  See 1G8G6RR: ITPVCM:ALL - API - VCM event notification
PRODUCT VERSION:

	0.9


n/a</WithStack>
    <WithOutStack>/**
	 * @see IVCMEvent#getTeamStream()
	 */
	public ITeamStream getTeamStream() {
		return null;
	}	

	/**
	 * @see IVCMEvent#getResources()
	 */
	public IResource[] getResources() {
		return null;
	}

	/**
	 * @see IVCMEvent#getRepository()
	 */
	public IRepository getRepository() {
		return null;
	}


NOTES:

JohnA (7/30/2001 10:18:41 AM)
	Known issue.  See 1G8G6RR: ITPVCM:ALL - API - VCM event notification
PRODUCT VERSION:

	0.9


n/a</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="215" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="123" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Compare - would still be able to catchup when no incoming change (1GHOHF3)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>There are circumstances where I performed a local change which I do not want to release when synchronizing, and where I would rather want
to take back the released version. When this happen, I would like to be able to use 'catchup' to do so.

NOTES:

JohnA (7/30/2001 9:55:47 AM)
	Use "Show in Navigator" and "Replace With Team Stream" instead.  We debated this at length, but we decided
	that "catchup" should only mean loading new incoming changes.  For example, if you have a project with
	several incoming changes, and several outgoing changes, you want to be able to invoke "catch up" at the project
	level to load all incoming changes, and then release the outgoing changes after verifying that they still work
	against the new files that were loaded.  If catch up were to overwrite outgoing changes, this very common usage
	pattern would not be possible.
*** Bug 4934 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 123 ***
PRODUCT VERSION:
0.9</WithStack>
    <WithOutStack>There are circumstances where I performed a local change which I do not want to release when synchronizing, and where I would rather want
to take back the released version. When this happen, I would like to be able to use 'catchup' to do so.

NOTES:

JohnA (7/30/2001 9:55:47 AM)
	Use "Show in Navigator" and "Replace With Team Stream" instead.  We debated this at length, but we decided
	that "catchup" should only mean loading new incoming changes.  For example, if you have a project with
	several incoming changes, and several outgoing changes, you want to be able to invoke "catch up" at the project
	level to load all incoming changes, and then release the outgoing changes after verifying that they still work
	against the new files that were loaded.  If catch up were to overwrite outgoing changes, this very common usage
	pattern would not be possible.
*** Bug 4934 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 123 ***
PRODUCT VERSION:
0.9</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="216" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Stream name on Resource History (1GHQHY5)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>It might not be an easy change but it would be useful to have the Stream name in the
Resource History view.

NOTES:

JEM (9/21/2001 12:02:12 PM)
	All version and stream tags are shown in the history view, in parenthesis beside the
	version name. Perhaps it would be useful to differentiate these tags, or perhaps
	add other columns for them.
PRODUCT VERSION:
	127


Is the current behaviour (the stream tags &amp; version tags are shown next to the 
version name) adequate?
Yes, seems to be. What's the story about the ones that do not have tags 
associated? Are they on HEAD only?
For example, look at org.eclise.core.runtime.Plugin. Versions 1.8 and 1.4 do 
not have streams by their side. Does it mean that 1.8 is on HEAD and 1.4 was 
never part of any stream?
In general, versions that don't have tags aren't in ANY stream currently. In 
your example below, 1.4 is currently not in any stream (which is correct). 
HOWEVER, the exception to that rule is that the highest numbered version is 
always in HEAD. In your example, 1.8 is in HEAD; HEAD does not tag files that 
it contains. (To correct your statement above, lack of a tag does not mean it 
was never in a stream, it just means that it currently isn't in a stream - in 
your example, 1.4 was in HEAD at one point, it just isn't now). Remember in CVS 
it is not possible to re-release an old version number into a stream - 
releasing automatically creates a new version, so HEAD always contains the 
highest version number.
Closing on Rodrigo's approval.</WithStack>
    <WithOutStack>It might not be an easy change but it would be useful to have the Stream name in the
Resource History view.

NOTES:

JEM (9/21/2001 12:02:12 PM)
	All version and stream tags are shown in the history view, in parenthesis beside the
	version name. Perhaps it would be useful to differentiate these tags, or perhaps
	add other columns for them.
PRODUCT VERSION:
	127


Is the current behaviour (the stream tags &amp; version tags are shown next to the 
version name) adequate?
Yes, seems to be. What's the story about the ones that do not have tags 
associated? Are they on HEAD only?
For example, look at org.eclise.core.runtime.Plugin. Versions 1.8 and 1.4 do 
not have streams by their side. Does it mean that 1.8 is on HEAD and 1.4 was 
never part of any stream?
In general, versions that don't have tags aren't in ANY stream currently. In 
your example below, 1.4 is currently not in any stream (which is correct). 
HOWEVER, the exception to that rule is that the highest numbered version is 
always in HEAD. In your example, 1.8 is in HEAD; HEAD does not tag files that 
it contains. (To correct your statement above, lack of a tag does not mean it 
was never in a stream, it just means that it currently isn't in a stream - in 
your example, 1.4 was in HEAD at one point, it just isn't now). Remember in CVS 
it is not possible to re-release an old version number into a stream - 
releasing automatically creates a new version, so HEAD always contains the 
highest version number.
Closing on Rodrigo's approval.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="217" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>UI BUG TO BE FILED (1GHQOGF)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="38">
      <source_code type="functioncall">
        <location start="325" end="405" />
        <code>org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="406" end="486" />
        <code>org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="487" end="567" />
        <code>org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="568" end="648" />
        <code>org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="649" end="729" />
        <code>org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="730" end="810" />
        <code>org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="811" end="891" />
        <code>org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="992" end="1076" />
        <code>org/eclipse/swt/widgets/Composite.getChildren()[Lorg/eclipse/swt/widgets/Control;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1077" end="1197" />
        <code>org/eclipse/swt/layout/GridLayout.computeSize(Lorg/eclipse/swt/widgets/Composite;IIZ)Lorg/eclipse/swt/graphics/Point;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1281" end="1369" />
        <code>org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2399" end="2485" />
        <code>org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2486" end="2575" />
        <code>org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2576" end="2664" />
        <code>org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3051" end="3139" />
        <code>org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3715" end="3803" />
        <code>org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4904" end="4990" />
        <code>org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="4991" end="5080" />
        <code>org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="5081" end="5169" />
        <code>org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="6358" end="6444" />
        <code>org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="6445" end="6534" />
        <code>org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="6535" end="6623" />
        <code>org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="7010" end="7092" />
        <code>org/eclipse/swt/widgets/Control.getBounds()Lorg/eclipse/swt/graphics/Rectangle;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="7093" end="7226" />
        <code>org/eclipse/ui/internal/PartTabFolder.calculatePageBounds(Lorg/eclipse/swt/custom/CTabFolder;)Lorg/eclipse/swt/graphics/Rectangle;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="8132" end="8218" />
        <code>org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="8219" end="8308" />
        <code>org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="8309" end="8397" />
        <code>org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="8784" end="8872" />
        <code>org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="9843" end="9929" />
        <code>org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="9930" end="10019" />
        <code>org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="10020" end="10108" />
        <code>org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="10495" end="10583" />
        <code>org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="10584" end="10674" />
        <code>org/eclipse/swt/widgets/Decorations.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="11869" end="11947" />
        <code>org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="11948" end="12093" />
        <code>org/eclipse/core/internal/boot/InternalBootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="12094" end="12222" />
        <code>org/eclipse/core/boot/BootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="12223" end="12314" />
        <code>java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="12315" end="12396" />
        <code>org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;)Ljava/lang/Object;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="12397" end="12473" />
        <code>org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>While minimizing an Eclipse running in Eclipse. The workbench crashed and the following was
printed in the console.

===================

java.lang.StackOverflowError

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/StackOverflowError.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Widget.isValidThread()Z
   org/eclipse/swt/widgets/Widget.checkWidget()V
   org/eclipse/swt/widgets/Composite.getChildren()[Lorg/eclipse/swt/widgets/Control;
   org/eclipse/swt/layout/GridLayout.computeSize(Lorg/eclipse/swt/widgets/Composite;IIZ)Lorg/eclipse/swt/graphics/Point;
   org/eclipse/swt/layout/GridLayout.layout(Lorg/eclipse/swt/widgets/Composite;Z)V
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.SetWindowPos(IIIIIII)Z
   org/eclipse/swt/widgets/Control.setBounds(IIIII)V
   org/eclipse/swt/widgets/Control.setBounds(IIII)V
   org/eclipse/swt/widgets/Control.setBounds(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/swt/custom/ScrolledComposite.resize()V
   org/eclipse/swt/custom/ScrolledComposite.access$2(Lorg/eclipse/swt/custom/ScrolledComposite;)V
   org/eclipse/swt/custom/ScrolledComposite$3.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(I)V
   org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.EndDeferWindowPos(I)Z
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.SetWindowPos(IIIIIII)Z
   org/eclipse/swt/widgets/Control.setBounds(IIIII)V
   org/eclipse/swt/widgets/Control.setBounds(IIII)V
   org/eclipse/swt/layout/FillLayout.layout(Lorg/eclipse/swt/widgets/Composite;Z)V
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.SetWindowPos(IIIIIII)Z
   org/eclipse/swt/widgets/Control.setBounds(IIIII)V
   org/eclipse/swt/widgets/Control.setBounds(IIII)V
   org/eclipse/swt/custom/ViewForm.layout(Z)V
   org/eclipse/swt/widgets/Composite.layout()V
   org/eclipse/swt/custom/ViewForm.onResize()V
   org/eclipse/swt/custom/ViewForm.access$1(Lorg/eclipse/swt/custom/ViewForm;)V
   org/eclipse/swt/custom/ViewForm$2.controlResized(Lorg/eclipse/swt/events/ControlEvent;)V
   org/eclipse/swt/widgets/TypedListener.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(I)V
   org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.SetWindowPos(IIIIIII)Z
   org/eclipse/swt/widgets/Control.setBounds(IIIII)V
   org/eclipse/swt/widgets/Control.setBounds(IIII)V
   org/eclipse/swt/widgets/Control.setBounds(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/LayoutPart.setBounds(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/EditorWorkbook.setControlSize(Lorg/eclipse/ui/internal/LayoutPart;)V
   org/eclipse/ui/internal/EditorWorkbook.access$5(Lorg/eclipse/ui/internal/EditorWorkbook;Lorg/eclipse/ui/internal/LayoutPart;)V
   org/eclipse/ui/internal/EditorWorkbook$3.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(I)V
   org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.EndDeferWindowPos(I)Z
   org/eclipse/swt/widgets/Control.getBounds()Lorg/eclipse/swt/graphics/Rectangle;
   org/eclipse/ui/internal/PartTabFolder.calculatePageBounds(Lorg/eclipse/swt/custom/CTabFolder;)Lorg/eclipse/swt/graphics/Rectangle;
   org/eclipse/ui/internal/EditorWorkbook.setControlSize(Lorg/eclipse/ui/internal/LayoutPart;)V
   org/eclipse/ui/internal/EditorWorkbook.setBounds(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/LayoutTree.setBounds(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/PartSashContainer.resizeSashes(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/PartSashContainer.access$0(Lorg/eclipse/ui/internal/PartSashContainer;Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/PartSashContainer$1.controlResized(Lorg/eclipse/swt/events/ControlEvent;)V
   org/eclipse/swt/widgets/TypedListener.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(I)V
   org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.EndDeferWindowPos(I)Z
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.SetWindowPos(IIIIIII)Z
   org/eclipse/swt/widgets/Control.setBounds(IIIII)V
   org/eclipse/swt/widgets/Control.setBounds(IIII)V
   org/eclipse/swt/widgets/Control.setBounds(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/WorkbenchPage$3.controlResized(Lorg/eclipse/swt/events/ControlEvent;)V
   org/eclipse/swt/widgets/TypedListener.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(I)V
   org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.EndDeferWindowPos(I)Z
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Decorations.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Decorations.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Decorations.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Decorations.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Decorations.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DispatchMessage(Lorg/eclipse/swt/internal/win32/MSG;)I
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Object;
   java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/launcher/UIMain.main([Ljava/lang/String;)V


NOTES:
Too old.
PRODUCT VERSION:
R0.9</WithStack>
    <WithOutStack>While minimizing an Eclipse running in Eclipse. The workbench crashed and the following was
printed in the console.

===================

java.lang.StackOverflowError

Stack trace:
   java/lang/Throwable.&lt;init&gt;()V
   java/lang/Throwable.&lt;init&gt;(Ljava/lang/String;)V
   java/lang/StackOverflowError.&lt;init&gt;(Ljava/lang/String;)V
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Control.getDisplay()Lorg/eclipse/swt/widgets/Display;
   org/eclipse/swt/widgets/Widget.isValidThread()Z
   org/eclipse/swt/widgets/Widget.checkWidget()V
   org/eclipse/swt/widgets/Composite.getChildren()[Lorg/eclipse/swt/widgets/Control;
   org/eclipse/swt/layout/GridLayout.computeSize(Lorg/eclipse/swt/widgets/Composite;IIZ)Lorg/eclipse/swt/graphics/Point;
   org/eclipse/swt/layout/GridLayout.layout(Lorg/eclipse/swt/widgets/Composite;Z)V
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.SetWindowPos(IIIIIII)Z
   org/eclipse/swt/widgets/Control.setBounds(IIIII)V
   org/eclipse/swt/widgets/Control.setBounds(IIII)V
   org/eclipse/swt/widgets/Control.setBounds(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/swt/custom/ScrolledComposite.resize()V
   org/eclipse/swt/custom/ScrolledComposite.access$2(Lorg/eclipse/swt/custom/ScrolledComposite;)V
   org/eclipse/swt/custom/ScrolledComposite$3.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(I)V
   org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.EndDeferWindowPos(I)Z
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.SetWindowPos(IIIIIII)Z
   org/eclipse/swt/widgets/Control.setBounds(IIIII)V
   org/eclipse/swt/widgets/Control.setBounds(IIII)V
   org/eclipse/swt/layout/FillLayout.layout(Lorg/eclipse/swt/widgets/Composite;Z)V
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.SetWindowPos(IIIIIII)Z
   org/eclipse/swt/widgets/Control.setBounds(IIIII)V
   org/eclipse/swt/widgets/Control.setBounds(IIII)V
   org/eclipse/swt/custom/ViewForm.layout(Z)V
   org/eclipse/swt/widgets/Composite.layout()V
   org/eclipse/swt/custom/ViewForm.onResize()V
   org/eclipse/swt/custom/ViewForm.access$1(Lorg/eclipse/swt/custom/ViewForm;)V
   org/eclipse/swt/custom/ViewForm$2.controlResized(Lorg/eclipse/swt/events/ControlEvent;)V
   org/eclipse/swt/widgets/TypedListener.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(I)V
   org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.SetWindowPos(IIIIIII)Z
   org/eclipse/swt/widgets/Control.setBounds(IIIII)V
   org/eclipse/swt/widgets/Control.setBounds(IIII)V
   org/eclipse/swt/widgets/Control.setBounds(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/LayoutPart.setBounds(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/EditorWorkbook.setControlSize(Lorg/eclipse/ui/internal/LayoutPart;)V
   org/eclipse/ui/internal/EditorWorkbook.access$5(Lorg/eclipse/ui/internal/EditorWorkbook;Lorg/eclipse/ui/internal/LayoutPart;)V
   org/eclipse/ui/internal/EditorWorkbook$3.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(I)V
   org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.EndDeferWindowPos(I)Z
   org/eclipse/swt/widgets/Control.getBounds()Lorg/eclipse/swt/graphics/Rectangle;
   org/eclipse/ui/internal/PartTabFolder.calculatePageBounds(Lorg/eclipse/swt/custom/CTabFolder;)Lorg/eclipse/swt/graphics/Rectangle;
   org/eclipse/ui/internal/EditorWorkbook.setControlSize(Lorg/eclipse/ui/internal/LayoutPart;)V
   org/eclipse/ui/internal/EditorWorkbook.setBounds(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/LayoutTree.setBounds(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/PartSashContainer.resizeSashes(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/PartSashContainer.access$0(Lorg/eclipse/ui/internal/PartSashContainer;Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/PartSashContainer$1.controlResized(Lorg/eclipse/swt/events/ControlEvent;)V
   org/eclipse/swt/widgets/TypedListener.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(I)V
   org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.EndDeferWindowPos(I)Z
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.SetWindowPos(IIIIIII)Z
   org/eclipse/swt/widgets/Control.setBounds(IIIII)V
   org/eclipse/swt/widgets/Control.setBounds(IIII)V
   org/eclipse/swt/widgets/Control.setBounds(Lorg/eclipse/swt/graphics/Rectangle;)V
   org/eclipse/ui/internal/WorkbenchPage$3.controlResized(Lorg/eclipse/swt/events/ControlEvent;)V
   org/eclipse/swt/widgets/TypedListener.handleEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/EventTable.sendEvent(Lorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(ILorg/eclipse/swt/widgets/Event;)V
   org/eclipse/swt/widgets/Widget.sendEvent(I)V
   org/eclipse/swt/widgets/Control.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Scrollable.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.EndDeferWindowPos(I)Z
   org/eclipse/swt/widgets/Composite.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Decorations.WM_SIZE(II)Lorg/eclipse/swt/internal/win32/LRESULT;
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Decorations.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Decorations.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Decorations.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DefWindowProc(IIII)I
   org/eclipse/swt/widgets/Scrollable.callWindowProc(III)I
   org/eclipse/swt/widgets/Control.windowProc(III)I
   org/eclipse/swt/widgets/Decorations.windowProc(III)I
   org/eclipse/swt/widgets/Display.windowProc(IIII)I
   org/eclipse/swt/internal/win32/OS.DispatchMessage(Lorg/eclipse/swt/internal/win32/MSG;)I
   org/eclipse/swt/widgets/Display.readAndDispatch()Z
   org/eclipse/ui/internal/Workbench.runEventLoop()V
   org/eclipse/ui/internal/Workbench.run(Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/internal/boot/InternalBootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/boot/BootLoader.run(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Object;
   java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   org/eclipse/core/launcher/Main.basicRun([Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/launcher/Main.run([Ljava/lang/String;)Ljava/lang/Object;
   org/eclipse/core/launcher/UIMain.main([Ljava/lang/String;)V


NOTES:
Too old.
PRODUCT VERSION:
R0.9</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="218" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No Warning of Unsaved Workspace Changes (1GHSHK4)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>It would be nice to have a warning if there are unsaved workspace changes when the user does
a "Syncronize with Stream".

NOTES:
Duplicate of many other PRs.
PRODUCT VERSION:

ECLIPSE 0.9</WithStack>
    <WithOutStack>It would be nice to have a warning if there are unsaved workspace changes when the user does
a "Syncronize with Stream".

NOTES:
Duplicate of many other PRs.
PRODUCT VERSION:

ECLIPSE 0.9</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="219" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>How do we contribute documentation (1GITBKI)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>How do I contribute the proper documentation for a feature?

For example, the CVS preference pages required the creation of an F1 help context.
The documentation for other plugins are all centrally stored in the org.eclipse.platform.doc.user
plugin. I included the CVS help in the CVS UI plugin itself. Furthermore the new CVS documentation
is only available through F1 help and is not accessible through the Help perspective. 

NOTES:
PRODUCT VERSION:

Eclipse


now sorted out</WithStack>
    <WithOutStack>How do I contribute the proper documentation for a feature?

For example, the CVS preference pages required the creation of an F1 help context.
The documentation for other plugins are all centrally stored in the org.eclipse.platform.doc.user
plugin. I included the CVS help in the CVS UI plugin itself. Furthermore the new CVS documentation
is only available through F1 help and is not accessible through the Help perspective. 

NOTES:
PRODUCT VERSION:

Eclipse


now sorted out</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="220" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>No messages or log when adding a project that has no version in the stream (1GI3UBE)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If adding multiple projects from a stream that is not HEAD, and some of this projects
do not have a version in this stream, no messages or log appear to indicate why this projects
were not added.

NOTES:

Jean-Michel (8/8/01 11:15:48 AM)
PRODUCT VERSION:
	128


The user is now informed that the tag does not exist for that project</WithStack>
    <WithOutStack>If adding multiple projects from a stream that is not HEAD, and some of this projects
do not have a version in this stream, no messages or log appear to indicate why this projects
were not added.

NOTES:

Jean-Michel (8/8/01 11:15:48 AM)
PRODUCT VERSION:
	128


The user is now informed that the tag does not exist for that project</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="221" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Can't remove undefined env vars (1GI7HRX)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>prefix        test
name          181036
reference     
abstract      Can't remove undefined environment variable
duplicate     

state         open                        priority                          
severity      3                           target                            
age           14                          due                               
product                         hasApar                           

compName      wsa.web.oti                 answer                            
release                                   symptom       io                  
envName                                   phaseFound    svt                 
level                                     phaseInject                       

addDate       2001/07/26 15:22:40         assignDate    2001/07/26 15:22:40 
lastUpdate    2001/07/26 15:22:40         responseDate                      
endDate                                

ownerLogin    decandio                    originLogin   jheidebr            
ownerName     George DeCandio             originName    "Heidebrecht, Josh (
ownerArea     9ZVA                        originArea    123                 

apar                                      pmr                          
test                                                                                               

tracks: none.

verify: none.

history:
    addDate              action          userLogin (userName)
    -------------------- --------------- ----------------------------------
    2001/07/26 15:22:40  open            jheidebr ("Heidebrecht, Josh (J.)")

duplicate defects: none.

duplicate features: none.

sizing: none.

notes:
    &lt;Note by jheidebr ("Heidebrecht, Josh (J.)"), 2001/07/26 15:22:40, seq: 1 rel: 0  action: open&gt;
This defect was discovered by simulating a large project environment
and accidentally making a typo when creating an environment variable.
The problem is that an undefined environment variable cannot be
removed from a project.

The scenario in which this occurs:
In a large team development environment eclipse variables are used
to link in external libraries (eg. FOO_DIR points to a directory containing
required jars). A new developer creating a new project mistypes the 
variable as FOO_DRI and checks in their project to cvs. A second
developer adds the new project to their workspace, but gets compile errors
because the FOO_DIR variable is misspelt. The developer spots
the problem and removes the FOO_DRI variable replacing it with the
correct FOO_DIR, but when their project is closed/opened the deleted
variable returns.

A simple test case:
-Create an env. variable; add it to a project as an external resource.
-Commit the project changes to cvs.
-Exit eclipse, delete the workspace, restart eclipse
-Connect to the cvs repository and add the project to your workspace
-Bring up the project properties, remove the environment variable
-Close and reopen the project and watch as the variable returns

NOTES:

KM (9/4/2001 6:10:22 PM)
	Sent email to contact asking for clarification.
PRODUCT VERSION:
	R09, Win2000


Never received back clarification.
PR is stale. Closing.
Hi Kevin, 
If you can add the clarifications that you are looking into the text of the 
defect, I will work to get any answers that you need -- if it's not too late.
Thanks, Paula</WithStack>
    <WithOutStack>prefix        test
name          181036
reference     
abstract      Can't remove undefined environment variable
duplicate     

state         open                        priority                          
severity      3                           target                            
age           14                          due                               
product                         hasApar                           

compName      wsa.web.oti                 answer                            
release                                   symptom       io                  
envName                                   phaseFound    svt                 
level                                     phaseInject                       

addDate       2001/07/26 15:22:40         assignDate    2001/07/26 15:22:40 
lastUpdate    2001/07/26 15:22:40         responseDate                      
endDate                                

ownerLogin    decandio                    originLogin   jheidebr            
ownerName     George DeCandio             originName    "Heidebrecht, Josh (
ownerArea     9ZVA                        originArea    123                 

apar                                      pmr                          
test                                                                                               

tracks: none.

verify: none.

history:
    addDate              action          userLogin (userName)
    -------------------- --------------- ----------------------------------
    2001/07/26 15:22:40  open            jheidebr ("Heidebrecht, Josh (J.)")

duplicate defects: none.

duplicate features: none.

sizing: none.

notes:
    &lt;Note by jheidebr ("Heidebrecht, Josh (J.)"), 2001/07/26 15:22:40, seq: 1 rel: 0  action: open&gt;
This defect was discovered by simulating a large project environment
and accidentally making a typo when creating an environment variable.
The problem is that an undefined environment variable cannot be
removed from a project.

The scenario in which this occurs:
In a large team development environment eclipse variables are used
to link in external libraries (eg. FOO_DIR points to a directory containing
required jars). A new developer creating a new project mistypes the 
variable as FOO_DRI and checks in their project to cvs. A second
developer adds the new project to their workspace, but gets compile errors
because the FOO_DIR variable is misspelt. The developer spots
the problem and removes the FOO_DRI variable replacing it with the
correct FOO_DIR, but when their project is closed/opened the deleted
variable returns.

A simple test case:
-Create an env. variable; add it to a project as an external resource.
-Commit the project changes to cvs.
-Exit eclipse, delete the workspace, restart eclipse
-Connect to the cvs repository and add the project to your workspace
-Bring up the project properties, remove the environment variable
-Close and reopen the project and watch as the variable returns

NOTES:

KM (9/4/2001 6:10:22 PM)
	Sent email to contact asking for clarification.
PRODUCT VERSION:
	R09, Win2000


Never received back clarification.
PR is stale. Closing.
Hi Kevin, 
If you can add the clarifications that you are looking into the text of the 
defect, I will work to get any answers that you need -- if it's not too late.
Thanks, Paula</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="222" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>New Stream menu item is incorrectly enabled (1GI7HU4)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>prefix        test
name          181178
reference     
abstract      New stream menu item is incorrectly enabled
duplicate     

state         open                        priority                          
severity      4                           target                            
age           10                          due                               
product                         hasApar                           

compName      wsa.web.oti                 answer                            
release                                   symptom       io                  
envName                                   phaseFound    dt                  
level                                     phaseInject                       

addDate       2001/07/30 10:16:16         assignDate    2001/07/30 10:16:16 
lastUpdate    2001/07/30 10:16:16         responseDate                      
endDate                                

ownerLogin    decandio                    originLogin   jheidebr            
ownerName     George DeCandio             originName    "Heidebrecht, Josh (
ownerArea     9ZVA                        originArea    123                 

apar                                      pmr                          
test                                                                                               

tracks: none.

verify: none.

history:
    addDate              action          userLogin (userName)
    -------------------- --------------- ----------------------------------
    2001/07/30 10:16:16  open            jheidebr ("Heidebrecht, Josh (J.)")

duplicate defects: none.

duplicate features: none.

sizing: none.

notes:
    &lt;Note by jheidebr ("Heidebrecht, Josh (J.)"), 2001/07/30 10:16:16, seq: 1 rel: 0  action: open&gt;
In the team perspective the popup menu for the repositories editor
incorrectly enables menuitems. When no repositories exist the new
stream menu-item is enabled. Since, a user cannot create a new
stream without a repository this menu item should not be enabled until
a stream exists.




NOTES:

JEM (9/19/2001 11:48:03 AM)
	This can be fixed only by making the action be a VCM event listener.
PRODUCT VERSION:
	R09, Win2000


Obsolete, this bug does not exist in the new 2.0 team codebase. Closing.</WithStack>
    <WithOutStack>prefix        test
name          181178
reference     
abstract      New stream menu item is incorrectly enabled
duplicate     

state         open                        priority                          
severity      4                           target                            
age           10                          due                               
product                         hasApar                           

compName      wsa.web.oti                 answer                            
release                                   symptom       io                  
envName                                   phaseFound    dt                  
level                                     phaseInject                       

addDate       2001/07/30 10:16:16         assignDate    2001/07/30 10:16:16 
lastUpdate    2001/07/30 10:16:16         responseDate                      
endDate                                

ownerLogin    decandio                    originLogin   jheidebr            
ownerName     George DeCandio             originName    "Heidebrecht, Josh (
ownerArea     9ZVA                        originArea    123                 

apar                                      pmr                          
test                                                                                               

tracks: none.

verify: none.

history:
    addDate              action          userLogin (userName)
    -------------------- --------------- ----------------------------------
    2001/07/30 10:16:16  open            jheidebr ("Heidebrecht, Josh (J.)")

duplicate defects: none.

duplicate features: none.

sizing: none.

notes:
    &lt;Note by jheidebr ("Heidebrecht, Josh (J.)"), 2001/07/30 10:16:16, seq: 1 rel: 0  action: open&gt;
In the team perspective the popup menu for the repositories editor
incorrectly enables menuitems. When no repositories exist the new
stream menu-item is enabled. Since, a user cannot create a new
stream without a repository this menu item should not be enabled until
a stream exists.




NOTES:

JEM (9/19/2001 11:48:03 AM)
	This can be fixed only by making the action be a VCM event listener.
PRODUCT VERSION:
	R09, Win2000


Obsolete, this bug does not exist in the new 2.0 team codebase. Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="223" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Save in team stream merger confusing (1GI7HXG)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>prefix        test
name          181342
reference     
abstract      When using Team to release a file to the repository if a
duplicate     

state         open                        priority      postbeta            
severity      2                           target                            
age           9                           due                               
product                         hasApar                           

compName      wsa.web.oti                 answer                            
release                                   symptom       io                  
envName                                   phaseFound    svt                 
level                                     phaseInject                       

addDate       2001/07/31 15:56:53         assignDate    2001/07/31 15:56:53 
lastUpdate    2001/08/01 16:17:23         responseDate                      
endDate                                

ownerLogin    decandio                    originLogin   jheidebr            
ownerName     George DeCandio             originName    "Heidebrecht, Josh (
ownerArea     9ZVA                        originArea    123                 

apar                                      pmr                          
test          Blocking                                                                             

tracks: none.

verify: none.

history:
    addDate              action          userLogin (userName)
    -------------------- --------------- ----------------------------------
    2001/07/31 15:56:53  open            jheidebr ("Heidebrecht, Josh (J.)")
    2001/08/01 16:17:23  modify          wasleski (Steve Wasleski)

duplicate defects: none.

duplicate features: none.

sizing: none.

notes:
    &lt;Note by jheidebr ("Heidebrecht, Josh (J.)"), 2001/07/31 15:56:53, seq: 1 rel: 0  action: open&gt;
When using Team to release a file to the repository if a
user decides to 'copy current change from right to left'
then the changes copied will be lost unless the user
right clicks on the editor and chooses 'save' from the popup
menu.

Since the editor does not indicate that the file needs to be
saved and the save action is found in a very non-obvious
place this behaviour opens up the possibility of changes being
lost.

This should be documented for the beta, therefore, I'll set the
defect as blocking.

    &lt;Note by wasleski (Steve Wasleski), 2001/08/01 16:17:23, seq: 2 rel: 0  action: modify&gt;
Old Priority:  
New Priority:  postbeta






NOTES:
PRODUCT VERSION:
	R09, Win2000	


Fixed. We force the user to save now.</WithStack>
    <WithOutStack>prefix        test
name          181342
reference     
abstract      When using Team to release a file to the repository if a
duplicate     

state         open                        priority      postbeta            
severity      2                           target                            
age           9                           due                               
product                         hasApar                           

compName      wsa.web.oti                 answer                            
release                                   symptom       io                  
envName                                   phaseFound    svt                 
level                                     phaseInject                       

addDate       2001/07/31 15:56:53         assignDate    2001/07/31 15:56:53 
lastUpdate    2001/08/01 16:17:23         responseDate                      
endDate                                

ownerLogin    decandio                    originLogin   jheidebr            
ownerName     George DeCandio             originName    "Heidebrecht, Josh (
ownerArea     9ZVA                        originArea    123                 

apar                                      pmr                          
test          Blocking                                                                             

tracks: none.

verify: none.

history:
    addDate              action          userLogin (userName)
    -------------------- --------------- ----------------------------------
    2001/07/31 15:56:53  open            jheidebr ("Heidebrecht, Josh (J.)")
    2001/08/01 16:17:23  modify          wasleski (Steve Wasleski)

duplicate defects: none.

duplicate features: none.

sizing: none.

notes:
    &lt;Note by jheidebr ("Heidebrecht, Josh (J.)"), 2001/07/31 15:56:53, seq: 1 rel: 0  action: open&gt;
When using Team to release a file to the repository if a
user decides to 'copy current change from right to left'
then the changes copied will be lost unless the user
right clicks on the editor and chooses 'save' from the popup
menu.

Since the editor does not indicate that the file needs to be
saved and the save action is found in a very non-obvious
place this behaviour opens up the possibility of changes being
lost.

This should be documented for the beta, therefore, I'll set the
defect as blocking.

    &lt;Note by wasleski (Steve Wasleski), 2001/08/01 16:17:23, seq: 2 rel: 0  action: modify&gt;
Old Priority:  
New Priority:  postbeta






NOTES:
PRODUCT VERSION:
	R09, Win2000	


Fixed. We force the user to save now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="224" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P5" />
    <bug_severity amount="minor" />
    <Summery>[CVS Repo View] Disappearing "+" when canceling CVS login in repositories view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>1. Go to the team perspective</Line>
          <Line>2. Select the repositories view</Line>
          <Line>3. Add a repository to your list</Line>
          <Line>4. When it asks you for a password, press cancel.</Line>
          <Line>5. Tell it to leave the repository in the list</Line>
          <Line>6. Expand the tree for that repository</Line>
          <Line>7. Expand the tree for Project Versions</Line>
          <Line>8. When it prompts for password, press cancel</Line>
          <Line>9. Observe that the "+" goes away next to Project Versions, leaving you</Line>
          <Line>the impression that you can't open it anymore, even with a password.</Line>
          <Line>If you double click on Project Versions it expands, and the "-" is displayed.</Line>
          <Line>The desired behavior is that the "+" should be restored after step 8.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>DLW (8/10/2001 10:28:32 AM)
		1. Go to the team perspective
		2. Select the repositories view
		3. Add a repository to your list
		4. When it asks you for a password, press cancel.
		5. Tell it to leave the repository in the list
		6. Expand the tree for that repository
		7. Expand the tree for Project Versions
		8. When it prompts for password, press cancel
		9. Observe that the "+" goes away next to Project Versions, leaving you
		the impression that you can't open it anymore, even with a password.
		If you double click on Project Versions it expands, and the "-" is displayed.
		The desired behavior is that the "+" should be restored after step 8.

NOTES:

	KH (9/14/2001 4:58:17 PM)
		From description this PR looks more like a VCMUI issue. Pls investigate and provide
	more details if it turns out to be a JFace/Workbench issue.
PRODUCT VERSION:
	r0.9, build 129


(1GI8YE2)
very minor, post 2.0  
Reopeing
This is the behavior of the tree so there's not much we can do.</WithStack>
    <WithOutStack>DLW (8/10/2001 10:28:32 AM)
		1. Go to the team perspective
		2. Select the repositories view
		3. Add a repository to your list
		4. When it asks you for a password, press cancel.
		5. Tell it to leave the repository in the list
		6. Expand the tree for that repository
		7. Expand the tree for Project Versions
		8. When it prompts for password, press cancel
		9. Observe that the "+" goes away next to Project Versions, leaving you
		the impression that you can't open it anymore, even with a password.
		If you double click on Project Versions it expands, and the "-" is displayed.
		The desired behavior is that the "+" should be restored after step 8.

NOTES:

	KH (9/14/2001 4:58:17 PM)
		From description this PR looks more like a VCMUI issue. Pls investigate and provide
	more details if it turns out to be a JFace/Workbench issue.
PRODUCT VERSION:
	r0.9, build 129


(1GI8YE2)
very minor, post 2.0  
Reopeing
This is the behavior of the tree so there's not much we can do.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="225" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Should not have to explicitly ask to show resource history (1GI98FY)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Resource history view should be able to work like other views (eg. Properties View)  that track selection changes
	and show it's resource history. 

NOTES:

Jean-Michel (8/14/01 4:04:41 PM)
	We don't want to do round trips for free. This should be an option.
There is now an option in the preferences page to turn on this behavior.

Fixed in v206</WithStack>
    <WithOutStack>Resource history view should be able to work like other views (eg. Properties View)  that track selection changes
	and show it's resource history. 

NOTES:

Jean-Michel (8/14/01 4:04:41 PM)
	We don't want to do round trips for free. This should be an option.
There is now an option in the preferences page to turn on this behavior.

Fixed in v206</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="226" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="178" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Switching between sync UI modes should preserve expansion state (1GIENI4)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When you switch between Catch Up and Release modes, it loses the expansion state of the tree.
It should remember this, and probably the selection and top item (scroll bar position) as well.

NOTES:


*** This bug has been marked as a duplicate of 178 ***
PRODUCT VERSION:
129</WithStack>
    <WithOutStack>When you switch between Catch Up and Release modes, it loses the expansion state of the tree.
It should remember this, and probably the selection and top item (scroll bar position) as well.

NOTES:


*** This bug has been marked as a duplicate of 178 ***
PRODUCT VERSION:
129</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="227" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Scalability issues (1GIGQYZ)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1.  We need to examine and rethink our mapping of our projects and CVS</Line>
          <Line>2.  In CVS sometimes you have modules and sometimes not so we can't rely on</Line>
          <Line>them for defining a project.</Line>
          <Line>3.  Taking the entire root set as projects also doesn't match how most lay out their data.</Line>
          <Line>As a result, you must load in more than you want.</Line>
          <Line>4.  Some CVS houses have recursive projects (projects in projects) but this is unlikely to</Line>
          <Line>be supported, least of all by core.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>How to support large CVS development.

Issues:
1.  We need to examine and rethink our mapping of our projects and CVS
2.  In CVS sometimes you have modules and sometimes not so we can't rely on
	them for defining a project.
3.  Taking the entire root set as projects also doesn't match how most lay out their data. 
	As a result, you must load in more than you want.
4.  Some CVS houses have recursive projects (projects in projects) but this is unlikely to
	be supported, least of all by core.

Requirements:
1.  Be able to checkout just a subtree of a project.  Presumably we'ld still need to load the parent
	directory structure and the project meta files.  Side issue: how do we know what the metafiles are?

2.  Be able to define 'arbitrary' directories as being projects.  The catch here is that you could
	not have resources above this directory which you'ld want to version manage.
	Q: How to 'remember' where the projects are?  Modules/aliases?


NOTES:
closing, most issues addressed</WithStack>
    <WithOutStack>How to support large CVS development.

Issues:
1.  We need to examine and rethink our mapping of our projects and CVS
2.  In CVS sometimes you have modules and sometimes not so we can't rely on
	them for defining a project.
3.  Taking the entire root set as projects also doesn't match how most lay out their data. 
	As a result, you must load in more than you want.
4.  Some CVS houses have recursive projects (projects in projects) but this is unlikely to
	be supported, least of all by core.

Requirements:
1.  Be able to checkout just a subtree of a project.  Presumably we'ld still need to load the parent
	directory structure and the project meta files.  Side issue: how do we know what the metafiles are?

2.  Be able to define 'arbitrary' directories as being projects.  The catch here is that you could
	not have resources above this directory which you'ld want to version manage.
	Q: How to 'remember' where the projects are?  Modules/aliases?


NOTES:
closing, most issues addressed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="228" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="71" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>DCR: Show repository and stream when syncronizing (1GIGRA9)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In SWT we now have several repositories, and one in particular has several 
streams.

	Consequently, a project can be in several streams (and in some cases, 
we have
	older versions of the same projects in more than one repository - we 
are not actively
	releasing to this older repository, but sometimes, we need to compare 
to it...)

	Anyhow, the gist of all this is that it can be quite confusing 
(specially given that we
	usually work in different workspaces when talking to the different 
streams! &lt;g&gt;)

	So this is a request (a plea) for the Synchronize window to show the 
repository and
	stream name that the current project/package/class/whatever is being 
synchronized
	with, so that you get that warm fuzzy feeling that comes with knowing 
you are releasing
	to the correct place, and you don't have to worry and go back and 
compulsively check
	the project properties to make sure that all is well.

	I guess that the best place to show this information would be in the 
compare browser
	pane that currently says "Repository file:". It could perhaps say 
something like:
		"Repository: blort Stream: blort File: blort x.x"

NOTES:

KM(8/15/2001 3:35:55 PM)
	Note that turning on "Version info" in the navigator shows the stream 
the project is connected to,
	which was in response to a previous request of yours &lt;g&gt;.
Bug 71 has been fixed, I believe it addressed this PR adequately. If not, 
please re-open.

*** This bug has been marked as a duplicate of 71 ***
PRODUCT VERSION:
	0.9


Created attachment 238648
when i run any program as well as simple html file, we get this bugs  during start of execution

i am using eclipse juno at linux(ubuntu ) platform, so have u any solution from this bugs, plz give me a,</WithStack>
    <WithOutStack>In SWT we now have several repositories, and one in particular has several 
streams.

	Consequently, a project can be in several streams (and in some cases, 
we have
	older versions of the same projects in more than one repository - we 
are not actively
	releasing to this older repository, but sometimes, we need to compare 
to it...)

	Anyhow, the gist of all this is that it can be quite confusing 
(specially given that we
	usually work in different workspaces when talking to the different 
streams! &lt;g&gt;)

	So this is a request (a plea) for the Synchronize window to show the 
repository and
	stream name that the current project/package/class/whatever is being 
synchronized
	with, so that you get that warm fuzzy feeling that comes with knowing 
you are releasing
	to the correct place, and you don't have to worry and go back and 
compulsively check
	the project properties to make sure that all is well.

	I guess that the best place to show this information would be in the 
compare browser
	pane that currently says "Repository file:". It could perhaps say 
something like:
		"Repository: blort Stream: blort File: blort x.x"

NOTES:

KM(8/15/2001 3:35:55 PM)
	Note that turning on "Version info" in the navigator shows the stream 
the project is connected to,
	which was in response to a previous request of yours &lt;g&gt;.
Bug 71 has been fixed, I believe it addressed this PR adequately. If not, 
please re-open.

*** This bug has been marked as a duplicate of 71 ***
PRODUCT VERSION:
	0.9


Created attachment 238648
when i run any program as well as simple html file, we get this bugs  during start of execution

i am using eclipse juno at linux(ubuntu ) platform, so have u any solution from this bugs, plz give me a,</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="229" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Team API] Project meta information should be consolidated (1GIRW80)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- IEclipsePreferences</Line>
          <Line>- ProjectScope</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The meta information associated with a project, such as project nature and java classpaths,
could be consolidated into a single mechanism that allows the storage and retrieval of this
information as a single file which can then be stored in repositories or combined with
other methods of project exchange.

Currently, each plugin is responsible for creating the files it needs when a project is loaded
from a repository (e.g. .vcm_meta &amp; .classpath) and these files are associated with the project
and stored in the repository. The problem with this is that some 
repositories may be shared with groups that do not use Eclipse. Therefore, these files 
should be excluded from these repositories.

A central mechanism could allow plugins to register information/readers and writers (that
use XML, perhaps). VCM could then trigger file generation (if desired) when releasing
changes and file reading when loading projects. For those situations where the repository
does not contain the information, the user can be prompted for the required info either
on a per project or per repository basis. Furthermore, repositories could be flagged as
being Eclipse friendly or not to indicate whether the information should be stored in the
repository.


NOTES:

KM (8/20/2001 5:17:05 PM)
	Actually, the interesting point here is that the VCM should provide a mechanism so that plugin
writers can persist their nature meta info.
PRODUCT VERSION:

Eclipse


Consolidating creates problems for compare - having separate files allows 
custom comparers based on file type.

Issue of provider specific storage into db fields, etc. future item.
Reopeing
While motivated by people using various VCM systems, this is actually
a generic problem at the workspace level.  In most projects people want
to be able to put all of the "project" configuration into version 
control.  Currently any attribute which is associated with a resource/
project will _likely_ use the Eclipse API to save its property information
since the API is built-in and "approved".  Unfortunately this means that
each time a property must be persisted, each instance will use their own
API and own scheme for saving/restoring this information.  This leads to
the proliferation of .cdtproject, .jdtproject, .project, .this, .that etc.
This is a _very_ bad trend.  If project properties are not always exposed
within the project, then there should at least be a toggle which is available
at project creation time to indicate that the properties for this project
are to be sharable.  This would route all of the Eclipse API per-resource 
preferences to the project local .project (or whatever) rather than into
the workspace .metadata.


Not sure that the new preferences API in 3.0 will allow the toggle but its
design had these points in mind. 
Yes, project preferences should help you out. Check out the following classes:
- IEclipsePreferences
- ProjectScope

As well as documentation on the Platform/Core team web site.</WithStack>
    <WithOutStack>The meta information associated with a project, such as project nature and java classpaths,
could be consolidated into a single mechanism that allows the storage and retrieval of this
information as a single file which can then be stored in repositories or combined with
other methods of project exchange.

Currently, each plugin is responsible for creating the files it needs when a project is loaded
from a repository (e.g. .vcm_meta &amp; .classpath) and these files are associated with the project
and stored in the repository. The problem with this is that some 
repositories may be shared with groups that do not use Eclipse. Therefore, these files 
should be excluded from these repositories.

A central mechanism could allow plugins to register information/readers and writers (that
use XML, perhaps). VCM could then trigger file generation (if desired) when releasing
changes and file reading when loading projects. For those situations where the repository
does not contain the information, the user can be prompted for the required info either
on a per project or per repository basis. Furthermore, repositories could be flagged as
being Eclipse friendly or not to indicate whether the information should be stored in the
repository.


NOTES:

KM (8/20/2001 5:17:05 PM)
	Actually, the interesting point here is that the VCM should provide a mechanism so that plugin
writers can persist their nature meta info.
PRODUCT VERSION:

Eclipse


Consolidating creates problems for compare - having separate files allows 
custom comparers based on file type.

Issue of provider specific storage into db fields, etc. future item.
Reopeing
While motivated by people using various VCM systems, this is actually
a generic problem at the workspace level.  In most projects people want
to be able to put all of the "project" configuration into version 
control.  Currently any attribute which is associated with a resource/
project will _likely_ use the Eclipse API to save its property information
since the API is built-in and "approved".  Unfortunately this means that
each time a property must be persisted, each instance will use their own
API and own scheme for saving/restoring this information.  This leads to
the proliferation of .cdtproject, .jdtproject, .project, .this, .that etc.
This is a _very_ bad trend.  If project properties are not always exposed
within the project, then there should at least be a toggle which is available
at project creation time to indicate that the properties for this project
are to be sharable.  This would route all of the Eclipse API per-resource 
preferences to the project local .project (or whatever) rather than into
the workspace .metadata.


Not sure that the new preferences API in 3.0 will allow the toggle but its
design had these points in mind. 
Yes, project preferences should help you out. Check out the following classes:
- IEclipsePreferences
- ProjectScope

As well as documentation on the Platform/Core team web site.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="230" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[CVS] Add "Revert to Base" menu item</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="4">
        <Lines>
          <Line>(a) Replace with revision is problematic, JM has a bug report about this right now.</Line>
          <Line>(b) Revert to Released (aka Replace with Base): I have a bug report about this</Line>
          <Line>one, awaiting support from Mike, who isn't sure how we can technically do this</Line>
          <Line>without ending up with sticky tags everywhere.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- replace with another version</Line>
          <Line>- revert to released (not the same as catchup since its an outgoing, not an incomming change)</Line>
          <Line>...?  need more details</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>It was always our intention to have more menu operations in the catchup/release viewer.
As a workaround we added "Show in Navigator".

We could presumably add a few in the 1.0.  Their absence is annoying and it would make things look more polished.
Also very helpful for people coming from VAJ.

Suggest at the file level:
- replace with another version
- revert to released (not the same as catchup since its an outgoing, not an incomming change)
...?  need more details

NOTES:
PRODUCT VERSION:

132


Recommend deferring until after M5 as we have not figured out how we can support
either of the suggested operations in general:

(a) Replace with revision is problematic, JM has a bug report about this right now.
(b) Revert to Released (aka Replace with Base): I have a bug report about this
one, awaiting support from Mike, who isn't sure how we can technically do this
without ending up with sticky tags everywhere.

Actions in the sync view will have to wait until these two are implemented
elsewhere.
I have concerns about what these actions appear to apply to.

Each node in the sync view represents a difference between the workspace and the
repository. Most of the actions aim towards resolving these differences in some
way. When you have an action such as "Replace with Revision...", it's not clear
to me whether you mean the left or the right. (i.e. it could mean Replace the
Workspace resource with another revision, or it could mean Release another
Revision to the repository). With "Show in Navigator", the direction is clear,
because it's obvious that only workspace resources are in the navigator to begin
with. But for the two proposed below (Replace with Revision and Replace with
Base), it's not clear whether it's the left or the right that we're "Replace"ing.

Any ideas on how to make this clear?
The one I find the most needed is the replace with base.  The case is you've 
made some changes locally and want to back out of them, but don't want to take 
the latest from the server.

How about "Revert to Base"?  Or "Discard Changes", which I like a bit more?  
(we may want to consider that same terminology for the Team menu, perhaps 
alongside "Commit" and "Update" instead of down in "Replace with").  "Discard 
Changes" may be confused with changes in the editor itself though?

Since you can't revert a branch (it keeps moving forward), then perhaps it 
won't be ambiguous?

I am happy to close the bug report with that in (forgetting about "replace with 
revision").
Lets go with "Revert to Base".  We'll put it down with "Mark as Merged", since 
they are both "workspace" operations and maybe that will make it clearer the 
are local.

"Mark as Merged" is also ambiguous as to where its occuring, but presumably 
once someone understands what these do it makes sense.
later, timed out
Reopening
Changed summary from "Need more menu ops in Catchup/Release viewer"
IF the action is created it will appear for free in the new sync view.
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>It was always our intention to have more menu operations in the catchup/release viewer.
As a workaround we added "Show in Navigator".

We could presumably add a few in the 1.0.  Their absence is annoying and it would make things look more polished.
Also very helpful for people coming from VAJ.

Suggest at the file level:
- replace with another version
- revert to released (not the same as catchup since its an outgoing, not an incomming change)
...?  need more details

NOTES:
PRODUCT VERSION:

132


Recommend deferring until after M5 as we have not figured out how we can support
either of the suggested operations in general:

(a) Replace with revision is problematic, JM has a bug report about this right now.
(b) Revert to Released (aka Replace with Base): I have a bug report about this
one, awaiting support from Mike, who isn't sure how we can technically do this
without ending up with sticky tags everywhere.

Actions in the sync view will have to wait until these two are implemented
elsewhere.
I have concerns about what these actions appear to apply to.

Each node in the sync view represents a difference between the workspace and the
repository. Most of the actions aim towards resolving these differences in some
way. When you have an action such as "Replace with Revision...", it's not clear
to me whether you mean the left or the right. (i.e. it could mean Replace the
Workspace resource with another revision, or it could mean Release another
Revision to the repository). With "Show in Navigator", the direction is clear,
because it's obvious that only workspace resources are in the navigator to begin
with. But for the two proposed below (Replace with Revision and Replace with
Base), it's not clear whether it's the left or the right that we're "Replace"ing.

Any ideas on how to make this clear?
The one I find the most needed is the replace with base.  The case is you've 
made some changes locally and want to back out of them, but don't want to take 
the latest from the server.

How about "Revert to Base"?  Or "Discard Changes", which I like a bit more?  
(we may want to consider that same terminology for the Team menu, perhaps 
alongside "Commit" and "Update" instead of down in "Replace with").  "Discard 
Changes" may be confused with changes in the editor itself though?

Since you can't revert a branch (it keeps moving forward), then perhaps it 
won't be ambiguous?

I am happy to close the bug report with that in (forgetting about "replace with 
revision").
Lets go with "Revert to Base".  We'll put it down with "Mark as Merged", since 
they are both "workspace" operations and maybe that will make it clearer the 
are local.

"Mark as Merged" is also ambiguous as to where its occuring, but presumably 
once someone understands what these do it makes sense.
later, timed out
Reopening
Changed summary from "Need more menu ops in Catchup/Release viewer"
IF the action is created it will appear for free in the new sync view.
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="231" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Keyword substitution and binary mode (1GIXNG1)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- we currently store to CVS in binary mode only</Line>
          <Line>- we did this to avoid keyword substitution</Line>
          <Line>- we need a better story for this</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Just a reminder PR for 2.0:
- we currently store to CVS in binary mode only
- we did this to avoid keyword substitution
- we need a better story for this


NOTES:

Jean-Michel (8/24/01 2:13:56 PM)
	I thought we did this because we couldn't tell at release time what the type of the
	file and thus could not make a smart choice about sending it as binary or text.
	We chose to send all as binary, a result was that keyword substitution is only
	supported if you manually change the type via the command line.

JEM (9/10/2001 11:12:56 AM)
	To solve this problem we could follow a similar strategy as we did for wildcard ignores.
	That is, each plugin could contribute a list of files that should be treated as text files.
	(i.e. Java plugin registers *.java, *.properties). The user can view all of these in a preference
	page and add/remove/disable as he/she sees fit (i.e. add *.c manually).

JEM (9/10/2001 4:58:38 PM)
	The comare framework would like to have this functionality as well (see the PR about
	the compare framework treating files with db chars as binary). This appears to be generically
	useful API.
PRODUCT VERSION:

131


*** Bug 8602 has been marked as a duplicate of this bug. ***
Text mode now supported but local to Team.
There is a work item in 2.0 plan asking for support to be moved to Desktop.</WithStack>
    <WithOutStack>Just a reminder PR for 2.0:
- we currently store to CVS in binary mode only
- we did this to avoid keyword substitution
- we need a better story for this


NOTES:

Jean-Michel (8/24/01 2:13:56 PM)
	I thought we did this because we couldn't tell at release time what the type of the
	file and thus could not make a smart choice about sending it as binary or text.
	We chose to send all as binary, a result was that keyword substitution is only
	supported if you manually change the type via the command line.

JEM (9/10/2001 11:12:56 AM)
	To solve this problem we could follow a similar strategy as we did for wildcard ignores.
	That is, each plugin could contribute a list of files that should be treated as text files.
	(i.e. Java plugin registers *.java, *.properties). The user can view all of these in a preference
	page and add/remove/disable as he/she sees fit (i.e. add *.c manually).

JEM (9/10/2001 4:58:38 PM)
	The comare framework would like to have this functionality as well (see the PR about
	the compare framework treating files with db chars as binary). This appears to be generically
	useful API.
PRODUCT VERSION:

131


*** Bug 8602 has been marked as a duplicate of this bug. ***
Text mode now supported but local to Team.
There is a work item in 2.0 plan asking for support to be moved to Desktop.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="232" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>VCM UI + CVS: multiple round trips caused by API client (1GIZ4I8)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="functiondef">
        <location start="228" end="326" />
        <code>for(int i = 0; i &lt; editions.length; i++) {
		InputStream is = editions[i].fetchContent(null); 
	}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="582" end="618" />
        <code>VCMAdapter.run( new IVCMRunnable() {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="619" end="799" />
        <code>public void run(IProgressMonitor monitor) {
			IFileEdition[] editions;
			for(int i = 0; i &lt; editions.length; i++) {
				InputStream is = editions[i].fetchContent(null); 
		}
	}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="892" end="1372" />
        <code>public void run(IVCMRunnable job, IProgressMonitor monitor) throwsVCMException {
	monitor = Policy.monitorFor(monitor);
	try {
		monitor.beginTask(null, Policy.totalWork);
		try {
			openConnection();
			job.run(Policy.subMonitorFor(monitor, Policy.opWork, SubProgressMonitor.PREPEND_MAIN_LABEL_TO_SUBTASK));
		} catch (OperationCanceledException e) {
			getWorkManager().operationCanceled();
			throw e;
		} finally {
			closeConnection();
		}
	} finally {
		monitor.done();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>A user of the VCM API can easily call API methods, that cause a round trip, within a loop. This
can potentialy result in multiple connections to the repository in a short period of time.

For example:

	IFileEdition[] editions;
	for(int i = 0; i &lt; editions.length; i++) {
		InputStream is = editions[i].fetchContent(null); 
	}

Our current API does not allow the client of the API to help the adapters batch round trips
(e.g. of course if the adapter can implement batching within a connection). We will need a IVCMRunnable interface such that the following code could be
written:

VCMAdapter.run( new IVCMRunnable() {
		public void run(IProgressMonitor monitor) {
			IFileEdition[] editions;
			for(int i = 0; i &lt; editions.length; i++) {
				InputStream is = editions[i].fetchContent(null); 
		}
	}

The adapter could have the opportunity to setup a connection to run batch VCM operations:

public void run(IVCMRunnable job, IProgressMonitor monitor) throwsVCMException {
	monitor = Policy.monitorFor(monitor);
	try {
		monitor.beginTask(null, Policy.totalWork);
		try {
			openConnection();
			job.run(Policy.subMonitorFor(monitor, Policy.opWork, SubProgressMonitor.PREPEND_MAIN_LABEL_TO_SUBTASK));
		} catch (OperationCanceledException e) {
			getWorkManager().operationCanceled();
			throw e;
		} finally {
			closeConnection();
		}
	} finally {
		monitor.done();
	}
}

NOTES:

Jean-Michel (8/24/01 1:54:48 PM)
	In our current implementation a "Compare with Version" on a project with a project in another repo will cause
	multiple round-trips to retrieve the file contents to be compared. This will crash inetd running CVS pservers.
	There might be other operations in the VCM UI which call VCM fetch operations recursively or in a loop.
PRODUCT VERSION:
R0.9


fixed now that we no longer have VCM API to go through :)
Re-opening, we still have the multiple round trip happening in compare.

For example, the compare client gets the remote tree then in a loop calls 
getContents() on each remote handle. This will cause multiple round trips to 
the server. It would be better to batch these in one command.
This would require some more major refactoring of the command infrastructure 
and I'm not comfortable doing this for M5. I would even say that this is a 
feature request.
*** Bug 13422 has been marked as a duplicate of this bug. ***
Lets look at this as part of round we are doing on # of connection creation.
Michael is working on this enhancement.
We now use a conection per tree when merging and comparing.</WithStack>
    <WithOutStack>A user of the VCM API can easily call API methods, that cause a round trip, within a loop. This
can potentialy result in multiple connections to the repository in a short period of time.

For example:

	IFileEdition[] editions;
	for(int i = 0; i &lt; editions.length; i++) {
		InputStream is = editions[i].fetchContent(null); 
	}

Our current API does not allow the client of the API to help the adapters batch round trips
(e.g. of course if the adapter can implement batching within a connection). We will need a IVCMRunnable interface such that the following code could be
written:

VCMAdapter.run( new IVCMRunnable() {
		public void run(IProgressMonitor monitor) {
			IFileEdition[] editions;
			for(int i = 0; i &lt; editions.length; i++) {
				InputStream is = editions[i].fetchContent(null); 
		}
	}

The adapter could have the opportunity to setup a connection to run batch VCM operations:

public void run(IVCMRunnable job, IProgressMonitor monitor) throwsVCMException {
	monitor = Policy.monitorFor(monitor);
	try {
		monitor.beginTask(null, Policy.totalWork);
		try {
			openConnection();
			job.run(Policy.subMonitorFor(monitor, Policy.opWork, SubProgressMonitor.PREPEND_MAIN_LABEL_TO_SUBTASK));
		} catch (OperationCanceledException e) {
			getWorkManager().operationCanceled();
			throw e;
		} finally {
			closeConnection();
		}
	} finally {
		monitor.done();
	}
}

NOTES:

Jean-Michel (8/24/01 1:54:48 PM)
	In our current implementation a "Compare with Version" on a project with a project in another repo will cause
	multiple round-trips to retrieve the file contents to be compared. This will crash inetd running CVS pservers.
	There might be other operations in the VCM UI which call VCM fetch operations recursively or in a loop.
PRODUCT VERSION:
R0.9


fixed now that we no longer have VCM API to go through :)
Re-opening, we still have the multiple round trip happening in compare.

For example, the compare client gets the remote tree then in a loop calls 
getContents() on each remote handle. This will cause multiple round trips to 
the server. It would be better to batch these in one command.
This would require some more major refactoring of the command infrastructure 
and I'm not comfortable doing this for M5. I would even say that this is a 
feature request.
*** Bug 13422 has been marked as a duplicate of this bug. ***
Lets look at this as part of round we are doing on # of connection creation.
Michael is working on this enhancement.
We now use a conection per tree when merging and comparing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="233" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>History filter code review (Shad work)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>- HistoryAction.run() instantiates HistoryInput but then replaces it</Line>
          <Line>- HistoryInput.getDateEntered -&gt; convention is that boolean methods use "is" or "has" prefix</Line>
          <Line>- Same for getIsOr/setIsOr (use setOr and isOr).</Line>
          <Line>- HistoryInput should have constructors instead of set methods.</Line>
          <Line>- In HistoryFilter.select, if getIsOr is true, it can still fall through to the "and" code.</Line>
          <Line>- HistoryFilter numParam and numTrue is interesting approach, but cleaner approach</Line>
          <Line>would be to use the java &amp;&amp; and || operators.  This would do more efficient short-circuit and/or.</Line>
          <Line>- Could show month names in combo box instead of numbers.  Then use the selection Index and</Line>
          <Line>ignore value.</Line>
          <Line>- Neat feature: previously filtered values could show up as default.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The following are some comments on the filtering added to the history view
by Heather (Shad student).

- HistoryAction.run() instantiates HistoryInput but then replaces it
- HistoryInput.getDateEntered -&gt; convention is that boolean methods use "is" or "has" prefix
- Same for getIsOr/setIsOr (use setOr and isOr).
- HistoryInput should have constructors instead of set methods.
- In HistoryFilter.select, if getIsOr is true, it can still fall through to the "and" code.
- HistoryFilter numParam and numTrue is interesting approach, but cleaner approach
	would be to use the java &amp;&amp; and || operators.  This would do more efficient short-circuit and/or.
- Could show month names in combo box instead of numbers.  Then use the selection Index and
	ignore value.
- Neat feature: previously filtered values could show up as default.

NOTES:
Implemented Month Names in combo, and previously filtered values showing up as 
default. All other appear to have been previously fixed.
Should switch months back to numbers for consistency with the history view.
(Was RPRS 1GJ4VZM)
Need to forward-port the history filter to the 2.0 codebase.
Fixed.</WithStack>
    <WithOutStack>The following are some comments on the filtering added to the history view
by Heather (Shad student).

- HistoryAction.run() instantiates HistoryInput but then replaces it
- HistoryInput.getDateEntered -&gt; convention is that boolean methods use "is" or "has" prefix
- Same for getIsOr/setIsOr (use setOr and isOr).
- HistoryInput should have constructors instead of set methods.
- In HistoryFilter.select, if getIsOr is true, it can still fall through to the "and" code.
- HistoryFilter numParam and numTrue is interesting approach, but cleaner approach
	would be to use the java &amp;&amp; and || operators.  This would do more efficient short-circuit and/or.
- Could show month names in combo box instead of numbers.  Then use the selection Index and
	ignore value.
- Neat feature: previously filtered values could show up as default.

NOTES:
Implemented Month Names in combo, and previously filtered values showing up as 
default. All other appear to have been previously fixed.
Should switch months back to numbers for consistency with the history view.
(Was RPRS 1GJ4VZM)
Need to forward-port the history filter to the 2.0 codebase.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="234" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE in sync (1GJ4W10)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331285288">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.vcm.internal.ui.sync.SyncView.setSyncMode(SyncView.java:213)</Frame>
          <Frame depth="1">org.eclipse.vcm.internal.ui.sync.SyncView$SyncModeAction.run(SyncView.java:74)</Frame>
          <Frame depth="2">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:408)</Frame>
          <Frame depth="3">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java(Compiled Code))</Frame>
          <Frame depth="4">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))</Frame>
          <Frame depth="5">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="10">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="11">org.eclipse.ui.internal.Workbench.run(Workbench.java:622)</Frame>
          <Frame depth="12">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815)</Frame>
          <Frame depth="13">org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)</Frame>
          <Frame depth="14">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="15">org.eclipse.core.launcher.Main.basicRun(Main.java:119)</Frame>
          <Frame depth="16">org.eclipse.core.launcher.Main.run(Main.java:401)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.main(Main.java:274)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Sync. There were two conflicts, and no incoming or outgoing changes.</Line>
          <Line>2. Catch up to both conflicts.</Line>
          <Line>3. Switch to the release view.</Line>
          <Line>Error occurred.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Did a sync of Eclipse UI.  It came up in the catch up mode because there were incoming changes.
When I clicked on the icon for release mode, I got an internal error dialog, and the following in the .log:

Log: Mon Aug 27 16:18:37 EDT 2001
1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Log: Mon Aug 27 16:18:37 EDT 2001
4 org.eclipse.ui 0 java.lang.NullPointerException
java.lang.NullPointerException
	at org.eclipse.vcm.internal.ui.sync.SyncView.setSyncMode(SyncView.java:213)
	at org.eclipse.vcm.internal.ui.sync.SyncView$SyncModeAction.run(SyncView.java:74)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:408)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java(Compiled Code))
	at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))
	at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:622)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:119)
	at org.eclipse.core.launcher.Main.run(Main.java:401)
	at org.eclipse.core.launcher.Main.main(Main.java:274)

NOTES:
NE (08/27/01 4:21:55 PM)
	Could not reproduce it.

NE (08/27/01 5:01:40 PM)
	Possibly due to having other window in front.  Any calls to getActiveWorkbenchWindow()?
PRODUCT VERSION:
132


This happened to me. My steps:
1. Sync. There were two conflicts, and no incoming or outgoing changes.
2. Catch up to both conflicts.
3. Switch to the release view.
Error occurred.

It's on my list.
fixed, can no longer reproduce</WithStack>
    <WithOutStack>Did a sync of Eclipse UI.  It came up in the catch up mode because there were incoming changes.
When I clicked on the icon for release mode, I got an internal error dialog, and the following in the .log:

Log: Mon Aug 27 16:18:37 EDT 2001
1 org.eclipse.core.resources 4 Unhandled exception caught in event loop.
Log: Mon Aug 27 16:18:37 EDT 2001
4 org.eclipse.ui 0 java.lang.NullPointerException


NOTES:
NE (08/27/01 4:21:55 PM)
	Could not reproduce it.

NE (08/27/01 5:01:40 PM)
	Possibly due to having other window in front.  Any calls to getActiveWorkbenchWindow()?
PRODUCT VERSION:
132


This happened to me. My steps:
1. Sync. There were two conflicts, and no incoming or outgoing changes.
2. Catch up to both conflicts.
3. Switch to the release view.
Error occurred.

It's on my list.
fixed, can no longer reproduce</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="235" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>[CVS Repo View] Allow user to set a date to narrow searches (1GJ6EJ4)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>It would be nice if the user could set a date such that those CVS commands that accept
a date will use it, thus reducing the amount of information returned. This may be important
considering that a CVS history file can become large and we use this file to determine what
project versions exist. A data could be used as a cutoff such that only versions created
since tht date are returned.

NOTES:
future
Reopening
This no longer applies as we no longer rely on the history file (because there 
is no gaurantee it is there) and there is no other way to get the date when a 
tag was created.</WithStack>
    <WithOutStack>It would be nice if the user could set a date such that those CVS commands that accept
a date will use it, thus reducing the amount of information returned. This may be important
considering that a CVS history file can become large and we use this file to determine what
project versions exist. A data could be used as a cutoff such that only versions created
since tht date are returned.

NOTES:
future
Reopening
This no longer applies as we no longer rely on the history file (because there 
is no gaurantee it is there) and there is no other way to get the date when a 
tag was created.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="236" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Exceptions starting up workspace (1GJ85XQ)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="4">
      <Stacktrace timestamp="1437331285288">
        <Exception>org.eclipse.vcm.internal.core.VCMException</Exception>
        <Reason>Type not supported</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.vcm.internal.core.RepositoryLocation.getAdapterFactory(RepositoryLocation.java:45)</Frame>
          <Frame depth="1">org.eclipse.vcm.internal.core.RepositoryLocation.from(RepositoryLocation.java:38)</Frame>
          <Frame depth="2">org.eclipse.vcm.internal.core.PlatformVCMProvider.newRepositoryLocation(PlatformVCMProvider.java:153)</Frame>
          <Frame depth="3">org.eclipse.vcm.internal.core.SharingManager.getSharing(SharingManager.java:438)</Frame>
          <Frame depth="4">org.eclipse.vcm.internal.core.SharingManager$3.resourceChanged(SharingManager.java:478)</Frame>
          <Frame depth="5">org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:126)</Frame>
          <Frame depth="6">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="8">org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:141)</Frame>
          <Frame depth="9">org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:42)</Frame>
          <Frame depth="10">org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:64)</Frame>
          <Frame depth="11">org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:108)</Frame>
          <Frame depth="12">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:735)</Frame>
          <Frame depth="13">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1226)</Frame>
          <Frame depth="14">org.eclipse.core.internal.resources.Synchronizer.flushSyncInfo(Synchronizer.java:85)</Frame>
          <Frame depth="15">org.eclipse.core.internal.resources.Synchronizer.remove(Synchronizer.java:176)</Frame>
          <Frame depth="16">org.eclipse.vcm.internal.core.PlatformVCMProvider.startup(PlatformVCMProvider.java:259)</Frame>
          <Frame depth="17">org.eclipse.vcm.internal.core.base.VCMPlugin.startup(VCMPlugin.java:102)</Frame>
          <Frame depth="18">org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:644)</Frame>
          <Frame depth="19">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="20">org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:656)</Frame>
          <Frame depth="21">org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)</Frame>
          <Frame depth="22">org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)</Frame>
          <Frame depth="23">org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))</Frame>
          <Frame depth="24">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="25">org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:609)</Frame>
          <Frame depth="26">org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="27">org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="28">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="29">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="30">java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))</Frame>
          <Frame depth="31">java.lang.Class.getConstructor0(Native Method)</Frame>
          <Frame depth="32">java.lang.Class.getConstructor(Class.java:959)</Frame>
          <Frame depth="33">org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:621)</Frame>
          <Frame depth="34">org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)</Frame>
          <Frame depth="35">org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)</Frame>
          <Frame depth="36">org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))</Frame>
          <Frame depth="37">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="38">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="39">java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))</Frame>
          <Frame depth="40">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:79)</Frame>
          <Frame depth="41">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:116)</Frame>
          <Frame depth="42">org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:96)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:102)</Frame>
          <Frame depth="44">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:99)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.registry.ViewDescriptor.createView(ViewDescriptor.java:43)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:113)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:93)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.Perspective$4.run(Perspective.java:661)</Frame>
          <Frame depth="50">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="51">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Perspective.restoreView(Perspective.java:654)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.Perspective.restoreState(Perspective.java:572)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:1182)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.WorkbenchPage.&lt;init&gt;(WorkbenchPage.java:78)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:743)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:598)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.Workbench$5.run(Workbench.java:477)</Frame>
          <Frame depth="59">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="60">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:461)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:518)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.init(Workbench.java:393)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.run(Workbench.java:618)</Frame>
          <Frame depth="65">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815)</Frame>
          <Frame depth="66">org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)</Frame>
          <Frame depth="67">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="68">org.eclipse.core.launcher.Main.basicRun(Main.java:119)</Frame>
          <Frame depth="69">org.eclipse.core.launcher.Main.run(Main.java:401)</Frame>
          <Frame depth="70">org.eclipse.core.launcher.Main.main(Main.java:274)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437331285288">
        <Exception>org.eclipse.vcm.internal.core.AssertionFailedException</Exception>
        <Reason>Assertion failed: An internal error has occurred, consult the error log for details.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.vcm.internal.core.Assert.fail(Assert.java:14)</Frame>
          <Frame depth="1">org.eclipse.vcm.internal.core.Util.fatalError(Util.java:77)</Frame>
          <Frame depth="2">org.eclipse.vcm.internal.core.SharingManager.getSharing(SharingManager.java:447)</Frame>
          <Frame depth="3">org.eclipse.vcm.internal.core.SharingManager$3.resourceChanged(SharingManager.java:478)</Frame>
          <Frame depth="4">org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:126)</Frame>
          <Frame depth="5">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="6">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="7">org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:141)</Frame>
          <Frame depth="8">org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:42)</Frame>
          <Frame depth="9">org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:64)</Frame>
          <Frame depth="10">org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:108)</Frame>
          <Frame depth="11">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:735)</Frame>
          <Frame depth="12">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1226)</Frame>
          <Frame depth="13">org.eclipse.core.internal.resources.Synchronizer.flushSyncInfo(Synchronizer.java:85)</Frame>
          <Frame depth="14">org.eclipse.core.internal.resources.Synchronizer.remove(Synchronizer.java:176)</Frame>
          <Frame depth="15">org.eclipse.vcm.internal.core.PlatformVCMProvider.startup(PlatformVCMProvider.java:259)</Frame>
          <Frame depth="16">org.eclipse.vcm.internal.core.base.VCMPlugin.startup(VCMPlugin.java:102)</Frame>
          <Frame depth="17">org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:644)</Frame>
          <Frame depth="18">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="19">org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:656)</Frame>
          <Frame depth="20">org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)</Frame>
          <Frame depth="21">org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)</Frame>
          <Frame depth="22">org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))</Frame>
          <Frame depth="23">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="24">org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:609)</Frame>
          <Frame depth="25">org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="26">org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="27">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="28">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="29">java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))</Frame>
          <Frame depth="30">java.lang.Class.getConstructor0(Native Method)</Frame>
          <Frame depth="31">java.lang.Class.getConstructor(Class.java:959)</Frame>
          <Frame depth="32">org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:621)</Frame>
          <Frame depth="33">org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)</Frame>
          <Frame depth="34">org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)</Frame>
          <Frame depth="35">org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))</Frame>
          <Frame depth="36">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="37">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="38">java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))</Frame>
          <Frame depth="39">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:79)</Frame>
          <Frame depth="40">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:116)</Frame>
          <Frame depth="41">org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:96)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:102)</Frame>
          <Frame depth="43">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:99)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.registry.ViewDescriptor.createView(ViewDescriptor.java:43)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:113)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:93)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.Perspective$4.run(Perspective.java:661)</Frame>
          <Frame depth="49">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="50">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.Perspective.restoreView(Perspective.java:654)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Perspective.restoreState(Perspective.java:572)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:1182)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.WorkbenchPage.&lt;init&gt;(WorkbenchPage.java:78)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:743)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:598)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.Workbench$5.run(Workbench.java:477)</Frame>
          <Frame depth="58">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="59">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:461)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:518)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.init(Workbench.java:393)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.run(Workbench.java:618)</Frame>
          <Frame depth="64">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815)</Frame>
          <Frame depth="65">org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)</Frame>
          <Frame depth="66">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="67">org.eclipse.core.launcher.Main.basicRun(Main.java:119)</Frame>
          <Frame depth="68">org.eclipse.core.launcher.Main.run(Main.java:401)</Frame>
          <Frame depth="69">org.eclipse.core.launcher.Main.main(Main.java:274)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437331285288">
        <Exception>org.eclipse.vcm.internal.core.VCMException</Exception>
        <Reason>Type not supported</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.vcm.internal.core.RepositoryLocation.getAdapterFactory(RepositoryLocation.java:45)</Frame>
          <Frame depth="1">org.eclipse.vcm.internal.core.RepositoryLocation.from(RepositoryLocation.java:38)</Frame>
          <Frame depth="2">org.eclipse.vcm.internal.core.PlatformVCMProvider.newRepositoryLocation(PlatformVCMProvider.java:153)</Frame>
          <Frame depth="3">org.eclipse.vcm.internal.core.SharingManager.getSharing(SharingManager.java:438)</Frame>
          <Frame depth="4">org.eclipse.vcm.internal.core.SharingManager$3.resourceChanged(SharingManager.java:478)</Frame>
          <Frame depth="5">org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:126)</Frame>
          <Frame depth="6">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="7">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="8">org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:141)</Frame>
          <Frame depth="9">org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:42)</Frame>
          <Frame depth="10">org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:64)</Frame>
          <Frame depth="11">org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:108)</Frame>
          <Frame depth="12">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java(Compiled Code))</Frame>
          <Frame depth="13">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1226)</Frame>
          <Frame depth="14">org.eclipse.core.internal.resources.Synchronizer.flushSyncInfo(Synchronizer.java:85)</Frame>
          <Frame depth="15">org.eclipse.core.internal.resources.Synchronizer.remove(Synchronizer.java:176)</Frame>
          <Frame depth="16">org.eclipse.vcm.internal.core.PlatformVCMProvider.startup(PlatformVCMProvider.java:259)</Frame>
          <Frame depth="17">org.eclipse.vcm.internal.core.base.VCMPlugin.startup(VCMPlugin.java:102)</Frame>
          <Frame depth="18">org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:644)</Frame>
          <Frame depth="19">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="20">org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:656)</Frame>
          <Frame depth="21">org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)</Frame>
          <Frame depth="22">org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)</Frame>
          <Frame depth="23">org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))</Frame>
          <Frame depth="24">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="25">org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:609)</Frame>
          <Frame depth="26">org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="27">org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="28">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="29">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="30">java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))</Frame>
          <Frame depth="31">java.lang.Class.getConstructor0(Native Method)</Frame>
          <Frame depth="32">java.lang.Class.getConstructor(Class.java:959)</Frame>
          <Frame depth="33">org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:621)</Frame>
          <Frame depth="34">org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)</Frame>
          <Frame depth="35">org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)</Frame>
          <Frame depth="36">org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))</Frame>
          <Frame depth="37">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="38">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="39">java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))</Frame>
          <Frame depth="40">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:79)</Frame>
          <Frame depth="41">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:116)</Frame>
          <Frame depth="42">org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:96)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:102)</Frame>
          <Frame depth="44">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:99)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.registry.ViewDescriptor.createView(ViewDescriptor.java:43)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:113)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:93)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.Perspective$4.run(Perspective.java:661)</Frame>
          <Frame depth="50">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="51">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Perspective.restoreView(Perspective.java:654)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.Perspective.restoreState(Perspective.java:572)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:1182)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.WorkbenchPage.&lt;init&gt;(WorkbenchPage.java:78)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:743)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:598)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.Workbench$5.run(Workbench.java:477)</Frame>
          <Frame depth="59">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="60">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:461)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:518)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.init(Workbench.java:393)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.run(Workbench.java:618)</Frame>
          <Frame depth="65">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815)</Frame>
          <Frame depth="66">org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)</Frame>
          <Frame depth="67">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="68">org.eclipse.core.launcher.Main.basicRun(Main.java:119)</Frame>
          <Frame depth="69">org.eclipse.core.launcher.Main.run(Main.java:401)</Frame>
          <Frame depth="70">org.eclipse.core.launcher.Main.main(Main.java:274)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437331285288">
        <Exception>org.eclipse.vcm.internal.core.AssertionFailedException</Exception>
        <Reason>Assertion failed: An internal error has occurred, consult the error log for details.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.vcm.internal.core.Assert.fail(Assert.java:14)</Frame>
          <Frame depth="1">org.eclipse.vcm.internal.core.Util.fatalError(Util.java:77)</Frame>
          <Frame depth="2">org.eclipse.vcm.internal.core.SharingManager.getSharing(SharingManager.java:447)</Frame>
          <Frame depth="3">org.eclipse.vcm.internal.core.SharingManager$3.resourceChanged(SharingManager.java:478)</Frame>
          <Frame depth="4">org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:126)</Frame>
          <Frame depth="5">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="6">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="7">org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:141)</Frame>
          <Frame depth="8">org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:42)</Frame>
          <Frame depth="9">org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:64)</Frame>
          <Frame depth="10">org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:108)</Frame>
          <Frame depth="11">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java(Compiled Code))</Frame>
          <Frame depth="12">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1226)</Frame>
          <Frame depth="13">org.eclipse.core.internal.resources.Synchronizer.flushSyncInfo(Synchronizer.java:85)</Frame>
          <Frame depth="14">org.eclipse.core.internal.resources.Synchronizer.remove(Synchronizer.java:176)</Frame>
          <Frame depth="15">org.eclipse.vcm.internal.core.PlatformVCMProvider.startup(PlatformVCMProvider.java:259)</Frame>
          <Frame depth="16">org.eclipse.vcm.internal.core.base.VCMPlugin.startup(VCMPlugin.java:102)</Frame>
          <Frame depth="17">org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:644)</Frame>
          <Frame depth="18">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="19">org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:656)</Frame>
          <Frame depth="20">org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)</Frame>
          <Frame depth="21">org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)</Frame>
          <Frame depth="22">org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))</Frame>
          <Frame depth="23">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="24">org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:609)</Frame>
          <Frame depth="25">org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="26">org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="27">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="28">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="29">java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))</Frame>
          <Frame depth="30">java.lang.Class.getConstructor0(Native Method)</Frame>
          <Frame depth="31">java.lang.Class.getConstructor(Class.java:959)</Frame>
          <Frame depth="32">org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:621)</Frame>
          <Frame depth="33">org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)</Frame>
          <Frame depth="34">org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)</Frame>
          <Frame depth="35">org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))</Frame>
          <Frame depth="36">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="37">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))</Frame>
          <Frame depth="38">java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))</Frame>
          <Frame depth="39">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:79)</Frame>
          <Frame depth="40">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:116)</Frame>
          <Frame depth="41">org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:96)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:102)</Frame>
          <Frame depth="43">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:99)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.registry.ViewDescriptor.createView(ViewDescriptor.java:43)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:113)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:93)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.Perspective$4.run(Perspective.java:661)</Frame>
          <Frame depth="49">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="50">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.Perspective.restoreView(Perspective.java:654)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Perspective.restoreState(Perspective.java:572)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:1182)</Frame>
          <Frame depth="54">org.eclipse.ui.internal.WorkbenchPage.&lt;init&gt;(WorkbenchPage.java:78)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:743)</Frame>
          <Frame depth="56">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:598)</Frame>
          <Frame depth="57">org.eclipse.ui.internal.Workbench$5.run(Workbench.java:477)</Frame>
          <Frame depth="58">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)</Frame>
          <Frame depth="59">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:461)</Frame>
          <Frame depth="61">org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:518)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.init(Workbench.java:393)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.run(Workbench.java:618)</Frame>
          <Frame depth="64">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815)</Frame>
          <Frame depth="65">org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)</Frame>
          <Frame depth="66">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="67">org.eclipse.core.launcher.Main.basicRun(Main.java:119)</Frame>
          <Frame depth="68">org.eclipse.core.launcher.Main.run(Main.java:401)</Frame>
          <Frame depth="69">org.eclipse.core.launcher.Main.main(Main.java:274)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I have started/shutdown my workspace a couple of times today. Then suddenly it
	took a while (about 2 minutes?) to startup. Here is the info from the log.

STACK: 

Log: Wed Aug 29 10:34:41 EDT 2001
4 org.eclipse.vcm.core 4 Internal error: CoreException in getSharing for P/ZZDJTest
org.eclipse.vcm.internal.core.VCMException: Type not supported
	at org.eclipse.vcm.internal.core.RepositoryLocation.getAdapterFactory(RepositoryLocation.java:45)
	at org.eclipse.vcm.internal.core.RepositoryLocation.from(RepositoryLocation.java:38)
	at org.eclipse.vcm.internal.core.PlatformVCMProvider.newRepositoryLocation(PlatformVCMProvider.java:153)
	at org.eclipse.vcm.internal.core.SharingManager.getSharing(SharingManager.java:438)
	at org.eclipse.vcm.internal.core.SharingManager$3.resourceChanged(SharingManager.java:478)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:126)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:141)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:42)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:64)
	at org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:108)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:735)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1226)
	at org.eclipse.core.internal.resources.Synchronizer.flushSyncInfo(Synchronizer.java:85)
	at org.eclipse.core.internal.resources.Synchronizer.remove(Synchronizer.java:176)
	at org.eclipse.vcm.internal.core.PlatformVCMProvider.startup(PlatformVCMProvider.java:259)
	at org.eclipse.vcm.internal.core.base.VCMPlugin.startup(VCMPlugin.java:102)
	at org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:644)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:656)
	at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)
	at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)
	at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:609)
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))
	at java.lang.Class.getConstructor0(Native Method)
	at java.lang.Class.getConstructor(Class.java:959)
	at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:621)
	at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)
	at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)
	at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:79)
	at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:116)
	at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:96)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:102)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:99)
	at org.eclipse.ui.internal.registry.ViewDescriptor.createView(ViewDescriptor.java:43)
	at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:113)
	at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:93)
	at org.eclipse.ui.internal.Perspective$4.run(Perspective.java:661)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.ui.internal.Perspective.restoreView(Perspective.java:654)
	at org.eclipse.ui.internal.Perspective.restoreState(Perspective.java:572)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:1182)
	at org.eclipse.ui.internal.WorkbenchPage.&lt;init&gt;(WorkbenchPage.java:78)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:743)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:598)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:477)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:461)
	at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:518)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:393)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:618)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:119)
	at org.eclipse.core.launcher.Main.run(Main.java:401)
	at org.eclipse.core.launcher.Main.main(Main.java:274)
	1 org.eclipse.vcm.core 1 Type not supported
Log: Wed Aug 29 10:34:42 EDT 2001
2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-in: org.eclipse.core.resources.
org.eclipse.vcm.internal.core.AssertionFailedException: Assertion failed: An internal error has occurred, consult the error log for details.
	at org.eclipse.vcm.internal.core.Assert.fail(Assert.java:14)
	at org.eclipse.vcm.internal.core.Util.fatalError(Util.java:77)
	at org.eclipse.vcm.internal.core.SharingManager.getSharing(SharingManager.java:447)
	at org.eclipse.vcm.internal.core.SharingManager$3.resourceChanged(SharingManager.java:478)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:126)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:141)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:42)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:64)
	at org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:108)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:735)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1226)
	at org.eclipse.core.internal.resources.Synchronizer.flushSyncInfo(Synchronizer.java:85)
	at org.eclipse.core.internal.resources.Synchronizer.remove(Synchronizer.java:176)
	at org.eclipse.vcm.internal.core.PlatformVCMProvider.startup(PlatformVCMProvider.java:259)
	at org.eclipse.vcm.internal.core.base.VCMPlugin.startup(VCMPlugin.java:102)
	at org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:644)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:656)
	at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)
	at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)
	at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:609)
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))
	at java.lang.Class.getConstructor0(Native Method)
	at java.lang.Class.getConstructor(Class.java:959)
	at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:621)
	at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)
	at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)
	at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:79)
	at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:116)
	at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:96)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:102)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:99)
	at org.eclipse.ui.internal.registry.ViewDescriptor.createView(ViewDescriptor.java:43)
	at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:113)
	at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:93)
	at org.eclipse.ui.internal.Perspective$4.run(Perspective.java:661)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.ui.internal.Perspective.restoreView(Perspective.java:654)
	at org.eclipse.ui.internal.Perspective.restoreState(Perspective.java:572)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:1182)
	at org.eclipse.ui.internal.WorkbenchPage.&lt;init&gt;(WorkbenchPage.java:78)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:743)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:598)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:477)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:461)
	at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:518)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:393)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:618)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:119)
	at org.eclipse.core.launcher.Main.run(Main.java:401)
	at org.eclipse.core.launcher.Main.main(Main.java:274)
Log: Wed Aug 29 10:34:44 EDT 2001
4 org.eclipse.vcm.core 4 Internal error: CoreException in getSharing for P/ZZDJTest
org.eclipse.vcm.internal.core.VCMException: Type not supported
	at org.eclipse.vcm.internal.core.RepositoryLocation.getAdapterFactory(RepositoryLocation.java:45)
	at org.eclipse.vcm.internal.core.RepositoryLocation.from(RepositoryLocation.java:38)
	at org.eclipse.vcm.internal.core.PlatformVCMProvider.newRepositoryLocation(PlatformVCMProvider.java:153)
	at org.eclipse.vcm.internal.core.SharingManager.getSharing(SharingManager.java:438)
	at org.eclipse.vcm.internal.core.SharingManager$3.resourceChanged(SharingManager.java:478)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:126)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:141)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:42)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:64)
	at org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:108)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java(Compiled Code))
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1226)
	at org.eclipse.core.internal.resources.Synchronizer.flushSyncInfo(Synchronizer.java:85)
	at org.eclipse.core.internal.resources.Synchronizer.remove(Synchronizer.java:176)
	at org.eclipse.vcm.internal.core.PlatformVCMProvider.startup(PlatformVCMProvider.java:259)
	at org.eclipse.vcm.internal.core.base.VCMPlugin.startup(VCMPlugin.java:102)
	at org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:644)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:656)
	at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)
	at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)
	at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:609)
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))
	at java.lang.Class.getConstructor0(Native Method)
	at java.lang.Class.getConstructor(Class.java:959)
	at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:621)
	at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)
	at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)
	at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:79)
	at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:116)
	at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:96)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:102)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:99)
	at org.eclipse.ui.internal.registry.ViewDescriptor.createView(ViewDescriptor.java:43)
	at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:113)
	at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:93)
	at org.eclipse.ui.internal.Perspective$4.run(Perspective.java:661)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.ui.internal.Perspective.restoreView(Perspective.java:654)
	at org.eclipse.ui.internal.Perspective.restoreState(Perspective.java:572)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:1182)
	at org.eclipse.ui.internal.WorkbenchPage.&lt;init&gt;(WorkbenchPage.java:78)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:743)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:598)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:477)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:461)
	at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:518)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:393)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:618)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:119)
	at org.eclipse.core.launcher.Main.run(Main.java:401)
	at org.eclipse.core.launcher.Main.main(Main.java:274)
	1 org.eclipse.vcm.core 1 Type not supported
Log: Wed Aug 29 10:34:44 EDT 2001
2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-in: org.eclipse.core.resources.
org.eclipse.vcm.internal.core.AssertionFailedException: Assertion failed: An internal error has occurred, consult the error log for details.
	at org.eclipse.vcm.internal.core.Assert.fail(Assert.java:14)
	at org.eclipse.vcm.internal.core.Util.fatalError(Util.java:77)
	at org.eclipse.vcm.internal.core.SharingManager.getSharing(SharingManager.java:447)
	at org.eclipse.vcm.internal.core.SharingManager$3.resourceChanged(SharingManager.java:478)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:126)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:141)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:42)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:64)
	at org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:108)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java(Compiled Code))
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1226)
	at org.eclipse.core.internal.resources.Synchronizer.flushSyncInfo(Synchronizer.java:85)
	at org.eclipse.core.internal.resources.Synchronizer.remove(Synchronizer.java:176)
	at org.eclipse.vcm.internal.core.PlatformVCMProvider.startup(PlatformVCMProvider.java:259)
	at org.eclipse.vcm.internal.core.base.VCMPlugin.startup(VCMPlugin.java:102)
	at org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:644)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:656)
	at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)
	at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)
	at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.access$0(DelegatingURLClassLoader.java:609)
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassPrerequisites(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))
	at java.lang.Class.getConstructor0(Native Method)
	at java.lang.Class.getConstructor(Class.java:959)
	at org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:621)
	at org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:135)
	at org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:52)
	at org.eclipse.core.internal.plugins.PluginClassLoader.findClassParentsSelf(PluginClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java(Compiled Code))
	at java.lang.ClassLoader.loadClass(ClassLoader.java(Compiled Code))
	at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:79)
	at org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:116)
	at org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:96)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:102)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:98)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:99)
	at org.eclipse.ui.internal.registry.ViewDescriptor.createView(ViewDescriptor.java:43)
	at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:113)
	at org.eclipse.ui.internal.ViewFactory.createView(ViewFactory.java:93)
	at org.eclipse.ui.internal.Perspective$4.run(Perspective.java:661)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.ui.internal.Perspective.restoreView(Perspective.java:654)
	at org.eclipse.ui.internal.Perspective.restoreState(Perspective.java:572)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:1182)
	at org.eclipse.ui.internal.WorkbenchPage.&lt;init&gt;(WorkbenchPage.java:78)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:743)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:598)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:477)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:761)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:461)
	at org.eclipse.ui.internal.Workbench.openWindows(Workbench.java:518)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:393)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:618)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:119)
	at org.eclipse.core.launcher.Main.run(Main.java:401)
	at org.eclipse.core.launcher.Main.main(Main.java:274)

NOTES:

Jean-Michel (8/30/01 8:48:59 AM)
	The type not supported was either caused because the CVS plugin was not loaded or the sharing
	sync info was corrupted. Did happened once on DJ's machine, and we could not reproduce.
PRODUCT VERSION:
	JDK build 131 on Win98 FAT32


stale PR, different code base now</WithStack>
    <WithOutStack>I have started/shutdown my workspace a couple of times today. Then suddenly it
	took a while (about 2 minutes?) to startup. Here is the info from the log.

STACK: 

Log: Wed Aug 29 10:34:41 EDT 2001
4 org.eclipse.vcm.core 4 Internal error: CoreException in getSharing for P/ZZDJTest
	1 org.eclipse.vcm.core 1 Type not supported
Log: Wed Aug 29 10:34:42 EDT 2001
2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-in: org.eclipse.core.resources.
Log: Wed Aug 29 10:34:44 EDT 2001
4 org.eclipse.vcm.core 4 Internal error: CoreException in getSharing for P/ZZDJTest
	1 org.eclipse.vcm.core 1 Type not supported
Log: Wed Aug 29 10:34:44 EDT 2001
2 org.eclipse.core.resources 2 Problems occurred when invoking code from plug-in: org.eclipse.core.resources.


NOTES:

Jean-Michel (8/30/01 8:48:59 AM)
	The type not supported was either caused because the CVS plugin was not loaded or the sharing
	sync info was corrupted. Did happened once on DJ's machine, and we could not reproduce.
PRODUCT VERSION:
	JDK build 131 on Win98 FAT32


stale PR, different code base now</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="237" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[CVS UI] Major vs. minor version names (1GJJA1E)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>It would be nice to be able to distinguish between major and minor version numbers when displaying the existing project versions. 
I would imagine having a [+] in front of a major version would give me the minor ones available in case I care, like newsgroup browsers which
stack all related frames.

NOTES:

JEM (9/21/2001 12:06:43 PM)
	By what rules would you distinguish between major and minor segments of the version name?
	The only obvious convention (using period to distinguish) is invalid since period is not a valid character in project versions.
	Is underscore generally used to separate these components? I think this depends on usage patterns.

PM (9/24/2001 10:35:46 AM)
	When a version name is the prefix of another, then the latter is a minor version of this version name  (e.g. v_128, v_128_01_pm).

JEM (9/24/2001 9:36:56 AM)
	Yes, but by 'the prefix of another' do you mean separated by an underscore? Or any prefix at all? The
	problem with trying to assign meaning to major and minor version numbers is that (1) they are determined
	by convention and (2) valid version numbers are determined by the adapter; e.g. in CVS you can't have a
	period in the version number but you can have an underscore, so by convention underscore separates
	major and minor version numbers. But in another adapter, you may be allowed to use '.' but NOT '_'; in that
	case the convention would be different.

	After we re-engineer our API this may be easier to accomplish.
PRODUCT VERSION:
SDK 134


Future - no work to be done here in 2.0.
Reopening
There is no plan to address this item.</WithStack>
    <WithOutStack>It would be nice to be able to distinguish between major and minor version numbers when displaying the existing project versions. 
I would imagine having a [+] in front of a major version would give me the minor ones available in case I care, like newsgroup browsers which
stack all related frames.

NOTES:

JEM (9/21/2001 12:06:43 PM)
	By what rules would you distinguish between major and minor segments of the version name?
	The only obvious convention (using period to distinguish) is invalid since period is not a valid character in project versions.
	Is underscore generally used to separate these components? I think this depends on usage patterns.

PM (9/24/2001 10:35:46 AM)
	When a version name is the prefix of another, then the latter is a minor version of this version name  (e.g. v_128, v_128_01_pm).

JEM (9/24/2001 9:36:56 AM)
	Yes, but by 'the prefix of another' do you mean separated by an underscore? Or any prefix at all? The
	problem with trying to assign meaning to major and minor version numbers is that (1) they are determined
	by convention and (2) valid version numbers are determined by the adapter; e.g. in CVS you can't have a
	period in the version number but you can have an underscore, so by convention underscore separates
	major and minor version numbers. But in another adapter, you may be allowed to use '.' but NOT '_'; in that
	case the convention would be different.

	After we re-engineer our API this may be easier to accomplish.
PRODUCT VERSION:
SDK 134


Future - no work to be done here in 2.0.
Reopening
There is no plan to address this item.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="238" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Is it useful to show ALL version names of a project ? (1GJJA43)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Also I am not convinced that I need to know about all the possible versions of a given project, maybe the last ten versions are enough 
+ a way to get them all if I really care. Just thinking of reducing the traffic between the server and the IDE.

NOTES:
PRODUCT VERSION:
SDK 134


We get them all at once anyway.</WithStack>
    <WithOutStack>Also I am not convinced that I need to know about all the possible versions of a given project, maybe the last ten versions are enough 
+ a way to get them all if I really care. Just thinking of reducing the traffic between the server and the IDE.

NOTES:
PRODUCT VERSION:
SDK 134


We get them all at once anyway.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="239" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>"Show Version Info" settings not persisted (1GJL2J7)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Currently, VCM adds the "Show Version Info" titlebar menu option to each navigaor-type view.
The setting of this option must be performed on each navigator and the settings are not
persisted accross platform shutdown/startup. Perhaps we should add a global option to
the preferences page instead of or as well as menu option.

NOTES:
*** Bug 5037 has been marked as a duplicate of this bug. ***
Sadly, I don't think this is possible. This action is contributed to a view 
(that we don't own) in XML code, and its initial state CANNOT be determined by 
running some of our code, since the plugin is not even loaded at that point. We 
can only say 'true' or 'false' in the XML to determine its initial state, 
rather than determine it dynamically. Perhaps we need to change the default 
to 'true'. If people aren't using VCM, then they won't see any difference (it 
doesn't decorate non-shared projects). If they are using VCM, chances are this 
information is useful to them.
Based on user input, the default value has been changed to 'true'. Logged a 
separate PR in JDT requesting similar functionality for the Packages view.

Fixed in v206
Undoing change per KM's request, approval pending.
*** Bug 5628 has been marked as a duplicate of this bug. ***
Closing PR. The new 2.0 codebase uses the UI Decorators facility. The state of 
decorators is persisted between invocations of the workbench, providing the 
functionality you request. No changes will be made to the 1.0 codebase.</WithStack>
    <WithOutStack>Currently, VCM adds the "Show Version Info" titlebar menu option to each navigaor-type view.
The setting of this option must be performed on each navigator and the settings are not
persisted accross platform shutdown/startup. Perhaps we should add a global option to
the preferences page instead of or as well as menu option.

NOTES:
*** Bug 5037 has been marked as a duplicate of this bug. ***
Sadly, I don't think this is possible. This action is contributed to a view 
(that we don't own) in XML code, and its initial state CANNOT be determined by 
running some of our code, since the plugin is not even loaded at that point. We 
can only say 'true' or 'false' in the XML to determine its initial state, 
rather than determine it dynamically. Perhaps we need to change the default 
to 'true'. If people aren't using VCM, then they won't see any difference (it 
doesn't decorate non-shared projects). If they are using VCM, chances are this 
information is useful to them.
Based on user input, the default value has been changed to 'true'. Logged a 
separate PR in JDT requesting similar functionality for the Packages view.

Fixed in v206
Undoing change per KM's request, approval pending.
*** Bug 5628 has been marked as a duplicate of this bug. ***
Closing PR. The new 2.0 codebase uses the UI Decorators facility. The state of 
decorators is persisted between invocations of the workbench, providing the 
functionality you request. No changes will be made to the 1.0 codebase.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="240" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>API Issue: breadth vs. depth resource accessing (1GJL2O7)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>The VCM API supports the query and retrieval of resources in a breadth first style.
That is, to find a member of a project/directory, we must retrieve all members.
Furthermore, loading of resources must start at a root and include all children of
that root.

There is no API to directly support query and retrieval given a resource path unless
the parent resources already exist in the Eclipse workspace. This type of API would 
be helpfull in supporting the partial loads required for our initial method of loading
CVS modules. Without such an API, we need to make assumptions about how VCM would
create the parent project and folders when loading child resources (which is dangerous).
NOTES:
This no longer applies</WithStack>
    <WithOutStack>The VCM API supports the query and retrieval of resources in a breadth first style.
That is, to find a member of a project/directory, we must retrieve all members.
Furthermore, loading of resources must start at a root and include all children of
that root.

There is no API to directly support query and retrieval given a resource path unless
the parent resources already exist in the Eclipse workspace. This type of API would 
be helpfull in supporting the partial loads required for our initial method of loading
CVS modules. Without such an API, we need to make assumptions about how VCM would
create the parent project and folders when loading child resources (which is dangerous).
NOTES:
This no longer applies</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="241" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>LOST WORK: Replace from team stream should save history before replacing (1GJL5HD)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Catch up with your team stream</Line>
          <Line>2. Select a file, make a modification to this file and save it</Line>
          <Line>3. Replace this file from team stream</Line>
          <Line>4. Replace with local history</Line>
          <Line>Observe: Your change is not present in the local history</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1. Catch up with your team stream
	2. Select a file, make a modification to this file and save it
	3. Replace this file from team stream
	4. Replace with local history
	Observe: Your change is not present in the local history

	Replace from team stream should save the current version of the file to the local history
	before replacing it.

NOTES:

KM (9/6/2001 12:24:52 PM)
	Saving the file should put in local history.
	It should already be in there before you do "Replace from stream", and available for recovery,
	so as I understand this PR its not VCM.

	Moving to ITPUI to investigate whether saving always puts in local history.

EJP (9/10/2001 10:49:07 AM)
	Core does not keep a copy of the current file in the local history. Only when
	the file is saved a second time that the the first version goes to local history.

	When you replace the file with the current stream contents you have to
	call the core API delete or setContent passing keepHistory equas true.

KM (9/10/2001 2:14:02 PM)
From email with Eduardo

&gt;Do you mean that in Step 2 in the PR  that saving the file does not add it to local history?

	Yes. It saves the old version to the history not the one that you just saved.

&gt;This seems kind of odd if true. 

	I agree. I do not like the API either.

&gt;It means that you can't rely on the new contents being in history 

	True.

&gt;and must 
&gt;save prior to all destructive operations (eg. it means I must save to local history prior to deletion).  Yes?

	It means that you have to decide what you want to do in the "destructive operations".

	You have the  API delete(...) in IResource which will NOT keep the local history (I think it should be changed)
	and you have the API in IFile which receives the boolean parameter "keepHistory". The same for setContents(...)

Eduardo.
PRODUCT VERSION:
	134


See also bug 113.
Fixed.
testing workflow
Fixed again. We save local history.</WithStack>
    <WithOutStack>1. Catch up with your team stream
	2. Select a file, make a modification to this file and save it
	3. Replace this file from team stream
	4. Replace with local history
	Observe: Your change is not present in the local history

	Replace from team stream should save the current version of the file to the local history
	before replacing it.

NOTES:

KM (9/6/2001 12:24:52 PM)
	Saving the file should put in local history.
	It should already be in there before you do "Replace from stream", and available for recovery,
	so as I understand this PR its not VCM.

	Moving to ITPUI to investigate whether saving always puts in local history.

EJP (9/10/2001 10:49:07 AM)
	Core does not keep a copy of the current file in the local history. Only when
	the file is saved a second time that the the first version goes to local history.

	When you replace the file with the current stream contents you have to
	call the core API delete or setContent passing keepHistory equas true.

KM (9/10/2001 2:14:02 PM)
From email with Eduardo

&gt;Do you mean that in Step 2 in the PR  that saving the file does not add it to local history?

	Yes. It saves the old version to the history not the one that you just saved.

&gt;This seems kind of odd if true. 

	I agree. I do not like the API either.

&gt;It means that you can't rely on the new contents being in history 

	True.

&gt;and must 
&gt;save prior to all destructive operations (eg. it means I must save to local history prior to deletion).  Yes?

	It means that you have to decide what you want to do in the "destructive operations".

	You have the  API delete(...) in IResource which will NOT keep the local history (I think it should be changed)
	and you have the API in IFile which receives the boolean parameter "keepHistory". The same for setContents(...)

Eduardo.
PRODUCT VERSION:
	134


See also bug 113.
Fixed.
testing workflow
Fixed again. We save local history.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="242" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Progress] Rework:  revisit cancel (1GJN42Y)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>There were many places in the 0.9 where we wanted to pass in progress monitors to allow cancelling
but decided not to due to risk of code changes.

We need to revisit these, cancel doesn't work very well at all at present.

NOTES:

KM (9/6/2001 12:55:02 PM)
	According to Philippe Mulet:
		"The synchronize progress is the one which kills me."
PRODUCT VERSION:

0.9


finished a pass through</WithStack>
    <WithOutStack>There were many places in the 0.9 where we wanted to pass in progress monitors to allow cancelling
but decided not to due to risk of code changes.

We need to revisit these, cancel doesn't work very well at all at present.

NOTES:

KM (9/6/2001 12:55:02 PM)
	According to Philippe Mulet:
		"The synchronize progress is the one which kills me."
PRODUCT VERSION:

0.9


finished a pass through</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="243" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>2.0 rework: No senders of IRepository.isWritable() (1GJYH82)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>There are no senders of IRepository.isWritable(), nor of isVersionEnabled().

NOTES:
PRODUCT VERSION:

135


Its outa there</WithStack>
    <WithOutStack>There are no senders of IRepository.isWritable(), nor of isVersionEnabled().

NOTES:
PRODUCT VERSION:

135


Its outa there</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="244" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>False conflicts when resources copied between streams (1GK7IBO)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="8">
        <Lines>
          <Line>1)  Philippe releases to HEAD</Line>
          <Line>2)  once he has  a stable version he versions and copies it to</Line>
          <Line>the STABLE stream.</Line>
          <Line>3) Somone from ZRH catches with the STABLE stream</Line>
          <Line>-&gt;there are many changes and catching up</Line>
          <Line>is slow. Many of them are false positives.</Line>
          <Line>Looking at the content changes with compare</Line>
          <Line>shows that there are no content changes.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="16">
        <Lines>
          <Line>1. User A works on his project P1 in HEAD.</Line>
          <Line />
          <Line>2. User B adds P1 from STABLE to his workspace.</Line>
          <Line />
          <Line>3. User A performs his usual development releasing and catching-up to P1 in</Line>
          <Line>HEAD.</Line>
          <Line />
          <Line>4. User A feels that P1 is stable, he ensures that all changes are released to</Line>
          <Line>HEAD, then versions his workspace then copies the version to the STABLE stream</Line>
          <Line>(a.k.a. Copy Version to Stream).</Line>
          <Line />
          <Line>5. User B catches-up to P1 in STABLE and will see the changes made since he</Line>
          <Line>last caught-up (basically the version that User A versioned from his</Line>
          <Line>workspace).</Line>
          <Line />
          <Line>6. User A continues working away in HEAD...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Email from Philippe, additional email from Erich:

Both versions were made using in HEAD. v_0_135... was made by versioning from 
teamstream, and v_200 was made by versioning from workspace.
Should this make any difference ? Is the teamstream were a project is released 
affecting the compare behavior ?



	Erich Gamma
	09/17/2001 01:28 PM
		 
		 To: Kevin McGuire/OTT/OTI@OTI
		 cc: Philippe Mulet/SNZ/OTI@OTI
		 Subject: False Positives when catching up with STABLE

Kevin,
Philippe's and my team are now working with a STABLE team stream.
The complaint we are now getting is that catching up with STABLE is
slow. It feels like a full replace with version operation.

Here is what we are doing:
1)  Philippe releases to HEAD
2)  once he has  a stable version he versions and copies it to
 the STABLE stream.
3) Somone from ZRH catches with the STABLE stream
 -&gt;there are many changes and catching up
 is slow. Many of them are false positives.
 Looking at the content changes with compare
 shows that there are no content changes.

Can you explain what is going on and why we are getting all these
false positives?

Some more experiments.
When I do a replace with stream contents followed by a catch-up
then I'm getting the correct result, i.e., no changes.

--erich



NOTES:

Jean-Michel (9/18/01 9:08:10 AM)

I understand the reason why they want this but the actual steps they take may 
be wrong. 

&gt; So, since the project is being copied to another stream in the same repo, we 
should be able to just release those resources into that stream 
How do they do this? There should never be a release to the STABLE stream. How 
with Eclipse can Philippe release to HEAD then release again to STABLE? I'm 
pretty sure we don't support that. The only way to move changes from one stream 
to another is to merge. 

KM&gt;They version the project in HEAD, then "Copy Version to Stream", copying 
that version to STABLE. This avoids trying to switch the sharing of the project 
to the other stream (which we don't handle well). 

Assume user A and B are accessing P1 in the same repo. 

1. User A works on his project P1 in HEAD. 

2. User B adds P1 from STABLE to his workspace. 

3. User A performs his usual development releasing and catching-up to P1 in 
HEAD. 

4. User A feels that P1 is stable, he ensures that all changes are released to 
HEAD, then versions his workspace then copies the version to the STABLE stream 
(a.k.a. Copy Version to Stream). 

5. User B catches-up to P1 in STABLE and will see the changes made since he 
last caught-up (basically the version that User A versioned from his 
workspace). 

6. User A continues working away in HEAD... 

This scenario works, assuming same repo, with Eclipse 1.0 without source 
compare functionality. 

KM&gt;&gt;Those are the steps I believe they are following. I've confirmed they are 
in the same repository. Are we sure we aren't growing extra revisions on the 
Copy Version to Stream?
PRODUCT VERSION:

1.0


Split/merge totally reworked, workflow different now.</WithStack>
    <WithOutStack>Email from Philippe, additional email from Erich:

Both versions were made using in HEAD. v_0_135... was made by versioning from 
teamstream, and v_200 was made by versioning from workspace.
Should this make any difference ? Is the teamstream were a project is released 
affecting the compare behavior ?



	Erich Gamma
	09/17/2001 01:28 PM
		 
		 To: Kevin McGuire/OTT/OTI@OTI
		 cc: Philippe Mulet/SNZ/OTI@OTI
		 Subject: False Positives when catching up with STABLE

Kevin,
Philippe's and my team are now working with a STABLE team stream.
The complaint we are now getting is that catching up with STABLE is
slow. It feels like a full replace with version operation.

Here is what we are doing:
1)  Philippe releases to HEAD
2)  once he has  a stable version he versions and copies it to
 the STABLE stream.
3) Somone from ZRH catches with the STABLE stream
 -&gt;there are many changes and catching up
 is slow. Many of them are false positives.
 Looking at the content changes with compare
 shows that there are no content changes.

Can you explain what is going on and why we are getting all these
false positives?

Some more experiments.
When I do a replace with stream contents followed by a catch-up
then I'm getting the correct result, i.e., no changes.

--erich



NOTES:

Jean-Michel (9/18/01 9:08:10 AM)

I understand the reason why they want this but the actual steps they take may 
be wrong. 

&gt; So, since the project is being copied to another stream in the same repo, we 
should be able to just release those resources into that stream 
How do they do this? There should never be a release to the STABLE stream. How 
with Eclipse can Philippe release to HEAD then release again to STABLE? I'm 
pretty sure we don't support that. The only way to move changes from one stream 
to another is to merge. 

KM&gt;They version the project in HEAD, then "Copy Version to Stream", copying 
that version to STABLE. This avoids trying to switch the sharing of the project 
to the other stream (which we don't handle well). 

Assume user A and B are accessing P1 in the same repo. 

1. User A works on his project P1 in HEAD. 

2. User B adds P1 from STABLE to his workspace. 

3. User A performs his usual development releasing and catching-up to P1 in 
HEAD. 

4. User A feels that P1 is stable, he ensures that all changes are released to 
HEAD, then versions his workspace then copies the version to the STABLE stream 
(a.k.a. Copy Version to Stream). 

5. User B catches-up to P1 in STABLE and will see the changes made since he 
last caught-up (basically the version that User A versioned from his 
workspace). 

6. User A continues working away in HEAD... 

This scenario works, assuming same repo, with Eclipse 1.0 without source 
compare functionality. 

KM&gt;&gt;Those are the steps I believe they are following. I've confirmed they are 
in the same repository. Are we sure we aren't growing extra revisions on the 
Copy Version to Stream?
PRODUCT VERSION:

1.0


Split/merge totally reworked, workflow different now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="245" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>README: CVS limitations with NL (1GJUVLA)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- CVS cannot handle stream names that contain MB characters</Line>
          <Line>- CVS cannot parse the history file (e.g. browse versions) when the project</Line>
          <Line>name contains MB characters.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>- CVS cannot handle stream names that contain MB characters
- CVS cannot parse the history file (e.g. browse versions) when the project
name contains MB characters.


NOTES:

JEM (9/11/2001 2:58:54 PM)
	Added to Readme.
Fixed.
[Fixed in v205]
PRODUCT VERSION:
0.135</WithStack>
    <WithOutStack>- CVS cannot handle stream names that contain MB characters
- CVS cannot parse the history file (e.g. browse versions) when the project
name contains MB characters.


NOTES:

JEM (9/11/2001 2:58:54 PM)
	Added to Readme.
Fixed.
[Fixed in v205]
PRODUCT VERSION:
0.135</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="246" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Problems merging streams (1GJV7C4)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I created a new stream in the repository, made some changes,
	(including deleting/renaming some java source folders) and then
	when I tried to merge with HEAD, I got errors:

Log: Mon Sep 10 21:13:17 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management does not exist.
Log: Mon Sep 10 21:13:25 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management does not exist.
Log: Mon Sep 10 21:15:39 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management/org does not exist.
Log: Mon Sep 10 21:17:35 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management/org does not exist.
Log: Mon Sep 10 21:18:00 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management/org/eclipse/core does not exist.
Log: Mon Sep 10 21:19:12 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management/org/eclipse/core/examples/site/ui/old does not exist.
Log: Mon Sep 10 21:19:50 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management/org/eclipse/core/examples/site/ui/old/SiteManagerAction.java does not exist.

	Note that these were the directories under the source folder that I deleted.

NOTES:
PRODUCT VERSION:
	0.135 on Win98 FAT32


Move/delete related that can be closed when related work completed.
Assigning PR as test case.
This no longer applies as Team 2.0 replaced VCM 1.0</WithStack>
    <WithOutStack>I created a new stream in the repository, made some changes,
	(including deleting/renaming some java source folders) and then
	when I tried to merge with HEAD, I got errors:

Log: Mon Sep 10 21:13:17 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management does not exist.
Log: Mon Sep 10 21:13:25 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management does not exist.
Log: Mon Sep 10 21:15:39 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management/org does not exist.
Log: Mon Sep 10 21:17:35 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management/org does not exist.
Log: Mon Sep 10 21:18:00 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management/org/eclipse/core does not exist.
Log: Mon Sep 10 21:19:12 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management/org/eclipse/core/examples/site/ui/old does not exist.
Log: Mon Sep 10 21:19:50 EDT 2001
4 org.eclipse.core.resources 368 Resource /org.eclipse.examples.site/Eclipse Examples Site Management/org/eclipse/core/examples/site/ui/old/SiteManagerAction.java does not exist.

	Note that these were the directories under the source folder that I deleted.

NOTES:
PRODUCT VERSION:
	0.135 on Win98 FAT32


Move/delete related that can be closed when related work completed.
Assigning PR as test case.
This no longer applies as Team 2.0 replaced VCM 1.0</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="247" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="85" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Compare with Stream Contents does not prompt for save changes. (1GJW3AI)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="6">
        <Lines>
          <Line>1) Create a file foo.txt with content.</Line>
          <Line>2) Release it to the stream</Line>
          <Line>3) Edit foo.txt</Line>
          <Line>4) Save and compare with stream</Line>
          <Line>5) Copy over stream contents</Line>
          <Line>6) Close the compare browser - no prompt for changes.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="9">
        <Lines>
          <Line>1. Editor says changes exist, do you want to save? (y/n/cancel)</Line>
          <Line>2. User says "yes"</Line>
          <Line>3. CompareEditor.doSave() first sends setInput(null) to each pane, then</Line>
          <Line>sends save() to the CompareEditorInput.</Line>
          <Line>BUT</Line>
          <Line>setInput(null) sent to each pane may cause additional prompting</Line>
          <Line>(changes exist, do you want to save? (y/n/cancel))</Line>
          <Line>because, in ContentMergeViewer.inputChanged(), if fConfirmSave is true,</Line>
          <Line>the pane prompts for saving changes.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If you copy over text using the Compare Browser when doing a Compare with 
Stream Contents
you do not get prompted to save changed when you close the browser.

STEPS
	1) Create a file foo.txt with content.
	2) Release it to the stream
	3) Edit foo.txt
	4) Save and compare with stream
	5) Copy over stream contents
	6) Close the compare browser - no prompt for changes.


NOTES:

JEM (9/12/2001 11:38:47 AM)
	Possibly related to
		1GFMRMH: ITPVCM:ALL - Project compare: edited files aren't 
marked

JEM (9/12/2001 2:36:54 PM)
	Impossible to do properly given the current compare framework. If we 
get rid of our implementation
	of VCMCompareEditorInput.isSaveNeeded(), then the when we close the 
editor we get the following behaviour:

	1. Editor says changes exist, do you want to save? (y/n/cancel)
	2. User says "yes"
	3. CompareEditor.doSave() first sends setInput(null) to each pane, then 
sends save() to the CompareEditorInput.
	BUT
	setInput(null) sent to each pane may cause additional prompting 
(changes exist, do you want to save? (y/n/cancel))
	because, in ContentMergeViewer.inputChanged(), if fConfirmSave is true, 
the pane prompts for saving changes.

	We have no control over fConfirmSave, as it is a global setting. 
(Anyway, even if we did, we wouldn't turn it off
	because it is needed for the case that the user clicks on a different 
item in the tree).

	Why does this not happen in the normal (non-VCM) compare case? Because 
we enable the save actions in
	our editors, and in ContentMergeViewer.inputChanged(), the prompting 
only happens if the save actions are
	enabled.

	This code path needs to be fixed before we can prompt in this way.

JEM (9/12/2001 3:31:02 PM)
	Waiting on Compare PR:

	1GJYGAX: ITPJUI:WIN2000 - Compare: Save code path problematic
PRODUCT VERSION: build 135





*** This bug has been marked as a duplicate of 85 ***</WithStack>
    <WithOutStack>If you copy over text using the Compare Browser when doing a Compare with 
Stream Contents
you do not get prompted to save changed when you close the browser.

STEPS
	1) Create a file foo.txt with content.
	2) Release it to the stream
	3) Edit foo.txt
	4) Save and compare with stream
	5) Copy over stream contents
	6) Close the compare browser - no prompt for changes.


NOTES:

JEM (9/12/2001 11:38:47 AM)
	Possibly related to
		1GFMRMH: ITPVCM:ALL - Project compare: edited files aren't 
marked

JEM (9/12/2001 2:36:54 PM)
	Impossible to do properly given the current compare framework. If we 
get rid of our implementation
	of VCMCompareEditorInput.isSaveNeeded(), then the when we close the 
editor we get the following behaviour:

	1. Editor says changes exist, do you want to save? (y/n/cancel)
	2. User says "yes"
	3. CompareEditor.doSave() first sends setInput(null) to each pane, then 
sends save() to the CompareEditorInput.
	BUT
	setInput(null) sent to each pane may cause additional prompting 
(changes exist, do you want to save? (y/n/cancel))
	because, in ContentMergeViewer.inputChanged(), if fConfirmSave is true, 
the pane prompts for saving changes.

	We have no control over fConfirmSave, as it is a global setting. 
(Anyway, even if we did, we wouldn't turn it off
	because it is needed for the case that the user clicks on a different 
item in the tree).

	Why does this not happen in the normal (non-VCM) compare case? Because 
we enable the save actions in
	our editors, and in ContentMergeViewer.inputChanged(), the prompting 
only happens if the save actions are
	enabled.

	This code path needs to be fixed before we can prompt in this way.

JEM (9/12/2001 3:31:02 PM)
	Waiting on Compare PR:

	1GJYGAX: ITPJUI:WIN2000 - Compare: Save code path problematic
PRODUCT VERSION: build 135





*** This bug has been marked as a duplicate of 85 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="248" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Need better workflow for dealing with backing out deletions (1GJWCT4)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>To avoid unintended backing out of deletions, both incomming and outgoing deletions 
are treated as conflicts. This can be a bit confusing. We need to look at this.

NOTES:
PRODUCT VERSION:

Eclipse 2.0


(deletion related, to be closed)
This does not apply to Team 2.0</WithStack>
    <WithOutStack>To avoid unintended backing out of deletions, both incomming and outgoing deletions 
are treated as conflicts. This can be a bit confusing. We need to look at this.

NOTES:
PRODUCT VERSION:

Eclipse 2.0


(deletion related, to be closed)
This does not apply to Team 2.0</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="249" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[CVS UI] accessibility issues (1GK7A0R)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>These are some notes JM and I made with regard to VCM accessibility.  See also
	1GK79UB: ITPUI:WINNT - Compare FW accessibility issues

Synchronize view issues:
	* The tree nodes in the synchronize view need to expose their state (i.e., incoming, 
	   outgoing, or conflicting), and their type (file or folder).  Currently this information is 
	   only contained in the icon.  Screen readers don't know how to decode this information.
	* Hotkeys for traversing to next and previous difference are not documented
	* When traversing through changes, an audible beep indicates end of file... 	
		may be a hearing-impaired issue.

File compare/replace dialog:
	* spontaneous focus switching
	* no access to toolbar
	* button actions don't have hotkeys
	* scrolling through version list with keyboard is painful, because for each version 
		selected it invokes a server round-trip.

Merge wizard:
	* no widget has initial focus, can't do anything without first clicking in dialog (same 
		as import/export wizards).


NOTES:
PRODUCT VERSION:

R0.9


We should investigate if this is still an issue
All of these have been addressed. Sync view can show change type in decorator,
navigation is hooked to standard next/previous commands. Keyboard support is
greatly improved.

If there are additional problems, we should enter separate PRs.

This is a really old bug, I had to clean some dust off it before reading...</WithStack>
    <WithOutStack>These are some notes JM and I made with regard to VCM accessibility.  See also
	1GK79UB: ITPUI:WINNT - Compare FW accessibility issues

Synchronize view issues:
	* The tree nodes in the synchronize view need to expose their state (i.e., incoming, 
	   outgoing, or conflicting), and their type (file or folder).  Currently this information is 
	   only contained in the icon.  Screen readers don't know how to decode this information.
	* Hotkeys for traversing to next and previous difference are not documented
	* When traversing through changes, an audible beep indicates end of file... 	
		may be a hearing-impaired issue.

File compare/replace dialog:
	* spontaneous focus switching
	* no access to toolbar
	* button actions don't have hotkeys
	* scrolling through version list with keyboard is painful, because for each version 
		selected it invokes a server round-trip.

Merge wizard:
	* no widget has initial focus, can't do anything without first clicking in dialog (same 
		as import/export wizards).


NOTES:
PRODUCT VERSION:

R0.9


We should investigate if this is still an issue
All of these have been addressed. Sync view can show change type in decorator,
navigation is hooked to standard next/previous commands. Keyboard support is
greatly improved.

If there are additional problems, we should enter separate PRs.

This is a really old bug, I had to clean some dust off it before reading...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="250" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CVS: ext connection method support (1GJYEMT)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>We need to support 'ext' connection method for CVS. This will allow any external
transport clients for handling authentication and connection with any tool the user
want's to use.

NOTES:

Jean-Michel (9/13/01 12:44:41 PM)
	Connection method has been created as seperate plugin called org.eclipse.vcm.core.cvs.ext. We
	are currently discussing how to allow configurability of the connection method. This currently is
	not supported and forces parameters to currently be hard coded and configured within the
	plugin xml file.

	Our goal is to allow connection method configuration on a connection basis.
EXT connection method is supported, however configuration is done via the 
plugin.xml. Ideally, we would like to allow configuration on a per connection 
level, however until 2.0 API, we don't want to make the required changes to the 
1.0 API to allow this kind of connection type specific configuration.
PRODUCT VERSION:
0.135


Fixed in v206</WithStack>
    <WithOutStack>We need to support 'ext' connection method for CVS. This will allow any external
transport clients for handling authentication and connection with any tool the user
want's to use.

NOTES:

Jean-Michel (9/13/01 12:44:41 PM)
	Connection method has been created as seperate plugin called org.eclipse.vcm.core.cvs.ext. We
	are currently discussing how to allow configurability of the connection method. This currently is
	not supported and forces parameters to currently be hard coded and configured within the
	plugin xml file.

	Our goal is to allow connection method configuration on a connection basis.
EXT connection method is supported, however configuration is done via the 
plugin.xml. Ideally, we would like to allow configuration on a per connection 
level, however until 2.0 API, we don't want to make the required changes to the 
1.0 API to allow this kind of connection type specific configuration.
PRODUCT VERSION:
0.135


Fixed in v206</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="251" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CVS: auto-discovery of streams and versions (1GK20DG)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>It would be great to allow users to discover version names and streams from a CVS repo. Currently
you have to browse history on a file and manually create the stream and version definitions. This
is very error prone.

NOTES:

Jean-Michel (9/14/01 1:35:26 PM)
	Fixed. Added a menu to files in the repo view to auto create stream and versions based
	on the tags in the file.
fixed and submitted to 2.0 builds
[Fixed in v205]
PRODUCT VERSION:
0.125</WithStack>
    <WithOutStack>It would be great to allow users to discover version names and streams from a CVS repo. Currently
you have to browse history on a file and manually create the stream and version definitions. This
is very error prone.

NOTES:

Jean-Michel (9/14/01 1:35:26 PM)
	Fixed. Added a menu to files in the repo view to auto create stream and versions based
	on the tags in the file.
fixed and submitted to 2.0 builds
[Fixed in v205]
PRODUCT VERSION:
0.125</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="252" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="21577" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>CVS watch/edit in 2.0? (1GK25BJ)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Do we want to support CVS watch/edit in 2.0?

NOTES:
PRODUCT VERSION:

1.0


not for 2.0
Reopening to mark as duplicate


*** This bug has been marked as a duplicate of 21577 ***</WithStack>
    <WithOutStack>Do we want to support CVS watch/edit in 2.0?

NOTES:
PRODUCT VERSION:

1.0


not for 2.0
Reopening to mark as duplicate


*** This bug has been marked as a duplicate of 21577 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="253" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Would like "Show in Resource History" in Merge and compare windows (1GK7NEB)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331285304">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason>org.eclipse.vcm.internal.ui.ResourceEditionNode</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.vcm.internal.ui.VCMDiffTreeViewer$HistoryAction.selectionChanged(VCMDiffTreeViewer.java:55)</Frame>
          <Frame depth="1">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:147)</Frame>
          <Frame depth="2">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:907)</Frame>
          <Frame depth="3">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:687)</Frame>
          <Frame depth="4">org.eclipse.compare.structuremergeviewer.DiffTreeViewer.internalSetSelection(DiffTreeViewer.java:581)</Frame>
          <Frame depth="5">org.eclipse.compare.structuremergeviewer.DiffTreeViewer.internalNavigate(DiffTreeViewer.java:488)</Frame>
          <Frame depth="6">org.eclipse.compare.structuremergeviewer.DiffTreeViewer.navigate(DiffTreeViewer.java:443)</Frame>
          <Frame depth="7">org.eclipse.compare.structuremergeviewer.DiffTreeViewer.inputChanged(DiffTreeViewer.java:318)</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:234)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:659)</Frame>
          <Frame depth="10">org.eclipse.compare.internal.CompareViewerSwitchingPane.setInput(CompareViewerSwitchingPane.java:252)</Frame>
          <Frame depth="11">org.eclipse.compare.CompareEditorInput.createContents(CompareEditorInput.java:443)</Frame>
          <Frame depth="12">org.eclipse.compare.internal.CompareEditor.createPartControl(CompareEditor.java:84)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.PartPane$2.run(PartPane.java:53)</Frame>
          <Frame depth="14">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:812)</Frame>
          <Frame depth="15">org.eclipse.core.runtime.Platform.run(Platform.java:395)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:51)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.PartPane.createControl(PartPane.java:93)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.EditorWorkbook.createPage(EditorWorkbook.java:183)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.EditorWorkbook.add(EditorWorkbook.java:75)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.EditorArea.addEditor(EditorArea.java:43)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.EditorPresentation.openEditor(EditorPresentation.java:292)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:451)</Frame>
          <Frame depth="23">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:437)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:490)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:362)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:252)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1023)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:991)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:983)</Frame>
          <Frame depth="31">org.eclipse.compare.internal.CompareUIPlugin.openCompareEditor(CompareUIPlugin.java:266)</Frame>
          <Frame depth="32">org.eclipse.compare.CompareUI.openCompareEditor(CompareUI.java:73)</Frame>
          <Frame depth="33">org.eclipse.vcm.internal.ui.actions.CompareEditionsAction.run(CompareEditionsAction.java:31)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.PluginAction.run(PluginAction.java:125)</Frame>
          <Frame depth="35">org.eclipse.jface.action.Action.runWithEvent(Action.java:451)</Frame>
          <Frame depth="36">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="37">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="38">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="39">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:645)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1359)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1160)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:675)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.Workbench.run(Workbench.java:658)</Frame>
          <Frame depth="46">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:820)</Frame>
          <Frame depth="47">org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:151)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:433)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:306)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I would like to be able to show the history of a resource that I am working on in the merge or
compare windows.

NOTES:
Implemented and released. Will be in &gt; 204
[Fixed in v205]
PRODUCT VERSION:

135


2 org.eclipse.ui 2 Problems occurred when invoking code from plug-in: 
org.eclipse.ui.
java.lang.ClassCastException: org.eclipse.vcm.internal.ui.ResourceEditionNode
	at 
org.eclipse.vcm.internal.ui.VCMDiffTreeViewer$HistoryAction.selectionChanged
(VCMDiffTreeViewer.java:55)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:147)
	at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:907)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:687)
	at 
org.eclipse.compare.structuremergeviewer.DiffTreeViewer.internalSetSelection
(DiffTreeViewer.java:581)
	at 
org.eclipse.compare.structuremergeviewer.DiffTreeViewer.internalNavigate
(DiffTreeViewer.java:488)
	at org.eclipse.compare.structuremergeviewer.DiffTreeViewer.navigate
(DiffTreeViewer.java:443)
	at org.eclipse.compare.structuremergeviewer.DiffTreeViewer.inputChanged
(DiffTreeViewer.java:318)
	at org.eclipse.jface.viewers.ContentViewer.setInput
(ContentViewer.java:234)
	at org.eclipse.jface.viewers.StructuredViewer.setInput
(StructuredViewer.java:659)
	at org.eclipse.compare.internal.CompareViewerSwitchingPane.setInput
(CompareViewerSwitchingPane.java:252)
	at org.eclipse.compare.CompareEditorInput.createContents
(CompareEditorInput.java:443)
	at org.eclipse.compare.internal.CompareEditor.createPartControl
(CompareEditor.java:84)
	at org.eclipse.ui.internal.PartPane$2.run(PartPane.java:53)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:812)
	at org.eclipse.core.runtime.Platform.run(Platform.java:395)
	at org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:51)
	at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:93)
	at org.eclipse.ui.internal.EditorWorkbook.createPage
(EditorWorkbook.java:183)
	at org.eclipse.ui.internal.EditorWorkbook.add(EditorWorkbook.java:75)
	at org.eclipse.ui.internal.EditorArea.addEditor(EditorArea.java:43)
	at org.eclipse.ui.internal.EditorPresentation.openEditor
(EditorPresentation.java:292)
	at org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:451)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:56)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor
(EditorManager.java:437)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor
(EditorManager.java:490)
	at org.eclipse.ui.internal.EditorManager.openEditor
(EditorManager.java:362)
	at org.eclipse.ui.internal.EditorManager.openEditor
(EditorManager.java:252)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1023)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:991)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:983)
	at org.eclipse.compare.internal.CompareUIPlugin.openCompareEditor
(CompareUIPlugin.java:266)
	at org.eclipse.compare.CompareUI.openCompareEditor(CompareUI.java:73)
	at org.eclipse.vcm.internal.ui.actions.CompareEditionsAction.run
(CompareEditionsAction.java:31)
	at org.eclipse.ui.internal.PluginAction.run(PluginAction.java:125)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:451)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:645)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1359)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1160)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:675)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:658)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:820)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:433)
	at org.eclipse.core.launcher.Main.main(Main.java:306)

Walkback fixed.
Fixed in v207</WithStack>
    <WithOutStack>I would like to be able to show the history of a resource that I am working on in the merge or
compare windows.

NOTES:
Implemented and released. Will be in &gt; 204
[Fixed in v205]
PRODUCT VERSION:

135


2 org.eclipse.ui 2 Problems occurred when invoking code from plug-in: 
org.eclipse.ui.


Walkback fixed.
Fixed in v207</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="254" />
    <CreationDate amount="2001-10-10 21:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>vcmSniff.bat should be in another project (1GK7VPL)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>NOTES:
 
PRODUCT VERSION:

135


Remaining issues resolved, closing PR.
Fixed.
Fixed in v207</WithStack>
    <WithOutStack>NOTES:
 
PRODUCT VERSION:

135


Remaining issues resolved, closing PR.
Fixed.
Fixed in v207</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="255" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Double prompt for release comments. (1GKCUF8)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Perhaps this is the way that you want it to happen but I thought it strange.

	I selected multiple projects which reside across 2 different repositories.
	When I chose "release" and entered my comment, I was prompted to enter
	the comment again. 

	A guess would be that it does it once per repository.

NOTES:

JEM (9/20/2001 11:20:50 AM)
	Prompting for release comments is the responsibility of the repository-specific UI.
	Not all repository types will require or even allow release comments.
	I think that this behaviour would be very difficult to change; besides, it does
	display the repository for each dialog, right? I.e.
	"Provide a comment for releasing to repository dj@cvslnx:/foo"
PRODUCT VERSION:
	JDK 131


fixed in Team 2.0</WithStack>
    <WithOutStack>Perhaps this is the way that you want it to happen but I thought it strange.

	I selected multiple projects which reside across 2 different repositories.
	When I chose "release" and entered my comment, I was prompted to enter
	the comment again. 

	A guess would be that it does it once per repository.

NOTES:

JEM (9/20/2001 11:20:50 AM)
	Prompting for release comments is the responsibility of the repository-specific UI.
	Not all repository types will require or even allow release comments.
	I think that this behaviour would be very difficult to change; besides, it does
	display the repository for each dialog, right? I.e.
	"Provide a comment for releasing to repository dj@cvslnx:/foo"
PRODUCT VERSION:
	JDK 131


fixed in Team 2.0</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="256" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="71" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Sync should indicate stream (1GKD1NC)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When working with multiple streams, it's easy to lose track of which one you're working with.
Showing version labels helps, but this is not always turned on (and defaults to off).

The synch view should have a clear indication of which stream it is sync'ing with.

NOTES:

NE (09/20/01 12:36:44 PM)
	Note: We missed some changes going into build 136 because one of us had inadvertently 
	released to the wrong stream.  This was before we had even split-streamed into 1.0 and 2.0 (it was a personal stream).

JEM (9/20/2001 2:07:21 PM)
	The sync view can be sync'ing with multiple streams and even multiple repositories at the same
	time. Perhaps the sync view needs a 'show version info' that is ALWAYS on. Then you would always see
	the stream on the projects.
PRODUCT VERSION:
135




*** This bug has been marked as a duplicate of 71 ***</WithStack>
    <WithOutStack>When working with multiple streams, it's easy to lose track of which one you're working with.
Showing version labels helps, but this is not always turned on (and defaults to off).

The synch view should have a clear indication of which stream it is sync'ing with.

NOTES:

NE (09/20/01 12:36:44 PM)
	Note: We missed some changes going into build 136 because one of us had inadvertently 
	released to the wrong stream.  This was before we had even split-streamed into 1.0 and 2.0 (it was a personal stream).

JEM (9/20/2001 2:07:21 PM)
	The sync view can be sync'ing with multiple streams and even multiple repositories at the same
	time. Perhaps the sync view needs a 'show version info' that is ALWAYS on. Then you would always see
	the stream on the projects.
PRODUCT VERSION:
135




*** This bug has been marked as a duplicate of 71 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="257" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Wishlist: hoverhelp on resource in sync view shows release comment (1GKDEK6)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1. commit with a multiline comment</Line>
          <Line>2. in other workspace, sync to get incomming</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Just a wishlist thought.
	It would be great if in the sync view, if you hover over an incoming resource change,
	it would display the comment of the incoming version as hoverhelp.

NOTES:
PRODUCT VERSION:

	200+


Implemented.
It appears we are doing it twice:

1. commit with a multiline comment
2. in other workspace, sync to get incomming

I am getting the hover help twice (ie. you can get two yellow boxes of text 
appearing at the same time).  What's curious is that the second hover help 
doesn't handle multiline, suggesting we are getting the hover help from two 
different places in the code.

That's an SWT bug. Veronika has logged a bug (can't find it now), I will sync
with her to see if they are fixing it for M5.
Closing.
*** Bug 16050 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Just a wishlist thought.
	It would be great if in the sync view, if you hover over an incoming resource change,
	it would display the comment of the incoming version as hoverhelp.

NOTES:
PRODUCT VERSION:

	200+


Implemented.
It appears we are doing it twice:

1. commit with a multiline comment
2. in other workspace, sync to get incomming

I am getting the hover help twice (ie. you can get two yellow boxes of text 
appearing at the same time).  What's curious is that the second hover help 
doesn't handle multiline, suggesting we are getting the hover help from two 
different places in the code.

That's an SWT bug. Veronika has logged a bug (can't find it now), I will sync
with her to see if they are fixing it for M5.
Closing.
*** Bug 16050 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="258" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Saving in the compare versions editor doesn't work (1GL109Y)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>NOTES:
Duplicate.</WithStack>
    <WithOutStack>NOTES:
Duplicate.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="259" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Can't copy change from right to left in compare editor (1GL10AA)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>NOTES:
Obsolete, closing.</WithStack>
    <WithOutStack>NOTES:
Obsolete, closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="260" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[CVS Sync View] Synchronize view "Ignore Whitespace" should be persistent (1GKDHED)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>See 1GKDH4V: ITPUI:ALL - View settings should be able to be persistent

NOTES:
Just to clarify, do you wish persistent properties on a per-view basis, or one 
persisted state? If you change the value on one navigator and then open 
another, should it have the new value? What about multiple types of views that 
share the same property (e.g. Navigator and Packages both share Show Version 
Info). If you turn it on in one, then open an instance of the other, should it 
have the same state as the first?
Global and persistent please, if I had my way &lt;g&gt;.
There is another PR opened to make "Show Version Info" persistent.
1GFB33B: ITPJUI:WINNT - 'show version info' should be persistent

Here is point #5 of my "top ten" that I sent to JW in email:
5 - View settings should be *persistent*. For example, "Show Version Info" 
should be persistent - and global, too! We have to turn on "Show Version Info" 
in every view, every time we launch Eclipse. Persistence is the really 
important point here. If it is not made global, then make it a *toolbar button* 
in every relevant view: Navigator, Packages, and Hierarchy (also in the "useful 
view", which we need to add &lt;g&gt;). In fact, "Show Version Info" should even be 
ON by default if a view is in the Repository perspective. Many - I would say 
most - other view settings should also persist. For example, "Ignore 
Whitespace" in the Synchronize view. It causes a re-sync, so if the user just 
restarted Eclipse, then it actually becomes an expensive operation to turn it 
on again. See 1GKDH4V, 1GFB33B, 1GKDHED, 1GKDHHZ.

PRODUCT VERSION:
	0.136


post 2.0
Reopening
This is annoying since I have to reset it every time I sync with the repository.
Time permitting we'll look at for 2.1.
Fixed with new sync view. Both the compare editor settings and the sync view
setting are persisted.</WithStack>
    <WithOutStack>See 1GKDH4V: ITPUI:ALL - View settings should be able to be persistent

NOTES:
Just to clarify, do you wish persistent properties on a per-view basis, or one 
persisted state? If you change the value on one navigator and then open 
another, should it have the new value? What about multiple types of views that 
share the same property (e.g. Navigator and Packages both share Show Version 
Info). If you turn it on in one, then open an instance of the other, should it 
have the same state as the first?
Global and persistent please, if I had my way &lt;g&gt;.
There is another PR opened to make "Show Version Info" persistent.
1GFB33B: ITPJUI:WINNT - 'show version info' should be persistent

Here is point #5 of my "top ten" that I sent to JW in email:
5 - View settings should be *persistent*. For example, "Show Version Info" 
should be persistent - and global, too! We have to turn on "Show Version Info" 
in every view, every time we launch Eclipse. Persistence is the really 
important point here. If it is not made global, then make it a *toolbar button* 
in every relevant view: Navigator, Packages, and Hierarchy (also in the "useful 
view", which we need to add &lt;g&gt;). In fact, "Show Version Info" should even be 
ON by default if a view is in the Repository perspective. Many - I would say 
most - other view settings should also persist. For example, "Ignore 
Whitespace" in the Synchronize view. It causes a re-sync, so if the user just 
restarted Eclipse, then it actually becomes an expensive operation to turn it 
on again. See 1GKDH4V, 1GFB33B, 1GKDHED, 1GKDHHZ.

PRODUCT VERSION:
	0.136


post 2.0
Reopening
This is annoying since I have to reset it every time I sync with the repository.
Time permitting we'll look at for 2.1.
Fixed with new sync view. Both the compare editor settings and the sync view
setting are persisted.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="261" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>"Show Version Info" should be a toolbar button (1GKDHHZ)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>"Show Version Info" should be a toolbar button.
	It was in VAJ and VAME. It should be here also.
	It is too important to hide away on a hidden menu.
	This setting is found on the Navigator, Packages views.
	(maybe Hierarchy view also).

NOTES:
PRODUCT VERSION:
	0.136


In the 2.0 codebase it is in a standard place (Window-&gt;Decorators) with all 
the other decorators. Closing PR; if you still think it should be more 
visible, you should log a bug against the UI team.</WithStack>
    <WithOutStack>"Show Version Info" should be a toolbar button.
	It was in VAJ and VAME. It should be here also.
	It is too important to hide away on a hidden menu.
	This setting is found on the Navigator, Packages views.
	(maybe Hierarchy view also).

NOTES:
PRODUCT VERSION:
	0.136


In the 2.0 codebase it is in a standard place (Window-&gt;Decorators) with all 
the other decorators. Closing PR; if you still think it should be more 
visible, you should log a bug against the UI team.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="262" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>Synchronize view: "Ignore Whitespace" and "Refresh from Repo" should be tools (1GKDIX9)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>"Ignore Whitespace" and "Refresh From Repository" should be tools, not hidden menu items.
	They are important enough that they should be "out front" so that they can be used, not hidden away.
	It took me weeks to even figure out that they existed (I am not a fan of the hidden triangle menu &lt;g&gt;).

	Ignore whitespace is something you might want to click on and then off again - from the toolbar.
	I understand that these are somewhat time-consuming operations, but it's the user's choice to press them.

	Just put a little separator to show that they are different actions from the catchup/release/conflict tools.

NOTES:
	CM (9/23/01 12:30:13 PM)
		They also need to be keyboard accessible.
PRODUCT VERSION:
	0.136


I think they are ok as view menu items, although tools would be niftier (post 
2.0)

We need to sort out accessibility though.  I've asked Desktop team what the  
general solution is for view menu contributions.  Marked bug M5 to remind 
myself about this issue.
Accessibility for view menus ok.

Closing.</WithStack>
    <WithOutStack>"Ignore Whitespace" and "Refresh From Repository" should be tools, not hidden menu items.
	They are important enough that they should be "out front" so that they can be used, not hidden away.
	It took me weeks to even figure out that they existed (I am not a fan of the hidden triangle menu &lt;g&gt;).

	Ignore whitespace is something you might want to click on and then off again - from the toolbar.
	I understand that these are somewhat time-consuming operations, but it's the user's choice to press them.

	Just put a little separator to show that they are different actions from the catchup/release/conflict tools.

NOTES:
	CM (9/23/01 12:30:13 PM)
		They also need to be keyboard accessible.
PRODUCT VERSION:
	0.136


I think they are ok as view menu items, although tools would be niftier (post 
2.0)

We need to sort out accessibility though.  I've asked Desktop team what the  
general solution is for view menu contributions.  Marked bug M5 to remind 
myself about this issue.
Accessibility for view menus ok.

Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="263" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Error replacing folder with other version (1GKF8OI)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- selected JFace Text</Line>
          <Line>- chose Replace with / Version / v200</Line>
          <Line>- got an error dialog: Unable to Replace / Resources(s) could not be loaded.... / Reason: Cannot support project rename on load.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>In the Eclipse UI project, I was trying to replace one of the main folders with a different version.

- selected JFace Text
- chose Replace with / Version / v200
- got an error dialog: Unable to Replace / Resources(s) could not be loaded.... / Reason: Cannot support project rename on load.


NOTES:
PRODUCT VERSION:
135


Could not do Replace With Tag on a subfolder of the project
(action not enabled).

Works fine on a project though.
Should try again when action enablement fixed.

Closing.  PR is old, code much different, retest of general area indicates 
goodness.</WithStack>
    <WithOutStack>In the Eclipse UI project, I was trying to replace one of the main folders with a different version.

- selected JFace Text
- chose Replace with / Version / v200
- got an error dialog: Unable to Replace / Resources(s) could not be loaded.... / Reason: Cannot support project rename on load.


NOTES:
PRODUCT VERSION:
135


Could not do Replace With Tag on a subfolder of the project
(action not enabled).

Works fine on a project though.
Should try again when action enablement fixed.

Closing.  PR is old, code much different, retest of general area indicates 
goodness.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="264" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="25238" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[CVS EXTSSH] cannot use RSA key for SSH connection  (1GKKBJP)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>From Eclipse Corner:

Hi,

   I just installed Eclipse 0.9 build 0.125 and was trying to use it with
CVS. Well, it turns out that I use CVS on SSH using an RSA private key.
TortoiseCVS will automatically use this key, at c:\ssh\.ssh\identity.
WinCVS will allow me to use this key too (give path to it). Even Tera Term
Pro with the SSH extension will aloow me to use it either with
login/password or with login+RSA key file.

   But I didn't find in Eclipse how to do this. It keeps asking me for the
password - it should not, because my private key is not
passphrase-protected anyway. It should do like WinCVS, which allows me to
point to the RSA key to use.

   So, if you know how to make Eclipse work on SSH with an RSA private key
instead of the traditional user&amp;password, let me know. Thanks.

marcio


NOTES:

Jean-Michel (9/24/01 10:52:59 AM)
	This should be configurable on a per connection basis.
PRODUCT VERSION:

R1.0


The Java SSH implementation does not seem to be able to use RSA keys for 
authentication, as far as I can tell. However, this is possible using the new 
EXT plugin. This PR can probably be marked as fixed.
Hmm, according to http://www.cl.cam.ac.uk/~fapp2/software/java-ssh/ the applet 
does indeed support RSA authentication, we could investigate how easy it would 
be to reveal this functionality to the user. (i.e. if it's as easy as asking 
the user for the location of the key and then passing it to the connection 
method, it might be worth it).
marked as enhancement.
Reopening
I believe this will be address in the work Boris is doing with ssh.
This is not supported by our SSH1 code.
This will be part of the coming support for SSH2.


*** This bug has been marked as a duplicate of 25238 ***</WithStack>
    <WithOutStack>From Eclipse Corner:

Hi,

   I just installed Eclipse 0.9 build 0.125 and was trying to use it with
CVS. Well, it turns out that I use CVS on SSH using an RSA private key.
TortoiseCVS will automatically use this key, at c:\ssh\.ssh\identity.
WinCVS will allow me to use this key too (give path to it). Even Tera Term
Pro with the SSH extension will aloow me to use it either with
login/password or with login+RSA key file.

   But I didn't find in Eclipse how to do this. It keeps asking me for the
password - it should not, because my private key is not
passphrase-protected anyway. It should do like WinCVS, which allows me to
point to the RSA key to use.

   So, if you know how to make Eclipse work on SSH with an RSA private key
instead of the traditional user&amp;password, let me know. Thanks.

marcio


NOTES:

Jean-Michel (9/24/01 10:52:59 AM)
	This should be configurable on a per connection basis.
PRODUCT VERSION:

R1.0


The Java SSH implementation does not seem to be able to use RSA keys for 
authentication, as far as I can tell. However, this is possible using the new 
EXT plugin. This PR can probably be marked as fixed.
Hmm, according to http://www.cl.cam.ac.uk/~fapp2/software/java-ssh/ the applet 
does indeed support RSA authentication, we could investigate how easy it would 
be to reveal this functionality to the user. (i.e. if it's as easy as asking 
the user for the location of the key and then passing it to the connection 
method, it might be worth it).
marked as enhancement.
Reopening
I believe this will be address in the work Boris is doing with ssh.
This is not supported by our SSH1 code.
This will be part of the coming support for SSH2.


*** This bug has been marked as a duplicate of 25238 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="265" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>VCMFile should use buffered input on IFile.getContents (1GKKKRS)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>org.eclipse.vcm.internal.ui.sync.MergeResource#getLocalStream calls
IFile.getContents(), but should wrapper the result in a BufferedInputStream.
The stream provided by core is not buffered, and if you follow the references
downstream from MergeResource -&gt; VCMFile.localByteContents -&gt; BufferedContent,
it looks like several places (such as Differencer#contentsEqual) read one character at a 
time without buffering (EXTREMELY SLOW).  To avoid this danger, it should be wrapped 
in a buffered stream immediately after calling IFile.getContents.

NOTES:

JEM (9/27/2001 2:34:08 PM)
	Released. Should investigate other streaming users and see if they have the same problem.

JEM (10/3/2001 11:29:02 AM)
	PServerConnection handles the creation of the core input/output streams for
	CVS communication, and they do not appear to be buffered in any way. Fixed.
	Not releasing code yet, want to run with it for a bit.
Released PServer fixes as well. Closing PR.
[Fixed in v205]
PRODUCT VERSION:

Build 0.131</WithStack>
    <WithOutStack>org.eclipse.vcm.internal.ui.sync.MergeResource#getLocalStream calls
IFile.getContents(), but should wrapper the result in a BufferedInputStream.
The stream provided by core is not buffered, and if you follow the references
downstream from MergeResource -&gt; VCMFile.localByteContents -&gt; BufferedContent,
it looks like several places (such as Differencer#contentsEqual) read one character at a 
time without buffering (EXTREMELY SLOW).  To avoid this danger, it should be wrapped 
in a buffered stream immediately after calling IFile.getContents.

NOTES:

JEM (9/27/2001 2:34:08 PM)
	Released. Should investigate other streaming users and see if they have the same problem.

JEM (10/3/2001 11:29:02 AM)
	PServerConnection handles the creation of the core input/output streams for
	CVS communication, and they do not appear to be buffered in any way. Fixed.
	Not releasing code yet, want to run with it for a bit.
Released PServer fixes as well. Closing PR.
[Fixed in v205]
PRODUCT VERSION:

Build 0.131</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="266" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Sync view memory leak (1GKKUIK)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It looks like the sync view has a memory leak. When the sync view is closed, all the model
objects stick around even after a full garbage collection (use OptimizeIt).  This is a lot of 
objects, and can represent a substantial leak for users that frequently open and close the
sync view.  With some poking around, I think I've found the source of the bug in the compare
framework.  However VCM team should track it to make sure it is indeed a compare FW bug, and that
it gets fixed.  Here is the PR I logged against compare:

	1GKKUA5: ITPUI:WINNT - Severe: memory leak in sync view



NOTES:
PRODUCT VERSION:

Build 0.131


The compare bug has been fixed. With some simple println debugging 
before/after, it appears that the object models are being properly garbage 
collected.</WithStack>
    <WithOutStack>It looks like the sync view has a memory leak. When the sync view is closed, all the model
objects stick around even after a full garbage collection (use OptimizeIt).  This is a lot of 
objects, and can represent a substantial leak for users that frequently open and close the
sync view.  With some poking around, I think I've found the source of the bug in the compare
framework.  However VCM team should track it to make sure it is indeed a compare FW bug, and that
it gets fixed.  Here is the PR I logged against compare:

	1GKKUA5: ITPUI:WINNT - Severe: memory leak in sync view



NOTES:
PRODUCT VERSION:

Build 0.131


The compare bug has been fixed. With some simple println debugging 
before/after, it appears that the object models are being properly garbage 
collected.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="267" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>[CVS Sync View] DND a project to the Sync view could synchnoize the project (1GKMIEL)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Suggestion:
		DND a project to the Sync view could synchnoize the project.

NOTES:

JEM (9/25/2001 4:02:58 PM)
	Great idea.
post 2.0
Reopening
Synchronizing with the new sync view happens for free. DND is no longer useful.
Closing.</WithStack>
    <WithOutStack>Suggestion:
		DND a project to the Sync view could synchnoize the project.

NOTES:

JEM (9/25/2001 4:02:58 PM)
	Great idea.
post 2.0
Reopening
Synchronizing with the new sync view happens for free. DND is no longer useful.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="268" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Need to be able to release previous version without having to edit code (1GKRE0V)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- commit an incomming change</Line>
          <Line>- update outgoing changes</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The synchronize view considers that the repository state is always better than 
the workspace. This could be wrong if someone has released a 
change, then you have no choice but accepting it then undo it manually and re-
release the fixed version.

This becomes really painfull, if the state you want to revert to is precisely 
an old one, which you have in your workspace. I would like to be able to 
release my old version instead of having the only option to catchup with the 
bogus new one.

Currently, you have to manually add a space so as to create a conflict, but 
then a compare will also see this fake version, and this is causing more
confusion. 

Why not simply allowing to release even if you think only catchup is expected ? 
Note that the same applies to outgoing changes which you might
not want to preserve (you have to use "replace with stream contents". This one 
has a simpler solution, but again it is not very natural.

The synchronization view could solve all these at once by simply allowing me to 
always catchup/release. Maybe if I am going against the stream,
I should be prompted to confirm my action, but it should still be possible.

NOTES:
PRODUCT VERSION:
SDK 137


Michael is currently working on the improvements to the synchronize view that 
will allow us to do this. Moving to Michael.
You can now:
- commit an incomming change
- update outgoing changes

In the first case, it creates a new revision with the contents of the base, 
which is the desired net effect.  We can't help that it creates a new revision 
because in CVS you can't turn back the clock.</WithStack>
    <WithOutStack>The synchronize view considers that the repository state is always better than 
the workspace. This could be wrong if someone has released a 
change, then you have no choice but accepting it then undo it manually and re-
release the fixed version.

This becomes really painfull, if the state you want to revert to is precisely 
an old one, which you have in your workspace. I would like to be able to 
release my old version instead of having the only option to catchup with the 
bogus new one.

Currently, you have to manually add a space so as to create a conflict, but 
then a compare will also see this fake version, and this is causing more
confusion. 

Why not simply allowing to release even if you think only catchup is expected ? 
Note that the same applies to outgoing changes which you might
not want to preserve (you have to use "replace with stream contents". This one 
has a simpler solution, but again it is not very natural.

The synchronization view could solve all these at once by simply allowing me to 
always catchup/release. Maybe if I am going against the stream,
I should be prompted to confirm my action, but it should still be possible.

NOTES:
PRODUCT VERSION:
SDK 137


Michael is currently working on the improvements to the synchronize view that 
will allow us to do this. Moving to Michael.
You can now:
- commit an incomming change
- update outgoing changes

In the first case, it creates a new revision with the contents of the base, 
which is the desired net effect.  We can't help that it creates a new revision 
because in CVS you can't turn back the clock.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="269" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>[CVS Sync View] usability: Multi-selection on catch-up/release should not allow selection of parent and children (1GKXE6O)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Just messed up the Core stream today. Here's the scenario:

	+ synchronize
	+ a lot of outgoing changes (enough that the scroll bar is active)
	+ the project root folder is selected but not shown in the current view
		due to the scroll bar
	+ ctrl + select the files I really want to release

	What happened: 	since the root was already selected, all my outgoing changes
were released:

	Suggestion: if both parent folder and children resources are selected, or ask the user to
*decide* what to release or release only the selected children. Should apply not only for
projects but for any folder.
	
NOTES:
PRODUCT VERSION:
	202a


post 2.0
Reopening
We should test to see if this is still an issue.
This bug has not been touched in 2 years. Closing as WONTFIX.</WithStack>
    <WithOutStack>Just messed up the Core stream today. Here's the scenario:

	+ synchronize
	+ a lot of outgoing changes (enough that the scroll bar is active)
	+ the project root folder is selected but not shown in the current view
		due to the scroll bar
	+ ctrl + select the files I really want to release

	What happened: 	since the root was already selected, all my outgoing changes
were released:

	Suggestion: if both parent folder and children resources are selected, or ask the user to
*decide* what to release or release only the selected children. Should apply not only for
projects but for any folder.
	
NOTES:
PRODUCT VERSION:
	202a


post 2.0
Reopening
We should test to see if this is still an issue.
This bug has not been touched in 2 years. Closing as WONTFIX.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="270" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Could have user name in Synchronize view (1GKX9QX)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When you bring up the Synchronize view, it shows the 2 versions of the file
	(workspace and version from the repo) in the panes at the bottom of the view.
	It would be cool if you could show the name of the user who last released
	to the repo. Or maybe a concatenation of user names ("john,dj,jeff") that have
	made changes since you last loaded. Just to give you an indication of who
	is changing the files that you are loading.

NOTES:

JEM (10/1/2001 11:27:54 AM)
	Good idea! It's a little convoluted to find this right now, as you have to 
	'Show in Navigator', and then 'Show in Resource History' from the Navigator.
PRODUCT VERSION:
	0.131


Release comment would be good to.  I believe there is another PR on this 
subject.
Release comment is covered by a separate PR (bug 257).

Added user name to the right-hand side in the sync view, where appropriate.
For example, instead of:

file.txt 1.1

you will see:

file.txt 1.1 [james]

Fixed.</WithStack>
    <WithOutStack>When you bring up the Synchronize view, it shows the 2 versions of the file
	(workspace and version from the repo) in the panes at the bottom of the view.
	It would be cool if you could show the name of the user who last released
	to the repo. Or maybe a concatenation of user names ("john,dj,jeff") that have
	made changes since you last loaded. Just to give you an indication of who
	is changing the files that you are loading.

NOTES:

JEM (10/1/2001 11:27:54 AM)
	Good idea! It's a little convoluted to find this right now, as you have to 
	'Show in Navigator', and then 'Show in Resource History' from the Navigator.
PRODUCT VERSION:
	0.131


Release comment would be good to.  I believe there is another PR on this 
subject.
Release comment is covered by a separate PR (bug 257).

Added user name to the right-hand side in the sync view, where appropriate.
For example, instead of:

file.txt 1.1

you will see:

file.txt 1.1 [james]

Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="271" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Team settings for project not remembered when workspace copied (1GKXBZ6)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- set up self-hosting Eclipse UI workspace, loading org.eclipse.ui from HEAD stream in desktop repository</Line>
          <Line>- copied whole workspace to laptop</Line>
          <Line>- project properties for org.eclipse.ui indicate no repository or stream association</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>- set up self-hosting Eclipse UI workspace, loading org.eclipse.ui from HEAD stream in desktop repository
- copied whole workspace to laptop
- project properties for org.eclipse.ui indicate no repository or stream association


NOTES:
PRODUCT VERSION:
137


PR stale, we do this differently now.
Closing.  If problem persists please reopen.</WithStack>
    <WithOutStack>- set up self-hosting Eclipse UI workspace, loading org.eclipse.ui from HEAD stream in desktop repository
- copied whole workspace to laptop
- project properties for org.eclipse.ui indicate no repository or stream association


NOTES:
PRODUCT VERSION:
137


PR stale, we do this differently now.
Closing.  If problem persists please reopen.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="272" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Changing the case of a filename causes some grief (1GKZ172)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If the case of a filename is changed in the local workspace and released, 
we end up with two files on the server. Furthermore, loading two such files
causes errors when either file is operated upon.

NOTES:

JEM (10/2/2001 12:58:38 PM)
	Be careful changing code related to this:
	-On a linux client, I should be able to have two files with different case in my workspace simultaneously.
	-On a windows server, two files are NOT created on the server.
	There are four possible cases, in which the client/server is case sensitive/insensitive.
PRODUCT VERSION:

2.0


This is now handled properly (i.e. message indicating that only one of the 
files could be loaded.</WithStack>
    <WithOutStack>If the case of a filename is changed in the local workspace and released, 
we end up with two files on the server. Furthermore, loading two such files
causes errors when either file is operated upon.

NOTES:

JEM (10/2/2001 12:58:38 PM)
	Be careful changing code related to this:
	-On a linux client, I should be able to have two files with different case in my workspace simultaneously.
	-On a windows server, two files are NOT created on the server.
	There are four possible cases, in which the client/server is case sensitive/insensitive.
PRODUCT VERSION:

2.0


This is now handled properly (i.e. message indicating that only one of the 
files could be loaded.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="273" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>Compare: FEATURE: Ability to cancel download/compare (1GKZ2ZE)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. Connect to a CVS server to which you have a very slow connection (such as MIN to ZRH).</Line>
          <Line>2. Select a project and choose "Synchronize with stream."</Line>
          <Line>3. In the synchronize view, accidentally click on a huge file (for ultimate frustration, select a jar).</Line>
          <Line>4. Scream "Ack! No!" and hit ESC to try to cancel the lengthy (download) operation you just started.</Line>
          <Line>5. If you chose a jar, wait for a long time for nothing since the viewer won't even show anything when</Line>
          <Line>it's done.</Line>
          <Line>6. Request the ability to cancel operations by hitting ESC.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>1. Connect to a CVS server to which you have a very slow connection (such as MIN to ZRH).
2. Select a project and choose "Synchronize with stream."
3. In the synchronize view, accidentally click on a huge file (for ultimate frustration, select a jar).
4. Scream "Ack! No!" and hit ESC to try to cancel the lengthy (download) operation you just started.
5. If you chose a jar, wait for a long time for nothing since the viewer won't even show anything when
	it's done.
6. Request the ability to cancel operations by hitting ESC.

NOTES:
This is a general Compare request. We are just providing an input stream to the 
compare framework (in this case, the BinaryCompareViewer). It is conceivable 
that retrieving the contents could be an extremely long operation in some 
circumstances, and the compare framework should provide a way to cancel the 
operation; right now, for example, the binary compare viewer is spinning in a 
tight loop reading bytes, with no chance for cancellation.
PRODUCT VERSION:
135


*** Bug 10752 has been marked as a duplicate of this bug. ***
With the double click strategy, the risk of accidently downloading a huge file has gotten 
smaller. However, a Cancel of a download should always be be possible.
After 2.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>1. Connect to a CVS server to which you have a very slow connection (such as MIN to ZRH).
2. Select a project and choose "Synchronize with stream."
3. In the synchronize view, accidentally click on a huge file (for ultimate frustration, select a jar).
4. Scream "Ack! No!" and hit ESC to try to cancel the lengthy (download) operation you just started.
5. If you chose a jar, wait for a long time for nothing since the viewer won't even show anything when
	it's done.
6. Request the ability to cancel operations by hitting ESC.

NOTES:
This is a general Compare request. We are just providing an input stream to the 
compare framework (in this case, the BinaryCompareViewer). It is conceivable 
that retrieving the contents could be an extremely long operation in some 
circumstances, and the compare framework should provide a way to cancel the 
operation; right now, for example, the binary compare viewer is spinning in a 
tight loop reading bytes, with no chance for cancellation.
PRODUCT VERSION:
135


*** Bug 10752 has been marked as a duplicate of this bug. ***
With the double click strategy, the risk of accidently downloading a huge file has gotten 
smaller. However, a Cancel of a download should always be be possible.
After 2.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="274" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="10234" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Ctrl-S(ave) does not work in compare workspace text view (1GL2HLJ)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Must be known by now, but just in case it is not, it is disturbing not to have shortcuts work in the compare views. This applies to ctrl-C, ctrl-V, ctrl-X as well.

NOTES:
PRODUCT VERSION:
SDK202a


Does the desktop accelerator support now allow this?  I seem to recall it used 
to be a problem.
Andre,

I believe this belongs to Compare. (Note, that Ctrl-X/C/V all work now, it's
just Ctrl-S that does not). The Save action is contributed by TextMergeViewer,
so I'm not sure that VCM can do anything about this. It seems to me that Save
should be treated just like Cut/Copy/Paste and have its action contributed to
the global shortcuts.

If there is something that VCM has to do to make this happen, please let me know.

Moving to Compare.
pls verify that this problem is addressed and dispose if possible


*** This bug has been marked as a duplicate of 10234 ***</WithStack>
    <WithOutStack>Must be known by now, but just in case it is not, it is disturbing not to have shortcuts work in the compare views. This applies to ctrl-C, ctrl-V, ctrl-X as well.

NOTES:
PRODUCT VERSION:
SDK202a


Does the desktop accelerator support now allow this?  I seem to recall it used 
to be a problem.
Andre,

I believe this belongs to Compare. (Note, that Ctrl-X/C/V all work now, it's
just Ctrl-S that does not). The Save action is contributed by TextMergeViewer,
so I'm not sure that VCM can do anything about this. It seems to me that Save
should be treated just like Cut/Copy/Paste and have its action contributed to
the global shortcuts.

If there is something that VCM has to do to make this happen, please let me know.

Moving to Compare.
pls verify that this problem is addressed and dispose if possible


*** This bug has been marked as a duplicate of 10234 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="275" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Deleting from stream without loading (1GL1INO)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>From a post in Eclipse Corner.
I've PR'ed as reminder to fix the deletion case (which drives us nuts too!).
The second item about supporting it in the comparison viewer may or may not be the right place.


----- Original Message ----- 
From: "Gary Karasiuk" &lt;karasiuk@ca.ibm.com&gt;
Newsgroups: eclipse.tools
Sent: Tuesday, October 02, 2001 7:06 AM
Subject: CVS and deleting files - feature request


&gt; I think it would be very useful to be able to replace a stream with the
&gt; contents of the workspace.
&gt; 
&gt; There are some times when I know that the version in my workspace is the
&gt; "good" version.  I want to replace the HEAD stream with exactly this
&gt; version. There is no easy way (that I could find) to do that.  After doing a
&gt; synchronization, and a release, I am still left with a number of "catch-up"
&gt; files that exist in the stream but not in my workspace.  For each of these
&gt; files you now have to load it onto the workspace, only to turn around and
&gt; delete it.
&gt; 
&gt; In addition to this, it would be nice to have a delete option in the
&gt; comparison editor, for the case where the file exists in only one place.


NOTES:
PRODUCT VERSION:

202a


This is supported in Team 2.0</WithStack>
    <WithOutStack>From a post in Eclipse Corner.
I've PR'ed as reminder to fix the deletion case (which drives us nuts too!).
The second item about supporting it in the comparison viewer may or may not be the right place.


----- Original Message ----- 
From: "Gary Karasiuk" &lt;karasiuk@ca.ibm.com&gt;
Newsgroups: eclipse.tools
Sent: Tuesday, October 02, 2001 7:06 AM
Subject: CVS and deleting files - feature request


&gt; I think it would be very useful to be able to replace a stream with the
&gt; contents of the workspace.
&gt; 
&gt; There are some times when I know that the version in my workspace is the
&gt; "good" version.  I want to replace the HEAD stream with exactly this
&gt; version. There is no easy way (that I could find) to do that.  After doing a
&gt; synchronization, and a release, I am still left with a number of "catch-up"
&gt; files that exist in the stream but not in my workspace.  For each of these
&gt; files you now have to load it onto the workspace, only to turn around and
&gt; delete it.
&gt; 
&gt; In addition to this, it would be nice to have a delete option in the
&gt; comparison editor, for the case where the file exists in only one place.


NOTES:
PRODUCT VERSION:

202a


This is supported in Team 2.0</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="276" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>Copy-version-to-stream dialog does not deal with long version names (1GL32R6)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>The dialog with all version names may hide the trailing portion of the project version name. The visible part may not be enough to choose the proper version.
In JDT, we had long version names like v_0_135_01_(1*0_stream) and v_0_135_01_(2*0_stream), but the dialog did only show: "v_0_135_01_..." for both.

I noticed there was an horizontal scrollbar below it, but it did not help me (scrolled until the end of ...).

Aside: why do you show me again the project name inside the version list ? I have the project name already selected on the left hand side. But I still would need
	to be able to see the entire name of the version in case it is very long.

NOTES:
PRODUCT VERSION:
SDK 202a


n/a</WithStack>
    <WithOutStack>The dialog with all version names may hide the trailing portion of the project version name. The visible part may not be enough to choose the proper version.
In JDT, we had long version names like v_0_135_01_(1*0_stream) and v_0_135_01_(2*0_stream), but the dialog did only show: "v_0_135_01_..." for both.

I noticed there was an horizontal scrollbar below it, but it did not help me (scrolled until the end of ...).

Aside: why do you show me again the project name inside the version list ? I have the project name already selected on the left hand side. But I still would need
	to be able to see the entire name of the version in case it is very long.

NOTES:
PRODUCT VERSION:
SDK 202a


n/a</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="277" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Why is sync view setting red status msg? (1GL4NYQ)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>From the Team perspective (that is open when a synchronize is done),
	when the Synchronize view is given focus, the status message is set.
	However, the status message is red... it should use the regulare color
	text color. Red is used in other places to indicate error conditions.

NOTES:

JEM (10/5/2001 11:15:50 AM)
	Red is only used if you have conflicts.

AK (10/10/2001 10:19:20 AM)
	not true: 1GL4962: ITPVCM:WIN2000 - incoming deletions treated like conflicts

JEM (10/10/2001 1:54:31 PM)
	Ack. However, in the absence of that bug, we attempt to display the
	status message in red when there are conflicts, and in black otherwise.
Simon, is this explanation adequate, or do you believe that status messages 
containing conflicts should not be red? If the former, I will close this PR.
I do not know if the "UI team" has a guideline concerning using red in the 
status line to show a conflict. From a personal opinion, I would not. I've not 
seen other plugins make use of this. Also, I've not seen this in other 
applications that have a status bar. When there is no precedence, I'm always 
very careful doing something different.
The API on the status line seems to be intended to be used only for errors, and 
conflicts are a natural by-product of team development. As a data point, the 
task view does not use the error message when there are errors present. Fixed 
to dispay only a regular message.
Fixed in &gt; 204
[Fixed in v205]
PRODUCT VERSION:
	0.202</WithStack>
    <WithOutStack>From the Team perspective (that is open when a synchronize is done),
	when the Synchronize view is given focus, the status message is set.
	However, the status message is red... it should use the regulare color
	text color. Red is used in other places to indicate error conditions.

NOTES:

JEM (10/5/2001 11:15:50 AM)
	Red is only used if you have conflicts.

AK (10/10/2001 10:19:20 AM)
	not true: 1GL4962: ITPVCM:WIN2000 - incoming deletions treated like conflicts

JEM (10/10/2001 1:54:31 PM)
	Ack. However, in the absence of that bug, we attempt to display the
	status message in red when there are conflicts, and in black otherwise.
Simon, is this explanation adequate, or do you believe that status messages 
containing conflicts should not be red? If the former, I will close this PR.
I do not know if the "UI team" has a guideline concerning using red in the 
status line to show a conflict. From a personal opinion, I would not. I've not 
seen other plugins make use of this. Also, I've not seen this in other 
applications that have a status bar. When there is no precedence, I'm always 
very careful doing something different.
The API on the status line seems to be intended to be used only for errors, and 
conflicts are a natural by-product of team development. As a data point, the 
task view does not use the error message when there are errors present. Fixed 
to dispay only a regular message.
Fixed in &gt; 204
[Fixed in v205]
PRODUCT VERSION:
	0.202</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="278" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Warning of conflict when there is none (1GLEH0R)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>If I have an incoming file deletion, and I say "catchup", it warns that
I have conflicting changes that will be overwritten.  This is not true.
I have local information that will be lost (so the warning prompt is appropriate), 
but it incorrectly states that there was a conflict.


NOTES:
Fixed in 204.
[Fixed in v205]
PRODUCT VERSION:

Build 202a</WithStack>
    <WithOutStack>If I have an incoming file deletion, and I say "catchup", it warns that
I have conflicting changes that will be overwritten.  This is not true.
I have local information that will be lost (so the warning prompt is appropriate), 
but it incorrectly states that there was a conflict.


NOTES:
Fixed in 204.
[Fixed in v205]
PRODUCT VERSION:

Build 202a</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="279" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Plug-in Registry view should have option to sort alphabetically (1GFMY1R)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The plug-in registry view should have a sort alphabetically option

NOTES:
PRODUCT VERSION:
125


Can the following be added as well?
Reverse sort
Running then not running

Registry view is now sorting by default.

Sorting will be on all the time.

Running and then not running is not possible. A plug-in can only be activated 
or not. What you are referring to is probably failure of a plug-in to load, 
causing all subsequent class loading attempts for classes from the plug-in to 
fail. There are no APIs on IPluginDescriptor to detect that situation.</WithStack>
    <WithOutStack>The plug-in registry view should have a sort alphabetically option

NOTES:
PRODUCT VERSION:
125


Can the following be added as well?
Reverse sort
Running then not running

Registry view is now sorting by default.

Sorting will be on all the time.

Running and then not running is not possible. A plug-in can only be activated 
or not. What you are referring to is probably failure of a plug-in to load, 
causing all subsequent class loading attempts for classes from the plug-in to 
fail. There are no APIs on IPluginDescriptor to detect that situation.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="280" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="5749" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Problem with plugin.zip (1GKO61D)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>From Jim Amsden:

Dejan,
Sorry for all these issues, but it really reflects my commitment to Eclipse and PDE. And I think the whole thing is really cool.

The build.xml plugin.zip target creates a ${plugin}_${version}.zip that contains a zip file with the same name that doesn't contain itself.


NOTES:


*** This bug has been marked as a duplicate of 5749 ***</WithStack>
    <WithOutStack>From Jim Amsden:

Dejan,
Sorry for all these issues, but it really reflects my commitment to Eclipse and PDE. And I think the whole thing is really cool.

The build.xml plugin.zip target creates a ${plugin}_${version}.zip that contains a zip file with the same name that doesn't contain itself.


NOTES:


*** This bug has been marked as a duplicate of 5749 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="281" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Documentation page loses source (1GFKYC7)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) Open the documentation page on an extension point</Line>
          <Line>2) Edit something</Line>
          <Line>3) Select another entry from the combo box - changes are wiped out without warning</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The Documentation page for an editor extension loses the changes you select a different part
of the doc.

STEPS
	1) Open the documentation page on an extension point
	2) Edit something
	3) Select another entry from the combo box - changes are wiped out without warning


NOTES:
PRODUCT VERSION: 125



Fixed by applying changes if the editor is dirty before switching document 
section.</WithStack>
    <WithOutStack>The Documentation page for an editor extension loses the changes you select a different part
of the doc.

STEPS
	1) Open the documentation page on an extension point
	2) Edit something
	3) Select another entry from the combo box - changes are wiped out without warning


NOTES:
PRODUCT VERSION: 125



Fixed by applying changes if the editor is dirty before switching document 
section.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="282" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Wizard: title is missing (1GFDGX8)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>All the pages of the Plugin Wizard don't have nothing in the title bar.


NOTES:
PRODUCT VERSION:
124 SDK
Windows 2000


Fixed in all PDE wizards.</WithStack>
    <WithOutStack>All the pages of the Plugin Wizard don't have nothing in the title bar.


NOTES:
PRODUCT VERSION:
124 SDK
Windows 2000


Fixed in all PDE wizards.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="283" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing form_banner.gif (1GFDL7F)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>VK (6/15/01 2:50:08 PM)
		
		We are missing basic/wizban/fom_banner.gif. The weird thing on 
my machine is that when I self-host, the tool-version of PDE 
		works fine (I see the banner), but when I launch the target 
version of Eclipse (with or without debug), the editors display
		small red square. I set some breakpoints only to find out that 
the code is looking for icons/basic/wizban/form_banner.gif

		My display settings (NT4.0 on my Thinkpad) are set to 64K 
colours so I think the full image should have been used.
		In any case the basic banner is missing.


NOTES:
PRODUCT VERSION: 0.124



Fixed by copying the image from 'full' image set.</WithStack>
    <WithOutStack>VK (6/15/01 2:50:08 PM)
		
		We are missing basic/wizban/fom_banner.gif. The weird thing on 
my machine is that when I self-host, the tool-version of PDE 
		works fine (I see the banner), but when I launch the target 
version of Eclipse (with or without debug), the editors display
		small red square. I set some breakpoints only to find out that 
the code is looking for icons/basic/wizban/form_banner.gif

		My display settings (NT4.0 on my Thinkpad) are set to 64K 
colours so I think the full image should have been used.
		In any case the basic banner is missing.


NOTES:
PRODUCT VERSION: 0.124



Fixed by copying the image from 'full' image set.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="284" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New Extension Point dialog problems (1GFKP1Q)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) When you open it up you immediately get an error message. A simple message would be</Line>
          <Line>more consistent with the rest of the UI.</Line>
          <Line>2) There is no title</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The New Extension Point Dialog has a few problems

1) When you open it up you immediately get an error message. A simple message would be
more consistent with the rest of the UI.
2) There is no title


NOTES:
PRODUCT VERSION: 125 JDK



Fixed.
Verified in F3.</WithStack>
    <WithOutStack>The New Extension Point Dialog has a few problems

1) When you open it up you immediately get an error message. A simple message would be
more consistent with the rest of the UI.
2) There is no title


NOTES:
PRODUCT VERSION: 125 JDK



Fixed.
Verified in F3.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="285" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Inconsistent title in code generation wizard (1GFKQ15)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When you create a plugin project you get a Plug In Code Generators page. There is a label at the bottom
which says "Generates plugin.xml and plugin top-level class". It should read

 "Generates plugin.xml and plug-in top-level class"


NOTES:
PRODUCT VERSION: 125 JDK
 


Fixed.</WithStack>
    <WithOutStack>When you create a plugin project you get a Plug In Code Generators page. There is a label at the bottom
which says "Generates plugin.xml and plugin top-level class". It should read

 "Generates plugin.xml and plug-in top-level class"


NOTES:
PRODUCT VERSION: 125 JDK
 


Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="286" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Dependcoies Page loses scollable content when graph is switched (1GFKR73)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Open the dependencies page for a plug in</Line>
          <Line>2) Scroll right over to the right</Line>
          <Line>3) Select the two buttons for showing the dependcy graph</Line>
          <Line>4) Try to scroll over left - half of the widgets are cut off</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When the dependency graph is switched the scroll bars are adjusted in such a way that the
right hand side of the required plugins page is no longer visible.

STEPS
	1) Open the dependencies page for a plug in
	2) Scroll right over to the right
	3) Select the two buttons for showing the dependcy graph
	4) Try to scroll over left - half of the widgets are cut off


NOTES:
KJD (6/20/2001 4:33:22 PM)
	Note: this happens on Windows 2000 as well.

VI (19/09/2001 10:53:22 AM)
	I believe I have fixed this in 1.0 136.
PRODUCT VERSION: Linux 7.0



This was fixed in one of the last builds before GM (I think 136 or 137).</WithStack>
    <WithOutStack>When the dependency graph is switched the scroll bars are adjusted in such a way that the
right hand side of the required plugins page is no longer visible.

STEPS
	1) Open the dependencies page for a plug in
	2) Scroll right over to the right
	3) Select the two buttons for showing the dependcy graph
	4) Try to scroll over left - half of the widgets are cut off


NOTES:
KJD (6/20/2001 4:33:22 PM)
	Note: this happens on Windows 2000 as well.

VI (19/09/2001 10:53:22 AM)
	I believe I have fixed this in 1.0 136.
PRODUCT VERSION: Linux 7.0



This was fixed in one of the last builds before GM (I think 136 or 137).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="287" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Extension point definition page  layout problems (1GFKTOL)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) Create a plugin</Line>
          <Line>2) Create a new extension point and check "Open new editor"</Line>
          <Line>3) It will open to the definition page and you will see the problem there</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When you create a new extension point if you open an editor then many of the widgets are
cut off. In Windows the editor is too large for the part and has the bottom of the Element grammar
list and the document page cut off. On Linux the word DTD comes out as µ l µ.

STEPS
	1) Create a plugin
	2) Create a new extension point and check "Open new editor"
	3) It will open to the definition page and you will see the problem there


NOTES:
PRODUCT VERSION: 125 on WIN NT and Linux 7.0



Fixed.</WithStack>
    <WithOutStack>When you create a new extension point if you open an editor then many of the widgets are
cut off. In Windows the editor is too large for the part and has the bottom of the Element grammar
list and the document page cut off. On Linux the word DTD comes out as µ l µ.

STEPS
	1) Create a plugin
	2) Create a new extension point and check "Open new editor"
	3) It will open to the definition page and you will see the problem there


NOTES:
PRODUCT VERSION: 125 on WIN NT and Linux 7.0



Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="288" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing icon for Dependcies page (1GFKRCL)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The Dependencies page has a red box in the top left corner - this usually indicates a missing
resource.

STEPS
	1) Open the dependencies page on a plug-in

NOTES:
PRODUCT VERSION: 125



This does not happen any more.</WithStack>
    <WithOutStack>The Dependencies page has a red box in the top left corner - this usually indicates a missing
resource.

STEPS
	1) Open the dependencies page on a plug-in

NOTES:
PRODUCT VERSION: 125



This does not happen any more.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="289" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cannot set the value of an extension point property (1GFKUQ3)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) Create an extension point</Line>
          <Line>2) Select the name element</Line>
          <Line>3) Open the properties view</Line>
          <Line>4) Type in something or the value</Line>
          <Line>5) Hit save</Line>
          <Line>6) Click off the value entry - nothing is saved.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>You cannot set the value of a property of an extension point. If you enter a value and save
that value is ignored.

STEPS
	1) Create an extension point
	2) Select the name element
	3) Open the properties view
	4) Type in something or the value
	5) Hit save
	6) Click off the value entry - nothing is saved.

The problem is when the use is something other than default the value is not interesting
and therefore ignored. The editability of this entry should be tied to the use setting.


NOTES:
PRODUCT VERSION: 125



The usual behaviour of the property sheet in Eclipse is that you must 'enter' 
to commit the value typed in the cell editor. In the provided scenario, 'Enter' 
is missing. Before you hit 'Save', you must press 'Enter' key.

If you think that this behaviour is wrong, please reopen this bug against 
Eclipse UI component.</WithStack>
    <WithOutStack>You cannot set the value of a property of an extension point. If you enter a value and save
that value is ignored.

STEPS
	1) Create an extension point
	2) Select the name element
	3) Open the properties view
	4) Type in something or the value
	5) Hit save
	6) Click off the value entry - nothing is saved.

The problem is when the use is something other than default the value is not interesting
and therefore ignored. The editability of this entry should be tied to the use setting.


NOTES:
PRODUCT VERSION: 125



The usual behaviour of the property sheet in Eclipse is that you must 'enter' 
to commit the value typed in the cell editor. In the provided scenario, 'Enter' 
is missing. Before you hit 'Save', you must press 'Enter' key.

If you think that this behaviour is wrong, please reopen this bug against 
Eclipse UI component.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="290" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Errors do not have line numbers (1GFKV9W)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) Create an extension point and change the Use to default but do not set the value</Line>
          <Line>2) You will get an error in your tasks list</Line>
          <Line>3) Double click on the error. The plugin.xml will be opened but the line will not be highlighted.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you have an error in your plugin.xml that shows up in your tasks view double clicking
will take you to the plugin.xml but not to the line.

STEPS
	1) Create an extension point and change the Use to default but do not set the value
	2) You will get an error in your tasks list
	3) Double click on the error. The plugin.xml will be opened but the line will not be highlighted.


NOTES:
PRODUCT VERSION: 125



Fixed in &gt;20020205</WithStack>
    <WithOutStack>If you have an error in your plugin.xml that shows up in your tasks view double clicking
will take you to the plugin.xml but not to the line.

STEPS
	1) Create an extension point and change the Use to default but do not set the value
	2) You will get an error in your tasks list
	3) Double click on the error. The plugin.xml will be opened but the line will not be highlighted.


NOTES:
PRODUCT VERSION: 125



Fixed in &gt;20020205</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="291" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Extension Point Definition Page: New Element button should prompt for name (1GFKXN1)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The Extension Point Definition Page has a new Element button. When it is pressed a new
element is created new_element_x. The user will almost certainly want to choose the name
themselves - this should have an associated prompt.

NOTES:
PRODUCT VERSION: 125



The chosen behaviour is in line with the behaviour of 'new' operation on 
Windows. When a new text file is created, it immediately appears using some 
generic label as 'New Text Document' or similar. This name can be changed by 
directly clicking on the name and typing it. Similarly, the name of the newly 
generated element or attribute can be modified in the property sheet. Bringing 
up a dialog with the same effect (typing in the name) was considered too 
distracting. Note that name is just one of the properties that needs to be 
changed. Since the user would end up in the property sheet anyway, changing the 
name there together with other properties seemed a better solution.</WithStack>
    <WithOutStack>The Extension Point Definition Page has a new Element button. When it is pressed a new
element is created new_element_x. The user will almost certainly want to choose the name
themselves - this should have an associated prompt.

NOTES:
PRODUCT VERSION: 125



The chosen behaviour is in line with the behaviour of 'new' operation on 
Windows. When a new text file is created, it immediately appears using some 
generic label as 'New Text Document' or similar. This name can be changed by 
directly clicking on the name and typing it. Similarly, the name of the newly 
generated element or attribute can be modified in the property sheet. Bringing 
up a dialog with the same effect (typing in the name) was considered too 
distracting. Note that name is just one of the properties that needs to be 
changed. Since the user would end up in the property sheet anyway, changing the 
name there together with other properties seemed a better solution.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="292" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Bad punctuation for error message (1GFKZKX)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Deselect all external references</Line>
          <Line>2) Select the Extensions Page</Line>
          <Line>3) Hit new</Line>
          <Line>4) Select Search Engine</Line>
          <Line>5) You will get an error message that has too many or too few spaces in various places.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you try and extend a point that is defined in a plug in that is not on your dependency list
you get an error message with poor grammar.

STEPS
	1) Deselect all external references 
	2) Select the Extensions Page
	3) Hit new
	4) Select Search Engine
	5) You will get an error message that has too many or too few spaces in various places.


NOTES:
PRODUCT VERSION: 125



Warning message fixed.</WithStack>
    <WithOutStack>If you try and extend a point that is defined in a plug in that is not on your dependency list
you get an error message with poor grammar.

STEPS
	1) Deselect all external references 
	2) Select the Extensions Page
	3) Hit new
	4) Select Search Engine
	5) You will get an error message that has too many or too few spaces in various places.


NOTES:
PRODUCT VERSION: 125



Warning message fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="293" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Adding a dependency results in scrolling and invisible content (1GFKZX3)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Open a plug-in</Line>
          <Line>2) Select the Dependencies page</Line>
          <Line>3) Select Xerces</Line>
          <Line>4) Page scrolls out of sight and when you scroll up only half of it is visible.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>If you select Xerces XML Parser as a dependency the Dependencies page will scroll out of 
sight and the top entries and the graph will not be visibile.

STEPS
	1) Open a plug-in
	2) Select the Dependencies page
	3) Select Xerces
	4) Page scrolls out of sight and when you scroll up only half of it is visible.


NOTES:
PRODUCT VERSION: 125 Linux 7.0



This problem has been fixed in GM 1.0.</WithStack>
    <WithOutStack>If you select Xerces XML Parser as a dependency the Dependencies page will scroll out of 
sight and the top entries and the graph will not be visibile.

STEPS
	1) Open a plug-in
	2) Select the Dependencies page
	3) Select Xerces
	4) Page scrolls out of sight and when you scroll up only half of it is visible.


NOTES:
PRODUCT VERSION: 125 Linux 7.0



This problem has been fixed in GM 1.0.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="294" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Null Pointer Exception moving mouse over required plugins (1GFL144)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331285335">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.pde.internal.editor.manifest.RequiresSection.linkEntered(RequiresSection.java:105)</Frame>
          <Frame depth="1">org.eclipse.pde.internal.forms.HyperlinkHandler.mouseEnter(HyperlinkHandler.java:81)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java(Compiled Code))</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="7">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="8">org.eclipse.ui.internal.Workbench.run(Workbench.java:642)</Frame>
          <Frame depth="9">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:810)</Frame>
          <Frame depth="10">org.eclipse.core.boot.BootLoader.run(BootLoader.java:280)</Frame>
          <Frame depth="11">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="12">org.eclipse.core.launcher.Main.basicRun(Main.java:119)</Frame>
          <Frame depth="13">org.eclipse.core.launcher.Main.run(Main.java:401)</Frame>
          <Frame depth="14">org.eclipse.core.launcher.Main.main(Main.java:274)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I received a null pointer exception when I had the Overview page selected for a 
plugin I had created
myself. I am not sure how I got into this state but I had managed to get the 
list of Required Plugins
to include one called org.eclipse.ui rather than the plugin name. When I moved 
my mouse
over this link I got a Null Pointer Exception.

java.lang.NullPointerException
	at org.eclipse.pde.internal.editor.manifest.RequiresSection.linkEntered
(RequiresSection.java:105)
	at org.eclipse.pde.internal.forms.HyperlinkHandler.mouseEnter
(HyperlinkHandler.java:81)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java
(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:642)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:810)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:280)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:119)
	at org.eclipse.core.launcher.Main.run(Main.java:401)
	at org.eclipse.core.launcher.Main.main(Main.java:274)


NOTES:

JohnA (9/14/2001 4:24:45 PM)
	I got the same exception after opening an plugin.xml that I had never 
edited or opened (core resources plugin.xml).
	This was in build 0.131
PRODUCT VERSION: 125



The problem was in not checking the value of the associated plug-in reference
for the hyperlink. The result was a null pointer exception. The fix is to
recognize this situation (i.e. having a link that is unresolved) and drop
the hyperlink for it (use plain label) as well as use error overlay icon
to indicate this.</WithStack>
    <WithOutStack>I received a null pointer exception when I had the Overview page selected for a 
plugin I had created
myself. I am not sure how I got into this state but I had managed to get the 
list of Required Plugins
to include one called org.eclipse.ui rather than the plugin name. When I moved 
my mouse
over this link I got a Null Pointer Exception.




NOTES:

JohnA (9/14/2001 4:24:45 PM)
	I got the same exception after opening an plugin.xml that I had never 
edited or opened (core resources plugin.xml).
	This was in build 0.131
PRODUCT VERSION: 125



The problem was in not checking the value of the associated plug-in reference
for the hyperlink. The result was a null pointer exception. The fix is to
recognize this situation (i.e. having a link that is unresolved) and drop
the hyperlink for it (use plain label) as well as use error overlay icon
to indicate this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="295" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Null Pointer Exception entering Body Text (1GFL5O3)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437331285335">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.pde.internal.editor.manifest.DetailChildrenSection.handleApply(DetailChildrenSection.java:235)</Frame>
          <Frame depth="1">org.eclipse.pde.internal.editor.manifest.DetailChildrenSection.access$5(DetailChildrenSection.java:233)</Frame>
          <Frame depth="2">org.eclipse.pde.internal.editor.manifest.DetailChildrenSection$3.widgetSelected(DetailChildrenSection.java:147)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java(Compiled Code))</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="8">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="9">org.eclipse.ui.internal.Workbench.run(Workbench.java:622)</Frame>
          <Frame depth="10">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815)</Frame>
          <Frame depth="11">org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)</Frame>
          <Frame depth="12">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="13">org.eclipse.core.launcher.Main.basicRun(Main.java:119)</Frame>
          <Frame depth="14">org.eclipse.core.launcher.Main.run(Main.java:401)</Frame>
          <Frame depth="15">org.eclipse.core.launcher.Main.main(Main.java:274)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) Create an Extension</Line>
          <Line>2) Enter something into the Body Text</Line>
          <Line>3) Hit Apply</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When you Apply Body Text from the Extensions page you get a null pointer exception

STEPS
	1) Create an Extension
	2) Enter something into the Body Text
	3) Hit Apply

java.lang.NullPointerException
	at org.eclipse.pde.internal.editor.manifest.DetailChildrenSection.handleApply(DetailChildrenSection.java:235)
	at org.eclipse.pde.internal.editor.manifest.DetailChildrenSection.access$5(DetailChildrenSection.java:233)
	at org.eclipse.pde.internal.editor.manifest.DetailChildrenSection$3.widgetSelected(DetailChildrenSection.java:147)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:622)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:815)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:119)
	at org.eclipse.core.launcher.Main.run(Main.java:401)
	at org.eclipse.core.launcher.Main.main(Main.java:274)



NOTES:
PRODUCT VERSION: 125



This can happen if an extension is selected. Body text can only be applied to
extension elements, not to the 'extension' itself. Because of this, the current
element field is set to null. An attempt to 'apply' text to null element
results in null pointer exception. 

The fix is to make text area read-only when selected element is not of the right
type and/or is null. When text cannot be entered, 'Apply' button cannot be
enabled, thus avoiding the null pointer problem.</WithStack>
    <WithOutStack>When you Apply Body Text from the Extensions page you get a null pointer exception

STEPS
	1) Create an Extension
	2) Enter something into the Body Text
	3) Hit Apply





NOTES:
PRODUCT VERSION: 125



This can happen if an extension is selected. Body text can only be applied to
extension elements, not to the 'extension' itself. Because of this, the current
element field is set to null. An attempt to 'apply' text to null element
results in null pointer exception. 

The fix is to make text area read-only when selected element is not of the right
type and/or is null. When text cannot be entered, 'Apply' button cannot be
enabled, thus avoiding the null pointer problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="296" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unable to launch target eclipse from Debugger (1GFMVNE)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Refer to PRID 1GFMKHW.    When trying to reproduce this PR, we get stuck at step 

2.1) Start the target eclipse (Debug --&gt;[Run-time workbench])

The J9 and J9 proxy windows launch but the target eclipse window running the analyzer does not appear.

NOTES:
PRODUCT VERSION:
Eclipse 125
Window 2000


Moving to PDE UI.
Is this still a valid bug?
This seems a stale bug - closing.</WithStack>
    <WithOutStack>Refer to PRID 1GFMKHW.    When trying to reproduce this PR, we get stuck at step 

2.1) Start the target eclipse (Debug --&gt;[Run-time workbench])

The J9 and J9 proxy windows launch but the target eclipse window running the analyzer does not appear.

NOTES:
PRODUCT VERSION:
Eclipse 125
Window 2000


Moving to PDE UI.
Is this still a valid bug?
This seems a stale bug - closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="297" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>PDE Preferences is unacceptably slow on J9 (1GFOGDM)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Clicking on the PDE Prefences takes around 15 seconds before control is returned to the user which is unacceptable.  Is it possible at least to return control
back to the user if they accidentally clicked on the PDE they can cancel it.

NOTES:
PRODUCT VERSION:
Eclipse SDK 0.125
J9 06142001


Moving to PDE UI.
Fixed in 2.0 - time-consuming page is moved as a child of the main PDE page, so 
if you click on it, chances are it was not an accident. In addition, loading of 
external plug-ins has been improved (should take less).</WithStack>
    <WithOutStack>Clicking on the PDE Prefences takes around 15 seconds before control is returned to the user which is unacceptable.  Is it possible at least to return control
back to the user if they accidentally clicked on the PDE they can cancel it.

NOTES:
PRODUCT VERSION:
Eclipse SDK 0.125
J9 06142001


Moving to PDE UI.
Fixed in 2.0 - time-consuming page is moved as a child of the main PDE page, so 
if you click on it, chances are it was not an accident. In addition, loading of 
external plug-ins has been improved (should take less).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="298" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>PDE Dependancies has performance problems (1GFOGI8)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Click on the dependancies in the PDE editor for a plugin.xml file takes too long (around 5 seconds depending on how many dependancies)

NOTES:
PRODUCT VERSION:
Eclipse SDK 0.125
J9 06142001


Moving to PDE UI.
This has been fixed in drivers &gt; 20020122</WithStack>
    <WithOutStack>Click on the dependancies in the PDE editor for a plugin.xml file takes too long (around 5 seconds depending on how many dependancies)

NOTES:
PRODUCT VERSION:
Eclipse SDK 0.125
J9 06142001


Moving to PDE UI.
This has been fixed in drivers &gt; 20020122</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="299" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="6496" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Refactoring classes does not effect plug-in manifest (1GFZKQT)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Using refractoring to change the name of the Plugin subclass does not change the name
in the plugin manifest.

NOTES:
PRODUCT VERSION:

Eclipse 0.9


Moving to PDE UI.


*** This bug has been marked as a duplicate of 6496 ***</WithStack>
    <WithOutStack>Using refractoring to change the name of the Plugin subclass does not change the name
in the plugin manifest.

NOTES:
PRODUCT VERSION:

Eclipse 0.9


Moving to PDE UI.


*** This bug has been marked as a duplicate of 6496 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="300" />
    <CreationDate amount="2001-10-10 21:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Multiple save in menu (1GG1GKG)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1) Create a Plugin Project.</Line>
          <Line>2) Open plugin.xml.</Line>
          <Line>3) Click on Extension Points tab.</Line>
          <Line>4) Do a right in the center of large blank area under Extension Point Usage.</Line>
          <Line>Your menu have one save item.</Line>
          <Line>5) Redo a right in the center of large blank area under Extension Point Usage.</Line>
          <Line>Your menu have two save items.</Line>
          <Line>6) Redo a right in the center of large blank area under Extension Point Usage.</Line>
          <Line>Your menu have three save items.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I have multiple save item in menu when i do a right click.

Step to reproduce :
	1) Create a Plugin Project.
	2) Open plugin.xml.
	3) Click on Extension Points tab.
	4) Do a right in the center of large blank area under Extension Point Usage.
		Your menu have one save item.
	5) Redo a right in the center of large blank area under Extension Point Usage.
		Your menu have two save items.
	6) Redo a right in the center of large blank area under Extension Point Usage.
		Your menu have three save items.

NOTES:
PRODUCT VERSION:
build 0.125


This problem is fairly simple to fix - the pop-up menu was not cleared before
contributing to it, so it kept accumulating actions between invocations.</WithStack>
    <WithOutStack>I have multiple save item in menu when i do a right click.

Step to reproduce :
	1) Create a Plugin Project.
	2) Open plugin.xml.
	3) Click on Extension Points tab.
	4) Do a right in the center of large blank area under Extension Point Usage.
		Your menu have one save item.
	5) Redo a right in the center of large blank area under Extension Point Usage.
		Your menu have two save items.
	6) Redo a right in the center of large blank area under Extension Point Usage.
		Your menu have three save items.

NOTES:
PRODUCT VERSION:
build 0.125


This problem is fairly simple to fix - the pop-up menu was not cleared before
contributing to it, so it kept accumulating actions between invocations.</WithOutStack>
  </Bug>
</infozilla-output>

