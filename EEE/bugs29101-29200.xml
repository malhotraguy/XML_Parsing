<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="29101" />
    <CreationDate amount="2003-01-07 13:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New workspace preferences have slower performance</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: 2.1 M4

The changes to put workspace description settings in the preference store has a
performance effect on the build/notification cycle.  For a simple change
(editing a file), 6.15% of the time is in
WorkspacePreferences.getSnapshotInterval.  3.03% of the time is in
WorkspacePreferences.isAutoBuilding.  This is because it has to extract the
preference from the store, and convert the object to either a boolean or int,
which requires string parsing, etc.
Fixed.  I have deleted isAutobuilding and getSnapshotInterval from
WorkspacePreferences.  It will now call the super implementation, which is a
simple accessor.  The constructor initializes the values "cached" in the fields
of the superclass from the values in the preference store.  setAutobuilding and
setSnapshotInterval propagate the new value to the superclass as well as adding
it to the preference store.  The net result is that the get methods are *much*
faster.   They no longer show up at all in a performance trace.
The problem is that now changes made directly to the preference store will not 
be seen by the Resources plug-in. The preference store would be written 
directly (without a call to #setDescription) when importing preferences.

I forgot (sorry, my big fault) to add it to the AutomatedTests suite, but there 
is a test class in org.eclipse.core.tests.internal.resources for 
WorkspacePreferences that is not passing anymore with the new code.

I think UI still has its own autoBuild preference, but that is not true for the 
fileStateLongevity - and importing it does not work anymore.

We could fix it using a PropertyChangeListener in the workspace preference 
class to watch for changes made by others.
Sorry, it is not file state longevity, it is the snapshot interval...
Thanks for pointing this out.  If you have a suggested patch that would be great...
Created attachment 3084
patches for core.resources and core.tests.resources

WorkspacePreferences adds a property change listener to our own preference
store to synchronize cached values with the new property values.

Updated test cases as well (added to the automated tests suite).

Caveat: does not remove property change listener on shutdown. Could do it if
needed.

John: please review/release. Thanks.
Thanks Rafael.  I have reviewed and released the patch.</WithStack>
    <WithOutStack>Build: 2.1 M4

The changes to put workspace description settings in the preference store has a
performance effect on the build/notification cycle.  For a simple change
(editing a file), 6.15% of the time is in
WorkspacePreferences.getSnapshotInterval.  3.03% of the time is in
WorkspacePreferences.isAutoBuilding.  This is because it has to extract the
preference from the store, and convert the object to either a boolean or int,
which requires string parsing, etc.
Fixed.  I have deleted isAutobuilding and getSnapshotInterval from
WorkspacePreferences.  It will now call the super implementation, which is a
simple accessor.  The constructor initializes the values "cached" in the fields
of the superclass from the values in the preference store.  setAutobuilding and
setSnapshotInterval propagate the new value to the superclass as well as adding
it to the preference store.  The net result is that the get methods are *much*
faster.   They no longer show up at all in a performance trace.
The problem is that now changes made directly to the preference store will not 
be seen by the Resources plug-in. The preference store would be written 
directly (without a call to #setDescription) when importing preferences.

I forgot (sorry, my big fault) to add it to the AutomatedTests suite, but there 
is a test class in org.eclipse.core.tests.internal.resources for 
WorkspacePreferences that is not passing anymore with the new code.

I think UI still has its own autoBuild preference, but that is not true for the 
fileStateLongevity - and importing it does not work anymore.

We could fix it using a PropertyChangeListener in the workspace preference 
class to watch for changes made by others.
Sorry, it is not file state longevity, it is the snapshot interval...
Thanks for pointing this out.  If you have a suggested patch that would be great...
Created attachment 3084
patches for core.resources and core.tests.resources

WorkspacePreferences adds a property change listener to our own preference
store to synchronize cached values with the new property values.

Updated test cases as well (added to the automated tests suite).

Caveat: does not remove property change listener on shutdown. Could do it if
needed.

John: please review/release. Thanks.
Thanks Rafael.  I have reviewed and released the patch.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29102" />
    <CreationDate amount="2003-01-07 13:32:00 -0500" />
    <DupId amount="27136" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>build.xml missing ../org.eclipse.help.ui.win32/bin from classpath</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="759" end="790" />
        <code>bootclasspath="${bootclasspath}</code>
      </source_code>
      <source_code type="assignment">
        <location start="793" end="873" />
        <code>classpath="../org.eclipse.core.runtime/runtime.jar;../org.eclipse.text/text.jar;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>2.1 M4 build.

In my workspace I have (among other things) the following projects:
org.eclipse.help.ui that is a plugin,
org.eclipse.help.ui.win32 that is a fragment for org.eclipse.help.ui plugin,
org.eclipse.help.test that is a plugin projects containing tests for classes in 
both org.eclipse.help.ui org.eclipse.help.ui.win32 projects.

Right-clicking org.eclipse.help.tests/plugin.xml and choosing "Create plug-in 
JARs" generates a build.xml that than fails when compiling classes for 
org.eclipse.help.tests\helptests.jar.

The classpath in the build.xml (below) does not contain reference 
to ../org.eclipse.help.ui.win32/bin.

		&lt;javac destdir="${temp.folder}/helptests.jar.bin" 
failonerror="false" verbose="true" debug="on" includeAntRuntime="no" 
bootclasspath="${bootclasspath}" 
classpath="../org.eclipse.core.runtime/runtime.jar;../org.eclipse.text/text.jar;
../org.eclipse.help/help.jar;../org.eclipse.help.appserver/appserver.jar;../org.
eclipse.swt/bin;../org.eclipse.ui.win32/workbenchwin32.jar;../org.apache.xerces/
xercesImpl.jar;../org.eclipse.tomcat/tomcat-
http11.jar;../org.eclipse.tomcat/naming-common.jar;../org.eclipse.swt/ws/
${ws}/swt.jar;../org.eclipse.tomcat/tomcatwrapper.jar;../org.eclipse.ui.workbenc
h.texteditor/bin;../org.eclipse.help/bin;../org.apache.xerces/bin;../org.eclipse
.help.ui.win32/helpworkbench.jar;../org.eclipse.tomcat/bin;../org.eclipse.ui.vie
ws/bin;../org.eclipse.jface.text/bin;../org.eclipse.ui/bin;../org.eclipse.tomcat
/jasper-
runtime.jar;../org.junit/junit.jar;../org.eclipse.help.appserver/bin;../org.ecli
pse.ui.views/views.jar;../org.eclipse.tomcat/commons-
logging.jar;../org.eclipse.tomcat/servlets-
default.jar;../org.eclipse.tomcat/catalina.jar;../org.eclipse.text/bin;../org.ec
lipse.tomcat/tomcat-util.jar;../org.eclipse.tomcat/jasper-
compiler.jar;../org.eclipse.help.ui.win32/helpworkbenchwin32.jar;../org.eclipse.
tomcat/servlets-
manager.jar;../org.eclipse.jface.text/jfacetext.jar;../org.eclipse.swt.win32/ws/
${ws}/swt.jar;../org.eclipse.ui.workbench/workbench.jar;../org.junit/bin;../org.
eclipse.tomcat/tomcat-
coyote.jar;../org.eclipse.ui.win32/workbench.jar;../org.eclipse.core.resources/b
in;../org.eclipse.tomcat/naming-
resources.jar;../org.eclipse.core.runtime/bin;../org.eclipse.tomcat/servlets-
common.jar;../org.eclipse.jface/jface.jar;../org.eclipse.ui.editors/bin;../org.e
clipse.tomcat/servlet.jar;../org.eclipse.core.resources.win32/resources.jar;../o
rg.eclipse.core.boot/bin;../org.eclipse.help.ui/bin;../org.eclipse.help.ui/helpw
orkbench.jar;../org.eclipse.tomcat/naming-
factory.jar;../org.eclipse.ui/ui.jar;../org.eclipse.core.resources/resources.jar
;../org.eclipse.tomcat/servlets-
invoker.jar;../org.eclipse.ui.workbench.texteditor/texteditor.jar;../org.eclipse
.ui.editors/editors.jar;../org.eclipse.ui.workbench/bin;../org.eclipse.jface/bin
;../org.eclipse.tomcat/bootstrap.jar;../org.eclipse.core.boot/boot.jar;../org.ec
lipse.tomcat/servlets-webdav.jar;../org.eclipse.tomcat/jakarta-regexp-
1.2.jar;../org.apache.xerces/xmlParserAPIs.jar"&gt;
Fixed by fix for bug 27136.
Marking as duplicate.

*** This bug has been marked as a duplicate of 27136 ***</WithStack>
    <WithOutStack>2.1 M4 build.

In my workspace I have (among other things) the following projects:
org.eclipse.help.ui that is a plugin,
org.eclipse.help.ui.win32 that is a fragment for org.eclipse.help.ui plugin,
org.eclipse.help.test that is a plugin projects containing tests for classes in 
both org.eclipse.help.ui org.eclipse.help.ui.win32 projects.

Right-clicking org.eclipse.help.tests/plugin.xml and choosing "Create plug-in 
JARs" generates a build.xml that than fails when compiling classes for 
org.eclipse.help.tests\helptests.jar.

The classpath in the build.xml (below) does not contain reference 
to ../org.eclipse.help.ui.win32/bin.

		&lt;javac destdir="${temp.folder}/helptests.jar.bin" 
failonerror="false" verbose="true" debug="on" includeAntRuntime="no" 
bootclasspath="${bootclasspath}" 
classpath="../org.eclipse.core.runtime/runtime.jar;../org.eclipse.text/text.jar;
../org.eclipse.help/help.jar;../org.eclipse.help.appserver/appserver.jar;../org.
eclipse.swt/bin;../org.eclipse.ui.win32/workbenchwin32.jar;../org.apache.xerces/
xercesImpl.jar;../org.eclipse.tomcat/tomcat-
http11.jar;../org.eclipse.tomcat/naming-common.jar;../org.eclipse.swt/ws/
${ws}/swt.jar;../org.eclipse.tomcat/tomcatwrapper.jar;../org.eclipse.ui.workbenc
h.texteditor/bin;../org.eclipse.help/bin;../org.apache.xerces/bin;../org.eclipse
.help.ui.win32/helpworkbench.jar;../org.eclipse.tomcat/bin;../org.eclipse.ui.vie
ws/bin;../org.eclipse.jface.text/bin;../org.eclipse.ui/bin;../org.eclipse.tomcat
/jasper-
runtime.jar;../org.junit/junit.jar;../org.eclipse.help.appserver/bin;../org.ecli
pse.ui.views/views.jar;../org.eclipse.tomcat/commons-
logging.jar;../org.eclipse.tomcat/servlets-
default.jar;../org.eclipse.tomcat/catalina.jar;../org.eclipse.text/bin;../org.ec
lipse.tomcat/tomcat-util.jar;../org.eclipse.tomcat/jasper-
compiler.jar;../org.eclipse.help.ui.win32/helpworkbenchwin32.jar;../org.eclipse.
tomcat/servlets-
manager.jar;../org.eclipse.jface.text/jfacetext.jar;../org.eclipse.swt.win32/ws/
${ws}/swt.jar;../org.eclipse.ui.workbench/workbench.jar;../org.junit/bin;../org.
eclipse.tomcat/tomcat-
coyote.jar;../org.eclipse.ui.win32/workbench.jar;../org.eclipse.core.resources/b
in;../org.eclipse.tomcat/naming-
resources.jar;../org.eclipse.core.runtime/bin;../org.eclipse.tomcat/servlets-
common.jar;../org.eclipse.jface/jface.jar;../org.eclipse.ui.editors/bin;../org.e
clipse.tomcat/servlet.jar;../org.eclipse.core.resources.win32/resources.jar;../o
rg.eclipse.core.boot/bin;../org.eclipse.help.ui/bin;../org.eclipse.help.ui/helpw
orkbench.jar;../org.eclipse.tomcat/naming-
factory.jar;../org.eclipse.ui/ui.jar;../org.eclipse.core.resources/resources.jar
;../org.eclipse.tomcat/servlets-
invoker.jar;../org.eclipse.ui.workbench.texteditor/texteditor.jar;../org.eclipse
.ui.editors/editors.jar;../org.eclipse.ui.workbench/bin;../org.eclipse.jface/bin
;../org.eclipse.tomcat/bootstrap.jar;../org.eclipse.core.boot/boot.jar;../org.ec
lipse.tomcat/servlets-webdav.jar;../org.eclipse.tomcat/jakarta-regexp-
1.2.jar;../org.apache.xerces/xmlParserAPIs.jar"&gt;
Fixed by fix for bug 27136.
Marking as duplicate.

*** This bug has been marked as a duplicate of 27136 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29103" />
    <CreationDate amount="2003-01-07 13:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Releng" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>add link to downloads page in automated build email</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>From Dean:

"Now that the internal local mirror is gone we can put links in our build 
status emails so we can point right to the relevant test results and/or 
downloads page.

The server name is:

download.eclipse.org"
Fixed for builds &gt; 200301091600.  Projects with fix tagged with v20030109.</WithStack>
    <WithOutStack>From Dean:

"Now that the internal local mirror is gone we can put links in our build 
status emails so we can point right to the relevant test results and/or 
downloads page.

The server name is:

download.eclipse.org"
Fixed for builds &gt; 200301091600.  Projects with fix tagged with v20030109.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29104" />
    <CreationDate amount="2003-01-07 13:56:00 -0500" />
    <DupId amount="28228" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>M4 Workbench appears to lock up after build</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Since upgrading to M4, I have not been able to perform a 'Project...', 'build
all', or 'build project'.  What appears to happen is, the source files get
compiled correctly, then the gui appers to 'hang'.  CPU resources spike to 100%
utilization and the gui will no longer redraw/repaint regardless of how long you
let it run.  I've left it running over night and it was still locked up the next
morning.  I have noticed that the underlying JVM goes to 100% cpu utilization
and slowly consumes memory.  For example, at the point that the workbench
freezes, the JVM may only be consuming about 180Mb ram, but as time passes, the
consumption increases by about 1mb per minute up to a maximum of about 280Mb
ram.  I have tried to isolate the JVM by trying three different SDKs: IBM 1.3.1
sp3, Sun 1.3.1_06, and Sun 1.4.1.  All do exactly the same thing.

The only way to recover is to kill the Java thread that is consuming all the CPU
and memory resources, unfortunately, in doing so, I get no .log to review or
attach here.

My environment is as follows:  PIII-750Mhz, 512Mb ram, Slackware 8.1 w/ 2.4.20
kernel (backing up to 2.4.18 kernel revision proves fruitless), DropLine Gnome 2.0

I can easily reproduce this.


*** This bug has been marked as a duplicate of 28228 ***</WithStack>
    <WithOutStack>Since upgrading to M4, I have not been able to perform a 'Project...', 'build
all', or 'build project'.  What appears to happen is, the source files get
compiled correctly, then the gui appers to 'hang'.  CPU resources spike to 100%
utilization and the gui will no longer redraw/repaint regardless of how long you
let it run.  I've left it running over night and it was still locked up the next
morning.  I have noticed that the underlying JVM goes to 100% cpu utilization
and slowly consumes memory.  For example, at the point that the workbench
freezes, the JVM may only be consuming about 180Mb ram, but as time passes, the
consumption increases by about 1mb per minute up to a maximum of about 280Mb
ram.  I have tried to isolate the JVM by trying three different SDKs: IBM 1.3.1
sp3, Sun 1.3.1_06, and Sun 1.4.1.  All do exactly the same thing.

The only way to recover is to kill the Java thread that is consuming all the CPU
and memory resources, unfortunately, in doing so, I get no .log to review or
attach here.

My environment is as follows:  PIII-750Mhz, 512Mb ram, Slackware 8.1 w/ 2.4.20
kernel (backing up to 2.4.18 kernel revision proves fruitless), DropLine Gnome 2.0

I can easily reproduce this.


*** This bug has been marked as a duplicate of 28228 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29105" />
    <CreationDate amount="2003-01-07 14:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Intertype declaration exceptions are not checked at compile time</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="class">
        <location start="301" end="377" />
        <code>class Foo {
  public static void main(String args[]) {
    Foo.bomb();
  }
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="393" end="482" />
        <code>public static void Foo.bomb() throws Exception {
    throw new Exception("KABOOM");
  }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="900" end="949" />
        <code>Modifiers Type TypePattern . Id(Formals) { Body }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I'm using ajc 1.1b2 (the Version select box on this bug page only lets me select "unspecified").

If I have an intertype method declaration that throws a checked exception, and then call it without handing that exception, ajc will not complain, but the exception will be thrown at runtime.  Example:

class Foo {
  public static void main(String args[]) {
    Foo.bomb();
  }
}

aspect Bomb {
  public static void Foo.bomb() throws Exception {
    throw new Exception("KABOOM");
  }
}

Compiling these two files with ajc produces no compilation errors.
If instead I define bomb() directly in Foo, ajc complains as it should:

/home/dougo/daj/scratch/Foo.java:3: Unhandled exception type java.lang.Exception

I notice that the documentation for intertype declarations (member introductions) says:
http://dev.eclipse.org/viewcvs/indextech.cgi/~checkout~/aspectj-home/doc/progguide/apbs04.html#d0e5340

Modifiers Type TypePattern . Id(Formals) { Body }

Does this mean that "throws Exception" is not (yet) supported?  Or just a documentation oversight?

--Doug
fixed in current cvs tree, added as testcase to 
tests/bugs/ExceptionsOnInters.java

BTW - Having both this bug and 29106 both submitted was very helpful even 
though they were marked as duplicates are examining the root cause.
*** Bug 29106 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>I'm using ajc 1.1b2 (the Version select box on this bug page only lets me select "unspecified").

If I have an intertype method declaration that throws a checked exception, and then call it without handing that exception, ajc will not complain, but the exception will be thrown at runtime.  Example:

class Foo {
  public static void main(String args[]) {
    Foo.bomb();
  }
}

aspect Bomb {
  public static void Foo.bomb() throws Exception {
    throw new Exception("KABOOM");
  }
}

Compiling these two files with ajc produces no compilation errors.
If instead I define bomb() directly in Foo, ajc complains as it should:

/home/dougo/daj/scratch/Foo.java:3: Unhandled exception type java.lang.Exception

I notice that the documentation for intertype declarations (member introductions) says:
http://dev.eclipse.org/viewcvs/indextech.cgi/~checkout~/aspectj-home/doc/progguide/apbs04.html#d0e5340

Modifiers Type TypePattern . Id(Formals) { Body }

Does this mean that "throws Exception" is not (yet) supported?  Or just a documentation oversight?

--Doug
fixed in current cvs tree, added as testcase to 
tests/bugs/ExceptionsOnInters.java

BTW - Having both this bug and 29106 both submitted was very helpful even 
though they were marked as duplicates are examining the root cause.
*** Bug 29106 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29106" />
    <CreationDate amount="2003-01-07 14:26:00 -0500" />
    <DupId amount="29105" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>ajc sometimes thinks catch blocks are unreachable</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="class">
        <location start="259" end="414" />
        <code>class Foo {
  public static void main(String args[]) {
    try {
      Foo.bomb();
    } catch (BombException e) {
      System.err.println(e);
    }
  }
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="430" end="527" />
        <code>public static void Foo.bomb() throws BombException {
    throw new BombException("KABOOM");
  }</code>
      </source_code>
      <source_code type="class">
        <location start="531" end="637" />
        <code>class BombException extends Exception {
  public BombException(String message) {
    super(message);
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I'm using ajc 1.1b2.  This bug is related to 29105 but I thought it deserved its own report.

If put a try/catch handler around an invocation of an intertype declaration that throws a custom exception class, ajc claims the catch block will never be reached:

class Foo {
  public static void main(String args[]) {
    try {
      Foo.bomb();
    } catch (BombException e) {
      System.err.println(e);
    }
  }
}

aspect Bomb {
  public static void Foo.bomb() throws BombException {
    throw new BombException("KABOOM");
  }
}

class BombException extends Exception {
  public BombException(String message) {
    super(message);
  }
}

/home/dougo/daj/scratch/Foo.java:5: Unreachable catch block

If I change "catch (BombException e)" to "catch (Exception e)", it compiles and runs as expected.

--Doug
This is the same bug as 29105.  If exceptions are ignored on inter-type 
declarations then they won't be visible to the flow-analysis pass.

*** This bug has been marked as a duplicate of 2105 ***
need to fix duplicate
getting the duplicate bug right

*** This bug has been marked as a duplicate of 29105 ***</WithStack>
    <WithOutStack>I'm using ajc 1.1b2.  This bug is related to 29105 but I thought it deserved its own report.

If put a try/catch handler around an invocation of an intertype declaration that throws a custom exception class, ajc claims the catch block will never be reached:

class Foo {
  public static void main(String args[]) {
    try {
      Foo.bomb();
    } catch (BombException e) {
      System.err.println(e);
    }
  }
}

aspect Bomb {
  public static void Foo.bomb() throws BombException {
    throw new BombException("KABOOM");
  }
}

class BombException extends Exception {
  public BombException(String message) {
    super(message);
  }
}

/home/dougo/daj/scratch/Foo.java:5: Unreachable catch block

If I change "catch (BombException e)" to "catch (Exception e)", it compiles and runs as expected.

--Doug
This is the same bug as 29105.  If exceptions are ignored on inter-type 
declarations then they won't be visible to the flow-analysis pass.

*** This bug has been marked as a duplicate of 2105 ***
need to fix duplicate
getting the duplicate bug right

*** This bug has been marked as a duplicate of 29105 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29107" />
    <CreationDate amount="2003-01-07 14:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Preferences] Error thrown in PreferencePage.performOk/Apply/Cancel locks Eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="727" end="821" />
        <code>public boolean performOk() {
        throw new NoSuchMethodError("No way out!");
      }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="822" end="920" />
        <code>public boolean performCancel() {
        throw new NoSuchMethodError("No way out!");
      }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. create a new plugin project containing a preferences page.</Line>
          <Line>2. Override methods as follows:</Line>
          <Line />
          <Line />
          <Line>3. Run the plugin and go to the preferences page.</Line>
          <Line>4. Try to exit the preferences pages or eclipse</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>An error thrown inside the overriden methods performOk and performCancel (and performApply) in a PreferencesPage will cause Eclipse to run into a deadlock as soon as the user displays that page. 

Imagine a new plugin developed using the latest version of the eclipse libraries using methods that did not exist in previous versions. Running it on an older version can lead to NoSuchMethodErrors (that's what happened to me). Imagine those errors in performOk and performCancel on a PreferencesPage. The Error will not be caught and there is no way for the user to exit the preferences or eclipse without killing it.

Reproduction:
 1. create a new plugin project containing a preferences page.
 2. Override methods as follows:
      public boolean performOk() {
        throw new NoSuchMethodError("No way out!");
      }
      public boolean performCancel() {
        throw new NoSuchMethodError("No way out!");
      }
 3. Run the plugin and go to the preferences page.
 4. Try to exit the preferences pages or eclipse

Possible solution:
  Catch any throwable when calling those methods from the environment and report an error message to the user when the method throws any. Exit the preferences anyway (or let the user decide what to do).

This problem has been reproduced on 2.1M3 and 2.1M4.
Looks like we need another SafeRunnable here.
Fix needs to be made at the JFace level - fix to Bug 29163 required.
Added a SafeRunnable for cancel so that the dialog can be closed.
Marking closed</WithStack>
    <WithOutStack>An error thrown inside the overriden methods performOk and performCancel (and performApply) in a PreferencesPage will cause Eclipse to run into a deadlock as soon as the user displays that page. 

Imagine a new plugin developed using the latest version of the eclipse libraries using methods that did not exist in previous versions. Running it on an older version can lead to NoSuchMethodErrors (that's what happened to me). Imagine those errors in performOk and performCancel on a PreferencesPage. The Error will not be caught and there is no way for the user to exit the preferences or eclipse without killing it.

Reproduction:
 1. create a new plugin project containing a preferences page.
 2. Override methods as follows:
      public boolean performOk() {
        throw new NoSuchMethodError("No way out!");
      }
      public boolean performCancel() {
        throw new NoSuchMethodError("No way out!");
      }
 3. Run the plugin and go to the preferences page.
 4. Try to exit the preferences pages or eclipse

Possible solution:
  Catch any throwable when calling those methods from the environment and report an error message to the user when the method throws any. Exit the preferences anyway (or let the user decide what to do).

This problem has been reproduced on 2.1M3 and 2.1M4.
Looks like we need another SafeRunnable here.
Fix needs to be made at the JFace level - fix to Bug 29163 required.
Added a SafeRunnable for cancel so that the dialog can be closed.
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29108" />
    <CreationDate amount="2003-01-07 15:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Update manager should do nothing if we launch eclipse with -plugins</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When self-hosting, launching a runtime workbench takes a long time if the 
target platform is WSADIE.  This is partially attributed to the fact that 
Update manager is parsing all the features upon startup.
So when PDE launches eclipse with the -plugins argument, update manager should 
do nothing.
Note that it should not be mixed with the presence of -dev argument. In feature 
selfhosting mode (the one added recently to allow update team to selfhost), we 
use -dev but also -install and -update arguments. Hence the presence of -dev is 
not an indication that reconciliation is not needed. As Wassim pointed out, 
only -plugins argument indicates that plugin path is delivered directly and no 
plugin path computation from features is needed.
Action Taken: check reconciliation is not triggered if -plugins is passed as an
argument. We may face the NPE issue from UI and AboutDialog again.
Action Plan : investigate
Good point. We need to investigate if we could find a way to pass you all the 
information you need so that you don't need to discover it.

Maybe we should pass you the features as well (-features &lt;feature file&gt;)? That 
way, you will have your list of features and the list of plug-ins and would not 
need to compute anything.
Fixed. PDE now uses -configuration and -feature instead of deprecated -plugins/-boot</WithStack>
    <WithOutStack>When self-hosting, launching a runtime workbench takes a long time if the 
target platform is WSADIE.  This is partially attributed to the fact that 
Update manager is parsing all the features upon startup.
So when PDE launches eclipse with the -plugins argument, update manager should 
do nothing.
Note that it should not be mixed with the presence of -dev argument. In feature 
selfhosting mode (the one added recently to allow update team to selfhost), we 
use -dev but also -install and -update arguments. Hence the presence of -dev is 
not an indication that reconciliation is not needed. As Wassim pointed out, 
only -plugins argument indicates that plugin path is delivered directly and no 
plugin path computation from features is needed.
Action Taken: check reconciliation is not triggered if -plugins is passed as an
argument. We may face the NPE issue from UI and AboutDialog again.
Action Plan : investigate
Good point. We need to investigate if we could find a way to pass you all the 
information you need so that you don't need to discover it.

Maybe we should pass you the features as well (-features &lt;feature file&gt;)? That 
way, you will have your list of features and the list of plug-ins and would not 
need to compute anything.
Fixed. PDE now uses -configuration and -feature instead of deprecated -plugins/-boot</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29109" />
    <CreationDate amount="2003-01-07 15:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Decorators] Need collision detection for decorators with the same id</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The DecoratorsRegistryReader should do a check to see if a new decorator 
definition has the same id as a previous one. As we have now added API that 
looks up base on id uniqueness is a requirement.
Also note the old and lightweight must be in the same name space for uniqueness.
Kevin do you mean that I should test for backwards compatibility or something 
else?
Fixed in build &gt;20030109
I was just documenting the comment we had made when discussing it:  a 
lightweight and a 'classic' decorator can't have the same ID (I wasn't sure if 
they were stored in the one registry or two, and if the latter we'd need to 
check both when adding to one).
Good - thats the way I implemented it. 
Marking closed</WithStack>
    <WithOutStack>The DecoratorsRegistryReader should do a check to see if a new decorator 
definition has the same id as a previous one. As we have now added API that 
looks up base on id uniqueness is a requirement.
Also note the old and lightweight must be in the same name space for uniqueness.
Kevin do you mean that I should test for backwards compatibility or something 
else?
Fixed in build &gt;20030109
I was just documenting the comment we had made when discussing it:  a 
lightweight and a 'classic' decorator can't have the same ID (I wasn't sure if 
they were stored in the one registry or two, and if the latter we'd need to 
check both when adding to one).
Good - thats the way I implemented it. 
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29110" />
    <CreationDate amount="2003-01-07 15:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>RFE: Disable line splitting in the code formatter</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Currently, setting the "maximum line length" to 0 (in the Java &gt; Code Formatter 
&gt; Line Splitting preferences) causes the formatter to unwrap all lines when 
formatting.  I would like an option to have the formatter leave the current 
wrapping intact.
We need to clear 2.1 bug reports that won't be addressed before 2.1. The new 
implementation is still in progress. Therefore we cannot include it for 2.1. 
Not enough testing and we need to polish the preferences. This will be address 
for 2.2 as stated in the JDT/Core plan.
Changed milestone.
Resurrecting for 3.0
Reopen for 3.0 consideration.
This is addressed in the new formatter by specifying no alignment.
Fixed and released in HEAD.
Regression test added.
Verified.
Would like to be able to use this feature, but I don't understand the comment. 
"No alignment"?  Where is that set?

I want to be able to leave the existing line wrapping in place - neither split
nor  join existing lines.

More to the point, what I'd really like is the option to tell Eclipse that I
want it to split lines, according to the pre-specified rules, as necessary, but
not to join them.  That way I could 'correct' its choices as I see fit as long
as I ensure that I don't go beyond the wrapping threshold.</WithStack>
    <WithOutStack>Currently, setting the "maximum line length" to 0 (in the Java &gt; Code Formatter 
&gt; Line Splitting preferences) causes the formatter to unwrap all lines when 
formatting.  I would like an option to have the formatter leave the current 
wrapping intact.
We need to clear 2.1 bug reports that won't be addressed before 2.1. The new 
implementation is still in progress. Therefore we cannot include it for 2.1. 
Not enough testing and we need to polish the preferences. This will be address 
for 2.2 as stated in the JDT/Core plan.
Changed milestone.
Resurrecting for 3.0
Reopen for 3.0 consideration.
This is addressed in the new formatter by specifying no alignment.
Fixed and released in HEAD.
Regression test added.
Verified.
Would like to be able to use this feature, but I don't understand the comment. 
"No alignment"?  Where is that set?

I want to be able to leave the existing line wrapping in place - neither split
nor  join existing lines.

More to the point, what I'd really like is the option to tell Eclipse that I
want it to split lines, according to the pre-specified rules, as necessary, but
not to join them.  That way I could 'correct' its choices as I see fit as long
as I ensure that I don't go beyond the wrapping threshold.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29111" />
    <CreationDate amount="2003-01-07 15:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>Inter-type field decs of array types can't put brackets after id</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="37" end="50" />
        <code>class Foo { }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="REOPENED" />
    <resolution amount="" />
    <WithStack>The following code doesn't compile:

class Foo { }
aspect Bar {
  int Foo.bar[];
}

instead, programmers are forced to use int[] Foo.bar.  This is not particularly 
Java language compatible.
This syntax might be supported in the future, but it is not considered legal 
syntax in AspectJ-1.1.  Use instead:
int[] Foo.bar;

To be considered only if a working tested patch is submitted.
marking as info because this clairifies the AspectJ-1.1 language
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.</WithStack>
    <WithOutStack>The following code doesn't compile:

class Foo { }
aspect Bar {
  int Foo.bar[];
}

instead, programmers are forced to use int[] Foo.bar.  This is not particularly 
Java language compatible.
This syntax might be supported in the future, but it is not considered legal 
syntax in AspectJ-1.1.  Use instead:
int[] Foo.bar;

To be considered only if a working tested patch is submitted.
marking as info because this clairifies the AspectJ-1.1 language
LATER/REMIND bugs are being automatically reopened as P5 because the LATER and REMIND resolutions are deprecated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29112" />
    <CreationDate amount="2003-01-07 15:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add key binding to "open link" action in console</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>We should support a hot key for the "open link" action in the console - such as 
F3.
*** Bug 29150 has been marked as a duplicate of this bug. ***
I have a first pass of this working. I think we need to rework the action a 
little to only trace selection in the console. Otherwise you constantly have 
to reset the focus to the console for the hotkey to work.

Investigate: when you register an action with the keybinding service is it 
part of the contract to unregister on dispose?
Sorry still some minor tweaks needed with enablement.
Appears that the hot key is not active until you realize the popup menu for the 
first time.

As well there is the issue of having to use a actionDefinitionId defined in JDT 
UI land...see bug 24966.
Implemented in ConsoleView and KeyBindingFollowHyperlinkAction.
Please verify (DarinW).
Verified</WithStack>
    <WithOutStack>We should support a hot key for the "open link" action in the console - such as 
F3.
*** Bug 29150 has been marked as a duplicate of this bug. ***
I have a first pass of this working. I think we need to rework the action a 
little to only trace selection in the console. Otherwise you constantly have 
to reset the focus to the console for the hotkey to work.

Investigate: when you register an action with the keybinding service is it 
part of the contract to unregister on dispose?
Sorry still some minor tweaks needed with enablement.
Appears that the hot key is not active until you realize the popup menu for the 
first time.

As well there is the issue of having to use a actionDefinitionId defined in JDT 
UI land...see bug 24966.
Implemented in ConsoleView and KeyBindingFollowHyperlinkAction.
Please verify (DarinW).
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29113" />
    <CreationDate amount="2003-01-07 16:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>array initialization; ajc throws NullPointerException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="0" end="13" />
        <code>class Foo { }</code>
      </source_code>
      <source_code type="assignment">
        <location start="27" end="57" />
        <code>int[] Foo.bar = { 1, 2, 3 };</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>class Foo { }
aspect Bar {
  int[] Foo.bar = { 1, 2, 3 };
}

dro &lt;830&gt; % ajc Foo.java
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.codegen.CodeStream.newArray(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateAssignment(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.Assignment.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.ast.InterTypeFieldDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.Compiler.process(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.AjCompiler.process(Unknown Source)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Unknown Source)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(Unknown Source)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(Unknown Source)
	at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(Unknown Source)
	at org.aspectj.tools.ajc.Main.run(Unknown Source)
	at org.aspectj.tools.ajc.Main.runMain(Unknown Source)
	at org.aspectj.tools.ajc.Main.main(Unknown Source)
/home/dougo/daj/test/array/Foo.java:0: Internal compiler error
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.codegen.CodeStream.newArray(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateAssignment(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.Assignment.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.ast.InterTypeFieldDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.Compiler.process(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.AjCompiler.process(Unknown Source)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Unknown Source)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(Unknown Source)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(Unknown Source)
	at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(Unknown Source)
	at org.aspectj.tools.ajc.Main.run(Unknown Source)
	at org.aspectj.tools.ajc.Main.runMain(Unknown Source)
	at org.aspectj.tools.ajc.Main.main(Unknown Source)


!! no source information available !!
Exception thrown from AspectJ 1.1b2

This might be logged as a bug already -- see the bug database at
  http://dev.eclipse.org (product: AspectJ, component: compiler)

Bugs for exceptions thrown have titles File:line from the top stack, 
e.g., "SomeFile.java:243"

If you don't find the exception below in a bug, please add a new bug
To make the bug a priority, please include a test program
that can reproduce this exception.
null
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.codegen.CodeStream.newArray(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateAssignment(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.Assignment.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.ast.InterTypeFieldDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.Compiler.process(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.AjCompiler.process(Unknown Source)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Unknown Source)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(Unknown Source)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(Unknown Source)
	at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(Unknown Source)
	at org.aspectj.tools.ajc.Main.run(Unknown Source)
	at org.aspectj.tools.ajc.Main.runMain(Unknown Source)
	at org.aspectj.tools.ajc.Main.main(Unknown Source)


1 fail|abort, 1 error
fixed in cvs, testcase in tests/bugs/InterFieldArray.java</WithStack>
    <WithOutStack>class Foo { }
aspect Bar {
  int[] Foo.bar = { 1, 2, 3 };
}

dro &lt;830&gt; % ajc Foo.java
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.codegen.CodeStream.newArray(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateAssignment(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.Assignment.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.ast.InterTypeFieldDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.Compiler.process(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.AjCompiler.process(Unknown Source)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Unknown Source)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(Unknown Source)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(Unknown Source)
	at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(Unknown Source)
	at org.aspectj.tools.ajc.Main.run(Unknown Source)
	at org.aspectj.tools.ajc.Main.runMain(Unknown Source)
	at org.aspectj.tools.ajc.Main.main(Unknown Source)
/home/dougo/daj/test/array/Foo.java:0: Internal compiler error
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.codegen.CodeStream.newArray(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateAssignment(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.Assignment.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.ast.InterTypeFieldDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.Compiler.process(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.AjCompiler.process(Unknown Source)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Unknown Source)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(Unknown Source)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(Unknown Source)
	at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(Unknown Source)
	at org.aspectj.tools.ajc.Main.run(Unknown Source)
	at org.aspectj.tools.ajc.Main.runMain(Unknown Source)
	at org.aspectj.tools.ajc.Main.main(Unknown Source)


!! no source information available !!
Exception thrown from AspectJ 1.1b2

This might be logged as a bug already -- see the bug database at
  http://dev.eclipse.org (product: AspectJ, component: compiler)

Bugs for exceptions thrown have titles File:line from the top stack, 
e.g., "SomeFile.java:243"

If you don't find the exception below in a bug, please add a new bug
To make the bug a priority, please include a test program
that can reproduce this exception.
null
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.codegen.CodeStream.newArray(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.ArrayInitializer.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference.generateAssignment(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.Assignment.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.ast.InterTypeFieldDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(Unknown Source)
	at org.eclipse.jdt.internal.compiler.Compiler.process(Unknown Source)
	at org.aspectj.ajdt.internal.compiler.AjCompiler.process(Unknown Source)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Unknown Source)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(Unknown Source)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(Unknown Source)
	at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(Unknown Source)
	at org.aspectj.tools.ajc.Main.run(Unknown Source)
	at org.aspectj.tools.ajc.Main.runMain(Unknown Source)
	at org.aspectj.tools.ajc.Main.main(Unknown Source)


1 fail|abort, 1 error
fixed in cvs, testcase in tests/bugs/InterFieldArray.java</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29114" />
    <CreationDate amount="2003-01-07 16:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>ajc thinks an array intertype declaration is not an array</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="52" end="65" />
        <code>class Foo { }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="96" end="136" />
        <code>Foo.new(int[] bar) { this.bar = bar; }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>ajc 1.1b2.  This is probably related to bug 29113.

class Foo { }
aspect Bar {
  int[] Foo.bar;
  Foo.new(int[] bar) { this.bar = bar; }
}
/home/dougo/daj/test/array/Foo.java:4: Type mismatch: cannot convert from int[] to int
fixed in cvs, testcase in tests/bugs/InterFieldArrays.java</WithStack>
    <WithOutStack>ajc 1.1b2.  This is probably related to bug 29113.

class Foo { }
aspect Bar {
  int[] Foo.bar;
  Foo.new(int[] bar) { this.bar = bar; }
}
/home/dougo/daj/test/array/Foo.java:4: Type mismatch: cannot convert from int[] to int
fixed in cvs, testcase in tests/bugs/InterFieldArrays.java</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29115" />
    <CreationDate amount="2003-01-07 16:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Default PDE perspective does not show simple plugin and update site projects</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Using the PDE wizards (2.1M4) I created a simple plugin, a feature, and an 
update site. The plugin and update site do not show up in the default PDE 
Perspective's package explorer window, probably because they do not have Java 
natures. They do have PDE natures so it is strange not to have them show up in 
the PDE perspective. Here's the nature of the plugin:

	&lt;natures&gt;
		&lt;nature&gt;org.eclipse.pde.PluginNature&lt;/nature&gt;
	&lt;/natures&gt;

and here's the nature of the update site:

	&lt;natures&gt;
		&lt;nature&gt;org.eclipse.pde.UpdateSiteNature&lt;/nature&gt;
	&lt;/natures&gt;

If I go to the Window menu and open a Navigator view, or go to a different 
perspective then I can see the two projects of course. So there is a 
workaround, but the default behaviour is confusing.
You have correctly diagnosed the problem: Navigator is the only 'physical' view 
that shows the entire workspace. Other navigator-like views (such as Package 
Explorer) are free to filter out content that does not apply to the view (e.g. 
is not Java). Neither basic plugins nor update sites qualify as Java projects, 
and do not show up.

The current code in the repository (post-M4) shows that 'New' wizard for site 
project now switches to the Resource perspective, ensuring that the project is 
visible. It still does not solve the problem of flipping between the Navigator 
and the Package Explorer (to work on plug-ins and features). PDE cannot solve 
this problem - you need to file a defect against JDT asking to provide options 
to include other natures in Package Explorer.

The plug-in 'New' wizard is harder to handle using 'finalPerspective' attribute 
because the final perspective depends on the project nature. We want to edit in 
Java or PDE perspective for Java plugins, but use Resource perspective for non-
Java plug-ins. For this problem, we may need to show the Navigator view instead 
(this is not the ideal solution because it can be disorienting).
Is there some reason why PDE creates a feature with the java nature even 
though it contains no java code? If the answer is, 'so it will show up in the 
package explorer' then why not do the same for simple plugins and update 
sites? Here is the nature for a feature:

	&lt;natures&gt;
		&lt;nature&gt;org.eclipse.jdt.core.javanature&lt;/nature&gt;
		&lt;nature&gt;org.eclipse.pde.FeatureNature&lt;/nature&gt;
	&lt;/natures&gt;

PDE also adds the java builder even though it doesn't seem to be needed, at 
least with simple features like what I have:

	&lt;buildSpec&gt;
		&lt;buildCommand&gt;
			&lt;name&gt;org.eclipse.jdt.core.javabuilder&lt;/name&gt;
			&lt;arguments&gt;
			&lt;/arguments&gt;
		&lt;/buildCommand&gt;
		&lt;buildCommand&gt;
			&lt;name&gt;org.eclipse.pde.FeatureBuilder&lt;/name&gt;
			&lt;arguments&gt;
			&lt;/arguments&gt;
		&lt;/buildCommand&gt;
	&lt;/buildSpec&gt;

Actually, features CAN contain java code. Feature manifest can contain a 
declaration of an optional install handler (a Java class) that is loaded and 
calls during feature life cycles (install, update, enable/disable etc.). This 
is not a common scenario.

In contrast, non-Java plug-ins (for example, documentation plug-ins) NEVER 
contain any Java code and we could not use nature just for filtering reasons. 

Alson note that non-Java natures (PDE nature, Feature nature, Update Site 
natures) are actually required for registering builders. Builders are used to 
validate manifest files and generate error and warning markers if needed. This 
is their primary role: filtering based on natures is more like a bonus :-).
Not addressing in 2.1
This is addressed in 2.1 - Package Explorer can now show non-Java projects and 
resources.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Using the PDE wizards (2.1M4) I created a simple plugin, a feature, and an 
update site. The plugin and update site do not show up in the default PDE 
Perspective's package explorer window, probably because they do not have Java 
natures. They do have PDE natures so it is strange not to have them show up in 
the PDE perspective. Here's the nature of the plugin:

	&lt;natures&gt;
		&lt;nature&gt;org.eclipse.pde.PluginNature&lt;/nature&gt;
	&lt;/natures&gt;

and here's the nature of the update site:

	&lt;natures&gt;
		&lt;nature&gt;org.eclipse.pde.UpdateSiteNature&lt;/nature&gt;
	&lt;/natures&gt;

If I go to the Window menu and open a Navigator view, or go to a different 
perspective then I can see the two projects of course. So there is a 
workaround, but the default behaviour is confusing.
You have correctly diagnosed the problem: Navigator is the only 'physical' view 
that shows the entire workspace. Other navigator-like views (such as Package 
Explorer) are free to filter out content that does not apply to the view (e.g. 
is not Java). Neither basic plugins nor update sites qualify as Java projects, 
and do not show up.

The current code in the repository (post-M4) shows that 'New' wizard for site 
project now switches to the Resource perspective, ensuring that the project is 
visible. It still does not solve the problem of flipping between the Navigator 
and the Package Explorer (to work on plug-ins and features). PDE cannot solve 
this problem - you need to file a defect against JDT asking to provide options 
to include other natures in Package Explorer.

The plug-in 'New' wizard is harder to handle using 'finalPerspective' attribute 
because the final perspective depends on the project nature. We want to edit in 
Java or PDE perspective for Java plugins, but use Resource perspective for non-
Java plug-ins. For this problem, we may need to show the Navigator view instead 
(this is not the ideal solution because it can be disorienting).
Is there some reason why PDE creates a feature with the java nature even 
though it contains no java code? If the answer is, 'so it will show up in the 
package explorer' then why not do the same for simple plugins and update 
sites? Here is the nature for a feature:

	&lt;natures&gt;
		&lt;nature&gt;org.eclipse.jdt.core.javanature&lt;/nature&gt;
		&lt;nature&gt;org.eclipse.pde.FeatureNature&lt;/nature&gt;
	&lt;/natures&gt;

PDE also adds the java builder even though it doesn't seem to be needed, at 
least with simple features like what I have:

	&lt;buildSpec&gt;
		&lt;buildCommand&gt;
			&lt;name&gt;org.eclipse.jdt.core.javabuilder&lt;/name&gt;
			&lt;arguments&gt;
			&lt;/arguments&gt;
		&lt;/buildCommand&gt;
		&lt;buildCommand&gt;
			&lt;name&gt;org.eclipse.pde.FeatureBuilder&lt;/name&gt;
			&lt;arguments&gt;
			&lt;/arguments&gt;
		&lt;/buildCommand&gt;
	&lt;/buildSpec&gt;

Actually, features CAN contain java code. Feature manifest can contain a 
declaration of an optional install handler (a Java class) that is loaded and 
calls during feature life cycles (install, update, enable/disable etc.). This 
is not a common scenario.

In contrast, non-Java plug-ins (for example, documentation plug-ins) NEVER 
contain any Java code and we could not use nature just for filtering reasons. 

Alson note that non-Java natures (PDE nature, Feature nature, Update Site 
natures) are actually required for registering builders. Builders are used to 
validate manifest files and generate error and warning markers if needed. This 
is their primary role: filtering based on natures is more like a bonus :-).
Not addressing in 2.1
This is addressed in 2.1 - Package Explorer can now show non-Java projects and 
resources.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29116" />
    <CreationDate amount="2003-01-07 16:33:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>immutable tree in project set description</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Open a new workspace</Line>
          <Line>2) Switch to CVS perspective</Line>
          <Line>3) Connect to our CVS linux test server</Line>
          <Line>4) Checkout the project JFoo</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: 2.1 M4

1) Open a new workspace
2) Switch to CVS perspective
3) Connect to our CVS linux test server
4) Checkout the project JFoo

-&gt; There is an assertion failure in the log, because it is trying to modify the
tree while it is open (log attached)
Created attachment 2916
Log file showing stack trace
That last line should have said it's trying to modify the tree when it's closed.

Here is what appears to be happening:

- at end of checkout, CVS has a pre-autobuild listener to apply the changes from
the .vcm_meta file (this is an old project)

- this causes the java nature to be configured

- a side-effect of configuring the java nature is that it builds some projects

- at the end of the build, the tree is closed.

- further attempts to modify the tree after the build cause the failure.
Fixed.  Added and released regression test</WithStack>
    <WithOutStack>Build: 2.1 M4

1) Open a new workspace
2) Switch to CVS perspective
3) Connect to our CVS linux test server
4) Checkout the project JFoo

-&gt; There is an assertion failure in the log, because it is trying to modify the
tree while it is open (log attached)
Created attachment 2916
Log file showing stack trace
That last line should have said it's trying to modify the tree when it's closed.

Here is what appears to be happening:

- at end of checkout, CVS has a pre-autobuild listener to apply the changes from
the .vcm_meta file (this is an old project)

- this causes the java nature to be configured

- a side-effect of configuring the java nature is that it builds some projects

- at the end of the build, the tree is closed.

- further attempts to modify the tree after the build cause the failure.
Fixed.  Added and released regression test</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29117" />
    <CreationDate amount="2003-01-07 16:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[templates] add refactoring: singletonize</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="9">
      <source_code type="functiondef">
        <location start="210" end="257" />
        <code>private MySingleton() {
           }</code>
      </source_code>
      <source_code type="assignment">
        <location start="283" end="361" />
        <code>private static final MySingletonClass INSTANCE = new MySingleton();</code>
      </source_code>
      <source_code type="functiondef">
        <location start="397" end="494" />
        <code>public static MySingleton getInstance() {
               return INSTANCE;
           }</code>
      </source_code>
      <source_code type="multicomment">
        <location start="853" end="884" />
        <code>/** the singleton instance */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="937" end="1006" />
        <code>new ${enclosing_type}();</code>
      </source_code>
      <source_code type="multicomment">
        <location start="1007" end="1269" />
        <code>/**
	 * Returns the singleton instance (not necessarily be of this class
	 * unique - may come from a pool read GoF-book). 
	 * Return the singleton instance of this class (not necessarily be 
         *        unique - may come from a pool read GoF-book)
	 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1270" end="1346" />
        <code>public static final ${enclosing_type} getInstance() {
		return INSTANCE;
	}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="1347" end="1382" />
        <code>/**
	 * Default constructor.
	 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1414" end="1424" />
        <code>super();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="8">
        <Lines>
          <Line>1. add (or modify if already existing) a private default constructor</Line>
          <Line />
          <Line>2. add a member variable</Line>
          <Line />
          <Line>3. add a static getinstance method</Line>
          <Line />
          <Line>4. show preview</Line>
          <Line>done.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- give a preview</Line>
          <Line>- change occurrences of new Class() to use the singleton</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>add a refactoring menuitem to create a singleton from a class by:

say you right click the class MySingleton and select to singletonize it:

1. add (or modify if already existing) a private default constructor
           private MySingleton() {
           }
2. add a member variable
           private static final MySingletonClass INSTANCE = new MySingleton();
3. add a static getinstance method
           public static MySingleton getInstance() {
               return INSTANCE;
           }
4. show preview
done.

THANKS a 1000K !
What's about providing the code ;-). Without help this will very likely not be 
in 2.1
ok, here's a thought:  add the following template to the list of editor 
templates, and we can create singletons using code completion which is -almost- 
as good as refactoring :)

-----------8&lt;--------------8&lt;--------------------

	/** the singleton instance */
	private static final ${enclosing_type} INSTANCE = 
                                             new ${enclosing_type}();

	/**
	 * Returns the singleton instance (not necessarily be of this class
	 * unique - may come from a pool read GoF-book). 
	 * Return the singleton instance of this class (not necessarily be 
         *        unique - may come from a pool read GoF-book)
	 */
	public static final ${enclosing_type} getInstance() {
		return INSTANCE;
	}

	/**
	 * Default constructor.
	 */
	private ${enclosing_type}() {
		super();
	}
------------8&lt;--------------8&lt;---------------
Patrice,

what you provided in comment 2 is a template. We could add a template but that's
not a refactoring. This will not
- give a preview
- change occurrences of new Class() to use the singleton

Note: you can add the template yourself since templates is configurable.
Yes, you're absolutely right.  I just gave it to you as a workaround.  If and
when I come up with a real refactoring I'll come back to you.
reopen to reassing

.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.
I also would appreciate a refactoring for singleton instance usage or at least a template delivered. I offer my help if desired.
*** Bug 67192 has been marked as a duplicate of this bug. ***
Still no plans to do this. "Introduce Singleton" would most of the time not be a refactoring (as soon as you have two instantiations, it cannot be behavior-preserving). The main work can already be done with "Introduce Factory". The rest can easily be done manually.

Furthermore, there are multiple styles how singletons can be created - each with its own benefits and drawbacks. An editor template with your preferred style is the way to go!
*** Bug 302434 has been marked as a duplicate of this bug. ***
*** Bug 393000 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>add a refactoring menuitem to create a singleton from a class by:

say you right click the class MySingleton and select to singletonize it:

1. add (or modify if already existing) a private default constructor
           private MySingleton() {
           }
2. add a member variable
           private static final MySingletonClass INSTANCE = new MySingleton();
3. add a static getinstance method
           public static MySingleton getInstance() {
               return INSTANCE;
           }
4. show preview
done.

THANKS a 1000K !
What's about providing the code ;-). Without help this will very likely not be 
in 2.1
ok, here's a thought:  add the following template to the list of editor 
templates, and we can create singletons using code completion which is -almost- 
as good as refactoring :)

-----------8&lt;--------------8&lt;--------------------

	/** the singleton instance */
	private static final ${enclosing_type} INSTANCE = 
                                             new ${enclosing_type}();

	/**
	 * Returns the singleton instance (not necessarily be of this class
	 * unique - may come from a pool read GoF-book). 
	 * Return the singleton instance of this class (not necessarily be 
         *        unique - may come from a pool read GoF-book)
	 */
	public static final ${enclosing_type} getInstance() {
		return INSTANCE;
	}

	/**
	 * Default constructor.
	 */
	private ${enclosing_type}() {
		super();
	}
------------8&lt;--------------8&lt;---------------
Patrice,

what you provided in comment 2 is a template. We could add a template but that's
not a refactoring. This will not
- give a preview
- change occurrences of new Class() to use the singleton

Note: you can add the template yourself since templates is configurable.
Yes, you're absolutely right.  I just gave it to you as a workaround.  If and
when I come up with a real refactoring I'll come back to you.
reopen to reassing

.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.
I also would appreciate a refactoring for singleton instance usage or at least a template delivered. I offer my help if desired.
*** Bug 67192 has been marked as a duplicate of this bug. ***
Still no plans to do this. "Introduce Singleton" would most of the time not be a refactoring (as soon as you have two instantiations, it cannot be behavior-preserving). The main work can already be done with "Introduce Factory". The rest can easily be done manually.

Furthermore, there are multiple styles how singletons can be created - each with its own benefits and drawbacks. An editor template with your preferred style is the way to go!
*** Bug 302434 has been marked as a duplicate of this bug. ***
*** Bug 393000 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29118" />
    <CreationDate amount="2003-01-07 17:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>PDE feature.xml doesn't recognice "url" attribute of &lt;license&gt; tag</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>1. open feature.xml</Line>
          <Line>2. select "Source" page and check for valid "url" attribute in &lt;license&gt; tag</Line>
          <Line>3. select page "Information"</Line>
          <Line>4. choose section "License Agreement"</Line>
          <Line />
          <Line>--&gt; 1st error: recognize the field "Optional URL:" is empty although &lt;license&gt;</Line>
          <Line>tag has a valid "url" attribute</Line>
          <Line />
          <Line>5. enter url</Line>
          <Line>6. click apply</Line>
          <Line>7. save file</Line>
          <Line>8. switch to page "Source"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Please see bug #24635

I discovered that the PDE feature.xml removes the "url" attribute from 
the "license" tag in feature.xml if the plain text licence information is 
edited.

1. open feature.xml
2. select "Source" page and check for valid "url" attribute in &lt;license&gt; tag
3. select page "Information"
4. choose section "License Agreement"

--&gt; 1st error: recognize the field "Optional URL:" is empty although &lt;license&gt; 
tag has a valid "url" attribute

5. enter url
6. click apply
7. save file
8. switch to page "Source"

--&gt; 2nd error: existing attribute was removed
A valid bug. The feature model that supports feature editor was incorrectly 
using URL objects to capture the 'url' attribute value. They worked for 'real' 
URLs (those with a protocol like http://) but failed for relative addresses 
like:

&lt;license url="license.html"&gt;
   License Argeement.
&lt;/license&gt;

In that sense, the name of the attribute is probably not the most fortunate 
because strictly speaking all URLs must have a protocol part. Without it, the 
URL constructor was throwing a MalformedURLException that was silently ignored.

Fixed by using a String to capture attribute value. The fix will appear in the 
builds &gt;20020107.</WithStack>
    <WithOutStack>Please see bug #24635

I discovered that the PDE feature.xml removes the "url" attribute from 
the "license" tag in feature.xml if the plain text licence information is 
edited.

1. open feature.xml
2. select "Source" page and check for valid "url" attribute in &lt;license&gt; tag
3. select page "Information"
4. choose section "License Agreement"

--&gt; 1st error: recognize the field "Optional URL:" is empty although &lt;license&gt; 
tag has a valid "url" attribute

5. enter url
6. click apply
7. save file
8. switch to page "Source"

--&gt; 2nd error: existing attribute was removed
A valid bug. The feature model that supports feature editor was incorrectly 
using URL objects to capture the 'url' attribute value. They worked for 'real' 
URLs (those with a protocol like http://) but failed for relative addresses 
like:

&lt;license url="license.html"&gt;
   License Argeement.
&lt;/license&gt;

In that sense, the name of the attribute is probably not the most fortunate 
because strictly speaking all URLs must have a protocol part. Without it, the 
URL constructor was throwing a MalformedURLException that was silently ignored.

Fixed by using a String to capture attribute value. The fix will appear in the 
builds &gt;20020107.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29119" />
    <CreationDate amount="2003-01-07 18:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>eclipse won't start out of the box</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- Eclipse version</Line>
          <Line>- MacOS X version</Line>
          <Line>- JVM version (did you install pre-release software)?</Line>
          <Line>- console output</Line>
          <Line>- crash log</Line>
          <Line>- Eclipse's crash log</Line>
          <Line>etc.</Line>
          <Line>Eclipse version: all milestone builds (up to and including M4)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Every time I've tried Eclipse on my Mac (Jaguar) it has failed to start. The problem seems 
to be the launcher. I've made my own launcher (using MRJAppBuilder + coding by 
hand), included as an attachment.
Created attachment 2917
A new launcher for MacOSX
Since you seem to be the only one with this problem, can you please give more info 
about the problem:
- Eclipse version
- MacOS X version
- JVM version (did you install pre-release software)?
- console output
- crash log
- Eclipse's crash log
etc.
Eclipse version: all milestone builds (up to and including M4)

Mac OS X version: 10.2.3

Java version (from "java -version"):
java version "1.3.1"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.3.1-root_1.3.1_020714-12:46)
Java HotSpot(TM) Client VM (build 1.3.1_03-69, mixed mode)

I have 1.4 DP5 installed, though

Eclipse/java/JavaLauncher crash log: none

Console output:
[JavaAppLauncher Error] CallStaticVoidMethod() threw an exception
Exception in thread "main" java.lang.NoSuchMethodError: &lt;init&gt;
	at apple.launcher.LaunchPList$CFDictionary.nativeGet(Native Method)
	at apple.launcher.LaunchPList$CFDictionary.get(LaunchPList.java:364)
	at apple.launcher.LaunchPList.getArguments(LaunchPList.java:140)
	at apple.launcher.LaunchRunner.run(LaunchRunner.java:88)
	at apple.launcher.LaunchRunner.callMain(LaunchRunner.java:50)
	at apple.launcher.JavaApplicationLauncher.launch(JavaApplicationLauncher.java:52)

OK, I see.
Please install a JVM 1.4.1 DP &gt; 5 and your problems will disappear (current version is 
DP8).
This problem has been discussed 'to death' on the java-seed mailing list.
Since we are all under NDA I won't talk about the details here.

BTW, your launcher doesn't run into the same problem because it uses the 
MRJApp.properties approach. However, Apple's recommends to stop using 
MRJApp.properties because they cannot deal with spaces in path names.
Just thought I'd note here that using my launcher I am unable to debug...</WithStack>
    <WithOutStack>Every time I've tried Eclipse on my Mac (Jaguar) it has failed to start. The problem seems 
to be the launcher. I've made my own launcher (using MRJAppBuilder + coding by 
hand), included as an attachment.
Created attachment 2917
A new launcher for MacOSX
Since you seem to be the only one with this problem, can you please give more info 
about the problem:
- Eclipse version
- MacOS X version
- JVM version (did you install pre-release software)?
- console output
- crash log
- Eclipse's crash log
etc.
Eclipse version: all milestone builds (up to and including M4)

Mac OS X version: 10.2.3

Java version (from "java -version"):
java version "1.3.1"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.3.1-root_1.3.1_020714-12:46)
Java HotSpot(TM) Client VM (build 1.3.1_03-69, mixed mode)

I have 1.4 DP5 installed, though

Eclipse/java/JavaLauncher crash log: none

Console output:
[JavaAppLauncher Error] CallStaticVoidMethod() threw an exception
Exception in thread "main" java.lang.NoSuchMethodError: &lt;init&gt;
	at apple.launcher.LaunchPList$CFDictionary.nativeGet(Native Method)
	at apple.launcher.LaunchPList$CFDictionary.get(LaunchPList.java:364)
	at apple.launcher.LaunchPList.getArguments(LaunchPList.java:140)
	at apple.launcher.LaunchRunner.run(LaunchRunner.java:88)
	at apple.launcher.LaunchRunner.callMain(LaunchRunner.java:50)
	at apple.launcher.JavaApplicationLauncher.launch(JavaApplicationLauncher.java:52)

OK, I see.
Please install a JVM 1.4.1 DP &gt; 5 and your problems will disappear (current version is 
DP8).
This problem has been discussed 'to death' on the java-seed mailing list.
Since we are all under NDA I won't talk about the details here.

BTW, your launcher doesn't run into the same problem because it uses the 
MRJApp.properties approach. However, Apple's recommends to stop using 
MRJApp.properties because they cannot deal with spaces in path names.
Just thought I'd note here that using my launcher I am unable to debug...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29120" />
    <CreationDate amount="2003-01-07 18:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Decorator refresh needs to use new UI API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="219" end="284" />
        <code>/*
		  * Perform a blanket refresh of all CVS decorations
		  */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="285" end="427" />
        <code>public static void refresh() {
		 		 CVSUIPlugin.getPlugin().getWorkbench
().getDecoratorManager
().update(CVSUIPlugin.DECORATOR_ID);
		 }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>from bug #27972:

added getBaseLabelProvider(String id) and update(String id) to 
IDecoratorManager and deprecated getLightweightLabelDecorator.

The refresh method in the CVSLightweightDecorator can now be replaced by

/*
		  * Perform a blanket refresh of all CVS decorations
		  */
		  public static void refresh() {
		 		 CVSUIPlugin.getPlugin().getWorkbench
().getDecoratorManager
().update(CVSUIPlugin.DECORATOR_ID);
		 }
Fixed as described.</WithStack>
    <WithOutStack>from bug #27972:

added getBaseLabelProvider(String id) and update(String id) to 
IDecoratorManager and deprecated getLightweightLabelDecorator.

The refresh method in the CVSLightweightDecorator can now be replaced by

/*
		  * Perform a blanket refresh of all CVS decorations
		  */
		  public static void refresh() {
		 		 CVSUIPlugin.getPlugin().getWorkbench
().getDecoratorManager
().update(CVSUIPlugin.DECORATOR_ID);
		 }
Fixed as described.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29121" />
    <CreationDate amount="2003-01-08 02:16:00 -0500" />
    <DupId amount="28536" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Find/Replace shows error dialog when file is read only</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When the file being edited is read only, the Find/Replace action first shows an
error dialog (title: "Problems editing file", details: "The file cannot be
edited.  Reason: File XXX is read-only").

After showing this dialog, the normal find dialog is shown.


*** This bug has been marked as a duplicate of 28536 ***</WithStack>
    <WithOutStack>When the file being edited is read only, the Find/Replace action first shows an
error dialog (title: "Problems editing file", details: "The file cannot be
edited.  Reason: File XXX is read-only").

After showing this dialog, the normal find dialog is shown.


*** This bug has been marked as a duplicate of 28536 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29122" />
    <CreationDate amount="2003-01-08 02:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Runtime Workbench has startup problems</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I created a new workspace to create a new "Feature Based Runtime Workbench" 
launch configuration.

All plugins (my source plugins and imported binary plugins) are located 
under "\path\plugins" which is also the workspace root.

All features (my source features and imported features) are located 
under "\path\features" and have a project name "&lt;feature-id&gt;-feature".

When launching this launch configuration it happens very often that the first 
time (eg. after starting Eclipse or editing a while) it won't come up. I see 
the splash screen and when the splash screen goes away (is finished) I can see 
in the "Debug" view that the JVM get terminated. If I immediately start the 
launch configuration again it comes up successful. This happens when running in 
debug mode and in normal mode.

I can't see any error message neither in the console nor in the log files of 
the started workspace or my editing workspace.
What you need to do is go to the Run-time Workbench configuration, switch 
to 'Plug-ins and fragments' and select the second option using the radio button.
The "Use features in the workspace" is already enabled.
It terminates because it reconciled the state and requested a restart. We 
modifed the launcher to catch the restart flag and do it, but something is 
holding it up. Are you using M4 or 20030107? 

We will try to reproduce the problem.
2.1 M4
I spend the whole day today working in this mode while developing Update 
component (we need to be able to see the full cycle of features). I didn't see 
any problems - every time I did something that changed my configuration (e.g. 
install a feature), the second instance would ask to restart and the restart 
would really happen.

We will keep the defect opened in hope that you will think of additional 
details that are peculiar to your setup.
I did a little debugging :)

First: Did your feature based setup define another default feauter? If not, you 
should try it. My feature based setup does so. This allows me to see our 
customized splash screen. 

Currently I have to overwrite install.ini but the feature based runtime launch 
configuration should have an configuration option for this (but this is another 
task).

Well during debugging, I discovered that an IlligalArgumentException is thrown 
in InternalBootLoader line 843 (application not found). This is because 
#getRunnable(String) returns null. The configured application 
is "org.eclipse.ui.workbench".


Currently I can't start my runtime workbench any more because it terminates 
every startup. The last and only thing I did was to upgrade Eclipse to latest 
integration build I20030115 and also update all imported binary plugins to this 
build.
Addition:

InternalPlatform#loaderGetRunnable(String) calls
PluginRegistry#getExtension(String, String, String)

This method can't find the extension point 
for "org.eclipse.core.runtime.applications".
STOP, This time it was my fault. I20030115 has a new plugin.
After several appends, I am a little confused. Do you still have a problem with 
the build?
NO, I didn't recognize problems during my last work. Seemst to startup fine. I 
will add a new PR for configuring the "install.ini"
Ack.</WithStack>
    <WithOutStack>I created a new workspace to create a new "Feature Based Runtime Workbench" 
launch configuration.

All plugins (my source plugins and imported binary plugins) are located 
under "\path\plugins" which is also the workspace root.

All features (my source features and imported features) are located 
under "\path\features" and have a project name "&lt;feature-id&gt;-feature".

When launching this launch configuration it happens very often that the first 
time (eg. after starting Eclipse or editing a while) it won't come up. I see 
the splash screen and when the splash screen goes away (is finished) I can see 
in the "Debug" view that the JVM get terminated. If I immediately start the 
launch configuration again it comes up successful. This happens when running in 
debug mode and in normal mode.

I can't see any error message neither in the console nor in the log files of 
the started workspace or my editing workspace.
What you need to do is go to the Run-time Workbench configuration, switch 
to 'Plug-ins and fragments' and select the second option using the radio button.
The "Use features in the workspace" is already enabled.
It terminates because it reconciled the state and requested a restart. We 
modifed the launcher to catch the restart flag and do it, but something is 
holding it up. Are you using M4 or 20030107? 

We will try to reproduce the problem.
2.1 M4
I spend the whole day today working in this mode while developing Update 
component (we need to be able to see the full cycle of features). I didn't see 
any problems - every time I did something that changed my configuration (e.g. 
install a feature), the second instance would ask to restart and the restart 
would really happen.

We will keep the defect opened in hope that you will think of additional 
details that are peculiar to your setup.
I did a little debugging :)

First: Did your feature based setup define another default feauter? If not, you 
should try it. My feature based setup does so. This allows me to see our 
customized splash screen. 

Currently I have to overwrite install.ini but the feature based runtime launch 
configuration should have an configuration option for this (but this is another 
task).

Well during debugging, I discovered that an IlligalArgumentException is thrown 
in InternalBootLoader line 843 (application not found). This is because 
#getRunnable(String) returns null. The configured application 
is "org.eclipse.ui.workbench".


Currently I can't start my runtime workbench any more because it terminates 
every startup. The last and only thing I did was to upgrade Eclipse to latest 
integration build I20030115 and also update all imported binary plugins to this 
build.
Addition:

InternalPlatform#loaderGetRunnable(String) calls
PluginRegistry#getExtension(String, String, String)

This method can't find the extension point 
for "org.eclipse.core.runtime.applications".
STOP, This time it was my fault. I20030115 has a new plugin.
After several appends, I am a little confused. Do you still have a problem with 
the build?
NO, I didn't recognize problems during my last work. Seemst to startup fine. I 
will add a new PR for configuring the "install.ini"
Ack.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29123" />
    <CreationDate amount="2003-01-08 02:35:00 -0500" />
    <DupId amount="28894" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>The tasks pane pops up when I save a .java file with errors in it</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- I frequently save my .java file while there are still errors in it(old</Line>
          <Line>habbit).</Line>
          <Line>- If there is an error in the .java file, the task pane pops up.</Line>
          <Line>- If I fix the error and save the .java file, the task pane does not go away</Line>
          <Line>again.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>This is an example of a larger issue I have with Eclipse: screen real-estate is 
not handled automatically enough. I find my self moving and resizing windows 
and sashes in Eclipse a lot.

Example:

- I frequently save my .java file while there are still errors in it(old 
habbit).
- If there is an error in the .java file, the task pane pops up.
- If I fix the error and save the .java file, the task pane does not go away 
again.

This is annoying, because the task usually takes all the screen real-estate, 
because it inherits the same size as e.g. Team-&gt;Synchronize compare view.


*** This bug has been marked as a duplicate of 28894 ***</WithStack>
    <WithOutStack>This is an example of a larger issue I have with Eclipse: screen real-estate is 
not handled automatically enough. I find my self moving and resizing windows 
and sashes in Eclipse a lot.

Example:

- I frequently save my .java file while there are still errors in it(old 
habbit).
- If there is an error in the .java file, the task pane pops up.
- If I fix the error and save the .java file, the task pane does not go away 
again.

This is annoying, because the task usually takes all the screen real-estate, 
because it inherits the same size as e.g. Team-&gt;Synchronize compare view.


*** This bug has been marked as a duplicate of 28894 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29124" />
    <CreationDate amount="2003-01-08 03:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Source not found while debugging</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: 2.1 M4

I have a new feature-based workspace setup. During debugging I got a totaly 
unexpected "Debugger Source Lookup" dialog. The type that could not be found 
was a type of a fragement. I never had this before (usig the old plugin based 
launch configuration).

I was debugging type A that is defined in plugin A. Plugin A also defines an 
extension point and has fragment A-frag which provides type B. Type B 
implements interface C from plugin A. Fragment A-frag doesn't export anything. 

Now during debugging I tried to step into a method of interface C. The type 
implementing interface C was type B from fragment A-frag. The debugger couldn't 
found the source. Any ideas?
Changes in the source lookup and introduction of source lookup tab in I-
20020128 should solve problems like these.</WithStack>
    <WithOutStack>Build: 2.1 M4

I have a new feature-based workspace setup. During debugging I got a totaly 
unexpected "Debugger Source Lookup" dialog. The type that could not be found 
was a type of a fragement. I never had this before (usig the old plugin based 
launch configuration).

I was debugging type A that is defined in plugin A. Plugin A also defines an 
extension point and has fragment A-frag which provides type B. Type B 
implements interface C from plugin A. Fragment A-frag doesn't export anything. 

Now during debugging I tried to step into a method of interface C. The type 
implementing interface C was type B from fragment A-frag. The debugger couldn't 
found the source. Any ideas?
Changes in the source lookup and introduction of source lookup tab in I-
20020128 should solve problems like these.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29125" />
    <CreationDate amount="2003-01-08 03:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Tooltip no more displayed on bookmark icon in the editor left margin</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse Platform
Version: 2.1
Build id: 200212181304

The tooltip was working in 2.1 M3 and seem to have been broken in M4
adjusting priority (no loss of work is involved here)
Will this be addressed in 2.1 M5 ?
Target Milestone is not set...
Fixed.
Available in builds &gt; I20030128
start verifying</WithStack>
    <WithOutStack>Eclipse Platform
Version: 2.1
Build id: 200212181304

The tooltip was working in 2.1 M3 and seem to have been broken in M4
adjusting priority (no loss of work is involved here)
Will this be addressed in 2.1 M5 ?
Target Milestone is not set...
Fixed.
Available in builds &gt; I20030128
start verifying</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29126" />
    <CreationDate amount="2003-01-08 03:20:00 -0500" />
    <DupId amount="28536" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Doing a Find in a read-only file opens error dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Eclipse Platform
Version: 2.1
Build id: 200212181304

Doing a text search (Ctrl-F) in an editor containing a read-only
file generates the following error:

The File cannot be edited
Reason:
File ... is read-only.

Error details:
Log Session
java.version=1.4.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -Xmx256M -install 
file:E:/opt/eclipse/build21M4/

This is a big problem and if you have a fix I would be glad to
have it. For the moment I will use previous Eclipse version (M3).
Not a bug in Search component but in editor.

Bad, but at least the Find dialog comes up and you can search after pressing ok,
right?


Renamed the summary since it is Find and not Search which causes the problem.

Note: an entry is written to .log

Right, the Find/Replace dialog appears after the error dialog
and the find works well.


*** This bug has been marked as a duplicate of 28536 ***</WithStack>
    <WithOutStack>Eclipse Platform
Version: 2.1
Build id: 200212181304

Doing a text search (Ctrl-F) in an editor containing a read-only
file generates the following error:

The File cannot be edited
Reason:
File ... is read-only.

Error details:
Log Session
java.version=1.4.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -Xmx256M -install 
file:E:/opt/eclipse/build21M4/

This is a big problem and if you have a fix I would be glad to
have it. For the moment I will use previous Eclipse version (M3).
Not a bug in Search component but in editor.

Bad, but at least the Find dialog comes up and you can search after pressing ok,
right?


Renamed the summary since it is Find and not Search which causes the problem.

Note: an entry is written to .log

Right, the Find/Replace dialog appears after the error dialog
and the find works well.


*** This bug has been marked as a duplicate of 28536 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29127" />
    <CreationDate amount="2003-01-08 04:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Show Outline fails on read-only files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>[M4]

For some reasoning, trying to use Show Outline on a read-only file results in
the error message:

Problems editing file

The file cannot be edited.
Reason: File [...] is read-only.

Why should showing the outline of a class require it to be edited?
Might this be the same cause as for bug 28536?

Build I20030128.</WithStack>
    <WithOutStack>[M4]

For some reasoning, trying to use Show Outline on a read-only file results in
the error message:

Problems editing file

The file cannot be edited.
Reason: File [...] is read-only.

Why should showing the outline of a class require it to be edited?
Might this be the same cause as for bug 28536?

Build I20030128.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29128" />
    <CreationDate amount="2003-01-08 04:36:00 -0500" />
    <DupId amount="9630" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Bookmarks view enhancement</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- sort bookmarks on any column</Line>
          <Line>- filter bookmarks (none / on a specific project or working set)</Line>
          <Line>- make the view more in line with the Tasks view</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Eclipse Platform
Version: 2.1
Build id: 200212181304

I make extensive use of Bookmarks in my code and a nice enhancement
to the Bookmarks view would be to have a sortable table with the
following headers:

Bookmark Name | Resource | In Folder | Location

This enhancement would bring the ability to :
- sort bookmarks on any column
- filter bookmarks (none / on a specific project or working set)
- make the view more in line with the Tasks view

Today bookmarks are not even sorted by name... This makes the view
unusable when you have many bookmarks in a project.

Other enhancement ideas are welcome ;-)

Xavier


*** This bug has been marked as a duplicate of 9630 ***</WithStack>
    <WithOutStack>Eclipse Platform
Version: 2.1
Build id: 200212181304

I make extensive use of Bookmarks in my code and a nice enhancement
to the Bookmarks view would be to have a sortable table with the
following headers:

Bookmark Name | Resource | In Folder | Location

This enhancement would bring the ability to :
- sort bookmarks on any column
- filter bookmarks (none / on a specific project or working set)
- make the view more in line with the Tasks view

Today bookmarks are not even sorted by name... This makes the view
unusable when you have many bookmarks in a project.

Other enhancement ideas are welcome ;-)

Xavier


*** This bug has been marked as a duplicate of 9630 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29129" />
    <CreationDate amount="2003-01-08 04:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CVS keyword expansion broken in latest update release</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>After doing a feature update in Eclipse last monday, i recognized, that the CVS 
keywords are not updated anymore, e.g. $Id:$ stays $Id:$, $Id: ...
(valueold) ...$ stays $Id: ...(valueold) ...$, same with other CVS keywords 
like $Revision$, $Date$, $Author$, etc.

I tried to "Restore Defaults" in Preferences &gt; Team &gt; CVS and also played with 
several "Default keyword substitution:" values, but the CVS keywords are not 
replaced/updated anymore ... :-(

Eclipse 2.0.2, Build id: 200211071448
Whar CVS server version are you using?
Server: cvsnt_1.11.1.3.exe
This worked for former Eclipse version...
What previous Eclipse version do you mean? 2.0 or 2.0.1? If so, there was no 
changes in thgis area between these releases. Just out of curriosity, what is 
the keyword expansion mode on the files in question (to see the mode, select 
Properties from the popup menu of a file and click on the CVS tab).
2.0.1. I checked the keyword expansion mode of a file (didn't know that this 
info is there for a file properties): it is "ASCII without keyword substitution 
(-ko)" ... now, where does this come from? I set in Preferences &gt; Team &gt; CVS &gt; 
Default keyword substitution to "ASCII with keyword expansion (-kkv)". so, how 
can i tell the files to use the preferences setting? and why is it possible 
that files get another keyword substitution that set in preferences for Team &gt; 
CVS? how can i "fix" my files to use the preferences setting?
Any new files will use the preference setting. Other files use the setting from 
the server. To change the setting on the server, use the Team&gt;Change 
ASCII/Binary Property menu item.
Team&gt;Change ASCII/Binary Property menu item is set to "automatic" which 
says "Automatically chooses 'Binary (-kb)' or 'ASCII with keyword expansion (-
kkv)' for each file according to the Team file extension preferences." So how 
is it possible that such a file has "ASCII without keyword expansion (-ko)"? i 
didn't change such settings, as we always have the same (automatic/ASCII with 
keyword expansion) for all files in our projects. so, this could be an eclipse 
issue, couldn't it?
From your previous post, it seems you have misinterpreted what the Team&gt;Change 
ASCII/Binary Property does. The default substitution mode is set on the 
Window&gt;Preferences/Team&gt;CVS preference page and is applied only to new files. 
Out of the box, the default in 2.0.2 is -ko. This has been changed in 2.1 to 
be -kkv. The Team&gt;Change ASCII/Binary Property wizard is a tool which will 
allow you to change the keyword substitution mode of existing files which is 
what you probably want to do to correct the situation. Settings on the wizard 
have nothing to do with what Eclispe does to new files and nowhere else in 
Eclipse is the substitution mode changed on existing files.

Although it is always possible that there is an issue with Eclipse, my guess is 
that somehow the keyword substitution mode on the server got changed (which can 
only be done using the above mentioned wizard or the "cvs admin" command) or 
someone created a new file and the mode was set to -ko because that was the 
default. The reason I doubt that it is an Eclipse issue is because there have 
been no other problems of this sort reported and this is a widely used feature. 
Also, there is nothing in this bug report that would be helpful if it turned 
out to be an Eclipse issue. To state this another way, if you can provide 
compelling evidence that this is an Eclipse issue, please reopen.</WithStack>
    <WithOutStack>After doing a feature update in Eclipse last monday, i recognized, that the CVS 
keywords are not updated anymore, e.g. $Id:$ stays $Id:$, $Id: ...
(valueold) ...$ stays $Id: ...(valueold) ...$, same with other CVS keywords 
like $Revision$, $Date$, $Author$, etc.

I tried to "Restore Defaults" in Preferences &gt; Team &gt; CVS and also played with 
several "Default keyword substitution:" values, but the CVS keywords are not 
replaced/updated anymore ... :-(

Eclipse 2.0.2, Build id: 200211071448
Whar CVS server version are you using?
Server: cvsnt_1.11.1.3.exe
This worked for former Eclipse version...
What previous Eclipse version do you mean? 2.0 or 2.0.1? If so, there was no 
changes in thgis area between these releases. Just out of curriosity, what is 
the keyword expansion mode on the files in question (to see the mode, select 
Properties from the popup menu of a file and click on the CVS tab).
2.0.1. I checked the keyword expansion mode of a file (didn't know that this 
info is there for a file properties): it is "ASCII without keyword substitution 
(-ko)" ... now, where does this come from? I set in Preferences &gt; Team &gt; CVS &gt; 
Default keyword substitution to "ASCII with keyword expansion (-kkv)". so, how 
can i tell the files to use the preferences setting? and why is it possible 
that files get another keyword substitution that set in preferences for Team &gt; 
CVS? how can i "fix" my files to use the preferences setting?
Any new files will use the preference setting. Other files use the setting from 
the server. To change the setting on the server, use the Team&gt;Change 
ASCII/Binary Property menu item.
Team&gt;Change ASCII/Binary Property menu item is set to "automatic" which 
says "Automatically chooses 'Binary (-kb)' or 'ASCII with keyword expansion (-
kkv)' for each file according to the Team file extension preferences." So how 
is it possible that such a file has "ASCII without keyword expansion (-ko)"? i 
didn't change such settings, as we always have the same (automatic/ASCII with 
keyword expansion) for all files in our projects. so, this could be an eclipse 
issue, couldn't it?
From your previous post, it seems you have misinterpreted what the Team&gt;Change 
ASCII/Binary Property does. The default substitution mode is set on the 
Window&gt;Preferences/Team&gt;CVS preference page and is applied only to new files. 
Out of the box, the default in 2.0.2 is -ko. This has been changed in 2.1 to 
be -kkv. The Team&gt;Change ASCII/Binary Property wizard is a tool which will 
allow you to change the keyword substitution mode of existing files which is 
what you probably want to do to correct the situation. Settings on the wizard 
have nothing to do with what Eclispe does to new files and nowhere else in 
Eclipse is the substitution mode changed on existing files.

Although it is always possible that there is an issue with Eclipse, my guess is 
that somehow the keyword substitution mode on the server got changed (which can 
only be done using the above mentioned wizard or the "cvs admin" command) or 
someone created a new file and the mode was set to -ko because that was the 
default. The reason I doubt that it is an Eclipse issue is because there have 
been no other problems of this sort reported and this is a widely used feature. 
Also, there is nothing in this bug report that would be helpful if it turned 
out to be an Eclipse issue. To state this another way, if you can provide 
compelling evidence that this is an Eclipse issue, please reopen.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29130" />
    <CreationDate amount="2003-01-08 04:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>I-beam cursor sometimes lost</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="1740" end="1761" />
        <code>public class Test
{
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>[M4 - haven't seen this problem previously]

[Note that this could well be a platform editor problem - I don't often edit
non-Java files, so it's hard to say]

When editing a Java file, fairly frequently the I-beam turns into a normal
pointer cursor, and stays that way for that file. Other files are okay, but
switching between files, the "broken" file stays broken until it is closed and
reopened.
I've just had it when selecting an area of code - but it doesn't *always* happen
then. I'll try to keep track of when it happens in this bug, as I can see it
could be *very* hard to track down otherwise.
I have found at least one way to lose the I-beam.  If you hold down Ctrl with
the pointer over something that you can "open declaration" on, the pointer will
turn into a hyperlink hand (and whatever the pointer is over will be turned blue
and underlined).  When you release Ctrl, the pointer turns into the arrow
instead of returning to the I-beam.

Same for me on WinXP with M4. Close and reopen of the editor get the old caret 
back.
On my fresh install of M4 (Linux-GTK), this is a problem 100% of the time for
Java Editors.  The caret is just NEVER there. (Note, I'm talking about the
flashing vertical bar that indicates where the next character will be inserted.
 The I-Beam is a particular mouse pointer that indicates you've about to place
the caret with a click).
Please ignore my comments above.  It appear to be a different bug from this one.
 I have submitted it as #30377.
I've finally got a reproducible test case. I don't know whether or not it's the
*only* way that it happens, but it might give a hint. This would be a *really*
nice bug to fix - it's been irritating me quite a bit in M4.

Have a minimal class, e.g.:

public class Test
{
}

Now, with the cursor in white space, hold down ctrl, and then move the I-beam
pointer over "Test" - the pointer will, correctly, change to a hand. Then move
the pointer *away* from Test again, and the pointer changes to an arrow, and
stays as an arrow until the file is closed and reopened.

Hope this helps.

Method for reproducing this no longer works with M5... was anything done that
you (i.e. developers) know of that might have fixed this? I'll update this bug
if I run into it again now I'm using M5...
*** Bug 30052 has been marked as a duplicate of this bug. ***
Marking as fixed as no longer reproducible. I remember that there was a 
related SWT problem which has been fixed recently but don't remember the bug #.
start verifying
Verified as far as "I haven't seen this with M5 or RC1, when I used to see it
fairly often" and the only way I have of reproducing it in M4 has gone away...</WithStack>
    <WithOutStack>[M4 - haven't seen this problem previously]

[Note that this could well be a platform editor problem - I don't often edit
non-Java files, so it's hard to say]

When editing a Java file, fairly frequently the I-beam turns into a normal
pointer cursor, and stays that way for that file. Other files are okay, but
switching between files, the "broken" file stays broken until it is closed and
reopened.
I've just had it when selecting an area of code - but it doesn't *always* happen
then. I'll try to keep track of when it happens in this bug, as I can see it
could be *very* hard to track down otherwise.
I have found at least one way to lose the I-beam.  If you hold down Ctrl with
the pointer over something that you can "open declaration" on, the pointer will
turn into a hyperlink hand (and whatever the pointer is over will be turned blue
and underlined).  When you release Ctrl, the pointer turns into the arrow
instead of returning to the I-beam.

Same for me on WinXP with M4. Close and reopen of the editor get the old caret 
back.
On my fresh install of M4 (Linux-GTK), this is a problem 100% of the time for
Java Editors.  The caret is just NEVER there. (Note, I'm talking about the
flashing vertical bar that indicates where the next character will be inserted.
 The I-Beam is a particular mouse pointer that indicates you've about to place
the caret with a click).
Please ignore my comments above.  It appear to be a different bug from this one.
 I have submitted it as #30377.
I've finally got a reproducible test case. I don't know whether or not it's the
*only* way that it happens, but it might give a hint. This would be a *really*
nice bug to fix - it's been irritating me quite a bit in M4.

Have a minimal class, e.g.:

public class Test
{
}

Now, with the cursor in white space, hold down ctrl, and then move the I-beam
pointer over "Test" - the pointer will, correctly, change to a hand. Then move
the pointer *away* from Test again, and the pointer changes to an arrow, and
stays as an arrow until the file is closed and reopened.

Hope this helps.

Method for reproducing this no longer works with M5... was anything done that
you (i.e. developers) know of that might have fixed this? I'll update this bug
if I run into it again now I'm using M5...
*** Bug 30052 has been marked as a duplicate of this bug. ***
Marking as fixed as no longer reproducible. I remember that there was a 
related SWT problem which has been fixed recently but don't remember the bug #.
start verifying
Verified as far as "I haven't seen this with M5 or RC1, when I used to see it
fairly often" and the only way I have of reproducing it in M4 has gone away...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29131" />
    <CreationDate amount="2003-01-08 04:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="UI" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Closing BuildConfigEditor with large set of souce files exhaust number of handles</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437338527317">
        <Exception>org.eclipse.swt.SWTError</Exception>
        <Reason>No more handles</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2144)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2051)</Frame>
          <Frame depth="2">org.eclipse.swt.graphics.Image.init(Image.java:1787)</Frame>
          <Frame depth="3">org.eclipse.swt.graphics.Image.init(Image.java:1816)</Frame>
          <Frame depth="4">org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:703)</Frame>
          <Frame depth="5">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:128)</Frame>
          <Frame depth="6">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:87)</Frame>
          <Frame depth="7">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java:76)</Frame>
          <Frame depth="8">org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.createNodeImage(BuildConfigEditor.java:445)</Frame>
          <Frame depth="9">org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateBranch(BuildConfigEditor.java:308)</Frame>
          <Frame depth="10">org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateBranch(BuildConfigEditor.java:313)</Frame>
          <Frame depth="11">org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateBranch(BuildConfigEditor.java:313)</Frame>
          <Frame depth="12">org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateBranch(BuildConfigEditor.java:313)</Frame>
          <Frame depth="13">org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateBranch(BuildConfigEditor.java:313)</Frame>
          <Frame depth="14">org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateBranch(BuildConfigEditor.java:313)</Frame>
          <Frame depth="15">org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateTree(BuildConfigEditor.java:285)</Frame>
          <Frame depth="16">org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.createPartControl(BuildConfigEditor.java:237)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.PartPane$4.run(PartPane.java:136)</Frame>
          <Frame depth="18">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:839)</Frame>
          <Frame depth="19">org.eclipse.core.runtime.Platform.run(Platform.java:416)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:134)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.PartPane.createControl(PartPane.java:178)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.EditorWorkbook.createPage(EditorWorkbook.java:230)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.EditorWorkbook.add(EditorWorkbook.java:85)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.EditorArea.addEditor(EditorArea.java:46)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.EditorPresentation.openEditor(EditorPresentation.java:352)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:540)</Frame>
          <Frame depth="27">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:66)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.EditorManager.createEditorTab(EditorManager.java:529)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:609)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:421)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.EditorManager.openEditorFromInput(EditorManager.java:304)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:386)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1708)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1594)</Frame>
          <Frame depth="35">org.eclipse.ui.actions.OpenFileAction.openFile(OpenFileAction.java:91)</Frame>
          <Frame depth="36">org.eclipse.ui.actions.OpenSystemEditorAction.run(OpenSystemEditorAction.java:91)</Frame>
          <Frame depth="37">org.eclipse.ui.views.navigator.OpenActionGroup.runDefaultAction(OpenActionGroup.java:112)</Frame>
          <Frame depth="38">org.eclipse.ui.views.navigator.MainActionGroup.runDefaultAction(MainActionGroup.java:177)</Frame>
          <Frame depth="39">org.eclipse.ui.views.navigator.ResourceNavigator.handleOpen(ResourceNavigator.java:531)</Frame>
          <Frame depth="40">org.eclipse.ui.views.navigator.ResourceNavigator$6.open(ResourceNavigator.java:303)</Frame>
          <Frame depth="41">org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:320)</Frame>
          <Frame depth="42">org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:494)</Frame>
          <Frame depth="43">org.eclipse.jface.viewers.StructuredViewer$3.handleOpen(StructuredViewer.java:581)</Frame>
          <Frame depth="44">org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:198)</Frame>
          <Frame depth="45">org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:195)</Frame>
          <Frame depth="46">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:222)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1529)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1291)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1343)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Workbench.run(Workbench.java:1326)</Frame>
          <Frame depth="53">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:831)</Frame>
          <Frame depth="54">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="55">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="56">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="57">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="58">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="59">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="60">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="61">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Happens during opening or closing the editor.

Config: Eclipse 2.0, org.aspectj.ajde_1.0.6, org.eclipse.ajdt.ui_0.5.2.

Starting command for eclipse:

C:\Java\eclipse\eclipse.exe -vm C:\Java\j2sdk1.4.1_01\bin\javaw.exe -vmargs -
Xmx384M

Complete stack trace on impact:

!SESSION jan 08, 2003 10:58:42.321 ---------------------------------------------
java.version=1.4.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=no_NO
Command-line arguments: -os win32 -ws win32 -arch x86 -install 
file:C:/Java/eclipse/
!ENTRY org.eclipse.ui 4 4 jan 08, 2003 10:58:42.321
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 jan 08, 2003 10:58:42.341
!MESSAGE No more handles
!STACK 0
org.eclipse.swt.SWTError: No more handles
	at org.eclipse.swt.SWT.error(SWT.java:2144)
	at org.eclipse.swt.SWT.error(SWT.java:2051)
	at org.eclipse.swt.graphics.Image.init(Image.java:1787)
	at org.eclipse.swt.graphics.Image.init(Image.java:1816)
	at org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:703)
	at org.eclipse.jface.resource.ImageDescriptor.createImage
(ImageDescriptor.java:128)
	at org.eclipse.jface.resource.ImageDescriptor.createImage
(ImageDescriptor.java:87)
	at org.eclipse.jface.resource.ImageDescriptor.createImage
(ImageDescriptor.java:76)
	at org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.createNodeImage
(BuildConfigEditor.java:445)
	at org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateBranch
(BuildConfigEditor.java:308)
	at org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateBranch
(BuildConfigEditor.java:313)
	at org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateBranch
(BuildConfigEditor.java:313)
	at org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateBranch
(BuildConfigEditor.java:313)
	at org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateBranch
(BuildConfigEditor.java:313)
	at org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateBranch
(BuildConfigEditor.java:313)
	at org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.populateTree
(BuildConfigEditor.java:285)
	at 
org.eclipse.ajdt.internal.ui.editor.BuildConfigEditor.createPartControl
(BuildConfigEditor.java:237)
	at org.eclipse.ui.internal.PartPane$4.run(PartPane.java:136)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:839)
	at org.eclipse.core.runtime.Platform.run(Platform.java:416)
	at org.eclipse.ui.internal.PartPane.createChildControl
(PartPane.java:134)
	at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:178)
	at org.eclipse.ui.internal.EditorWorkbook.createPage
(EditorWorkbook.java:230)
	at org.eclipse.ui.internal.EditorWorkbook.add(EditorWorkbook.java:85)
	at org.eclipse.ui.internal.EditorArea.addEditor(EditorArea.java:46)
	at org.eclipse.ui.internal.EditorPresentation.openEditor
(EditorPresentation.java:352)
	at org.eclipse.ui.internal.EditorManager$2.run(EditorManager.java:540)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:66)
	at org.eclipse.ui.internal.EditorManager.createEditorTab
(EditorManager.java:529)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor
(EditorManager.java:609)
	at org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor
(EditorManager.java:421)
	at org.eclipse.ui.internal.EditorManager.openEditorFromInput
(EditorManager.java:304)
	at org.eclipse.ui.internal.EditorManager.openEditor
(EditorManager.java:386)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1708)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1594)
	at org.eclipse.ui.actions.OpenFileAction.openFile
(OpenFileAction.java:91)
	at org.eclipse.ui.actions.OpenSystemEditorAction.run
(OpenSystemEditorAction.java:91)
	at org.eclipse.ui.views.navigator.OpenActionGroup.runDefaultAction
(OpenActionGroup.java:112)
	at org.eclipse.ui.views.navigator.MainActionGroup.runDefaultAction
(MainActionGroup.java:177)
	at org.eclipse.ui.views.navigator.ResourceNavigator.handleOpen
(ResourceNavigator.java:531)
	at org.eclipse.ui.views.navigator.ResourceNavigator$6.open
(ResourceNavigator.java:303)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen
(StructuredViewer.java:320)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen
(StructuredViewer.java:494)
	at org.eclipse.jface.viewers.StructuredViewer$3.handleOpen
(StructuredViewer.java:581)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent
(OpenStrategy.java:198)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:195)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent
(OpenStrategy.java:222)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1529)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1291)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1343)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1326)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:831)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
I've fixed this in the current CVS version (which will become the AJDT v0.6 
full version soon).

I had to put an image cache into the buildconfigurationeditor code so that it
reused images rather than building a new one for every node in the tree.

At the same time I added a cache for imagedescriptors to the AJDTUtils code so
that other users of images can also benefit from caching (outline views for 
example).

I cant change the bug state to FIXED as I'm not the owner of it, and I cant 
change the owner (it says I'm not 'powerful' enough !!)

I'm not planning to retrofit the fix back to 0.5.2 - is that OK?
Thanks to Andy Clement who provided the fix for this... we weren't caching 
decorated images created for the nodes in the tree view. Since each request to 
decorate an underlying image created a whole new os resource, this was a lot 
of wastage. Caches have been implemented in the BuildConfigEditor and in 
AJDTUtils, and this seems to have fixed the problem.</WithStack>
    <WithOutStack>Happens during opening or closing the editor.

Config: Eclipse 2.0, org.aspectj.ajde_1.0.6, org.eclipse.ajdt.ui_0.5.2.

Starting command for eclipse:

C:\Java\eclipse\eclipse.exe -vm C:\Java\j2sdk1.4.1_01\bin\javaw.exe -vmargs -
Xmx384M

Complete stack trace on impact:

!SESSION jan 08, 2003 10:58:42.321 ---------------------------------------------
java.version=1.4.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=no_NO
Command-line arguments: -os win32 -ws win32 -arch x86 -install 
file:C:/Java/eclipse/
!ENTRY org.eclipse.ui 4 4 jan 08, 2003 10:58:42.321
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 jan 08, 2003 10:58:42.341
!MESSAGE No more handles
!STACK 0

I've fixed this in the current CVS version (which will become the AJDT v0.6 
full version soon).

I had to put an image cache into the buildconfigurationeditor code so that it
reused images rather than building a new one for every node in the tree.

At the same time I added a cache for imagedescriptors to the AJDTUtils code so
that other users of images can also benefit from caching (outline views for 
example).

I cant change the bug state to FIXED as I'm not the owner of it, and I cant 
change the owner (it says I'm not 'powerful' enough !!)

I'm not planning to retrofit the fix back to 0.5.2 - is that OK?
Thanks to Andy Clement who provided the fix for this... we weren't caching 
decorated images created for the nodes in the tree view. Since each request to 
decorate an underlying image created a whole new os resource, this was a lot 
of wastage. Caches have been implemented in the BuildConfigEditor and in 
AJDTUtils, and this seems to have fixed the problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29132" />
    <CreationDate amount="2003-01-08 05:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Outline] message "An Outline is not available" doesn't wrap</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- start Eclipse with new workspace</Line>
          <Line>- from 'Window' menu select 'Show View/Outline'</Line>
          <Line>- resize Outline view part to make it small</Line>
          <Line>Observe: the message "An Outline is not available" becomes truncated.</Line>
          <Line>It should wrap.</Line>
          <Line>Tried this with I20030422 (post 2.1) on both Windows XP and Linux (motif).</Line>
          <Line>Both worked fine - the message was wrapped successfully.  Closing this PR.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>- start Eclipse with new workspace
- from 'Window' menu select 'Show View/Outline'
- resize Outline view part to make it small
Observe: the message "An Outline is not available" becomes truncated.
It should wrap.
Tried this with I20030422 (post 2.1) on both Windows XP and Linux (motif).  
Both worked fine - the message was wrapped successfully.  Closing this PR.</WithStack>
    <WithOutStack>- start Eclipse with new workspace
- from 'Window' menu select 'Show View/Outline'
- resize Outline view part to make it small
Observe: the message "An Outline is not available" becomes truncated.
It should wrap.
Tried this with I20030422 (post 2.1) on both Windows XP and Linux (motif).  
Both worked fine - the message was wrapped successfully.  Closing this PR.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29133" />
    <CreationDate amount="2003-01-08 05:44:00 -0500" />
    <DupId amount="28655" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Quick Fix available in task view even though there is no quick fix</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="assignment">
        <location start="35" end="44" />
        <code>int x=;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. Add the following line anywhere</Line>
          <Line />
          <Line />
          <Line>2. Save</Line>
          <Line>3. Right click in task view for compilation error</Line>
          <Line>4. You see the quick fix menu item enabled</Line>
          <Line>5. Click on quick fix, nothing happens.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>1. Add the following line anywhere
 	int x=;

2. Save
3. Right click in task view for compilation error
4. You see the quick fix menu item enabled
5. Click on quick fix, nothing happens.


*** This bug has been marked as a duplicate of 28655 ***</WithStack>
    <WithOutStack>1. Add the following line anywhere
 	int x=;

2. Save
3. Right click in task view for compilation error
4. You see the quick fix menu item enabled
5. Click on quick fix, nothing happens.


*** This bug has been marked as a duplicate of 28655 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29134" />
    <CreationDate amount="2003-01-08 05:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>CVS Problems</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. check out the CVSROOT project from your repository</Line>
          <Line>2. Create an empty file named "modules" in this project</Line>
          <Line>3. commit the new file</Line>
          <Line>4. try to expand HEAD and see if it works</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Hi Guys,

Our team have moved from M3/M2 to M4 Eclipse Version. I am using Solaris 8 and Linux RH7.3 both with Sun J2sdk 1.4.1_01.

I are able to commit or update projects to our CVS server but, opening the CVS Repository Exploring Prospective, I am not able to visualize the HEAD section of the CVS server, via pserver protocol.. No error message are printed and no Exception are logged into the log file.

This is for us a very houge problem and so we have moved down to M2, a more stable release than M3 and M4 even if M4 has got many interesting new features.

Best Regards,

Andrea
Hi Guys,

I have to make a correction. 

On Sun Solaris 8 the following message has been printed:

: CVS [server aborted}" failed to open the modules file

Best Regard,

Andrea
The problem is that your repository does no have a CVSROOT/modules file. This 
error has been fixed in HEAD. The workaround (if you want to switch to M4) is 
to create an empty file name "modules" in the CVSROOT directory of your 
repository.

*** This bug has been marked as a duplicate of 28765 ***
Hi Michael,

I have tried your suggestion but, unfortunally, it has not worked.
Currently I have M4 installed on Sun Solaris 8 and the message reported is always the same.

Best Regards,

Andrea


Try this:

1. check out the CVSROOT project from your repository
2. Create an empty file named "modules" in this project
3. commit the new file
4. try to expand HEAD and see if it works


Hi Michael,

Your solution has worked. New we will move to M4.

Best Regards,

Andrea</WithStack>
    <WithOutStack>Hi Guys,

Our team have moved from M3/M2 to M4 Eclipse Version. I am using Solaris 8 and Linux RH7.3 both with Sun J2sdk 1.4.1_01.

I are able to commit or update projects to our CVS server but, opening the CVS Repository Exploring Prospective, I am not able to visualize the HEAD section of the CVS server, via pserver protocol.. No error message are printed and no Exception are logged into the log file.

This is for us a very houge problem and so we have moved down to M2, a more stable release than M3 and M4 even if M4 has got many interesting new features.

Best Regards,

Andrea
Hi Guys,

I have to make a correction. 

On Sun Solaris 8 the following message has been printed:

: CVS [server aborted}" failed to open the modules file

Best Regard,

Andrea
The problem is that your repository does no have a CVSROOT/modules file. This 
error has been fixed in HEAD. The workaround (if you want to switch to M4) is 
to create an empty file name "modules" in the CVSROOT directory of your 
repository.

*** This bug has been marked as a duplicate of 28765 ***
Hi Michael,

I have tried your suggestion but, unfortunally, it has not worked.
Currently I have M4 installed on Sun Solaris 8 and the message reported is always the same.

Best Regards,

Andrea


Try this:

1. check out the CVSROOT project from your repository
2. Create an empty file named "modules" in this project
3. commit the new file
4. try to expand HEAD and see if it works


Hi Michael,

Your solution has worked. New we will move to M4.

Best Regards,

Andrea</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29135" />
    <CreationDate amount="2003-01-08 06:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>editing javadoc is buggy</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>when you need to edit javadoc (if you need to use xdoclet for instance) and 
write, indent and delete text, the editor behaves very oddly, inserting tabs, 
ignoring del and backspace keystrokes. it is not very intuitive.

this is in m4 build, but has been present for a long time
Works for me. Please provide more details if you still see this using I20060309-1000 or newer.</WithStack>
    <WithOutStack>when you need to edit javadoc (if you need to use xdoclet for instance) and 
write, indent and delete text, the editor behaves very oddly, inserting tabs, 
ignoring del and backspace keystrokes. it is not very intuitive.

this is in m4 build, but has been present for a long time
Works for me. Please provide more details if you still see this using I20060309-1000 or newer.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29136" />
    <CreationDate amount="2003-01-08 06:35:00 -0500" />
    <DupId amount="26781" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Key Bindings customization improvements</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Currently (Build M4), only existing key bindings can be modified (you cannot 
create new bindings), and only existing key sequences can be assigned to the 
actions (e.g. you cannot assign "Ctrl-Alt-/").
For a more flexible approach, arbitrary key sequences should be assignable to 
any actions.

Further improvements:
- Custom key binding settings. Default/Emacs stay as default (and maybe read-
only) settings, but you can add/edit/delete your own set of key bindings.

- Actions should be navigable in a hierarchical way (e.g. in a Tree). This way 
they are easier to find and name conflicts are avoided (e.g. "Refactor-&gt;Rename" 
instead of just "Rename")

- Multiple key sequences for a single action. That way you can assign 
alternative key sequences for an action.


*** This bug has been marked as a duplicate of 26781 ***</WithStack>
    <WithOutStack>Currently (Build M4), only existing key bindings can be modified (you cannot 
create new bindings), and only existing key sequences can be assigned to the 
actions (e.g. you cannot assign "Ctrl-Alt-/").
For a more flexible approach, arbitrary key sequences should be assignable to 
any actions.

Further improvements:
- Custom key binding settings. Default/Emacs stay as default (and maybe read-
only) settings, but you can add/edit/delete your own set of key bindings.

- Actions should be navigable in a hierarchical way (e.g. in a Tree). This way 
they are easier to find and name conflicts are avoided (e.g. "Refactor-&gt;Rename" 
instead of just "Rename")

- Multiple key sequences for a single action. That way you can assign 
alternative key sequences for an action.


*** This bug has been marked as a duplicate of 26781 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29137" />
    <CreationDate amount="2003-01-08 06:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[resources] WorkManager#checkIn never sleeping</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 2.1M4

WorkManager#checkIn loop should probably sleep in between 2 attempts, to avoid 
using all CPU for no reason.
In practice this loop never iterates.  It calls WorkspaceLock.acquire(), which
blocks until the lock is available.  Eventually, Object.wait() is called and
will block.

However, I agree we could add a sleep after the acquire attempt, to protect
ourselves against a poorly designed non-blocking WorkspaceLock that might be
installed in place of the standard one.
Sleep added.
It should sleep only if the lock was not acquired.</WithStack>
    <WithOutStack>Build 2.1M4

WorkManager#checkIn loop should probably sleep in between 2 attempts, to avoid 
using all CPU for no reason.
In practice this loop never iterates.  It calls WorkspaceLock.acquire(), which
blocks until the lock is available.  Eventually, Object.wait() is called and
will block.

However, I agree we could add a sleep after the acquire attempt, to protect
ourselves against a poorly designed non-blocking WorkspaceLock that might be
installed in place of the standard one.
Sleep added.
It should sleep only if the lock was not acquired.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29138" />
    <CreationDate amount="2003-01-08 07:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[JFace] WidgetDisposed Exception can ocurr in org.eclipse.jface.window.ApplicationWindow.run()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>A WidgetDisposed Exception can ocurr in 
org.eclipse.jface.window.ApplicationWindow.run().

It happens when the Control 'currentFocus' is disposed during the execution of 
the runnable.

Over here this happens with a custom ContentMergeViewer. Under certain 
circumstances, closing/saving the comparer will trigger the diff process which 
in turn switches the ContentMergeViewer and the old content is disposed, 
including the widget that had the focus
Thanks, I've added the !isDisposed() check.</WithStack>
    <WithOutStack>A WidgetDisposed Exception can ocurr in 
org.eclipse.jface.window.ApplicationWindow.run().

It happens when the Control 'currentFocus' is disposed during the execution of 
the runnable.

Over here this happens with a custom ContentMergeViewer. Under certain 
circumstances, closing/saving the comparer will trigger the diff process which 
in turn switches the ContentMergeViewer and the old content is disposed, 
including the widget that had the focus
Thanks, I've added the !isDisposed() check.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29139" />
    <CreationDate amount="2003-01-08 08:03:00 -0500" />
    <DupId amount="16287" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Search scope: "Project"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I quite often want to search in the current project, but not in the entire
workspace. It seems a bit of an obvious omission in the set of scopes available.
If possible, it would be nice to have it all over the place, e.g. in searching
for references in JDT, etc.


*** This bug has been marked as a duplicate of 16287 ***</WithStack>
    <WithOutStack>I quite often want to search in the current project, but not in the entire
workspace. It seems a bit of an obvious omission in the set of scopes available.
If possible, it would be nice to have it all over the place, e.g. in searching
for references in JDT, etc.


*** This bug has been marked as a duplicate of 16287 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29140" />
    <CreationDate amount="2003-01-08 08:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>Palette Accessibility: No keyboard accessible way to create connectors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- Open a Logic example diagram</Line>
          <Line>- Press tab repeatedly until focus in on the palette.</Line>
          <Line>- Use arrow keys to navigate to the connector tool and press enter.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Steps:
- Open a Logic example diagram
- Press tab repeatedly until focus in on the palette.
- Use arrow keys to navigate to the connector tool and press enter.

Result:
- Can't continue editing with keyboard - have to transition to mouse to create 
a connector.

Expected result:
- Should be able to continue editing / creating connectors using keyboard only.

Newsgroup exerpt:

"Steven Shaw" &lt;sshaw@rational.com&gt; wrote in message
news:ato44b$s9k$1@rogue.oti.com...
&gt; Hello,
&gt;
&gt; I apologize if this is documented somewhere - I couldn't find it anywhere.
&gt; When focus is on the palette, is there a keyboard accessible way to create
a
&gt; connection between two shapes (without using the mouse)?

There should be, please open a bugzilla.  We can add similar keyboard
support.

&gt; In logic example, you can select the connection tool by pressing space
bar,
&gt; then set the focus back to the keyboard using "Tab", but then the keyboard
&gt; and/or arrows keys seem to be ignored?  Is there a key sequence to enter
&gt; accessibility mode similar to the handles accessibility?

&gt; Same goes for regular shape tools - I can select it, but then can't do
&gt; anything else via keyboard.

In 2.0, this was up to the application.  For 2.1, the intended solution is
that you Control+C the item from the palette, and Paste it into the diagram.
Then you can adjust the position using the accessible handles.  The initial
"constraint" of the pasted item will be up to the application to determine,
probably.
I changed the ConnectionCreationTool to allow the user to create connections 
via the keyboard.  Select the connection tool in the palette, tab (or shift-
tab) back into the editor, use the arrow keys to navigate the available source 
anchors, press the enter key to start the connection at the current anchor, 
use the arrow keys to navigate the available target anchors, and finally press 
the enter key again to finish the connection.  The tool will remain active 
until another tool is activated or the user presses escape to load the default 
tool.</WithStack>
    <WithOutStack>Steps:
- Open a Logic example diagram
- Press tab repeatedly until focus in on the palette.
- Use arrow keys to navigate to the connector tool and press enter.

Result:
- Can't continue editing with keyboard - have to transition to mouse to create 
a connector.

Expected result:
- Should be able to continue editing / creating connectors using keyboard only.

Newsgroup exerpt:

"Steven Shaw" &lt;sshaw@rational.com&gt; wrote in message
news:ato44b$s9k$1@rogue.oti.com...
&gt; Hello,
&gt;
&gt; I apologize if this is documented somewhere - I couldn't find it anywhere.
&gt; When focus is on the palette, is there a keyboard accessible way to create
a
&gt; connection between two shapes (without using the mouse)?

There should be, please open a bugzilla.  We can add similar keyboard
support.

&gt; In logic example, you can select the connection tool by pressing space
bar,
&gt; then set the focus back to the keyboard using "Tab", but then the keyboard
&gt; and/or arrows keys seem to be ignored?  Is there a key sequence to enter
&gt; accessibility mode similar to the handles accessibility?

&gt; Same goes for regular shape tools - I can select it, but then can't do
&gt; anything else via keyboard.

In 2.0, this was up to the application.  For 2.1, the intended solution is
that you Control+C the item from the palette, and Paste it into the diagram.
Then you can adjust the position using the accessible handles.  The initial
"constraint" of the pasted item will be up to the application to determine,
probably.
I changed the ConnectionCreationTool to allow the user to create connections 
via the keyboard.  Select the connection tool in the palette, tab (or shift-
tab) back into the editor, use the arrow keys to navigate the available source 
anchors, press the enter key to start the connection at the current anchor, 
use the arrow keys to navigate the available target anchors, and finally press 
the enter key again to finish the connection.  The tool will remain active 
until another tool is activated or the user presses escape to load the default 
tool.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29141" />
    <CreationDate amount="2003-01-08 09:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[CVS] NPE at "replace with latest from repository"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437338527317">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.core.resources.EclipsePhantomSynchronizer.calculateDirtyCountForPhantom(EclipsePhantomSynchronizer.java:544)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.core.resources.EclipsePhantomSynchronizer.getDirtyCount(EclipsePhantomSynchronizer.java:494)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified(EclipseFolder.java:416)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount(EclipseFolder.java:465)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified(EclipseFolder.java:423)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount(EclipseFolder.java:465)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified(EclipseFolder.java:423)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount(EclipseFolder.java:465)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified(EclipseFolder.java:423)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator$1.run(CVSLightweightDecorator.java:101)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run(EclipseSynchronizer.java:1112)</Frame>
          <Frame depth="11">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.run(EclipseFolder.java:352)</Frame>
          <Frame depth="12">org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.isDirty(CVSLightweightDecorator.java:97)</Frame>
          <Frame depth="13">org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.isDirty(CVSLightweightDecorator.java:118)</Frame>
          <Frame depth="14">org.eclipse.team.internal.ccvs.ui.actions.CVSAction$3.needsPrompt(CVSAction.java:428)</Frame>
          <Frame depth="15">org.eclipse.team.internal.ui.PromptingDialog.promptForMultiple(PromptingDialog.java:65)</Frame>
          <Frame depth="16">org.eclipse.team.internal.ccvs.ui.actions.ReplaceWithRemoteAction.execute(ReplaceWithRemoteAction.java:37)</Frame>
          <Frame depth="17">org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run(CVSAction.java:69)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:250)</Frame>
          <Frame depth="19">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:411)</Frame>
          <Frame depth="20">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:365)</Frame>
          <Frame depth="21">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:356)</Frame>
          <Frame depth="22">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:48)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)</Frame>
          <Frame depth="29">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="30">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="31">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="33">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="34">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>got this in M4:

java.version=1.4.1
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_DE
Command-line arguments: -os win32 -ws win32 -arch x86 -data C:\Dev\workspace -
install file:F:/links/duke/TOOLS/IDE/ECLIPSE_2.1/
!ENTRY org.eclipse.ui 4 4 Jan 08, 2003 14:44:39.591
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jan 08, 2003 14:44:39.601
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipsePhantomSynchronizer.calcula
teDirtyCountForPhantom(EclipsePhantomSynchronizer.java:544)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipsePhantomSynchronizer.getDirt
yCount(EclipsePhantomSynchronizer.java:494)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:465)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:423)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:465)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:423)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:465)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:423)
	at org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator$1.run
(CVSLightweightDecorator.java:101)
	at org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run
(EclipseSynchronizer.java:1112)
	at org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.run
(EclipseFolder.java:352)
	at org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.isDirty
(CVSLightweightDecorator.java:97)
	at org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.isDirty
(CVSLightweightDecorator.java:118)
	at org.eclipse.team.internal.ccvs.ui.actions.CVSAction$3.needsPrompt
(CVSAction.java:428)
	at org.eclipse.team.internal.ui.PromptingDialog.promptForMultiple
(PromptingDialog.java:65)
	at 
org.eclipse.team.internal.ccvs.ui.actions.ReplaceWithRemoteAction.execute
(ReplaceWithRemoteAction.java:37)
	at org.eclipse.team.internal.ccvs.ui.actions.CVSAction.run
(CVSAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:250)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:411)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:365)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:356)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:48)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
I am unable to reproduce this problem.  Are there steps we can follow to 
reproduce?
The class in question no longer exists due to refactoring. I have also verified 
that the NPE will no longer occur.</WithStack>
    <WithOutStack>got this in M4:

java.version=1.4.1
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_DE
Command-line arguments: -os win32 -ws win32 -arch x86 -data C:\Dev\workspace -
install file:F:/links/duke/TOOLS/IDE/ECLIPSE_2.1/
!ENTRY org.eclipse.ui 4 4 Jan 08, 2003 14:44:39.591
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jan 08, 2003 14:44:39.601
!MESSAGE java.lang.NullPointerException
!STACK 0

I am unable to reproduce this problem.  Are there steps we can follow to 
reproduce?
The class in question no longer exists due to refactoring. I have also verified 
that the NPE will no longer occur.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29142" />
    <CreationDate amount="2003-01-08 09:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>Hyperlinking from stackdump locks up Eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="import">
        <location start="2097" end="2121" />
        <code>import java.util.Stack;</code>
      </source_code>
      <source_code type="class">
        <location start="2122" end="2223" />
        <code>public class Test_Hyperlink {
  public static void main(String[] args) {
    new Stack().pop();
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="5">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Create some Java code that fires off an exception.</Line>
          <Line>2. Move the mouse pointer over any of at lines. The mouse pointer should turn</Line>
          <Line>into a finger pointing and the text will be underlined like a link on a webpage.</Line>
          <Line>3. Click the link.</Line>
          <Line>4. Watch Eclipse go into a coma.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>1. Launch Eclipse.</Line>
          <Line>2. Launch the launch config</Line>
          <Line>3. When the stack trace is displayed, click on the trace "Test_Hyperlink...."</Line>
          <Line>Eclipse freeze.</Line>
          <Line>All threads are in an Object.wait() method, except 'ModalContext' thread which</Line>
          <Line>is stop in OS.XDefaultRootWindow. A thread dump indicates that the thread is</Line>
          <Line>waiting for a lock (see attachment).</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>1. Launch Eclipse.</Line>
          <Line>2. Launch the launch config</Line>
          <Line>3. When the stack trace is displayed, click on a trace related to java.util.Stack.</Line>
          <Line>4. Click on the trace "Test_Hyperlink...."</Line>
          <Line>5. Close Eclipse</Line>
          <Line>The console contains a memory dump for an exception in a native (see attachment)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>1. Launch Eclipse.</Line>
          <Line>2. Display the content of editor of Test_Hyperlink.</Line>
          <Line>2. Display the content of editor of java.util.Stack.</Line>
          <Line>3. Launch the launch config</Line>
          <Line>4. Click on the trace "Test_Hyperlink...."</Line>
          <Line>No problem.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>2. Display the content of editor of java.util.Stack.</Line>
          <Line>3. Launch the launch config</Line>
          <Line>4. Click on the trace "Test_Hyperlink...."</Line>
          <Line>No problem.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I am trying to use the hyperlinking feature within the console. I an exception 
in my console view. I move the mouse pointer over, it turns to link. I click 
to the link, but then Eclipse never return from this. I have kill the Eclipse.
Sorry, I submitted this bug entry before I was finished editing it. 

The "hyperlinking of errors" feature within the console appears broken. When I 
try to use this feature, it locks up Eclipse. I have no choice, but to kill the 
Eclipse session. 

How to reproduce the problem.

1. Create some Java code that fires off an exception.
2. Move the mouse pointer over any of at lines. The mouse pointer should turn 
into a finger pointing and the text will be underlined like a link on a webpage. 
3. Click the link. 
4. Watch Eclipse go into a coma. 


I cannot reproduce on windows with build 20030107...you are on Linux-Motif?
Which build of Eclipse?
Is there anything in the .log?
I just had a chance to duplicate this error. No there is nothing in the .log 
file at all. 

Yes, I using Red Hat 7.3 Linux. I running the Motif version via X-Win32 on 
WindowsXP and tunneling it via SSH and putty. 

Part of the application will not run on Windows or I would try it here also for 
you. I'll see if I come with something later in the week to try the problem 
there.
More reports coming from the newsgroup...Luc can you investigate?
The report from today:
Recent Linux/Motif builds freeze when an exception occurs and I follow a
hyperlink in the stacktrace, i.e. menus are not accessible, everythings is
blocked too - I have to kill Eclipse's VM. The Linux/GTK build does not
exhibit this behaviour.

Move to SWT-motif world, as Eclipse blocks on swt method or error on SWT native
code are reported.

The problem is related to the fact that the type we want to display is 'open'
(there is an open editor for this type), but this editor has never been
displayed during this session (i.e. since eclipse has been launch).

I have 3 test cases. They work on the same configuration.

In the debug perspective, open java.util.Stack and the following compilation unit:

import java.util.Stack;
public class Test_Hyperlink {
  public static void main(String[] args) {
    new Stack().pop();
  }
}

Create a launch configuration for this compilation unit.
Set the editor of java.util.Stack on the top.
Close Eclipse.

Test case 1:
1. Launch Eclipse.
2. Launch the launch config
3. When the stack trace is displayed, click on the trace "Test_Hyperlink...."
Eclipse freeze.
All threads are in an Object.wait() method, except 'ModalContext' thread which
is stop in OS.XDefaultRootWindow. A thread dump indicates that the thread is
waiting for a lock (see attachment).

Test case 2:
1. Launch Eclipse.
2. Launch the launch config
3. When the stack trace is displayed, click on a trace related to java.util.Stack.
4. Click on the trace "Test_Hyperlink...."
5. Close Eclipse
The console contains a memory dump for an exception in a native (see attachment)

Test case 3:
1. Launch Eclipse.
2. Display the content of editor of Test_Hyperlink.
2. Display the content of editor of java.util.Stack.
3. Launch the launch config
4. Click on the trace "Test_Hyperlink...."
No problem.

Created attachment 3114
thread dump
Created attachment 3115
memory dump for the exception in the native code
This is definitely SWT and I know exactly what is going on.  The problem 
involves the way that locking is done on Motif.  The case can occur when event 
loops are stacked.

Looking at the thread dump, the ui-thread is running an event loop (from 
ModalContext) inside a call to XtDispatchEvent, sent from the original event 
loop.  Another thread is attempting to create an image but cannot acquire the 
lock that was acquired by the ui-thread from XtDispatchEvent.  ModalContext 
needs to exit to release the lock but I suspect that it is waiting for the 
other thread to create the image.

There is no fix for the general problem.  An X/Motif C program has the same 
restrictions.  However, I believe the case is now happening in Eclipse due to a 
workaround for a GP.  I believe that the work around can be recoded in SWT such 
that the problem doesn't happen in Eclipse.

I will attempt this ASAP.
I have a hack fix, working to make it a real fix.
Fixed &gt; 20030127
ZILLLLLLLLLLLLLLLLBUGGGGGGGGGAZZZZXZ~!!~!@@##~!
*** Bug 30383 has been marked as a duplicate of this bug. ***
*** Bug 30475 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>I am trying to use the hyperlinking feature within the console. I an exception 
in my console view. I move the mouse pointer over, it turns to link. I click 
to the link, but then Eclipse never return from this. I have kill the Eclipse.
Sorry, I submitted this bug entry before I was finished editing it. 

The "hyperlinking of errors" feature within the console appears broken. When I 
try to use this feature, it locks up Eclipse. I have no choice, but to kill the 
Eclipse session. 

How to reproduce the problem.

1. Create some Java code that fires off an exception.
2. Move the mouse pointer over any of at lines. The mouse pointer should turn 
into a finger pointing and the text will be underlined like a link on a webpage. 
3. Click the link. 
4. Watch Eclipse go into a coma. 


I cannot reproduce on windows with build 20030107...you are on Linux-Motif?
Which build of Eclipse?
Is there anything in the .log?
I just had a chance to duplicate this error. No there is nothing in the .log 
file at all. 

Yes, I using Red Hat 7.3 Linux. I running the Motif version via X-Win32 on 
WindowsXP and tunneling it via SSH and putty. 

Part of the application will not run on Windows or I would try it here also for 
you. I'll see if I come with something later in the week to try the problem 
there.
More reports coming from the newsgroup...Luc can you investigate?
The report from today:
Recent Linux/Motif builds freeze when an exception occurs and I follow a
hyperlink in the stacktrace, i.e. menus are not accessible, everythings is
blocked too - I have to kill Eclipse's VM. The Linux/GTK build does not
exhibit this behaviour.

Move to SWT-motif world, as Eclipse blocks on swt method or error on SWT native
code are reported.

The problem is related to the fact that the type we want to display is 'open'
(there is an open editor for this type), but this editor has never been
displayed during this session (i.e. since eclipse has been launch).

I have 3 test cases. They work on the same configuration.

In the debug perspective, open java.util.Stack and the following compilation unit:

import java.util.Stack;
public class Test_Hyperlink {
  public static void main(String[] args) {
    new Stack().pop();
  }
}

Create a launch configuration for this compilation unit.
Set the editor of java.util.Stack on the top.
Close Eclipse.

Test case 1:
1. Launch Eclipse.
2. Launch the launch config
3. When the stack trace is displayed, click on the trace "Test_Hyperlink...."
Eclipse freeze.
All threads are in an Object.wait() method, except 'ModalContext' thread which
is stop in OS.XDefaultRootWindow. A thread dump indicates that the thread is
waiting for a lock (see attachment).

Test case 2:
1. Launch Eclipse.
2. Launch the launch config
3. When the stack trace is displayed, click on a trace related to java.util.Stack.
4. Click on the trace "Test_Hyperlink...."
5. Close Eclipse
The console contains a memory dump for an exception in a native (see attachment)

Test case 3:
1. Launch Eclipse.
2. Display the content of editor of Test_Hyperlink.
2. Display the content of editor of java.util.Stack.
3. Launch the launch config
4. Click on the trace "Test_Hyperlink...."
No problem.

Created attachment 3114
thread dump
Created attachment 3115
memory dump for the exception in the native code
This is definitely SWT and I know exactly what is going on.  The problem 
involves the way that locking is done on Motif.  The case can occur when event 
loops are stacked.

Looking at the thread dump, the ui-thread is running an event loop (from 
ModalContext) inside a call to XtDispatchEvent, sent from the original event 
loop.  Another thread is attempting to create an image but cannot acquire the 
lock that was acquired by the ui-thread from XtDispatchEvent.  ModalContext 
needs to exit to release the lock but I suspect that it is waiting for the 
other thread to create the image.

There is no fix for the general problem.  An X/Motif C program has the same 
restrictions.  However, I believe the case is now happening in Eclipse due to a 
workaround for a GP.  I believe that the work around can be recoded in SWT such 
that the problem doesn't happen in Eclipse.

I will attempt this ASAP.
I have a hack fix, working to make it a real fix.
Fixed &gt; 20030127
ZILLLLLLLLLLLLLLLLBUGGGGGGGGGAZZZZXZ~!!~!@@##~!
*** Bug 30383 has been marked as a duplicate of this bug. ***
*** Bug 30475 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29143" />
    <CreationDate amount="2003-01-08 09:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Inspect variable passed in parameter !</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When i trace my program and i step into a .class like StringBuffer, i cannot 
inspect variable passed in parameter ! Why ?

It's a bug or normal ... ? I wait your response about that !

Thank you
If a class is not compiled with debug attributes, we cannot see locals or 
arguments in the methods. System libraries are often not compiled with debug 
attributes, and thus, you will not see args or locals within them.
Thank you !
All it's ok now !</WithStack>
    <WithOutStack>When i trace my program and i step into a .class like StringBuffer, i cannot 
inspect variable passed in parameter ! Why ?

It's a bug or normal ... ? I wait your response about that !

Thank you
If a class is not compiled with debug attributes, we cannot see locals or 
arguments in the methods. System libraries are often not compiled with debug 
attributes, and thus, you will not see args or locals within them.
Thank you !
All it's ok now !</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29144" />
    <CreationDate amount="2003-01-08 09:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing code implementation in the compiler</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>We have built app. 35 beans 2 of which get a "Missing code implementation in 
the compiler" error at the very beginning of the file reported by the online 
code-checker i.e. internal compiler. Since the beans are very similar it seems 
to us that this must be due to an error in Eclipse (furthermore NetBeans allows 
us to compile the same code).
This error occurs in version 2.0.2 of Eclipse and thus cannot be dismissed as a 
copy of error 21556.
Could you please provide steps to reproduce?
At least a source code that failed would help us to track it down.
Do you have the same issue using 2.1 builds?

This error indicates that an internal error occurred inside the compiler, 
typically an unhandled innerclass scenario (bug).

We need a testcase reproducing the problem in order to issue a fix.
Thomas - any update on this front ?
Lowering severity until steps to reproduce are provided.
We are also performing some rework on this front, which may improve this 
behavior in M5.

If no steps are provided, will have to close this defect, hoping that ongoing 
changes will also cover this scenario.
Closing. Please reopen if you can reproduce it in latest HEAD content (will be 
released into integration build 20030121).


Created attachment 23724
Eclipse project file to reproduce bug

I was able to reproduce the bug:
"Missing code implementation in the compiler"
in Build I20050617-1618
Created attachment 23725
This is a project level workaround

The workaround just strips the inner class/interface definitions. The previous
code was production code that had compiled without problems in build
I20050401-1645.
Ben - At a 2 years distance, it is likely not the same defect, though same
symptoms. Especially considering your testcase has some 1.5 code in there.

Could you please enter a separate bug instead ?
Entered bug 101283 with reduced testcase</WithStack>
    <WithOutStack>We have built app. 35 beans 2 of which get a "Missing code implementation in 
the compiler" error at the very beginning of the file reported by the online 
code-checker i.e. internal compiler. Since the beans are very similar it seems 
to us that this must be due to an error in Eclipse (furthermore NetBeans allows 
us to compile the same code).
This error occurs in version 2.0.2 of Eclipse and thus cannot be dismissed as a 
copy of error 21556.
Could you please provide steps to reproduce?
At least a source code that failed would help us to track it down.
Do you have the same issue using 2.1 builds?

This error indicates that an internal error occurred inside the compiler, 
typically an unhandled innerclass scenario (bug).

We need a testcase reproducing the problem in order to issue a fix.
Thomas - any update on this front ?
Lowering severity until steps to reproduce are provided.
We are also performing some rework on this front, which may improve this 
behavior in M5.

If no steps are provided, will have to close this defect, hoping that ongoing 
changes will also cover this scenario.
Closing. Please reopen if you can reproduce it in latest HEAD content (will be 
released into integration build 20030121).


Created attachment 23724
Eclipse project file to reproduce bug

I was able to reproduce the bug:
"Missing code implementation in the compiler"
in Build I20050617-1618
Created attachment 23725
This is a project level workaround

The workaround just strips the inner class/interface definitions. The previous
code was production code that had compiled without problems in build
I20050401-1645.
Ben - At a 2 years distance, it is likely not the same defect, though same
symptoms. Especially considering your testcase has some 1.5 code in there.

Could you please enter a separate bug instead ?
Entered bug 101283 with reduced testcase</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29145" />
    <CreationDate amount="2003-01-08 09:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>NPE in getLibraryLocations during preference file import</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Start fresh workspace</Line>
          <Line>2. Create Java project (call it "JUnit")</Line>
          <Line>3. Try to import attached preference file</Line>
          <Line>==&gt; import is aborted to exception (see attached .log)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20030107

1. Start fresh workspace
2. Create Java project (call it "JUnit")
3. Try to import attached preference file
==&gt; import is aborted to exception (see attached .log)

Hint: I got the file from a client in order to see his preferences and debug
some code. Of course his JRE settings are not the same as mine i.e. the JREs
can't be found on my machine. This fact must not abort importing of other
preferences.
Created attachment 2920
Eclipse Preference File (epf)
Created attachment 2921
.log
Fixed. The problem was that a JREContainer was being created with a null 
fVmInstall. The fix was to bind the "default JRE" containers to null (i.e. the 
default JRE could no longer be resolved). See 
JREContainerInitializer#updateDefaultJREContainers(..)


Please verify, Joe S.
Verified.</WithStack>
    <WithOutStack>Build 20030107

1. Start fresh workspace
2. Create Java project (call it "JUnit")
3. Try to import attached preference file
==&gt; import is aborted to exception (see attached .log)

Hint: I got the file from a client in order to see his preferences and debug
some code. Of course his JRE settings are not the same as mine i.e. the JREs
can't be found on my machine. This fact must not abort importing of other
preferences.
Created attachment 2920
Eclipse Preference File (epf)
Created attachment 2921
.log
Fixed. The problem was that a JREContainer was being created with a null 
fVmInstall. The fix was to bind the "default JRE" containers to null (i.e. the 
default JRE could no longer be resolved). See 
JREContainerInitializer#updateDefaultJREContainers(..)


Please verify, Joe S.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29146" />
    <CreationDate amount="2003-01-08 10:23:00 -0500" />
    <DupId amount="23472" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>HANG - [Editor Mgmt] Opening file sometimes hangs linux</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>There always seems to be odds that when I attempt to open a file, Eclipse hangs.

I'm running RedHat 8.0. JDK 1.4.1. Eclipse M3 and M4 both exibit this behavior.

I open a file by double clicking on the left hand tree. Usually from the java
perspective.

Odds seem to increase with larger files. Sometimes I can run a day before it
hangs. Sometimes only the second or third file opened will hang it.


*** This bug has been marked as a duplicate of 28228 ***
I don't think this is a duplicate of bug 28228.

Bug 28228 deals with save/build synchronization problems. In this bug, the java
process hangs if I open a file. No save is occuring. No build operation should
be taking place, as the file should already be built. Happens even on my sql
source, which isn't java related.

Further info:
  CPU is not at 100% according to the ps command. But the task bar is slow (10
sec) to respond to my click so I can bring up a console and kill off the task.
  The java screen does not update (except for background color) at all during
the hang.
Assigning to owner of Editor management for comment.
Don't know if it makes a difference, but the box this hangs on has 2 processors.
The same thing is happening to me on my laptop (single cpu). No log gets 
generated. Also running RedHat 8.0 with JDK 1.4.1_01. It also happens when 
creating new file just before it gets opened. It happens somewhere between 
disabling all views and displaying the file in editor. If I see the file title 
in the editor I know it's going to work.
Please could you try to get the the stack trace next time it happens. It will 
be hard for us to fix it without being able to reproduce it. Maybe a 
Ctrl+Break or "kill -(something)" would force a java core file. If we knew 
where it is hanging maybe we could fix it.
Hey again. Do you have any ideas on how to get the stack trace?
Please try running eclipse with java instead of javaw 
  (ex: eclipse -vm /jdk/jre/bin/java).
Then try "kill -3 processnumber" when it hangs.
Created attachment 3194
java stack trace when eclipse hangs
This stack trace was taken when eclipse &gt;=M4 hangs as described above.  I'm
running Red Hat 8.0, gtk2-2.0.6-8 and didn't have a problem prior to M4.
Moving to SWT for comment. It seems we called the native OS.gtk_main_iteration 
() and never came back.
Looks similar to 28553 but I don't want to mark it a duplicate just yet.  
Asigning to Vikki and SN.

Paul, do the windows still redraw when you click on them and layout when you 
resize or do they just show blank space or garbage?
The windows do not redraw the controls. They simply have a default gray or white
background (depending on the pane).

I have not been able to get a stack trace by doing a kill -3. Sometimes the JVM
terminates without a chance to do a kill on it.
I am putting HANG in the title.  From your most recent comments, you say that 
sometimes the JVM terminates.  Is this really a HANG (like you say) or is the 
JVM dumping core?  Is there any way you can make it happen every time?

Do you see a message such as:

Xlib: unexpected async reply (sequence 0xa59f94)!
I have never seen that message.

When I wrote the bug, I had only experience an editor hang. Since then I have
occasionally had the JVM terminate. Usually (9 times out of 10?) it hangs and
does not terminate.

The KDE command bar is very slow to respond when the app hangs. The CPU is still
near idle. I'm not exactly sure what is happening under the covers, or how to
find out.

I can not reproduce the bug at will. It happens about two times a day. Some
times not at all, sometimes more.
I checked the java stack trace and it shows "Xlib: unexpected async reply 
(sequence 0x43eb0b)!"

Marking as a duplicate of 23472

*** This bug has been marked as a duplicate of 23472 ***</WithStack>
    <WithOutStack>There always seems to be odds that when I attempt to open a file, Eclipse hangs.

I'm running RedHat 8.0. JDK 1.4.1. Eclipse M3 and M4 both exibit this behavior.

I open a file by double clicking on the left hand tree. Usually from the java
perspective.

Odds seem to increase with larger files. Sometimes I can run a day before it
hangs. Sometimes only the second or third file opened will hang it.


*** This bug has been marked as a duplicate of 28228 ***
I don't think this is a duplicate of bug 28228.

Bug 28228 deals with save/build synchronization problems. In this bug, the java
process hangs if I open a file. No save is occuring. No build operation should
be taking place, as the file should already be built. Happens even on my sql
source, which isn't java related.

Further info:
  CPU is not at 100% according to the ps command. But the task bar is slow (10
sec) to respond to my click so I can bring up a console and kill off the task.
  The java screen does not update (except for background color) at all during
the hang.
Assigning to owner of Editor management for comment.
Don't know if it makes a difference, but the box this hangs on has 2 processors.
The same thing is happening to me on my laptop (single cpu). No log gets 
generated. Also running RedHat 8.0 with JDK 1.4.1_01. It also happens when 
creating new file just before it gets opened. It happens somewhere between 
disabling all views and displaying the file in editor. If I see the file title 
in the editor I know it's going to work.
Please could you try to get the the stack trace next time it happens. It will 
be hard for us to fix it without being able to reproduce it. Maybe a 
Ctrl+Break or "kill -(something)" would force a java core file. If we knew 
where it is hanging maybe we could fix it.
Hey again. Do you have any ideas on how to get the stack trace?
Please try running eclipse with java instead of javaw 
  (ex: eclipse -vm /jdk/jre/bin/java).
Then try "kill -3 processnumber" when it hangs.
Created attachment 3194
java stack trace when eclipse hangs
This stack trace was taken when eclipse &gt;=M4 hangs as described above.  I'm
running Red Hat 8.0, gtk2-2.0.6-8 and didn't have a problem prior to M4.
Moving to SWT for comment. It seems we called the native OS.gtk_main_iteration 
() and never came back.
Looks similar to 28553 but I don't want to mark it a duplicate just yet.  
Asigning to Vikki and SN.

Paul, do the windows still redraw when you click on them and layout when you 
resize or do they just show blank space or garbage?
The windows do not redraw the controls. They simply have a default gray or white
background (depending on the pane).

I have not been able to get a stack trace by doing a kill -3. Sometimes the JVM
terminates without a chance to do a kill on it.
I am putting HANG in the title.  From your most recent comments, you say that 
sometimes the JVM terminates.  Is this really a HANG (like you say) or is the 
JVM dumping core?  Is there any way you can make it happen every time?

Do you see a message such as:

Xlib: unexpected async reply (sequence 0xa59f94)!
I have never seen that message.

When I wrote the bug, I had only experience an editor hang. Since then I have
occasionally had the JVM terminate. Usually (9 times out of 10?) it hangs and
does not terminate.

The KDE command bar is very slow to respond when the app hangs. The CPU is still
near idle. I'm not exactly sure what is happening under the covers, or how to
find out.

I can not reproduce the bug at will. It happens about two times a day. Some
times not at all, sometimes more.
I checked the java stack trace and it shows "Xlib: unexpected async reply 
(sequence 0x43eb0b)!"

Marking as a duplicate of 23472

*** This bug has been marked as a duplicate of 23472 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29147" />
    <CreationDate amount="2003-01-08 10:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>CVS Repositores should offer create new location from clipboard content</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 2.1-M4

Since it already offers to copy to clipboard, it could reciprocally provide a 
mean to paste a clipboard content and directly create a location out of it.
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>Build 2.1-M4

Since it already offers to copy to clipboard, it could reciprocally provide a 
mean to paste a clipboard content and directly create a location out of it.
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29148" />
    <CreationDate amount="2003-01-08 11:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Contribution of Planty 0.9.1</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Renaming the package prefixes of the contributed code to conform to</Line>
          <Line>Eclipse's name space.</Line>
          <Line>2. Removing references to JDT UI and JDT Core plugins.</Line>
          <Line>3. Removing the PlantyPlugin class and changing Planty's resource/color</Line>
          <Line>management to use the existing managers in org.eclipse.ui.externaltools</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Subject to contribution is only the code that originates from GEBIT.

The contributor is GEBIT.
The main implementor is Alf Schiefelbein (me).
The code that parses the Ant docs for extracting the help texts is from Henrik 
Jaakkola (also GEBIT).
Author statements can be found in every Java file.
All code that originates from GEBIT is licensed under CPL. The license is 
included.
The zip file also contains the DTD Parser (dtdparser1.19.jar) that is necessary 
to get it running. 
The DTD Parser is licensed under LGPL and therefore not subject of the 
contribution.
Created attachment 2922
all sources of Planty

may be imported as project into Eclipse as is
Did you target the proper component ? 
Maybe not, though I didn't know any better. This is supposed to be for the Ant 
External tooling.
I didn't find any better fitting component. Neither Ant nor External tools was 
listed in the components list?

Maybe you notice that I am new to bugzilla and the way you are using it for 
Eclipse. Its usage
is definitely not intuative.

Alf
Move to Platform/Ant.
*** Bug 6252 has been marked as a duplicate of this bug. ***
Created attachment 2990
DTD parser contribution

Attached is a project com.objfac.dtd containing, in the package with the same
name, a DTD parser using Xerces in the package. Also attached are two modified
files from Planty with changes needed to make it work with the new parser. All
this stuff is licensed under the CPL.
The Planty editor (now referred to as the "Ant Editor" in the UI) has been
released to CVS. This original commit contains GEBIT's (Alf's) contribution,
Bob's DTD contribution, and changes I made to integrate this code into the
org.eclipse.ui.externaltools plugin.

These changes included:
1. Renaming the package prefixes of the contributed code to conform to 
Eclipse's name space.
2. Removing references to JDT UI and JDT Core plugins.
3. Removing the PlantyPlugin class and changing Planty's resource/color 
management to use the existing managers in org.eclipse.ui.externaltools

The editor and DTD code are now in a new "Ant Editor" source folder.
DarinW, please verify.

Any bugs against the Ant editor should be filed separately.
I updated the build.properties.
Verified.
We are reviewing the legalities of the initial contribution for this bug 
report.  Regarding the attachment from Alf Schiefelbein.  It says that all 
code from GEBIT is CPL but apart from the dtdparser1.19.jar (which I 
understand is not part of the contribution), is any other part of the code not 
written by GEBIT and/or Alf Schiefelbein and/or not licensed under CPL (now 
EPL)?  If there are such parts, were any of them incorporated into the 
codebase?

The reason I ask this is that in the Planty\doc directory there is a LGPL.txt 
file, to to mention a License-ASF.txt file.  It is not clear what each of 
these licenses apply to.
(In reply to comment #11)

The Ant editor didn't use the DTD parser that was LGPL, for that very reason. It
uses a DTD parser that I wrote, adapted for the Ant editor and contributed under
the (then) CPL, now EPL. You'll find it in
org.eclipse.ant.internal.ui.dtd.schema and related packages.
Thanks Bob.  It seems from various docs that Planty itself was originally 
under a different license.  I am trying to find out what that license was.
Created attachment 25395
License before contributing to Eclipse

You were asking for the previous license. Here it is.
Everything else, about the origin of code and licenses have actually been said
in previous comments to this Contribution.</WithStack>
    <WithOutStack>Subject to contribution is only the code that originates from GEBIT.

The contributor is GEBIT.
The main implementor is Alf Schiefelbein (me).
The code that parses the Ant docs for extracting the help texts is from Henrik 
Jaakkola (also GEBIT).
Author statements can be found in every Java file.
All code that originates from GEBIT is licensed under CPL. The license is 
included.
The zip file also contains the DTD Parser (dtdparser1.19.jar) that is necessary 
to get it running. 
The DTD Parser is licensed under LGPL and therefore not subject of the 
contribution.
Created attachment 2922
all sources of Planty

may be imported as project into Eclipse as is
Did you target the proper component ? 
Maybe not, though I didn't know any better. This is supposed to be for the Ant 
External tooling.
I didn't find any better fitting component. Neither Ant nor External tools was 
listed in the components list?

Maybe you notice that I am new to bugzilla and the way you are using it for 
Eclipse. Its usage
is definitely not intuative.

Alf
Move to Platform/Ant.
*** Bug 6252 has been marked as a duplicate of this bug. ***
Created attachment 2990
DTD parser contribution

Attached is a project com.objfac.dtd containing, in the package with the same
name, a DTD parser using Xerces in the package. Also attached are two modified
files from Planty with changes needed to make it work with the new parser. All
this stuff is licensed under the CPL.
The Planty editor (now referred to as the "Ant Editor" in the UI) has been
released to CVS. This original commit contains GEBIT's (Alf's) contribution,
Bob's DTD contribution, and changes I made to integrate this code into the
org.eclipse.ui.externaltools plugin.

These changes included:
1. Renaming the package prefixes of the contributed code to conform to 
Eclipse's name space.
2. Removing references to JDT UI and JDT Core plugins.
3. Removing the PlantyPlugin class and changing Planty's resource/color 
management to use the existing managers in org.eclipse.ui.externaltools

The editor and DTD code are now in a new "Ant Editor" source folder.
DarinW, please verify.

Any bugs against the Ant editor should be filed separately.
I updated the build.properties.
Verified.
We are reviewing the legalities of the initial contribution for this bug 
report.  Regarding the attachment from Alf Schiefelbein.  It says that all 
code from GEBIT is CPL but apart from the dtdparser1.19.jar (which I 
understand is not part of the contribution), is any other part of the code not 
written by GEBIT and/or Alf Schiefelbein and/or not licensed under CPL (now 
EPL)?  If there are such parts, were any of them incorporated into the 
codebase?

The reason I ask this is that in the Planty\doc directory there is a LGPL.txt 
file, to to mention a License-ASF.txt file.  It is not clear what each of 
these licenses apply to.
(In reply to comment #11)

The Ant editor didn't use the DTD parser that was LGPL, for that very reason. It
uses a DTD parser that I wrote, adapted for the Ant editor and contributed under
the (then) CPL, now EPL. You'll find it in
org.eclipse.ant.internal.ui.dtd.schema and related packages.
Thanks Bob.  It seems from various docs that Planty itself was originally 
under a different license.  I am trying to find out what that license was.
Created attachment 25395
License before contributing to Eclipse

You were asking for the previous license. Here it is.
Everything else, about the origin of code and licenses have actually been said
in previous comments to this Contribution.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29149" />
    <CreationDate amount="2003-01-08 11:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>VM detection on Mac OS</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="7">
        <Lines>
          <Line>- Mac OS X supports multiple VMs (or better different versions of Apple's</Line>
          <Line>VM); today we have 1.2, 1.3, 1.3.1, 1.4.1</Line>
          <Line>- Apple defines what the default is (today its 1.3.1).  However, Java apps</Line>
          <Line>can be launched under a different VM by specifying a version number</Line>
          <Line>(actually a pattern).</Line>
          <Line>- VMs are installed in a well defined place automatically by an Apple</Line>
          <Line>provided installer; users cannot install them anywhere else.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- I want Eclipse to detect all installed VMs automatically without having</Line>
          <Line>the user to install individual JREs or use the new 'Search' feature.</Line>
          <Line>- Today the launching.macosx plugin only detects the default VM</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I'm struggling a bit with VMTypes and VMInstalls on Mac OS X.

Here is what I want to do:

- Mac OS X supports multiple VMs (or better different versions of Apple's
VM); today we have 1.2, 1.3, 1.3.1, 1.4.1
- Apple defines what the default is (today its 1.3.1).  However, Java apps
can be launched under a different VM by specifying a version number
(actually a pattern).
- VMs are installed in a well defined place automatically by an Apple
provided installer; users cannot install them anywhere else.

- I want Eclipse to detect all installed VMs automatically without having
the user to install individual JREs or use the new 'Search' feature.
- Today the launching.macosx plugin only detects the default VM

So should I try to somehow tweak the existing auto-detection or should I
roll my own?

Another problem: JavaRuntime.generateDetectedVMName uses the last component
of the installLocation.
On the Mac this is always "Home" (independent from version), which is not
very useful.
I've released code to head that should allow you to detect all installs when 
you receive the #detectInstallLocation() for your VM type. At this time you can 
create VM installs for each of the installed VM versions. Then, return the 
install location of the VM you want to be default. The name should be preserved 
with the VM you have already created at the specified location.

Please see if this works.
Andre verified this works via e-mail.
Please verify, Darin (S). I changed the VM detection to allow for VMs to be 
created during the detection, and to account for a defualt VM to be set during 
the detection. As well, if a VM is detected at an install location that already 
exists, we no longer create a new one - we just mark it as the default. The 
error logging has been improved to report that "no VMs can be found" (an error 
marker with the workspace) if no VM is found the first time, or if they all go 
missing at some later time.
Test case:
One vm pointing to c:\JRE1.3.1 (set as default)
I have one other VM existing on the computer, JRE1.4.1 but not added to 
Eclipse.
Renamed the c:\JRE1.3.1 to c:\JRE1.3.1new
Open the installed jre preference page...the old jre is still there in the 
table as the only JRE and it is not set as default.  You can actually see that 
underneath the preference dialog the projects have updated the JRE libraries 
to the JRE1.4.1 libs. If you edit the 1.3.1 JRE, it correctly flags the 
location as missing.
The project JRE libraries are updated to the JRE1.4.1...not sure why it does 
not pick up c:\JRE1.3.1new (pretty minor)?.
So the problem is that the Installed JRE preference page shows the old JRE 
even when the new default JRE has already been established.
If you cancel the dialog, and re-open, the installed JREs shows properly. Looks 
like opening the dialog forced refresh, but the dialog did not get the updated 
info.
Fixed. Forced autodection to occurr before populating the VM list in the dialog.
Please verify, Darin (S).
Verified.</WithStack>
    <WithOutStack>I'm struggling a bit with VMTypes and VMInstalls on Mac OS X.

Here is what I want to do:

- Mac OS X supports multiple VMs (or better different versions of Apple's
VM); today we have 1.2, 1.3, 1.3.1, 1.4.1
- Apple defines what the default is (today its 1.3.1).  However, Java apps
can be launched under a different VM by specifying a version number
(actually a pattern).
- VMs are installed in a well defined place automatically by an Apple
provided installer; users cannot install them anywhere else.

- I want Eclipse to detect all installed VMs automatically without having
the user to install individual JREs or use the new 'Search' feature.
- Today the launching.macosx plugin only detects the default VM

So should I try to somehow tweak the existing auto-detection or should I
roll my own?

Another problem: JavaRuntime.generateDetectedVMName uses the last component
of the installLocation.
On the Mac this is always "Home" (independent from version), which is not
very useful.
I've released code to head that should allow you to detect all installs when 
you receive the #detectInstallLocation() for your VM type. At this time you can 
create VM installs for each of the installed VM versions. Then, return the 
install location of the VM you want to be default. The name should be preserved 
with the VM you have already created at the specified location.

Please see if this works.
Andre verified this works via e-mail.
Please verify, Darin (S). I changed the VM detection to allow for VMs to be 
created during the detection, and to account for a defualt VM to be set during 
the detection. As well, if a VM is detected at an install location that already 
exists, we no longer create a new one - we just mark it as the default. The 
error logging has been improved to report that "no VMs can be found" (an error 
marker with the workspace) if no VM is found the first time, or if they all go 
missing at some later time.
Test case:
One vm pointing to c:\JRE1.3.1 (set as default)
I have one other VM existing on the computer, JRE1.4.1 but not added to 
Eclipse.
Renamed the c:\JRE1.3.1 to c:\JRE1.3.1new
Open the installed jre preference page...the old jre is still there in the 
table as the only JRE and it is not set as default.  You can actually see that 
underneath the preference dialog the projects have updated the JRE libraries 
to the JRE1.4.1 libs. If you edit the 1.3.1 JRE, it correctly flags the 
location as missing.
The project JRE libraries are updated to the JRE1.4.1...not sure why it does 
not pick up c:\JRE1.3.1new (pretty minor)?.
So the problem is that the Installed JRE preference page shows the old JRE 
even when the new default JRE has already been established.
If you cancel the dialog, and re-open, the installed JREs shows properly. Looks 
like opening the dialog forced refresh, but the dialog did not get the updated 
info.
Fixed. Forced autodection to occurr before populating the VM list in the dialog.
Please verify, Darin (S).
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29150" />
    <CreationDate amount="2003-01-08 11:50:00 -0500" />
    <DupId amount="29112" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Console: Go to link should have a short cut</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The Go to link action needs a short cut (suggest F3). The short cut should not 
be done via a key listener but via an action definition id and an 
acceleratorSet definition.


*** This bug has been marked as a duplicate of 29112 ***</WithStack>
    <WithOutStack>The Go to link action needs a short cut (suggest F3). The short cut should not 
be done via a key listener but via an action definition id and an 
acceleratorSet definition.


*** This bug has been marked as a duplicate of 29112 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29151" />
    <CreationDate amount="2003-01-08 11:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>NPE in Surround with try/catch block [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437338527337">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:203)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:326)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:626)</Frame>
          <Frame depth="5">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1564)</Frame>
          <Frame depth="6">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2571)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:183)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRunnableContext.java:107)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableContext.java:74)</Frame>
          <Frame depth="11">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:120)</Frame>
          <Frame depth="13">org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:110)</Frame>
          <Frame depth="14">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:193)</Frame>
          <Frame depth="15">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:169)</Frame>
          <Frame depth="16">org.eclipse.jface.action.Action.runWithEvent(Action.java:769)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:411)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:365)</Frame>
          <Frame depth="19">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:356)</Frame>
          <Frame depth="20">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:48)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:623)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1252)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1009)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1467)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.run(Workbench.java:1450)</Frame>
          <Frame depth="27">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="28">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="29">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
          <Frame depth="33">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="34">apple.launcher.LaunchRunner.run(LaunchRunner.java:88)</Frame>
          <Frame depth="35">apple.launcher.LaunchRunner.callMain(LaunchRunner.java:50)</Frame>
          <Frame depth="36">apple.launcher.JavaApplicationLauncher.launch(JavaApplicationLauncher.java:52)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="37" end="603" />
        <code>for (int i= 0; i &lt; versions.length; i++) {
			String version= versions[i];
			if (findVMInstall(version) == null) {
				String path= "/System/Library/Frameworks/JavaVM.framework/Versions/"+version+"/Home";
				File home = new File(path); 
				if (home.exists()) {
					createVMInstall(version);
					if (javaHome != null &amp;&amp; javaHome.equals(path)) {
						if (JavaRuntime.getDefaultVMInstall() == null) {
							IVMInstall vm= findVMInstall(version);
							if (vm != null) {
								JavaRuntime.setDefaultVMInstall(vm, null);
							}
						}
					}
				}
			}
		}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1353" end="1551" />
        <code>The problematic code is JavaModelOperation.run(...) {
			fMonitor = monitor instanceof NullProgressMonitor ? 
null/*workaround for http://bugs.eclipse.org/bugs/show_bug.cgi?id=25529*/ : 
monitor;

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- selected line containing "JavaRuntime..."</Line>
          <Line>- selected "surround with try/catch block" from context menu</Line>
          <Line>- got this NPE:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20030107

Had this code in editor:

		for (int i= 0; i &lt; versions.length; i++) {
			String version= versions[i];
			if (findVMInstall(version) == null) {
				String path= "/System/Library/Frameworks/JavaVM.framework/Versions/"+version+"/Home";
				File home = new File(path); 
				if (home.exists()) {
					createVMInstall(version);
					if (javaHome != null &amp;&amp; javaHome.equals(path)) {
						if (JavaRuntime.getDefaultVMInstall() == null) {
							IVMInstall vm= findVMInstall(version);
							if (vm != null) {
								JavaRuntime.setDefaultVMInstall(vm, null);
							}
						}
					}
				}
			}
		}
[Oops, Safari seems to have problems with text pasted into this field...]

- selected line containing "JavaRuntime..."
- selected "surround with try/catch block" from context menu
- got this NPE:

!ENTRY org.eclipse.ui 4 0 Jan 08, 2003 17:57:22.179
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:203)
	at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)
	at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:326)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:626)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1564)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2571)
	at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:183)
	at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151)
	at org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRunnableContext.java:107)
	at org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableContext.java:74)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)
	at org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:120)
	at org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:110)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:193)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:169)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:769)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:411)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:365)
	at org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:356)
	at org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:48)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:623)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1252)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1009)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1467)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1450)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
	at java.lang.reflect.Method.invoke(Native Method)
	at apple.launcher.LaunchRunner.run(LaunchRunner.java:88)
	at apple.launcher.LaunchRunner.callMain(LaunchRunner.java:50)
	at apple.launcher.JavaApplicationLauncher.launch(JavaApplicationLauncher.java:52)
java.lang.NullPointerException

*** Bug 29547 has been marked as a duplicate of this bug. ***
*** Bug 29549 has been marked as a duplicate of this bug. ***
This is caused by code in the Java Core which magically converts an instance of 
a NullProgressMonitor into null. Your refactoring code doesn't assume at every 
place that the progress monitor can be null, since we make sure at the 
beginning of an operation that the progress monitor != null.

The problematic code is JavaModelOperation.run(...) {
			fMonitor = monitor instanceof NullProgressMonitor ? 
null/*workaround for http://bugs.eclipse.org/bugs/show_bug.cgi?id=25529*/ : 
monitor;

}

IMO core can't replace a valid progress monitor through null even if it is an 
instance of NullProgressMonitor since this can cause NPE.

Moving to JDT Core.
I removed this check that replace NullProgressMonitor with null. All JDT/Core
tests passed.
Fixed and released in 2.1 stream.
*** Bug 30023 has been marked as a duplicate of this bug. ***
Verified.</WithStack>
    <WithOutStack>I20030107

Had this code in editor:

		for (int i= 0; i &lt; versions.length; i++) {
			String version= versions[i];
			if (findVMInstall(version) == null) {
				String path= "/System/Library/Frameworks/JavaVM.framework/Versions/"+version+"/Home";
				File home = new File(path); 
				if (home.exists()) {
					createVMInstall(version);
					if (javaHome != null &amp;&amp; javaHome.equals(path)) {
						if (JavaRuntime.getDefaultVMInstall() == null) {
							IVMInstall vm= findVMInstall(version);
							if (vm != null) {
								JavaRuntime.setDefaultVMInstall(vm, null);
							}
						}
					}
				}
			}
		}
[Oops, Safari seems to have problems with text pasted into this field...]

- selected line containing "JavaRuntime..."
- selected "surround with try/catch block" from context menu
- got this NPE:

!ENTRY org.eclipse.ui 4 0 Jan 08, 2003 17:57:22.179
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException

*** Bug 29547 has been marked as a duplicate of this bug. ***
*** Bug 29549 has been marked as a duplicate of this bug. ***
This is caused by code in the Java Core which magically converts an instance of 
a NullProgressMonitor into null. Your refactoring code doesn't assume at every 
place that the progress monitor can be null, since we make sure at the 
beginning of an operation that the progress monitor != null.

The problematic code is JavaModelOperation.run(...) {
			fMonitor = monitor instanceof NullProgressMonitor ? 
null/*workaround for http://bugs.eclipse.org/bugs/show_bug.cgi?id=25529*/ : 
monitor;

}

IMO core can't replace a valid progress monitor through null even if it is an 
instance of NullProgressMonitor since this can cause NPE.

Moving to JDT Core.
I removed this check that replace NullProgressMonitor with null. All JDT/Core
tests passed.
Fixed and released in 2.1 stream.
*** Bug 30023 has been marked as a duplicate of this bug. ***
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29152" />
    <CreationDate amount="2003-01-08 12:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Migrate extension point schema ownership</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>From eclipse-dev:
We have compiled a step-by-step transition guide that
will make it a snap, particularly if your team has only a couple of
extension points (as is the usual case). Since the files in our possetion
are at 2.0 level, in some cases you may find them completely accurate or
needing only minor changes. The document can be found at:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/pde-ui-
home/working/extension-point-schemas.html
Fixed for the Ant schema files and doc.
Currently no plan to do for external tools for 2.1.
Verified.
Please update the build notes (DarinS).</WithStack>
    <WithOutStack>From eclipse-dev:
We have compiled a step-by-step transition guide that
will make it a snap, particularly if your team has only a couple of
extension points (as is the usual case). Since the files in our possetion
are at 2.0 level, in some cases you may find them completely accurate or
needing only minor changes. The document can be found at:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/pde-ui-
home/working/extension-point-schemas.html
Fixed for the Ant schema files and doc.
Currently no plan to do for external tools for 2.1.
Verified.
Please update the build notes (DarinS).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29153" />
    <CreationDate amount="2003-01-08 12:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Migrate extension point schema ownership</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>From eclipse-dev:
We have compiled a step-by-step transition guide that
will make it a snap, particularly if your team has only a couple of
extension points (as is the usual case). Since the files in our possetion
are at 2.0 level, in some cases you may find them completely accurate or
needing only minor changes. The document can be found at:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/pde-ui-
home/working/extension-point-schemas.html
Please verify.
Verified. Nice.</WithStack>
    <WithOutStack>From eclipse-dev:
We have compiled a step-by-step transition guide that
will make it a snap, particularly if your team has only a couple of
extension points (as is the usual case). Since the files in our possetion
are at 2.0 level, in some cases you may find them completely accurate or
needing only minor changes. The document can be found at:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/pde-ui-
home/working/extension-point-schemas.html
Please verify.
Verified. Nice.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29154" />
    <CreationDate amount="2003-01-08 12:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Preferences&gt;Java&gt;Editor&gt;Hovers is not accessible</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>You cannot change a value with the keyboard only.

Similarly the userinterface is currently not intuitive (Default Hover shows up 
in both columns, "best match" isn't clear to the user)
Available in builds &gt;= N20030127</WithStack>
    <WithOutStack>You cannot change a value with the keyboard only.

Similarly the userinterface is currently not intuitive (Default Hover shows up 
in both columns, "best match" isn't clear to the user)
Available in builds &gt;= N20030127</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29155" />
    <CreationDate amount="2003-01-08 13:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Some failure cases bury actual exception</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I just witnessed a failure case involving a connection timeout that buries the 
underlying timeout failure message (the message shown to the user is "cannot 
read from source..." which is not overly useful). The problem is that, in the 
stream we provide Core when setting the contents of a local file, the timeout 
results in an IOException. This is wrapped in a CoreException and propogated 
up. Later, the CoreException is wrapped in a CVSException which essentially 
buries the IOException (i.e. the CVSException grabs the message from the 
CoreException but doesn't look any deeper).

One possible solution is to modify wrapException to check for 
IResourceStatus.FAILED_READ_LOCAL and dig for the IOException in this case.
Fix released to HEAD</WithStack>
    <WithOutStack>I just witnessed a failure case involving a connection timeout that buries the 
underlying timeout failure message (the message shown to the user is "cannot 
read from source..." which is not overly useful). The problem is that, in the 
stream we provide Core when setting the contents of a local file, the timeout 
results in an IOException. This is wrapped in a CoreException and propogated 
up. Later, the CoreException is wrapped in a CVSException which essentially 
buries the IOException (i.e. the CVSException grabs the message from the 
CoreException but doesn't look any deeper).

One possible solution is to modify wrapException to check for 
IResourceStatus.FAILED_READ_LOCAL and dig for the IOException in this case.
Fix released to HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29156" />
    <CreationDate amount="2003-01-08 13:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Highlight all occurances of local Java variable</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functiondef">
        <location start="2064" end="2446" />
        <code>public void waitForProduction() {

        Object rCV = MyAnonProducerProxy.getCV();

        while (MyAnonProducerProxy.isNothingOnQueue()) {
            synchronized (rCV) {
                try {
                    rCV.wait();
                } catch (Exception e) {
                    System.out.println("!!!Exception=" + e);
                }
            }
        }
    }</code>
      </source_code>
      <source_code type="class">
        <location start="2677" end="2812" />
        <code>abstract public class AnonConsumer implements Runnable {

    private AnonProducerProxy MyAnonProducerProxy;
    private MtQueue MyQ;
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="3636" end="3666" />
        <code>Vector	    v = new Vector();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Highlight rCV and press SHIFT-CTL-U</Line>
          <Line>2. Don't let the highlight go away</Line>
          <Line>3. All occurances will be highlighted correctly</Line>
          <Line>4. Now since the highlight is already on rCV, press CTL-1</Line>
          <Line>5. The drop-down does not appear (BUG-1)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>1. If I highlight MyQ declaration above, and press SHIFT-CTL-U, none of the</Line>
          <Line>subsequent occurancess (not shown above) are highlighted.</Line>
          <Line>2. This means Highlight is working only for references and not declarations for</Line>
          <Line>Data Members.</Line>
          <Line>3. For local variables, if you press SHIFT-CTL-U on a declaration it works</Line>
          <Line>properly.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Sorry if this is a duplicate of the one I wrote this morning as I did not get 
any confirmation. My browser didn't show the confirmation either.

Earlier I had requested this feature and I was told that API did not support 
this kind of search.

I recently discovered CTL-1 mechanism and found that it allowed me to rename 
local variables. I see an opportunity here. If CTL-1 can rename all occurances 
of a local variable, data member etc, it should also be able to provide an 
option "highlight all occurances" in the same drop down box. It is a natural 
place as before I rename I should be able to view all occurance that I am 
renaming.

I hope this makes sense and will fulfill a long time request to bring about 
ease of development and maintanance of code.
We have released a Search&gt;Occurrences in File action that does exactly what you 
want (it highlights references and indicates in the search result view 
read/write access). There is bug in that the action doesn't show up in some 
circumstances, but the short cut ctrl-shift-U works in the Jan 07 integration 
build.



How about the intutiveness of having "show all occurances" in the CTL-1 menu
as a menu item?

Could we add it there to make user experience seamless?



By the way, I tested the Shft-CTL-U, looks good.

However, it shadows the CTL-1 mechanism. When you locate occurances of some 
Java element using shift-ctl-u, and subsequently perform a CTL-1 on that 
element, which search matches exist, the dropdown shows "No corrections 
available"

If you "remove all selected matches", and then perform CTL-1 on the same 
element, now it allows "rename" as an option.

Obviously just a minor defect.

Thanks for the feature.
Regarding the shadowing...
It looks like quick assist just checks whether there is a marker at the range 
it should also check for the marker type. Martin pls check whether my theory is 
correct.


Fixed the shadowing &gt; 20030108

For now we don't have the plan to add "show all occurances" in the CTL-1 menu. 

Here is a piece of code to describe the bug:

Bug1:
    public void waitForProduction() {

        Object rCV = MyAnonProducerProxy.getCV();

        while (MyAnonProducerProxy.isNothingOnQueue()) {
            synchronized (rCV) {
                try {
                    rCV.wait();
                } catch (Exception e) {
                    System.out.println("!!!Exception=" + e);
                }
            }
        }
    }

1. Highlight rCV and press SHIFT-CTL-U
2. Don't let the highlight go away
3. All occurances will be highlighted correctly
4. Now since the highlight is already on rCV, press CTL-1
5. The drop-down does not appear (BUG-1)

Bug 2:
abstract public class AnonConsumer implements Runnable {

    private AnonProducerProxy MyAnonProducerProxy;
    private MtQueue MyQ;
}
1. If I highlight MyQ declaration above, and press SHIFT-CTL-U, none of the 
subsequent occurancess (not shown above) are highlighted.
2. This means Highlight is working only for references and not declarations for 
Data Members.
3. For local variables, if you press SHIFT-CTL-U on a declaration it works 
properly.

=====================================================================

Must also not that CTL-1 mechanism is broken as well. 

1. If I highlight MyQ declaration above, and press CTL-1, drop down does not 
show. Only shows for references.


Useful additional observations that may help:

Highlight all occurances for Local variables or Data Members, display similar 
behavior.

If I have 

		Vector	    v;

as a local variable or a data member, Highlight all occurances does not work.

However, if I have:

		Vector	    v = new Vector();

It works.

Important: Please note that the same observation applies to CTL-1 mechanism for 
rename. If left uninitialized, both locals and data members show "No Correction 
available" (which is wrong as well). Initialized, the show "Rename"

Thanks,

Vinay
Vector scenario works now</WithStack>
    <WithOutStack>Sorry if this is a duplicate of the one I wrote this morning as I did not get 
any confirmation. My browser didn't show the confirmation either.

Earlier I had requested this feature and I was told that API did not support 
this kind of search.

I recently discovered CTL-1 mechanism and found that it allowed me to rename 
local variables. I see an opportunity here. If CTL-1 can rename all occurances 
of a local variable, data member etc, it should also be able to provide an 
option "highlight all occurances" in the same drop down box. It is a natural 
place as before I rename I should be able to view all occurance that I am 
renaming.

I hope this makes sense and will fulfill a long time request to bring about 
ease of development and maintanance of code.
We have released a Search&gt;Occurrences in File action that does exactly what you 
want (it highlights references and indicates in the search result view 
read/write access). There is bug in that the action doesn't show up in some 
circumstances, but the short cut ctrl-shift-U works in the Jan 07 integration 
build.



How about the intutiveness of having "show all occurances" in the CTL-1 menu
as a menu item?

Could we add it there to make user experience seamless?



By the way, I tested the Shft-CTL-U, looks good.

However, it shadows the CTL-1 mechanism. When you locate occurances of some 
Java element using shift-ctl-u, and subsequently perform a CTL-1 on that 
element, which search matches exist, the dropdown shows "No corrections 
available"

If you "remove all selected matches", and then perform CTL-1 on the same 
element, now it allows "rename" as an option.

Obviously just a minor defect.

Thanks for the feature.
Regarding the shadowing...
It looks like quick assist just checks whether there is a marker at the range 
it should also check for the marker type. Martin pls check whether my theory is 
correct.


Fixed the shadowing &gt; 20030108

For now we don't have the plan to add "show all occurances" in the CTL-1 menu. 

Here is a piece of code to describe the bug:

Bug1:
    public void waitForProduction() {

        Object rCV = MyAnonProducerProxy.getCV();

        while (MyAnonProducerProxy.isNothingOnQueue()) {
            synchronized (rCV) {
                try {
                    rCV.wait();
                } catch (Exception e) {
                    System.out.println("!!!Exception=" + e);
                }
            }
        }
    }

1. Highlight rCV and press SHIFT-CTL-U
2. Don't let the highlight go away
3. All occurances will be highlighted correctly
4. Now since the highlight is already on rCV, press CTL-1
5. The drop-down does not appear (BUG-1)

Bug 2:
abstract public class AnonConsumer implements Runnable {

    private AnonProducerProxy MyAnonProducerProxy;
    private MtQueue MyQ;
}
1. If I highlight MyQ declaration above, and press SHIFT-CTL-U, none of the 
subsequent occurancess (not shown above) are highlighted.
2. This means Highlight is working only for references and not declarations for 
Data Members.
3. For local variables, if you press SHIFT-CTL-U on a declaration it works 
properly.

=====================================================================

Must also not that CTL-1 mechanism is broken as well. 

1. If I highlight MyQ declaration above, and press CTL-1, drop down does not 
show. Only shows for references.


Useful additional observations that may help:

Highlight all occurances for Local variables or Data Members, display similar 
behavior.

If I have 

		Vector	    v;

as a local variable or a data member, Highlight all occurances does not work.

However, if I have:

		Vector	    v = new Vector();

It works.

Important: Please note that the same observation applies to CTL-1 mechanism for 
rename. If left uninitialized, both locals and data members show "No Correction 
available" (which is wrong as well). Initialized, the show "Rename"

Thanks,

Vinay
Vector scenario works now</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29157" />
    <CreationDate amount="2003-01-08 13:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Doc" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Download Incomplete</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>In trying to download the Eclipse Platform (2.0.2), the download reaches 99% 
and dies. The download never completes. This happens in both IE &amp; Netscape.
Have you tried downloading again lately?  This has worked fine for literally
millions of other people...
Invalid</WithStack>
    <WithOutStack>In trying to download the Eclipse Platform (2.0.2), the download reaches 99% 
and dies. The download never completes. This happens in both IE &amp; Netscape.
Have you tried downloading again lately?  This has worked fine for literally
millions of other people...
Invalid</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29158" />
    <CreationDate amount="2003-01-08 14:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Class file editor not opened for alternate runtime JRE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Debugging a simple junit.samples.VectorTest program, I stepped into some system 
code (i.e. java.util.Vector). I was debugging with a JRE that was not in the 
workspace (IBM 1.3). Rather than opening a classfile editor with no source 
attachment, an error message was displayed saying the source could not be found.
Woops - fooled myself. The classfile is not opened because it is not part of 
the java model (it is external).

Working as designed.</WithStack>
    <WithOutStack>Debugging a simple junit.samples.VectorTest program, I stepped into some system 
code (i.e. java.util.Vector). I was debugging with a JRE that was not in the 
workspace (IBM 1.3). Rather than opening a classfile editor with no source 
attachment, an error message was displayed saying the source could not be found.
Woops - fooled myself. The classfile is not opened because it is not part of 
the java model (it is external).

Working as designed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29159" />
    <CreationDate amount="2003-01-08 14:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>DeltaProcessor walks removed project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Create a new project with its own source folder &amp; a source file.</Line>
          <Line />
          <Line>2. Now delete the project with a breakpoint in DeltaProcessor.updateRoots().</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>1. Create a new project with its own source folder &amp; a source file.

2. Now delete the project with a breakpoint in DeltaProcessor.updateRoots().

Notice that each source file is 'removed' from its index... even though the 
index was already removed.
The opposite also happens... when an existing project on disk is 'added' to the 
workspace, the entire project is told to index &amp; then the DeltaProcessor walks 
every source file and re-indexes it.
Changed update roots to only update the roots that are external to the project 
being added/removed.
Verified.</WithStack>
    <WithOutStack>1. Create a new project with its own source folder &amp; a source file.

2. Now delete the project with a breakpoint in DeltaProcessor.updateRoots().

Notice that each source file is 'removed' from its index... even though the 
index was already removed.
The opposite also happens... when an existing project on disk is 'added' to the 
workspace, the entire project is told to index &amp; then the DeltaProcessor walks 
every source file and re-indexes it.
Changed update roots to only update the roots that are external to the project 
being added/removed.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29160" />
    <CreationDate amount="2003-01-08 14:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>[Navigator] NPE in ResourceNavigator.migrateDialogSettings</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437338527337">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java:54)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java:68)</Frame>
          <Frame depth="2">java.lang.NullPointerException.&lt;init&gt;(NullPointerException.java:63)</Frame>
          <Frame depth="3">org.eclipse.ui.views.navigator.ResourceNavigator.migrateDialogSettings(ResourceNavigator.java:719)</Frame>
          <Frame depth="4">org.eclipse.ui.views.navigator.ResourceNavigator.&lt;init&gt;(ResourceNavigator.java:132)</Frame>
          <Frame depth="5">java.lang.Class.newInstanceImpl(Native Method)</Frame>
          <Frame depth="6">java.lang.Class.newInstance(Class.java:1421)</Frame>
          <Frame depth="7">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:138)</Frame>
          <Frame depth="8">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:167)</Frame>
          <Frame depth="9">org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:103)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:156)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.registry.ViewDescriptor.createView(ViewDescriptor.java:45)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.ViewFactory$2.run(ViewFactory.java:111)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:852)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.ViewFactory.busyRestoreView(ViewFactory.java:93)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.ViewFactory$1.run(ViewFactory.java:77)</Frame>
          <Frame depth="17">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.ViewFactory.restoreView(ViewFactory.java:73)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.ViewFactory$ViewReference.getPart(ViewFactory.java:319)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:341)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.WorkbenchPage.updateVisibility(WorkbenchPage.java:2417)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.WorkbenchPage.init(WorkbenchPage.java:1521)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.WorkbenchPage.&lt;init&gt;(WorkbenchPage.java:309)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.WorkbenchWindow.busyOpenPage(WorkbenchWindow.java:356)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.busyOpenWorkbenchWindow(Workbench.java:326)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.access$10(Workbench.java:319)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench$11.run(Workbench.java:1121)</Frame>
          <Frame depth="28">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.openWorkbenchWindow(Workbench.java:1118)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.showPerspective(Workbench.java:1617)</Frame>
          <Frame depth="31">org.eclipse.search.internal.ui.SearchPlugin.activateSearchResultView(SearchPlugin.java:179)</Frame>
          <Frame depth="32">org.eclipse.search.ui.SearchUI.activateSearchResultView(SearchUI.java:91)</Frame>
          <Frame depth="33">org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:263)</Frame>
          <Frame depth="34">org.eclipse.jdt.ui.actions.FindReferencesAction.run(FindReferencesAction.java:79)</Frame>
          <Frame depth="35">org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:237)</Frame>
          <Frame depth="36">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:193)</Frame>
          <Frame depth="37">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:169)</Frame>
          <Frame depth="38">org.eclipse.jface.action.Action.runWithEvent(Action.java:769)</Frame>
          <Frame depth="39">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:411)</Frame>
          <Frame depth="40">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:365)</Frame>
          <Frame depth="41">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:356)</Frame>
          <Frame depth="42">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:48)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1467)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.Workbench.run(Workbench.java:1450)</Frame>
          <Frame depth="49">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="50">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="51">java.lang.reflect.AccessibleObject.invokeImpl(Native Method)</Frame>
          <Frame depth="52">java.lang.reflect.AccessibleObject.invokeL(AccessibleObject.java:203)</Frame>
          <Frame depth="53">java.lang.reflect.Method.invoke(Method.java:271)</Frame>
          <Frame depth="54">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="55">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="56">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="ifstatement">
        <location start="95" end="143" />
        <code>Line 719 is: "if (workingSetName.length() &gt; 0) {</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- Run the attached workspace (I am running as target from my development</Line>
          <Line>eclipse). It should open one window with a java perspective.</Line>
          <Line>- Window-&gt;Show Perspective-&gt;Resource.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build id: 200212181304

Not sure how to reproduce but I got the following NPE in my .log file.
Line 719 is: "if (workingSetName.length() &gt; 0) {"

java.lang.NullPointerException
   	at java.lang.Throwable.&lt;init&gt;(Throwable.java:54)
   	at java.lang.Throwable.&lt;init&gt;(Throwable.java:68)
   	at java.lang.NullPointerException.&lt;init&gt;(NullPointerException.java:63)
   	at 
org.eclipse.ui.views.navigator.ResourceNavigator.migrateDialogSettings
(ResourceNavigator.java:719)
   	at org.eclipse.ui.views.navigator.ResourceNavigator.&lt;init&gt;
(ResourceNavigator.java:132)
   	at java.lang.Class.newInstanceImpl(Native Method)
   	at java.lang.Class.newInstance(Class.java:1421)
   	at 
org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension
(PluginDescriptor.java:138)
   	at 
org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension
(PluginDescriptor.java:167)
   	at 
org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtensio
n(ConfigurationElement.java:103)
   	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension
(WorkbenchPlugin.java:156)
   	at org.eclipse.ui.internal.registry.ViewDescriptor.createView
(ViewDescriptor.java:45)
   	at org.eclipse.ui.internal.ViewFactory$2.run(ViewFactory.java:111)
   	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:852)
   	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
   	at org.eclipse.ui.internal.ViewFactory.busyRestoreView
(ViewFactory.java:93)
   	at org.eclipse.ui.internal.ViewFactory$1.run(ViewFactory.java:77)
   	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:65)
   	at org.eclipse.ui.internal.ViewFactory.restoreView(ViewFactory.java:73)
   	at org.eclipse.ui.internal.ViewFactory$ViewReference.getPart
(ViewFactory.java:319)
   	at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:341)
   	at org.eclipse.ui.internal.WorkbenchPage.updateVisibility
(WorkbenchPage.java:2417)
   	at org.eclipse.ui.internal.WorkbenchPage.init(WorkbenchPage.java:1521)
   	at org.eclipse.ui.internal.WorkbenchPage.&lt;init&gt;(WorkbenchPage.java:309)
   	at org.eclipse.ui.internal.WorkbenchWindow.busyOpenPage
(WorkbenchWindow.java:356)
   	at org.eclipse.ui.internal.Workbench.busyOpenWorkbenchWindow
(Workbench.java:326)
   	at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:319)
   	at org.eclipse.ui.internal.Workbench$11.run(Workbench.java:1121)
   	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:65)
   	at org.eclipse.ui.internal.Workbench.openWorkbenchWindow
(Workbench.java:1118)
   	at org.eclipse.ui.internal.Workbench.showPerspective
(Workbench.java:1617)
   	at org.eclipse.search.internal.ui.SearchPlugin.activateSearchResultView
(SearchPlugin.java:179)
   	at org.eclipse.search.ui.SearchUI.activateSearchResultView
(SearchUI.java:91)
   	at org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:263)
   	at org.eclipse.jdt.ui.actions.FindReferencesAction.run
(FindReferencesAction.java:79)
   	at org.eclipse.jdt.ui.actions.FindAction.run(FindAction.java:237)
   	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:193)
   	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:169)
   	at org.eclipse.jface.action.Action.runWithEvent(Action.java:769)
   	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:411)
   	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:365)
   	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:356)
   	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:48)
   	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
   	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
   	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
   	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
   	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1467)
   	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1450)
   	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
   	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
   	at java.lang.reflect.AccessibleObject.invokeImpl(Native Method)
   	at java.lang.reflect.AccessibleObject.invokeL
(AccessibleObject.java:203)
   	at java.lang.reflect.Method.invoke(Method.java:271)
   	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
   	at org.eclipse.core.launcher.Main.run(Main.java:703)
   	at org.eclipse.core.launcher.Main.main(Main.java:539)
Going to attach my workspace. This are the steps that should reproduce the 
problem:
 - Run the attached workspace (I am running as target from my development 
eclipse). It should open one window with a java perspective.
 - Window-&gt;Show Perspective-&gt;Resource.

It should fail to create the Navigator.
Created attachment 2924
Target workbench in a zip file.
I didn't check whether the dialog settings actually contained a working set and 
sort type setting before I tried to migrate the settings. 
Fixed in &gt;20030108.</WithStack>
    <WithOutStack>Build id: 200212181304

Not sure how to reproduce but I got the following NPE in my .log file.
Line 719 is: "if (workingSetName.length() &gt; 0) {"


Going to attach my workspace. This are the steps that should reproduce the 
problem:
 - Run the attached workspace (I am running as target from my development 
eclipse). It should open one window with a java perspective.
 - Window-&gt;Show Perspective-&gt;Resource.

It should fail to create the Navigator.
Created attachment 2924
Target workbench in a zip file.
I didn't check whether the dialog settings actually contained a working set and 
sort type setting before I tried to migrate the settings. 
Fixed in &gt;20030108.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29161" />
    <CreationDate amount="2003-01-08 14:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Quickfix can't fix a simple fix [quick fix]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="30" end="151" />
        <code>public class Foo {
  private static final String BAR = "bar";
  public Foo () {
      System.out.println(this.BAR);
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If I have a class like this:

public class Foo {
  private static final String BAR = "bar";
  public Foo () {
      System.out.println(this.BAR);
  }
}

There's a light bulb on the 'this.BAR' line, which says "The static field
Foo.BAR should be accessed in a static way", but says "No corrections available"
when I click on it.

The fix is simply removing 'this', ie "this.BAR" becomes only "BAR". It's a very
simple correction, I think quick fix should know about it.
Note that the type of the qualifier should be used instead (and nothing if 
within same type).
fixed &gt; 20020108

Added test case LocalCorrectionsQuickFixTest.testThisAccessToStaticField</WithStack>
    <WithOutStack>If I have a class like this:

public class Foo {
  private static final String BAR = "bar";
  public Foo () {
      System.out.println(this.BAR);
  }
}

There's a light bulb on the 'this.BAR' line, which says "The static field
Foo.BAR should be accessed in a static way", but says "No corrections available"
when I click on it.

The fix is simply removing 'this', ie "this.BAR" becomes only "BAR". It's a very
simple correction, I think quick fix should know about it.
Note that the type of the qualifier should be used instead (and nothing if 
within same type).
fixed &gt; 20020108

Added test case LocalCorrectionsQuickFixTest.testThisAccessToStaticField</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29162" />
    <CreationDate amount="2003-01-08 14:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[Editor Mgmt] Open file with External editor does not work</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I created a file association with *.java to gvim (/usr/X11R6/bin/gvim).

Selecting open with does nothing.
I then created a chell script to write a log file and creaed the association
with that instead.  The script is never called.

Eclipse 2.0.2 Linux Motif
Tried it on 2.1 and it works. Please reopen if you see this problem again in 
the 2.1 stream.</WithStack>
    <WithOutStack>I created a file association with *.java to gvim (/usr/X11R6/bin/gvim).

Selecting open with does nothing.
I then created a chell script to write a log file and creaed the association
with that instead.  The script is never called.

Eclipse 2.0.2 Linux Motif
Tried it on 2.1 and it works. Please reopen if you see this problem again in 
the 2.1 stream.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29163" />
    <CreationDate amount="2003-01-08 15:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>SafeRunnable needs to be accessible in JFace</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We need to be able to access the SafeRunnable in JFace in order that some 
error protection can be added to preferences and properties dialogs.
Moved jface classes from org.eclipse.ui.workbench/extensions back to jface/src 
and added core.runtime in jface build path and plugin.xml.</WithStack>
    <WithOutStack>We need to be able to access the SafeRunnable in JFace in order that some 
error protection can be added to preferences and properties dialogs.
Moved jface classes from org.eclipse.ui.workbench/extensions back to jface/src 
and added core.runtime in jface build path and plugin.xml.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29164" />
    <CreationDate amount="2003-01-08 15:19:00 -0500" />
    <DupId amount="28551" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CVS synchronization problems</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="26">
        <Lines>
          <Line>1. Create a file named ".options" in you eclipse directory (the directory that</Line>
          <Line>contains the executable) that contains the following 2 lines that enable CVS</Line>
          <Line>debugging.</Line>
          <Line>org.eclipse.team.cvs.core/debug=true</Line>
          <Line>org.eclipse.team.cvs.core/cvsprotocol=true</Line>
          <Line />
          <Line>2. Start Eclipse with the following parameters tailored to you local setup (The</Line>
          <Line>below example is for windows). The important aspects are the use of java.exe</Line>
          <Line>instead of javaw.exe and the inclusion of the -debug and -consolelog options.</Line>
          <Line>These will cause the debug console to be visible and for debugging output to</Line>
          <Line>appear in the console.</Line>
          <Line>C:\eclipse\eclipse.exe</Line>
          <Line>-vm C:\jre\bin\java.exe</Line>
          <Line>-data C:\eclipse\workspace</Line>
          <Line>-debug</Line>
          <Line>-consolelog</Line>
          <Line />
          <Line>3. Inside Eclipse, perform the synchronize that fails to show the incoming</Line>
          <Line>changes. The CVS command traffic in the debug console should contains an</Line>
          <Line>invocation of the update command that looks something like (this is output from</Line>
          <Line>dev.eclipse.org):</Line>
          <Line>CMD&gt; cvs -n update -d "."</Line>
          <Line>...</Line>
          <Line>update</Line>
          <Line>...</Line>
          <Line>4. Append the output to this bug report</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>1. Select the project in the Navigator or some other view.</Line>
          <Line>2. USe the popup menu to view the project properties.</Line>
          <Line>3. Select the CVS tab.</Line>
          <Line>4. check the "fetch absent or new directories" option</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hi,
   I'm using Eclipse build 200212181304. We've been having major 
synchronization problems. When we check in stuff, we find that it does go in. 
But, when we try to synchronize another machine with the checked in stuff, it 
does not show up in the Incoming Mode - and says we have the latest stuff from 
the repository. However, going into CVS Repositories, and opening up the new 
stuff (a directory particularly causes problems but we've had problems with 
files as well), and using Check Out Into works.

Regards,
Somik
I can not reproduce this. Does this problem still occur for you. If so, could 
you do the following on the machine that has the problem so that I can see the 
traffic between Eclipse and the CVS server.

1. Create a file named ".options" in you eclipse directory (the directory that 
contains the executable) that contains the following 2 lines that enable CVS 
debugging. 
		org.eclipse.team.cvs.core/debug=true
		org.eclipse.team.cvs.core/cvsprotocol=true
		
2. Start Eclipse with the following parameters tailored to you local setup (The 
below example is for windows). The important aspects are the use of java.exe 
instead of javaw.exe and the inclusion of the -debug and -consolelog options. 
These will cause the debug console to be visible and for debugging output to 
appear in the console. 
		C:\eclipse\eclipse.exe
		   -vm C:\jre\bin\java.exe
		   -data C:\eclipse\workspace
		   -debug
		   -consolelog
		
3. Inside Eclipse, perform the synchronize that fails to show the incoming 
changes. The CVS command traffic in the debug console should contains an 
invocation of the update command that looks something like (this is output from 
dev.eclipse.org): 
		CMD&gt; cvs -n update -d "."
		...
		update
		...
4. Append the output to this bug report

Here's the contents of the CVS console when the synchronize failed:
***
cvs update -l -P "/ShoppingServerTests/resources/workshopData"
  cvs server: Updating resources/workshopData
ok (took 0:00.291)
***

A new directory had just been checked in from another machine, but it didnt 
show up when I tried synchronizing the project.

When I expanded the CVS Repositories explorer - and navigated to the newly 
checked in dir and checked it out into the correct directory, the cvs console 
showed :
***
cvs update -P "/ShoppingServerTests/resources/testData/temp"
  cvs server: Updating resources/testData/temp
  U resources/testData/temp/000100.xml
ok (took 0:00.551)
***

Regards,
Somik
To add to the above, I had attempted synchronization on the root project itself 
(which is completely checked in). However, the update seems to have been issued 
for an incorrect directory. That would probably be the bug.

Regards,
Somik
The problem is that your project has the 'fetch absent or new directories' 
disabled (see bug 28551). To correct the problem perform the following steps:

1. Select the project in the Navigator or some other view.
2. USe the popup menu to view the project properties.
3. Select the CVS tab.
4. check the "fetch absent or new directories" option

*** This bug has been marked as a duplicate of 28551 ***</WithStack>
    <WithOutStack>Hi,
   I'm using Eclipse build 200212181304. We've been having major 
synchronization problems. When we check in stuff, we find that it does go in. 
But, when we try to synchronize another machine with the checked in stuff, it 
does not show up in the Incoming Mode - and says we have the latest stuff from 
the repository. However, going into CVS Repositories, and opening up the new 
stuff (a directory particularly causes problems but we've had problems with 
files as well), and using Check Out Into works.

Regards,
Somik
I can not reproduce this. Does this problem still occur for you. If so, could 
you do the following on the machine that has the problem so that I can see the 
traffic between Eclipse and the CVS server.

1. Create a file named ".options" in you eclipse directory (the directory that 
contains the executable) that contains the following 2 lines that enable CVS 
debugging. 
		org.eclipse.team.cvs.core/debug=true
		org.eclipse.team.cvs.core/cvsprotocol=true
		
2. Start Eclipse with the following parameters tailored to you local setup (The 
below example is for windows). The important aspects are the use of java.exe 
instead of javaw.exe and the inclusion of the -debug and -consolelog options. 
These will cause the debug console to be visible and for debugging output to 
appear in the console. 
		C:\eclipse\eclipse.exe
		   -vm C:\jre\bin\java.exe
		   -data C:\eclipse\workspace
		   -debug
		   -consolelog
		
3. Inside Eclipse, perform the synchronize that fails to show the incoming 
changes. The CVS command traffic in the debug console should contains an 
invocation of the update command that looks something like (this is output from 
dev.eclipse.org): 
		CMD&gt; cvs -n update -d "."
		...
		update
		...
4. Append the output to this bug report

Here's the contents of the CVS console when the synchronize failed:
***
cvs update -l -P "/ShoppingServerTests/resources/workshopData"
  cvs server: Updating resources/workshopData
ok (took 0:00.291)
***

A new directory had just been checked in from another machine, but it didnt 
show up when I tried synchronizing the project.

When I expanded the CVS Repositories explorer - and navigated to the newly 
checked in dir and checked it out into the correct directory, the cvs console 
showed :
***
cvs update -P "/ShoppingServerTests/resources/testData/temp"
  cvs server: Updating resources/testData/temp
  U resources/testData/temp/000100.xml
ok (took 0:00.551)
***

Regards,
Somik
To add to the above, I had attempted synchronization on the root project itself 
(which is completely checked in). However, the update seems to have been issued 
for an incorrect directory. That would probably be the bug.

Regards,
Somik
The problem is that your project has the 'fetch absent or new directories' 
disabled (see bug 28551). To correct the problem perform the following steps:

1. Select the project in the Navigator or some other view.
2. USe the popup menu to view the project properties.
3. Select the CVS tab.
4. check the "fetch absent or new directories" option

*** This bug has been marked as a duplicate of 28551 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29165" />
    <CreationDate amount="2003-01-08 15:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>exception when deleting a class in I20030107 (win2k)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- selected class in package explorer</Line>
          <Line>- selected delete in contextmenu</Line>
          <Line>Created attachment 2925</Line>
          <Line>.log</Line>
          <Line>Fixed for build &gt; I20020108</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>steps to reproduce the exception :

- selected class in package explorer
- selected delete in contextmenu
Created attachment 2925
.log
Fixed for build &gt; I20020108</WithStack>
    <WithOutStack>steps to reproduce the exception :

- selected class in package explorer
- selected delete in contextmenu
Created attachment 2925
.log
Fixed for build &gt; I20020108</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29166" />
    <CreationDate amount="2003-01-08 15:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Navigate Open Resource (Ctrl+Shift+R) does not work...</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>The build notes for the M3 build state that any resource can be opened by using
navigate -&gt; open resource meny item or the shortcut

I do not even see the Open Resource menu item.

I cannot use Open Type since in my workspace i have non java files (.jsp, .xml)
etc. which I'd like to open using this command.

It would be great if this feature was working.

Thanks,
Jalpesh.
If you are using an existing workspace you have to enable the Resource Action 
set. Go to Window-&gt;Customize-&gt;Other and enable Resource Navigation</WithStack>
    <WithOutStack>The build notes for the M3 build state that any resource can be opened by using
navigate -&gt; open resource meny item or the shortcut

I do not even see the Open Resource menu item.

I cannot use Open Type since in my workspace i have non java files (.jsp, .xml)
etc. which I'd like to open using this command.

It would be great if this feature was working.

Thanks,
Jalpesh.
If you are using an existing workspace you have to enable the Resource Action 
set. Go to Window-&gt;Customize-&gt;Other and enable Resource Navigation</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29167" />
    <CreationDate amount="2003-01-08 15:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>exception when refactoring in I20030107</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- selected some code</Line>
          <Line>- menu refactor / extract method</Line>
          <Line>- opened preview dialog</Line>
          <Line>- clicked ok</Line>
          <Line>Created attachment 2926</Line>
          <Line>zipped log</Line>
          <Line>Fixed for build &gt; I20020308</Line>
          <Line>*** Bug 29288 has been marked as a duplicate of this bug. ***</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>steps to reproduce the exception:

- selected some code
- menu refactor / extract method
- opened preview dialog
- clicked ok
Created attachment 2926
zipped log
Fixed for build &gt; I20020308
*** Bug 29288 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>steps to reproduce the exception:

- selected some code
- menu refactor / extract method
- opened preview dialog
- clicked ok
Created attachment 2926
zipped log
Fixed for build &gt; I20020308
*** Bug 29288 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29168" />
    <CreationDate amount="2003-01-08 15:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Line of task does not update</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>After inseting lines in a file in fron of a task's line,
the line of the task does not change in the task window.
I cannot reproduce this problem.  Are there steps I can follow to reproduce?  
Which build are you using?
Thanks for your quick reply.

I'm using ver 2.1 build 200212181304, which I downloaded yesterday.

I was working through the tutorials.
I had file open in the editor window, and created
  a task as some line in the file.   The task name and
  correct line number appeared in the task window.
Then I added several lines above the one I had marked.
The line number in the task window did not change neither
as I added the lines nor after I saved the file.

I had the same experience when working through the
tutorial for the Java Development
Moving to Platform Text for comment.
Updating of the task in the task list only occurs on save.</WithStack>
    <WithOutStack>After inseting lines in a file in fron of a task's line,
the line of the task does not change in the task window.
I cannot reproduce this problem.  Are there steps I can follow to reproduce?  
Which build are you using?
Thanks for your quick reply.

I'm using ver 2.1 build 200212181304, which I downloaded yesterday.

I was working through the tutorials.
I had file open in the editor window, and created
  a task as some line in the file.   The task name and
  correct line number appeared in the task window.
Then I added several lines above the one I had marked.
The line number in the task window did not change neither
as I added the lines nor after I saved the file.

I had the same experience when working through the
tutorial for the Java Development
Moving to Platform Text for comment.
Updating of the task in the task list only occurs on save.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29169" />
    <CreationDate amount="2003-01-08 15:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>[CVS API] CVSRemoteFile.exists(IProcessMonitor) returns true for non-existant files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="8">
      <source_code type="assignment">
        <location start="31" end="91" />
        <code>CVSProviderPlugin aPlugin = CVSProviderPlugin.getPlugin();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="139" end="213" />
        <code>aPlugin.getRepository(":pserver:anonymous@dev.eclipse.org:/home/eclipse");</code>
      </source_code>
      <source_code type="assignment">
        <location start="214" end="271" />
        <code>CVSTag aTag = new CVSTag("v20030109", CVSTag.VERSION);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="322" end="368" />
        <code>("org.eclipse.ant.tests.core/.project", aTag);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="428" end="433" />
        <code>()));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="434" end="473" />
        <code>System.out.println(aFile.getSize());</code>
      </source_code>
      <source_code type="functiondef">
        <location start="474" end="606" />
        <code>} catch (CVSException e) {
			System.out.println("CVSProviderException");
			e.printStackTrace();
			CVSProviderPlugin.log(e);
		}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="603" end="729" />
        <code>} catch (TeamException e) {
			System.out.println("TeamException");
			e.printStackTrace();
			CVSProviderPlugin.log(e);
		}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Running code that looks like:

		CVSProviderPlugin aPlugin = CVSProviderPlugin.getPlugin();
		try {
			ICVSRepositoryLocation aLocation = 
aPlugin.getRepository(":pserver:anonymous@dev.eclipse.org:/home/eclipse");
			CVSTag aTag = new CVSTag("v20030109", CVSTag.VERSION);
			ICVSRemoteFile aFile = aLocation.getRemoteFile
("org.eclipse.ant.tests.core/.project", aTag);
			System.out.println(aFile.exists(new NullProgressMonitor
()));
			System.out.println(aFile.getSize());
		} catch (CVSException e) {
			System.out.println("CVSProviderException");
			e.printStackTrace();
			CVSProviderPlugin.log(e);
		} catch (TeamException e) {
			System.out.println("TeamException");
			e.printStackTrace();
			CVSProviderPlugin.log(e);
		}

Where the tag does not exist (but the file does in HEAD) returns true for 
exists call.  The trace output shows that the CVS Server aborted error is not 
being caught properly.  Trace follows:

tartup: using configuration file:D:\new\eclipse\runtime-
workspace\.metadata\.config\platform.cfg
Boot URL:
    file:D:/new/eclipse/plugins/org.eclipse.core.boot_2.1.0/boot.jar
Startup: splash path = D:\new\eclipse\plugins\org.eclipse.core.boot_2.1.0
\splash.bmp
Workspace location:
   D:\new\eclipse\runtime-workspace
Debug-Options:
    
file:D:\new\eclipse\workspace\.metadata\.plugins\org.eclipse.pde.core\.options
Install URL:
    file:D:/new/eclipse/
I LOVE YOU
Valid-responses ok error M E Checked-in Valid-requests Set-sticky MT Clear-
static-directory Module-expansion Set-static-directory Clear-sticky New-entry 
Removed Merged Remove-entry Updated Update-existing Copy-file Notified Created 
Mod-time
valid-requests
Valid-requests Root Valid-responses valid-requests Repository Directory Max-
dotdot Static-directory Sticky Checkin-prog Update-prog Entry Kopt Checkin-
time Modified Is-modified UseUnchanged Unchanged Notify Questionable Case 
Argument Argumentx Global_option Gzip-stream wrapper-sendme-rcsOptions Set 
Kerberos-encrypt Gssapi-encrypt Gssapi-authenticate expand-modules ci co 
update diff log rlog add remove update-patches gzip-file-contents status rdiff 
tag rtag import admin export history release watch-on watch-off watch-add 
watch-remove watchers editors init annotate rannotate noop version
ok
Root /home/eclipse
CMD&gt; cvs version
version
M Concurrent Versions System (CVS) 1.11.1p1 (client/server)
ok
RESULT&gt; Status OKorg.eclipse.team.cvs.core code=0 ok null
CMD&gt; cvs -n update -d -r "v20030109" ".project"
Global_option -n
Argument -d
Argument -r
Argument v20030109
Directory .
/home/eclipse/org.eclipse.ant.tests.core
Sticky Nv20030109
Entry /.project/0/dummy timestamp//Tv20030109
Modified .project
u=rw,g=rw,o=r
0
Argument .project
Directory .
/home/eclipse/org.eclipse.ant.tests.core
update
E cvs [server aborted]: no such tag v20030109
error  
RESULT&gt; Status WARNINGorg.eclipse.team.cvs.core code=-10 The server reported 
an error while performing the "cvs update" command. null children=[Status 
WARNINGorg.eclipse.team.cvs.core code=-11 cvs [server aborted]: no such tag 
v20030109 null]
true
0
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>Running code that looks like:

		CVSProviderPlugin aPlugin = CVSProviderPlugin.getPlugin();
		try {
			ICVSRepositoryLocation aLocation = 
aPlugin.getRepository(":pserver:anonymous@dev.eclipse.org:/home/eclipse");
			CVSTag aTag = new CVSTag("v20030109", CVSTag.VERSION);
			ICVSRemoteFile aFile = aLocation.getRemoteFile
("org.eclipse.ant.tests.core/.project", aTag);
			System.out.println(aFile.exists(new NullProgressMonitor
()));
			System.out.println(aFile.getSize());
		} catch (CVSException e) {
			System.out.println("CVSProviderException");
			e.printStackTrace();
			CVSProviderPlugin.log(e);
		} catch (TeamException e) {
			System.out.println("TeamException");
			e.printStackTrace();
			CVSProviderPlugin.log(e);
		}

Where the tag does not exist (but the file does in HEAD) returns true for 
exists call.  The trace output shows that the CVS Server aborted error is not 
being caught properly.  Trace follows:

tartup: using configuration file:D:\new\eclipse\runtime-
workspace\.metadata\.config\platform.cfg
Boot URL:
    file:D:/new/eclipse/plugins/org.eclipse.core.boot_2.1.0/boot.jar
Startup: splash path = D:\new\eclipse\plugins\org.eclipse.core.boot_2.1.0
\splash.bmp
Workspace location:
   D:\new\eclipse\runtime-workspace
Debug-Options:
    
file:D:\new\eclipse\workspace\.metadata\.plugins\org.eclipse.pde.core\.options
Install URL:
    file:D:/new/eclipse/
I LOVE YOU
Valid-responses ok error M E Checked-in Valid-requests Set-sticky MT Clear-
static-directory Module-expansion Set-static-directory Clear-sticky New-entry 
Removed Merged Remove-entry Updated Update-existing Copy-file Notified Created 
Mod-time
valid-requests
Valid-requests Root Valid-responses valid-requests Repository Directory Max-
dotdot Static-directory Sticky Checkin-prog Update-prog Entry Kopt Checkin-
time Modified Is-modified UseUnchanged Unchanged Notify Questionable Case 
Argument Argumentx Global_option Gzip-stream wrapper-sendme-rcsOptions Set 
Kerberos-encrypt Gssapi-encrypt Gssapi-authenticate expand-modules ci co 
update diff log rlog add remove update-patches gzip-file-contents status rdiff 
tag rtag import admin export history release watch-on watch-off watch-add 
watch-remove watchers editors init annotate rannotate noop version
ok
Root /home/eclipse
CMD&gt; cvs version
version
M Concurrent Versions System (CVS) 1.11.1p1 (client/server)
ok
RESULT&gt; Status OKorg.eclipse.team.cvs.core code=0 ok null
CMD&gt; cvs -n update -d -r "v20030109" ".project"
Global_option -n
Argument -d
Argument -r
Argument v20030109
Directory .
/home/eclipse/org.eclipse.ant.tests.core
Sticky Nv20030109
Entry /.project/0/dummy timestamp//Tv20030109
Modified .project
u=rw,g=rw,o=r
0
Argument .project
Directory .
/home/eclipse/org.eclipse.ant.tests.core
update
E cvs [server aborted]: no such tag v20030109
error  
RESULT&gt; Status WARNINGorg.eclipse.team.cvs.core code=-10 The server reported 
an error while performing the "cvs update" command. null children=[Status 
WARNINGorg.eclipse.team.cvs.core code=-11 cvs [server aborted]: no such tag 
v20030109 null]
true
0
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29170" />
    <CreationDate amount="2003-01-08 15:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>False error feedback from "Show in package explorer"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1. Open a .java file in the Java editor.</Line>
          <Line>2. Click "Collapse All" in the packages view to collapse the tree.</Line>
          <Line>3. Right click on the top-level type in the Outline view and choose "Show in</Line>
          <Line>Package Explorer"</Line>
          <Line>4. The packages view correctly expands to the selected type, but an error</Line>
          <Line>dialog pops up:</Line>
          <Line>Title: "Show in Package Explorer"</Line>
          <Line>Message: "Couldn't reveal the selected element in Package Explorer. May be</Line>
          <Line>the element is filtered out."</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20030107

1. Open a .java file in the Java editor.
2. Click "Collapse All" in the packages view to collapse the tree.
3. Right click on the top-level type in the Outline view and choose "Show in
Package Explorer"
4. The packages view correctly expands to the selected type, but an error
dialog pops up:
Title: "Show in Package Explorer"
Message: "Couldn't reveal the selected element in Package Explorer. May be
the element is filtered out."

This happens any time the tree needs to be expanded to reveal a type.
*** Bug 29217 has been marked as a duplicate of this bug. ***
*** Bug 29276 has been marked as a duplicate of this bug. ***
Problem was an extra async exec when in PackageExplorerPart.selectAndReveal. 
Reverted back to old code.

Fixed in build I20020314</WithStack>
    <WithOutStack>Build 20030107

1. Open a .java file in the Java editor.
2. Click "Collapse All" in the packages view to collapse the tree.
3. Right click on the top-level type in the Outline view and choose "Show in
Package Explorer"
4. The packages view correctly expands to the selected type, but an error
dialog pops up:
Title: "Show in Package Explorer"
Message: "Couldn't reveal the selected element in Package Explorer. May be
the element is filtered out."

This happens any time the tree needs to be expanded to reveal a type.
*** Bug 29217 has been marked as a duplicate of this bug. ***
*** Bug 29276 has been marked as a duplicate of this bug. ***
Problem was an extra async exec when in PackageExplorerPart.selectAndReveal. 
Reverted back to old code.

Fixed in build I20020314</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29171" />
    <CreationDate amount="2003-01-08 15:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Autorefresh] Platform exits with autorefresh plugins present</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>20030107




On WinXP, with the 3 autorefresh plugins present, the workbench dies very 
shortly (1 or 2 seconds) after it is realized.  No .log file is generated.
What happens when you remove the win32 fragment?
Reproduced this problem, maybe it's a Y2K3 problem (because didn't happen last year)

Unexpected Signal : EXCEPTION_ACCESS_VIOLATION occurred at PC=0x6D4A5158
Function=jni_ReleaseStringUTFChars+0x621
Library=c:\home\vms\sun\jdk1.4.2\jre\bin\client\jvm.dll
Source file = D:/BUILD_AREA/jdk1.4.2/hotspot\src\share\vm\prims\jni.cpp : 1519


Current Java thread:
	at
com.example.autorefresh.win32.internal.Win32Natives.FindFirstChangeNotification(Native
Method)
	at
com.example.autorefresh.win32.internal.Win32Monitor.addResource(Win32Monitor.java:105)
	- locked &lt;0x02a18c40&gt; (a com.example.autorefresh.win32.internal.Win32Monitor)
	at
com.example.autorefresh.win32.internal.MonitorFactory.createMonitor(MonitorFactory.java:48)
	at com.example.autorefresh.internal.MonitorManager.monitor(MonitorManager.java:76)
	at com.example.autorefresh.internal.MonitorManager.startup(MonitorManager.java:102)
	at com.example.autorefresh.AutoRefreshPlugin.doStartup(AutoRefreshPlugin.java:165)
	at
com.example.autorefresh.ui.internal.AutorefreshUIPlugin.earlyStartup(AutorefreshUIPlugin.java:97)
	at org.eclipse.ui.internal.Workbench$14.run(Workbench.java:1398)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:852)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1405)
	at java.lang.Thread.run(Thread.java:536)

Dynamic libraries:
0x00400000 - 0x00406000 	c:\home\vms\sun\jdk1.4.2\bin\java.exe
0x77F80000 - 0x77FFB000 	C:\WINNT\System32\ntdll.dll
0x77DB0000 - 0x77E0B000 	C:\WINNT\system32\ADVAPI32.dll
0x77E80000 - 0x77F35000 	C:\WINNT\system32\KERNEL32.DLL
0x77D40000 - 0x77DB0000 	C:\WINNT\system32\RPCRT4.DLL
0x78000000 - 0x78046000 	C:\WINNT\system32\MSVCRT.dll
0x6D430000 - 0x6D556000 	c:\home\vms\sun\jdk1.4.2\jre\bin\client\jvm.dll
0x77E10000 - 0x77E74000 	C:\WINNT\system32\USER32.dll
0x77F40000 - 0x77F7C000 	C:\WINNT\system32\GDI32.DLL
0x77570000 - 0x775A0000 	C:\WINNT\System32\WINMM.dll
0x6D1D0000 - 0x6D1D7000 	c:\home\vms\sun\jdk1.4.2\jre\bin\hpi.dll
0x6D400000 - 0x6D40D000 	c:\home\vms\sun\jdk1.4.2\jre\bin\verify.dll
0x6D210000 - 0x6D229000 	c:\home\vms\sun\jdk1.4.2\jre\bin\java.dll
0x6D420000 - 0x6D42D000 	c:\home\vms\sun\jdk1.4.2\jre\bin\zip.dll
0x10000000 - 0x10007000 
C:\home\eclipse\2.1\eclipse20030107\eclipse\plugins\org.eclipse.core.resources.win32_2.1.0\os\win32\x86\core_2_0_5.dll
0x0B390000 - 0x0B3D7000 
C:\home\eclipse\2.1\eclipse20030107\eclipse\plugins\org.eclipse.swt.win32_2.1.0\os\win32\x86\swt-win32-2123.dll
0x77A50000 - 0x77B46000 	C:\WINNT\system32\ole32.dll
0x77B50000 - 0x77BD9000 	C:\WINNT\system32\COMCTL32.dll
0x76B30000 - 0x76B6E000 	C:\WINNT\system32\comdlg32.dll
0x77C70000 - 0x77CBA000 	C:\WINNT\system32\SHLWAPI.DLL
0x782F0000 - 0x78532000 	C:\WINNT\system32\SHELL32.DLL
0x779B0000 - 0x77A4B000 	C:\WINNT\system32\OLEAUT32.dll
0x75E60000 - 0x75E7A000 	C:\WINNT\System32\IMM32.dll
0x69640000 - 0x6965F000 	C:\WINNT\System32\oleacc.dll
0x6B2C0000 - 0x6B2C5000 	C:\WINNT\System32\msimg32.dll
0x0BC90000 - 0x0BC98000 
C:\home\eclipse\2.1\eclipse20030107\eclipse\plugins\com.example.autorefresh.win32_2.0.0\win32refresh.dll
0x77920000 - 0x77943000 	C:\WINNT\system32\imagehlp.dll
0x72A00000 - 0x72A2D000 	C:\WINNT\system32\DBGHELP.dll
0x690A0000 - 0x690AB000 	C:\WINNT\System32\PSAPI.DLL

Heap at VM Abort:
Heap
 def new generation   total 576K, used 234K [0x02a00000, 0x02aa0000, 0x02ee0000)
  eden space 512K,  33% used [0x02a00000, 0x02a2a870, 0x02a80000)
  from space 64K,  99% used [0x02a90000, 0x02a9fff8, 0x02aa0000)
  to   space 64K,   0% used [0x02a80000, 0x02a80000, 0x02a90000)
 tenured generation   total 6880K, used 4852K [0x02ee0000, 0x03598000, 0x06a00000)
   the space 6880K,  70% used [0x02ee0000, 0x0339d060, 0x0339d200, 0x03598000)
 compacting perm gen  total 11520K, used 11364K [0x06a00000, 0x07540000, 0x0aa00000)
   the space 11520K,  98% used [0x06a00000, 0x075191d8, 0x07519200, 0x07540000)

Local Time = Wed Jan 08 17:01:53 2003
Elapsed Time = 14
#
# HotSpot Virtual Machine Error : EXCEPTION_ACCESS_VIOLATION
# Error ID : 4A4E490E43505005EF
# Please report this error at
# http://java.sun.com/cgi-bin/bugreport.cgi
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2-beta-b05 mixed mode)
#

Joe, would you try my new plugins?  I suspect this bug was caused by the
GetStringUTFChars call that I am no longer using.
Marking worksforme since I have not seen this again.</WithStack>
    <WithOutStack>20030107




On WinXP, with the 3 autorefresh plugins present, the workbench dies very 
shortly (1 or 2 seconds) after it is realized.  No .log file is generated.
What happens when you remove the win32 fragment?
Reproduced this problem, maybe it's a Y2K3 problem (because didn't happen last year)

Unexpected Signal : EXCEPTION_ACCESS_VIOLATION occurred at PC=0x6D4A5158
Function=jni_ReleaseStringUTFChars+0x621
Library=c:\home\vms\sun\jdk1.4.2\jre\bin\client\jvm.dll
Source file = D:/BUILD_AREA/jdk1.4.2/hotspot\src\share\vm\prims\jni.cpp : 1519


Current Java thread:
	at
com.example.autorefresh.win32.internal.Win32Natives.FindFirstChangeNotification(Native
Method)
	at
com.example.autorefresh.win32.internal.Win32Monitor.addResource(Win32Monitor.java:105)
	- locked &lt;0x02a18c40&gt; (a com.example.autorefresh.win32.internal.Win32Monitor)
	at
com.example.autorefresh.win32.internal.MonitorFactory.createMonitor(MonitorFactory.java:48)
	at com.example.autorefresh.internal.MonitorManager.monitor(MonitorManager.java:76)
	at com.example.autorefresh.internal.MonitorManager.startup(MonitorManager.java:102)
	at com.example.autorefresh.AutoRefreshPlugin.doStartup(AutoRefreshPlugin.java:165)
	at
com.example.autorefresh.ui.internal.AutorefreshUIPlugin.earlyStartup(AutorefreshUIPlugin.java:97)
	at org.eclipse.ui.internal.Workbench$14.run(Workbench.java:1398)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:852)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.ui.internal.Workbench$13.run(Workbench.java:1405)
	at java.lang.Thread.run(Thread.java:536)

Dynamic libraries:
0x00400000 - 0x00406000 	c:\home\vms\sun\jdk1.4.2\bin\java.exe
0x77F80000 - 0x77FFB000 	C:\WINNT\System32\ntdll.dll
0x77DB0000 - 0x77E0B000 	C:\WINNT\system32\ADVAPI32.dll
0x77E80000 - 0x77F35000 	C:\WINNT\system32\KERNEL32.DLL
0x77D40000 - 0x77DB0000 	C:\WINNT\system32\RPCRT4.DLL
0x78000000 - 0x78046000 	C:\WINNT\system32\MSVCRT.dll
0x6D430000 - 0x6D556000 	c:\home\vms\sun\jdk1.4.2\jre\bin\client\jvm.dll
0x77E10000 - 0x77E74000 	C:\WINNT\system32\USER32.dll
0x77F40000 - 0x77F7C000 	C:\WINNT\system32\GDI32.DLL
0x77570000 - 0x775A0000 	C:\WINNT\System32\WINMM.dll
0x6D1D0000 - 0x6D1D7000 	c:\home\vms\sun\jdk1.4.2\jre\bin\hpi.dll
0x6D400000 - 0x6D40D000 	c:\home\vms\sun\jdk1.4.2\jre\bin\verify.dll
0x6D210000 - 0x6D229000 	c:\home\vms\sun\jdk1.4.2\jre\bin\java.dll
0x6D420000 - 0x6D42D000 	c:\home\vms\sun\jdk1.4.2\jre\bin\zip.dll
0x10000000 - 0x10007000 
C:\home\eclipse\2.1\eclipse20030107\eclipse\plugins\org.eclipse.core.resources.win32_2.1.0\os\win32\x86\core_2_0_5.dll
0x0B390000 - 0x0B3D7000 
C:\home\eclipse\2.1\eclipse20030107\eclipse\plugins\org.eclipse.swt.win32_2.1.0\os\win32\x86\swt-win32-2123.dll
0x77A50000 - 0x77B46000 	C:\WINNT\system32\ole32.dll
0x77B50000 - 0x77BD9000 	C:\WINNT\system32\COMCTL32.dll
0x76B30000 - 0x76B6E000 	C:\WINNT\system32\comdlg32.dll
0x77C70000 - 0x77CBA000 	C:\WINNT\system32\SHLWAPI.DLL
0x782F0000 - 0x78532000 	C:\WINNT\system32\SHELL32.DLL
0x779B0000 - 0x77A4B000 	C:\WINNT\system32\OLEAUT32.dll
0x75E60000 - 0x75E7A000 	C:\WINNT\System32\IMM32.dll
0x69640000 - 0x6965F000 	C:\WINNT\System32\oleacc.dll
0x6B2C0000 - 0x6B2C5000 	C:\WINNT\System32\msimg32.dll
0x0BC90000 - 0x0BC98000 
C:\home\eclipse\2.1\eclipse20030107\eclipse\plugins\com.example.autorefresh.win32_2.0.0\win32refresh.dll
0x77920000 - 0x77943000 	C:\WINNT\system32\imagehlp.dll
0x72A00000 - 0x72A2D000 	C:\WINNT\system32\DBGHELP.dll
0x690A0000 - 0x690AB000 	C:\WINNT\System32\PSAPI.DLL

Heap at VM Abort:
Heap
 def new generation   total 576K, used 234K [0x02a00000, 0x02aa0000, 0x02ee0000)
  eden space 512K,  33% used [0x02a00000, 0x02a2a870, 0x02a80000)
  from space 64K,  99% used [0x02a90000, 0x02a9fff8, 0x02aa0000)
  to   space 64K,   0% used [0x02a80000, 0x02a80000, 0x02a90000)
 tenured generation   total 6880K, used 4852K [0x02ee0000, 0x03598000, 0x06a00000)
   the space 6880K,  70% used [0x02ee0000, 0x0339d060, 0x0339d200, 0x03598000)
 compacting perm gen  total 11520K, used 11364K [0x06a00000, 0x07540000, 0x0aa00000)
   the space 11520K,  98% used [0x06a00000, 0x075191d8, 0x07519200, 0x07540000)

Local Time = Wed Jan 08 17:01:53 2003
Elapsed Time = 14
#
# HotSpot Virtual Machine Error : EXCEPTION_ACCESS_VIOLATION
# Error ID : 4A4E490E43505005EF
# Please report this error at
# http://java.sun.com/cgi-bin/bugreport.cgi
#
# Java VM: Java HotSpot(TM) Client VM (1.4.2-beta-b05 mixed mode)
#

Joe, would you try my new plugins?  I suspect this bug was caused by the
GetStringUTFChars call that I am no longer using.
Marking worksforme since I have not seen this again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29172" />
    <CreationDate amount="2003-01-08 16:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>"Not in Workspace" should be default for target platform</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: M4

When you start a new workspace, by default PDE does not detect any external
plugins.  This makes most of the PDE UI appear broken... if you create a blank
plugin project, and then try to add extensions, there are no available
extensions in the list.  If you try to add a depedent plugin, there are none
found, etc.  

Basically, you can't do anything until you go to Preferences &gt; Plug-in
Development &gt; Target Platform, and click "Not in Workspace".  I think
preferences should generally have a default value that is usable.  In this case,
I think a reasonable default would be for PDE to include in the target platform
all plugins in the install that are not also in the workspace.
'Reasonable default' is relative and depends on the user group. Most of the 
Eclipse team self-hosts using binary project and do not use external plug-ins 
at all. For them, the current default is 'reasonable' :-). 

Absolute beginners that start by using PDE 'new' wizards are offered help and 
have the external plug-ins enabled when they try to create a new plug-in. 
Therefore, they are covered as well.

The only group that is not covered are product teams that already have projects 
(hence are not using the 'New' wizard) but use a mix of external and workspace 
plug-ins. We consider them advanced enough to know about 'Not in Workspace' and 
the target platform preference page in general.

PDE users are quite diverse and it is hard to find defaults that will make 
everybody happy.
It was the "Absolute beginner" category I was coming from.  I was trying to
demonstrate the basic steps to creating your first plugin to our new co-op
students.  Maybe my downfall was in selecting "Blank plugin project" in the PDE
project wizard?  I wasn't offered any help and didn't get the external plugins
enabled automatically.  I didn't want auto-generated content, so "Blank plugin"
seemed like the correct choice.
That sounds about right. When you select a template, it generates Java code and 
it would not compile without external plug-ins. Even 'Default Plug-in 
Structure' has at least the top-level plug-ins class that requires platform UI 
in order to compile. You would get a warning for it. 

In contrast, blank plug-in does not contain any Java code, so strictly speaking 
you do not require external plug-ins in order to compile it. At that point we 
don't know if you will import binary projects or enable external to continue 
your work (either is find by us).

We have fequently being criticized for trying to be too helpful and making 
wrong assumptions in the process, so we are trying to be careful with 'user 
friendly' code :-).
I don't know what the right answer is...  I think the crux of the problem is
that the "Target Platform" page has low visibility because it is under
preferences.  It would be useful to have some cues to either steer people to
that page, or to present that page in other contexts when necessary.  For
example, when the user tries to add an extension or a dependency when there are
no plugins in the target environment it could either present that configuration
page in a dialog or steer people to the preference page... "You are trying to
add a dependency, but there are no plugins in your target platform.  Would you
like to configure that now? Yes/No...".  Or perhaps target platform
configuration could appear in the wizard when you create a plug-in project...

It's true that a blank plugin doesn't technically need any other plugins to
compile, but in order to run it needs at least the basic ones (xerces, runtime,
boot).  Perhaps at least those should be added to the target platform when a
blank plugin is created?
Defer.
Re-opening.
The default should be changed, and has certainly changed in 3.0.
By default, all external plug-ins are checked for more than one good reason 
(some of which are listed above).</WithStack>
    <WithOutStack>Build: M4

When you start a new workspace, by default PDE does not detect any external
plugins.  This makes most of the PDE UI appear broken... if you create a blank
plugin project, and then try to add extensions, there are no available
extensions in the list.  If you try to add a depedent plugin, there are none
found, etc.  

Basically, you can't do anything until you go to Preferences &gt; Plug-in
Development &gt; Target Platform, and click "Not in Workspace".  I think
preferences should generally have a default value that is usable.  In this case,
I think a reasonable default would be for PDE to include in the target platform
all plugins in the install that are not also in the workspace.
'Reasonable default' is relative and depends on the user group. Most of the 
Eclipse team self-hosts using binary project and do not use external plug-ins 
at all. For them, the current default is 'reasonable' :-). 

Absolute beginners that start by using PDE 'new' wizards are offered help and 
have the external plug-ins enabled when they try to create a new plug-in. 
Therefore, they are covered as well.

The only group that is not covered are product teams that already have projects 
(hence are not using the 'New' wizard) but use a mix of external and workspace 
plug-ins. We consider them advanced enough to know about 'Not in Workspace' and 
the target platform preference page in general.

PDE users are quite diverse and it is hard to find defaults that will make 
everybody happy.
It was the "Absolute beginner" category I was coming from.  I was trying to
demonstrate the basic steps to creating your first plugin to our new co-op
students.  Maybe my downfall was in selecting "Blank plugin project" in the PDE
project wizard?  I wasn't offered any help and didn't get the external plugins
enabled automatically.  I didn't want auto-generated content, so "Blank plugin"
seemed like the correct choice.
That sounds about right. When you select a template, it generates Java code and 
it would not compile without external plug-ins. Even 'Default Plug-in 
Structure' has at least the top-level plug-ins class that requires platform UI 
in order to compile. You would get a warning for it. 

In contrast, blank plug-in does not contain any Java code, so strictly speaking 
you do not require external plug-ins in order to compile it. At that point we 
don't know if you will import binary projects or enable external to continue 
your work (either is find by us).

We have fequently being criticized for trying to be too helpful and making 
wrong assumptions in the process, so we are trying to be careful with 'user 
friendly' code :-).
I don't know what the right answer is...  I think the crux of the problem is
that the "Target Platform" page has low visibility because it is under
preferences.  It would be useful to have some cues to either steer people to
that page, or to present that page in other contexts when necessary.  For
example, when the user tries to add an extension or a dependency when there are
no plugins in the target environment it could either present that configuration
page in a dialog or steer people to the preference page... "You are trying to
add a dependency, but there are no plugins in your target platform.  Would you
like to configure that now? Yes/No...".  Or perhaps target platform
configuration could appear in the wizard when you create a plug-in project...

It's true that a blank plugin doesn't technically need any other plugins to
compile, but in order to run it needs at least the basic ones (xerces, runtime,
boot).  Perhaps at least those should be added to the target platform when a
blank plugin is created?
Defer.
Re-opening.
The default should be changed, and has certainly changed in 3.0.
By default, all external plug-ins are checked for more than one good reason 
(some of which are listed above).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29173" />
    <CreationDate amount="2003-01-08 16:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Manifest editor should add plug-in dependencies for me.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="7">
        <Lines>
          <Line>1) Add all plugins not in workspace to the target platform</Line>
          <Line>2) create a plugin project</Line>
          <Line>3) Go to the "extensions" tab of the manifest editor</Line>
          <Line>4) Click "Add..."</Line>
          <Line>5) Select "Schema-based extension", then choose "org.eclipse.ui.actionSets"</Line>
          <Line>6) Enter an id and name for the extension</Line>
          <Line>7) Click Finish</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>1) Hide the extension points that are not from the required plugins (filter can</Line>
          <Line>be turned off using the checkbox on the page)</Line>
          <Line>2) Use warning overlay for extension points not from the required plugins (when</Line>
          <Line>the filter is turned off)</Line>
          <Line>3) Not allow you to finish if such an extension point is selected.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: M4

In a new workspace:

1) Add all plugins not in workspace to the target platform
2) create a plugin project
3) Go to the "extensions" tab of the manifest editor
4) Click "Add..."
5) Select "Schema-based extension", then choose "org.eclipse.ui.actionSets"
6) Enter an id and name for the extension
7) Click Finish

-&gt; A warning dialog pops up, telling me that it can't add that extension because
org.eclipse.ui is not in the list of dependencies.

At this point I cannot proceed in the wizard.  I have to cancel the wizard,
losing what I've done, add the dependency, and then start the wizard again.

Why doesn't it just add the dependency for me??  

This flow also breaks Eclipse UI guidelines 4.5 and 4.6 (display warning
messages in the wizard, and don't enable finish until it's really ok to finish).
We cannot add the dependencies automatically because that operation may cause 
errors (cycles etc.). We would rather break down this operation into separate 
steps at this time.

...

This flow also breaks Eclipse UI guidelines 4.5 and 4.6 (display warning
messages in the wizard, and don't enable finish until it's really ok to finish).
...

This remark is valid. We redesigned the wizard to:

1) Hide the extension points that are not from the required plugins (filter can 
be turned off using the checkbox on the page)
2) Use warning overlay for extension points not from the required plugins (when 
the filter is turned off)
3) Not allow you to finish if such an extension point is selected.

As an added bonus, we added a 'Details' button that will locate the extension 
point schema and generate a reference HTML document for the extension point.
Fixed.</WithStack>
    <WithOutStack>Build: M4

In a new workspace:

1) Add all plugins not in workspace to the target platform
2) create a plugin project
3) Go to the "extensions" tab of the manifest editor
4) Click "Add..."
5) Select "Schema-based extension", then choose "org.eclipse.ui.actionSets"
6) Enter an id and name for the extension
7) Click Finish

-&gt; A warning dialog pops up, telling me that it can't add that extension because
org.eclipse.ui is not in the list of dependencies.

At this point I cannot proceed in the wizard.  I have to cancel the wizard,
losing what I've done, add the dependency, and then start the wizard again.

Why doesn't it just add the dependency for me??  

This flow also breaks Eclipse UI guidelines 4.5 and 4.6 (display warning
messages in the wizard, and don't enable finish until it's really ok to finish).
We cannot add the dependencies automatically because that operation may cause 
errors (cycles etc.). We would rather break down this operation into separate 
steps at this time.

...

This flow also breaks Eclipse UI guidelines 4.5 and 4.6 (display warning
messages in the wizard, and don't enable finish until it's really ok to finish).
...

This remark is valid. We redesigned the wizard to:

1) Hide the extension points that are not from the required plugins (filter can 
be turned off using the checkbox on the page)
2) Use warning overlay for extension points not from the required plugins (when 
the filter is turned off)
3) Not allow you to finish if such an extension point is selected.

As an added bonus, we added a 'Details' button that will locate the extension 
point schema and generate a reference HTML document for the extension point.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29174" />
    <CreationDate amount="2003-01-08 16:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>NullPointerException if SearchPage doesn't have an image</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437338527357">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.search.internal.ui.SearchDialog$1.getImage(SearchDialog.java:176)</Frame>
          <Frame depth="1">org.eclipse.jface.viewers.TableViewer.doUpdateItem(TableViewer.java:188)</Frame>
          <Frame depth="2">org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1132)</Frame>
          <Frame depth="3">org.eclipse.jface.viewers.TableViewer.internalRefresh(TableViewer.java:468)</Frame>
          <Frame depth="4">org.eclipse.jface.viewers.TableViewer.internalRefresh(TableViewer.java:410)</Frame>
          <Frame depth="5">org.eclipse.jface.viewers.StructuredViewer$4.run(StructuredViewer.java:744)</Frame>
          <Frame depth="6">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:684)</Frame>
          <Frame depth="7">org.eclipse.jface.viewers.CheckboxTableViewer.preservingSelection(CheckboxTableViewer.java:260)</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:742)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:704)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.TableViewer.inputChanged(TableViewer.java:377)</Frame>
          <Frame depth="11">org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:232)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:871)</Frame>
          <Frame depth="13">org.eclipse.ui.dialogs.ListSelectionDialog.initializeViewer(ListSelectionDialog.java:188)</Frame>
          <Frame depth="14">org.eclipse.ui.dialogs.ListSelectionDialog.createDialogArea(ListSelectionDialog.java:166)</Frame>
          <Frame depth="15">org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:539)</Frame>
          <Frame depth="16">org.eclipse.jface.window.Window.create(Window.java:281)</Frame>
          <Frame depth="17">org.eclipse.search.internal.ui.SearchDialog$2.create(SearchDialog.java:189)</Frame>
          <Frame depth="18">org.eclipse.jface.window.Window.open(Window.java:530)</Frame>
          <Frame depth="19">org.eclipse.search.internal.ui.SearchDialog.handleCustomizePressed(SearchDialog.java:208)</Frame>
          <Frame depth="20">org.eclipse.search.internal.ui.SearchDialog.access$5(SearchDialog.java:155)</Frame>
          <Frame depth="21">org.eclipse.search.internal.ui.SearchDialog$9.widgetSelected(SearchDialog.java:318)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:87)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="27">org.eclipse.jface.window.Window.runEventLoop(Window.java:561)</Frame>
          <Frame depth="28">org.eclipse.jface.window.Window.open(Window.java:541)</Frame>
          <Frame depth="29">org.eclipse.search.internal.ui.OpenSearchDialogAction.run(OpenSearchDialogAction.java:54)</Frame>
          <Frame depth="30">org.eclipse.search.internal.ui.OpenSearchDialogAction.run(OpenSearchDialogAction.java:40)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:250)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:202)</Frame>
          <Frame depth="33">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:411)</Frame>
          <Frame depth="34">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:365)</Frame>
          <Frame depth="35">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:356)</Frame>
          <Frame depth="36">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:48)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)</Frame>
          <Frame depth="43">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="44">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="46">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="48">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The documentation says the icon is optional ("If omitted, the search page's 
tab will only contain a label. ") but if you leave it off you get a NPE in 
2.1M4. Here's the extension point in my plugin:

   &lt;extension
         point="org.eclipse.search.searchPages"&gt;
      &lt;page
         id="dev.ddt.DdtSearchPage"
         label="DDT Search"
         class="dev.ddt.internal.DdtSearchPage" /&gt;
   &lt;/extension&gt;

If I add 'icon="icons/ddt.gif"' then it works ok.

Here is the traceback:

java.lang.NullPointerException
	at org.eclipse.search.internal.ui.SearchDialog$1.getImage
(SearchDialog.java:176)
	at org.eclipse.jface.viewers.TableViewer.doUpdateItem
(TableViewer.java:188)
	at org.eclipse.jface.viewers.StructuredViewer.updateItem
(StructuredViewer.java:1132)
	at org.eclipse.jface.viewers.TableViewer.internalRefresh
(TableViewer.java:468)
	at org.eclipse.jface.viewers.TableViewer.internalRefresh
(TableViewer.java:410)
	at org.eclipse.jface.viewers.StructuredViewer$4.run
(StructuredViewer.java:744)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:684)
	at org.eclipse.jface.viewers.CheckboxTableViewer.preservingSelection
(CheckboxTableViewer.java:260)
	at org.eclipse.jface.viewers.StructuredViewer.refresh
(StructuredViewer.java:742)
	at org.eclipse.jface.viewers.StructuredViewer.refresh
(StructuredViewer.java:704)
	at org.eclipse.jface.viewers.TableViewer.inputChanged
(TableViewer.java:377)
	at org.eclipse.jface.viewers.ContentViewer.setInput
(ContentViewer.java:232)
	at org.eclipse.jface.viewers.StructuredViewer.setInput
(StructuredViewer.java:871)
	at org.eclipse.ui.dialogs.ListSelectionDialog.initializeViewer
(ListSelectionDialog.java:188)
	at org.eclipse.ui.dialogs.ListSelectionDialog.createDialogArea
(ListSelectionDialog.java:166)
	at org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:539)
	at org.eclipse.jface.window.Window.create(Window.java:281)
	at org.eclipse.search.internal.ui.SearchDialog$2.create
(SearchDialog.java:189)
	at org.eclipse.jface.window.Window.open(Window.java:530)
	at org.eclipse.search.internal.ui.SearchDialog.handleCustomizePressed
(SearchDialog.java:208)
	at org.eclipse.search.internal.ui.SearchDialog.access$5
(SearchDialog.java:155)
	at org.eclipse.search.internal.ui.SearchDialog$9.widgetSelected
(SearchDialog.java:318)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:87)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:561)
	at org.eclipse.jface.window.Window.open(Window.java:541)
	at org.eclipse.search.internal.ui.OpenSearchDialogAction.run
(OpenSearchDialogAction.java:54)
	at org.eclipse.search.internal.ui.OpenSearchDialogAction.run
(OpenSearchDialogAction.java:40)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:250)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:202)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:411)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:365)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:356)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:48)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
Needs investigation.

The Search dialog works except customization. This new feature broke the
extension point API.

Fixed.
Available in builds &gt; N20030109</WithStack>
    <WithOutStack>The documentation says the icon is optional ("If omitted, the search page's 
tab will only contain a label. ") but if you leave it off you get a NPE in 
2.1M4. Here's the extension point in my plugin:

   &lt;extension
         point="org.eclipse.search.searchPages"&gt;
      &lt;page
         id="dev.ddt.DdtSearchPage"
         label="DDT Search"
         class="dev.ddt.internal.DdtSearchPage" /&gt;
   &lt;/extension&gt;

If I add 'icon="icons/ddt.gif"' then it works ok.

Here is the traceback:


Needs investigation.

The Search dialog works except customization. This new feature broke the
extension point API.

Fixed.
Available in builds &gt; N20030109</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29175" />
    <CreationDate amount="2003-01-08 16:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>M4 Arguments Text Box in Run/Debug maxs CPU typing is slow</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I am using M4 and when typing in the text box in the arguments tab of the run
configuration for a java application the text appears 1 character every 2-3
seconds...  meaning to type this message in there it would take 5 minutes before
it would appear.  The cpu is also maxed out at 100% by eclipse while doing this.
Unable to reproduce the problem. Typing in the arguments tab is responsive. 
Does this happen for all launch configs, or just some? Does it happen for a 
simple project with a simple HelloWorld program?
Ok I tracked it down a little more.  It has to do with using a non default
classpath.  I have two directories in the non default class path config and
standalone.  standalone is a sub dir of config.  Initially when I set it to non
default and add the standalone directory (config is part of default) the typing
is fine but after i apply close and enter again typing in any text box in any
tab of that configuration slows to a crawl. 
Now I can reproduce the problem - thanks.
Re-assigning for investigation.
I cannot reproduce this on WinXP.  Here are my steps:




- Create launch config for HelloWorld type program


- Click off 'Use default classpath'


- Click 'Advanced...'


- CLick 'Add folder'


- Choose sub-folder of project (which is on classpath from default)


- Save and try typing in arguments tab, everything is responsive




I also tried using 'External folder' with no luck.  




Is anything missing from these steps?  I will try to duplicate on a Win2K box.

Darin, please see above comment.

Darin, I cannot duplicate this on WinXP or on darins Win2K in a full 
self-hosting workspace with all projects on the non-default classpath &amp; 
sourcepath.  Typing in the arguments tab seems as responsive as normal.  Suggest 
you take a look at this since you can duplicate.

*** Bug 31342 has been marked as a duplicate of this bug. ***
Fixed. Added optimizations to

* RuntimeClasspathEntryListComparator - compare avoids the parsing of XML docs
* Java classpath and source lookup tabs - perform apply is only performed when 
there are changes in the tab to apply (avoids XML doc creation)
* Java classpath and source lookup tabs - initiaize from only refreshes the tab 
is the incoming config is different than the current one, and there are changes 
in the config that could effect the class/source path
Please verify, Joe (S)
Verified code (I could never duplicate the problem).

There are steps to reproduce this in bug 31342.
*** Bug 27871 has been marked as a duplicate of this bug. ***
Although typing is now quicker in RC1 it is still about 20 times slower than in
the debug launch target that has a default classpath.  It is slow enough that I
can outtype it.  I can type quicker than it can put my words into the textbox.
Nevermind my link seemed to launch the wrong eclipse version.  Sorry.  This is
fixed now.</WithStack>
    <WithOutStack>I am using M4 and when typing in the text box in the arguments tab of the run
configuration for a java application the text appears 1 character every 2-3
seconds...  meaning to type this message in there it would take 5 minutes before
it would appear.  The cpu is also maxed out at 100% by eclipse while doing this.
Unable to reproduce the problem. Typing in the arguments tab is responsive. 
Does this happen for all launch configs, or just some? Does it happen for a 
simple project with a simple HelloWorld program?
Ok I tracked it down a little more.  It has to do with using a non default
classpath.  I have two directories in the non default class path config and
standalone.  standalone is a sub dir of config.  Initially when I set it to non
default and add the standalone directory (config is part of default) the typing
is fine but after i apply close and enter again typing in any text box in any
tab of that configuration slows to a crawl. 
Now I can reproduce the problem - thanks.
Re-assigning for investigation.
I cannot reproduce this on WinXP.  Here are my steps:




- Create launch config for HelloWorld type program


- Click off 'Use default classpath'


- Click 'Advanced...'


- CLick 'Add folder'


- Choose sub-folder of project (which is on classpath from default)


- Save and try typing in arguments tab, everything is responsive




I also tried using 'External folder' with no luck.  




Is anything missing from these steps?  I will try to duplicate on a Win2K box.

Darin, please see above comment.

Darin, I cannot duplicate this on WinXP or on darins Win2K in a full 
self-hosting workspace with all projects on the non-default classpath &amp; 
sourcepath.  Typing in the arguments tab seems as responsive as normal.  Suggest 
you take a look at this since you can duplicate.

*** Bug 31342 has been marked as a duplicate of this bug. ***
Fixed. Added optimizations to

* RuntimeClasspathEntryListComparator - compare avoids the parsing of XML docs
* Java classpath and source lookup tabs - perform apply is only performed when 
there are changes in the tab to apply (avoids XML doc creation)
* Java classpath and source lookup tabs - initiaize from only refreshes the tab 
is the incoming config is different than the current one, and there are changes 
in the config that could effect the class/source path
Please verify, Joe (S)
Verified code (I could never duplicate the problem).

There are steps to reproduce this in bug 31342.
*** Bug 27871 has been marked as a duplicate of this bug. ***
Although typing is now quicker in RC1 it is still about 20 times slower than in
the debug launch target that has a default classpath.  It is slow enough that I
can outtype it.  I can type quicker than it can put my words into the textbox.
Nevermind my link seemed to launch the wrong eclipse version.  Sorry.  This is
fixed now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29176" />
    <CreationDate amount="2003-01-08 16:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[DOM/AST] Statement.get/setLeadingComment should be deleted</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- can't handle multiple end-of-line comments that precede a statement</Line>
          <Line>- doesn't address analogous issue of trailing statement comments</Line>
          <Line>It's not clear what the best approach would be, but this ain't it.</Line>
          <Line>Consequently, it should be deleted (deprecated). We can add a better solution</Line>
          <Line>later.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Statement.get/setLeadingComment does not work properly in 2.0. After 
consideration, this is not a good approach to dealing with the general issue 
of comments and significant whitespace. For instance: 
- can't handle multiple end-of-line comments that precede a statement
- doesn't address analogous issue of trailing statement comments
It's not clear what the best approach would be, but this ain't it.
Consequently, it should be deleted (deprecated). We can add a better solution
later.

This is a breaking API change. However, AST.parseCompilationUnit never did set
the leading comment for any AST nodes it creates, the change is moot for those 
client. Clients that use these methods to remember a comment with a node they 
create can achieve the same thing with ASTNode.get/setProperty, so there is no 
loss of functionality.

See bug 28268 for a further discussion of the issue.
Entered bug 29178 for improved mechanism.

Added deprecation notices to Statement.get/setLeadingComment.
No changes are required to the implementation.
Both methods are deprecated.
Fixed and released in 2.1 stream. Why don't we simply remove them? To prevent 
compile errors?
Actually removing the methods would break binary compatibility (it would cause 
linkage errors in existing 2.0 plug-ins that reference these methods).
Verified.
Added API compatibility note to 2.1 release notes.</WithStack>
    <WithOutStack>Statement.get/setLeadingComment does not work properly in 2.0. After 
consideration, this is not a good approach to dealing with the general issue 
of comments and significant whitespace. For instance: 
- can't handle multiple end-of-line comments that precede a statement
- doesn't address analogous issue of trailing statement comments
It's not clear what the best approach would be, but this ain't it.
Consequently, it should be deleted (deprecated). We can add a better solution
later.

This is a breaking API change. However, AST.parseCompilationUnit never did set
the leading comment for any AST nodes it creates, the change is moot for those 
client. Clients that use these methods to remember a comment with a node they 
create can achieve the same thing with ASTNode.get/setProperty, so there is no 
loss of functionality.

See bug 28268 for a further discussion of the issue.
Entered bug 29178 for improved mechanism.

Added deprecation notices to Statement.get/setLeadingComment.
No changes are required to the implementation.
Both methods are deprecated.
Fixed and released in 2.1 stream. Why don't we simply remove them? To prevent 
compile errors?
Actually removing the methods would break binary compatibility (it would cause 
linkage errors in existing 2.0 plug-ins that reference these methods).
Verified.
Added API compatibility note to 2.1 release notes.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29177" />
    <CreationDate amount="2003-01-08 16:53:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Pop-up menus don't stay visible at the edge of the screen</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 20030107
Linux-GTK

Chevron menus do not adjust their position to remain visible at the edge of
the screen on Linux-GTK. Context menus and toolbar menus (File, Edit, etc.)
correctly reposition themselves and expand submenus away from the screen edge
but chevron menus don't. This can be seen by pulling down the triangle menu
from a view's toolbar with Eclipse maximized or right-justified.
Created attachment 2928
chevron.png - A screenshot of the problem
SWT is not responsible for positioning the menu, the application is.
Anyhow, I will verifiy if the coordinates are correct on the event.
Jared, I'm not able to reproduce this problem.

I have tried the arrow-down button on Package, Task, and Navigator view
(maximizing and right-justifing the workbench window), all Menus (and sub-menu)
are correctly positioned.

More info is need.
I'm running GTK+2.0-2.0.6 in the Gnome desktop with 4 gnome workspaces (the 
default). IBM 1.3.1.

It might not be entirely clear, but the screenshot I attached shows the
rightmost edge of my screen.
Jared, please verify if this bug exist in RC3.
I'm still unable to reproduce it. I also running Gnome desktop with 4 gnome
workspaces. Redhat 8.0.


I still get the same problem. I'm on Mandrake 9.0 here at home.
Bug in GTK, this is fixed in GTK 2.2.x.
We don't plan to workaround this problem since it is fixed in GTK already.</WithStack>
    <WithOutStack>Build 20030107
Linux-GTK

Chevron menus do not adjust their position to remain visible at the edge of
the screen on Linux-GTK. Context menus and toolbar menus (File, Edit, etc.)
correctly reposition themselves and expand submenus away from the screen edge
but chevron menus don't. This can be seen by pulling down the triangle menu
from a view's toolbar with Eclipse maximized or right-justified.
Created attachment 2928
chevron.png - A screenshot of the problem
SWT is not responsible for positioning the menu, the application is.
Anyhow, I will verifiy if the coordinates are correct on the event.
Jared, I'm not able to reproduce this problem.

I have tried the arrow-down button on Package, Task, and Navigator view
(maximizing and right-justifing the workbench window), all Menus (and sub-menu)
are correctly positioned.

More info is need.
I'm running GTK+2.0-2.0.6 in the Gnome desktop with 4 gnome workspaces (the 
default). IBM 1.3.1.

It might not be entirely clear, but the screenshot I attached shows the
rightmost edge of my screen.
Jared, please verify if this bug exist in RC3.
I'm still unable to reproduce it. I also running Gnome desktop with 4 gnome
workspaces. Redhat 8.0.


I still get the same problem. I'm on Mandrake 9.0 here at home.
Bug in GTK, this is fixed in GTK 2.2.x.
We don't plan to workaround this problem since it is fixed in GTK already.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29178" />
    <CreationDate amount="2003-01-08 17:10:00 -0500" />
    <DupId amount="53445" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>address AST client needs re: leading and trailing comments</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="singlecomment">
        <location start="333" end="353" />
        <code>// comment 1</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="386" end="405" />
        <code>// comment 4</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="405" end="424" />
        <code>// comment 5</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="457" end="490" />
        <code>// comment 7</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="490" end="509" />
        <code>// comment 8</code>
      </source_code>
      <source_code type="functioncall">
        <location start="509" end="528" />
        <code>statement3();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>AST clients need a way to get at leading and trailing comments for statements 
(and other node types) so that they can do reasonable things like 
selecting/deleting/moving entire language construct. 

Part of the difficulty will be deciding on the rules for deciding which 
comments should be associated with which constructs. E.g.:

      // comment 1
      statement1(); // comment 2
      // comment 4
      // comment 5
      statement2(); // comment 6
                    // comment 7
      // comment 8
      statement3();

See bug 28268 for a discussion of the kinds of issues that arise in 
refactoring.

One possible approach to consider is adding new scanner-based utility so that 
a client can expand the source range of a node after-the-fact to include the 
leading and/or trailing comments and whitespace that naturally belong to a 
construct.
Post 2.1

Support should not suppose anything about attaching comments. There should be a 
pluggable mechanism for associated comments to nodes, and we would provide a 
reasonable default one.
Reopen to set as duplicate


*** This bug has been marked as a duplicate of 53445 ***</WithStack>
    <WithOutStack>AST clients need a way to get at leading and trailing comments for statements 
(and other node types) so that they can do reasonable things like 
selecting/deleting/moving entire language construct. 

Part of the difficulty will be deciding on the rules for deciding which 
comments should be associated with which constructs. E.g.:

      // comment 1
      statement1(); // comment 2
      // comment 4
      // comment 5
      statement2(); // comment 6
                    // comment 7
      // comment 8
      statement3();

See bug 28268 for a discussion of the kinds of issues that arise in 
refactoring.

One possible approach to consider is adding new scanner-based utility so that 
a client can expand the source range of a node after-the-fact to include the 
leading and/or trailing comments and whitespace that naturally belong to a 
construct.
Post 2.1

Support should not suppose anything about attaching comments. There should be a 
pluggable mechanism for associated comments to nodes, and we would provide a 
reasonable default one.
Reopen to set as duplicate


*** This bug has been marked as a duplicate of 53445 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29179" />
    <CreationDate amount="2003-01-08 17:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Workbench] Support for non-IDE applications</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="assignment">
        <location start="9382" end="9418" />
        <code>WorkbenchWindow window = windows[i];</code>
      </source_code>
      <source_code type="functioncall">
        <location start="9419" end="9448" />
        <code>window.updateBarVisibility();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="13563" end="13636" />
        <code>boolean includesContribution(String contributionId, String fromPluginId);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="4">
        <Lines>
          <Line>- a dependency on the workspace model (org.eclipse.core.resources plugin)</Line>
          <Line>- a fixed UI layout: the toolbar, shortcut bar, and status line are always</Line>
          <Line>visible</Line>
          <Line>- several hardcoded menus, menu items and toolbar items</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- Workbench.newWorkbenchWindow() and calls to it</Line>
          <Line>- WorkbenchWindow.getLayout() and call to it</Line>
          <Line>- Rather than making the fields protected, I added accessor methods:</Line>
          <Line>getShortcutBar() (this one was already there), getSeperator2() and</Line>
          <Line>getSeparator3().  This follows the style of ApplicationWindow and our coding</Line>
          <Line>convention elsewhere.  We generally keep fields private but use accessor</Line>
          <Line>methods as needed.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Feature request: Provide support to hide and show eclipse tool bar components 
at runtime.

Purpose
The primary focus of this proposal is aimed at providing a solution to 
dynamically hide and show tool bar components for running (non-tooling) 
applications on eclipse.  The tool bar components include the action tool bar, 
perspective bar, and status bar.  We are requesting that a solution for this 
request be included in the eclipse 2.1 product.

Discussion
We are using eclipse to run non-tooling-based applications and therefore have 
the need to hide the default tooling UI personality.  In working toward this 
goal, there are three fundamental areas that we are currently focused on that 
include suppressing tool bar components and tooling-related menus, in addition 
to starting eclipse with a perspective initially containing no views.

Included in this feature request is the code for dynamically hiding and showing 
tool bar components, as well as the development document and test plugin.  Code 
changes are with respect to M4.  Please see attachments.

We also noticed when trying to suppress tooling related menus that some menu 
items can be hidden by removing actions in plugin.xml files.  However, others 
are hardcoded, such as Navigate, Project, and Window in the 
WorkbenchActionBuilder class.  We need to hide these hardcoded menus, is there 
a plan to address this?  What is the recommendation for suppressing these menus?
Created attachment 2929
Development Notes
Created attachment 2930
Sample code for feature request
Created attachment 2931
Test plug-in for sample code
As you know, the workbench (synonym for Platform-UI) hardcodes several 
assumptions that it is a tooling platform, rather than a completely open 
platform.  This includes:
- a dependency on the workspace model (org.eclipse.core.resources plugin)
- a fixed UI layout: the toolbar, shortcut bar, and status line are always 
visible
- several hardcoded menus, menu items and toolbar items

We would like to migrate to a more open workbench architecture, where we make 
no assumptions on the kind of application being built on it.
Due to API compatibility requirements, the short time remaining, and the focus 
on previously planned items, we will be unable to address this fully for 2.1.
However, for 2.1 we are investigating ways of allowing an application to 
disable or hide some of the tool-item centric actions, and other areas (status 
line etc.).

I will review your proposed changes and consider including them, or similar 
mechanisms, for 2.1.

Investigate for M5.
Could you please clarify your requirements for hiding the toolbar, shortcut bar 
(bar at left showing perspectives and fast views) and the status bar?
Do you need to hide them always, or on a per-window basis.
E.g. can the user choose to turn them on?
Should they be all turned on or off together, or do you need separate control 
over each?

Could you also clarify which, if any, of the current built-in actions you would 
keep? You can see all the built-in actions by choosing Window / Close All 
Perspectives.

&gt; Could you please clarify your requirements for hiding the toolbar, 
&gt; shortcut bar 
&gt; (bar at left showing perspectives and fast views) and the status bar?

We need the ability to hide these components at the API level.  A plugin vendor 
may want to contribute actions that would allow for a user to turn these 
components on and off.  

&gt; Do you need to hide them always, or on a per-window basis.

We are considering this to be a global setting, and would like to be able to 
describe the default visibility of these components via extensions.

&gt; Should they be all turned on or off together, or do you need separate control 
&gt; over each?

We need separate control over each.
 
&gt; Could you also clarify which, if any, of the current built-in 
&gt; actions you would keep? 

From a menu point of view, a minimal set would be ideal and include only 
File/Exit, with the option to show other menus as needed.  

The following would be the second option to initially show basic general 
purpose menus.

File: Exit
Edit: Undo, Redo, Cut, Copy, Paste
Help:	About
Window: New Window, Open Perspective, Show View, &lt;perspective menu items&gt;, 
Preferences

For the toolbar, shortcut bar, etc., I am considering using our preference 
mechanism, with a separate preference for each one.
These would default to on, but a product (the primary feature) can override the 
default preference settings.


*** Bug 29897 has been marked as a duplicate of this bug. ***
&gt; For the toolbar, shortcut bar, etc., I am considering using our preference 
&gt; mechanism, with a separate preference for each one.

This makes more sense than using extension points to define the visible state 
at load time.  Is this in addition to API or will this be the only method of 
hiding/showing the components?  
The preference mechanism would suffice as the only API if each window listened 
for preference changes, and updated itself accordingly.
This only makes sense if it's a global preference though, and would not support 
per-window settings.

What were you imagining as the UI for enabling/disabling these items?
I'm currently only thinking of using the underlying preference store mechanism, 
not adding UI for the preferences in the Workbench/Appearance preference page 
(or any other), although we could consider doing so if you think it makes sense 
for arbitrary applications.

The preference mechanism idea seems to make sense and is inline with our vision 
for a global setting.  

While I agree that we don't need to add it to the workbench preferences page, I 
still want to ensure that we can set visibility through a custom toggle menu or 
custom preference UI.  To summarize, we need a way set visibility through a 
Primary Feature and dynamically through arbitrary UI such as a menu.

 
*** Bug 30781 has been marked as a duplicate of this bug. ***
Refactored and cleaned up the WorkbenchActionBuilder (there was lots of pre-
2.0 cruft in there and the messages.properties file).

It's now created in Workbench.createActionBuilder(IWindow), which is called 
when a new window is being created.  This method is protected, so it can be 
overridden in a subclass of Workbench (the application class) to return your 
own subclass of WorkbenchActionBuilder.

WorkbenchActionBuilder has public methods buildActions(), dispose() and 
isContainerMenu(String) (the latter is needed for OLE support).  Everything 
else is private.  You'll pretty well need to replace the whole thing (copy it 
and edit it down).

Note that WorkbenchActionBuilder and the createActionBuilder method are still 
considered internal.  This is a stop-gap measure until we can properly examine 
supporting other apps after Eclipse 2.1.  

I've added the following changes from the patch, since they seemed like an 
improvement to the structure regardless of how we do hide/show of the action 
bars:
- Workbench.newWorkbenchWindow() and calls to it
- WorkbenchWindow.getLayout() and call to it
- Rather than making the fields protected, I added accessor methods: 
getShortcutBar() (this one was already there), getSeperator2() and 
getSeparator3().  This follows the style of ApplicationWindow and our coding 
convention elsewhere.  We generally keep fields private but use accessor 
methods as needed.

For hiding/showing the action bars, I have basically pushed up your changes 
into WorkbenchWindow.  I've added the fields and the following accessor 
methods: get/setShowShortcutBar, get/setShowStatusLine and get/setShowToolBar 
(note the slight name changes).

The show* fields are initialized from preferences (currently internal 
preferences in the org.eclipse.ui.workbench plugin, which is an internal 
plugin).  The prefs default to true.
The constants for these are in IWorkbenchPreferenceConstants.SHOW_STATUS_BAR, 
etc.

A product can set the initial value of these using the preference override 
mechanism.  Add entries like the following to the plugin_customization.ini 
file in the plugin for the primary feature.  In the regular Eclipse SDK 
download, the primary feature is org.eclipse.platform, so the file is 
eclipse/plugins/org.eclipse.platform/plugin_customization.ini.

org.eclipse.ui.workbench/SHOW_SHORTCUT_BAR=false
org.eclipse.ui.workbench/SHOW_STATUS_LINE=false
org.eclipse.ui.workbench/SHOW_TOOL_BAR=false

This mechanism can also be used to specify the default perspective as well 
(this is not new).  For example, the following will change the default 
perspective to the Java Browsing perspective:
org.eclipse.ui/defaultPerspectiveId=org.eclipse.jdt.ui.JavaBrowsingPerspective

Create a new workspace to see this, or delete the persisted UI layout file, 
workbench.xml, under .metadata/.plugins/org.eclipse.ui.workbench.

You can also pass a plugin customization file (with the same format) on the 
command line using the -plugincustomization flag.

For the show* flags, note that they only take their initial value from the 
preferences.  The windows do not track changes to the preferences.  I've left 
it like this for now since it was unclear that we wanted the UI to relayout 
after a change to the individual preferences.  You might want to change 
several at the same time.  For now, if you change these preferences, you will 
need to iterate over all windows using IWorkbench.getWorkbenchWindows(), and 
call:
WorkbenchWindow window = windows[i];
window.updateBarVisibility();
window.getShell().layout();  // should check if shell is disposed too

New windows will get the new preferences.

The refactoring work that was done to the menus is very helpful.  It's almost 
identical to the approach we have already taken in this area.

As for the tooling-UI changes, it's great to hear that some code from the patch 
was useful.  I didn't see any comments regarding the layout code.  Did you use 
the layout code from the patch?

Thanks again for implementing the changes, could you tell us which build these 
might appear in.

Thanks
-m@
Yes, I incorporated your changes to the layout to honour the show* settings.
The changes are in the current integration build.

I'm interested in what other changes you've had to make.
In particular:

- With these changes, do you still need to subclass WorkbenchWindow for any 
reason?

- You'll need to subclass Workbench to substitute a different action builder, 
but are there other reasons for why you need to do this?  I'd like to avoid you 
having to do this if possible (I don't see a better answer for the actions for 
2.1 though).

- In your list of minimial menu items above, you included Preferences.  This 
will cause the workbench preference pages to show up (as well as those in any 
other plugins you include from the SDK, but you need at least org.eclipse.ui).  
How do you deal with these currently?  Hacking the plugin.xml is one option, 
but not a very clean one.  I'm thinking of letting you set an excludes list in 
the workbench.  Any extensions (preference pages or others) whose ids are in 
this excludes list would be ignored.  This is clearly another hack, but would 
be easy to add for 2.1.


&gt;With these changes, do you still need to subclass WorkbenchWindow for any 
reason?

Yes but only to substitute the ActionBuilder :-)

&gt; In your list of minimial menu items above, you included Preferences.  This 
&gt; will cause the workbench preference pages to show up 

Yes we are interested in the Preference mechanism.

&gt; How do you deal with these currently?  
&gt; Hacking the plugin.xml is one option

Yes, this is what we've done for now.

&gt; but not a very clean one.  

Are there alternatives?

&gt;I'm thinking of letting you set an excludes list in 
the workbench.  Any extensions (preference pages or others) whose ids are in 
this excludes list would be ignored.  

How about just leveraging the preference store once again and allowing for us 
to specify things like alternate actionbuilder classes and the like.  This may 
allow for us to define one outside the workbench.  Would an includes list make 
more sense.  It may be more difficult to track the excludes vs. tracking the 
includes.


Yes, we could do an includes list instead.  Will consider this for 2.1.

For the workbench actions, though, we can't simply reference a class name in a 
preference.  It has to come from some extension in some plugin, so we would 
have to introduce a new extension point for the workbench actions, and specify 
which extension wins in the preferences.
However, it's unclear to me that this is the right long term answer.  For 2.1, 
we'll stick with the current hack where you can subclass Workbench.


Changing title to reflect the more general subject of this PR.
Any progress here with respect to menus?
You can now override how windows populate the hardwired items in the menubar 
and toolbar by subclassing Workbench and overriding createActionBuilder
(IWorkbenchWindow).  I haven't made any further changes, e.g to filtering out 
other contributions.  What aspect in particular are you interested in?

I was referring to the "include" preference setting for menus.
Sorry, I'm still unclear.  Replacing the WorkbenchActionBuilder is the 
mechanism for changing the overall menu structure.
We had discussed an "includes" mechanism for other kinds of contributions, e.g. 
perspectives, views, property pages, preference pages, action sets, etc.
This would also affect the contents of certain submenus, e.g. Window &gt; Show 
View, and Window &gt; Open Perspective.

My current thinking here is to add a protected method to Workbench like: 
boolean includesContribution(String contributionId, String fromPluginId);
The default implementation would just return true.  This would allow you to do 
pattern matching rather than simply exhaustively listing all contributions you 
want (you would have to include all your own contributions as well).


No more work planned for 2.1.

Created attachment 4621
Work done to make views more customizable

This work was done to make the views more customizable.  We have use cases
where we would like to make it difficult or impossible to move a view (drag it)
and close a view.  We also have cases where we would not want any icon to be
displayed for a view (e.g. no default icon is loaded when an icon attribute is
not specified in the view's extension).  And finally we have cases where we
would not want to show the titlebar at all for a view.
See bug 36967 for the R3.0 plan item to refactor the eclipse workbench into a 
generic 'Rich Client Platform' layer and a separable IDE tooling layer.

Closing this PR to avoid overlap.  This PR covers the changes made for 2.1, not 
the ongoing R3.0 work (we will still investigate Matthew's patch).


Closing.</WithStack>
    <WithOutStack>Feature request: Provide support to hide and show eclipse tool bar components 
at runtime.

Purpose
The primary focus of this proposal is aimed at providing a solution to 
dynamically hide and show tool bar components for running (non-tooling) 
applications on eclipse.  The tool bar components include the action tool bar, 
perspective bar, and status bar.  We are requesting that a solution for this 
request be included in the eclipse 2.1 product.

Discussion
We are using eclipse to run non-tooling-based applications and therefore have 
the need to hide the default tooling UI personality.  In working toward this 
goal, there are three fundamental areas that we are currently focused on that 
include suppressing tool bar components and tooling-related menus, in addition 
to starting eclipse with a perspective initially containing no views.

Included in this feature request is the code for dynamically hiding and showing 
tool bar components, as well as the development document and test plugin.  Code 
changes are with respect to M4.  Please see attachments.

We also noticed when trying to suppress tooling related menus that some menu 
items can be hidden by removing actions in plugin.xml files.  However, others 
are hardcoded, such as Navigate, Project, and Window in the 
WorkbenchActionBuilder class.  We need to hide these hardcoded menus, is there 
a plan to address this?  What is the recommendation for suppressing these menus?
Created attachment 2929
Development Notes
Created attachment 2930
Sample code for feature request
Created attachment 2931
Test plug-in for sample code
As you know, the workbench (synonym for Platform-UI) hardcodes several 
assumptions that it is a tooling platform, rather than a completely open 
platform.  This includes:
- a dependency on the workspace model (org.eclipse.core.resources plugin)
- a fixed UI layout: the toolbar, shortcut bar, and status line are always 
visible
- several hardcoded menus, menu items and toolbar items

We would like to migrate to a more open workbench architecture, where we make 
no assumptions on the kind of application being built on it.
Due to API compatibility requirements, the short time remaining, and the focus 
on previously planned items, we will be unable to address this fully for 2.1.
However, for 2.1 we are investigating ways of allowing an application to 
disable or hide some of the tool-item centric actions, and other areas (status 
line etc.).

I will review your proposed changes and consider including them, or similar 
mechanisms, for 2.1.

Investigate for M5.
Could you please clarify your requirements for hiding the toolbar, shortcut bar 
(bar at left showing perspectives and fast views) and the status bar?
Do you need to hide them always, or on a per-window basis.
E.g. can the user choose to turn them on?
Should they be all turned on or off together, or do you need separate control 
over each?

Could you also clarify which, if any, of the current built-in actions you would 
keep? You can see all the built-in actions by choosing Window / Close All 
Perspectives.

&gt; Could you please clarify your requirements for hiding the toolbar, 
&gt; shortcut bar 
&gt; (bar at left showing perspectives and fast views) and the status bar?

We need the ability to hide these components at the API level.  A plugin vendor 
may want to contribute actions that would allow for a user to turn these 
components on and off.  

&gt; Do you need to hide them always, or on a per-window basis.

We are considering this to be a global setting, and would like to be able to 
describe the default visibility of these components via extensions.

&gt; Should they be all turned on or off together, or do you need separate control 
&gt; over each?

We need separate control over each.
 
&gt; Could you also clarify which, if any, of the current built-in 
&gt; actions you would keep? 

From a menu point of view, a minimal set would be ideal and include only 
File/Exit, with the option to show other menus as needed.  

The following would be the second option to initially show basic general 
purpose menus.

File: Exit
Edit: Undo, Redo, Cut, Copy, Paste
Help:	About
Window: New Window, Open Perspective, Show View, &lt;perspective menu items&gt;, 
Preferences

For the toolbar, shortcut bar, etc., I am considering using our preference 
mechanism, with a separate preference for each one.
These would default to on, but a product (the primary feature) can override the 
default preference settings.


*** Bug 29897 has been marked as a duplicate of this bug. ***
&gt; For the toolbar, shortcut bar, etc., I am considering using our preference 
&gt; mechanism, with a separate preference for each one.

This makes more sense than using extension points to define the visible state 
at load time.  Is this in addition to API or will this be the only method of 
hiding/showing the components?  
The preference mechanism would suffice as the only API if each window listened 
for preference changes, and updated itself accordingly.
This only makes sense if it's a global preference though, and would not support 
per-window settings.

What were you imagining as the UI for enabling/disabling these items?
I'm currently only thinking of using the underlying preference store mechanism, 
not adding UI for the preferences in the Workbench/Appearance preference page 
(or any other), although we could consider doing so if you think it makes sense 
for arbitrary applications.

The preference mechanism idea seems to make sense and is inline with our vision 
for a global setting.  

While I agree that we don't need to add it to the workbench preferences page, I 
still want to ensure that we can set visibility through a custom toggle menu or 
custom preference UI.  To summarize, we need a way set visibility through a 
Primary Feature and dynamically through arbitrary UI such as a menu.

 
*** Bug 30781 has been marked as a duplicate of this bug. ***
Refactored and cleaned up the WorkbenchActionBuilder (there was lots of pre-
2.0 cruft in there and the messages.properties file).

It's now created in Workbench.createActionBuilder(IWindow), which is called 
when a new window is being created.  This method is protected, so it can be 
overridden in a subclass of Workbench (the application class) to return your 
own subclass of WorkbenchActionBuilder.

WorkbenchActionBuilder has public methods buildActions(), dispose() and 
isContainerMenu(String) (the latter is needed for OLE support).  Everything 
else is private.  You'll pretty well need to replace the whole thing (copy it 
and edit it down).

Note that WorkbenchActionBuilder and the createActionBuilder method are still 
considered internal.  This is a stop-gap measure until we can properly examine 
supporting other apps after Eclipse 2.1.  

I've added the following changes from the patch, since they seemed like an 
improvement to the structure regardless of how we do hide/show of the action 
bars:
- Workbench.newWorkbenchWindow() and calls to it
- WorkbenchWindow.getLayout() and call to it
- Rather than making the fields protected, I added accessor methods: 
getShortcutBar() (this one was already there), getSeperator2() and 
getSeparator3().  This follows the style of ApplicationWindow and our coding 
convention elsewhere.  We generally keep fields private but use accessor 
methods as needed.

For hiding/showing the action bars, I have basically pushed up your changes 
into WorkbenchWindow.  I've added the fields and the following accessor 
methods: get/setShowShortcutBar, get/setShowStatusLine and get/setShowToolBar 
(note the slight name changes).

The show* fields are initialized from preferences (currently internal 
preferences in the org.eclipse.ui.workbench plugin, which is an internal 
plugin).  The prefs default to true.
The constants for these are in IWorkbenchPreferenceConstants.SHOW_STATUS_BAR, 
etc.

A product can set the initial value of these using the preference override 
mechanism.  Add entries like the following to the plugin_customization.ini 
file in the plugin for the primary feature.  In the regular Eclipse SDK 
download, the primary feature is org.eclipse.platform, so the file is 
eclipse/plugins/org.eclipse.platform/plugin_customization.ini.

org.eclipse.ui.workbench/SHOW_SHORTCUT_BAR=false
org.eclipse.ui.workbench/SHOW_STATUS_LINE=false
org.eclipse.ui.workbench/SHOW_TOOL_BAR=false

This mechanism can also be used to specify the default perspective as well 
(this is not new).  For example, the following will change the default 
perspective to the Java Browsing perspective:
org.eclipse.ui/defaultPerspectiveId=org.eclipse.jdt.ui.JavaBrowsingPerspective

Create a new workspace to see this, or delete the persisted UI layout file, 
workbench.xml, under .metadata/.plugins/org.eclipse.ui.workbench.

You can also pass a plugin customization file (with the same format) on the 
command line using the -plugincustomization flag.

For the show* flags, note that they only take their initial value from the 
preferences.  The windows do not track changes to the preferences.  I've left 
it like this for now since it was unclear that we wanted the UI to relayout 
after a change to the individual preferences.  You might want to change 
several at the same time.  For now, if you change these preferences, you will 
need to iterate over all windows using IWorkbench.getWorkbenchWindows(), and 
call:
WorkbenchWindow window = windows[i];
window.updateBarVisibility();
window.getShell().layout();  // should check if shell is disposed too

New windows will get the new preferences.

The refactoring work that was done to the menus is very helpful.  It's almost 
identical to the approach we have already taken in this area.

As for the tooling-UI changes, it's great to hear that some code from the patch 
was useful.  I didn't see any comments regarding the layout code.  Did you use 
the layout code from the patch?

Thanks again for implementing the changes, could you tell us which build these 
might appear in.

Thanks
-m@
Yes, I incorporated your changes to the layout to honour the show* settings.
The changes are in the current integration build.

I'm interested in what other changes you've had to make.
In particular:

- With these changes, do you still need to subclass WorkbenchWindow for any 
reason?

- You'll need to subclass Workbench to substitute a different action builder, 
but are there other reasons for why you need to do this?  I'd like to avoid you 
having to do this if possible (I don't see a better answer for the actions for 
2.1 though).

- In your list of minimial menu items above, you included Preferences.  This 
will cause the workbench preference pages to show up (as well as those in any 
other plugins you include from the SDK, but you need at least org.eclipse.ui).  
How do you deal with these currently?  Hacking the plugin.xml is one option, 
but not a very clean one.  I'm thinking of letting you set an excludes list in 
the workbench.  Any extensions (preference pages or others) whose ids are in 
this excludes list would be ignored.  This is clearly another hack, but would 
be easy to add for 2.1.


&gt;With these changes, do you still need to subclass WorkbenchWindow for any 
reason?

Yes but only to substitute the ActionBuilder :-)

&gt; In your list of minimial menu items above, you included Preferences.  This 
&gt; will cause the workbench preference pages to show up 

Yes we are interested in the Preference mechanism.

&gt; How do you deal with these currently?  
&gt; Hacking the plugin.xml is one option

Yes, this is what we've done for now.

&gt; but not a very clean one.  

Are there alternatives?

&gt;I'm thinking of letting you set an excludes list in 
the workbench.  Any extensions (preference pages or others) whose ids are in 
this excludes list would be ignored.  

How about just leveraging the preference store once again and allowing for us 
to specify things like alternate actionbuilder classes and the like.  This may 
allow for us to define one outside the workbench.  Would an includes list make 
more sense.  It may be more difficult to track the excludes vs. tracking the 
includes.


Yes, we could do an includes list instead.  Will consider this for 2.1.

For the workbench actions, though, we can't simply reference a class name in a 
preference.  It has to come from some extension in some plugin, so we would 
have to introduce a new extension point for the workbench actions, and specify 
which extension wins in the preferences.
However, it's unclear to me that this is the right long term answer.  For 2.1, 
we'll stick with the current hack where you can subclass Workbench.


Changing title to reflect the more general subject of this PR.
Any progress here with respect to menus?
You can now override how windows populate the hardwired items in the menubar 
and toolbar by subclassing Workbench and overriding createActionBuilder
(IWorkbenchWindow).  I haven't made any further changes, e.g to filtering out 
other contributions.  What aspect in particular are you interested in?

I was referring to the "include" preference setting for menus.
Sorry, I'm still unclear.  Replacing the WorkbenchActionBuilder is the 
mechanism for changing the overall menu structure.
We had discussed an "includes" mechanism for other kinds of contributions, e.g. 
perspectives, views, property pages, preference pages, action sets, etc.
This would also affect the contents of certain submenus, e.g. Window &gt; Show 
View, and Window &gt; Open Perspective.

My current thinking here is to add a protected method to Workbench like: 
boolean includesContribution(String contributionId, String fromPluginId);
The default implementation would just return true.  This would allow you to do 
pattern matching rather than simply exhaustively listing all contributions you 
want (you would have to include all your own contributions as well).


No more work planned for 2.1.

Created attachment 4621
Work done to make views more customizable

This work was done to make the views more customizable.  We have use cases
where we would like to make it difficult or impossible to move a view (drag it)
and close a view.  We also have cases where we would not want any icon to be
displayed for a view (e.g. no default icon is loaded when an icon attribute is
not specified in the view's extension).  And finally we have cases where we
would not want to show the titlebar at all for a view.
See bug 36967 for the R3.0 plan item to refactor the eclipse workbench into a 
generic 'Rich Client Platform' layer and a separable IDE tooling layer.

Closing this PR to avoid overlap.  This PR covers the changes made for 2.1, not 
the ongoing R3.0 work (we will still investigate Matthew's patch).


Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29180" />
    <CreationDate amount="2003-01-08 17:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Support double-click in file selection dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>External tools defines a FileSelectionDialog that's used for choosing files
to add to the Ant view and for choosing files as a location in the launch
config.

This dialog should allow the user to double-click a file in the right-hand
pane to choose the file and dismiss the dialog.
Implemented. Please verify.
*** Bug 28573 has been marked as a duplicate of this bug. ***
Verified.
Hitched it up for the AddCustomDialog as well.</WithStack>
    <WithOutStack>External tools defines a FileSelectionDialog that's used for choosing files
to add to the Ant view and for choosing files as a location in the launch
config.

This dialog should allow the user to double-click a file in the right-hand
pane to choose the file and dismiss the dialog.
Implemented. Please verify.
*** Bug 28573 has been marked as a duplicate of this bug. ***
Verified.
Hitched it up for the AddCustomDialog as well.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29181" />
    <CreationDate amount="2003-01-08 17:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Where is the SORT toolbar button ??</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Documentation refers to Outline view,
but one can't open this view.
I suspect in the JDT the outline view is 
the Package Explorer.
The documentation refers to a Sort button,
but no such button seems to exist.
It is the outline view of the Java editor. Open a Java file. The corresponding 
outline view has a button "a/z" to enable/disable sorting. If you don't have a 
outline view open one via Windows-&gt;Show View-&gt;Outline.</WithStack>
    <WithOutStack>Documentation refers to Outline view,
but one can't open this view.
I suspect in the JDT the outline view is 
the Package Explorer.
The documentation refers to a Sort button,
but no such button seems to exist.
It is the outline view of the Java editor. Open a Java file. The corresponding 
outline view has a button "a/z" to enable/disable sorting. If you don't have a 
outline view open one via Windows-&gt;Show View-&gt;Outline.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29182" />
    <CreationDate amount="2003-01-08 18:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Workbench] make EditorPart#getAdapter()  to extensible</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="123" end="236" />
        <code>public Object getAdapter(Class adapter){
    return Platform.getAdapterManager().getAdapter(this, adapter);
  }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Create a lightweight plugin that only contains your adapter factory and</Line>
          <Line>adapter class, and does not depend on the rest of your plugin.</Line>
          <Line>2. Extend org.eclipse.ui.startup to force this new plugin to be loaded at startup.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>This is feture requests.

First request:
I'd like to have EditorPart#getAdapter() to extensible from another plugin,
like:
  public Object getAdapter(Class adapter){
    return Platform.getAdapterManager().getAdapter(this, adapter);
  }

For example, 
- If I have a Spell Check plugin which requires ISpellCheckTarget thru 
getAdapter() method just like IFindReplaceTarget, I can add Spell Check 
ability to existing editors such as JavaEditor without modifing those editors.

Second request:
It would be nice if EditorPart has a default AdapterFactory 
which allows to add a new IAdapter thru extension point, so that I 
can delay plugin loading which has an implementation of the new adapter
until it is really necessary. Otherwise, somehow the plugin needs to be loaded
before getAdapter() call to register it to the editor.
Regarding the first request, I think this is a great idea. We should probably
put that in WorkbenchPart#getAdapter so that other parts can also benefit.

Regarding the second request,

bug #32436 suggests an enhancement to the adapter system which would do what
you're looking for.

You might also want to try the following:
1. Create a lightweight plugin that only contains your adapter factory and
adapter class, and does not depend on the rest of your plugin.
2. Extend org.eclipse.ui.startup to force this new plugin to be loaded at startup. 

I suspect that this will work. 

Out of curiosity, why do you need the adapter to be available before the main
plugin loads? 

There are currently no plans to work on this feature</WithStack>
    <WithOutStack>This is feture requests.

First request:
I'd like to have EditorPart#getAdapter() to extensible from another plugin,
like:
  public Object getAdapter(Class adapter){
    return Platform.getAdapterManager().getAdapter(this, adapter);
  }

For example, 
- If I have a Spell Check plugin which requires ISpellCheckTarget thru 
getAdapter() method just like IFindReplaceTarget, I can add Spell Check 
ability to existing editors such as JavaEditor without modifing those editors.

Second request:
It would be nice if EditorPart has a default AdapterFactory 
which allows to add a new IAdapter thru extension point, so that I 
can delay plugin loading which has an implementation of the new adapter
until it is really necessary. Otherwise, somehow the plugin needs to be loaded
before getAdapter() call to register it to the editor.
Regarding the first request, I think this is a great idea. We should probably
put that in WorkbenchPart#getAdapter so that other parts can also benefit.

Regarding the second request,

bug #32436 suggests an enhancement to the adapter system which would do what
you're looking for.

You might also want to try the following:
1. Create a lightweight plugin that only contains your adapter factory and
adapter class, and does not depend on the rest of your plugin.
2. Extend org.eclipse.ui.startup to force this new plugin to be loaded at startup. 

I suspect that this will work. 

Out of curiosity, why do you need the adapter to be available before the main
plugin loads? 

There are currently no plans to work on this feature</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29183" />
    <CreationDate amount="2003-01-08 18:11:00 -0500" />
    <DupId amount="28894" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Tasks view should not show for build errors by default</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20030107

The latest build introduced a behavior whereby the tasks view appears
everytime a build error (or warning) exists and a build finishes. This is
extremely annoying as it makes the tasks view pop up with every save in the
normal case, effectively making it impossible to close the tasks view.

It's possible that some people might want this behavior, but the preference
should be something that they can turn off if they want to get harassed. :)

Please turn this preference off by default.


*** This bug has been marked as a duplicate of 28894 ***</WithStack>
    <WithOutStack>Build 20030107

The latest build introduced a behavior whereby the tasks view appears
everytime a build error (or warning) exists and a build finishes. This is
extremely annoying as it makes the tasks view pop up with every save in the
normal case, effectively making it impossible to close the tasks view.

It's possible that some people might want this behavior, but the preference
should be something that they can turn off if they want to get harassed. :)

Please turn this preference off by default.


*** This bug has been marked as a duplicate of 28894 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29184" />
    <CreationDate amount="2003-01-08 18:18:00 -0500" />
    <DupId amount="31561" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Clicking between Ant launch configs is slow</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20030107

Clicking between Ant configs in the launch config dialog is very slow. The
time is spent parsing the targets.

We should make this faster using caching while the dialog is visible - either
cache the targets or cache the ant class loader to make the parsing faster.
We should be able to use the new support provided for the ant editor.
This could be used for both the ant view and the launch configs.


*** This bug has been marked as a duplicate of 31561 ***</WithStack>
    <WithOutStack>Build 20030107

Clicking between Ant configs in the launch config dialog is very slow. The
time is spent parsing the targets.

We should make this faster using caching while the dialog is visible - either
cache the targets or cache the ant class loader to make the parsing faster.
We should be able to use the new support provided for the ant editor.
This could be used for both the ant view and the launch configs.


*** This bug has been marked as a duplicate of 31561 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29185" />
    <CreationDate amount="2003-01-08 18:44:00 -0500" />
    <DupId amount="33626" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[formatting] RightClick format should not reposition view or cursor.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If you select all of the text in a java file - CTRL-A - right click and format
the text box view moves to the top of the file.  It shouldn't.  The view should
remain where you had it when you clicked format.
Still an issue


*** This bug has been marked as a duplicate of 33626 ***</WithStack>
    <WithOutStack>If you select all of the text in a java file - CTRL-A - right click and format
the text box view moves to the top of the file.  It shouldn't.  The view should
remain where you had it when you clicked format.
Still an issue


*** This bug has been marked as a duplicate of 33626 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29186" />
    <CreationDate amount="2003-01-08 21:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ajc -emacssym chokes on pointcut that includes an intertype method</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functiondef">
        <location start="67" end="100" />
        <code>before() : call(void foo()) { }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="101" end="128" />
        <code>void Bar.bar() { foo(); }</code>
      </source_code>
      <source_code type="class">
        <location start="131" end="161" />
        <code>class Bar {
  void foo() { }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This works fine without -emacssym, but dies with it:

aspect Foo {
  before() : call(void foo()) { }
  void Bar.bar() { foo(); }
}
class Bar {
  void foo() { }
}

munger: (before: (persingleton(Foo) &amp;&amp; call(ExactTypePattern(void) foo()))-&gt;void Foo.ajc$before$Foo$f()) on method-call(void Bar.foo())
trouble in: 
public class Foo extends java.lang.Object:
  TypeMungers: [(BcelTypeMunger ResolvedTypeMunger(Method, void Bar.bar()))]
  public static final Foo ajc$perSingletonInstance
  static void &lt;clinit&gt;():
                    INVOKESTATIC Foo.ajc$clinit ()V   (line 1)
    staticinitialization(void Foo.&lt;clinit&gt;())
    |               RETURN
    staticinitialization(void Foo.&lt;clinit&gt;())
  end static void &lt;clinit&gt;()

  void &lt;init&gt;():
                    ALOAD_0     // Foo this   (line 1)
                    INVOKESPECIAL java.lang.Object.&lt;init&gt; ()V
    constructor-execution(void Foo.&lt;init&gt;())
    |               RETURN
    constructor-execution(void Foo.&lt;init&gt;())
  end void &lt;init&gt;()

  public void ajc$before$Foo$f()    AdviceAttribute(before, call(ExactTypePattern(void) foo()), 0, 15)
:
    advice-execution(void Foo.ajc$before$Foo$f())
    |               RETURN   (line 2)
    advice-execution(void Foo.ajc$before$Foo$f())
  end public void ajc$before$Foo$f()

  public static void ajc$interMethod$Foo$Bar$bar(Bar)    EffectiveSignatureAttribute(void Bar.bar(), method-execution)
:
    method-execution(void Bar.bar())
    |               ALOAD_0     // Bar arg0   (line 3)
    | method-call(void Bar.foo())
    | |             GETSTATIC Foo.ajc$perSingletonInstance LFoo;
    | |             INVOKEVIRTUAL Foo.ajc$before$Foo$f ()V
    | |             INVOKEVIRTUAL Bar.foo ()V
    | method-call(void Bar.foo())
    |               RETURN
    method-execution(void Bar.bar())
  end public static void ajc$interMethod$Foo$Bar$bar(Bar)

  public static void ajc$interMethodDispatch1$Foo$Bar$bar(Bar)    EffectiveSignatureAttribute(void Bar.bar(), method-call)
:
                    ALOAD_0     // Bar arg0
                    INVOKEVIRTUAL Bar.ajc$interMethodDispatch2$$bar ()V
                    RETURN
  end public static void ajc$interMethodDispatch1$Foo$Bar$bar(Bar)

  public static Foo aspectOf()    org.aspectj.weaver.AjAttribute$AjSynthetic@f8f7db
:
                    GETSTATIC Foo.ajc$perSingletonInstance LFoo;
                    ARETURN
  end public static Foo aspectOf()

  public static boolean hasAspect()    org.aspectj.weaver.AjAttribute$AjSynthetic@5856a5
:
                    GETSTATIC Foo.ajc$perSingletonInstance LFoo;
                    IFNULL L0
                    ICONST_1
                    IRETURN
                L0: ICONST_0
                    IRETURN
  end public static boolean hasAspect()

  private static void ajc$clinit()    org.aspectj.weaver.AjAttribute$AjSynthetic@c39a20
:
                    NEW Foo
                    DUP
                    INVOKESPECIAL Foo.&lt;init&gt; ()V
                    PUTSTATIC Foo.ajc$perSingletonInstance LFoo;
                    RETURN
  end private static void ajc$clinit()
end public class Foo
Exception thrown from AspectJ 1.1b2

This might be logged as a bug already -- see the bug database at
  http://dev.eclipse.org (product: AspectJ, component: compiler)

Bugs for exceptions thrown have titles File:line from the top stack, 
e.g., "SomeFile.java:243"

If you don't find the exception below in a bug, please add a new bug
To make the bug a priority, please include a test program
that can reproduce this exception.
null
java.lang.NullPointerException
	at org.aspectj.weaver.AsmAdaptor.findOrCreateBodyNode(Unknown Source)
	at org.aspectj.weaver.AsmAdaptor.getNode(Unknown Source)
	at org.aspectj.weaver.AsmAdaptor.noteMunger(Unknown Source)
	at org.aspectj.weaver.Shadow.implementMungers(Unknown Source)
	at org.aspectj.weaver.Shadow.implement(Unknown Source)
	at org.aspectj.weaver.bcel.BcelClassWeaver.implement(Unknown Source)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(Unknown Source)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(Unknown Source)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(Unknown Source)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFiles(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(Unknown Source)
	at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(Unknown Source)
	at org.aspectj.tools.ajc.Main.run(Unknown Source)
	at org.aspectj.tools.ajc.Main.runMain(Unknown Source)
	at org.aspectj.tools.ajc.Main.main(Unknown Source)


1 fail|abort
This bug just touched on the surface of many problems with structure model 
generation.  The worst of those bugs are now all fixed in the current tree.  
The testcase for these is to run the standard test suite with the -emacssym 
flag so that model will be generated for every test case in the suite.

This bug shows up in all of the ide support implementations, and using -
emacssym is a good way of testing all of them minimally.</WithStack>
    <WithOutStack>This works fine without -emacssym, but dies with it:

aspect Foo {
  before() : call(void foo()) { }
  void Bar.bar() { foo(); }
}
class Bar {
  void foo() { }
}

munger: (before: (persingleton(Foo) &amp;&amp; call(ExactTypePattern(void) foo()))-&gt;void Foo.ajc$before$Foo$f()) on method-call(void Bar.foo())
trouble in: 
public class Foo extends java.lang.Object:
  TypeMungers: [(BcelTypeMunger ResolvedTypeMunger(Method, void Bar.bar()))]
  public static final Foo ajc$perSingletonInstance
  static void &lt;clinit&gt;():
                    INVOKESTATIC Foo.ajc$clinit ()V   (line 1)
    staticinitialization(void Foo.&lt;clinit&gt;())
    |               RETURN
    staticinitialization(void Foo.&lt;clinit&gt;())
  end static void &lt;clinit&gt;()

  void &lt;init&gt;():
                    ALOAD_0     // Foo this   (line 1)
                    INVOKESPECIAL java.lang.Object.&lt;init&gt; ()V
    constructor-execution(void Foo.&lt;init&gt;())
    |               RETURN
    constructor-execution(void Foo.&lt;init&gt;())
  end void &lt;init&gt;()

  public void ajc$before$Foo$f()    AdviceAttribute(before, call(ExactTypePattern(void) foo()), 0, 15)
:
    advice-execution(void Foo.ajc$before$Foo$f())
    |               RETURN   (line 2)
    advice-execution(void Foo.ajc$before$Foo$f())
  end public void ajc$before$Foo$f()

  public static void ajc$interMethod$Foo$Bar$bar(Bar)    EffectiveSignatureAttribute(void Bar.bar(), method-execution)
:
    method-execution(void Bar.bar())
    |               ALOAD_0     // Bar arg0   (line 3)
    | method-call(void Bar.foo())
    | |             GETSTATIC Foo.ajc$perSingletonInstance LFoo;
    | |             INVOKEVIRTUAL Foo.ajc$before$Foo$f ()V
    | |             INVOKEVIRTUAL Bar.foo ()V
    | method-call(void Bar.foo())
    |               RETURN
    method-execution(void Bar.bar())
  end public static void ajc$interMethod$Foo$Bar$bar(Bar)

  public static void ajc$interMethodDispatch1$Foo$Bar$bar(Bar)    EffectiveSignatureAttribute(void Bar.bar(), method-call)
:
                    ALOAD_0     // Bar arg0
                    INVOKEVIRTUAL Bar.ajc$interMethodDispatch2$$bar ()V
                    RETURN
  end public static void ajc$interMethodDispatch1$Foo$Bar$bar(Bar)

  public static Foo aspectOf()    org.aspectj.weaver.AjAttribute$AjSynthetic@f8f7db
:
                    GETSTATIC Foo.ajc$perSingletonInstance LFoo;
                    ARETURN
  end public static Foo aspectOf()

  public static boolean hasAspect()    org.aspectj.weaver.AjAttribute$AjSynthetic@5856a5
:
                    GETSTATIC Foo.ajc$perSingletonInstance LFoo;
                    IFNULL L0
                    ICONST_1
                    IRETURN
                L0: ICONST_0
                    IRETURN
  end public static boolean hasAspect()

  private static void ajc$clinit()    org.aspectj.weaver.AjAttribute$AjSynthetic@c39a20
:
                    NEW Foo
                    DUP
                    INVOKESPECIAL Foo.&lt;init&gt; ()V
                    PUTSTATIC Foo.ajc$perSingletonInstance LFoo;
                    RETURN
  end private static void ajc$clinit()
end public class Foo
Exception thrown from AspectJ 1.1b2

This might be logged as a bug already -- see the bug database at
  http://dev.eclipse.org (product: AspectJ, component: compiler)

Bugs for exceptions thrown have titles File:line from the top stack, 
e.g., "SomeFile.java:243"

If you don't find the exception below in a bug, please add a new bug
To make the bug a priority, please include a test program
that can reproduce this exception.
null
java.lang.NullPointerException
	at org.aspectj.weaver.AsmAdaptor.findOrCreateBodyNode(Unknown Source)
	at org.aspectj.weaver.AsmAdaptor.getNode(Unknown Source)
	at org.aspectj.weaver.AsmAdaptor.noteMunger(Unknown Source)
	at org.aspectj.weaver.Shadow.implementMungers(Unknown Source)
	at org.aspectj.weaver.Shadow.implement(Unknown Source)
	at org.aspectj.weaver.bcel.BcelClassWeaver.implement(Unknown Source)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(Unknown Source)
	at org.aspectj.weaver.bcel.BcelClassWeaver.weave(Unknown Source)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(Unknown Source)
	at org.aspectj.weaver.bcel.BcelWeaver.weave(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFiles(Unknown Source)
	at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(Unknown Source)
	at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(Unknown Source)
	at org.aspectj.tools.ajc.Main.run(Unknown Source)
	at org.aspectj.tools.ajc.Main.runMain(Unknown Source)
	at org.aspectj.tools.ajc.Main.main(Unknown Source)


1 fail|abort
This bug just touched on the surface of many problems with structure model 
generation.  The worst of those bugs are now all fixed in the current tree.  
The testcase for these is to run the standard test suite with the -emacssym 
flag so that model will be generated for every test case in the suite.

This bug shows up in all of the ide support implementations, and using -
emacssym is a good way of testing all of them minimally.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29187" />
    <CreationDate amount="2003-01-09 01:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Stellation" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>ANT command</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Hello,
It would be great to have a specific ANT command for Stellation like the one 
which exists for CVS, Clearcase, and so on....
regards
Xavier
not bug-related</WithStack>
    <WithOutStack>Hello,
It would be great to have a specific ANT command for Stellation like the one 
which exists for CVS, Clearcase, and so on....
regards
Xavier
not bug-related</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29188" />
    <CreationDate amount="2003-01-09 01:56:00 -0500" />
    <DupId amount="28935" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Discovered exceptions in .log file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="9">
      <Stacktrace timestamp="1437338527387">
        <Exception>org.eclipse.debug.core.DebugException</Exception>
        <Reason>Thread not suspended, stack frame 
unavailable.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException(JDIDebugElement.java:277)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:235)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame(JDIStackFrame.java:924)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getLineNumber(JDIStackFrame.java:298)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.ui.actions.StepIntoSelectionActionDelegate.selectionChanged(StepIntoSelectionActionDelegate.java:101)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java:204)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:271)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:282)</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:148)</Frame>
          <Frame depth="9">org.eclipse.jface.text.TextViewer.selectionChanged(TextViewer.java:1699)</Frame>
          <Frame depth="10">org.eclipse.jface.text.TextViewer.setSelectedRange(TextViewer.java:1577)</Frame>
          <Frame depth="11">org.eclipse.ui.texteditor.AbstractTextEditor.selectAndReveal(AbstractTextEditor.java:3743)</Frame>
          <Frame depth="12">org.eclipse.ui.texteditor.AbstractTextEditor.doSetSelection(AbstractTextEditor.java:1600)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetSelection(JavaEditor.java:1725)</Frame>
          <Frame depth="14">org.eclipse.ui.texteditor.AbstractTextEditor$SelectionProvider.setSelection(AbstractTextEditor.java:1052)</Frame>
          <Frame depth="15">org.eclipse.debug.internal.ui.views.launch.LaunchView.clearSourceSelection(LaunchView.java:738)</Frame>
          <Frame depth="16">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.clearSourceSelection(LaunchViewEventHandler.java:303)</Frame>
          <Frame depth="17">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleResumeEvent(LaunchViewEventHandler.java:134)</Frame>
          <Frame depth="18">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugEvents(LaunchViewEventHandler.java:92)</Frame>
          <Frame depth="19">org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run(AbstractDebugEventHandler.java:65)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:94)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1669)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1414)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)</Frame>
          <Frame depth="26">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="27">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="28">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="29">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="30">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="31">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338527387">
        <Exception>org.eclipse.debug.core.DebugException</Exception>
        <Reason>Thread not suspended, stack frame 
unavailable.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException(JDIDebugElement.java:277)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:235)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame(JDIStackFrame.java:924)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getLineNumber(JDIStackFrame.java:298)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.ui.actions.StepIntoSelectionActionDelegate.selectionChanged(StepIntoSelectionActionDelegate.java:101)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java:204)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:271)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:292)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.AbstractSelectionService$3.run(AbstractSelectionService.java:137)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:852)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.AbstractSelectionService.fireSelection(AbstractSelectionService.java:135)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.AbstractSelectionService$1.selectionChanged(AbstractSelectionService.java:50)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:148)</Frame>
          <Frame depth="14">org.eclipse.jface.text.TextViewer.selectionChanged(TextViewer.java:1699)</Frame>
          <Frame depth="15">org.eclipse.jface.text.TextViewer.setSelectedRange(TextViewer.java:1577)</Frame>
          <Frame depth="16">org.eclipse.ui.texteditor.AbstractTextEditor.selectAndReveal(AbstractTextEditor.java:3743)</Frame>
          <Frame depth="17">org.eclipse.ui.texteditor.AbstractTextEditor.doSetSelection(AbstractTextEditor.java:1600)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetSelection(JavaEditor.java:1725)</Frame>
          <Frame depth="19">org.eclipse.ui.texteditor.AbstractTextEditor$SelectionProvider.setSelection(AbstractTextEditor.java:1052)</Frame>
          <Frame depth="20">org.eclipse.debug.internal.ui.views.launch.LaunchView.clearSourceSelection(LaunchView.java:738)</Frame>
          <Frame depth="21">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.clearSourceSelection(LaunchViewEventHandler.java:303)</Frame>
          <Frame depth="22">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleResumeEvent(LaunchViewEventHandler.java:134)</Frame>
          <Frame depth="23">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugEvents(LaunchViewEventHandler.java:92)</Frame>
          <Frame depth="24">org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run(AbstractDebugEventHandler.java:65)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:94)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1669)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1414)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)</Frame>
          <Frame depth="31">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="32">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="34">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="35">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="36">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338527387">
        <Exception>org.eclipse.debug.core.DebugException</Exception>
        <Reason>Thread not suspended, stack frame 
unavailable.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException(JDIDebugElement.java:277)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed(JDIDebugElement.java:235)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame(JDIStackFrame.java:924)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getLineNumber(JDIStackFrame.java:298)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.ui.actions.StepIntoSelectionActionDelegate.selectionChanged(StepIntoSelectionActionDelegate.java:101)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java:204)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:271)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:282)</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:148)</Frame>
          <Frame depth="9">org.eclipse.jface.text.TextViewer.selectionChanged(TextViewer.java:1699)</Frame>
          <Frame depth="10">org.eclipse.jface.text.TextViewer.setSelectedRange(TextViewer.java:1577)</Frame>
          <Frame depth="11">org.eclipse.ui.texteditor.AbstractTextEditor.selectAndReveal(AbstractTextEditor.java:3743)</Frame>
          <Frame depth="12">org.eclipse.ui.texteditor.AbstractTextEditor.doSetSelection(AbstractTextEditor.java:1600)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetSelection(JavaEditor.java:1725)</Frame>
          <Frame depth="14">org.eclipse.ui.texteditor.AbstractTextEditor$SelectionProvider.setSelection(AbstractTextEditor.java:1052)</Frame>
          <Frame depth="15">org.eclipse.debug.internal.ui.views.launch.LaunchView.clearSourceSelection(LaunchView.java:738)</Frame>
          <Frame depth="16">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.clearSourceSelection(LaunchViewEventHandler.java:303)</Frame>
          <Frame depth="17">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleResumeEvent(LaunchViewEventHandler.java:134)</Frame>
          <Frame depth="18">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugEvents(LaunchViewEventHandler.java:92)</Frame>
          <Frame depth="19">org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run(AbstractDebugEventHandler.java:65)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:94)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1669)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1414)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)</Frame>
          <Frame depth="26">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="27">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="28">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="29">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="30">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="31">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338527387">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>369</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute(ArrayAccess.java:33)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute(Interpreter.java:44)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1$EvaluationRunnable.run(EvaluationThread.java:159)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation(JDIThread.java:559)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation(EvaluationThread.java:181)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2(EvaluationThread.java:143)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run(EvaluationThread.java:117)</Frame>
          <Frame depth="7">java.lang.Thread.run(Thread.java:536)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338527387">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>369</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute(ArrayAccess.java:33)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute(Interpreter.java:44)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1$EvaluationRunnable.run(EvaluationThread.java:159)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation(JDIThread.java:559)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation(EvaluationThread.java:181)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2(EvaluationThread.java:143)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run(EvaluationThread.java:117)</Frame>
          <Frame depth="7">java.lang.Thread.run(Thread.java:536)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338527387">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>369</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute(ArrayAccess.java:33)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute(Interpreter.java:44)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1$EvaluationRunnable.run(EvaluationThread.java:159)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation(JDIThread.java:559)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation(EvaluationThread.java:181)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2(EvaluationThread.java:143)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run(EvaluationThread.java:117)</Frame>
          <Frame depth="7">java.lang.Thread.run(Thread.java:536)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338527387">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>369</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute(ArrayAccess.java:33)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute(Interpreter.java:44)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1$EvaluationRunnable.run(EvaluationThread.java:159)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation(JDIThread.java:559)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation(EvaluationThread.java:181)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2(EvaluationThread.java:143)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run(EvaluationThread.java:117)</Frame>
          <Frame depth="7">java.lang.Thread.run(Thread.java:536)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338527387">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>1021</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute(ArrayAccess.java:33)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute(Interpreter.java:44)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1$EvaluationRunnable.run(EvaluationThread.java:159)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation(JDIThread.java:559)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation(EvaluationThread.java:181)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2(EvaluationThread.java:143)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run(EvaluationThread.java:117)</Frame>
          <Frame depth="7">java.lang.Thread.run(Thread.java:536)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338527387">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>1021</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute(ArrayAccess.java:33)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute(Interpreter.java:44)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1$EvaluationRunnable.run(EvaluationThread.java:159)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation(JDIThread.java:559)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation(EvaluationThread.java:181)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2(EvaluationThread.java:143)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run(EvaluationThread.java:117)</Frame>
          <Frame depth="7">java.lang.Thread.run(Thread.java:536)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I don't remember what I was doing at the time; the exceptions are from 
yesterday.


!SESSION jan 08, 2003 15:06:08.385 ---------------------------------------------
java.version=1.4.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=no_NO
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:C:/m4/
!ENTRY org.eclipse.jdt.debug.ui 4 150 jan 08, 2003 15:06:08.385
!MESSAGE Internal Error
!STACK 1
org.eclipse.debug.core.DebugException: Thread not suspended, stack frame 
unavailable.
	at 
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException
(JDIDebugElement.java:277)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed
(JDIDebugElement.java:235)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame
(JDIStackFrame.java:924)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getLineNumber
(JDIStackFrame.java:298)
	at 
org.eclipse.jdt.internal.debug.ui.actions.StepIntoSelectionActionDelegate.select
ionChanged(StepIntoSelectionActionDelegate.java:101)
	at org.eclipse.ui.internal.PluginAction.refreshEnablement
(PluginAction.java:204)
	at org.eclipse.ui.internal.PluginAction.selectionChanged
(PluginAction.java:271)
	at org.eclipse.ui.internal.PluginAction.selectionChanged
(PluginAction.java:282)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:148)
	at org.eclipse.jface.text.TextViewer.selectionChanged
(TextViewer.java:1699)
	at org.eclipse.jface.text.TextViewer.setSelectedRange
(TextViewer.java:1577)
	at org.eclipse.ui.texteditor.AbstractTextEditor.selectAndReveal
(AbstractTextEditor.java:3743)
	at org.eclipse.ui.texteditor.AbstractTextEditor.doSetSelection
(AbstractTextEditor.java:1600)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetSelection
(JavaEditor.java:1725)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor$SelectionProvider.setSelection
(AbstractTextEditor.java:1052)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.clearSourceSelection
(LaunchView.java:738)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.clearSourceSel
ection(LaunchViewEventHandler.java:303)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleResume
Event(LaunchViewEventHandler.java:134)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugE
vents(LaunchViewEventHandler.java:92)
	at org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run
(AbstractDebugEventHandler.java:65)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:94)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1669)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1414)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
!ENTRY org.eclipse.jdt.debug 4 100 jan 08, 2003 15:06:08.385
!MESSAGE Thread not suspended, stack frame unavailable.
!ENTRY org.eclipse.jdt.debug.ui 4 150 jan 08, 2003 15:06:08.395
!MESSAGE Internal Error
!STACK 1
org.eclipse.debug.core.DebugException: Thread not suspended, stack frame 
unavailable.
	at 
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException
(JDIDebugElement.java:277)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed
(JDIDebugElement.java:235)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame
(JDIStackFrame.java:924)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getLineNumber
(JDIStackFrame.java:298)
	at 
org.eclipse.jdt.internal.debug.ui.actions.StepIntoSelectionActionDelegate.select
ionChanged(StepIntoSelectionActionDelegate.java:101)
	at org.eclipse.ui.internal.PluginAction.refreshEnablement
(PluginAction.java:204)
	at org.eclipse.ui.internal.PluginAction.selectionChanged
(PluginAction.java:271)
	at org.eclipse.ui.internal.PluginAction.selectionChanged
(PluginAction.java:292)
	at org.eclipse.ui.internal.AbstractSelectionService$3.run
(AbstractSelectionService.java:137)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:852)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.ui.internal.AbstractSelectionService.fireSelection
(AbstractSelectionService.java:135)
	at org.eclipse.ui.internal.AbstractSelectionService$1.selectionChanged
(AbstractSelectionService.java:50)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:148)
	at org.eclipse.jface.text.TextViewer.selectionChanged
(TextViewer.java:1699)
	at org.eclipse.jface.text.TextViewer.setSelectedRange
(TextViewer.java:1577)
	at org.eclipse.ui.texteditor.AbstractTextEditor.selectAndReveal
(AbstractTextEditor.java:3743)
	at org.eclipse.ui.texteditor.AbstractTextEditor.doSetSelection
(AbstractTextEditor.java:1600)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetSelection
(JavaEditor.java:1725)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor$SelectionProvider.setSelection
(AbstractTextEditor.java:1052)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.clearSourceSelection
(LaunchView.java:738)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.clearSourceSel
ection(LaunchViewEventHandler.java:303)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleResume
Event(LaunchViewEventHandler.java:134)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugE
vents(LaunchViewEventHandler.java:92)
	at org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run
(AbstractDebugEventHandler.java:65)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:94)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1669)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1414)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
!ENTRY org.eclipse.jdt.debug 4 100 jan 08, 2003 15:06:08.395
!MESSAGE Thread not suspended, stack frame unavailable.
!ENTRY org.eclipse.jdt.debug.ui 4 150 jan 08, 2003 15:39:33.358
!MESSAGE Internal Error
!STACK 1
org.eclipse.debug.core.DebugException: Thread not suspended, stack frame 
unavailable.
	at 
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException
(JDIDebugElement.java:277)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed
(JDIDebugElement.java:235)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame
(JDIStackFrame.java:924)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getLineNumber
(JDIStackFrame.java:298)
	at 
org.eclipse.jdt.internal.debug.ui.actions.StepIntoSelectionActionDelegate.select
ionChanged(StepIntoSelectionActionDelegate.java:101)
	at org.eclipse.ui.internal.PluginAction.refreshEnablement
(PluginAction.java:204)
	at org.eclipse.ui.internal.PluginAction.selectionChanged
(PluginAction.java:271)
	at org.eclipse.ui.internal.PluginAction.selectionChanged
(PluginAction.java:282)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:148)
	at org.eclipse.jface.text.TextViewer.selectionChanged
(TextViewer.java:1699)
	at org.eclipse.jface.text.TextViewer.setSelectedRange
(TextViewer.java:1577)
	at org.eclipse.ui.texteditor.AbstractTextEditor.selectAndReveal
(AbstractTextEditor.java:3743)
	at org.eclipse.ui.texteditor.AbstractTextEditor.doSetSelection
(AbstractTextEditor.java:1600)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetSelection
(JavaEditor.java:1725)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor$SelectionProvider.setSelection
(AbstractTextEditor.java:1052)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.clearSourceSelection
(LaunchView.java:738)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.clearSourceSel
ection(LaunchViewEventHandler.java:303)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleResume
Event(LaunchViewEventHandler.java:134)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugE
vents(LaunchViewEventHandler.java:92)
	at org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run
(AbstractDebugEventHandler.java:65)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:94)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1669)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1414)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
!ENTRY org.eclipse.jdt.debug 4 100 jan 08, 2003 15:39:33.358
!MESSAGE Thread not suspended, stack frame unavailable.
!ENTRY org.eclipse.jdt.debug 4 120 jan 08, 2003 15:43:17.360
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 369
	at 
org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute
(ArrayAccess.java:33)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute
(Interpreter.java:44)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1
$EvaluationRunnable.run(EvaluationThread.java:159)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation
(JDIThread.java:559)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation
(EvaluationThread.java:181)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2
(EvaluationThread.java:143)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run
(EvaluationThread.java:117)
	at java.lang.Thread.run(Thread.java:536)
!ENTRY org.eclipse.jdt.debug 4 120 jan 08, 2003 15:44:07.522
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 369
	at 
org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute
(ArrayAccess.java:33)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute
(Interpreter.java:44)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1
$EvaluationRunnable.run(EvaluationThread.java:159)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation
(JDIThread.java:559)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation
(EvaluationThread.java:181)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2
(EvaluationThread.java:143)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run
(EvaluationThread.java:117)
	at java.lang.Thread.run(Thread.java:536)
!ENTRY org.eclipse.jdt.debug 4 120 jan 08, 2003 15:44:14.612
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 369
	at 
org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute
(ArrayAccess.java:33)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute
(Interpreter.java:44)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1
$EvaluationRunnable.run(EvaluationThread.java:159)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation
(JDIThread.java:559)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation
(EvaluationThread.java:181)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2
(EvaluationThread.java:143)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run
(EvaluationThread.java:117)
	at java.lang.Thread.run(Thread.java:536)
!ENTRY org.eclipse.jdt.debug 4 120 jan 08, 2003 15:44:25.588
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 369
	at 
org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute
(ArrayAccess.java:33)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute
(Interpreter.java:44)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1
$EvaluationRunnable.run(EvaluationThread.java:159)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation
(JDIThread.java:559)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation
(EvaluationThread.java:181)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2
(EvaluationThread.java:143)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run
(EvaluationThread.java:117)
	at java.lang.Thread.run(Thread.java:536)
!ENTRY org.eclipse.jdt.debug 4 120 jan 08, 2003 16:19:16.745
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 1021
	at 
org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute
(ArrayAccess.java:33)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute
(Interpreter.java:44)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1
$EvaluationRunnable.run(EvaluationThread.java:159)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation
(JDIThread.java:559)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation
(EvaluationThread.java:181)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2
(EvaluationThread.java:143)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run
(EvaluationThread.java:117)
	at java.lang.Thread.run(Thread.java:536)
!ENTRY org.eclipse.jdt.debug 4 120 jan 08, 2003 16:19:24.977
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 1021
	at 
org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute
(ArrayAccess.java:33)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute
(Interpreter.java:44)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1
$EvaluationRunnable.run(EvaluationThread.java:159)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation
(JDIThread.java:559)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation
(EvaluationThread.java:181)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2
(EvaluationThread.java:143)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run
(EvaluationThread.java:117)
	at java.lang.Thread.run(Thread.java:536)


*** This bug has been marked as a duplicate of 28935 ***</WithStack>
    <WithOutStack>I don't remember what I was doing at the time; the exceptions are from 
yesterday.


!SESSION jan 08, 2003 15:06:08.385 ---------------------------------------------
java.version=1.4.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=no_NO
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:C:/m4/
!ENTRY org.eclipse.jdt.debug.ui 4 150 jan 08, 2003 15:06:08.385
!MESSAGE Internal Error
!STACK 1
!ENTRY org.eclipse.jdt.debug 4 100 jan 08, 2003 15:06:08.385
!MESSAGE Thread not suspended, stack frame unavailable.
!ENTRY org.eclipse.jdt.debug.ui 4 150 jan 08, 2003 15:06:08.395
!MESSAGE Internal Error
!STACK 1
!ENTRY org.eclipse.jdt.debug 4 100 jan 08, 2003 15:06:08.395
!MESSAGE Thread not suspended, stack frame unavailable.
!ENTRY org.eclipse.jdt.debug.ui 4 150 jan 08, 2003 15:39:33.358
!MESSAGE Internal Error
!STACK 1
org.eclipse.debug.core.DebugException: Thread not suspended, stack frame 
unavailable.
	at 
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.throwDebugException
(JDIDebugElement.java:277)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIDebugElement.requestFailed
(JDIDebugElement.java:235)
	at 
org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame
(JDIStackFrame.java:924)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getLineNumber
(JDIStackFrame.java:298)
	at 
org.eclipse.jdt.internal.debug.ui.actions.StepIntoSelectionActionDelegate.select
ionChanged(StepIntoSelectionActionDelegate.java:101)
	at org.eclipse.ui.internal.PluginAction.refreshEnablement
(PluginAction.java:204)
	at org.eclipse.ui.internal.PluginAction.selectionChanged
(PluginAction.java:271)
	at org.eclipse.ui.internal.PluginAction.selectionChanged
(PluginAction.java:282)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged
(Viewer.java:148)
	at org.eclipse.jface.text.TextViewer.selectionChanged
(TextViewer.java:1699)
	at org.eclipse.jface.text.TextViewer.setSelectedRange
(TextViewer.java:1577)
	at org.eclipse.ui.texteditor.AbstractTextEditor.selectAndReveal
(AbstractTextEditor.java:3743)
	at org.eclipse.ui.texteditor.AbstractTextEditor.doSetSelection
(AbstractTextEditor.java:1600)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.doSetSelection
(JavaEditor.java:1725)
	at 
org.eclipse.ui.texteditor.AbstractTextEditor$SelectionProvider.setSelection
(AbstractTextEditor.java:1052)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.clearSourceSelection
(LaunchView.java:738)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.clearSourceSel
ection(LaunchViewEventHandler.java:303)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleResume
Event(LaunchViewEventHandler.java:134)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugE
vents(LaunchViewEventHandler.java:92)
	at org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run
(AbstractDebugEventHandler.java:65)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:94)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1669)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1414)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
!ENTRY org.eclipse.jdt.debug 4 100 jan 08, 2003 15:39:33.358
!MESSAGE Thread not suspended, stack frame unavailable.
!ENTRY org.eclipse.jdt.debug 4 120 jan 08, 2003 15:43:17.360
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
!ENTRY org.eclipse.jdt.debug 4 120 jan 08, 2003 15:44:07.522
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 369
	at 
org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute
(ArrayAccess.java:33)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute
(Interpreter.java:44)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1
$EvaluationRunnable.run(EvaluationThread.java:159)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation
(JDIThread.java:559)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation
(EvaluationThread.java:181)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2
(EvaluationThread.java:143)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run
(EvaluationThread.java:117)
	at java.lang.Thread.run(Thread.java:536)
!ENTRY org.eclipse.jdt.debug 4 120 jan 08, 2003 15:44:14.612
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 369
	at 
org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute
(ArrayAccess.java:33)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute
(Interpreter.java:44)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1
$EvaluationRunnable.run(EvaluationThread.java:159)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation
(JDIThread.java:559)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation
(EvaluationThread.java:181)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2
(EvaluationThread.java:143)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run
(EvaluationThread.java:117)
	at java.lang.Thread.run(Thread.java:536)
!ENTRY org.eclipse.jdt.debug 4 120 jan 08, 2003 15:44:25.588
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 369
	at 
org.eclipse.jdt.internal.debug.eval.ast.instructions.ArrayAccess.execute
(ArrayAccess.java:33)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.Interpreter.execute
(Interpreter.java:44)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1
$EvaluationRunnable.run(EvaluationThread.java:159)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.runEvaluation
(JDIThread.java:559)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.doEvaluation
(EvaluationThread.java:181)
	at 
org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread.access$2
(EvaluationThread.java:143)
	at org.eclipse.jdt.internal.debug.eval.ast.engine.EvaluationThread$1.run
(EvaluationThread.java:117)
	at java.lang.Thread.run(Thread.java:536)
!ENTRY org.eclipse.jdt.debug 4 120 jan 08, 2003 16:19:16.745
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0
!ENTRY org.eclipse.jdt.debug 4 120 jan 08, 2003 16:19:24.977
!MESSAGE Internal error logged from JDI Debug: 
!STACK 0



*** This bug has been marked as a duplicate of 28935 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29189" />
    <CreationDate amount="2003-01-09 02:32:00 -0500" />
    <DupId amount="28410" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Switch to Editor does not work in 2.1 M4</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437338527387">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>Argument not valid</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2166)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2110)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:370)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.TableItem.setImage(TableItem.java:595)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.TableItem.setImage(TableItem.java:616)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.CycleEditorAction.addItems(CycleEditorAction.java:72)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.CyclePartAction.openDialog(CyclePartAction.java:158)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.CyclePartAction.runWithEvent(CyclePartAction.java:124)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.WWinKeyBindingService.invoke(WWinKeyBindingService.java:139)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.WWinKeyBindingService.pressed(WWinKeyBindingService.java:120)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WWinKeyBindingService$6.widgetSelected(WWinKeyBindingService.java:376)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.AcceleratorMenu$2.handleEvent(AcceleratorMenu.java:55)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)</Frame>
          <Frame depth="18">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="19">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="20">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="21">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="22">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="23">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="25">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338527387">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>Argument not valid</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2166)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2110)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:370)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.TableItem.setImage(TableItem.java:595)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.TableItem.setImage(TableItem.java:616)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.EditorList.updateItem(EditorList.java:319)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.EditorList.updateItems(EditorList.java:409)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.EditorList.createControl(EditorList.java:182)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.EditorView.createPartControl(EditorView.java:34)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.PartPane$4.run(PartPane.java:135)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:852)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:133)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.ViewPane.createChildControl(ViewPane.java:202)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.PartPane.createControl(PartPane.java:177)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:181)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.PartSashContainer.replace(PartSashContainer.java:409)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.PerspectivePresentation.addPart(PerspectivePresentation.java:187)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.Perspective.showView(Perspective.java:1364)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:579)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.WorkbenchPage.access$8(WorkbenchPage.java:558)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2540)</Frame>
          <Frame depth="22">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:2537)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:2527)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.ShowViewMenu.showOther(ShowViewMenu.java:181)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.ShowViewMenu.access$2(ShowViewMenu.java:167)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.ShowViewMenu$2.run(ShowViewMenu.java:41)</Frame>
          <Frame depth="28">org.eclipse.jface.action.Action.runWithEvent(Action.java:769)</Frame>
          <Frame depth="29">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:411)</Frame>
          <Frame depth="30">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:365)</Frame>
          <Frame depth="31">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:356)</Frame>
          <Frame depth="32">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:48)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)</Frame>
          <Frame depth="39">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="40">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="41">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="42">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="43">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="44">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="46">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="47">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>After swithcing to Eclipse 2.1 M4, the switch-to-editor (Ctrl-Shift-W and Ctrl-
F6) has stopped working. In the log-file I find the following error:

!ENTRY org.eclipse.ui 4 4 jan 09, 2003 08:21:18.829
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 jan 09, 2003 08:21:18.839
!MESSAGE Argument not valid
!STACK 0
java.lang.IllegalArgumentException: Argument not valid
	at org.eclipse.swt.SWT.error(SWT.java:2166)
	at org.eclipse.swt.SWT.error(SWT.java:2110)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:370)
	at org.eclipse.swt.widgets.TableItem.setImage(TableItem.java:595)
	at org.eclipse.swt.widgets.TableItem.setImage(TableItem.java:616)
	at org.eclipse.ui.internal.CycleEditorAction.addItems
(CycleEditorAction.java:72)
	at org.eclipse.ui.internal.CyclePartAction.openDialog
(CyclePartAction.java:158)
	at org.eclipse.ui.internal.CyclePartAction.runWithEvent
(CyclePartAction.java:124)
	at org.eclipse.ui.internal.WWinKeyBindingService.invoke
(WWinKeyBindingService.java:139)
	at org.eclipse.ui.internal.WWinKeyBindingService.pressed
(WWinKeyBindingService.java:120)
	at org.eclipse.ui.internal.WWinKeyBindingService$6.widgetSelected
(WWinKeyBindingService.java:376)
	at org.eclipse.ui.internal.AcceleratorMenu$2.handleEvent
(AcceleratorMenu.java:55)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)

Further the new Editors view does not work. When I try to activate this view, I 
get the following error (in the log file):
!ENTRY org.eclipse.ui.workbench 4 2 jan 09, 2003 08:33:28.899
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.IllegalArgumentException: Argument not valid
	at org.eclipse.swt.SWT.error(SWT.java:2166)
	at org.eclipse.swt.SWT.error(SWT.java:2110)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:370)
	at org.eclipse.swt.widgets.TableItem.setImage(TableItem.java:595)
	at org.eclipse.swt.widgets.TableItem.setImage(TableItem.java:616)
	at org.eclipse.ui.internal.EditorList.updateItem(EditorList.java:319)
	at org.eclipse.ui.internal.EditorList.updateItems(EditorList.java:409)
	at org.eclipse.ui.internal.EditorList.createControl(EditorList.java:182)
	at org.eclipse.ui.internal.EditorView.createPartControl
(EditorView.java:34)
	at org.eclipse.ui.internal.PartPane$4.run(PartPane.java:135)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:852)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.ui.internal.PartPane.createChildControl
(PartPane.java:133)
	at org.eclipse.ui.internal.ViewPane.createChildControl
(ViewPane.java:202)
	at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:177)
	at org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:181)
	at org.eclipse.ui.internal.PartSashContainer.replace
(PartSashContainer.java:409)
	at org.eclipse.ui.internal.PerspectivePresentation.addPart
(PerspectivePresentation.java:187)
	at org.eclipse.ui.internal.Perspective.showView(Perspective.java:1364)
	at org.eclipse.ui.internal.WorkbenchPage.busyShowView
(WorkbenchPage.java:579)
	at org.eclipse.ui.internal.WorkbenchPage.access$8
(WorkbenchPage.java:558)
	at org.eclipse.ui.internal.WorkbenchPage$12.run(WorkbenchPage.java:2540)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)
	at org.eclipse.ui.internal.WorkbenchPage.showView
(WorkbenchPage.java:2537)
	at org.eclipse.ui.internal.WorkbenchPage.showView
(WorkbenchPage.java:2527)
	at org.eclipse.ui.internal.ShowViewMenu.showOther(ShowViewMenu.java:181)
	at org.eclipse.ui.internal.ShowViewMenu.access$2(ShowViewMenu.java:167)
	at org.eclipse.ui.internal.ShowViewMenu$2.run(ShowViewMenu.java:41)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:769)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:411)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:365)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:356)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:48)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
I am unable to reproduce this problem.  Are there steps we can follow to 
reproduce?
Sorry, I am not able to reproduce it either.... 
The problem was consequent until I flushed my workspace and created a new one, 
since then it has been working OK.

It seems like my workspace somehow had entered a state where this problem 
persisted. 
linking to existing open bug.


*** This bug has been marked as a duplicate of 28410 ***</WithStack>
    <WithOutStack>After swithcing to Eclipse 2.1 M4, the switch-to-editor (Ctrl-Shift-W and Ctrl-
F6) has stopped working. In the log-file I find the following error:

!ENTRY org.eclipse.ui 4 4 jan 09, 2003 08:21:18.829
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 jan 09, 2003 08:21:18.839
!MESSAGE Argument not valid
!STACK 0

Further the new Editors view does not work. When I try to activate this view, I 
get the following error (in the log file):
!ENTRY org.eclipse.ui.workbench 4 2 jan 09, 2003 08:33:28.899
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.ui.workbench".
!STACK 0

I am unable to reproduce this problem.  Are there steps we can follow to 
reproduce?
Sorry, I am not able to reproduce it either.... 
The problem was consequent until I flushed my workspace and created a new one, 
since then it has been working OK.

It seems like my workspace somehow had entered a state where this problem 
persisted. 
linking to existing open bug.


*** This bug has been marked as a duplicate of 28410 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29190" />
    <CreationDate amount="2003-01-09 03:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add Javadoc Location for Libs setting in Project setting [build path]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1. Package Explorer &gt; Filters : do not hide referenced libraries</Line>
          <Line>2. set Javadoc Location in Library node's Properties setting</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The only way (?) to set the Javadoc location for a Library of a Project is to 
do:

1. Package Explorer &gt; Filters : do not hide referenced libraries
2. set Javadoc Location in Library node's Properties setting

there you can also attach the source for the library.


In Package Explorer : Project : Properties : JavaBuildPath : Libraries, you can 
attach a source for a library but you can't set the javadoc location for the 
library. Several people already asked me if this is possible and how this is 
done, and most of them instandly said, that this should (also) be configurable 
in the project settings:javabuildpath:libraries.

It's kind of logic, isn't it!
Martin, is there are reason why this is not possible.
this is possible with the new build path dialog (in M4)</WithStack>
    <WithOutStack>The only way (?) to set the Javadoc location for a Library of a Project is to 
do:

1. Package Explorer &gt; Filters : do not hide referenced libraries
2. set Javadoc Location in Library node's Properties setting

there you can also attach the source for the library.


In Package Explorer : Project : Properties : JavaBuildPath : Libraries, you can 
attach a source for a library but you can't set the javadoc location for the 
library. Several people already asked me if this is possible and how this is 
done, and most of them instandly said, that this should (also) be configurable 
in the project settings:javabuildpath:libraries.

It's kind of logic, isn't it!
Martin, is there are reason why this is not possible.
this is possible with the new build path dialog (in M4)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29191" />
    <CreationDate amount="2003-01-09 04:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Tree - no gray check boxes on MAC (carbon2)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1. Extends functionality of "Tree´s" "itemDataProc" so that it sets</Line>
          <Line>the grayed property correctly(?) and sends corresponding events.</Line>
          <Line>2. Adjusts "Tree´s" "itemNotification" due to strange behaviour when</Line>
          <Line>the twistie or the checkbox was doubleClicked.</Line>
          <Line>-&gt; The behavior now is not to send a "SWT.DefaultSelection" event</Line>
          <Line>after twistie or checkbox have been hit twice.</Line>
          <Line>Created attachment 2935</Line>
          <Line>patch for TreeItem.java in carbon2</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The "grayed" property in native Tree/TreeItem (carbon2) doesn´t work correctly.

In fact the methods in TreeItem are empty and no code is in Tree´s itemDataProc to 
handle the grayed property.
Created attachment 2933
patch for OS.java: New constants

Introduces three constants into OS.java that didn´t exist before
Created attachment 2934
patch for Tree.java in arbon2

This patch:
1. Extends functionality of "Tree´s" "itemDataProc" so that it sets
the grayed property correctly(?) and sends corresponding events.
2. Adjusts "Tree´s" "itemNotification" due to strange behaviour when
the twistie or the checkbox was doubleClicked.
-&gt; The behavior now is not to send a "SWT.DefaultSelection" event
after twistie or checkbox have been hit twice.
Created attachment 2935
patch for TreeItem.java in carbon2

This patch adds the boolean field "grayed" to "TreeItem" and implements the
methods "get/setGrayed"
Copied mail from Steve Nothover regarding the patches:
Ok Martin, I've finally had a chance to look at your patches.  You'll need to
create a bugzilla
problem report for each item and put the patches in there.  You can paste my
comments in this
email in the reports but don't bother discussing it here.  The discussion
belongs in the bug
report, especially if we decide not to fix the problem for some reason.

Looking at the "grayed" check box code I noticed that you are using
kThemeButtonMixed.
There are several problems with this.  First of all, being "grayed" is
independent of being
checked or unchecked.  You can be both "grayed and checked" and "grayed and
unchecked".
It seems to me that kThemeButtonMixed is intended to show a tri-state (which is
what you have
implemented) and this is wrong.  Clicking on a check box toggles only the check
state, not
the grayed state.  I have a hack that does the right SWT thing but I think it
may be the wrong
UI metaphore.  For example, clicking on an kThemeButtonMixed button that is
unchecked
goes to kThemeButtonOff.  Clicking on a kThemeButtonMixed button that is checked
goes
to kThemeButtonOn.  This seems to be the wrong Mac metaphore.

Looking at the "strange behavior when the twiste or checkbox was doubleClicked"
code,
there's a chance that we might want to work around this problem but we can
discuss this
and everything else in the bugzilla reports. 
Hi Steve,
I´m not sure about the metaphor myself.
So I did a search in the Apple´s "Aqua Human Interface Guidelines".
There they say:
"When a user selection comprises more than one state, use a dash in the
appropriate checkboxes. (This symbol is consistent with the mixed-state
indicator in menus, as described in “Using Symbols in Menus”.)"

in "Using Symbols in Menus": 
"Use dashes to indicate that an attribute applies to only part of the selection.
For example, if selected text has two styles applied to it, put a dash next to
each style name. When it’s appropriate, you can combine checkmarks and dashes in
the same menu.

Note: Include a menu command, such as Plain, for removing all formatting from
mixed-state text."

Having read this I´d say, that your hack for correct SWT beehaviour is ok with
the guidelines.
Don´t you think so? 
We should ask Andre.  He's the authority.  Andre?
I agree, the hack is OK.
Well, then how to proceed?
I'm still thinking but will release my code soon or decide not to.  The "twiste 
hit twice" code clearly doesn't belong in this PR.  It has nothing to do with 
gray check boxes.  You could enter another PR for it.
Fixed &gt; 20030121.

NOTE:  When Tree is finished, the same strategy will be used for Table.
Also, The "twiste hit twice" code was not used.  This requires another bug 
report as the problem is unrelated.
Created a new bug report for the "twistie hit twice" issue: 30668</WithStack>
    <WithOutStack>The "grayed" property in native Tree/TreeItem (carbon2) doesn´t work correctly.

In fact the methods in TreeItem are empty and no code is in Tree´s itemDataProc to 
handle the grayed property.
Created attachment 2933
patch for OS.java: New constants

Introduces three constants into OS.java that didn´t exist before
Created attachment 2934
patch for Tree.java in arbon2

This patch:
1. Extends functionality of "Tree´s" "itemDataProc" so that it sets
the grayed property correctly(?) and sends corresponding events.
2. Adjusts "Tree´s" "itemNotification" due to strange behaviour when
the twistie or the checkbox was doubleClicked.
-&gt; The behavior now is not to send a "SWT.DefaultSelection" event
after twistie or checkbox have been hit twice.
Created attachment 2935
patch for TreeItem.java in carbon2

This patch adds the boolean field "grayed" to "TreeItem" and implements the
methods "get/setGrayed"
Copied mail from Steve Nothover regarding the patches:
Ok Martin, I've finally had a chance to look at your patches.  You'll need to
create a bugzilla
problem report for each item and put the patches in there.  You can paste my
comments in this
email in the reports but don't bother discussing it here.  The discussion
belongs in the bug
report, especially if we decide not to fix the problem for some reason.

Looking at the "grayed" check box code I noticed that you are using
kThemeButtonMixed.
There are several problems with this.  First of all, being "grayed" is
independent of being
checked or unchecked.  You can be both "grayed and checked" and "grayed and
unchecked".
It seems to me that kThemeButtonMixed is intended to show a tri-state (which is
what you have
implemented) and this is wrong.  Clicking on a check box toggles only the check
state, not
the grayed state.  I have a hack that does the right SWT thing but I think it
may be the wrong
UI metaphore.  For example, clicking on an kThemeButtonMixed button that is
unchecked
goes to kThemeButtonOff.  Clicking on a kThemeButtonMixed button that is checked
goes
to kThemeButtonOn.  This seems to be the wrong Mac metaphore.

Looking at the "strange behavior when the twiste or checkbox was doubleClicked"
code,
there's a chance that we might want to work around this problem but we can
discuss this
and everything else in the bugzilla reports. 
Hi Steve,
I´m not sure about the metaphor myself.
So I did a search in the Apple´s "Aqua Human Interface Guidelines".
There they say:
"When a user selection comprises more than one state, use a dash in the
appropriate checkboxes. (This symbol is consistent with the mixed-state
indicator in menus, as described in “Using Symbols in Menus”.)"

in "Using Symbols in Menus": 
"Use dashes to indicate that an attribute applies to only part of the selection.
For example, if selected text has two styles applied to it, put a dash next to
each style name. When it’s appropriate, you can combine checkmarks and dashes in
the same menu.

Note: Include a menu command, such as Plain, for removing all formatting from
mixed-state text."

Having read this I´d say, that your hack for correct SWT beehaviour is ok with
the guidelines.
Don´t you think so? 
We should ask Andre.  He's the authority.  Andre?
I agree, the hack is OK.
Well, then how to proceed?
I'm still thinking but will release my code soon or decide not to.  The "twiste 
hit twice" code clearly doesn't belong in this PR.  It has nothing to do with 
gray check boxes.  You could enter another PR for it.
Fixed &gt; 20030121.

NOTE:  When Tree is finished, the same strategy will be used for Table.
Also, The "twiste hit twice" code was not used.  This requires another bug 
report as the problem is unrelated.
Created a new bug report for the "twistie hit twice" issue: 30668</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29192" />
    <CreationDate amount="2003-01-09 04:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[Decorators] Deadlock from CVS decorator</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>After a build... Eclipse in a deadlock.

The CVS decorator running in the decorator thread got stuck with the UI thread.

The reason why we couldn't use the light weight decorator for the error ticks  
was the threading problem. I doubt that decoration in background really can be 
done.

---------------------- Exception Information ---------------------------
No Exception
 
---------------------- System Properties -------------------------------
J2RE 1.3.1 IBM Windows 32 build cn131-20020403
d:\devel\ibm_jdk1.3.1_SR1\jre\bin\java -verify -cp startup.jar 
org.eclipse.core.launcher.Main -application org.eclipse.ui.workbench -ws win32 -
data D:\workspaces\eclipse-sh2\plugins
Java Home Dir:	d:\devel\ibm_jdk1.3.1_SR1\jre
Java DLL Dir:	d:\devel\ibm_jdk1.3.1_SR1\jre\bin
Sys Classpath:	d:\devel\ibm_jdk1.3.1_SR1
\jre\lib\rt.jar;d:\devel\ibm_jdk1.3.1_SR1
\jre\lib\i18n.jar;d:\devel\ibm_jdk1.3.1_SR1\jre\classes
UserArgs:
	-Djava.class.path="L¯^R\QTJava.zip"
	-Xverify:all
	-Djava.class.path=startup.jar
	-Dinvokedviajava
---------------------- XM component Dump Routine  ----------------------
Full thread dump Classic VM (J2RE 1.3.1 IBM Windows 32 build cn131-20020403, 
native threads):
    "ModalContext" (TID:0x3EBE458, sys_thread_t:0x145D6AE0, state:CW, native 
ID:0x140) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock.acquire
(ReentrantLock.java(Compiled Code))
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.beginOperation
(EclipseSynchronizer.java(Compiled Code))
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync
(EclipseSynchronizer.java(Compiled Code))
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isCVSFolder
(EclipseFolder.java(Compiled Code))
	at 
org.eclipse.team.internal.ccvs.core.util.AddDeleteMoveListener.resourceChanged
(AddDeleteMoveListener.java:215)
	at org.eclipse.core.internal.events.NotificationManager$1.run
(NotificationManager.java(Compiled Code))
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.events.NotificationManager.notify
(NotificationManager.java(Compiled Code))
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges
(NotificationManager.java:67)
	at org.eclipse.core.internal.resources.Workspace.broadcastChanges
(Workspace.java:153)
	at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java(Compiled Code))
	at org.eclipse.core.internal.resources.Workspace.build
(Workspace.java:176)
	at org.eclipse.ui.actions.GlobalBuildAction$1.run
(GlobalBuildAction.java:156)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:95)
    "Snapshot" (TID:0x3EBE4B8, sys_thread_t:0x14895AE0, state:CW, native 
ID:0x750) prio=5
	at java.lang.Object.wait(Native Method)
	at org.eclipse.core.internal.resources.DelayedSnapshotRunnable.run
(DelayedSnapshotRunnable.java:38)
	at java.lang.Thread.run(Thread.java:512)
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x8821B18, 
sys_thread_t:0x144DABD0, state:CW, native ID:0x530) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x4FAE208, 
sys_thread_t:0x14878F30, state:CW, native ID:0x624) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x4FAE700, 
sys_thread_t:0x147F5658, state:CW, native ID:0x460) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x7868898, 
sys_thread_t:0x1489D990, state:CW, native ID:0x51C) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x8A49750, 
sys_thread_t:0x14892160, state:CW, native ID:0x5B4) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "ServerConnection" (TID:0x6BFF6F8, sys_thread_t:0x1496A808, state:R, native 
ID:0x798) prio=5
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:446)
	at java.net.ServerSocket.implAccept(ServerSocket.java:264)
	at java.net.ServerSocket.accept(ServerSocket.java(Compiled Code))
	at 
org.eclipse.jdt.internal.junit.ui.RemoteTestRunnerClient$ServerConnection.run
(RemoteTestRunnerClient.java(Compiled Code))
    "Debug async queue" (TID:0x6EF5660, sys_thread_t:0x146B56C0, state:CW, 
native ID:0x660) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.debug.core.DebugPlugin$AsynchRunner.run(DebugPlugin.java
(Compiled Code))
	at java.lang.Thread.run(Thread.java:512)
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x5BAA180, 
sys_thread_t:0x14645FD0, state:CW, native ID:0x1A0) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "Decoration" (TID:0x1ECF250, sys_thread_t:0x12E69390, state:CW, native 
ID:0x7A0) prio=1
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.core.internal.utils.Semaphore.acquire(Semaphore.java:24)
	at org.eclipse.core.resources.WorkspaceLock.acquire(WorkspaceLock.java
(Compiled Code))
	at org.eclipse.ui.internal.UIWorkspaceLock.acquire(UIWorkspaceLock.java
(Compiled Code))
	at org.eclipse.core.internal.resources.WorkManager.checkIn
(WorkManager.java(Compiled Code))
	at org.eclipse.core.internal.resources.Workspace.prepareOperation
(Workspace.java(Compiled Code))
	at org.eclipse.core.internal.resources.Synchronizer.setSyncInfo
(Synchronizer.java:209)
	at 
org.eclipse.team.internal.ccvs.core.resources.SynchronizerSyncInfoCache.setCache
dSyncBytes(SynchronizerSyncInfoCache.java:268)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.cacheResourceS
yncForChildren(EclipseSynchronizer.java(Compiled Code))
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.members
(EclipseSynchronizer.java:350)
	at org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.members
(EclipseFolder.java:59)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:453)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:458)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:458)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:458)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:458)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:458)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:458)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator$1.run
(CVSLightweightDecorator.java:101)
	at org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run
(EclipseSynchronizer.java:1128)
	at org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.run
(EclipseFolder.java:342)
	at org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.isDirty
(CVSLightweightDecorator.java:97)
	at org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.isDirty
(CVSLightweightDecorator.java:118)
	at org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.decorate
(CVSLightweightDecorator.java:188)
	at 
org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnab
le.run(LightweightDecoratorManager.java(Compiled Code))
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at 
org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate
(LightweightDecoratorManager.java(Compiled Code))
	at 
org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations
(LightweightDecoratorManager.java(Compiled Code))
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.run
(DecorationScheduler.java(Compiled Code))
	at java.lang.Thread.run(Thread.java:512)
    "Java indexing" (TID:0x900360, sys_thread_t:0x1284FD68, state:CW, native 
ID:0x2B0) prio=4
	at java.lang.Thread.sleep(Native Method)
	at org.eclipse.jdt.internal.core.search.processing.JobManager.run
(JobManager.java(Compiled Code))
	at java.lang.Thread.run(Thread.java:512)
    "Finalizer" (TID:0x901900, sys_thread_t:0x899728, state:CW, native 
ID:0x508) prio=8
	at java.lang.Object.wait(Native Method)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:133)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java(Compiled 
Code))
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java(Compiled 
Code))
    "Reference Handler" (TID:0x901948, sys_thread_t:0x87A008, state:CW, native 
ID:0x480) prio=10
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java(Compiled 
Code))
    "Signal dispatcher" (TID:0x901990, sys_thread_t:0x8791E8, state:R, native 
ID:0x698) prio=5
    "main" (TID:0x9019D8, sys_thread_t:0x23E860, state:R, native ID:0x330) 
prio=5
	at org.eclipse.swt.internal.win32.OS.WaitMessage(Native Method)
	at org.eclipse.swt.widgets.Display.sleep(Display.java(Compiled Code))
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.block
(ModalContext.java(Compiled Code))
*** Exception 0 received during dump routine processing, section truncated.
---------------------- LK component Dump Routine  ----------------------
Monitor pool info:
  Initial monitor count: 32
  Minimum number of free monitors before expansion: 5
  Pool will next be expanded by: 921
  Current total number of monitors: 1842
  Current number of free monitors: 1732
Monitor Pool Dump (flat &amp; inflated object-monitors):
  sys_mon_t:0x0023DBE8 infl_mon_t: 0x0023D7D8:
    java.lang.ref.Reference$Lock@912570/912578: &lt;unowned&gt;
	Waiting to be notified:
	    "Reference Handler" (0x87A008)
  sys_mon_t:0x0023DC38 infl_mon_t: 0x0023D818:
    java.lang.ref.ReferenceQueue$Lock@912180/912188: &lt;unowned&gt;
	Waiting to be notified:
	    "Finalizer" (0x899728)
  sys_mon_t:0x0023DC60 infl_mon_t: 0x0023D838:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@5C37E88/5C37E90: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x14645FD0)
  sys_mon_t:0x0023DDA0 infl_mon_t: 0x0023D938:
    org.eclipse.debug.core.DebugPlugin$AsynchRunner@6EF4F80/6EF4F88: &lt;unowned&gt;
	Waiting to be notified:
	    "Debug async queue" (0x146B56C0)
  sys_mon_t:0x0023DE18 infl_mon_t: 0x0023D998:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@8ADA6C0/8ADA6C8: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x1489D990)
  sys_mon_t:0x14817FE0 infl_mon_t: 0x1478A6A8:
    org.eclipse.core.internal.utils.Semaphore@93D9A18/93D9A20: &lt;unowned&gt;
	Waiting to be notified:
	    "Decoration" (0x12E69390)
  sys_mon_t:0x14830B78 infl_mon_t: 0x1484D188:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@39428D0/39428D8: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x14892160)
  sys_mon_t:0x1489A698 infl_mon_t: 0x1487F718:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@5B3D188/5B3D190: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x147F5658)
  sys_mon_t:0x148D5720 infl_mon_t: 0x14937870:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@A49AAC0/A49AAC8: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x144DABD0)
  sys_mon_t:0x148D5C20 infl_mon_t: 0x14937C70:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@74FD770/74FD778: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x14878F30)
  sys_mon_t:0x148F6EA0 infl_mon_t: 0x14912258:
    org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock@14A9AE8/14A9AF0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "ModalContext" (0x145D6AE0)
  sys_mon_t:0x14992CA8 infl_mon_t: 0x149123F8:
    
org.eclipse.core.internal.resources.DelayedSnapshotRunnable@7D96D98/7D96DA0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "Snapshot" (0x14895AE0)
JVM System Monitor Dump (registered monitors):
    Evacuation Region lock: &lt;unowned&gt;
    Heap Promotion lock: &lt;unowned&gt;
    Sleep lock: &lt;unowned&gt;
	Waiting to be notified:
	    "Java indexing" (0x1284FD68)
    Method trace lock: &lt;unowned&gt;
    Heap lock: owner "Signal dispatcher" (0x8791E8), entry count 1
    Monitor Cache lock: owner "Signal dispatcher" (0x8791E8), entry count 1
    JNI Pinning lock: &lt;unowned&gt;
    JNI Global Reference lock: &lt;unowned&gt;
    Classloader lock: &lt;unowned&gt;
    Binclass lock: &lt;unowned&gt;
    Monitor Registry lock: owner "Signal dispatcher" (0x8791E8), entry count 1
    Thread queue lock: owner "Signal dispatcher" (0x8791E8), entry count 1
Thread identifiers (as used in flat monitors):
    ident 0x12 "ModalContext" (0x145D6AE0) ee 0x145D68D0
    ident 0x1E "Snapshot" (0x14895AE0) ee 0x148958D0
    ident 0x10 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x144DABD0) 
ee 0x144DA9C0
    ident 0x1B "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x14878F30) 
ee 0x14878D20
    ident 0x17 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x147F5658) 
ee 0x147F5448
    ident 0x08 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x1489D990) 
ee 0x1489D780
    ident 0x1F "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x14892160) 
ee 0x14891F50
    ident 0x1A "ServerConnection" (0x1496A808) ee 0x1496A5F8
    ident 0x16 "Debug async queue" (0x146B56C0) ee 0x146B54B0
    ident 0x14 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x14645FD0) 
ee 0x14645DC0
    ident 0x09 "Decoration" (0x12E69390) ee 0x12E69180
    ident 0x07 "Java indexing" (0x1284FD68) ee 0x1284FB58
    ident 0x05 "Finalizer" (0x899728) ee 0x00899518
    ident 0x04 "Reference Handler" (0x87A008) ee 0x00879DF8
    ident 0x03 "Signal dispatcher" (0x8791E8) ee 0x00878FD8
    ident 0x02 "main" (0x23E860) ee 0x0023E650
Java Object Monitor Dump (flat &amp; inflated object-monitors):
    java.lang.ref.ReferenceQueue$Lock@912180/912188
        locknflags 80000400 Monitor inflated infl_mon 0x0023D818
    java.lang.ref.Reference$Lock@912570/912578
        locknflags 80000200 Monitor inflated infl_mon 0x0023D7D8
    org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock@14A9AE8/14A9AF0
        locknflags 8003C700 Monitor inflated infl_mon 0x14912258
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@39428D0/39428D8
        locknflags 80008B00 Monitor inflated infl_mon 0x1484D188
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@5B3D188/5B3D190
        locknflags 8001CE00 Monitor inflated infl_mon 0x1487F718
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@5C37E88/5C37E90
        locknflags 80000500 Monitor inflated infl_mon 0x0023D838
    org.eclipse.debug.core.DebugPlugin$AsynchRunner@6EF4F80/6EF4F88
        locknflags 80000D00 Monitor inflated infl_mon 0x0023D938
    java.net.PlainSocketImpl@73010A0/73010A8
        locknflags 001A0000 Flat locked by thread ident 0x1A, entry count 1
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@74FD770/74FD778
        locknflags 80033300 Monitor inflated infl_mon 0x14937C70
    org.eclipse.core.internal.resources.DelayedSnapshotRunnable@7D96D98/7D96DA0
        locknflags 8003D400 Monitor inflated infl_mon 0x149123F8
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@8ADA6C0/8ADA6C8
        locknflags 80001000 Monitor inflated infl_mon 0x0023D998
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@A49AAC0/A49AAC8
        locknflags 80031300 Monitor inflated infl_mon 0x14937870
---------------------- END OF DUMP -------------------------------------
The issue here appears to be lock ordering. Thanks for the traces Martin they 
were a huge help.

In both Threads the CVS component is trying to do work.

In the builder Thread it is trying to acquired the CVS lock but likely already 
has the Workspace lock which it appears to be waiting for.

In the decorator thread it it is trying to acquire the workspace lock and it 
has the CVS lock.

We need to have a definate ordering of locks. I will talk to Core and Team for 
more insight.
Fixed as a result of fixes to Bug 29212
Marking closed</WithStack>
    <WithOutStack>After a build... Eclipse in a deadlock.

The CVS decorator running in the decorator thread got stuck with the UI thread.

The reason why we couldn't use the light weight decorator for the error ticks  
was the threading problem. I doubt that decoration in background really can be 
done.

---------------------- Exception Information ---------------------------
No Exception
 
---------------------- System Properties -------------------------------
J2RE 1.3.1 IBM Windows 32 build cn131-20020403
d:\devel\ibm_jdk1.3.1_SR1\jre\bin\java -verify -cp startup.jar 
org.eclipse.core.launcher.Main -application org.eclipse.ui.workbench -ws win32 -
data D:\workspaces\eclipse-sh2\plugins
Java Home Dir:	d:\devel\ibm_jdk1.3.1_SR1\jre
Java DLL Dir:	d:\devel\ibm_jdk1.3.1_SR1\jre\bin
Sys Classpath:	d:\devel\ibm_jdk1.3.1_SR1
\jre\lib\rt.jar;d:\devel\ibm_jdk1.3.1_SR1
\jre\lib\i18n.jar;d:\devel\ibm_jdk1.3.1_SR1\jre\classes
UserArgs:
	-Djava.class.path="L¯^R\QTJava.zip"
	-Xverify:all
	-Djava.class.path=startup.jar
	-Dinvokedviajava
---------------------- XM component Dump Routine  ----------------------
Full thread dump Classic VM (J2RE 1.3.1 IBM Windows 32 build cn131-20020403, 
native threads):
    "ModalContext" (TID:0x3EBE458, sys_thread_t:0x145D6AE0, state:CW, native 
ID:0x140) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock.acquire
(ReentrantLock.java(Compiled Code))
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.beginOperation
(EclipseSynchronizer.java(Compiled Code))
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync
(EclipseSynchronizer.java(Compiled Code))
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isCVSFolder
(EclipseFolder.java(Compiled Code))
	at 
org.eclipse.team.internal.ccvs.core.util.AddDeleteMoveListener.resourceChanged
(AddDeleteMoveListener.java:215)
	at org.eclipse.core.internal.events.NotificationManager$1.run
(NotificationManager.java(Compiled Code))
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.events.NotificationManager.notify
(NotificationManager.java(Compiled Code))
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges
(NotificationManager.java:67)
	at org.eclipse.core.internal.resources.Workspace.broadcastChanges
(Workspace.java:153)
	at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java(Compiled Code))
	at org.eclipse.core.internal.resources.Workspace.build
(Workspace.java:176)
	at org.eclipse.ui.actions.GlobalBuildAction$1.run
(GlobalBuildAction.java:156)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:95)
    "Snapshot" (TID:0x3EBE4B8, sys_thread_t:0x14895AE0, state:CW, native 
ID:0x750) prio=5
	at java.lang.Object.wait(Native Method)
	at org.eclipse.core.internal.resources.DelayedSnapshotRunnable.run
(DelayedSnapshotRunnable.java:38)
	at java.lang.Thread.run(Thread.java:512)
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x8821B18, 
sys_thread_t:0x144DABD0, state:CW, native ID:0x530) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x4FAE208, 
sys_thread_t:0x14878F30, state:CW, native ID:0x624) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x4FAE700, 
sys_thread_t:0x147F5658, state:CW, native ID:0x460) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x7868898, 
sys_thread_t:0x1489D990, state:CW, native ID:0x51C) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x8A49750, 
sys_thread_t:0x14892160, state:CW, native ID:0x5B4) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "ServerConnection" (TID:0x6BFF6F8, sys_thread_t:0x1496A808, state:R, native 
ID:0x798) prio=5
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:446)
	at java.net.ServerSocket.implAccept(ServerSocket.java:264)
	at java.net.ServerSocket.accept(ServerSocket.java(Compiled Code))
	at 
org.eclipse.jdt.internal.junit.ui.RemoteTestRunnerClient$ServerConnection.run
(RemoteTestRunnerClient.java(Compiled Code))
    "Debug async queue" (TID:0x6EF5660, sys_thread_t:0x146B56C0, state:CW, 
native ID:0x660) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.debug.core.DebugPlugin$AsynchRunner.run(DebugPlugin.java
(Compiled Code))
	at java.lang.Thread.run(Thread.java:512)
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x5BAA180, 
sys_thread_t:0x14645FD0, state:CW, native ID:0x1A0) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "Decoration" (TID:0x1ECF250, sys_thread_t:0x12E69390, state:CW, native 
ID:0x7A0) prio=1
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.core.internal.utils.Semaphore.acquire(Semaphore.java:24)
	at org.eclipse.core.resources.WorkspaceLock.acquire(WorkspaceLock.java
(Compiled Code))
	at org.eclipse.ui.internal.UIWorkspaceLock.acquire(UIWorkspaceLock.java
(Compiled Code))
	at org.eclipse.core.internal.resources.WorkManager.checkIn
(WorkManager.java(Compiled Code))
	at org.eclipse.core.internal.resources.Workspace.prepareOperation
(Workspace.java(Compiled Code))
	at org.eclipse.core.internal.resources.Synchronizer.setSyncInfo
(Synchronizer.java:209)
	at 
org.eclipse.team.internal.ccvs.core.resources.SynchronizerSyncInfoCache.setCache
dSyncBytes(SynchronizerSyncInfoCache.java:268)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.cacheResourceS
yncForChildren(EclipseSynchronizer.java(Compiled Code))
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.members
(EclipseSynchronizer.java:350)
	at org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.members
(EclipseFolder.java:59)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:453)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:458)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:458)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:458)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:458)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:458)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.determineDirtyCount
(EclipseFolder.java:458)
	at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.isModified
(EclipseFolder.java:416)
	at org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator$1.run
(CVSLightweightDecorator.java:101)
	at org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run
(EclipseSynchronizer.java:1128)
	at org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.run
(EclipseFolder.java:342)
	at org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.isDirty
(CVSLightweightDecorator.java:97)
	at org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.isDirty
(CVSLightweightDecorator.java:118)
	at org.eclipse.team.internal.ccvs.ui.CVSLightweightDecorator.decorate
(CVSLightweightDecorator.java:188)
	at 
org.eclipse.ui.internal.decorators.LightweightDecoratorManager$LightweightRunnab
le.run(LightweightDecoratorManager.java(Compiled Code))
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at 
org.eclipse.ui.internal.decorators.LightweightDecoratorManager.decorate
(LightweightDecoratorManager.java(Compiled Code))
	at 
org.eclipse.ui.internal.decorators.LightweightDecoratorManager.getDecorations
(LightweightDecoratorManager.java(Compiled Code))
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.run
(DecorationScheduler.java(Compiled Code))
	at java.lang.Thread.run(Thread.java:512)
    "Java indexing" (TID:0x900360, sys_thread_t:0x1284FD68, state:CW, native 
ID:0x2B0) prio=4
	at java.lang.Thread.sleep(Native Method)
	at org.eclipse.jdt.internal.core.search.processing.JobManager.run
(JobManager.java(Compiled Code))
	at java.lang.Thread.run(Thread.java:512)
    "Finalizer" (TID:0x901900, sys_thread_t:0x899728, state:CW, native 
ID:0x508) prio=8
	at java.lang.Object.wait(Native Method)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:133)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java(Compiled 
Code))
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java(Compiled 
Code))
    "Reference Handler" (TID:0x901948, sys_thread_t:0x87A008, state:CW, native 
ID:0x480) prio=10
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java(Compiled 
Code))
    "Signal dispatcher" (TID:0x901990, sys_thread_t:0x8791E8, state:R, native 
ID:0x698) prio=5
    "main" (TID:0x9019D8, sys_thread_t:0x23E860, state:R, native ID:0x330) 
prio=5
	at org.eclipse.swt.internal.win32.OS.WaitMessage(Native Method)
	at org.eclipse.swt.widgets.Display.sleep(Display.java(Compiled Code))
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.block
(ModalContext.java(Compiled Code))
*** Exception 0 received during dump routine processing, section truncated.
---------------------- LK component Dump Routine  ----------------------
Monitor pool info:
  Initial monitor count: 32
  Minimum number of free monitors before expansion: 5
  Pool will next be expanded by: 921
  Current total number of monitors: 1842
  Current number of free monitors: 1732
Monitor Pool Dump (flat &amp; inflated object-monitors):
  sys_mon_t:0x0023DBE8 infl_mon_t: 0x0023D7D8:
    java.lang.ref.Reference$Lock@912570/912578: &lt;unowned&gt;
	Waiting to be notified:
	    "Reference Handler" (0x87A008)
  sys_mon_t:0x0023DC38 infl_mon_t: 0x0023D818:
    java.lang.ref.ReferenceQueue$Lock@912180/912188: &lt;unowned&gt;
	Waiting to be notified:
	    "Finalizer" (0x899728)
  sys_mon_t:0x0023DC60 infl_mon_t: 0x0023D838:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@5C37E88/5C37E90: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x14645FD0)
  sys_mon_t:0x0023DDA0 infl_mon_t: 0x0023D938:
    org.eclipse.debug.core.DebugPlugin$AsynchRunner@6EF4F80/6EF4F88: &lt;unowned&gt;
	Waiting to be notified:
	    "Debug async queue" (0x146B56C0)
  sys_mon_t:0x0023DE18 infl_mon_t: 0x0023D998:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@8ADA6C0/8ADA6C8: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x1489D990)
  sys_mon_t:0x14817FE0 infl_mon_t: 0x1478A6A8:
    org.eclipse.core.internal.utils.Semaphore@93D9A18/93D9A20: &lt;unowned&gt;
	Waiting to be notified:
	    "Decoration" (0x12E69390)
  sys_mon_t:0x14830B78 infl_mon_t: 0x1484D188:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@39428D0/39428D8: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x14892160)
  sys_mon_t:0x1489A698 infl_mon_t: 0x1487F718:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@5B3D188/5B3D190: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x147F5658)
  sys_mon_t:0x148D5720 infl_mon_t: 0x14937870:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@A49AAC0/A49AAC8: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x144DABD0)
  sys_mon_t:0x148D5C20 infl_mon_t: 0x14937C70:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@74FD770/74FD778: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x14878F30)
  sys_mon_t:0x148F6EA0 infl_mon_t: 0x14912258:
    org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock@14A9AE8/14A9AF0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "ModalContext" (0x145D6AE0)
  sys_mon_t:0x14992CA8 infl_mon_t: 0x149123F8:
    
org.eclipse.core.internal.resources.DelayedSnapshotRunnable@7D96D98/7D96DA0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "Snapshot" (0x14895AE0)
JVM System Monitor Dump (registered monitors):
    Evacuation Region lock: &lt;unowned&gt;
    Heap Promotion lock: &lt;unowned&gt;
    Sleep lock: &lt;unowned&gt;
	Waiting to be notified:
	    "Java indexing" (0x1284FD68)
    Method trace lock: &lt;unowned&gt;
    Heap lock: owner "Signal dispatcher" (0x8791E8), entry count 1
    Monitor Cache lock: owner "Signal dispatcher" (0x8791E8), entry count 1
    JNI Pinning lock: &lt;unowned&gt;
    JNI Global Reference lock: &lt;unowned&gt;
    Classloader lock: &lt;unowned&gt;
    Binclass lock: &lt;unowned&gt;
    Monitor Registry lock: owner "Signal dispatcher" (0x8791E8), entry count 1
    Thread queue lock: owner "Signal dispatcher" (0x8791E8), entry count 1
Thread identifiers (as used in flat monitors):
    ident 0x12 "ModalContext" (0x145D6AE0) ee 0x145D68D0
    ident 0x1E "Snapshot" (0x14895AE0) ee 0x148958D0
    ident 0x10 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x144DABD0) 
ee 0x144DA9C0
    ident 0x1B "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x14878F30) 
ee 0x14878D20
    ident 0x17 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x147F5658) 
ee 0x147F5448
    ident 0x08 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x1489D990) 
ee 0x1489D780
    ident 0x1F "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x14892160) 
ee 0x14891F50
    ident 0x1A "ServerConnection" (0x1496A808) ee 0x1496A5F8
    ident 0x16 "Debug async queue" (0x146B56C0) ee 0x146B54B0
    ident 0x14 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x14645FD0) 
ee 0x14645DC0
    ident 0x09 "Decoration" (0x12E69390) ee 0x12E69180
    ident 0x07 "Java indexing" (0x1284FD68) ee 0x1284FB58
    ident 0x05 "Finalizer" (0x899728) ee 0x00899518
    ident 0x04 "Reference Handler" (0x87A008) ee 0x00879DF8
    ident 0x03 "Signal dispatcher" (0x8791E8) ee 0x00878FD8
    ident 0x02 "main" (0x23E860) ee 0x0023E650
Java Object Monitor Dump (flat &amp; inflated object-monitors):
    java.lang.ref.ReferenceQueue$Lock@912180/912188
        locknflags 80000400 Monitor inflated infl_mon 0x0023D818
    java.lang.ref.Reference$Lock@912570/912578
        locknflags 80000200 Monitor inflated infl_mon 0x0023D7D8
    org.eclipse.team.internal.ccvs.core.syncinfo.ReentrantLock@14A9AE8/14A9AF0
        locknflags 8003C700 Monitor inflated infl_mon 0x14912258
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@39428D0/39428D8
        locknflags 80008B00 Monitor inflated infl_mon 0x1484D188
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@5B3D188/5B3D190
        locknflags 8001CE00 Monitor inflated infl_mon 0x1487F718
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@5C37E88/5C37E90
        locknflags 80000500 Monitor inflated infl_mon 0x0023D838
    org.eclipse.debug.core.DebugPlugin$AsynchRunner@6EF4F80/6EF4F88
        locknflags 80000D00 Monitor inflated infl_mon 0x0023D938
    java.net.PlainSocketImpl@73010A0/73010A8
        locknflags 001A0000 Flat locked by thread ident 0x1A, entry count 1
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@74FD770/74FD778
        locknflags 80033300 Monitor inflated infl_mon 0x14937C70
    org.eclipse.core.internal.resources.DelayedSnapshotRunnable@7D96D98/7D96DA0
        locknflags 8003D400 Monitor inflated infl_mon 0x149123F8
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@8ADA6C0/8ADA6C8
        locknflags 80001000 Monitor inflated infl_mon 0x0023D998
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@A49AAC0/A49AAC8
        locknflags 80031300 Monitor inflated infl_mon 0x14937870
---------------------- END OF DUMP -------------------------------------
The issue here appears to be lock ordering. Thanks for the traces Martin they 
were a huge help.

In both Threads the CVS component is trying to do work.

In the builder Thread it is trying to acquired the CVS lock but likely already 
has the Workspace lock which it appears to be waiting for.

In the decorator thread it it is trying to acquire the workspace lock and it 
has the CVS lock.

We need to have a definate ordering of locks. I will talk to Core and Team for 
more insight.
Fixed as a result of fixes to Bug 29212
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29193" />
    <CreationDate amount="2003-01-09 04:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Editor Mgmt] Closing last editor in maximized state</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>- maximize editor part</Line>
          <Line>- close all editors</Line>
          <Line>Observe: you cannot easily bring back the maximized area to its previous size: double</Line>
          <Line>click doesn't work and there is no context menu. You have to reset the perspective.</Line>
          <Line>Not sure what is the problem. Is is reproduceble? When the last editor is</Line>
          <Line>closed the editor area is restored to its original size. If you reopen another</Line>
          <Line>editor and want to maximize it then you can do it.</Line>
          <Line>Cannot reproduce in recent (Mac-)builds.</Line>
          <Line>Can be closed.</Line>
          <Line>Closing as WORKSFORME since we can't reproduce it.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>- maximize editor part
- close all editors
Observe: you cannot easily bring back the maximized area to its previous size: double 
click doesn't work and there is no context menu. You have to reset the perspective.
Not sure what is the problem. Is is reproduceble? When the last editor is 
closed the editor area is restored to its original size. If you reopen another 
editor and want to maximize it then you can do it.
Cannot reproduce in recent (Mac-)builds.
Can be closed.
Closing as WORKSFORME since we can't reproduce it.</WithStack>
    <WithOutStack>- maximize editor part
- close all editors
Observe: you cannot easily bring back the maximized area to its previous size: double 
click doesn't work and there is no context menu. You have to reset the perspective.
Not sure what is the problem. Is is reproduceble? When the last editor is 
closed the editor area is restored to its original size. If you reopen another 
editor and want to maximize it then you can do it.
Cannot reproduce in recent (Mac-)builds.
Can be closed.
Closing as WORKSFORME since we can't reproduce it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29194" />
    <CreationDate amount="2003-01-09 04:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Task list columns are too small</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Whenever I open Eclipse with a non-empty task list, its table columns are too small.
See following screenshot.
Created attachment 2936
The Task viewer
That happens on Motif too. 
Grant to investigate.

I am changing the OS field, since Mac uses the native table now. It should still be
a problem on all Motif platforms and Photon.
I used to see this regularly on motif, but now haven't seen it in a long time.  
Neither has SSQ, on motif or photon.  There have been numerous other fixes made 
to Table over the last year, and it seems that one of them may have also 
affected this case as a side effect.

Changing report to WORKSFORME, will reopen if I ever see this happen again.</WithStack>
    <WithOutStack>Whenever I open Eclipse with a non-empty task list, its table columns are too small.
See following screenshot.
Created attachment 2936
The Task viewer
That happens on Motif too. 
Grant to investigate.

I am changing the OS field, since Mac uses the native table now. It should still be
a problem on all Motif platforms and Photon.
I used to see this regularly on motif, but now haven't seen it in a long time.  
Neither has SSQ, on motif or photon.  There have been numerous other fixes made 
to Table over the last year, and it seems that one of them may have also 
affected this case as a side effect.

Changing report to WORKSFORME, will reopen if I ever see this happen again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29195" />
    <CreationDate amount="2003-01-09 05:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Deadlock of Snapshot thread and Taskview</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>After a build...
The taskview seems to be locked with the snapshot thread.

---------------------- Exception Information ---------------------------
No Exception
 
---------------------- System Properties -------------------------------
J2RE 1.3.1 IBM Windows 32 build cn131-20020403
d:\devel\ibm_jdk1.3.1_SR1\jre\bin\java -verify -cp startup.jar 
org.eclipse.core.launcher.Main -application org.eclipse.ui.workbench -ws win32 -
data D:\workspaces\eclipse-sh2\plugins
Java Home Dir:	d:\devel\ibm_jdk1.3.1_SR1\jre
Java DLL Dir:	d:\devel\ibm_jdk1.3.1_SR1\jre\bin
Sys Classpath:	d:\devel\ibm_jdk1.3.1_SR1
\jre\lib\rt.jar;d:\devel\ibm_jdk1.3.1_SR1
\jre\lib\i18n.jar;d:\devel\ibm_jdk1.3.1_SR1\jre\classes
UserArgs:
	-Djava.class.path="L¯^R\QTJava.zip"
	-Xverify:all
	-Djava.class.path=startup.jar
	-Dinvokedviajava
---------------------- XM component Dump Routine  ----------------------
Full thread dump Classic VM (J2RE 1.3.1 IBM Windows 32 build cn131-20020403, 
native threads):
    "ModalContext" (TID:0x1405358, sys_thread_t:0x13D79598, state:CW, native 
ID:0x11C) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.ui.internal.Semaphore.acquire(Semaphore.java:20)
	at org.eclipse.ui.internal.UISynchronizer.syncExec
(UISynchronizer.java:34)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:1979)
	at org.eclipse.ui.views.tasklist.TaskListContentProvider.resourceChanged
(TaskListContentProvider.java:515)
	at org.eclipse.core.internal.events.NotificationManager$1.run
(NotificationManager.java(Compiled Code))
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.events.NotificationManager.notify
(NotificationManager.java(Compiled Code))
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges
(NotificationManager.java:67)
	at org.eclipse.core.internal.resources.Workspace.broadcastChanges
(Workspace.java:153)
	at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java(Compiled Code))
	at org.eclipse.core.internal.resources.Workspace.build
(Workspace.java:176)
	at org.eclipse.ui.actions.GlobalBuildAction$1.run
(GlobalBuildAction.java:156)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:95)
    "Snapshot" (TID:0x58AF040, sys_thread_t:0x13D0EDD0, state:CW, native 
ID:0x724) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.core.internal.utils.Semaphore.acquire(Semaphore.java:24)
	at org.eclipse.core.resources.WorkspaceLock.acquire(WorkspaceLock.java
(Compiled Code))
	at org.eclipse.ui.internal.UIWorkspaceLock.acquire(UIWorkspaceLock.java
(Compiled Code))
	at org.eclipse.core.internal.resources.WorkManager.checkIn
(WorkManager.java(Compiled Code))
	at org.eclipse.core.internal.resources.Workspace.prepareOperation
(Workspace.java(Compiled Code))
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java
(Compiled Code))
	at 
org.eclipse.core.internal.resources.DelayedSnapshotRunnable.runSnapshot
(DelayedSnapshotRunnable.java:68)
	at org.eclipse.core.internal.resources.DelayedSnapshotRunnable.run
(DelayedSnapshotRunnable.java:44)
	at java.lang.Thread.run(Thread.java:512)
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0xE63590, 
sys_thread_t:0x13D77E70, state:CW, native ID:0x354) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "SeedGenerator Thread" (TID:0x58950B0, sys_thread_t:0x13D81508, state:CW, 
native ID:0x480) prio=1
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at sun.security.provider.SeedGenerator.run(SeedGenerator.java(Compiled 
Code))
	at java.lang.Thread.run(Thread.java:512)
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0xF30E98, 
sys_thread_t:0x13A2E910, state:CW, native ID:0x2B8) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0xF31158, 
sys_thread_t:0x13CE3850, state:CW, native ID:0x51C) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0xF31270, 
sys_thread_t:0x13A61198, state:CW, native ID:0x5D4) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x2510C08, 
sys_thread_t:0x13CDC3E8, state:CW, native ID:0x118) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x2BA3038, 
sys_thread_t:0x13CE41C0, state:CW, native ID:0x74C) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "Thread timer" (TID:0x4E4DA90, sys_thread_t:0x13BD70A0, state:CW, native 
ID:0x57C) prio=5
	at java.lang.Thread.sleep(Native Method)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$ThreadTimer.ch
eckTimers(LaunchViewEventHandler.java(Compiled Code))
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$ThreadTimer.ac
cess$2(LaunchViewEventHandler.java(Compiled Code))
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$1.run
(LaunchViewEventHandler.java(Compiled Code))
	at java.lang.Thread.run(Thread.java:512)
    "Debug async queue" (TID:0x4D37E78, sys_thread_t:0x11B73DE0, state:CW, 
native ID:0x624) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.debug.core.DebugPlugin$AsynchRunner.run
(DebugPlugin.java:722)
	at java.lang.Thread.run(Thread.java:512)
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x33E6F10, 
sys_thread_t:0x13B68CA0, state:CW, native ID:0x460) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x3241708, 
sys_thread_t:0x13B677C8, state:CW, native ID:0x750) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x314A9C8, 
sys_thread_t:0x13B54BB0, state:CW, native ID:0x674) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "Decoration" (TID:0x1FC33C8, sys_thread_t:0x130809E0, state:CW, native 
ID:0x704) prio=1
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.ui.internal.decorators.DecorationScheduler.next
(DecorationScheduler.java(Compiled Code))
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.run
(DecorationScheduler.java(Compiled Code))
	at java.lang.Thread.run(Thread.java:512)
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x1BD8740, 
sys_thread_t:0x12E8A3A8, state:CW, native ID:0x690) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "Java indexing" (TID:0x900360, sys_thread_t:0x12A5A1A8, state:CW, native 
ID:0x560) prio=4
	at java.lang.Thread.sleep(Native Method)
	at org.eclipse.jdt.internal.core.search.processing.JobManager.run
(JobManager.java(Compiled Code))
	at java.lang.Thread.run(Thread.java:512)
    "Finalizer" (TID:0x901900, sys_thread_t:0x899728, state:CW, native 
ID:0x600) prio=8
	at java.lang.Object.wait(Native Method)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:133)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java(Compiled 
Code))
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java(Compiled 
Code))
    "Reference Handler" (TID:0x901948, sys_thread_t:0x87A008, state:CW, native 
ID:0x3B8) prio=10
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java(Compiled 
Code))
    "Signal dispatcher" (TID:0x901990, sys_thread_t:0x8791E8, state:R, native 
ID:0x13C) prio=5
    "main" (TID:0x9019D8, sys_thread_t:0x23E860, state:R, native ID:0x5A8) 
prio=5
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
*** Exception 0 received during dump routine processing, section truncated.
---------------------- LK component Dump Routine  ----------------------
Monitor pool info:
  Initial monitor count: 32
  Minimum number of free monitors before expansion: 5
  Pool will next be expanded by: 273
  Current total number of monitors: 546
  Current number of free monitors: 499
Monitor Pool Dump (flat &amp; inflated object-monitors):
  sys_mon_t:0x0023DBE8 infl_mon_t: 0x0023D7D8:
    java.lang.ref.Reference$Lock@912570/912578: &lt;unowned&gt;
	Waiting to be notified:
	    "Reference Handler" (0x87A008)
  sys_mon_t:0x0023DC38 infl_mon_t: 0x0023D818:
    java.lang.ref.ReferenceQueue$Lock@912180/912188: &lt;unowned&gt;
	Waiting to be notified:
	    "Finalizer" (0x899728)
  sys_mon_t:0x0023DCD8 infl_mon_t: 0x0023D898:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@1BDCDA8/1BDCDB0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x12E8A3A8)
  sys_mon_t:0x0023DD78 infl_mon_t: 0x0023D918:
    org.eclipse.ui.internal.decorators.DecorationScheduler@1BFF4D0/1BFF4D8: 
&lt;unowned&gt;
	Waiting to be notified:
	    "Decoration" (0x130809E0)
  sys_mon_t:0x13B1DDF0 infl_mon_t: 0x13B1D278:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@376E1C0/376E1C8: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13CE3850)
  sys_mon_t:0x13B1F350 infl_mon_t: 0x13B1D5B8:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@49022B8/49022C0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13A2E910)
  sys_mon_t:0x13B20228 infl_mon_t: 0x13B1F748:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@F214E8/F214F0: &lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13A61198)
  sys_mon_t:0x13B22510 infl_mon_t: 0x13B20D58:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@E4A680/E4A688: &lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13D77E70)
  sys_mon_t:0x13B22560 infl_mon_t: 0x13B20D98:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@44D26D8/44D26E0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13CE41C0)
  sys_mon_t:0x13B22808 infl_mon_t: 0x13B20FB8:
    sun.security.provider.SeedGenerator@5899A38/5899A40: &lt;unowned&gt;
	Waiting to be notified:
	    "SeedGenerator Thread" (0x13D81508)
  sys_mon_t:0x13B23350 infl_mon_t: 0x13B218B8:
    org.eclipse.core.internal.utils.Semaphore@9B9EA8/9B9EB0: &lt;unowned&gt;
	Waiting to be notified:
	    "Snapshot" (0x13D0EDD0)
  sys_mon_t:0x13B26990 infl_mon_t: 0x13B240E0:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@25589E0/25589E8: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13CDC3E8)
  sys_mon_t:0x13B26E68 infl_mon_t: 0x13B244C0:
    org.eclipse.ui.internal.Semaphore@3CC2598/3CC25A0: &lt;unowned&gt;
	Waiting to be notified:
	    "ModalContext" (0x13D79598)
  sys_mon_t:0x13B27520 infl_mon_t: 0x13B24A20:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@31F34A8/31F34B0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13B54BB0)
  sys_mon_t:0x13B27548 infl_mon_t: 0x13B24A40:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@334D560/334D568: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13B677C8)
  sys_mon_t:0x13B27570 infl_mon_t: 0x13B24A60:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@355F198/355F1A0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13B68CA0)
  sys_mon_t:0x13B275C0 infl_mon_t: 0x13B24AA0:
    org.eclipse.debug.core.DebugPlugin$AsynchRunner@4DFBF48/4DFBF50: &lt;unowned&gt;
	Waiting to be notified:
	    "Debug async queue" (0x11B73DE0)
JVM System Monitor Dump (registered monitors):
    Evacuation Region lock: &lt;unowned&gt;
    Heap Promotion lock: &lt;unowned&gt;
    Sleep lock: &lt;unowned&gt;
	Waiting to be notified:
	    "Thread timer" (0x13BD70A0)
	    "Java indexing" (0x12A5A1A8)
    Method trace lock: &lt;unowned&gt;
    Heap lock: owner "Signal dispatcher" (0x8791E8), entry count 1
    Monitor Cache lock: owner "Signal dispatcher" (0x8791E8), entry count 1
    JNI Pinning lock: &lt;unowned&gt;
    JNI Global Reference lock: &lt;unowned&gt;
    Classloader lock: &lt;unowned&gt;
    Binclass lock: &lt;unowned&gt;
    Monitor Registry lock: owner "Signal dispatcher" (0x8791E8), entry count 1
    Thread queue lock: owner "Signal dispatcher" (0x8791E8), entry count 1
Thread identifiers (as used in flat monitors):
    ident 0x0B "ModalContext" (0x13D79598) ee 0x13D79388
    ident 0x0C "Snapshot" (0x13D0EDD0) ee 0x13D0EBC0
    ident 0x0E "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13D77E70) 
ee 0x13D77C60
    ident 0x13 "SeedGenerator Thread" (0x13D81508) ee 0x13D812F8
    ident 0x11 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13A2E910) 
ee 0x13A2E700
    ident 0x0D "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13CE3850) 
ee 0x13CE3640
    ident 0x12 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13A61198) 
ee 0x13A60F88
    ident 0x10 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13CDC3E8) 
ee 0x13CDC1D8
    ident 0x19 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13CE41C0) 
ee 0x13CE3FB0
    ident 0x17 "Thread timer" (0x13BD70A0) ee 0x13BD6E90
    ident 0x06 "Debug async queue" (0x11B73DE0) ee 0x11B73BD0
    ident 0x15 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13B68CA0) 
ee 0x13B68A90
    ident 0x14 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13B677C8) 
ee 0x13B675B8
    ident 0x0A "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13B54BB0) 
ee 0x13B549A0
    ident 0x09 "Decoration" (0x130809E0) ee 0x130807D0
    ident 0x08 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x12E8A3A8) 
ee 0x12E8A198
    ident 0x07 "Java indexing" (0x12A5A1A8) ee 0x12A59F98
    ident 0x05 "Finalizer" (0x899728) ee 0x00899518
    ident 0x04 "Reference Handler" (0x87A008) ee 0x00879DF8
    ident 0x03 "Signal dispatcher" (0x8791E8) ee 0x00878FD8
    ident 0x02 "main" (0x23E860) ee 0x0023E650
Java Object Monitor Dump (flat &amp; inflated object-monitors):
    java.lang.ref.ReferenceQueue$Lock@912180/912188
        locknflags 80000400 Monitor inflated infl_mon 0x0023D818
    java.lang.ref.Reference$Lock@912570/912578
        locknflags 80000200 Monitor inflated infl_mon 0x0023D7D8
    org.eclipse.core.internal.utils.Semaphore@9B9EA8/9B9EB0
        locknflags 80016000 Monitor inflated infl_mon 0x13B218B8
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@E4A680/E4A688
        locknflags 80010500 Monitor inflated infl_mon 0x13B20D58
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@F214E8/F214F0
        locknflags 8000BA00 Monitor inflated infl_mon 0x13B1F748
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@1BDCDA8/1BDCDB0
        locknflags 80000800 Monitor inflated infl_mon 0x0023D898
    org.eclipse.ui.internal.decorators.DecorationScheduler@1BFF4D0/1BFF4D8
        locknflags 80000C00 Monitor inflated infl_mon 0x0023D918
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@25589E0/25589E8
        locknflags 8001A900 Monitor inflated infl_mon 0x13B240E0
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@31F34A8/31F34B0
        locknflags 8001F300 Monitor inflated infl_mon 0x13B24A20
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@334D560/334D568
        locknflags 8001F400 Monitor inflated infl_mon 0x13B24A40
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@355F198/355F1A0
        locknflags 8001F500 Monitor inflated infl_mon 0x13B24A60
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@376E1C0/376E1C8
        locknflags 80008200 Monitor inflated infl_mon 0x13B1D278
    org.eclipse.ui.internal.Semaphore@3CC2598/3CC25A0
        locknflags 8001C800 Monitor inflated infl_mon 0x13B244C0
    org.eclipse.swt.widgets.RunnableLock@3CC3890/3CC3898
        locknflags 00020000 Flat locked by thread ident 0x02, entry count 1
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@44D26D8/44D26E0
        locknflags 80010700 Monitor inflated infl_mon 0x13B20D98
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@49022B8/49022C0
        locknflags 80009C00 Monitor inflated infl_mon 0x13B1D5B8
    org.eclipse.debug.core.DebugPlugin$AsynchRunner@4DFBF48/4DFBF50
        locknflags 8001F700 Monitor inflated infl_mon 0x13B24AA0
    sun.security.provider.SeedGenerator@5899A38/5899A40
        locknflags 80011800 Monitor inflated infl_mon 0x13B20FB8
---------------------- END OF DUMP -------------------------------------
Weird, after several minute eclipse came back from the deadlock.
Maybe that has to do with the CTRL+BREAK, or my analysis is wrong.

Setting to 'invalid'. Will reopen if I see this again.</WithStack>
    <WithOutStack>After a build...
The taskview seems to be locked with the snapshot thread.

---------------------- Exception Information ---------------------------
No Exception
 
---------------------- System Properties -------------------------------
J2RE 1.3.1 IBM Windows 32 build cn131-20020403
d:\devel\ibm_jdk1.3.1_SR1\jre\bin\java -verify -cp startup.jar 
org.eclipse.core.launcher.Main -application org.eclipse.ui.workbench -ws win32 -
data D:\workspaces\eclipse-sh2\plugins
Java Home Dir:	d:\devel\ibm_jdk1.3.1_SR1\jre
Java DLL Dir:	d:\devel\ibm_jdk1.3.1_SR1\jre\bin
Sys Classpath:	d:\devel\ibm_jdk1.3.1_SR1
\jre\lib\rt.jar;d:\devel\ibm_jdk1.3.1_SR1
\jre\lib\i18n.jar;d:\devel\ibm_jdk1.3.1_SR1\jre\classes
UserArgs:
	-Djava.class.path="L¯^R\QTJava.zip"
	-Xverify:all
	-Djava.class.path=startup.jar
	-Dinvokedviajava
---------------------- XM component Dump Routine  ----------------------
Full thread dump Classic VM (J2RE 1.3.1 IBM Windows 32 build cn131-20020403, 
native threads):
    "ModalContext" (TID:0x1405358, sys_thread_t:0x13D79598, state:CW, native 
ID:0x11C) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.ui.internal.Semaphore.acquire(Semaphore.java:20)
	at org.eclipse.ui.internal.UISynchronizer.syncExec
(UISynchronizer.java:34)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:1979)
	at org.eclipse.ui.views.tasklist.TaskListContentProvider.resourceChanged
(TaskListContentProvider.java:515)
	at org.eclipse.core.internal.events.NotificationManager$1.run
(NotificationManager.java(Compiled Code))
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java(Compiled Code))
	at org.eclipse.core.runtime.Platform.run(Platform.java(Compiled Code))
	at org.eclipse.core.internal.events.NotificationManager.notify
(NotificationManager.java(Compiled Code))
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges
(NotificationManager.java:67)
	at org.eclipse.core.internal.resources.Workspace.broadcastChanges
(Workspace.java:153)
	at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java(Compiled Code))
	at org.eclipse.core.internal.resources.Workspace.build
(Workspace.java:176)
	at org.eclipse.ui.actions.GlobalBuildAction$1.run
(GlobalBuildAction.java:156)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:95)
    "Snapshot" (TID:0x58AF040, sys_thread_t:0x13D0EDD0, state:CW, native 
ID:0x724) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.core.internal.utils.Semaphore.acquire(Semaphore.java:24)
	at org.eclipse.core.resources.WorkspaceLock.acquire(WorkspaceLock.java
(Compiled Code))
	at org.eclipse.ui.internal.UIWorkspaceLock.acquire(UIWorkspaceLock.java
(Compiled Code))
	at org.eclipse.core.internal.resources.WorkManager.checkIn
(WorkManager.java(Compiled Code))
	at org.eclipse.core.internal.resources.Workspace.prepareOperation
(Workspace.java(Compiled Code))
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java
(Compiled Code))
	at 
org.eclipse.core.internal.resources.DelayedSnapshotRunnable.runSnapshot
(DelayedSnapshotRunnable.java:68)
	at org.eclipse.core.internal.resources.DelayedSnapshotRunnable.run
(DelayedSnapshotRunnable.java:44)
	at java.lang.Thread.run(Thread.java:512)
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0xE63590, 
sys_thread_t:0x13D77E70, state:CW, native ID:0x354) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "SeedGenerator Thread" (TID:0x58950B0, sys_thread_t:0x13D81508, state:CW, 
native ID:0x480) prio=1
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at sun.security.provider.SeedGenerator.run(SeedGenerator.java(Compiled 
Code))
	at java.lang.Thread.run(Thread.java:512)
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0xF30E98, 
sys_thread_t:0x13A2E910, state:CW, native ID:0x2B8) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0xF31158, 
sys_thread_t:0x13CE3850, state:CW, native ID:0x51C) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0xF31270, 
sys_thread_t:0x13A61198, state:CW, native ID:0x5D4) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x2510C08, 
sys_thread_t:0x13CDC3E8, state:CW, native ID:0x118) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x2BA3038, 
sys_thread_t:0x13CE41C0, state:CW, native ID:0x74C) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "Thread timer" (TID:0x4E4DA90, sys_thread_t:0x13BD70A0, state:CW, native 
ID:0x57C) prio=5
	at java.lang.Thread.sleep(Native Method)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$ThreadTimer.ch
eckTimers(LaunchViewEventHandler.java(Compiled Code))
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$ThreadTimer.ac
cess$2(LaunchViewEventHandler.java(Compiled Code))
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler$1.run
(LaunchViewEventHandler.java(Compiled Code))
	at java.lang.Thread.run(Thread.java:512)
    "Debug async queue" (TID:0x4D37E78, sys_thread_t:0x11B73DE0, state:CW, 
native ID:0x624) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.debug.core.DebugPlugin$AsynchRunner.run
(DebugPlugin.java:722)
	at java.lang.Thread.run(Thread.java:512)
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x33E6F10, 
sys_thread_t:0x13B68CA0, state:CW, native ID:0x460) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x3241708, 
sys_thread_t:0x13B677C8, state:CW, native ID:0x750) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x314A9C8, 
sys_thread_t:0x13B54BB0, state:CW, native ID:0x674) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "Decoration" (TID:0x1FC33C8, sys_thread_t:0x130809E0, state:CW, native 
ID:0x704) prio=1
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at org.eclipse.ui.internal.decorators.DecorationScheduler.next
(DecorationScheduler.java(Compiled Code))
	at org.eclipse.ui.internal.decorators.DecorationScheduler$3.run
(DecorationScheduler.java(Compiled Code))
	at java.lang.Thread.run(Thread.java:512)
    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (TID:0x1BD8740, 
sys_thread_t:0x12E8A3A8, state:CW, native ID:0x690) prio=1
	at java.lang.Object.wait(Native Method)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java(Compiled Code))
    "Java indexing" (TID:0x900360, sys_thread_t:0x12A5A1A8, state:CW, native 
ID:0x560) prio=4
	at java.lang.Thread.sleep(Native Method)
	at org.eclipse.jdt.internal.core.search.processing.JobManager.run
(JobManager.java(Compiled Code))
	at java.lang.Thread.run(Thread.java:512)
    "Finalizer" (TID:0x901900, sys_thread_t:0x899728, state:CW, native 
ID:0x600) prio=8
	at java.lang.Object.wait(Native Method)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:133)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java(Compiled 
Code))
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java(Compiled 
Code))
    "Reference Handler" (TID:0x901948, sys_thread_t:0x87A008, state:CW, native 
ID:0x3B8) prio=10
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java(Compiled Code))
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java(Compiled 
Code))
    "Signal dispatcher" (TID:0x901990, sys_thread_t:0x8791E8, state:R, native 
ID:0x13C) prio=5
    "main" (TID:0x9019D8, sys_thread_t:0x23E860, state:R, native ID:0x5A8) 
prio=5
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java(Compiled Code))
	at org.eclipse.swt.widgets.Control.windowProc(Control.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Display.windowProc(Display.java(Compiled 
Code))
*** Exception 0 received during dump routine processing, section truncated.
---------------------- LK component Dump Routine  ----------------------
Monitor pool info:
  Initial monitor count: 32
  Minimum number of free monitors before expansion: 5
  Pool will next be expanded by: 273
  Current total number of monitors: 546
  Current number of free monitors: 499
Monitor Pool Dump (flat &amp; inflated object-monitors):
  sys_mon_t:0x0023DBE8 infl_mon_t: 0x0023D7D8:
    java.lang.ref.Reference$Lock@912570/912578: &lt;unowned&gt;
	Waiting to be notified:
	    "Reference Handler" (0x87A008)
  sys_mon_t:0x0023DC38 infl_mon_t: 0x0023D818:
    java.lang.ref.ReferenceQueue$Lock@912180/912188: &lt;unowned&gt;
	Waiting to be notified:
	    "Finalizer" (0x899728)
  sys_mon_t:0x0023DCD8 infl_mon_t: 0x0023D898:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@1BDCDA8/1BDCDB0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x12E8A3A8)
  sys_mon_t:0x0023DD78 infl_mon_t: 0x0023D918:
    org.eclipse.ui.internal.decorators.DecorationScheduler@1BFF4D0/1BFF4D8: 
&lt;unowned&gt;
	Waiting to be notified:
	    "Decoration" (0x130809E0)
  sys_mon_t:0x13B1DDF0 infl_mon_t: 0x13B1D278:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@376E1C0/376E1C8: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13CE3850)
  sys_mon_t:0x13B1F350 infl_mon_t: 0x13B1D5B8:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@49022B8/49022C0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13A2E910)
  sys_mon_t:0x13B20228 infl_mon_t: 0x13B1F748:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@F214E8/F214F0: &lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13A61198)
  sys_mon_t:0x13B22510 infl_mon_t: 0x13B20D58:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@E4A680/E4A688: &lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13D77E70)
  sys_mon_t:0x13B22560 infl_mon_t: 0x13B20D98:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@44D26D8/44D26E0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13CE41C0)
  sys_mon_t:0x13B22808 infl_mon_t: 0x13B20FB8:
    sun.security.provider.SeedGenerator@5899A38/5899A40: &lt;unowned&gt;
	Waiting to be notified:
	    "SeedGenerator Thread" (0x13D81508)
  sys_mon_t:0x13B23350 infl_mon_t: 0x13B218B8:
    org.eclipse.core.internal.utils.Semaphore@9B9EA8/9B9EB0: &lt;unowned&gt;
	Waiting to be notified:
	    "Snapshot" (0x13D0EDD0)
  sys_mon_t:0x13B26990 infl_mon_t: 0x13B240E0:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@25589E0/25589E8: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13CDC3E8)
  sys_mon_t:0x13B26E68 infl_mon_t: 0x13B244C0:
    org.eclipse.ui.internal.Semaphore@3CC2598/3CC25A0: &lt;unowned&gt;
	Waiting to be notified:
	    "ModalContext" (0x13D79598)
  sys_mon_t:0x13B27520 infl_mon_t: 0x13B24A20:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@31F34A8/31F34B0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13B54BB0)
  sys_mon_t:0x13B27548 infl_mon_t: 0x13B24A40:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@334D560/334D568: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13B677C8)
  sys_mon_t:0x13B27570 infl_mon_t: 0x13B24A60:
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@355F198/355F1A0: 
&lt;unowned&gt;
	Waiting to be notified:
	    "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13B68CA0)
  sys_mon_t:0x13B275C0 infl_mon_t: 0x13B24AA0:
    org.eclipse.debug.core.DebugPlugin$AsynchRunner@4DFBF48/4DFBF50: &lt;unowned&gt;
	Waiting to be notified:
	    "Debug async queue" (0x11B73DE0)
JVM System Monitor Dump (registered monitors):
    Evacuation Region lock: &lt;unowned&gt;
    Heap Promotion lock: &lt;unowned&gt;
    Sleep lock: &lt;unowned&gt;
	Waiting to be notified:
	    "Thread timer" (0x13BD70A0)
	    "Java indexing" (0x12A5A1A8)
    Method trace lock: &lt;unowned&gt;
    Heap lock: owner "Signal dispatcher" (0x8791E8), entry count 1
    Monitor Cache lock: owner "Signal dispatcher" (0x8791E8), entry count 1
    JNI Pinning lock: &lt;unowned&gt;
    JNI Global Reference lock: &lt;unowned&gt;
    Classloader lock: &lt;unowned&gt;
    Binclass lock: &lt;unowned&gt;
    Monitor Registry lock: owner "Signal dispatcher" (0x8791E8), entry count 1
    Thread queue lock: owner "Signal dispatcher" (0x8791E8), entry count 1
Thread identifiers (as used in flat monitors):
    ident 0x0B "ModalContext" (0x13D79598) ee 0x13D79388
    ident 0x0C "Snapshot" (0x13D0EDD0) ee 0x13D0EBC0
    ident 0x0E "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13D77E70) 
ee 0x13D77C60
    ident 0x13 "SeedGenerator Thread" (0x13D81508) ee 0x13D812F8
    ident 0x11 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13A2E910) 
ee 0x13A2E700
    ident 0x0D "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13CE3850) 
ee 0x13CE3640
    ident 0x12 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13A61198) 
ee 0x13A60F88
    ident 0x10 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13CDC3E8) 
ee 0x13CDC1D8
    ident 0x19 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13CE41C0) 
ee 0x13CE3FB0
    ident 0x17 "Thread timer" (0x13BD70A0) ee 0x13BD6E90
    ident 0x06 "Debug async queue" (0x11B73DE0) ee 0x11B73BD0
    ident 0x15 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13B68CA0) 
ee 0x13B68A90
    ident 0x14 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13B677C8) 
ee 0x13B675B8
    ident 0x0A "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x13B54BB0) 
ee 0x13B549A0
    ident 0x09 "Decoration" (0x130809E0) ee 0x130807D0
    ident 0x08 "org.eclipse.jdt.internal.ui.text.JavaReconciler" (0x12E8A3A8) 
ee 0x12E8A198
    ident 0x07 "Java indexing" (0x12A5A1A8) ee 0x12A59F98
    ident 0x05 "Finalizer" (0x899728) ee 0x00899518
    ident 0x04 "Reference Handler" (0x87A008) ee 0x00879DF8
    ident 0x03 "Signal dispatcher" (0x8791E8) ee 0x00878FD8
    ident 0x02 "main" (0x23E860) ee 0x0023E650
Java Object Monitor Dump (flat &amp; inflated object-monitors):
    java.lang.ref.ReferenceQueue$Lock@912180/912188
        locknflags 80000400 Monitor inflated infl_mon 0x0023D818
    java.lang.ref.Reference$Lock@912570/912578
        locknflags 80000200 Monitor inflated infl_mon 0x0023D7D8
    org.eclipse.core.internal.utils.Semaphore@9B9EA8/9B9EB0
        locknflags 80016000 Monitor inflated infl_mon 0x13B218B8
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@E4A680/E4A688
        locknflags 80010500 Monitor inflated infl_mon 0x13B20D58
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@F214E8/F214F0
        locknflags 8000BA00 Monitor inflated infl_mon 0x13B1F748
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@1BDCDA8/1BDCDB0
        locknflags 80000800 Monitor inflated infl_mon 0x0023D898
    org.eclipse.ui.internal.decorators.DecorationScheduler@1BFF4D0/1BFF4D8
        locknflags 80000C00 Monitor inflated infl_mon 0x0023D918
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@25589E0/25589E8
        locknflags 8001A900 Monitor inflated infl_mon 0x13B240E0
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@31F34A8/31F34B0
        locknflags 8001F300 Monitor inflated infl_mon 0x13B24A20
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@334D560/334D568
        locknflags 8001F400 Monitor inflated infl_mon 0x13B24A40
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@355F198/355F1A0
        locknflags 8001F500 Monitor inflated infl_mon 0x13B24A60
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@376E1C0/376E1C8
        locknflags 80008200 Monitor inflated infl_mon 0x13B1D278
    org.eclipse.ui.internal.Semaphore@3CC2598/3CC25A0
        locknflags 8001C800 Monitor inflated infl_mon 0x13B244C0
    org.eclipse.swt.widgets.RunnableLock@3CC3890/3CC3898
        locknflags 00020000 Flat locked by thread ident 0x02, entry count 1
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@44D26D8/44D26E0
        locknflags 80010700 Monitor inflated infl_mon 0x13B20D98
    org.eclipse.jface.text.reconciler.DirtyRegionQueue@49022B8/49022C0
        locknflags 80009C00 Monitor inflated infl_mon 0x13B1D5B8
    org.eclipse.debug.core.DebugPlugin$AsynchRunner@4DFBF48/4DFBF50
        locknflags 8001F700 Monitor inflated infl_mon 0x13B24AA0
    sun.security.provider.SeedGenerator@5899A38/5899A40
        locknflags 80011800 Monitor inflated infl_mon 0x13B20FB8
---------------------- END OF DUMP -------------------------------------
Weird, after several minute eclipse came back from the deadlock.
Maybe that has to do with the CTRL+BREAK, or my analysis is wrong.

Setting to 'invalid'. Will reopen if I see this again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29196" />
    <CreationDate amount="2003-01-09 05:18:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Smart editing and array initializers</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- enter the following code</Line>
          <Line>foo(new Object[] &lt;cursor&gt;)</Line>
          <Line>- now press {</Line>
          <Line>observe: you get</Line>
          <Line>foo(new Object[] {)</Line>
          <Line>}</Line>
          <Line>Works for me using 3.4 M4.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build I 20030107

- enter the following code 
  foo(new Object[] &lt;cursor&gt;)
- now press {
  observe: you get
  foo(new Object[] {)
  }
Works for me using 3.4 M4.</WithStack>
    <WithOutStack>Build I 20030107

- enter the following code 
  foo(new Object[] &lt;cursor&gt;)
- now press {
  observe: you get
  foo(new Object[] {)
  }
Works for me using 3.4 M4.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29197" />
    <CreationDate amount="2003-01-09 05:31:00 -0500" />
    <DupId amount="28750" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>NullPointerException when compiling Class with an assert in a method of an inner class</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437338527417">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfo(ClassFile.java:434)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfos(ClassFile.java:579)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:694)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:762)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:709)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:770)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:158)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.Compiler.resolve(Compiler.java:591)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:204)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:90)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:664)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.core.WorkingCopy.reconcile(WorkingCopy.java:446)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.core.WorkingCopy.reconcile(WorkingCopy.java:421)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.doSaveDocument(CompilationUnitDocumentProvider.java:903)</Frame>
          <Frame depth="14">org.eclipse.ui.texteditor.AbstractDocumentProvider.saveDocument(AbstractDocumentProvider.java:454)</Frame>
          <Frame depth="15">org.eclipse.ui.texteditor.AbstractTextEditor$11.execute(AbstractTextEditor.java:2772)</Frame>
          <Frame depth="16">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:65)</Frame>
          <Frame depth="17">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1564)</Frame>
          <Frame depth="18">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:79)</Frame>
          <Frame depth="19">org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation(AbstractTextEditor.java:2790)</Frame>
          <Frame depth="20">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperation(CompilationUnitEditor.java:849)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:913)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.EditorManager$11.run(EditorManager.java:1032)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:901)</Frame>
          <Frame depth="24">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:296)</Frame>
          <Frame depth="25">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:246)</Frame>
          <Frame depth="26">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:432)</Frame>
          <Frame depth="27">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)</Frame>
          <Frame depth="28">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:429)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1174)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:907)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.EditorManager.saveEditor(EditorManager.java:1037)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2143)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.SaveAction.run(SaveAction.java:30)</Frame>
          <Frame depth="34">org.eclipse.jface.action.Action.runWithEvent(Action.java:769)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.WWinKeyBindingService.invoke(WWinKeyBindingService.java:139)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.WWinKeyBindingService.pressed(WWinKeyBindingService.java:120)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.WWinKeyBindingService$6.widgetSelected(WWinKeyBindingService.java:376)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.AcceleratorMenu$2.handleEvent(AcceleratorMenu.java:55)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)</Frame>
          <Frame depth="45">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="46">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="47">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="48">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="49">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="50">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="53">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338527417">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfo(ClassFile.java:434)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfos(ClassFile.java:579)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:694)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:762)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:709)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:770)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:158)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:543)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:337)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:194)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:144)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build(IncrementalImageBuilder.java:106)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas(JavaBuilder.java:190)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:118)</Frame>
          <Frame depth="14">org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:384)</Frame>
          <Frame depth="15">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:852)</Frame>
          <Frame depth="16">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="17">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:120)</Frame>
          <Frame depth="18">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:176)</Frame>
          <Frame depth="19">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:186)</Frame>
          <Frame depth="20">org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:146)</Frame>
          <Frame depth="21">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:852)</Frame>
          <Frame depth="22">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="23">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:160)</Frame>
          <Frame depth="24">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:211)</Frame>
          <Frame depth="25">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:861)</Frame>
          <Frame depth="26">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1569)</Frame>
          <Frame depth="27">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:79)</Frame>
          <Frame depth="28">org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation(AbstractTextEditor.java:2790)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperation(CompilationUnitEditor.java:849)</Frame>
          <Frame depth="30">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:913)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.EditorManager$11.run(EditorManager.java:1032)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:901)</Frame>
          <Frame depth="33">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:296)</Frame>
          <Frame depth="34">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:246)</Frame>
          <Frame depth="35">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:432)</Frame>
          <Frame depth="36">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)</Frame>
          <Frame depth="37">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:429)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1174)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:907)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.EditorManager.saveEditor(EditorManager.java:1037)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:2143)</Frame>
          <Frame depth="42">org.eclipse.ui.internal.SaveAction.run(SaveAction.java:30)</Frame>
          <Frame depth="43">org.eclipse.jface.action.Action.runWithEvent(Action.java:769)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.WWinKeyBindingService.invoke(WWinKeyBindingService.java:139)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.WWinKeyBindingService.pressed(WWinKeyBindingService.java:120)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.WWinKeyBindingService$6.widgetSelected(WWinKeyBindingService.java:376)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.AcceleratorMenu$2.handleEvent(AcceleratorMenu.java:55)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)</Frame>
          <Frame depth="54">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="55">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="56">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="57">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="58">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="59">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="60">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="61">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="62">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="65" end="268" />
        <code>public class AClass {
    
    private void aMethod() {
    	assert true : "hello";
    }
    
    private class AnInnerClass {
    	public void execute() {
    	    assert true : "hello";
    	}
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="18">
        <Lines>
          <Line>1) When saving, a dialog appears-</Line>
          <Line>Error: Save Failed:null</Line>
          <Line>2) Try saving again, save succeeds, build starts, but fails-</Line>
          <Line>Save Problems: Save could not be completed, Reason: Errors during build</Line>
          <Line />
          <Line>These are the corresponding errors in the log file:</Line>
          <Line>1)</Line>
          <Line>Details: !SESSION Jan 09, 2003 09:25:06.856 --------------------------------</Line>
          <Line>-------------</Line>
          <Line>java.version=1.4.0_01</Line>
          <Line>java.vendor=Sun Microsystems Inc.</Line>
          <Line>BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_GB</Line>
          <Line>Command-line arguments: -os win32 -ws win32 -arch x86 -install file:C:/eclipse/</Line>
          <Line>!ENTRY org.eclipse.ui 4 4 Jan 09, 2003 09:25:06.856</Line>
          <Line>!MESSAGE Save Failed</Line>
          <Line>!ENTRY org.eclipse.ui 2 0 Jan 09, 2003 09:25:06.876</Line>
          <Line>!MESSAGE Save Failed</Line>
          <Line>!STACK 0</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The following class causes a NullPointerException to be thrown:

public class AClass {
    
    private void aMethod() {
    	assert true : "hello";
    }
    
    private class AnInnerClass {
    	public void execute() {
    	    assert true : "hello";
    	}
    }
}

If the line containing the J2SE 1.4 assert is removed, compilation succeeds.

When the assert is uncommented, two symptoms occur:

1) When saving, a dialog appears- 
   Error: Save Failed:null
2) Try saving again, save succeeds, build starts, but fails- 
   Save Problems: Save could not be completed, Reason: Errors during build
   
These are the corresponding errors in the log file:
1)
   Details: !SESSION Jan 09, 2003 09:25:06.856 --------------------------------
-------------
java.version=1.4.0_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_GB
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:C:/eclipse/
!ENTRY org.eclipse.ui 4 4 Jan 09, 2003 09:25:06.856
!MESSAGE Save Failed
!ENTRY org.eclipse.ui 2 0 Jan 09, 2003 09:25:06.876
!MESSAGE Save Failed
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfo
(ClassFile.java:434)
	at org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfos
(ClassFile.java:579)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode
(TypeDeclaration.java:694)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode
(TypeDeclaration.java:762)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode
(TypeDeclaration.java:709)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode
(TypeDeclaration.java:770)
	at 
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode
(CompilationUnitDeclaration.java:158)
	at org.eclipse.jdt.internal.compiler.Compiler.resolve
(Compiler.java:591)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process
(CompilationUnitProblemFinder.java:204)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure
(CompilationUnit.java:90)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent
(CompilationUnit.java:664)
	at org.eclipse.jdt.internal.core.WorkingCopy.reconcile
(WorkingCopy.java:446)
	at org.eclipse.jdt.internal.core.WorkingCopy.reconcile
(WorkingCopy.java:421)
	at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.doSaveDo
cument(CompilationUnitDocumentProvider.java:903)
	at org.eclipse.ui.texteditor.AbstractDocumentProvider.saveDocument
(AbstractDocumentProvider.java:454)
	at org.eclipse.ui.texteditor.AbstractTextEditor$11.execute
(AbstractTextEditor.java:2772)
	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run
(WorkspaceModifyOperation.java:65)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1564)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:79)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation
(AbstractTextEditor.java:2790)
	at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperati
on(CompilationUnitEditor.java:849)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave
(CompilationUnitEditor.java:913)
	at org.eclipse.ui.internal.EditorManager$11.run
(EditorManager.java:1032)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:901)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:246)
	at org.eclipse.jface.window.ApplicationWindow$1.run
(ApplicationWindow.java:432)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:65)
	at org.eclipse.jface.window.ApplicationWindow.run
(ApplicationWindow.java:429)
	at org.eclipse.ui.internal.WorkbenchWindow.run
(WorkbenchWindow.java:1174)
	at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation
(EditorManager.java:907)
	at org.eclipse.ui.internal.EditorManager.saveEditor
(EditorManager.java:1037)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor
(WorkbenchPage.java:2143)
	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:30)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:769)
	at org.eclipse.ui.internal.WWinKeyBindingService.invoke
(WWinKeyBindingService.java:139)
	at org.eclipse.ui.internal.WWinKeyBindingService.pressed
(WWinKeyBindingService.java:120)
	at org.eclipse.ui.internal.WWinKeyBindingService$6.widgetSelected
(WWinKeyBindingService.java:376)
	at org.eclipse.ui.internal.AcceleratorMenu$2.handleEvent
(AcceleratorMenu.java:55)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)

2)
!ENTRY org.eclipse.core.resources 4 2 Jan 09, 2003 09:25:12.313
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.resources".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfo
(ClassFile.java:434)
	at org.eclipse.jdt.internal.compiler.ClassFile.addFieldInfos
(ClassFile.java:579)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode
(TypeDeclaration.java:694)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode
(TypeDeclaration.java:762)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode
(TypeDeclaration.java:709)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode
(TypeDeclaration.java:770)
	at 
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode
(CompilationUnitDeclaration.java:158)
	at org.eclipse.jdt.internal.compiler.Compiler.process
(Compiler.java:543)
	at org.eclipse.jdt.internal.compiler.Compiler.compile
(Compiler.java:337)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile
(AbstractImageBuilder.java:194)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile
(AbstractImageBuilder.java:144)
	at org.eclipse.jdt.internal.core.builder.IncrementalImageBuilder.build
(IncrementalImageBuilder.java:106)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildDeltas
(JavaBuilder.java:190)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build
(JavaBuilder.java:118)
	at org.eclipse.core.internal.events.BuildManager$2.run
(BuildManager.java:384)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:852)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:120)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:176)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:186)
	at org.eclipse.core.internal.events.BuildManager$1.run
(BuildManager.java:146)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:852)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:160)
	at org.eclipse.core.internal.events.BuildManager.build
(BuildManager.java:211)
	at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java:861)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1569)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:79)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation
(AbstractTextEditor.java:2790)
	at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperati
on(CompilationUnitEditor.java:849)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave
(CompilationUnitEditor.java:913)
	at org.eclipse.ui.internal.EditorManager$11.run
(EditorManager.java:1032)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:901)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:296)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:246)
	at org.eclipse.jface.window.ApplicationWindow$1.run
(ApplicationWindow.java:432)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:65)
	at org.eclipse.jface.window.ApplicationWindow.run
(ApplicationWindow.java:429)
	at org.eclipse.ui.internal.WorkbenchWindow.run
(WorkbenchWindow.java:1174)
	at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation
(EditorManager.java:907)
	at org.eclipse.ui.internal.EditorManager.saveEditor
(EditorManager.java:1037)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor
(WorkbenchPage.java:2143)
	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:30)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:769)
	at org.eclipse.ui.internal.WWinKeyBindingService.invoke
(WWinKeyBindingService.java:139)
	at org.eclipse.ui.internal.WWinKeyBindingService.pressed
(WWinKeyBindingService.java:120)
	at org.eclipse.ui.internal.WWinKeyBindingService$6.widgetSelected
(WWinKeyBindingService.java:376)
	at org.eclipse.ui.internal.AcceleratorMenu$2.handleEvent
(AcceleratorMenu.java:55)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:825)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1446)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1429)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)


I would finally add, that when using asserts elsewhere, I have had no 
problems.  This code compiled okay under v2.0.1 with the rest of the 
environment unchanged.
Duplicate of bug 28750. FYI we recently made a change to assertion support 
which exposed this long living bug (collision in between this$0 and class 
literal synthetic field).

This is fixed in latest and will be released in next integration build.
We will issue a patch in the meantime.


*** This bug has been marked as a duplicate of 28750 ***</WithStack>
    <WithOutStack>The following class causes a NullPointerException to be thrown:

public class AClass {
    
    private void aMethod() {
    	assert true : "hello";
    }
    
    private class AnInnerClass {
    	public void execute() {
    	    assert true : "hello";
    	}
    }
}

If the line containing the J2SE 1.4 assert is removed, compilation succeeds.

When the assert is uncommented, two symptoms occur:

1) When saving, a dialog appears- 
   Error: Save Failed:null
2) Try saving again, save succeeds, build starts, but fails- 
   Save Problems: Save could not be completed, Reason: Errors during build
   
These are the corresponding errors in the log file:
1)
   Details: !SESSION Jan 09, 2003 09:25:06.856 --------------------------------
-------------
java.version=1.4.0_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_GB
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:C:/eclipse/
!ENTRY org.eclipse.ui 4 4 Jan 09, 2003 09:25:06.856
!MESSAGE Save Failed
!ENTRY org.eclipse.ui 2 0 Jan 09, 2003 09:25:06.876
!MESSAGE Save Failed
!STACK 0

2)
!ENTRY org.eclipse.core.resources 4 2 Jan 09, 2003 09:25:12.313
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.resources".
!STACK 0



I would finally add, that when using asserts elsewhere, I have had no 
problems.  This code compiled okay under v2.0.1 with the rest of the 
environment unchanged.
Duplicate of bug 28750. FYI we recently made a change to assertion support 
which exposed this long living bug (collision in between this$0 and class 
literal synthetic field).

This is fixed in latest and will be released in next integration build.
We will issue a patch in the meantime.


*** This bug has been marked as a duplicate of 28750 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29198" />
    <CreationDate amount="2003-01-09 06:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Difficult to change character case of cached input values</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I used the incorrect case for a character in a cvs repository path that I was
defining.  It is subsiquently impossible to enter the correct path because
Eclipse insists on inserting the incorrect value into the field and does not
allow me to type over the incorrect character (when I replace the character it
is immediatly reverted back to the incorrect character and the cursor is thrown
to the end of the field).

In the end I managed to get it to work by manually editing the file
org.eclipse.team.cvs.core/.cvsProviderState, but this was inconvenient to say
the least.
Note that editing the file allowed me to correct the case of the letter in a bad
repsoitory path that I had saved.

I subsequently determined a way of fooling the UI into allowing me to replace
the character.  To do this I entered an additional character at the end of the
incorrect path, changed the incorrect character to the correct value, then went
to the end of the field and removed the additional character.  It seems that
this problem affects all fields that cache values in this manner - I have
changed the summary of this issue to reflect this.
I've never experienced such problems on Windows. It may be a Mac SWT problem 
related to the remembered dialog values. We will investigate.
I have verified that this does occur on the Mac. It seems that trying to change 
the case in a value that is in the remembered list for a text widget doesn't 
work. For example, if "foobar" was a previous value, then typing "fOo" will 
place "foobar" in the text widget (case change is ignored). Forwarding to SWT 
for comment.
This is the Mac behaviour when the native widget is created with the 
style "kHiComboBoxAutoCompletionAttribute".

We may need to remove this style.
*** Bug 32193 has been marked as a duplicate of this bug. ***
Fixed for RC1</WithStack>
    <WithOutStack>I used the incorrect case for a character in a cvs repository path that I was
defining.  It is subsiquently impossible to enter the correct path because
Eclipse insists on inserting the incorrect value into the field and does not
allow me to type over the incorrect character (when I replace the character it
is immediatly reverted back to the incorrect character and the cursor is thrown
to the end of the field).

In the end I managed to get it to work by manually editing the file
org.eclipse.team.cvs.core/.cvsProviderState, but this was inconvenient to say
the least.
Note that editing the file allowed me to correct the case of the letter in a bad
repsoitory path that I had saved.

I subsequently determined a way of fooling the UI into allowing me to replace
the character.  To do this I entered an additional character at the end of the
incorrect path, changed the incorrect character to the correct value, then went
to the end of the field and removed the additional character.  It seems that
this problem affects all fields that cache values in this manner - I have
changed the summary of this issue to reflect this.
I've never experienced such problems on Windows. It may be a Mac SWT problem 
related to the remembered dialog values. We will investigate.
I have verified that this does occur on the Mac. It seems that trying to change 
the case in a value that is in the remembered list for a text widget doesn't 
work. For example, if "foobar" was a previous value, then typing "fOo" will 
place "foobar" in the text widget (case change is ignored). Forwarding to SWT 
for comment.
This is the Mac behaviour when the native widget is created with the 
style "kHiComboBoxAutoCompletionAttribute".

We may need to remove this style.
*** Bug 32193 has been marked as a duplicate of this bug. ***
Fixed for RC1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29199" />
    <CreationDate amount="2003-01-09 06:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>I can't open Eclipse after the installation of Oracle 8.i</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I first installed Eclipse to my computer and I ran. There was no problem. After 
I installed Oracle 8.i. When I tried to open Eclipse, I saw this error :
JWM terminated Exit Code=2
C:\WINNT\system32\javaw.exe
Is there any information in workspace\.metadata\.log file?
from originator:

"There isn't  .log directory under .metadata directory."
The Oracle installation may have set your JAVA_HOME variable to the Windows vm 
which does not work with Eclipse.  Please try running Eclipse with a supported 
vm using the "-vm" command line argument:

eclipse.exe -vm c:\jdk1.3\bin\javaw.exe 

http://www.eclipse.org/eclipse/faq/eclipse-faq.html#users_3

Please reopen this bug if the problem persists.</WithStack>
    <WithOutStack>I first installed Eclipse to my computer and I ran. There was no problem. After 
I installed Oracle 8.i. When I tried to open Eclipse, I saw this error :
JWM terminated Exit Code=2
C:\WINNT\system32\javaw.exe
Is there any information in workspace\.metadata\.log file?
from originator:

"There isn't  .log directory under .metadata directory."
The Oracle installation may have set your JAVA_HOME variable to the Windows vm 
which does not work with Eclipse.  Please try running Eclipse with a supported 
vm using the "-vm" command line argument:

eclipse.exe -vm c:\jdk1.3\bin\javaw.exe 

http://www.eclipse.org/eclipse/faq/eclipse-faq.html#users_3

Please reopen this bug if the problem persists.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="29200" />
    <CreationDate amount="2003-01-09 06:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE from 'Occurences in File'</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437338527417">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.ui.search.SearchUsagesInFileAction$NameUsagesFinder.match(SearchUsagesInFileAction.java(Compiled Code))</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.ui.search.SearchUsagesInFileAction$NameUsagesFinder.visit(SearchUsagesInFileAction.java(Compiled Code))</Frame>
          <Frame depth="2">org.eclipse.jdt.core.dom.SimpleName.accept0(SimpleName.java(Compiled Code))</Frame>
          <Frame depth="3">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="4">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="5">org.eclipse.jdt.core.dom.LabeledStatement.accept0(LabeledStatement.java:87)</Frame>
          <Frame depth="6">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="7">org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="8">org.eclipse.jdt.core.dom.Block.accept0(Block.java:81)</Frame>
          <Frame depth="9">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="10">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="11">org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:100)</Frame>
          <Frame depth="12">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="13">org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="14">org.eclipse.jdt.core.dom.Block.accept0(Block.java:81)</Frame>
          <Frame depth="15">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="16">org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="17">org.eclipse.jdt.core.dom.MethodDeclaration.accept0(MethodDeclaration.java:179)</Frame>
          <Frame depth="18">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="19">org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="20">org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:161)</Frame>
          <Frame depth="21">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="22">org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="23">org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:158)</Frame>
          <Frame depth="24">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))</Frame>
          <Frame depth="25">org.eclipse.jdt.internal.ui.search.SearchUsagesInFileAction$1.run(SearchUsagesInFileAction.java:209)</Frame>
          <Frame depth="26">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1564)</Frame>
          <Frame depth="27">org.eclipse.jdt.internal.ui.search.SearchUsagesInFileAction$2.run(SearchUsagesInFileAction.java:233)</Frame>
          <Frame depth="28">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java(Compiled Code))</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.ui.search.SearchUsagesInFileAction.run(SearchUsagesInFileAction.java:229)</Frame>
          <Frame depth="30">org.eclipse.jdt.internal.ui.search.SearchUsagesInFileAction.run(SearchUsagesInFileAction.java:225)</Frame>
          <Frame depth="31">org.eclipse.jface.action.Action.runWithEvent(Action.java:769)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.WWinKeyBindingService.invoke(WWinKeyBindingService.java:139)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.WWinKeyBindingService.pressed(WWinKeyBindingService.java:120)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.WWinKeyBindingService$6.widgetSelected(WWinKeyBindingService.java:376)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.AcceleratorMenu$2.handleEvent(AcceleratorMenu.java:55)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="40">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="41">org.eclipse.ui.internal.Workbench.run(Workbench.java:1450)</Frame>
          <Frame depth="42">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="43">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="44">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="46">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="47">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Found in my log (don't have the corresponding source anymore)

java.lang.NullPointerException
	at 
org.eclipse.jdt.internal.ui.search.SearchUsagesInFileAction$NameUsagesFinder.mat
ch(SearchUsagesInFileAction.java(Compiled Code))
	at 
org.eclipse.jdt.internal.ui.search.SearchUsagesInFileAction$NameUsagesFinder.vis
it(SearchUsagesInFileAction.java(Compiled Code))
	at org.eclipse.jdt.core.dom.SimpleName.accept0(SimpleName.java(Compiled 
Code))
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled 
Code))
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled 
Code))
	at org.eclipse.jdt.core.dom.LabeledStatement.accept0
(LabeledStatement.java:87)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java
(Compiled Code))
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:81)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled 
Code))
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled 
Code))
	at org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:100)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java
(Compiled Code))
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:81)
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled 
Code))
	at org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java(Compiled 
Code))
	at org.eclipse.jdt.core.dom.MethodDeclaration.accept0
(MethodDeclaration.java:179)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java
(Compiled Code))
	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0
(TypeDeclaration.java:161)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))
	at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java
(Compiled Code))
	at org.eclipse.jdt.core.dom.CompilationUnit.accept0
(CompilationUnit.java:158)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java(Compiled Code))
	at org.eclipse.jdt.internal.ui.search.SearchUsagesInFileAction$1.run
(SearchUsagesInFileAction.java:209)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1564)
	at org.eclipse.jdt.internal.ui.search.SearchUsagesInFileAction$2.run
(SearchUsagesInFileAction.java:233)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java
(Compiled Code))
	at org.eclipse.jdt.internal.ui.search.SearchUsagesInFileAction.run
(SearchUsagesInFileAction.java:229)
	at org.eclipse.jdt.internal.ui.search.SearchUsagesInFileAction.run
(SearchUsagesInFileAction.java:225)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:769)
	at org.eclipse.ui.internal.WWinKeyBindingService.invoke
(WWinKeyBindingService.java:139)
	at org.eclipse.ui.internal.WWinKeyBindingService.pressed
(WWinKeyBindingService.java:120)
	at org.eclipse.ui.internal.WWinKeyBindingService$6.widgetSelected
(WWinKeyBindingService.java:376)
	at org.eclipse.ui.internal.AcceleratorMenu$2.handleEvent
(AcceleratorMenu.java:55)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1450)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
added null check
*** Bug 29202 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Found in my log (don't have the corresponding source anymore)


added null check
*** Bug 29202 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
</infozilla-output>

