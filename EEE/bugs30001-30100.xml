<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="30001" />
    <CreationDate amount="2003-01-22 12:49:00 -0500" />
    <DupId amount="25387" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.0.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>FS Import doesn't keep permissions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When you perform an Import of a File System into a project in Eclipse, it does
not maintain the file permissions.  So, for example, if you bring in a shell
script that is executable, the imported file will not be executable.  This can
cause imported projects to not build.


*** This bug has been marked as a duplicate of 25387 ***</WithStack>
    <WithOutStack>When you perform an Import of a File System into a project in Eclipse, it does
not maintain the file permissions.  So, for example, if you bring in a shell
script that is executable, the imported file will not be executable.  This can
cause imported projects to not build.


*** This bug has been marked as a duplicate of 25387 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30002" />
    <CreationDate amount="2003-01-22 13:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[View Mgmt] Support for Show In...</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="14">
      <source_code type="multicomment">
        <location start="2419" end="2509" />
        <code>/**
 * This interface must be implemented by views listed in the Show In... 
prompter.
 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="2536" end="2755" />
        <code>/**
     * Shows the given selection in this view.
     *
     * @param selection the selection to show
     * @return &lt;code&gt;true&lt;/code&gt; if the selection could be shown,
     *   &lt;code&gt;false&lt;/code&gt; otherwise
     */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2756" end="2795" />
        <code>boolean show(ISelection selection);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="3271" end="3389" />
        <code>/**
 * Parts which need to provide a particular selection to a Show In...
 * target can implement this interface.
 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="3416" end="3576" />
        <code>/**
     * Returns the selection to pass to the &lt;code&gt;IShowInTarget&lt;/code&gt;.
     * Returns &lt;code&gt;null&lt;/code&gt; if there is no valid selection to show.
     */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3577" end="3613" />
        <code>ISelection getShowInSelection();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="7915" end="7953" />
        <code>boolean select(IEditorPart part);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="11109" end="11304" />
        <code>/**
 * Carries the context for the Show In... action.
 * The default implementation carries an input and a selection.
 * Subclasses may extend.
 *
 * @see IShowInSource
 * @see IShowInTarget
 */</code>
      </source_code>
      <source_code type="class">
        <location start="11305" end="11645" />
        <code>public class ShowInContext {
    /**
     * Constructs a new ShowInContext with the given input and selection.
     */
    public ShowInContext(Object input, ISelection selection);

    /**
     * Returns the input.
     */
    public Object getInput();

    /**
     * Returns the selection.
     */
    public ISelection getSelection();
}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="11646" end="11762" />
        <code>/**
 * Parts which need to provide a particular context to a Show In...
 * target can implement this interface.
 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="11796" end="11833" />
        <code>ShowInContext getShowInContext();</code>
      </source_code>
      <source_code type="multicomment">
        <location start="11836" end="11950" />
        <code>/**
 * This interface must be implemented by Show In... targets (parts listed
 * in the Show In... prompter).
 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="11977" end="12190" />
        <code>/**
     * Shows the given context in this target.
     *
     * @param context the context to show
     * @return &lt;code&gt;true&lt;/code&gt; if the context could be shown,
     *   &lt;code&gt;false&lt;/code&gt; otherwise
     */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="12191" end="12231" />
        <code>boolean show(ShowInContext context);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="27">
      <Enumeration lines="1">
        <Lines>
          <Line>(e.g. may be doing different things in Navigator vs. Package Explorer)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>1. ISetSelectionTarget is primarily used for showing newly created items (via a</Line>
          <Line>wizard).  Views may want to participate in Show In... without having to</Line>
          <Line>participate in showing newly created items.</Line>
          <Line>2. Since we need IShowInSource, IShowInTarget is a better name.</Line>
          <Line>3. It's helpful to have the return code indicating success or failure, so that</Line>
          <Line>the workbench can handle it accordingly.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>1. It’s more convoluted than just letting the source indicate the selection it</Line>
          <Line>wants to show.</Line>
          <Line>2. It binds IShowInTarget too tightly to editors.  We might want to support</Line>
          <Line>Show In… from view to view in the future (e.g. show Package Explorer selection</Line>
          <Line>in the Navigator).  In fact, with the proposed interfaces, it would be trivial</Line>
          <Line>to do so for 2.1.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="48">
        <Lines>
          <Line>1) The Show in... action should also be available from the editor's context</Line>
          <Line>menu. The rationale is that Show in Package Explorer is currently available</Line>
          <Line>from the context menu. It is frequently used and offering the action from the</Line>
          <Line>menu bar only would remove the convenience of the context menu. This would</Line>
          <Line>require that a Show In action is surfaced as API (similar as OpenWithMenu) so</Line>
          <Line>that editors can include it in their menu.</Line>
          <Line />
          <Line>2) Will the list of views in Show in... only include Views that implement the</Line>
          <Line>IShowInTarget interface or will it include all Views (available in Window&gt;Show</Line>
          <Line>View). For example, the Task, Search, or Console view should not show in the</Line>
          <Line>menu.</Line>
          <Line />
          <Line>3) Assuming we do 2) this will require that the ViewReferences of all the Views</Line>
          <Line>in the list will be restored so that the interface check can be performed. To</Line>
          <Line>avoid the early restore/creation there could be an optional attribute in the</Line>
          <Line>Views extension point that allows a View to declare whether is supports Show in.</Line>
          <Line />
          <Line>4) Show in Target granularity</Line>
          <Line>We are currently doing a fine grained selection in the PackageExplorer. We will</Line>
          <Line>likely change it to only show the IEditorInput. Doing a fine grained selection</Line>
          <Line>based on the text selection results in a signifcant tree expansion that can</Line>
          <Line>result in a loss of context. This means:</Line>
          <Line>Show In&gt;PackageExplorer: would only select the EditorInput</Line>
          <Line>Show In&gt;Outline: shows the text selection of the editor.</Line>
          <Line>What I'm getting at here is that the Target needs to be able to decide what to</Line>
          <Line>show and not the source. As I understand the IShowInSource interface it would</Line>
          <Line>be able to "dictate" what is shown.</Line>
          <Line />
          <Line>5) Did you consider a more explicit interface for IShowInTarget?</Line>
          <Line />
          <Line>interface IShowInTarget {</Line>
          <Line />
          <Line>}</Line>
          <Line />
          <Line>The existing interface with an ISelection where the first element is an</Line>
          <Line>IEditorInput is implicit and leads to ugly code, i.e., the PackageExplorer</Line>
          <Line>needs to check whether the first element is an IEditorInput or a JavaElement.</Line>
          <Line>With the above interface the target can get at the EditorInput from the part</Line>
          <Line>and it could also negotiate other interfaces via an adapter on the IEditorPart.</Line>
          <Line />
          <Line>To support Show In from Views the above interface could be generalized to:</Line>
          <Line>select(IWorkbenchPart)</Line>
          <Line />
          <Line>The ShowInSource interface would still make sense but it would be up to the</Line>
          <Line>target to make use of it.</Line>
          <Line />
          <Line>6) the idea to also support adapters is good</Line>
          <Line>1) OK, we’ll make the action API.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="37">
        <Lines>
          <Line>1) OK, we’ll make the action API.</Line>
          <Line />
          <Line>2) and 3) For views to show up in the list, they have to be explicitly added to</Line>
          <Line>the perspective layout, either in code or via new support in</Line>
          <Line>perspectiveExtensions, in similar way to how the Show View submenu is</Line>
          <Line>populated.  For example, the Java perspective could have Show In / Navigator,</Line>
          <Line>even if the Navigator is not open.  It will not check views dynamically, and so</Line>
          <Line>does not have issues with plugin startup.  There is no change to the views</Line>
          <Line>extension point, however the view class must implement IShowInTarget if it gets</Line>
          <Line>added to the list.</Line>
          <Line />
          <Line>4) For this case, the Java Editor’s IShowInSource would yield a selection</Line>
          <Line>containing the current member (as a Java model element).  The Package Explorer</Line>
          <Line>would choose to show only the containing compilation unit.  The Outline would</Line>
          <Line>show the member.  So, the source gets to say what it wants shown (at as fine a</Line>
          <Line>granularity as possible), but the targets can still choose what granularity</Line>
          <Line>they want to show (assuming the selection has enough info to obtain the parent</Line>
          <Line>elements).</Line>
          <Line />
          <Line>5) I didn’t mean to suggest that the selection would contain both the editor</Line>
          <Line>input and the text selection.  I was imagining that, by default, the selection</Line>
          <Line>would contain just the editor input, unless the source implemented</Line>
          <Line>IShowInSource.   I did consider an API that would get passed both the editor</Line>
          <Line>input and the selection as separate arguments.  I also considered simply</Line>
          <Line>passing the editor, which would allow any required info to be retrieved.</Line>
          <Line>However, these both restrict the API to working only from editors to views,</Line>
          <Line>which is why I proposed IShowInSource.  The source can put the appropriate</Line>
          <Line>model elements in the selection (e.g. Java model elements), and the targets get</Line>
          <Line>to decide how best to show them.  If we generalized it to pass the</Line>
          <Line>IWorkbenchPart for the source, then it wouldn’t be restricted to editors, and</Line>
          <Line>targets could pull out any info they need.  However, I think targets would end</Line>
          <Line>up having special case code for different kinds of source parts, and could only</Line>
          <Line>handle the kinds of source parts they know about.  I think it makes more sense</Line>
          <Line>for the mechanism to trade in terms of model elements rather than workbench</Line>
          <Line>parts, so the parts are more decoupled.  If we provide IShowInSource, allowing</Line>
          <Line>the source to specify the appropriate model elements, I don’t see any benefit</Line>
          <Line>to having the target be passed the workbench part rather than the selection.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>1) Shouldn't this be part of the perspective customization dialog too?</Line>
          <Line>2) Couldn't the opened views (the target) be included to the show in dialog as</Line>
          <Line>well even if they are not defined in xml?</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>1) Yes, but this will not be in for M5.  Depending on other priorities, it may</Line>
          <Line>not be in for 2.1 at all.</Line>
          <Line>2) Will have to consider this.  See also comment #19.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="56">
        <Lines>
          <Line>1. Automatic back-linking.</Line>
          <Line>Pros:</Line>
          <Line>- doesn't require any extra clicks to show editor input in view</Line>
          <Line>- always in sync between editor and view</Line>
          <Line>Cons:</Line>
          <Line>- surprising loss of context when you close an editor and it warps you to the</Line>
          <Line>selection for the newly active editor (sometimes you want this, sometimes you</Line>
          <Line>don't)</Line>
          <Line>- doesn't support view-to-view linking (it could, but it would probably be too</Line>
          <Line>confusing)</Line>
          <Line>- requires preferences (for each view) to turn it off, since not all users like</Line>
          <Line>this mode of operation</Line>
          <Line />
          <Line>2. Explicit Show In XYZ view actions (either on the context menu or the</Line>
          <Line>Navigate menu) provided by the source part.</Line>
          <Line>Pros:</Line>
          <Line>- straightforward</Line>
          <Line>- quick to use via mouse if on context menu (not too bad via keyboard either if</Line>
          <Line>mnemonics assigned well)</Line>
          <Line>- can assign keybindings to the individual actions</Line>
          <Line>Cons:</Line>
          <Line>- its "egoistic" -- source part has to hardwire support for its preferred</Line>
          <Line>targets</Line>
          <Line>- doesn't scale well when there are many potential targets</Line>
          <Line />
          <Line>3. Sync With Editor action in the Navigate menu and on the view toolbar (we had</Line>
          <Line>this in M4, supported by the Navigator)</Line>
          <Line>Pros:</Line>
          <Line>- one click syncs you up (if view is visible and is not a fast view)</Line>
          <Line>Cons:</Line>
          <Line>- slower than option 2 if view is not open or is a fast view</Line>
          <Line>- not great for keyboard navigation: even if you assign a keybinding to the</Line>
          <Line>action, the target view must still be activated first</Line>
          <Line>- requires every target view to add a button to their toolbar (visual clutter)</Line>
          <Line />
          <Line>4. Sync With Views action for the editor (broadcasts to all targets; what Ed</Line>
          <Line>suggests)</Line>
          <Line>Pros:</Line>
          <Line>- one click syncs you up (in all interested views, even if obscured)</Line>
          <Line>- can assign a keybinding to it</Line>
          <Line>- scales well</Line>
          <Line>Cons:</Line>
          <Line>- may cause loss of context since you may not want all views to be sync'ed up</Line>
          <Line>(e.g. may be doing different things in Navigator vs. Package Explorer)</Line>
          <Line />
          <Line>5. Show In... (user chooses target)</Line>
          <Line>Pros:</Line>
          <Line>- quick to invoke (assuming mouse users will use accelerator with left hand, or</Line>
          <Line>reassign it if right handed)</Line>
          <Line>- allows explicit selection of target</Line>
          <Line>- remembers last selection, so should be as quick as dedicated Show in XYZ</Line>
          <Line>action if you're usually going to the same one</Line>
          <Line>- scales well (no extra UI in sources or targets, and doesn't require prefs)</Line>
          <Line>- allows more synergies than the other options (view to view navigation)</Line>
          <Line>Cons:</Line>
          <Line>- must be manually invoked (i.e. it's not option 1)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="19">
        <Lines>
          <Line>1. Inherit the setting from the window where you choose New Window.  This only</Line>
          <Line>addresses the New Window case and not the close/reopen case.  We also don't</Line>
          <Line>really have any good mechanisms or policies for managing the inheritance of</Line>
          <Line>settings between windows.</Line>
          <Line />
          <Line>2. Remember the last setting as a global (persisted, e.g. using the dialog</Line>
          <Line>store).  This would address both cases, but may be confusing to the user.  E.g.</Line>
          <Line>if I turn it on in one window, the turn it off in another window, the next</Line>
          <Line>window I open will have it off, even if I open the new window from the window</Line>
          <Line>where it's on.</Line>
          <Line />
          <Line>3. Use the preference override mechanism.  Note that we have kept the old</Line>
          <Line>linking preference internally, to allow products to override the default</Line>
          <Line>setting.  See IWorkbenchPreferenceConstants.LINK_NAVIGATOR_TO_EDITOR.</Line>
          <Line>This could also be used to meet Philippe's needs, but it's a hidden feature</Line>
          <Line>(not accessible from the UI).</Line>
          <Line>You can add the following to the plugin_customization.ini of the primary</Line>
          <Line>feature's plugin (org.eclipse.platform):</Line>
          <Line>org.eclipse.ui/LINK_NAVIGATOR_TO_EDITOR=true</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- there is a global Sync With Editor action which the Navigator hooks</Line>
          <Line>- the Navigator also has an explicit Sync With Editor action</Line>
          <Line>- the Package Explorer has a preference for automatic linking</Line>
          <Line>- the Java editor has a Show in Package Explorer context menu action</Line>
          <Line>- the Java Coding action set (which is associated with the Java editor) adds</Line>
          <Line>Show in Package Explorer and Show in Navigator View actions to the Navigate menu</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="9">
        <Lines>
          <Line>- the Navigator and Package Explorer are inconsistent</Line>
          <Line>- Sync With Editor requires that the view be active, however navigation is more</Line>
          <Line>typically done from editor to view</Line>
          <Line>- Sync With Editor requires that each view hook the global action, and, for</Line>
          <Line>consistency, add the action to their toolbar</Line>
          <Line>- having action sets adding multiple Show in XYZ items to the Navigate menu</Line>
          <Line>doesn't scale well</Line>
          <Line>- editors have to choose which Show in XYZ actions they will put in their</Line>
          <Line>context menu</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="10">
        <Lines>
          <Line>- The IShowInSource and IShowInTarget interfaces are obtained by first checking</Line>
          <Line>to see if the part in question directly implements the interface (i.e. part</Line>
          <Line>instanceof IShowInTarget).  If not, it checks for an adapter on the part (i.e.</Line>
          <Line>part.getAdapter(IShowInTarget.class)).  Using adapters allows the part to avoid</Line>
          <Line>having the interface methods as public methods on its class, and can be used to</Line>
          <Line>resolve method naming conflicts.</Line>
          <Line>There are some more problems with the current state of affairs (the proposal</Line>
          <Line>also covers these cases):</Line>
          <Line>- the current solution doesn't allow that a view contributed by someone else</Line>
          <Line>can be given the same status as the Package Explorer.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="19">
        <Lines>
          <Line>- remove Show In Navigator View and Show In Package Explorer from the Java</Line>
          <Line>Coding action set</Line>
          <Line>- add the following perspectiveExtensions to the Java and Java Browsing</Line>
          <Line>perspectives:</Line>
          <Line>&lt;perspectiveExtension</Line>
          <Line>targetID="org.eclipse.jdt.ui.JavaPerspective"&gt;</Line>
          <Line>&lt;showInPart id="org.eclipse.ui.views.ResourceNavigator"/&gt;</Line>
          <Line>&lt;showInPart id="org.eclipse.jdt.ui.PackageExplorer"/&gt;</Line>
          <Line>&lt;/perspectiveExtension&gt;</Line>
          <Line>&lt;perspectiveExtension</Line>
          <Line>targetID="org.eclipse.jdt.ui.JavaBrowsingPerspective"&gt;</Line>
          <Line>&lt;showInPart id="org.eclipse.ui.views.ResourceNavigator"/&gt;</Line>
          <Line>&lt;showInPart id="org.eclipse.jdt.ui.PackageExplorer"/&gt;</Line>
          <Line>&lt;/perspectiveExtension&gt;</Line>
          <Line>- change Package Explorer to provide an IShowInTarget (views in the Show In</Line>
          <Line>list must implement IShowInTarget)</Line>
          <Line>- consider providing an IShowInSource as well, so Show In is enabled when the</Line>
          <Line>Package Explorer is active (see ResourceNavigator for an example)</Line>
          <Line>- consider adding support for the Hierarchy view as well</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- the Show In list is initially unsorted (should be alpha sorted), however it</Line>
          <Line>does correctly put the last chosen item at the top, and remembers the list on</Line>
          <Line>a per-perspective basis</Line>
          <Line>- cannot customize the list in the perspective customization dialog</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="8">
        <Lines>
          <Line>- removed the back linking option</Line>
          <Line>- removed the show in package explorer from the context menu</Line>
          <Line>- removed the show in package explorer/navigator from the action set</Line>
          <Line>There is one problem in that IShowInSource only works in the adapter case. It</Line>
          <Line>doens't work when the interface is implemented directly. This is inconsistent</Line>
          <Line>with IShowInTarget.</Line>
          <Line>Fixed ShowInAction.getContext to use getShowInSource, which does both the</Line>
          <Line>instanceof check and the IAdaptable trick.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- implement lightweight prompter (as switch in ListDialog?)</Line>
          <Line>- proper Javadoc for ListDialog</Line>
          <Line>- write help content for action and dialog</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- Window -&gt; Reset Perspective did not do the trick</Line>
          <Line>- Window -&gt; Preferences -&gt; Workbench -&gt; Perspectives: the "Reset" button is</Line>
          <Line>disabled for my perspective</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="10">
        <Lines>
          <Line>- doesn't require any extra clicks to show editor input in view</Line>
          <Line>- always in sync between editor and view</Line>
          <Line>Cons:</Line>
          <Line>- surprising loss of context when you close an editor and it warps you to the</Line>
          <Line>selection for the newly active editor (sometimes you want this, sometimes you</Line>
          <Line>don't)</Line>
          <Line>- doesn't support view-to-view linking (it could, but it would probably be too</Line>
          <Line>confusing)</Line>
          <Line>- requires preferences (for each view) to turn it off, since not all users like</Line>
          <Line>this mode of operation</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="8">
        <Lines>
          <Line>- straightforward</Line>
          <Line>- quick to use via mouse if on context menu (not too bad via keyboard either if</Line>
          <Line>mnemonics assigned well)</Line>
          <Line>- can assign keybindings to the individual actions</Line>
          <Line>Cons:</Line>
          <Line>- its "egoistic" -- source part has to hardwire support for its preferred</Line>
          <Line>targets</Line>
          <Line>- doesn't scale well when there are many potential targets</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- one click syncs you up (if view is visible and is not a fast view)</Line>
          <Line>Cons:</Line>
          <Line>- slower than option 2 if view is not open or is a fast view</Line>
          <Line>- not great for keyboard navigation: even if you assign a keybinding to the</Line>
          <Line>action, the target view must still be activated first</Line>
          <Line>- requires every target view to add a button to their toolbar (visual clutter)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- one click syncs you up (in all interested views, even if obscured)</Line>
          <Line>- can assign a keybinding to it</Line>
          <Line>- scales well</Line>
          <Line>Cons:</Line>
          <Line>- may cause loss of context since you may not want all views to be sync'ed up</Line>
          <Line>(e.g. may be doing different things in Navigator vs. Package Explorer)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="9">
        <Lines>
          <Line>- quick to invoke (assuming mouse users will use accelerator with left hand, or</Line>
          <Line>reassign it if right handed)</Line>
          <Line>- allows explicit selection of target</Line>
          <Line>- remembers last selection, so should be as quick as dedicated Show in XYZ</Line>
          <Line>action if you're usually going to the same one</Line>
          <Line>- scales well (no extra UI in sources or targets, and doesn't require prefs)</Line>
          <Line>- allows more synergies than the other options (view to view navigation)</Line>
          <Line>Cons:</Line>
          <Line>- must be manually invoked (i.e. it's not option 1)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- Change to using a submenu for Show In rather than a dialog or lightweight</Line>
          <Line>prompter.  There will be no accelerator, but mnemonics can be used.</Line>
          <Line>- Items in the submenu will be arranged in Most Recently Used order.</Line>
          <Line>- The order will be persisted with the perspective.</Line>
          <Line>- The Navigator and Package Explorer will be listed as Show In targets by the</Line>
          <Line>Java editor, so they will appear when the Java editor is active, regardless of</Line>
          <Line>the current perspective.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- Since this will be the most commonly used Show In item from the Java editor,</Line>
          <Line>the Java editor will add "Show in Package Explorer" back to its context menu.</Line>
          <Line>- In addition, it will register this action with the keybinding service,</Line>
          <Line>allowing the user to assign it an accelerator key (it will have none by</Line>
          <Line>default).</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="17">
        <Lines>
          <Line>- Add back-linking back to the Navigator and Package Explorer, but not as a</Line>
          <Line>global preference setting.</Line>
          <Line>- It will now be a per-view toggle setting, available on the toolbar (and also</Line>
          <Line>the view/triangle menu, for accessibility).  Note that this also allows one-off</Line>
          <Line>syncs (for those that have linking off) by clicking on the button twice.</Line>
          <Line>- The tooltip / menu item name will be "Link With Editor".</Line>
          <Line>- The setting will be remembered with the view.</Line>
          <Line>- The default setting will be off (no back-linking) in the Navigator and</Line>
          <Line>Package Explorer.</Line>
          <Line>- The Java Browsing views will support this as well, but may choose to have it</Line>
          <Line>on by default.</Line>
          <Line>- As was the case in 2.0, the setting will only control whether back-linking is</Line>
          <Line>on (i.e. a change in editor affects the selection in the view).  Forward</Line>
          <Line>linking will always be on (a change in selection in the view brings the</Line>
          <Line>corresponding editor to front if it is already open).</Line>
          <Line>- Other Navigator-like views in other Eclipse-based products will be encouraged</Line>
          <Line>to support this.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="9">
        <Lines>
          <Line>- back linking is stored per view.  Back linking is on by default</Line>
          <Line>- the back linking toggle isn't available in the toolbar, but</Line>
          <Line>only in the view menu. The rationale is that these views</Line>
          <Line>are almost always used with back linking. Adding a back linking</Line>
          <Line>control to the view's toolbar would have made this option too prominent.</Line>
          <Line />
          <Line>* Type hierarchy view:</Line>
          <Line>- back linking stored per view. Off by default.</Line>
          <Line>- the back linking toggle is only available from the view menu.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- back linking stored per view. Off by default.</Line>
          <Line>- the back linking toggle is only available from the view menu.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>M4

There are currently several mechanisms for synchronizing the selection between 
editors and views:
- there is a global Sync With Editor action which the Navigator hooks
- the Navigator also has an explicit Sync With Editor action
- the Package Explorer has a preference for automatic linking
- the Java editor has a Show in Package Explorer context menu action 
- the Java Coding action set (which is associated with the Java editor) adds 
Show in Package Explorer and Show in Navigator View actions to the Navigate menu

There are several problems with this state of affairs:
- the Navigator and Package Explorer are inconsistent
- Sync With Editor requires that the view be active, however navigation is more 
typically done from editor to view
- Sync With Editor requires that each view hook the global action, and, for 
consistency, add the action to their toolbar
- having action sets adding multiple Show in XYZ items to the Navigate menu 
doesn't scale well
- editors have to choose which Show in XYZ actions they will put in their 
context menu

Here is a proposal for improving this situation.

- We remove the Sync With Editor action from the Navigate menu and the 
Navigator.

- We add a Show In... action to the Navigate menu, which is enabled iff an 
editor is active.

- Show In... is assigned an accelerator, ideally one that can be invoked with 
the left hand, so that the right hand can move to the arrow keys simultaneously 
(any suggestions?)

- When activated, Show In... pops up a small list of applicable views, with a 
heading "Show In" (this will look similar to the Ctrl+F6/F7/F8 switchers, but 
will not be spring loaded).

- The list is initially sorted alphabetically (using the collator for the 
default locale), but when an item is chosen it moves to the top of the list 
(MRU order).  The order is remembered for each perspective, and is persisted 
across shutdown and restart.  Choosing an item in one perspective does not 
affect the order in other perspectives.

- The list of views to show is perspective-sensitive, and is populated in much 
the same way as the Window &gt; Show View submenu.  You can add items 
programmatically in the perspective factory, or declaratively via the 
perspectiveExtensions extension point.  Items will be added by specifying the 
view ID.  The view must implement a particular interface (see below).

- The view class must implement a new interface:
/**
 * This interface must be implemented by views listed in the Show In... 
prompter.
 */
interface IShowInTarget {
    /**
     * Shows the given selection in this view.
     *
     * @param selection the selection to show
     * @return &lt;code&gt;true&lt;/code&gt; if the selection could be shown,
     *   &lt;code&gt;false&lt;/code&gt; otherwise
     */
    boolean show(ISelection selection);
}

By default, the selection passed is a StructuredSelection containing the source 
editor's input (and not its selection).  If show returns false, the workbench 
simply generates a system beep.

Passing the editor input is sufficient for the Navigator (FileEditorInput 
adapts to IResource), but is not sufficient for the Java editor and Package 
Explorer, which work in terms of fine grained Java model elements.  To support 
this scenario, there is another new interface:

/**
 * Parts which need to provide a particular selection to a Show In...
 * target can implement this interface.
 */
interface IShowInSource {
    /**
     * Returns the selection to pass to the &lt;code&gt;IShowInTarget&lt;/code&gt;.
     * Returns &lt;code&gt;null&lt;/code&gt; if there is no valid selection to show.
     */
    ISelection getShowInSelection();
}

We considered using the existing interface ISetSelectionTarget, which is 
remarkably similar to IShowInTarget, but decided not to for 3 reasons:
1. ISetSelectionTarget is primarily used for showing newly created items (via a 
wizard).  Views may want to participate in Show In... without having to 
participate in showing newly created items.
2. Since we need IShowInSource, IShowInTarget is a better name.
3. It's helpful to have the return code indicating success or failure, so that 
the workbench can handle it accordingly.

For IShowInTarget, we considered passing not just a selection, but also the 
editor input, e.g. show(IEditorInput input, ISelection selection).  With this 
approach, the Package Explorer would get the Java Editor’s input and its 
TextSelection (obtained from the editor’s selection provider) and could map to 
the Java element using the editor input and text selection range.  We decided 
against this approach for two reasons:
1. It’s more convoluted than just letting the source indicate the selection it 
wants to show.
2. It binds IShowInTarget too tightly to editors.  We might want to support 
Show In… from view to view in the future (e.g. show Package Explorer selection 
in the Navigator).  In fact, with the proposed interfaces, it would be trivial 
to do so for 2.1.

- For 2.1, there will be no further enablement rules for the Show In items.
For example, the Java perspective will list the Package Explorer and Navigator, 
and these will always appear as enabled in the Show In... list.
However, these views may not be applicable in all situations (e.g. an external 
class file, or a repository file).
For 2.1, the target would still be notified but would return false, causing the 
workbench to generate a system beep.

- The IShowInSource and IShowInTarget interfaces are obtained by first checking 
to see if the part in question directly implements the interface (i.e. part 
instanceof IShowInTarget).  If not, it checks for an adapter on the part (i.e. 
part.getAdapter(IShowInTarget.class)).  Using adapters allows the part to avoid 
having the interface methods as public methods on its class, and can be used to 
resolve method naming conflicts.
There are some more problems with the current state of affairs (the proposal 
also covers these cases):
- the current solution doesn't allow that a view contributed by someone else 
can be given the same status as the Package Explorer.

- the current solution is incomplete, there is a Show In Package explorer 
action but there is no Show In Outline for example.


Comments on the proposal:
1) The Show in... action should also be available from the editor's context 
menu. The rationale is that Show in Package Explorer is currently available 
from the context menu. It is frequently used and offering the action from the 
menu bar only would remove the convenience of the context menu. This would 
require that a Show In action is surfaced as API (similar as OpenWithMenu) so 
that editors can include it in their menu.

2) Will the list of views in Show in... only include Views that implement the 
IShowInTarget interface or will it include all Views (available in Window&gt;Show 
View). For example, the Task, Search, or Console view should not show in the 
menu. 

3) Assuming we do 2) this will require that the ViewReferences of all the Views 
in the list will be restored so that the interface check can be performed. To 
avoid the early restore/creation there could be an optional attribute in the 
Views extension point that allows a View to declare whether is supports Show in.

4) Show in Target granularity
We are currently doing a fine grained selection in the PackageExplorer. We will 
likely change it to only show the IEditorInput. Doing a fine grained selection 
based on the text selection results in a signifcant tree expansion that can 
result in a loss of context. This means:
Show In&gt;PackageExplorer: would only select the EditorInput
Show In&gt;Outline: shows the text selection of the editor.
What I'm getting at here is that the Target needs to be able to decide what to 
show and not the source. As I understand the IShowInSource interface it would 
be able to "dictate" what is shown.

5) Did you consider a more explicit interface for IShowInTarget?

interface IShowInTarget {
     boolean select(IEditorPart part);
}

The existing interface with an ISelection where the first element is an 
IEditorInput is implicit and leads to ugly code, i.e., the PackageExplorer 
needs to check whether the first element is an IEditorInput or a JavaElement. 
With the above interface the target can get at the EditorInput from the part 
and it could also negotiate other interfaces via an adapter on the IEditorPart.

To support Show In from Views the above interface could be generalized to:
   select(IWorkbenchPart)

The ShowInSource interface would still make sense but it would be up to the 
target to make use of it.

6) the idea to also support adapters is good
1) OK, we’ll make the action API.

2) and 3) For views to show up in the list, they have to be explicitly added to 
the perspective layout, either in code or via new support in 
perspectiveExtensions, in similar way to how the Show View submenu is 
populated.  For example, the Java perspective could have Show In / Navigator, 
even if the Navigator is not open.  It will not check views dynamically, and so 
does not have issues with plugin startup.  There is no change to the views 
extension point, however the view class must implement IShowInTarget if it gets 
added to the list.

4) For this case, the Java Editor’s IShowInSource would yield a selection 
containing the current member (as a Java model element).  The Package Explorer 
would choose to show only the containing compilation unit.  The Outline would 
show the member.  So, the source gets to say what it wants shown (at as fine a 
granularity as possible), but the targets can still choose what granularity 
they want to show (assuming the selection has enough info to obtain the parent 
elements).

5) I didn’t mean to suggest that the selection would contain both the editor 
input and the text selection.  I was imagining that, by default, the selection 
would contain just the editor input, unless the source implemented 
IShowInSource.   I did consider an API that would get passed both the editor 
input and the selection as separate arguments.  I also considered simply 
passing the editor, which would allow any required info to be retrieved.  
However, these both restrict the API to working only from editors to views, 
which is why I proposed IShowInSource.  The source can put the appropriate 
model elements in the selection (e.g. Java model elements), and the targets get 
to decide how best to show them.  If we generalized it to pass the 
IWorkbenchPart for the source, then it wouldn’t be restricted to editors, and 
targets could pull out any info they need.  However, I think targets would end 
up having special case code for different kinds of source parts, and could only 
handle the kinds of source parts they know about.  I think it makes more sense 
for the mechanism to trade in terms of model elements rather than workbench 
parts, so the parts are more decoupled.  If we provide IShowInSource, allowing 
the source to specify the appropriate model elements, I don’t see any benefit 
to having the target be passed the workbench part rather than the selection. 


Here are the proposed APIs as discussed on the phone:

/**
 * Carries the context for the Show In... action.
 * The default implementation carries an input and a selection.
 * Subclasses may extend.
 *
 * @see IShowInSource
 * @see IShowInTarget
 */
public class ShowInContext {
    /**
     * Constructs a new ShowInContext with the given input and selection.
     */
    public ShowInContext(Object input, ISelection selection);

    /**
     * Returns the input.
     */
    public Object getInput();

    /**
     * Returns the selection.
     */
    public ISelection getSelection();
}

/**
 * Parts which need to provide a particular context to a Show In...
 * target can implement this interface.
 */
public interface IShowInSource {
    ShowInContext getShowInContext();
}

/**
 * This interface must be implemented by Show In... targets (parts listed
 * in the Show In... prompter).
 */
interface IShowInTarget {
    /**
     * Shows the given context in this target.
     *
     * @param context the context to show
     * @return &lt;code&gt;true&lt;/code&gt; if the context could be shown,
     *   &lt;code&gt;false&lt;/code&gt; otherwise
     */
    boolean show(ShowInContext context);
}

API looks good, one nit...
Is it intentional that the ShowInContext API doesn't allow Null return values 
in the spec for getInput and getSelection. If we generalize ShowIn to Views 
then they might not have an input.
I'll clarify the APIs so that they allow null.

Should also allow user to customize which items appear in the Show In.. list 
in the perspective customization dialog.  May not be able to do this for M5 
though.

I've released the initial cut of this for tomorrow's integration build 
(I20020128).

It adds Show In... to the Navigate menu as a hardwired workbench action, not 
retargetable.  This action is enabled if the current part is an editor, or if 
it's a view that provides an IShowInSource, and the Show In list is non-
empty.  Editors can also provide an IShowInSource, but by default it takes the 
editor's input and selection to form the context.

The Sync With Editor action has been removed from the Navigate menu and the 
Navigator's toolbar.  Its global action id remains, but has been deprecated, 
and will be deleted for 2.1.

There are the following new APIs:
org.eclipse.ui.action.ShowInAction
org.eclipse.ui.dialogs.ShowInContext
org.eclipse.ui.dialogs.IShowInSource
org.eclipse.ui.dialogs.IShowInTarget
org.eclipse.ui.IPageLayout.addShowInPart(String id)

There is a new perspectiveExtensions element called showInPart, which provides 
the id of the view to add to the list.  The schema has been updated.

I've given the action a default accelerator of Alt+Shift+S.  This feels 
alright, but I need to check with Tod to see if Alt+Shift combinations are 
allowed in other locales.  An alternative is Ctrl+Shift+I, but this requires 
two hands.  Any other suggestions?

The prompter is just a regular dialog for now, but I'd like to make it more 
lightweight, like the Ctrl+F6/7/8 switchers.

I recommend making the following changes to JDT:
- remove Show In Navigator View and Show In Package Explorer from the Java 
Coding action set
- add the following perspectiveExtensions to the Java and Java Browsing 
perspectives:
	&lt;perspectiveExtension 
		targetID="org.eclipse.jdt.ui.JavaPerspective"&gt;
		&lt;showInPart id="org.eclipse.ui.views.ResourceNavigator"/&gt;
		&lt;showInPart id="org.eclipse.jdt.ui.PackageExplorer"/&gt;
	&lt;/perspectiveExtension&gt;
	&lt;perspectiveExtension 
		targetID="org.eclipse.jdt.ui.JavaBrowsingPerspective"&gt;
		&lt;showInPart id="org.eclipse.ui.views.ResourceNavigator"/&gt;
		&lt;showInPart id="org.eclipse.jdt.ui.PackageExplorer"/&gt;
	&lt;/perspectiveExtension&gt;
- change Package Explorer to provide an IShowInTarget (views in the Show In 
list must implement IShowInTarget)
- consider providing an IShowInSource as well, so Show In is enabled when the 
Package Explorer is active (see ResourceNavigator for an example)
- consider adding support for the Hierarchy view as well

It's unclear whether you should add these to the debug perspective. While 
convenient, they are Java specific and so would clutter the perspective for 
somebody debugging C code.  This is a downside to this new mechanism compared 
to action set / part associations.

I've also changed PageBookView (superclass of the Outline and Properties 
views) to delegate IAdaptable to the current page, if supported.  This will 
let you Show In / Outline from the Java editor, since the Java editor's 
outline page will already be active.  But it won't work properly from other 
parts, since the mechanism provides no way of opening or activating the 
appropriate editor to populate the outline for the current selection.
For 2.1, I suggest we omit Outline from the list, and just let the user use 
the Ctrl+F7 view switcher to navigate to the Outline for the current editor.

Known deficiencies:
- the Show In list is initially unsorted (should be alpha sorted), however it 
does correctly put the last chosen item at the top, and remembers the list on 
a per-perspective basis
- cannot customize the list in the perspective customization dialog

Note that the dialog is implemented using ListDialog, which I've pushed down 
to org.eclipse.ui.dialogs.  There are several variants of this in JDT, Search 
and Compare.  These plugins should consider using this dialog.
I'm considering adding an option to ListDialog to have it use a compact 
presentation, like the switchers.
As part of these changes, I've also added ArrayContentProvider in JFace (see 
bug 29609).  There are lots of places where this could be used.

Since I20030128, I've moved the new APIs to org.eclipse.ui.part (from 
org.eclipse.ui.dialogs).  They are now:
org.eclipse.ui.part.ShowInContext
org.eclipse.ui.part.IShowInSource
org.eclipse.ui.part.IShowInTarget

The old interfaces have been deprecated (and reimplemented in terms of the new 
ones, so they should still work) and will be deleted as soon as JDT no longer 
references them.


we haven't yet started the migration so it is OK to remove the old interfaces 
now. we will start on the migration tomorrow.
OK, they're gone.  You'll need to load the workbench from source.

It would also be good to have the Sync view support the new mechanism.
It current has Show In Navigator and Show In Resource History.  With the new 
mechanism, it could also show in the Package Explorer.
Its selection would have to contain elements that are adaptable to IResource, 
as well as be understood by the Resource History (CVS path).

Filed bug 30529 for Team support for Show In...

updated JDT as you suggested.
- removed the back linking option
- removed the show in package explorer from the context menu
- removed the show in package explorer/navigator from the action set
There is one problem in that IShowInSource only works in the adapter case. It 
doens't work when the interface is implemented directly. This is inconsistent 
with IShowInTarget.
Fixed ShowInAction.getContext to use getShowInSource, which does both the 
instanceof check and the IAdaptable trick.

Still TBD:
- implement lightweight prompter (as switch in ListDialog?)
- proper Javadoc for ListDialog
- write help content for action and dialog

Also need ISV and User doc for Show In... support.

Clarified spec for IShowInTarget.show with:
     * The target should check the context's selection for elements
     * to show.  If there are no relevant elements in the selection,
     * then it should check the context's input. 

Erich suggests allowing show in source to provide a list of targets.
Should consider this.
Need to allow new perspective customizations (show in items) to appear without 
having to reset the perspective.

You cannot get the Show In contributions once you have customized and saved 
your perspective. Even resetting the perspective doesn't make the contributions 
available.

Given that you cannot customize the perspective there seems to be no way to get 
the contributions. 


On 20030205, do I have to use Navigate-&gt;Show In each and every time I want to 
find the selection in the Package Explorer? 
If this is the case this really changes the way I work...I used the automatic 
back-linking behaviour in both the package explorer and navigator.
The answer is yes.  We would like to replace back-linking since it has loss-of-
context problems when you close editors (it warps you elsewhere).
Automatic back-linking in the Navigator has been gone for a while.  Do you mean 
the Sync button?

Please see last post.
I guess I don't use it in the Navigator as much as I thought I did. I have 
never used the Sync button.
The warping was annoying.
I will have to adapt. Thanks for the explaination.
I find removing the automatic back linking in the Package explorer is a step 
backward. When you have more than 10 editors open, it is not possible to read 
the name of .java file you're editing. However I always knew where I was just 
by glancing at the Package explorer. I now cannot trust the selection in the 
Package explorer any longer. I know that I can use a key combination to have 
the selection happen, but this is way less convenient than moving my eyes to 
the left :-)
I think there are better ways to track which editor you're in other than 
relying on backlinking.  The editor should show its file in the status line 
(including full path).

I agree with Jerome that it is a usability step back.
Show in works, but I have to use many mouse clicks to get there (figure which 
view I want to show into...). I don't mind the fact that when closing an 
editor, another one gains focus and will cause the selection to change in 
package view. If I don't want automatic linking, then I would disable it.


Same for me. I never voted against the new "Show in..." feature/behavior but I
always asked to keep the option to enable back linking. Those coming for VA Java
and/or using the Java Browsing perspective are used to it.

BTW: Some time ago there was work being done to reduce the number of steps to
achieve something. This new behavior actually requires more steps to achieve
stuff that I could do in zero steps before.

Please, bring back an option where users can enable back linking.

The trade-off is loss of context vs. more gestures.
The feedback from back linking users we got so far is that they are not that 
concerned about the loss of context. We can revive the back linking for the 
package explorer, but then we would be inconsistent with the Navigator and 
other "navigator style views".
Dani asks (about having to reset perspectives for the list to show):

This works for predefined perspectives (and modified predefined
perspectives) but what about perspectives I created myself?
- Window -&gt; Reset Perspective did not do the trick
- Window -&gt; Preferences -&gt; Workbench -&gt; Perspectives: the "Reset" button is
disabled for my perspective

Do I have to delete and recreate my predefined perspectives?

Nick replies:
Sounds like this case is not covered.  I'll add it to the PR and definitely 
consider it in the fix to this problem.  You should not have to lose your work.
When you created your perspective, which predefined one was it based on?  If it 
got the list from that perspective (without having to reset anything), would it 
work?

&gt;When you created your perspective, which predefined one was it based on?
They are based on Java and Java Browsing

&gt;If it got the list from that perspective (without having to reset anything),
&gt;would it work?
Don't understand exactly what you mean here.

A user-defined perspective based on the Java perspective would get the Java 
perspective's list of Show In items (without having to reset).

ok for me.

1) Shouldn't this be part of the perspective customization dialog too?
2) Couldn't the opened views (the target) be included to the show in dialog as 
well even if they are not defined in xml?

1) Yes, but this will not be in for M5.  Depending on other priorities, it may 
not be in for 2.1 at all.
2) Will have to consider this.  See also comment #19.

Another use case where I miss backlinking: 
In a self-hosting workspace I'm editing IJavaElement.java in project 
org.eclipse.jdt.core. I have another editor open on IResource.java in project 
org.eclipse.core.resources. I want to open IResourceDelta.java in project 
org.eclipse.core.resources. Since org.eclipse.jdt.core is expanded, I cannot 
see org.eclipse.core.resources in Package explorer. With backlinking I used to 
give focus to IResource.java so that it would show me 
org.eclipse.core.resources expanded, and from there it was easy to open 
IResourceDelta.java. 
Perspectives are sometimes criticized as only being a bunch of views grouped 
together, but having little awareness of each other. 

Linking selections automatically is thus important as it gives a perspective 
some sort of coherence. I am naturally expecting that a selection in editor is 
reflected wherever it makes sense (outliner should keep up, navigator should 
notice, etc...). If not, then it feels like a bug, especially since we had this 
behavior for the past years (regression). 

I accept that some users don't want this behavior, and it can be disabled, but 
IMHO it should default to be linked, as would other VAJ/IDE users I presume. 


2 more things i would like to see with this feature:

1&gt; If only one option don't show dialog but directly link it.
   Linking for example the package explorer when it is the only thing that can 
currently be linked can then be done with one keystroke.

2&gt; If i am in to Go Into "Mode" (package explorer or navigatior) and i say show 
in XXX on a resource that isn't in that portion of the view then the view 
doesn't go up and tries to select it there (and still not there go up ....)

number one of my request will be (sort of) fixed when 31106 is implemented.
I have a suggestion that should help make this more usable. In the help viewer 
there is a toolbar button called 'synchronize navigation' that finds the 
current help page over in the table of contents. How about a similar button on 
the editor or workbench toolbar that does a 'show in package explorer' for the 
resource currently being edited? I think that would address the problem with 
more gestures.
Should support the following views as Show In sources:
Task List
Bookmark List

Main feature implementation and bug fix for not having to reset perspectives 
made it in for M5/RC0.
Still some work to do for RC1.

Regarding Ed's comment #41 and other comments on back-linking, there are 5 
basic models we contemplated:

1. Automatic back-linking.
Pros: 
- doesn't require any extra clicks to show editor input in view
- always in sync between editor and view
Cons:
- surprising loss of context when you close an editor and it warps you to the 
selection for the newly active editor (sometimes you want this, sometimes you 
don't)
- doesn't support view-to-view linking (it could, but it would probably be too 
confusing)
- requires preferences (for each view) to turn it off, since not all users like 
this mode of operation

2. Explicit Show In XYZ view actions (either on the context menu or the 
Navigate menu) provided by the source part.
Pros:
- straightforward
- quick to use via mouse if on context menu (not too bad via keyboard either if 
mnemonics assigned well)
- can assign keybindings to the individual actions
Cons:
- its "egoistic" -- source part has to hardwire support for its preferred 
targets
- doesn't scale well when there are many potential targets

3. Sync With Editor action in the Navigate menu and on the view toolbar (we had 
this in M4, supported by the Navigator)
Pros:
- one click syncs you up (if view is visible and is not a fast view)
Cons:
- slower than option 2 if view is not open or is a fast view
- not great for keyboard navigation: even if you assign a keybinding to the 
action, the target view must still be activated first
- requires every target view to add a button to their toolbar (visual clutter)

4. Sync With Views action for the editor (broadcasts to all targets; what Ed 
suggests)
Pros:
- one click syncs you up (in all interested views, even if obscured)
- can assign a keybinding to it
- scales well
Cons:
- may cause loss of context since you may not want all views to be sync'ed up 
(e.g. may be doing different things in Navigator vs. Package Explorer)

5. Show In... (user chooses target)
Pros:
- quick to invoke (assuming mouse users will use accelerator with left hand, or 
reassign it if right handed)
- allows explicit selection of target
- remembers last selection, so should be as quick as dedicated Show in XYZ 
action if you're usually going to the same one
- scales well (no extra UI in sources or targets, and doesn't require prefs)
- allows more synergies than the other options (view to view navigation)
Cons:
- must be manually invoked (i.e. it's not option 1)

Overall, we felt option 5 works best.  Note that the issue of scalability is 
important for us.  We don't see it so much just in the SDK, but this is a real 
issue for larger products like WSAD.

Will the automatic backlinking be resurrected ?

The grand picture is one thing, but the obvious scenario where I am inside the 
Java perspective with my package view next to my editor (default) shouldn't be 
treated as a rare case. If I have multiple navigator views, then there is a 
strong chance that they are stacked on top of each other, and thus only the 
active one should try to keep up with my editor selection (other navigator 
would perform a check when it gains focus).


We have no plans to add backlinking back in the Navigator.
It's up to the JDT-UI team to decide if they want to add it back in the Package 
Explorer (and whether it's on by default).

I know its unfair, but why do we have to change a good feature to a far more 
complicated one (at least in the moment)? Why so late in the 2.1 time frame? 
We already have M5, hopefully its possible to get a more comfortable solution 
in 2.1
Have not read all the comments, so there is perhaps a deep good reason to 
change this.But I as an user want to be informed about this. I would expect to 
have an button on package view or an action at the editor context menu to show 
the current cu in the package view.
I felt like an idot as I wanted to export(drag&amp;drop) a bunch of java files. 
Scrolling the file to the package statement and clicking my way through the 
package view. 
Now I know the the Open In Action, but it is to complicated to use it. 
If the new interface is not useable to bring the old behaviour back or a one 
click|one action to focus the package view on the current type, it should be 
changed to allow this.
The browsing perspective will be my new friend, but I can not drag&amp;drop from 
there.
And add some pointers to the docs (changes from 2.0 to 2.1)
Sorry for the rant.
&gt;Why did we change this?
The answer is simple... to get feedback from our users.
We have forced some new behaviour on you and are now
listening. In fact, we are getting valuable feedback. 

Here is some more background. Navigation from an 
Editor to a View and from a View to another View are an 
important interaction in Eclipse. The old solution (Show in Package 
Explorer/Navigator actions/back linking) is not general enough. 
Plug-ins are contributing additional views and it is important 
to not lock them out and allow them to get the same first class 
treatment as the Package Explorer or Navigator. The current 
Show In... (alt+shift+s) is such a general mechanism. What
we wanted to find out is whether this general mechanism
is sufficent. Therefore we have removed the older mechanisms
from the UI in the last build. The feedback we are getting
tells us that users like the more general navigation support, 
but they also like the existing "short cuts" (Show in Package 
explorer/back linking). So we will look into improving this.
Navigate &gt; Show In... seems always disabled in M5.

Since you're looking for feedback, I have always hated the Show in Package
Explorer option (I don't use the Package Explorer like an Outline view, either)
and it is darned hard to find out where to turn it off. If you do reinstate
this, please don't make it the default.
[EG. we want feedback]
Ok. Than a more constructive one from my side. I also did not like the old 
linking behaviour very much. But it was a fast way to get the resource and 
package location of a class. And it was not disturbing enough for me to change 
it. 
In newer builds (&lt;M4) I just added a navigator with no linking behaviour to 
the java perspective, so I could select there any resource I want, without the 
disturbing jump in packageview if I select an editor.
The imo best solution would be to have something like a prefered object for 
Show In... .So it should be posssible to have a one-click|shortcut action to 
move the packageview to the current active edior resource. Another way around 
would be to simply Show In the first view in the list. And to let the user 
order the list of views.
(BTW if you join the discussion now and don't want to read the full bug 
history - pls read at least Nick's analysis in comment #44).

Bob - "I have always hated the Show in Package Explorer option" by this you are 
referring to the preference setting (back linking) and not the "Show in Package 
Explorer" in the Java Editor's context menu?
Pls see  comment #31 for the "empty show in menu" problem.

Martin - a light weight prompter and (a la ctrl-F7) plus sorting the target 
list MRU would cover your needs - correct?
*** Bug 31406 has been marked as a duplicate of this bug. ***
I see the "Show in..."  and "Link package explorer..."  really as two 
separate functions.  The "Show in..." feature is nice if you want to show an
editor in any of a number of different views.  You would do this as the need
arises, probably infrequently.  But the "Link package explorer..." is nice if
that is your main view and you always want that view and the editors to be
synchronized.  (As it is now, if I wanted this functionality, I would have to do
a "Show in..." each time I changed my editor.)

The functionalities could possibly be combined.  The "Show in..." could have a
user-defined default view that it automatically shows in.  And you could still
manually do a "Show in..." for any other views that you were interested in.   
[erich; read before]

I liked option 3. Good from a users perspective. The view should change - ask 
the view. Easy to find. 

I have to confess I get used to the alt+shift+s;key down;enter. I would try 
to 'hack' it to have the packageview always first. Now its a bit random wich 
view is first. So a user defined sorting sounds not bad.

But also a ctrl+f7|f6 style control could be nice. 
My major problem is to find the action. I never expected it in the navigate 
menu, and also the label Show In... does not point to its usage. Its to 
general.
My state of mind is, show me where the type|resource is situated in the 
project. I do not think which view would be better to show the current 
resource. 
Re: comment 54...  

Instead of doing "alt+shift+s;key down;enter", you should be (are?) able to just
bind a key mapping to "Show in Package Explorer".  Then, presumably, you only
have to press your key mapping and it will automatically jump to the selection
in the Package Explorer, without you having to choose from the listing.   I say
"presumably" because I can't seem to get that key mapping to work when I set it
in the preferences.  Does anyone know if this should or already does work?  And
if it works like I described?  That is, only one key-mapping press will
immediately show the selection in the Package Explorer.  If this is possible, it
would greatly alleviate my dislike of the new "Show in..." method, in that I
find it takes to many keystrokes.  If it was able to be tied to a simple
keystroke, that would be much more efficient. 
Erich - I misspoke. What I have always hated, in terms of #44, is automatic
back-linking. Automatic back-linking was not just bothersome when you closed an
editor; it was equally annoying when you used Open Type to open the source for a
class in the JDK or Eclipse. Whole hierarchies unfolded to expose these
packages, making the view very difficult to use to locate one's own classes. I
posted this comment mainly so you didn't get feedback only from the "Where's
this wonderful feature?" crowd, whose usage patterns are obviously different
than mine.

Having re-read Nick's analysis, I agree with the conclusion. It is important
that the feature work symmetrically across all applicable views. By use cases,
it is easy to see that sometimes users will want a particular view reset and
sometimes they won't. For example, when you open an editor, it is often helpful
to have the tasks view scroll to the tasks for that resource. But when you are
working on one of those tasks, it can be unhelpful, as the tasks view provides a
shortcut back to your locus of interest. The more views there are, the worse the
problem gets, but Eclipse has enough to illustrate the issues.

However, I note that there are a couple of special cases that test this general
rule. 

a. In M5, selection of an editor in the editors view does not change the
selection in the Package Explorer, but selection in the Package Explorer does
change the selection of an editor in the editors view, if the editor is already
open. Is this asymmetry justified when there are other equally convenient ways
to expose an open editor, or is a hangover from automatic back-linking?

b. Currently the Java editor (and mine) "opt out" of the general strategy and
allow the outline view to be back-linked (symmetrically). But I think this
exception is only possible because both views are contributed by the same
plugin. Would a plugin contributing a graphical GUI editor view that wanted to
auto-synch with source selections be out of luck? (Is this one of those "Show me
one and we'll refactor to accomodate it," questions. :-)
*** Bug 31492 has been marked as a duplicate of this bug. ***
I don't care how it's done nor how ugly its done, all I want is the explorer to
sync with the editor. It is such a great feature that you can't just remove it! 

Now it just sucks. Not even mapping a key like ctrl-2 to "show in package
explorer" can make it work. Forced to alt-shift-S, with an aimed double click:
that is WAY too annoying. It should not require keyboard at all for such a
common action. It was allright since 2.0. Just put it back.

I actually select some editor to avoid endlessly clicking in the tree! I even
keep editor or tasks, (now bookmarks since they are finally in a table and
sortable) knowing that the tree will open exactly at the package I want to work on.

Bye now, I gotta rollback to my good "old" i20030122...

it IS very annoying.
in M3 it used to be just fine, but (if I remember correctly), the collapse all 
button was not there yet, and the tree became very expanded.
in M4, it started to act wired, and sometimes opened the file in the package 
explorer when I opened the dialog anyway, but most of the time only if the 
package was already opened.
this was a little annoying, but I could live with that.
now its now opening it at all, which really does lower my peoductivity.
I would really love to see a good solution for this as soon as possible.

*** Bug 31509 has been marked as a duplicate of this bug. ***
*** Bug 31481 has been marked as a duplicate of this bug. ***

I have had an argument or two about this the last few days, and I thought I 
would share.  

I generally agree with the "what's wrong with the current picture" analysis.  I 
hated the Package Explorer linking.  I don't like views whizzing around me.  I 
also agree with Bob:  if you bring it back, please turn it off by default.  
Colleagues of mine, however, seem to find this whizz-tastic option invaluable, 
so I imagine you will get (are getting) a lot of requests to bring it back.

I did use the Show In Package Explorer context menu quite often.  In fact, I 
have now selected "Open Super Implementation" about 25 times by accident.  My 
hands are apparently trained on it, but I am learning.

After much deliberation, I have decided that any single-action solution to see 
the editor file in the most often used target (package explorer) would be OK.  
I can train myself to use something other than the old context menu, but I 
think there is a consensus that Alt-Shift-S-[Down]-Enter is a bit too much.  
Normally I would beg that it not be Ctrl-F7, but I supopse now I can change it 
myself (go key bindings!) :)  

-Andrew (one of the anti-whizzing-views people)

*** Bug 31753 has been marked as a duplicate of this bug. ***
*** Bug 31580 has been marked as a duplicate of this bug. ***
Just to throw a little chaff in front of the missile, I have yet to see Show
In... or its accelerator enabled. I have performed the ritual dance (not a
pretty sight) and incanted the ritual cant, but the replacement feature seems to
be out of order.
Bob, which build are you running?
In the M5 build (I20030206 17:00) and more recent builds, you should not have 
to reset the perspective for this to be enabled.
You need to be in the Resource perspective, Debug perspective or one of the 
Java perspectives (or custom perspectives based on any of these).
The active part must be a text editor (either plain or Java) or a view that 
provides a Show In... source (e.g. Navigator or Package Explorer).  The text 
editor is the easiest to see since if you're in a view, it removes itself from 
the list.

If this doesn't work for you, could you please indicate which build you're 
running and attach a copy of your workbench.xml file 
(from .metadata\plugins\org.eclipse.ui.workbench).

I agree that action #5 in comment #44 is the best option. However I don't see 
any reason to remove the users ability to toggle (on a view per view basis) 
automatically syncing with the editor selection. For each view that supports 
IShowIn (* not real interface name) allow the user to configure if they want 
it to automatically sync. Leave them all off by default. Users that like the 
feature and that are not confused by the context switch (or annoyed) can 
enable it for the views that they like to be synced automatically, and the 
rest can use ctrl-shift-s as needed. Sound look a good idea?

Also, I am using M5 and bound ctrl-d to sync with package view, and ctrl-shift-
d to sync with navigation view (global scope, standard configuration, standard 
configuration active) and hitting those keys while in the editor has no 
effect. ctrl-shift-s works just fine however. Is this not implemented in M5?

When I was using M3/M5 I used the auto sync feature to quickly find an item in 
the navigator or package view so that I could access the team menu or other 
similar item. Some items in my tree can be quite deep and take while a few 
seconds of hunt and click just so I can access some menu on a file. It is very 
convient to open a file with ctrl-shift-t or ctrl-shift-r in an editor, sync 
the navigator view, and preform my action. I would like to have this behavior 
be as effecient as possible otherwise I might as well hunt and click my way to 
the file myself. 
Nick, are you saying it doesn't work in the Plug-in Development perspective? No
wonder I was puzzled. Now that I open the Java perspective, I see it enabled.
But I need it to be enabled in PDE, where I do all my work. :(
I notice it isn't enabled in my XML perspective, either. What does a perspective
need to do to get this to work? (Would have been nicer if it were
backward-compatible.)
With the support in M5, individual perspectives or plugins that extend them 
must explicitly register Show In... targets with the perspective.
In M5, this was only done in the perspectives mentioned in my last note.
Spec for the perspectiveExtensions extension point, or the showInPart elements 
in the plugin.xml for org.eclipse.ui or org.eclipse.jdt.ui.

Yesterday I released support for the active part to provide a list of items as 
well, so the Java Editor could list the Navigator and Package Explorer 
independent of which perspective is active.
See org.eclipse.ui.part.IShowInTargetList.

Also added Show In... source support for the Tasks and Bookmarks view, and 
augmented the ResourceNavigator to handle markers in the selection.

Ok, I can do that. Thanks.

Should I assume that Show In... will be supported in PDE perspective (one way or
another) or should I file another bug report?
I think if the Java editor specifies the Navigator and Package Explorer as Show 
In targets, there will be less of a need for particular perspectives such as 
the PDE perspective to also list targets.  However, if the PDE perspective has 
other views that it wants to include as Show In targets, then it will have to 
list them.
Based on your feedback and discussions with the usability team, we have decided 
to do the following.  

Show In support (in Navigate main menu):
- Change to using a submenu for Show In rather than a dialog or lightweight 
prompter.  There will be no accelerator, but mnemonics can be used.
- Items in the submenu will be arranged in Most Recently Used order.
- The order will be persisted with the perspective.
- The Navigator and Package Explorer will be listed as Show In targets by the 
Java editor, so they will appear when the Java editor is active, regardless of 
the current perspective.

"Show In Package Explorer" context menu item:
- Since this will be the most commonly used Show In item from the Java editor, 
the Java editor will add "Show in Package Explorer" back to its context menu.
- In addition, it will register this action with the keybinding service, 
allowing the user to assign it an accelerator key (it will have none by 
default).

Back-linking:
- Add back-linking back to the Navigator and Package Explorer, but not as a 
global preference setting.
- It will now be a per-view toggle setting, available on the toolbar (and also 
the view/triangle menu, for accessibility).  Note that this also allows one-off 
syncs (for those that have linking off) by clicking on the button twice.
- The tooltip / menu item name will be "Link With Editor".
- The setting will be remembered with the view.
- The default setting will be off (no back-linking) in the Navigator and 
Package Explorer.
- The Java Browsing views will support this as well, but may choose to have it 
on by default.
- As was the case in 2.0, the setting will only control whether back-linking is 
on (i.e. a change in editor affects the selection in the view).  Forward 
linking will always be on (a change in selection in the view brings the 
corresponding editor to front if it is already open).
- Other Navigator-like views in other Eclipse-based products will be encouraged 
to support this.

Thanks to all for your feedback and patience with us on this late-breaking item 
(this has got to be one of the most cc'ed PRs of all time!)

Backlinking sounds good to me, as long as I get some global preference 
(Jdt/Platform?) where I can tell it what the default is, unless the backlinking 
behavior was on by default &lt;g&gt;

I don't want to be forced to toggle another preference on a per package 
explorer basis (yes it is more powerful, but in the end I just want backlinking 
by default), i.e. more power is good for advanced scenarii, but the simple 
browser behavior we used to have shouldn't be made more complex.



Actually, if the package explorer individual setting becomes the default for 
new windows, I believe I am a happy camper again.
The back-linking toggle has been added to the Navigator.  This is in last 
night's nightly build and will be in tomorrow's integration build.

That's good, because just as strongly as you want back-linking to be the
default, I want it not to be the default. ;-}
Above I stated:
The default setting will be off (no back-linking)

To clarify, this means that when creating a new view, either in a new window or 
after closing and reopening a view, the setting will be off.

To do what Philippe requests in comment #75, there are three options:

1. Inherit the setting from the window where you choose New Window.  This only 
addresses the New Window case and not the close/reopen case.  We also don't 
really have any good mechanisms or policies for managing the inheritance of 
settings between windows.

2. Remember the last setting as a global (persisted, e.g. using the dialog 
store).  This would address both cases, but may be confusing to the user.  E.g. 
if I turn it on in one window, the turn it off in another window, the next 
window I open will have it off, even if I open the new window from the window 
where it's on.

3. Use the preference override mechanism.  Note that we have kept the old 
linking preference internally, to allow products to override the default 
setting.  See IWorkbenchPreferenceConstants.LINK_NAVIGATOR_TO_EDITOR.  
This could also be used to meet Philippe's needs, but it's a hidden feature 
(not accessible from the UI).  
You can add the following to the plugin_customization.ini of the primary 
feature's plugin (org.eclipse.platform):
org.eclipse.ui/LINK_NAVIGATOR_TO_EDITOR=true

JDT will adopt the same approach for the Package Explorer.

For 2.1, I'd prefer to leave it at that since I have concerns with Option 2 
above.

There's something wrong with this analysis. Opening a new window currently
discards all perspectives except the current one at the time and resets all
perspective attribute to defaults. This case should not be affected by #2, or it
would behave very differently than everything else.

But the close/re-open case absolutely positively should behave as in #2. This is
the way it behaves with, e.g., filters and other view properties.
Here are the changes that JDT released into the integration build of 02018:

* all the "global" back linking preferences got removed.

* Package Explorer: 
     same behaviour as Navigator

* Browsing perspective views: 
     - back linking is stored per view.  Back linking is on by default
     - the back linking toggle isn't available in the toolbar, but
       only in the view menu. The rationale is that these views
       are almost always used with back linking. Adding a back linking
       control to the view's toolbar would have made this option too prominent.
 
* Type hierarchy view:
     - back linking stored per view. Off by default.
     - the back linking toggle is only available from the view menu.

To be done:
* Revive Show in Package Explorer in the editor context menu.
I apologize for replaying this one note, but the last response simply said it
would be possible for JDT to implement. I am hoping for some indication JDT
actually will implement in 2.1:

Show In... (from editor view to Package Explorer/Navigator) will be enabled in
the PDE perspective, yes?
&gt;Show In... (from editor view to Package Explorer/Navigator) will be 
&gt;enabled in the PDE perspective, yes?
yes - this also went into the integration build of today.

Gosh, it took quite a while to read it all !!

Ok, based on comment #73, it seems that to enable back linking (I use it mainly
in the package explorer), you will have to click on the button on the toolbar,
or use alt+shift+s and then select package explorer.

I saw the comment which says if I set the following :
    org.eclipse.ui/LINK_NAVIGATOR_TO_EDITOR=true
backlinking would work - but I think it will enable backlinking only for the
navigator, not the package explorer. Something like
LINK_PACKAGE_EXPLORER_TO_EDITOR=true is probably needed.

Personally, I really use the backlinking a lot. I want it to be automated in the
package explorer view. Many times I use Ctrl+Shift+T to open a class in a
particular package, and because of back-linking, I can see all the classes in
that package immediately since that package is also expanded. Now I have another
step to do the same operation. It is very useful to have that on in conjunction
with my Perforce Team provider, since now after opening the file, I can
immediately right-click on it to see its properties.

I think its actually a hassle to use a mouse gesture/keyboard everytime to
figure out where the currently opened file is. If we can't do anything, please
put an option in the preferences which enables backlinking for the package
explorer. You can leave it off by default for people who hate the explorer
whizzying around, but for people who use it (and from reading the comments it
seems people use it mostly on the package explorer) leaving that option in there
is actually a blessing. And an extra item in the preferences menu, especially
for something as important as this feature is not a very bad thing.


Thanks from a user who loves the backlinking feature :)

Jalpesh.
The toolbar button is a toggle button, so once you've turned linking on, the 
view will stay synchronized with the editor.

The Navigator now remembers the Link With Editor settings in the dialog store, 
as per Option 2 in comment #78, so we no longer disadvantage those that prefer 
linking on.  It seems the pros outweigh my imagined cons on this one.

JDT will do this as well.

Added IWorkbenchActionConstants.GROUP_SHOW_IN.  A group with this id should be 
used in context menus with "Show in ABC" actions (e.g. the Package 
Explorer's), to allow other plugins to add their "Show in DEF" actions to the 
same group.

*** Bug 32361 has been marked as a duplicate of this bug. ***
In the I20030221 build, Show In has been changed to use a submenu rather than a 
dialog (as mentioned in comment #73).

There is a known problem with the order of items.  The items should be arranged 
with the most recently used item first, but this can only be done for items 
that are contributed by the perspective, not by the current part.  Items 
contributed by the current part are always added at the end.

Since it now uses a submenu, there is no longer any accelerator (used to be 
Alt+Shift+S).  Keyboard users can use mnemonics: Alt+N, W.

Is there any reasoning behind removing the accelerator for this feature? Sure 
I can access the menu with Alt-N W, but I would much rather do it with fewer 
key strokes. It doesn't bother me that these bindings aren't set by default, 
but please atleast give me the ability. 
*** Bug 32611 has been marked as a duplicate of this bug. ***
We switched to a submenu because it was felt that the number of items will 
typically be small, and a dialog is too heavyweight for this purpose.
Also, JDT has added back the most common case: Show in Package Explorer is back 
on the context menu of the Java editor.
If you're a keyboard user, you can activate this using:
&lt;menu key or Shift+F10&gt;, K
or use mnemonics as you illustrate.

The accelerators was removed because you cannot assign accelerators to submenus.

Mouse users can click twice on the link icon (if the view is already visible).


I recall you were adding API so any editor can enable this menu. Could you point
out where it is?
I'm using the RC1 build, and I do not see the toolbar button (in the java
perspective) which will allow backlinking on.
Sorry for the previous comment, I was looking in the main toolbar. The button is
available in the Package Explorer Toolbar.

For Show In to be enabled, the source part (current part) needs to provide a 
ShowInContext, and there must be some list of target ids to show.  These can be 
provided either by the perspective or the source part.  Note that the source 
part is excluded from the list of targets.

For the ShowInContext, the part can provide one explicitly by implementing 
IShowInSource (either directly or via IAdaptable), or, if the part is an editor 
and does not implement IShowInSource, then a context is created from the 
editor's input and selection (using editor.getEditorInput() and editor.getSite
().getSelectionProvider().getSelection(), with the appropriate null checks).

To list target parts on a perspective, use &lt;showInPart id="..."\&gt; elements in 
an extension off of the org.eclipse.ui.perspectiveExtensions extension point.

The source part can provide a list of target parts by implementing 
IShowInTargetList (either directly or via IAdaptable).

Currently only views can be listed as targets.  Targets must implement 
IShowInTarget (either directly or via IAdaptable).

IShowInSource, IShowInTarget and ShowInContext are all declared in 
org.eclipse.ui.part.

Thanks. The combination of the default context that is created plus the added
&lt;showInPart&gt; elements in the manifest seem to work quite well.

I notice the &lt;showInPart&gt; elements seem to have no bad effect in 2.0, allowing
an editor to remain 2.0-compatible and still support Show In in 2.1. Perhaps
that is how all extensions behave (don't complain about unrecognized elements),
but I wasn't sure it would work until I tried it.
The eclipse runtime ignores unrecognized elements.

Recently PDE added support for checking extensions against the schema for 
extension points, so it would probably generate warnings in this case.  But 
that's only at development time.

Fixed sorting.  Initial order is: targets from perspective, followed by 
targets from active part (eliminating duplicates).  It then maintains MRU 
order.  The last used timestamps are persisted with the perspective (including 
targets from parts).

This is the last planned change for Show In for 2.1.

If there are defects found or other issues encountered, please enter new bug 
reports rather than reopening this one.</WithStack>
    <WithOutStack>M4

There are currently several mechanisms for synchronizing the selection between 
editors and views:
- there is a global Sync With Editor action which the Navigator hooks
- the Navigator also has an explicit Sync With Editor action
- the Package Explorer has a preference for automatic linking
- the Java editor has a Show in Package Explorer context menu action 
- the Java Coding action set (which is associated with the Java editor) adds 
Show in Package Explorer and Show in Navigator View actions to the Navigate menu

There are several problems with this state of affairs:
- the Navigator and Package Explorer are inconsistent
- Sync With Editor requires that the view be active, however navigation is more 
typically done from editor to view
- Sync With Editor requires that each view hook the global action, and, for 
consistency, add the action to their toolbar
- having action sets adding multiple Show in XYZ items to the Navigate menu 
doesn't scale well
- editors have to choose which Show in XYZ actions they will put in their 
context menu

Here is a proposal for improving this situation.

- We remove the Sync With Editor action from the Navigate menu and the 
Navigator.

- We add a Show In... action to the Navigate menu, which is enabled iff an 
editor is active.

- Show In... is assigned an accelerator, ideally one that can be invoked with 
the left hand, so that the right hand can move to the arrow keys simultaneously 
(any suggestions?)

- When activated, Show In... pops up a small list of applicable views, with a 
heading "Show In" (this will look similar to the Ctrl+F6/F7/F8 switchers, but 
will not be spring loaded).

- The list is initially sorted alphabetically (using the collator for the 
default locale), but when an item is chosen it moves to the top of the list 
(MRU order).  The order is remembered for each perspective, and is persisted 
across shutdown and restart.  Choosing an item in one perspective does not 
affect the order in other perspectives.

- The list of views to show is perspective-sensitive, and is populated in much 
the same way as the Window &gt; Show View submenu.  You can add items 
programmatically in the perspective factory, or declaratively via the 
perspectiveExtensions extension point.  Items will be added by specifying the 
view ID.  The view must implement a particular interface (see below).

- The view class must implement a new interface:
/**
 * This interface must be implemented by views listed in the Show In... 
prompter.
 */
interface IShowInTarget {
    /**
     * Shows the given selection in this view.
     *
     * @param selection the selection to show
     * @return &lt;code&gt;true&lt;/code&gt; if the selection could be shown,
     *   &lt;code&gt;false&lt;/code&gt; otherwise
     */
    boolean show(ISelection selection);
}

By default, the selection passed is a StructuredSelection containing the source 
editor's input (and not its selection).  If show returns false, the workbench 
simply generates a system beep.

Passing the editor input is sufficient for the Navigator (FileEditorInput 
adapts to IResource), but is not sufficient for the Java editor and Package 
Explorer, which work in terms of fine grained Java model elements.  To support 
this scenario, there is another new interface:

/**
 * Parts which need to provide a particular selection to a Show In...
 * target can implement this interface.
 */
interface IShowInSource {
    /**
     * Returns the selection to pass to the &lt;code&gt;IShowInTarget&lt;/code&gt;.
     * Returns &lt;code&gt;null&lt;/code&gt; if there is no valid selection to show.
     */
    ISelection getShowInSelection();
}

We considered using the existing interface ISetSelectionTarget, which is 
remarkably similar to IShowInTarget, but decided not to for 3 reasons:
1. ISetSelectionTarget is primarily used for showing newly created items (via a 
wizard).  Views may want to participate in Show In... without having to 
participate in showing newly created items.
2. Since we need IShowInSource, IShowInTarget is a better name.
3. It's helpful to have the return code indicating success or failure, so that 
the workbench can handle it accordingly.

For IShowInTarget, we considered passing not just a selection, but also the 
editor input, e.g. show(IEditorInput input, ISelection selection).  With this 
approach, the Package Explorer would get the Java Editor’s input and its 
TextSelection (obtained from the editor’s selection provider) and could map to 
the Java element using the editor input and text selection range.  We decided 
against this approach for two reasons:
1. It’s more convoluted than just letting the source indicate the selection it 
wants to show.
2. It binds IShowInTarget too tightly to editors.  We might want to support 
Show In… from view to view in the future (e.g. show Package Explorer selection 
in the Navigator).  In fact, with the proposed interfaces, it would be trivial 
to do so for 2.1.

- For 2.1, there will be no further enablement rules for the Show In items.
For example, the Java perspective will list the Package Explorer and Navigator, 
and these will always appear as enabled in the Show In... list.
However, these views may not be applicable in all situations (e.g. an external 
class file, or a repository file).
For 2.1, the target would still be notified but would return false, causing the 
workbench to generate a system beep.

- The IShowInSource and IShowInTarget interfaces are obtained by first checking 
to see if the part in question directly implements the interface (i.e. part 
instanceof IShowInTarget).  If not, it checks for an adapter on the part (i.e. 
part.getAdapter(IShowInTarget.class)).  Using adapters allows the part to avoid 
having the interface methods as public methods on its class, and can be used to 
resolve method naming conflicts.
There are some more problems with the current state of affairs (the proposal 
also covers these cases):
- the current solution doesn't allow that a view contributed by someone else 
can be given the same status as the Package Explorer.

- the current solution is incomplete, there is a Show In Package explorer 
action but there is no Show In Outline for example.


Comments on the proposal:
1) The Show in... action should also be available from the editor's context 
menu. The rationale is that Show in Package Explorer is currently available 
from the context menu. It is frequently used and offering the action from the 
menu bar only would remove the convenience of the context menu. This would 
require that a Show In action is surfaced as API (similar as OpenWithMenu) so 
that editors can include it in their menu.

2) Will the list of views in Show in... only include Views that implement the 
IShowInTarget interface or will it include all Views (available in Window&gt;Show 
View). For example, the Task, Search, or Console view should not show in the 
menu. 

3) Assuming we do 2) this will require that the ViewReferences of all the Views 
in the list will be restored so that the interface check can be performed. To 
avoid the early restore/creation there could be an optional attribute in the 
Views extension point that allows a View to declare whether is supports Show in.

4) Show in Target granularity
We are currently doing a fine grained selection in the PackageExplorer. We will 
likely change it to only show the IEditorInput. Doing a fine grained selection 
based on the text selection results in a signifcant tree expansion that can 
result in a loss of context. This means:
Show In&gt;PackageExplorer: would only select the EditorInput
Show In&gt;Outline: shows the text selection of the editor.
What I'm getting at here is that the Target needs to be able to decide what to 
show and not the source. As I understand the IShowInSource interface it would 
be able to "dictate" what is shown.

5) Did you consider a more explicit interface for IShowInTarget?

interface IShowInTarget {
     boolean select(IEditorPart part);
}

The existing interface with an ISelection where the first element is an 
IEditorInput is implicit and leads to ugly code, i.e., the PackageExplorer 
needs to check whether the first element is an IEditorInput or a JavaElement. 
With the above interface the target can get at the EditorInput from the part 
and it could also negotiate other interfaces via an adapter on the IEditorPart.

To support Show In from Views the above interface could be generalized to:
   select(IWorkbenchPart)

The ShowInSource interface would still make sense but it would be up to the 
target to make use of it.

6) the idea to also support adapters is good
1) OK, we’ll make the action API.

2) and 3) For views to show up in the list, they have to be explicitly added to 
the perspective layout, either in code or via new support in 
perspectiveExtensions, in similar way to how the Show View submenu is 
populated.  For example, the Java perspective could have Show In / Navigator, 
even if the Navigator is not open.  It will not check views dynamically, and so 
does not have issues with plugin startup.  There is no change to the views 
extension point, however the view class must implement IShowInTarget if it gets 
added to the list.

4) For this case, the Java Editor’s IShowInSource would yield a selection 
containing the current member (as a Java model element).  The Package Explorer 
would choose to show only the containing compilation unit.  The Outline would 
show the member.  So, the source gets to say what it wants shown (at as fine a 
granularity as possible), but the targets can still choose what granularity 
they want to show (assuming the selection has enough info to obtain the parent 
elements).

5) I didn’t mean to suggest that the selection would contain both the editor 
input and the text selection.  I was imagining that, by default, the selection 
would contain just the editor input, unless the source implemented 
IShowInSource.   I did consider an API that would get passed both the editor 
input and the selection as separate arguments.  I also considered simply 
passing the editor, which would allow any required info to be retrieved.  
However, these both restrict the API to working only from editors to views, 
which is why I proposed IShowInSource.  The source can put the appropriate 
model elements in the selection (e.g. Java model elements), and the targets get 
to decide how best to show them.  If we generalized it to pass the 
IWorkbenchPart for the source, then it wouldn’t be restricted to editors, and 
targets could pull out any info they need.  However, I think targets would end 
up having special case code for different kinds of source parts, and could only 
handle the kinds of source parts they know about.  I think it makes more sense 
for the mechanism to trade in terms of model elements rather than workbench 
parts, so the parts are more decoupled.  If we provide IShowInSource, allowing 
the source to specify the appropriate model elements, I don’t see any benefit 
to having the target be passed the workbench part rather than the selection. 


Here are the proposed APIs as discussed on the phone:

/**
 * Carries the context for the Show In... action.
 * The default implementation carries an input and a selection.
 * Subclasses may extend.
 *
 * @see IShowInSource
 * @see IShowInTarget
 */
public class ShowInContext {
    /**
     * Constructs a new ShowInContext with the given input and selection.
     */
    public ShowInContext(Object input, ISelection selection);

    /**
     * Returns the input.
     */
    public Object getInput();

    /**
     * Returns the selection.
     */
    public ISelection getSelection();
}

/**
 * Parts which need to provide a particular context to a Show In...
 * target can implement this interface.
 */
public interface IShowInSource {
    ShowInContext getShowInContext();
}

/**
 * This interface must be implemented by Show In... targets (parts listed
 * in the Show In... prompter).
 */
interface IShowInTarget {
    /**
     * Shows the given context in this target.
     *
     * @param context the context to show
     * @return &lt;code&gt;true&lt;/code&gt; if the context could be shown,
     *   &lt;code&gt;false&lt;/code&gt; otherwise
     */
    boolean show(ShowInContext context);
}

API looks good, one nit...
Is it intentional that the ShowInContext API doesn't allow Null return values 
in the spec for getInput and getSelection. If we generalize ShowIn to Views 
then they might not have an input.
I'll clarify the APIs so that they allow null.

Should also allow user to customize which items appear in the Show In.. list 
in the perspective customization dialog.  May not be able to do this for M5 
though.

I've released the initial cut of this for tomorrow's integration build 
(I20020128).

It adds Show In... to the Navigate menu as a hardwired workbench action, not 
retargetable.  This action is enabled if the current part is an editor, or if 
it's a view that provides an IShowInSource, and the Show In list is non-
empty.  Editors can also provide an IShowInSource, but by default it takes the 
editor's input and selection to form the context.

The Sync With Editor action has been removed from the Navigate menu and the 
Navigator's toolbar.  Its global action id remains, but has been deprecated, 
and will be deleted for 2.1.

There are the following new APIs:
org.eclipse.ui.action.ShowInAction
org.eclipse.ui.dialogs.ShowInContext
org.eclipse.ui.dialogs.IShowInSource
org.eclipse.ui.dialogs.IShowInTarget
org.eclipse.ui.IPageLayout.addShowInPart(String id)

There is a new perspectiveExtensions element called showInPart, which provides 
the id of the view to add to the list.  The schema has been updated.

I've given the action a default accelerator of Alt+Shift+S.  This feels 
alright, but I need to check with Tod to see if Alt+Shift combinations are 
allowed in other locales.  An alternative is Ctrl+Shift+I, but this requires 
two hands.  Any other suggestions?

The prompter is just a regular dialog for now, but I'd like to make it more 
lightweight, like the Ctrl+F6/7/8 switchers.

I recommend making the following changes to JDT:
- remove Show In Navigator View and Show In Package Explorer from the Java 
Coding action set
- add the following perspectiveExtensions to the Java and Java Browsing 
perspectives:
	&lt;perspectiveExtension 
		targetID="org.eclipse.jdt.ui.JavaPerspective"&gt;
		&lt;showInPart id="org.eclipse.ui.views.ResourceNavigator"/&gt;
		&lt;showInPart id="org.eclipse.jdt.ui.PackageExplorer"/&gt;
	&lt;/perspectiveExtension&gt;
	&lt;perspectiveExtension 
		targetID="org.eclipse.jdt.ui.JavaBrowsingPerspective"&gt;
		&lt;showInPart id="org.eclipse.ui.views.ResourceNavigator"/&gt;
		&lt;showInPart id="org.eclipse.jdt.ui.PackageExplorer"/&gt;
	&lt;/perspectiveExtension&gt;
- change Package Explorer to provide an IShowInTarget (views in the Show In 
list must implement IShowInTarget)
- consider providing an IShowInSource as well, so Show In is enabled when the 
Package Explorer is active (see ResourceNavigator for an example)
- consider adding support for the Hierarchy view as well

It's unclear whether you should add these to the debug perspective. While 
convenient, they are Java specific and so would clutter the perspective for 
somebody debugging C code.  This is a downside to this new mechanism compared 
to action set / part associations.

I've also changed PageBookView (superclass of the Outline and Properties 
views) to delegate IAdaptable to the current page, if supported.  This will 
let you Show In / Outline from the Java editor, since the Java editor's 
outline page will already be active.  But it won't work properly from other 
parts, since the mechanism provides no way of opening or activating the 
appropriate editor to populate the outline for the current selection.
For 2.1, I suggest we omit Outline from the list, and just let the user use 
the Ctrl+F7 view switcher to navigate to the Outline for the current editor.

Known deficiencies:
- the Show In list is initially unsorted (should be alpha sorted), however it 
does correctly put the last chosen item at the top, and remembers the list on 
a per-perspective basis
- cannot customize the list in the perspective customization dialog

Note that the dialog is implemented using ListDialog, which I've pushed down 
to org.eclipse.ui.dialogs.  There are several variants of this in JDT, Search 
and Compare.  These plugins should consider using this dialog.
I'm considering adding an option to ListDialog to have it use a compact 
presentation, like the switchers.
As part of these changes, I've also added ArrayContentProvider in JFace (see 
bug 29609).  There are lots of places where this could be used.

Since I20030128, I've moved the new APIs to org.eclipse.ui.part (from 
org.eclipse.ui.dialogs).  They are now:
org.eclipse.ui.part.ShowInContext
org.eclipse.ui.part.IShowInSource
org.eclipse.ui.part.IShowInTarget

The old interfaces have been deprecated (and reimplemented in terms of the new 
ones, so they should still work) and will be deleted as soon as JDT no longer 
references them.


we haven't yet started the migration so it is OK to remove the old interfaces 
now. we will start on the migration tomorrow.
OK, they're gone.  You'll need to load the workbench from source.

It would also be good to have the Sync view support the new mechanism.
It current has Show In Navigator and Show In Resource History.  With the new 
mechanism, it could also show in the Package Explorer.
Its selection would have to contain elements that are adaptable to IResource, 
as well as be understood by the Resource History (CVS path).

Filed bug 30529 for Team support for Show In...

updated JDT as you suggested.
- removed the back linking option
- removed the show in package explorer from the context menu
- removed the show in package explorer/navigator from the action set
There is one problem in that IShowInSource only works in the adapter case. It 
doens't work when the interface is implemented directly. This is inconsistent 
with IShowInTarget.
Fixed ShowInAction.getContext to use getShowInSource, which does both the 
instanceof check and the IAdaptable trick.

Still TBD:
- implement lightweight prompter (as switch in ListDialog?)
- proper Javadoc for ListDialog
- write help content for action and dialog

Also need ISV and User doc for Show In... support.

Clarified spec for IShowInTarget.show with:
     * The target should check the context's selection for elements
     * to show.  If there are no relevant elements in the selection,
     * then it should check the context's input. 

Erich suggests allowing show in source to provide a list of targets.
Should consider this.
Need to allow new perspective customizations (show in items) to appear without 
having to reset the perspective.

You cannot get the Show In contributions once you have customized and saved 
your perspective. Even resetting the perspective doesn't make the contributions 
available.

Given that you cannot customize the perspective there seems to be no way to get 
the contributions. 


On 20030205, do I have to use Navigate-&gt;Show In each and every time I want to 
find the selection in the Package Explorer? 
If this is the case this really changes the way I work...I used the automatic 
back-linking behaviour in both the package explorer and navigator.
The answer is yes.  We would like to replace back-linking since it has loss-of-
context problems when you close editors (it warps you elsewhere).
Automatic back-linking in the Navigator has been gone for a while.  Do you mean 
the Sync button?

Please see last post.
I guess I don't use it in the Navigator as much as I thought I did. I have 
never used the Sync button.
The warping was annoying.
I will have to adapt. Thanks for the explaination.
I find removing the automatic back linking in the Package explorer is a step 
backward. When you have more than 10 editors open, it is not possible to read 
the name of .java file you're editing. However I always knew where I was just 
by glancing at the Package explorer. I now cannot trust the selection in the 
Package explorer any longer. I know that I can use a key combination to have 
the selection happen, but this is way less convenient than moving my eyes to 
the left :-)
I think there are better ways to track which editor you're in other than 
relying on backlinking.  The editor should show its file in the status line 
(including full path).

I agree with Jerome that it is a usability step back.
Show in works, but I have to use many mouse clicks to get there (figure which 
view I want to show into...). I don't mind the fact that when closing an 
editor, another one gains focus and will cause the selection to change in 
package view. If I don't want automatic linking, then I would disable it.


Same for me. I never voted against the new "Show in..." feature/behavior but I
always asked to keep the option to enable back linking. Those coming for VA Java
and/or using the Java Browsing perspective are used to it.

BTW: Some time ago there was work being done to reduce the number of steps to
achieve something. This new behavior actually requires more steps to achieve
stuff that I could do in zero steps before.

Please, bring back an option where users can enable back linking.

The trade-off is loss of context vs. more gestures.
The feedback from back linking users we got so far is that they are not that 
concerned about the loss of context. We can revive the back linking for the 
package explorer, but then we would be inconsistent with the Navigator and 
other "navigator style views".
Dani asks (about having to reset perspectives for the list to show):

This works for predefined perspectives (and modified predefined
perspectives) but what about perspectives I created myself?
- Window -&gt; Reset Perspective did not do the trick
- Window -&gt; Preferences -&gt; Workbench -&gt; Perspectives: the "Reset" button is
disabled for my perspective

Do I have to delete and recreate my predefined perspectives?

Nick replies:
Sounds like this case is not covered.  I'll add it to the PR and definitely 
consider it in the fix to this problem.  You should not have to lose your work.
When you created your perspective, which predefined one was it based on?  If it 
got the list from that perspective (without having to reset anything), would it 
work?

&gt;When you created your perspective, which predefined one was it based on?
They are based on Java and Java Browsing

&gt;If it got the list from that perspective (without having to reset anything),
&gt;would it work?
Don't understand exactly what you mean here.

A user-defined perspective based on the Java perspective would get the Java 
perspective's list of Show In items (without having to reset).

ok for me.

1) Shouldn't this be part of the perspective customization dialog too?
2) Couldn't the opened views (the target) be included to the show in dialog as 
well even if they are not defined in xml?

1) Yes, but this will not be in for M5.  Depending on other priorities, it may 
not be in for 2.1 at all.
2) Will have to consider this.  See also comment #19.

Another use case where I miss backlinking: 
In a self-hosting workspace I'm editing IJavaElement.java in project 
org.eclipse.jdt.core. I have another editor open on IResource.java in project 
org.eclipse.core.resources. I want to open IResourceDelta.java in project 
org.eclipse.core.resources. Since org.eclipse.jdt.core is expanded, I cannot 
see org.eclipse.core.resources in Package explorer. With backlinking I used to 
give focus to IResource.java so that it would show me 
org.eclipse.core.resources expanded, and from there it was easy to open 
IResourceDelta.java. 
Perspectives are sometimes criticized as only being a bunch of views grouped 
together, but having little awareness of each other. 

Linking selections automatically is thus important as it gives a perspective 
some sort of coherence. I am naturally expecting that a selection in editor is 
reflected wherever it makes sense (outliner should keep up, navigator should 
notice, etc...). If not, then it feels like a bug, especially since we had this 
behavior for the past years (regression). 

I accept that some users don't want this behavior, and it can be disabled, but 
IMHO it should default to be linked, as would other VAJ/IDE users I presume. 


2 more things i would like to see with this feature:

1&gt; If only one option don't show dialog but directly link it.
   Linking for example the package explorer when it is the only thing that can 
currently be linked can then be done with one keystroke.

2&gt; If i am in to Go Into "Mode" (package explorer or navigatior) and i say show 
in XXX on a resource that isn't in that portion of the view then the view 
doesn't go up and tries to select it there (and still not there go up ....)

number one of my request will be (sort of) fixed when 31106 is implemented.
I have a suggestion that should help make this more usable. In the help viewer 
there is a toolbar button called 'synchronize navigation' that finds the 
current help page over in the table of contents. How about a similar button on 
the editor or workbench toolbar that does a 'show in package explorer' for the 
resource currently being edited? I think that would address the problem with 
more gestures.
Should support the following views as Show In sources:
Task List
Bookmark List

Main feature implementation and bug fix for not having to reset perspectives 
made it in for M5/RC0.
Still some work to do for RC1.

Regarding Ed's comment #41 and other comments on back-linking, there are 5 
basic models we contemplated:

1. Automatic back-linking.
Pros: 
- doesn't require any extra clicks to show editor input in view
- always in sync between editor and view
Cons:
- surprising loss of context when you close an editor and it warps you to the 
selection for the newly active editor (sometimes you want this, sometimes you 
don't)
- doesn't support view-to-view linking (it could, but it would probably be too 
confusing)
- requires preferences (for each view) to turn it off, since not all users like 
this mode of operation

2. Explicit Show In XYZ view actions (either on the context menu or the 
Navigate menu) provided by the source part.
Pros:
- straightforward
- quick to use via mouse if on context menu (not too bad via keyboard either if 
mnemonics assigned well)
- can assign keybindings to the individual actions
Cons:
- its "egoistic" -- source part has to hardwire support for its preferred 
targets
- doesn't scale well when there are many potential targets

3. Sync With Editor action in the Navigate menu and on the view toolbar (we had 
this in M4, supported by the Navigator)
Pros:
- one click syncs you up (if view is visible and is not a fast view)
Cons:
- slower than option 2 if view is not open or is a fast view
- not great for keyboard navigation: even if you assign a keybinding to the 
action, the target view must still be activated first
- requires every target view to add a button to their toolbar (visual clutter)

4. Sync With Views action for the editor (broadcasts to all targets; what Ed 
suggests)
Pros:
- one click syncs you up (in all interested views, even if obscured)
- can assign a keybinding to it
- scales well
Cons:
- may cause loss of context since you may not want all views to be sync'ed up 
(e.g. may be doing different things in Navigator vs. Package Explorer)

5. Show In... (user chooses target)
Pros:
- quick to invoke (assuming mouse users will use accelerator with left hand, or 
reassign it if right handed)
- allows explicit selection of target
- remembers last selection, so should be as quick as dedicated Show in XYZ 
action if you're usually going to the same one
- scales well (no extra UI in sources or targets, and doesn't require prefs)
- allows more synergies than the other options (view to view navigation)
Cons:
- must be manually invoked (i.e. it's not option 1)

Overall, we felt option 5 works best.  Note that the issue of scalability is 
important for us.  We don't see it so much just in the SDK, but this is a real 
issue for larger products like WSAD.

Will the automatic backlinking be resurrected ?

The grand picture is one thing, but the obvious scenario where I am inside the 
Java perspective with my package view next to my editor (default) shouldn't be 
treated as a rare case. If I have multiple navigator views, then there is a 
strong chance that they are stacked on top of each other, and thus only the 
active one should try to keep up with my editor selection (other navigator 
would perform a check when it gains focus).


We have no plans to add backlinking back in the Navigator.
It's up to the JDT-UI team to decide if they want to add it back in the Package 
Explorer (and whether it's on by default).

I know its unfair, but why do we have to change a good feature to a far more 
complicated one (at least in the moment)? Why so late in the 2.1 time frame? 
We already have M5, hopefully its possible to get a more comfortable solution 
in 2.1
Have not read all the comments, so there is perhaps a deep good reason to 
change this.But I as an user want to be informed about this. I would expect to 
have an button on package view or an action at the editor context menu to show 
the current cu in the package view.
I felt like an idot as I wanted to export(drag&amp;drop) a bunch of java files. 
Scrolling the file to the package statement and clicking my way through the 
package view. 
Now I know the the Open In Action, but it is to complicated to use it. 
If the new interface is not useable to bring the old behaviour back or a one 
click|one action to focus the package view on the current type, it should be 
changed to allow this.
The browsing perspective will be my new friend, but I can not drag&amp;drop from 
there.
And add some pointers to the docs (changes from 2.0 to 2.1)
Sorry for the rant.
&gt;Why did we change this?
The answer is simple... to get feedback from our users.
We have forced some new behaviour on you and are now
listening. In fact, we are getting valuable feedback. 

Here is some more background. Navigation from an 
Editor to a View and from a View to another View are an 
important interaction in Eclipse. The old solution (Show in Package 
Explorer/Navigator actions/back linking) is not general enough. 
Plug-ins are contributing additional views and it is important 
to not lock them out and allow them to get the same first class 
treatment as the Package Explorer or Navigator. The current 
Show In... (alt+shift+s) is such a general mechanism. What
we wanted to find out is whether this general mechanism
is sufficent. Therefore we have removed the older mechanisms
from the UI in the last build. The feedback we are getting
tells us that users like the more general navigation support, 
but they also like the existing "short cuts" (Show in Package 
explorer/back linking). So we will look into improving this.
Navigate &gt; Show In... seems always disabled in M5.

Since you're looking for feedback, I have always hated the Show in Package
Explorer option (I don't use the Package Explorer like an Outline view, either)
and it is darned hard to find out where to turn it off. If you do reinstate
this, please don't make it the default.
[EG. we want feedback]
Ok. Than a more constructive one from my side. I also did not like the old 
linking behaviour very much. But it was a fast way to get the resource and 
package location of a class. And it was not disturbing enough for me to change 
it. 
In newer builds (&lt;M4) I just added a navigator with no linking behaviour to 
the java perspective, so I could select there any resource I want, without the 
disturbing jump in packageview if I select an editor.
The imo best solution would be to have something like a prefered object for 
Show In... .So it should be posssible to have a one-click|shortcut action to 
move the packageview to the current active edior resource. Another way around 
would be to simply Show In the first view in the list. And to let the user 
order the list of views.
(BTW if you join the discussion now and don't want to read the full bug 
history - pls read at least Nick's analysis in comment #44).

Bob - "I have always hated the Show in Package Explorer option" by this you are 
referring to the preference setting (back linking) and not the "Show in Package 
Explorer" in the Java Editor's context menu?
Pls see  comment #31 for the "empty show in menu" problem.

Martin - a light weight prompter and (a la ctrl-F7) plus sorting the target 
list MRU would cover your needs - correct?
*** Bug 31406 has been marked as a duplicate of this bug. ***
I see the "Show in..."  and "Link package explorer..."  really as two 
separate functions.  The "Show in..." feature is nice if you want to show an
editor in any of a number of different views.  You would do this as the need
arises, probably infrequently.  But the "Link package explorer..." is nice if
that is your main view and you always want that view and the editors to be
synchronized.  (As it is now, if I wanted this functionality, I would have to do
a "Show in..." each time I changed my editor.)

The functionalities could possibly be combined.  The "Show in..." could have a
user-defined default view that it automatically shows in.  And you could still
manually do a "Show in..." for any other views that you were interested in.   
[erich; read before]

I liked option 3. Good from a users perspective. The view should change - ask 
the view. Easy to find. 

I have to confess I get used to the alt+shift+s;key down;enter. I would try 
to 'hack' it to have the packageview always first. Now its a bit random wich 
view is first. So a user defined sorting sounds not bad.

But also a ctrl+f7|f6 style control could be nice. 
My major problem is to find the action. I never expected it in the navigate 
menu, and also the label Show In... does not point to its usage. Its to 
general.
My state of mind is, show me where the type|resource is situated in the 
project. I do not think which view would be better to show the current 
resource. 
Re: comment 54...  

Instead of doing "alt+shift+s;key down;enter", you should be (are?) able to just
bind a key mapping to "Show in Package Explorer".  Then, presumably, you only
have to press your key mapping and it will automatically jump to the selection
in the Package Explorer, without you having to choose from the listing.   I say
"presumably" because I can't seem to get that key mapping to work when I set it
in the preferences.  Does anyone know if this should or already does work?  And
if it works like I described?  That is, only one key-mapping press will
immediately show the selection in the Package Explorer.  If this is possible, it
would greatly alleviate my dislike of the new "Show in..." method, in that I
find it takes to many keystrokes.  If it was able to be tied to a simple
keystroke, that would be much more efficient. 
Erich - I misspoke. What I have always hated, in terms of #44, is automatic
back-linking. Automatic back-linking was not just bothersome when you closed an
editor; it was equally annoying when you used Open Type to open the source for a
class in the JDK or Eclipse. Whole hierarchies unfolded to expose these
packages, making the view very difficult to use to locate one's own classes. I
posted this comment mainly so you didn't get feedback only from the "Where's
this wonderful feature?" crowd, whose usage patterns are obviously different
than mine.

Having re-read Nick's analysis, I agree with the conclusion. It is important
that the feature work symmetrically across all applicable views. By use cases,
it is easy to see that sometimes users will want a particular view reset and
sometimes they won't. For example, when you open an editor, it is often helpful
to have the tasks view scroll to the tasks for that resource. But when you are
working on one of those tasks, it can be unhelpful, as the tasks view provides a
shortcut back to your locus of interest. The more views there are, the worse the
problem gets, but Eclipse has enough to illustrate the issues.

However, I note that there are a couple of special cases that test this general
rule. 

a. In M5, selection of an editor in the editors view does not change the
selection in the Package Explorer, but selection in the Package Explorer does
change the selection of an editor in the editors view, if the editor is already
open. Is this asymmetry justified when there are other equally convenient ways
to expose an open editor, or is a hangover from automatic back-linking?

b. Currently the Java editor (and mine) "opt out" of the general strategy and
allow the outline view to be back-linked (symmetrically). But I think this
exception is only possible because both views are contributed by the same
plugin. Would a plugin contributing a graphical GUI editor view that wanted to
auto-synch with source selections be out of luck? (Is this one of those "Show me
one and we'll refactor to accomodate it," questions. :-)
*** Bug 31492 has been marked as a duplicate of this bug. ***
I don't care how it's done nor how ugly its done, all I want is the explorer to
sync with the editor. It is such a great feature that you can't just remove it! 

Now it just sucks. Not even mapping a key like ctrl-2 to "show in package
explorer" can make it work. Forced to alt-shift-S, with an aimed double click:
that is WAY too annoying. It should not require keyboard at all for such a
common action. It was allright since 2.0. Just put it back.

I actually select some editor to avoid endlessly clicking in the tree! I even
keep editor or tasks, (now bookmarks since they are finally in a table and
sortable) knowing that the tree will open exactly at the package I want to work on.

Bye now, I gotta rollback to my good "old" i20030122...

it IS very annoying.
in M3 it used to be just fine, but (if I remember correctly), the collapse all 
button was not there yet, and the tree became very expanded.
in M4, it started to act wired, and sometimes opened the file in the package 
explorer when I opened the dialog anyway, but most of the time only if the 
package was already opened.
this was a little annoying, but I could live with that.
now its now opening it at all, which really does lower my peoductivity.
I would really love to see a good solution for this as soon as possible.

*** Bug 31509 has been marked as a duplicate of this bug. ***
*** Bug 31481 has been marked as a duplicate of this bug. ***

I have had an argument or two about this the last few days, and I thought I 
would share.  

I generally agree with the "what's wrong with the current picture" analysis.  I 
hated the Package Explorer linking.  I don't like views whizzing around me.  I 
also agree with Bob:  if you bring it back, please turn it off by default.  
Colleagues of mine, however, seem to find this whizz-tastic option invaluable, 
so I imagine you will get (are getting) a lot of requests to bring it back.

I did use the Show In Package Explorer context menu quite often.  In fact, I 
have now selected "Open Super Implementation" about 25 times by accident.  My 
hands are apparently trained on it, but I am learning.

After much deliberation, I have decided that any single-action solution to see 
the editor file in the most often used target (package explorer) would be OK.  
I can train myself to use something other than the old context menu, but I 
think there is a consensus that Alt-Shift-S-[Down]-Enter is a bit too much.  
Normally I would beg that it not be Ctrl-F7, but I supopse now I can change it 
myself (go key bindings!) :)  

-Andrew (one of the anti-whizzing-views people)

*** Bug 31753 has been marked as a duplicate of this bug. ***
*** Bug 31580 has been marked as a duplicate of this bug. ***
Just to throw a little chaff in front of the missile, I have yet to see Show
In... or its accelerator enabled. I have performed the ritual dance (not a
pretty sight) and incanted the ritual cant, but the replacement feature seems to
be out of order.
Bob, which build are you running?
In the M5 build (I20030206 17:00) and more recent builds, you should not have 
to reset the perspective for this to be enabled.
You need to be in the Resource perspective, Debug perspective or one of the 
Java perspectives (or custom perspectives based on any of these).
The active part must be a text editor (either plain or Java) or a view that 
provides a Show In... source (e.g. Navigator or Package Explorer).  The text 
editor is the easiest to see since if you're in a view, it removes itself from 
the list.

If this doesn't work for you, could you please indicate which build you're 
running and attach a copy of your workbench.xml file 
(from .metadata\plugins\org.eclipse.ui.workbench).

I agree that action #5 in comment #44 is the best option. However I don't see 
any reason to remove the users ability to toggle (on a view per view basis) 
automatically syncing with the editor selection. For each view that supports 
IShowIn (* not real interface name) allow the user to configure if they want 
it to automatically sync. Leave them all off by default. Users that like the 
feature and that are not confused by the context switch (or annoyed) can 
enable it for the views that they like to be synced automatically, and the 
rest can use ctrl-shift-s as needed. Sound look a good idea?

Also, I am using M5 and bound ctrl-d to sync with package view, and ctrl-shift-
d to sync with navigation view (global scope, standard configuration, standard 
configuration active) and hitting those keys while in the editor has no 
effect. ctrl-shift-s works just fine however. Is this not implemented in M5?

When I was using M3/M5 I used the auto sync feature to quickly find an item in 
the navigator or package view so that I could access the team menu or other 
similar item. Some items in my tree can be quite deep and take while a few 
seconds of hunt and click just so I can access some menu on a file. It is very 
convient to open a file with ctrl-shift-t or ctrl-shift-r in an editor, sync 
the navigator view, and preform my action. I would like to have this behavior 
be as effecient as possible otherwise I might as well hunt and click my way to 
the file myself. 
Nick, are you saying it doesn't work in the Plug-in Development perspective? No
wonder I was puzzled. Now that I open the Java perspective, I see it enabled.
But I need it to be enabled in PDE, where I do all my work. :(
I notice it isn't enabled in my XML perspective, either. What does a perspective
need to do to get this to work? (Would have been nicer if it were
backward-compatible.)
With the support in M5, individual perspectives or plugins that extend them 
must explicitly register Show In... targets with the perspective.
In M5, this was only done in the perspectives mentioned in my last note.
Spec for the perspectiveExtensions extension point, or the showInPart elements 
in the plugin.xml for org.eclipse.ui or org.eclipse.jdt.ui.

Yesterday I released support for the active part to provide a list of items as 
well, so the Java Editor could list the Navigator and Package Explorer 
independent of which perspective is active.
See org.eclipse.ui.part.IShowInTargetList.

Also added Show In... source support for the Tasks and Bookmarks view, and 
augmented the ResourceNavigator to handle markers in the selection.

Ok, I can do that. Thanks.

Should I assume that Show In... will be supported in PDE perspective (one way or
another) or should I file another bug report?
I think if the Java editor specifies the Navigator and Package Explorer as Show 
In targets, there will be less of a need for particular perspectives such as 
the PDE perspective to also list targets.  However, if the PDE perspective has 
other views that it wants to include as Show In targets, then it will have to 
list them.
Based on your feedback and discussions with the usability team, we have decided 
to do the following.  

Show In support (in Navigate main menu):
- Change to using a submenu for Show In rather than a dialog or lightweight 
prompter.  There will be no accelerator, but mnemonics can be used.
- Items in the submenu will be arranged in Most Recently Used order.
- The order will be persisted with the perspective.
- The Navigator and Package Explorer will be listed as Show In targets by the 
Java editor, so they will appear when the Java editor is active, regardless of 
the current perspective.

"Show In Package Explorer" context menu item:
- Since this will be the most commonly used Show In item from the Java editor, 
the Java editor will add "Show in Package Explorer" back to its context menu.
- In addition, it will register this action with the keybinding service, 
allowing the user to assign it an accelerator key (it will have none by 
default).

Back-linking:
- Add back-linking back to the Navigator and Package Explorer, but not as a 
global preference setting.
- It will now be a per-view toggle setting, available on the toolbar (and also 
the view/triangle menu, for accessibility).  Note that this also allows one-off 
syncs (for those that have linking off) by clicking on the button twice.
- The tooltip / menu item name will be "Link With Editor".
- The setting will be remembered with the view.
- The default setting will be off (no back-linking) in the Navigator and 
Package Explorer.
- The Java Browsing views will support this as well, but may choose to have it 
on by default.
- As was the case in 2.0, the setting will only control whether back-linking is 
on (i.e. a change in editor affects the selection in the view).  Forward 
linking will always be on (a change in selection in the view brings the 
corresponding editor to front if it is already open).
- Other Navigator-like views in other Eclipse-based products will be encouraged 
to support this.

Thanks to all for your feedback and patience with us on this late-breaking item 
(this has got to be one of the most cc'ed PRs of all time!)

Backlinking sounds good to me, as long as I get some global preference 
(Jdt/Platform?) where I can tell it what the default is, unless the backlinking 
behavior was on by default &lt;g&gt;

I don't want to be forced to toggle another preference on a per package 
explorer basis (yes it is more powerful, but in the end I just want backlinking 
by default), i.e. more power is good for advanced scenarii, but the simple 
browser behavior we used to have shouldn't be made more complex.



Actually, if the package explorer individual setting becomes the default for 
new windows, I believe I am a happy camper again.
The back-linking toggle has been added to the Navigator.  This is in last 
night's nightly build and will be in tomorrow's integration build.

That's good, because just as strongly as you want back-linking to be the
default, I want it not to be the default. ;-}
Above I stated:
The default setting will be off (no back-linking)

To clarify, this means that when creating a new view, either in a new window or 
after closing and reopening a view, the setting will be off.

To do what Philippe requests in comment #75, there are three options:

1. Inherit the setting from the window where you choose New Window.  This only 
addresses the New Window case and not the close/reopen case.  We also don't 
really have any good mechanisms or policies for managing the inheritance of 
settings between windows.

2. Remember the last setting as a global (persisted, e.g. using the dialog 
store).  This would address both cases, but may be confusing to the user.  E.g. 
if I turn it on in one window, the turn it off in another window, the next 
window I open will have it off, even if I open the new window from the window 
where it's on.

3. Use the preference override mechanism.  Note that we have kept the old 
linking preference internally, to allow products to override the default 
setting.  See IWorkbenchPreferenceConstants.LINK_NAVIGATOR_TO_EDITOR.  
This could also be used to meet Philippe's needs, but it's a hidden feature 
(not accessible from the UI).  
You can add the following to the plugin_customization.ini of the primary 
feature's plugin (org.eclipse.platform):
org.eclipse.ui/LINK_NAVIGATOR_TO_EDITOR=true

JDT will adopt the same approach for the Package Explorer.

For 2.1, I'd prefer to leave it at that since I have concerns with Option 2 
above.

There's something wrong with this analysis. Opening a new window currently
discards all perspectives except the current one at the time and resets all
perspective attribute to defaults. This case should not be affected by #2, or it
would behave very differently than everything else.

But the close/re-open case absolutely positively should behave as in #2. This is
the way it behaves with, e.g., filters and other view properties.
Here are the changes that JDT released into the integration build of 02018:

* all the "global" back linking preferences got removed.

* Package Explorer: 
     same behaviour as Navigator

* Browsing perspective views: 
     - back linking is stored per view.  Back linking is on by default
     - the back linking toggle isn't available in the toolbar, but
       only in the view menu. The rationale is that these views
       are almost always used with back linking. Adding a back linking
       control to the view's toolbar would have made this option too prominent.
 
* Type hierarchy view:
     - back linking stored per view. Off by default.
     - the back linking toggle is only available from the view menu.

To be done:
* Revive Show in Package Explorer in the editor context menu.
I apologize for replaying this one note, but the last response simply said it
would be possible for JDT to implement. I am hoping for some indication JDT
actually will implement in 2.1:

Show In... (from editor view to Package Explorer/Navigator) will be enabled in
the PDE perspective, yes?
&gt;Show In... (from editor view to Package Explorer/Navigator) will be 
&gt;enabled in the PDE perspective, yes?
yes - this also went into the integration build of today.

Gosh, it took quite a while to read it all !!

Ok, based on comment #73, it seems that to enable back linking (I use it mainly
in the package explorer), you will have to click on the button on the toolbar,
or use alt+shift+s and then select package explorer.

I saw the comment which says if I set the following :
    org.eclipse.ui/LINK_NAVIGATOR_TO_EDITOR=true
backlinking would work - but I think it will enable backlinking only for the
navigator, not the package explorer. Something like
LINK_PACKAGE_EXPLORER_TO_EDITOR=true is probably needed.

Personally, I really use the backlinking a lot. I want it to be automated in the
package explorer view. Many times I use Ctrl+Shift+T to open a class in a
particular package, and because of back-linking, I can see all the classes in
that package immediately since that package is also expanded. Now I have another
step to do the same operation. It is very useful to have that on in conjunction
with my Perforce Team provider, since now after opening the file, I can
immediately right-click on it to see its properties.

I think its actually a hassle to use a mouse gesture/keyboard everytime to
figure out where the currently opened file is. If we can't do anything, please
put an option in the preferences which enables backlinking for the package
explorer. You can leave it off by default for people who hate the explorer
whizzying around, but for people who use it (and from reading the comments it
seems people use it mostly on the package explorer) leaving that option in there
is actually a blessing. And an extra item in the preferences menu, especially
for something as important as this feature is not a very bad thing.


Thanks from a user who loves the backlinking feature :)

Jalpesh.
The toolbar button is a toggle button, so once you've turned linking on, the 
view will stay synchronized with the editor.

The Navigator now remembers the Link With Editor settings in the dialog store, 
as per Option 2 in comment #78, so we no longer disadvantage those that prefer 
linking on.  It seems the pros outweigh my imagined cons on this one.

JDT will do this as well.

Added IWorkbenchActionConstants.GROUP_SHOW_IN.  A group with this id should be 
used in context menus with "Show in ABC" actions (e.g. the Package 
Explorer's), to allow other plugins to add their "Show in DEF" actions to the 
same group.

*** Bug 32361 has been marked as a duplicate of this bug. ***
In the I20030221 build, Show In has been changed to use a submenu rather than a 
dialog (as mentioned in comment #73).

There is a known problem with the order of items.  The items should be arranged 
with the most recently used item first, but this can only be done for items 
that are contributed by the perspective, not by the current part.  Items 
contributed by the current part are always added at the end.

Since it now uses a submenu, there is no longer any accelerator (used to be 
Alt+Shift+S).  Keyboard users can use mnemonics: Alt+N, W.

Is there any reasoning behind removing the accelerator for this feature? Sure 
I can access the menu with Alt-N W, but I would much rather do it with fewer 
key strokes. It doesn't bother me that these bindings aren't set by default, 
but please atleast give me the ability. 
*** Bug 32611 has been marked as a duplicate of this bug. ***
We switched to a submenu because it was felt that the number of items will 
typically be small, and a dialog is too heavyweight for this purpose.
Also, JDT has added back the most common case: Show in Package Explorer is back 
on the context menu of the Java editor.
If you're a keyboard user, you can activate this using:
&lt;menu key or Shift+F10&gt;, K
or use mnemonics as you illustrate.

The accelerators was removed because you cannot assign accelerators to submenus.

Mouse users can click twice on the link icon (if the view is already visible).


I recall you were adding API so any editor can enable this menu. Could you point
out where it is?
I'm using the RC1 build, and I do not see the toolbar button (in the java
perspective) which will allow backlinking on.
Sorry for the previous comment, I was looking in the main toolbar. The button is
available in the Package Explorer Toolbar.

For Show In to be enabled, the source part (current part) needs to provide a 
ShowInContext, and there must be some list of target ids to show.  These can be 
provided either by the perspective or the source part.  Note that the source 
part is excluded from the list of targets.

For the ShowInContext, the part can provide one explicitly by implementing 
IShowInSource (either directly or via IAdaptable), or, if the part is an editor 
and does not implement IShowInSource, then a context is created from the 
editor's input and selection (using editor.getEditorInput() and editor.getSite
().getSelectionProvider().getSelection(), with the appropriate null checks).

To list target parts on a perspective, use &lt;showInPart id="..."\&gt; elements in 
an extension off of the org.eclipse.ui.perspectiveExtensions extension point.

The source part can provide a list of target parts by implementing 
IShowInTargetList (either directly or via IAdaptable).

Currently only views can be listed as targets.  Targets must implement 
IShowInTarget (either directly or via IAdaptable).

IShowInSource, IShowInTarget and ShowInContext are all declared in 
org.eclipse.ui.part.

Thanks. The combination of the default context that is created plus the added
&lt;showInPart&gt; elements in the manifest seem to work quite well.

I notice the &lt;showInPart&gt; elements seem to have no bad effect in 2.0, allowing
an editor to remain 2.0-compatible and still support Show In in 2.1. Perhaps
that is how all extensions behave (don't complain about unrecognized elements),
but I wasn't sure it would work until I tried it.
The eclipse runtime ignores unrecognized elements.

Recently PDE added support for checking extensions against the schema for 
extension points, so it would probably generate warnings in this case.  But 
that's only at development time.

Fixed sorting.  Initial order is: targets from perspective, followed by 
targets from active part (eliminating duplicates).  It then maintains MRU 
order.  The last used timestamps are persisted with the perspective (including 
targets from parts).

This is the last planned change for Show In for 2.1.

If there are defects found or other issues encountered, please enter new bug 
reports rather than reopening this one.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30003" />
    <CreationDate amount="2003-01-22 13:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Stellation" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Running tests in remote mode results in failed autentication</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I'm running under Redhat Linux 7.3 with a PostgreSQL server version 7.2.  I
compiled Stellation's core.  All the tests passed flawlessly in local mode. 
When run in remote mode, however, the test failed at test 0 with an error
message indicating that authentication had failed.
Appears to be an envirormental dependency: the instructions for running the
remote test assume the existence of a .svcrc file. Without the .svcrc file, the
administrator password is not set, and this prevents remote authentication from
working.

By adding a password to the command line of the svcadmin call that creates the
repository, the password is set correctly, and the test appears to run.

Created attachment 3110
The corrected build.xml file.
The previous problem summary was correct. The fix is a change in
org.eclipse.stellation.core/doc/build.html. The corrected file is attached. 
This is variant of 29965, and Mark is also working it. I'm passing it on to him
Bug was in outdated documentation. The doc has been marked as out of
date, and a document containing the correct instructions was written by 
Jim Wright.</WithStack>
    <WithOutStack>I'm running under Redhat Linux 7.3 with a PostgreSQL server version 7.2.  I
compiled Stellation's core.  All the tests passed flawlessly in local mode. 
When run in remote mode, however, the test failed at test 0 with an error
message indicating that authentication had failed.
Appears to be an envirormental dependency: the instructions for running the
remote test assume the existence of a .svcrc file. Without the .svcrc file, the
administrator password is not set, and this prevents remote authentication from
working.

By adding a password to the command line of the svcadmin call that creates the
repository, the password is set correctly, and the test appears to run.

Created attachment 3110
The corrected build.xml file.
The previous problem summary was correct. The fix is a change in
org.eclipse.stellation.core/doc/build.html. The corrected file is attached. 
This is variant of 29965, and Mark is also working it. I'm passing it on to him
Bug was in outdated documentation. The doc has been marked as out of
date, and a document containing the correct instructions was written by 
Jim Wright.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30004" />
    <CreationDate amount="2003-01-22 14:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Linked Resources] Mini new folder dialog doesn't have room for warning message</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="19">
        <Lines>
          <Line>1) The warning or error message line is too short in the NewFolderDialog.  Some</Line>
          <Line>of the warning messages will not fit in this space.  For example, the warning</Line>
          <Line>about a linked resource overlapping another resource does not fit.  The warning</Line>
          <Line>should be allowed to wrap, or minimally the user should be able to resize the</Line>
          <Line>dialog to see the entire message.</Line>
          <Line />
          <Line>2) The overlapping link warning message is missing its warning icon (the yellow</Line>
          <Line>triangle).  This may be because it just didn't fit.</Line>
          <Line>Likewise, there isn't enough room for the resolved location string.  This should</Line>
          <Line>also be allowed to wrap.  The location entry field is also too small. In case</Line>
          <Line>you weren't aware of it, there is a constant defined so that entry fields and</Line>
          <Line>message areas have a consistent size.  See IDialogConstants.ENTRY_FIELD_WIDTH</Line>
          <Line>and MINIMUM_MESSAGE_AREA_WIDTH.</Line>
          <Line>Changed NewFolderDialog to subclass from SelectionStatusDialog and made it</Line>
          <Line>resizable. Entered bug 30326 requesting a wrapping MessageLine. This depends on</Line>
          <Line>SWT support.</Line>
          <Line>The text field now uses the standard width which makes it a few pixels wider</Line>
          <Line>than before.</Line>
          <Line>Fixed in &gt;20030127.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: I20030122

1) The warning or error message line is too short in the NewFolderDialog.  Some
of the warning messages will not fit in this space.  For example, the warning
about a linked resource overlapping another resource does not fit.  The warning
should be allowed to wrap, or minimally the user should be able to resize the
dialog to see the entire message.

2) The overlapping link warning message is missing its warning icon (the yellow
triangle).  This may be because it just didn't fit.
Likewise, there isn't enough room for the resolved location string.  This should
also be allowed to wrap.  The location entry field is also too small. In case
you weren't aware of it, there is a constant defined so that entry fields and
message areas have a consistent size.  See IDialogConstants.ENTRY_FIELD_WIDTH
and MINIMUM_MESSAGE_AREA_WIDTH.
Changed NewFolderDialog to subclass from SelectionStatusDialog and made it 
resizable. Entered bug 30326 requesting a wrapping MessageLine. This depends on 
SWT support.
The text field now uses the standard width which makes it a few pixels wider 
than before.
Fixed in &gt;20030127.</WithStack>
    <WithOutStack>Build: I20030122

1) The warning or error message line is too short in the NewFolderDialog.  Some
of the warning messages will not fit in this space.  For example, the warning
about a linked resource overlapping another resource does not fit.  The warning
should be allowed to wrap, or minimally the user should be able to resize the
dialog to see the entire message.

2) The overlapping link warning message is missing its warning icon (the yellow
triangle).  This may be because it just didn't fit.
Likewise, there isn't enough room for the resolved location string.  This should
also be allowed to wrap.  The location entry field is also too small. In case
you weren't aware of it, there is a constant defined so that entry fields and
message areas have a consistent size.  See IDialogConstants.ENTRY_FIELD_WIDTH
and MINIMUM_MESSAGE_AREA_WIDTH.
Changed NewFolderDialog to subclass from SelectionStatusDialog and made it 
resizable. Entered bug 30326 requesting a wrapping MessageLine. This depends on 
SWT support.
The text field now uses the standard width which makes it a few pixels wider 
than before.
Fixed in &gt;20030127.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30005" />
    <CreationDate amount="2003-01-22 14:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Can't create linked source folder in new java project wizard [build path]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="13">
        <Lines>
          <Line>1) Open the new java project wizard</Line>
          <Line>2) Enter a name, hit next</Line>
          <Line>3) Click "Add Folder" on the "Source" tab.</Line>
          <Line />
          <Line>-&gt; dialog comes up that doesn't have an option to create a new folder</Line>
          <Line />
          <Line>4) Click cancel.  Click "Browse" next to the output folder field</Line>
          <Line />
          <Line>-&gt; this dialog allows you to create a new folder (even a linked folder)</Line>
          <Line />
          <Line>5) Click cancel.  Finish the wizard.</Line>
          <Line>6) Open the java build path property page</Line>
          <Line>3) Click "Add Folder" on the "Source" tab.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: I20030122

1) Open the new java project wizard
2) Enter a name, hit next
3) Click "Add Folder" on the "Source" tab.

-&gt; dialog comes up that doesn't have an option to create a new folder

4) Click cancel.  Click "Browse" next to the output folder field

-&gt; this dialog allows you to create a new folder (even a linked folder)

5) Click cancel.  Finish the wizard.
6) Open the java build path property page
3) Click "Add Folder" on the "Source" tab.

-&gt; now the dialog allows you to create a new linked folder.  It should allow you
to do this from the wizard.
fixed &gt; 20030122</WithStack>
    <WithOutStack>Build: I20030122

1) Open the new java project wizard
2) Enter a name, hit next
3) Click "Add Folder" on the "Source" tab.

-&gt; dialog comes up that doesn't have an option to create a new folder

4) Click cancel.  Click "Browse" next to the output folder field

-&gt; this dialog allows you to create a new folder (even a linked folder)

5) Click cancel.  Finish the wizard.
6) Open the java build path property page
3) Click "Add Folder" on the "Source" tab.

-&gt; now the dialog allows you to create a new linked folder.  It should allow you
to do this from the wizard.
fixed &gt; 20030122</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30006" />
    <CreationDate amount="2003-01-22 14:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Java Perspective: Eclipse freezes when changing focus.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- can you please try to reproduce it with M5, which will be released soon.</Line>
          <Line>- does this behaviour also show up in the Resource Perspective. For example</Line>
          <Line>when you click on the scroll bar of the navigator.</Line>
          <Line>Works for me using build 200302061700</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Using build 200212181304 (M4, Linux-Motif). 

Steps to reproduce:

Open some java files in java perspective. Set focus to an open java editor.
Click on an other file in the package explorer &amp;#8594; Eclipse freezes and has to be
killed. This happens often, but not always. This did not happen in M3.
Daniel, what does &amp;#8594; mean ?

Adam, please try to reproduce it. 
Dirk: &amp;#8594; should be a right arrow. Didn't know that bugzilla can't show it.
will have a look on motif
There is something entirely wrong with the focus in package Java perspective on
motif-m4. When an editor has the focus and I want to click into package
explorer, this works only, if I first click the selected item in package
explorer. When I click on scrollbars or other items, eclipse freezes.
Changed summary.
cannot do anything for M5 - problems with my linux box
Daniel, two things:

- can you please try to reproduce it with M5, which will be released soon.
- does this behaviour also show up in the Resource Perspective. For example
  when you click on the scroll bar of the navigator.
Works for me using build 200302061700</WithStack>
    <WithOutStack>Using build 200212181304 (M4, Linux-Motif). 

Steps to reproduce:

Open some java files in java perspective. Set focus to an open java editor.
Click on an other file in the package explorer &amp;#8594; Eclipse freezes and has to be
killed. This happens often, but not always. This did not happen in M3.
Daniel, what does &amp;#8594; mean ?

Adam, please try to reproduce it. 
Dirk: &amp;#8594; should be a right arrow. Didn't know that bugzilla can't show it.
will have a look on motif
There is something entirely wrong with the focus in package Java perspective on
motif-m4. When an editor has the focus and I want to click into package
explorer, this works only, if I first click the selected item in package
explorer. When I click on scrollbars or other items, eclipse freezes.
Changed summary.
cannot do anything for M5 - problems with my linux box
Daniel, two things:

- can you please try to reproduce it with M5, which will be released soon.
- does this behaviour also show up in the Resource Perspective. For example
  when you click on the scroll bar of the navigator.
Works for me using build 200302061700</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30007" />
    <CreationDate amount="2003-01-22 14:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Can't hit next in new java project wizard [build path] [code manipulation]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1) Open the new java project wizard</Line>
          <Line>2) Enter a name, hit next</Line>
          <Line>3) Hit the back button</Line>
          <Line>4) Deselect the "Use default" check box</Line>
          <Line>5) Type in a location</Line>
          <Line />
          <Line>-&gt; It won't let me hit next, because it claims the project already exists.</Line>
          <Line />
          <Line>6) Click cancel</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: I20020122

1) Open the new java project wizard
2) Enter a name, hit next
3) Hit the back button
4) Deselect the "Use default" check box
5) Type in a location

-&gt; It won't let me hit next, because it claims the project already exists.

6) Click cancel

-&gt; The project doesn't exist.
fixed &gt; 20030123</WithStack>
    <WithOutStack>Build: I20020122

1) Open the new java project wizard
2) Enter a name, hit next
3) Hit the back button
4) Deselect the "Use default" check box
5) Type in a location

-&gt; It won't let me hit next, because it claims the project already exists.

6) Click cancel

-&gt; The project doesn't exist.
fixed &gt; 20030123</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30008" />
    <CreationDate amount="2003-01-22 15:07:00 -0500" />
    <DupId amount="24045" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Java model out of date after deleting parent of source folder [package explorer]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Open the new java project wizard</Line>
          <Line>2) Enter a name, hit next</Line>
          <Line>3) Click "Add Folder".  Type "a/src". Click ok.</Line>
          <Line>4) Click finish</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>4) Switch to resource perspective.  Delete "a" in the navigator.</Line>
          <Line>5) Switch back to java perspective.</Line>
          <Line />
          <Line>-&gt; Observe the folder "a" is still there.</Line>
          <Line />
          <Line>6) Try to delete folder "a" in packages view.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build: I20030122

1) Open the new java project wizard
2) Enter a name, hit next
3) Click "Add Folder".  Type "a/src". Click ok.
4) Click finish

-&gt; Observe in the packages view, there is folder "a" and source folder "a/src".

4) Switch to resource perspective.  Delete "a" in the navigator.
5) Switch back to java perspective.

-&gt; Observe the folder "a" is still there.

6) Try to delete folder "a" in packages view.

-&gt; Error.


*** This bug has been marked as a duplicate of 24045 ***</WithStack>
    <WithOutStack>Build: I20030122

1) Open the new java project wizard
2) Enter a name, hit next
3) Click "Add Folder".  Type "a/src". Click ok.
4) Click finish

-&gt; Observe in the packages view, there is folder "a" and source folder "a/src".

4) Switch to resource perspective.  Delete "a" in the navigator.
5) Switch back to java perspective.

-&gt; Observe the folder "a" is still there.

6) Try to delete folder "a" in packages view.

-&gt; Error.


*** This bug has been marked as a duplicate of 24045 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30009" />
    <CreationDate amount="2003-01-22 15:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Wizards] New project wizard should help creating locations relative to path variables</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build: I20030122

The new project wizard should now allow users to specify the project location
relative to a workspace path variable.  This should be similar to the UI for
creating linked resources relative to path variables.  It's actually possible to
create projects relative to path variables by entering the path directly into
the entry field, but the UI should be more helpful (provide a button for
browsing variables, show the resolved path, etc).
Have a project with a location based on path variable is bad news if the 
variable is unbound. I've recommended to John that this recently-added feature 
be removed from the Core API.
Moving back to core to decide further action.
For now, closing bugs not planned for 2.1.  Will reopen after 2.1 release.
Reopening to change resolution.
We won't be adding this feature back.</WithStack>
    <WithOutStack>Build: I20030122

The new project wizard should now allow users to specify the project location
relative to a workspace path variable.  This should be similar to the UI for
creating linked resources relative to path variables.  It's actually possible to
create projects relative to path variables by entering the path directly into
the entry field, but the UI should be more helpful (provide a button for
browsing variables, show the resolved path, etc).
Have a project with a location based on path variable is bad news if the 
variable is unbound. I've recommended to John that this recently-added feature 
be removed from the Core API.
Moving back to core to decide further action.
For now, closing bugs not planned for 2.1.  Will reopen after 2.1 release.
Reopening to change resolution.
We won't be adding this feature back.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30010" />
    <CreationDate amount="2003-01-22 15:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Control.setEnabled() not implemented properly on MacOS X</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Events need to go to the parent.  Disabling the parent should not cause the 
children to draw disabled.
*** Bug 29850 has been marked as a duplicate of this bug. ***
I have released a partial implementation that works for Composites.
Did we ever fix this Mac bug/behavior?  I'm pretty sure we did.
I believe so.</WithStack>
    <WithOutStack>Events need to go to the parent.  Disabling the parent should not cause the 
children to draw disabled.
*** Bug 29850 has been marked as a duplicate of this bug. ***
I have released a partial implementation that works for Composites.
Did we ever fix this Mac bug/behavior?  I'm pretty sure we did.
I believe so.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30011" />
    <CreationDate amount="2003-01-22 15:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>NPE in PDE JUnit [JUnit]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437338565431">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason>java.lang.NullPointerException</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.pde.internal.junit.launcher.JUnitPdeLaunchConfiguration.findModel(JUnitPdeLaunchConfiguration.java:384)</Frame>
          <Frame depth="1">org.eclipse.pde.internal.junit.launcher.JUnitPdeLaunchConfiguration.constructClasspath(JUnitPdeLaunchConfiguration.java:347)</Frame>
          <Frame depth="2">org.eclipse.pde.internal.junit.launcher.JUnitPdeLaunchConfiguration.createWorkspaceRunnerConfiguration(JUnitPdeLaunchConfiguration.java:146)</Frame>
          <Frame depth="3">org.eclipse.pde.internal.junit.launcher.JUnitPdeLaunchConfiguration.createVMRunner(JUnitPdeLaunchConfiguration.java:80)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.junit.launcher.JUnitBaseLaunchConfiguration.launchTypes(JUnitBaseLaunchConfiguration.java:85)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.junit.launcher.JUnitBaseLaunchConfiguration.launch(JUnitBaseLaunchConfiguration.java:66)</Frame>
          <Frame depth="6">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:146)</Frame>
          <Frame depth="7">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:465)</Frame>
          <Frame depth="8">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:95)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I switch to I20030121 and I20030122 and got the following NPE on both builds 
when trying to launch PDE JUnit. It seems to be related to soemthing in my 
workspace state because when I start with a fresh workspace it works.

!ENTRY org.eclipse.debug.ui 4 120 Jan 22, 2003 15:52:57.795
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException: java.lang.NullPointerException
	at 
org.eclipse.pde.internal.junit.launcher.JUnitPdeLaunchConfiguration.findModel
(JUnitPdeLaunchConfiguration.java:384)
	at 
org.eclipse.pde.internal.junit.launcher.JUnitPdeLaunchConfiguration.constructCla
sspath(JUnitPdeLaunchConfiguration.java:347)
	at 
org.eclipse.pde.internal.junit.launcher.JUnitPdeLaunchConfiguration.createWorksp
aceRunnerConfiguration(JUnitPdeLaunchConfiguration.java:146)
	at 
org.eclipse.pde.internal.junit.launcher.JUnitPdeLaunchConfiguration.createVMRunn
er(JUnitPdeLaunchConfiguration.java:80)
	at 
org.eclipse.jdt.internal.junit.launcher.JUnitBaseLaunchConfiguration.launchTypes
(JUnitBaseLaunchConfiguration.java:85)
	at 
org.eclipse.jdt.internal.junit.launcher.JUnitBaseLaunchConfiguration.launch
(JUnitBaseLaunchConfiguration.java:66)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:146)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:465)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:95)
This code will be eliminated once we migrate towards the PDE supported API.

However, did this problem occur again? I cannot reproduce it in a "clean" 
workspace.
It happened to me when I migrated from the first integration build in 20030206 
to the second one (which became M5).

I couldn't get rid of it even after removing all plugins' (except for 
org.eclipse.core.resources) state from the metadata area.


closing - this problem has never shown up again (and the pde-junit launching 
code was rewritten since then).</WithStack>
    <WithOutStack>I switch to I20030121 and I20030122 and got the following NPE on both builds 
when trying to launch PDE JUnit. It seems to be related to soemthing in my 
workspace state because when I start with a fresh workspace it works.

!ENTRY org.eclipse.debug.ui 4 120 Jan 22, 2003 15:52:57.795
!MESSAGE Error logged from Debug UI: 
!STACK 0

This code will be eliminated once we migrate towards the PDE supported API.

However, did this problem occur again? I cannot reproduce it in a "clean" 
workspace.
It happened to me when I migrated from the first integration build in 20030206 
to the second one (which became M5).

I couldn't get rid of it even after removing all plugins' (except for 
org.eclipse.core.resources) state from the metadata area.


closing - this problem has never shown up again (and the pde-junit launching 
code was rewritten since then).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30012" />
    <CreationDate amount="2003-01-22 15:34:00 -0500" />
    <DupId amount="23227" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[resources] Team-private members visible in Navigator, Package Explorer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="19">
        <Lines>
          <Line>1. Open CVS Repositories view and select a project not already in the current</Line>
          <Line>Workspace.</Line>
          <Line />
          <Line>2. Right-Click and select 'Check Out as Project'</Line>
          <Line />
          <Line>Result: Project is imported correctly, team-private members are hidden.</Line>
          <Line />
          <Line>3. In Package View, delete the project imported in step 2.  Do not delete</Line>
          <Line>contents</Line>
          <Line />
          <Line>4. Exit and restart Eclipse</Line>
          <Line />
          <Line>5. Import the project deleted in step 3:  File &gt; Import &gt; Existing Project Into</Line>
          <Line>Workspace</Line>
          <Line />
          <Line>Result: CVS folders are visible in both Navigator and Package Explorer, at all</Line>
          <Line>levels of the reimported project.</Line>
          <Line />
          <Line>6. Exit and restart Eclipse</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build: 2.1 M4 200212181304 Linux-GTK (Also happens with Linux-Motif)

1. Open CVS Repositories view and select a project not already in the current
Workspace.

2. Right-Click and select 'Check Out as Project'

Result: Project is imported correctly, team-private members are hidden.

3. In Package View, delete the project imported in step 2.  Do not delete 
contents

4. Exit and restart Eclipse

5. Import the project deleted in step 3:  File &gt; Import &gt; Existing Project Into 
Workspace

Result: CVS folders are visible in both Navigator and Package Explorer, at all 
levels of the reimported project.

6. Exit and restart Eclipse

Result: CVS folders are properly hidden.

Note: this issue also affects the Stellation client code: when I share a 
Project using the Stellation Team provider, the Stellation team-private members 
remain visible (even after calling IResource.setTeamPrivateMember(true) on the 
private resources).   These team-private members are hidden as expected after 
exiting and restarting Eclipse.
Actually, this is a core bug.  

If the provider plugin hasn't started up yet, they cannot receive delta 
notification to hide team private members.  The only known work around is to 
create a separate plugin to handle this, and configure it to be activated on 
workbench startup.

This situation has been previously reported but remains unresolved.


*** This bug has been marked as a duplicate of 23227 ***</WithStack>
    <WithOutStack>Build: 2.1 M4 200212181304 Linux-GTK (Also happens with Linux-Motif)

1. Open CVS Repositories view and select a project not already in the current
Workspace.

2. Right-Click and select 'Check Out as Project'

Result: Project is imported correctly, team-private members are hidden.

3. In Package View, delete the project imported in step 2.  Do not delete 
contents

4. Exit and restart Eclipse

5. Import the project deleted in step 3:  File &gt; Import &gt; Existing Project Into 
Workspace

Result: CVS folders are visible in both Navigator and Package Explorer, at all 
levels of the reimported project.

6. Exit and restart Eclipse

Result: CVS folders are properly hidden.

Note: this issue also affects the Stellation client code: when I share a 
Project using the Stellation Team provider, the Stellation team-private members 
remain visible (even after calling IResource.setTeamPrivateMember(true) on the 
private resources).   These team-private members are hidden as expected after 
exiting and restarting Eclipse.
Actually, this is a core bug.  

If the provider plugin hasn't started up yet, they cannot receive delta 
notification to hide team private members.  The only known work around is to 
create a separate plugin to handle this, and configure it to be activated on 
workbench startup.

This situation has been previously reported but remains unresolved.


*** This bug has been marked as a duplicate of 23227 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30013" />
    <CreationDate amount="2003-01-22 15:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Project compiler setting workspace | project do not persist</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Change a project compiler settings to be project specific.
Re-Open Eclipse
Change the project compiler settings to be workspace specific.
Re-Open Eclipse

View the project compiler settings, its back to project specific instead of 
workspace.
Fixed.
Verified.</WithStack>
    <WithOutStack>Change a project compiler settings to be project specific.
Re-Open Eclipse
Change the project compiler settings to be workspace specific.
Re-Open Eclipse

View the project compiler settings, its back to project specific instead of 
workspace.
Fixed.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30014" />
    <CreationDate amount="2003-01-22 15:48:00 -0500" />
    <DupId amount="30016" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>NPE when sending files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The code to send a file has a bug that involves the input stream being null.


*** This bug has been marked as a duplicate of 30016 ***</WithStack>
    <WithOutStack>The code to send a file has a bug that involves the input stream being null.


*** This bug has been marked as a duplicate of 30016 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30015" />
    <CreationDate amount="2003-01-22 15:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Can't restore a project whose location is relative to path variable</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Define a path variable TEMP -&gt; c:\temp</Line>
          <Line>2) Create a project whose location is relative to the variable, say TEMP/P1.</Line>
          <Line>3) Shutdown the workspace</Line>
          <Line>4) Restart the workspace</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: I20030122

1) Define a path variable TEMP -&gt; c:\temp
2) Create a project whose location is relative to the variable, say TEMP/P1.
3) Shutdown the workspace
4) Restart the workspace

-&gt; Project is closed.  It could not find the .project file because it failed to
resolve the path variable when searching for the description.
Fixed.  Added session test called TestBug30015.</WithStack>
    <WithOutStack>Build: I20030122

1) Define a path variable TEMP -&gt; c:\temp
2) Create a project whose location is relative to the variable, say TEMP/P1.
3) Shutdown the workspace
4) Restart the workspace

-&gt; Project is closed.  It could not find the .project file because it failed to
resolve the path variable when searching for the description.
Fixed.  Added session test called TestBug30015.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30016" />
    <CreationDate amount="2003-01-22 15:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>NPE when sending files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The code to send a file has a bug that involves the input stream being null.
To elaborate, we made resent changes to Session#sendFile. In the finally, we 
close the input stream but there is a chance it will be null. The cause was 
resources that were out-of-sync with the workspace.
*** Bug 30014 has been marked as a duplicate of this bug. ***
The fix has been released but we really shold have a test case for this.
Test case has been added</WithStack>
    <WithOutStack>The code to send a file has a bug that involves the input stream being null.
To elaborate, we made resent changes to Session#sendFile. In the finally, we 
close the input stream but there is a chance it will be null. The cause was 
resources that were out-of-sync with the workspace.
*** Bug 30014 has been marked as a duplicate of this bug. ***
The fix has been released but we really shold have a test case for this.
Test case has been added</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30017" />
    <CreationDate amount="2003-01-22 15:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Should remove default font definitions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>In several of our font definitions files we have a font called defaultFont 
which is not in use anywhere in Eclipse. Having it around means that the 
defaultFont and the systemFont are different - we should remove it from all of 
our properties files.
Please do.

Also removed viewerFont and windowFont (deprecated) and dialogFont (should 
default to system font).

Fixed in build &gt;20030130
Marking closed</WithStack>
    <WithOutStack>In several of our font definitions files we have a font called defaultFont 
which is not in use anywhere in Eclipse. Having it around means that the 
defaultFont and the systemFont are different - we should remove it from all of 
our properties files.
Please do.

Also removed viewerFont and windowFont (deprecated) and dialogFont (should 
default to system font).

Fixed in build &gt;20030130
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30018" />
    <CreationDate amount="2003-01-22 16:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Dialogs] ResourceListSelectionDialog folder list updating</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- Navigate--&gt;Open Resource</Line>
          <Line>- Type "t" and wait for a couple of seconds to allow the list to populate.</Line>
          <Line>- Type "ag".  Notice that the list does not update until the folders list is</Line>
          <Line>completely updated, which takes awhile since there are &gt; 6000 folders with the</Line>
          <Line>item "TAG".</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 200301211004

- Navigate--&gt;Open Resource
- Type "t" and wait for a couple of seconds to allow the list to populate.
- Type "ag".  Notice that the list does not update until the folders list is 
completely updated, which takes awhile since there are &gt; 6000 folders with the 
item "TAG".

I added the wait cursor so at least there is some indication as to what is 
going on, but the code should be changed to better handle this scenario.
I'll take this one for later.  Talked about the scenario with NE and he said 
not to worry about this for now.
Reassigning bugs in component areas that are changing ownership.

moving Open Resource related bugs to Szymon.
Szymon, please move between you and Krystof as needed.  Let me know if you have any questions.  These are all the bugs I had related to OpenResource.
AbstractSearchDialog is a new abstract class which should be used as a super
class for resource and type search dialogs.

In this new dialog the problem doesn't exist.
Syzmon feel free to mark these FIXED if they are fixed by your changes - they make a good regression test.
Fixed</WithStack>
    <WithOutStack>Build 200301211004

- Navigate--&gt;Open Resource
- Type "t" and wait for a couple of seconds to allow the list to populate.
- Type "ag".  Notice that the list does not update until the folders list is 
completely updated, which takes awhile since there are &gt; 6000 folders with the 
item "TAG".

I added the wait cursor so at least there is some indication as to what is 
going on, but the code should be changed to better handle this scenario.
I'll take this one for later.  Talked about the scenario with NE and he said 
not to worry about this for now.
Reassigning bugs in component areas that are changing ownership.

moving Open Resource related bugs to Szymon.
Szymon, please move between you and Krystof as needed.  Let me know if you have any questions.  These are all the bugs I had related to OpenResource.
AbstractSearchDialog is a new abstract class which should be used as a super
class for resource and type search dialogs.

In this new dialog the problem doesn't exist.
Syzmon feel free to mark these FIXED if they are fixed by your changes - they make a good regression test.
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30019" />
    <CreationDate amount="2003-01-22 16:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="Sun" />
    <op_sys amount="Solaris" />
    <priority amount="P2" />
    <bug_severity amount="critical" />
    <Summery>Can't debug on Motif</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437338565441">
        <Exception>java.net.SocketException</Exception>
        <Reason>Socket closed</Reason>
        <Frames>
          <Frame depth="0">java.net.PlainSocketImpl.socketAccept(Native Method)</Frame>
          <Frame depth="1">java.net.PlainSocketImpl.accept(PlainSocketImpl.java:413)</Frame>
          <Frame depth="2">java.net.ServerSocket.implAccept(ServerSocket.java:243)</Frame>
          <Frame depth="3">java.net.ServerSocket.accept(ServerSocket.java:222)</Frame>
          <Frame depth="4">org.eclipse.jdi.internal.connect.SocketTransportImpl.accept(SocketTransportImpl.java:78)</Frame>
          <Frame depth="5">org.eclipse.jdi.internal.connect.SocketListeningConnectorImpl.accept(SocketListeningConnectorImpl.java:117)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.launching.StandardVMDebugger$ConnectRunnable.run(StandardVMDebugger.java:71)</Frame>
          <Frame depth="7">java.lang.Thread.run(Thread.java:484)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="251" end="379" />
        <code>public class Main {

	public static void main(String[] args) {
		System.out.println("hello"); //set breakpoint on this line
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I200301210800

Solaris Motif and Linux Motif (RedHat 8.0)

java version "1.3.0_01"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.3.0_01)
Java HotSpot(TM) Client VM (build 1.3.0_01, mixed mode)

Try to debug a simple Java example such as:

public class Main {

	public static void main(String[] args) {
		System.out.println("hello"); //set breakpoint on this line
	}
}

Get the following message in the console:

Error occurred during initialization of VM
Could not find -Xrun library: libjdwp.so

Get the following log entry:

!ENTRY org.eclipse.jdt.launching 4 120 Jan 22, 2003 16:51:18.583
!MESSAGE Could not connect to VM
!STACK 0
java.net.SocketException: Socket closed
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:413)
        at java.net.ServerSocket.implAccept(ServerSocket.java:243)
        at java.net.ServerSocket.accept(ServerSocket.java:222)
        at org.eclipse.jdi.internal.connect.SocketTransportImpl.accept(SocketTra
nsportImpl.java:78)
        at org.eclipse.jdi.internal.connect.SocketListeningConnectorImpl.accept(
SocketListeningConnectorImpl.java:117)
        at org.eclipse.jdt.internal.launching.StandardVMDebugger$ConnectRunnable
.run(StandardVMDebugger.java:71)
        at java.lang.Thread.run(Thread.java:484)
This means that the VM cannot find the required DLLs (or whatever the 
equivalent term is on Solaris) for debugging. It cannot find the JDWP support. 

Can you see the required file "libjdwp.so" in any of the "bin" directories of 
the JRE? It is usually in the same directory as the "java" executable.
Found libjdwp.so under jdk1.3.0_01/lib/sparc.

I guess I need to add this to my LD_LIBRARY path.  Seems like a non-obvious 
step though.

See the following link to get the same JDK download (if you can see this 
location):

http://eclipsedrops.ott.oti.com/downloads/hubba/downloads/jdk/solaris/jdk-
1_3_1_01-fcs-bin-solsparc-08_aug_2001.zip
Reducing severity to normal (assuming this has fixed the problem).
On linux, the library is located in jdk1.3.1/lib/i386.

This means that with the Sun JDK on linux (either motif or GTK) and on solaris, 
I can not debug at all unless I have set up the library path correctly first.

This seems not very friendly at all.  I think the priority should still be 
high - resetting to critical.

It seems that this dependancy on libjdwp.so is new because I was not having 
this problem before. I think the fact that you can not find the library should 
be handled better.  Ideally, you should be able to look for the library in the 
lib directory under the JDK install since this seems to be the common place for 
Sun to put it.  If you can't find this library perhaps you should just disable 
the additional functionality provided by libjdwp.so but allow me to be able to 
debug.  Alternatively, I should get a dialog explaining that I need to find the 
specific library and add it to my library path.
This is not a new dependancy, so I am unsure why this is a new problem (that is 
what I would like to figure out).

The difficulty is that it is not the Eclipse process that requires the library -
 it is the new VM process that is launched that cannot find the library. It is 
not under our control.
On linux, I add the path to libjdwp.so to my LD_LIBRARY_PATH and got a different error in the log file when debugging:  !ENTRY org.eclipse.debug.ui 4 120 Jan 23, 2003 10:50:47.616 !MESSAGE Error logged from Debug UI: !STACK 0 java.lang.reflect.InvocationTargetException: java.lang.NullPointerException         at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.&lt;init&gt;(JDIDebugTarget.java:231)         at org.eclipse.jdt.debug.core.JDIDebugModel$1.run(JDIDebugModel.java:134)         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1580)         at org.eclipse.jdt.debug.core.JDIDebugModel.newDebugTarget(JDIDebugModel.java:138)         at org.eclipse.jdt.debug.core.JDIDebugModel.newDebugTarget(JDIDebugModel.java:98)         at org.eclipse.jdt.internal.launching.StandardVMDebugger.run(StandardVMDebugger.java:251)         at org.eclipse.jdt.internal.launching.JavaLocalApplicationLaunchConfigurationDelegate.launch(JavaLocalApplicationLaunchConfigurationDelegate.java:102)         at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:146)         at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:391)         at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:95) 
Sorry about that last addition.  Konqueror does not play nice when pasting from 
Xterm.
Please ignore comment #6 - I think this was caused by using the same workspace 
for Solaris and Linux.

I was able to debug by setting the LD_LIBRARY_PATH to include jdk1.3.1/lib/i386
I'm not able to reproduce the problem.

My configuration is :
Mandrake 9.0
jdk sun 1.3.1_01
build I200301221039 linux-motif
LD_LIBRARY_PATH is no set

I launched eclipse with -vm &lt;path_to_jdk_1.3.1_01&gt;/bin/java -data
&lt;a_new_folder&gt;, switched to the java perspective, created a new java project,
created the main class, copy-paste the code of the class, added the breakpoint,
launched the program : debug button in the toolbar&gt;debug as&gt;java application.
Eclipse switched to the debug perspective, the program is suspended at the
breakpoint.

Do you see any difference between your test case and mine ?
This problem is a new problem from build 200201210800 or it might be a problem
in previous builds (i.e. no tested) ?
For me, it happens every time in Jan 15 and Jan 21 integration builds.  Will 
try with the latest integration build.
OK, I'm able to reproduce the problem.
If I launch eclipse with -vm &lt;path_to_jdk&gt;/bin/java, I can debug. If I launch
eclipse with -vm &lt;path_to_jdb&gt;/jre/bin/java, I cannot debug.
That seems to be a problem only with Sun VMs 1.3/1.3.1

A workaround is to use the java executable from the jdk, not from the jre.

DarinW: DarinS says that we had this type of problem before (may be not exactly
the same) and we fixed it by selecting always the java executable from the jdk.
Is it a regression bug ?
Yes, I think this is a regression. The order in which we search for 
executeables has changed (to fix another bug).
Fixed. 
Please verify, Luc.
Verified</WithStack>
    <WithOutStack>I200301210800

Solaris Motif and Linux Motif (RedHat 8.0)

java version "1.3.0_01"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.3.0_01)
Java HotSpot(TM) Client VM (build 1.3.0_01, mixed mode)

Try to debug a simple Java example such as:

public class Main {

	public static void main(String[] args) {
		System.out.println("hello"); //set breakpoint on this line
	}
}

Get the following message in the console:

Error occurred during initialization of VM
Could not find -Xrun library: libjdwp.so

Get the following log entry:

!ENTRY org.eclipse.jdt.launching 4 120 Jan 22, 2003 16:51:18.583
!MESSAGE Could not connect to VM
!STACK 0

This means that the VM cannot find the required DLLs (or whatever the 
equivalent term is on Solaris) for debugging. It cannot find the JDWP support. 

Can you see the required file "libjdwp.so" in any of the "bin" directories of 
the JRE? It is usually in the same directory as the "java" executable.
Found libjdwp.so under jdk1.3.0_01/lib/sparc.

I guess I need to add this to my LD_LIBRARY path.  Seems like a non-obvious 
step though.

See the following link to get the same JDK download (if you can see this 
location):

http://eclipsedrops.ott.oti.com/downloads/hubba/downloads/jdk/solaris/jdk-
1_3_1_01-fcs-bin-solsparc-08_aug_2001.zip
Reducing severity to normal (assuming this has fixed the problem).
On linux, the library is located in jdk1.3.1/lib/i386.

This means that with the Sun JDK on linux (either motif or GTK) and on solaris, 
I can not debug at all unless I have set up the library path correctly first.

This seems not very friendly at all.  I think the priority should still be 
high - resetting to critical.

It seems that this dependancy on libjdwp.so is new because I was not having 
this problem before. I think the fact that you can not find the library should 
be handled better.  Ideally, you should be able to look for the library in the 
lib directory under the JDK install since this seems to be the common place for 
Sun to put it.  If you can't find this library perhaps you should just disable 
the additional functionality provided by libjdwp.so but allow me to be able to 
debug.  Alternatively, I should get a dialog explaining that I need to find the 
specific library and add it to my library path.
This is not a new dependancy, so I am unsure why this is a new problem (that is 
what I would like to figure out).

The difficulty is that it is not the Eclipse process that requires the library -
 it is the new VM process that is launched that cannot find the library. It is 
not under our control.
On linux, I add the path to libjdwp.so to my LD_LIBRARY_PATH and got a different error in the log file when debugging:  !ENTRY org.eclipse.debug.ui 4 120 Jan 23, 2003 10:50:47.616 !MESSAGE Error logged from Debug UI: !STACK 0 java.lang.reflect.InvocationTargetException: java.lang.NullPointerException         at org.eclipse.jdt.internal.debug.core.model.JDIDebugTarget.&lt;init&gt;(JDIDebugTarget.java:231)         at org.eclipse.jdt.debug.core.JDIDebugModel$1.run(JDIDebugModel.java:134)         at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1580)         at org.eclipse.jdt.debug.core.JDIDebugModel.newDebugTarget(JDIDebugModel.java:138)         at org.eclipse.jdt.debug.core.JDIDebugModel.newDebugTarget(JDIDebugModel.java:98)         at org.eclipse.jdt.internal.launching.StandardVMDebugger.run(StandardVMDebugger.java:251)         at org.eclipse.jdt.internal.launching.JavaLocalApplicationLaunchConfigurationDelegate.launch(JavaLocalApplicationLaunchConfigurationDelegate.java:102)         at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:146)         at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:391)         at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:95) 
Sorry about that last addition.  Konqueror does not play nice when pasting from 
Xterm.
Please ignore comment #6 - I think this was caused by using the same workspace 
for Solaris and Linux.

I was able to debug by setting the LD_LIBRARY_PATH to include jdk1.3.1/lib/i386
I'm not able to reproduce the problem.

My configuration is :
Mandrake 9.0
jdk sun 1.3.1_01
build I200301221039 linux-motif
LD_LIBRARY_PATH is no set

I launched eclipse with -vm &lt;path_to_jdk_1.3.1_01&gt;/bin/java -data
&lt;a_new_folder&gt;, switched to the java perspective, created a new java project,
created the main class, copy-paste the code of the class, added the breakpoint,
launched the program : debug button in the toolbar&gt;debug as&gt;java application.
Eclipse switched to the debug perspective, the program is suspended at the
breakpoint.

Do you see any difference between your test case and mine ?
This problem is a new problem from build 200201210800 or it might be a problem
in previous builds (i.e. no tested) ?
For me, it happens every time in Jan 15 and Jan 21 integration builds.  Will 
try with the latest integration build.
OK, I'm able to reproduce the problem.
If I launch eclipse with -vm &lt;path_to_jdk&gt;/bin/java, I can debug. If I launch
eclipse with -vm &lt;path_to_jdb&gt;/jre/bin/java, I cannot debug.
That seems to be a problem only with Sun VMs 1.3/1.3.1

A workaround is to use the java executable from the jdk, not from the jre.

DarinW: DarinS says that we had this type of problem before (may be not exactly
the same) and we fixed it by selecting always the java executable from the jdk.
Is it a regression bug ?
Yes, I think this is a regression. The order in which we search for 
executeables has changed (to fix another bug).
Fixed. 
Please verify, Luc.
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30020" />
    <CreationDate amount="2003-01-22 16:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>hangs on attempt to edit an xml file (subsequently hangs at splash screen)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I have *.xml associated with the default text editor.  This problem occurs with
(at least) versions I20030114-linux-gtk through I20030121-linux-gtk and
executing "gtk-config --version" returns "1.2.10".

When I attempt to open an xml file (jetty.xml -- config for Jetty server),
Eclipse hangs.  If I kill it and attempt to restart, it will hang at the splash
screen (seems consistent, like it's attempting to restore the editor and hanging
again).

If I then remove the editor element from workbench.xml Eclipse will proceed
through the splash screen and start.
This problem is sporadic.  I haven't yet been able to notice the pattern for
when it triggers.
Created attachment 3090
error log from *.xml hang

Just one more thing...

The type of hang renders Eclipse semiactive.  You can still change focus
between views and you can still resize views and select things in lists, but
changing the selection doesn't trigger any of the normally associated actions
(maybe it's just queuing the events and waiting a LONG time...).  The text view
still blinks the caret but you can't move the caret around.  If you click the
window's kill box (the File menu displays but clicking the menu items doesn't
do anything).  Eclipse will appear to shut down: the workbench disappears, the
shutdown progress dialog appears, counts up to 100% full and then disappears,
but the main eclipse and Java processes don't actually die for a long time. 
Then, an error dialog appears.	Here is the log...
Moving to JDT UI for comment, based on stack trace.
The stack trace contains an SWT error (caused by accessing disposed widgets) 
and this one got fixed.

William, if you still see it in the latest integration build I20030128, please 
reopen the PR.</WithStack>
    <WithOutStack>I have *.xml associated with the default text editor.  This problem occurs with
(at least) versions I20030114-linux-gtk through I20030121-linux-gtk and
executing "gtk-config --version" returns "1.2.10".

When I attempt to open an xml file (jetty.xml -- config for Jetty server),
Eclipse hangs.  If I kill it and attempt to restart, it will hang at the splash
screen (seems consistent, like it's attempting to restore the editor and hanging
again).

If I then remove the editor element from workbench.xml Eclipse will proceed
through the splash screen and start.
This problem is sporadic.  I haven't yet been able to notice the pattern for
when it triggers.
Created attachment 3090
error log from *.xml hang

Just one more thing...

The type of hang renders Eclipse semiactive.  You can still change focus
between views and you can still resize views and select things in lists, but
changing the selection doesn't trigger any of the normally associated actions
(maybe it's just queuing the events and waiting a LONG time...).  The text view
still blinks the caret but you can't move the caret around.  If you click the
window's kill box (the File menu displays but clicking the menu items doesn't
do anything).  Eclipse will appear to shut down: the workbench disappears, the
shutdown progress dialog appears, counts up to 100% full and then disappears,
but the main eclipse and Java processes don't actually die for a long time. 
Then, an error dialog appears.	Here is the log...
Moving to JDT UI for comment, based on stack trace.
The stack trace contains an SWT error (caused by accessing disposed widgets) 
and this one got fixed.

William, if you still see it in the latest integration build I20030128, please 
reopen the PR.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30021" />
    <CreationDate amount="2003-01-22 16:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Font and Color dialogs hang on JVM 1.4.1</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>(1) Monaco is probably a better choice for the default font -- being monospaced it won't have the</Line>
          <Line>cursor positioning problem.</Line>
          <Line />
          <Line>(2) If there is a config file somewhere where the font options are saved, it would be nice to have it</Line>
          <Line>mentioned in the readme file beside the bug notification so people can go under the hood if they</Line>
          <Line>really need to change the font.  As it is I changed the Info.plist entry to start up under 1.3.1 again</Line>
          <Line>long enough to make the font change, then restarted back into 1.4.1.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Preferences-&gt;Workbench-&gt;Fonts-&gt;Change... correctly brings up a font selection menu, but selecting the new font and closing the selection window causes Eclipse to hang.

Eclipse 2.1 M4 / Mac OS 10.2.3 / JVM 1.4.1DP8
Adding Chris McLaren as he has seen similar issues.
indeed. i didn't spend much time on reproducing, but i can tell you it hung on 
I20020115 / OS 10.2.3 / JVM 1.4.1DP8. also, that i moved back to JVM 1.3.1 and 
it worked correctly. (SWT vs. 1.4.1 may be the problem here.)
This is a known problem  in 1.4.1: Cocoa based dialogs don't work in 1.4.1 (which is very 
strange, because we don't use (or import) any of the Cocoa work Apple did for 1.4.1). 
BTW the color dialog has the same problem.
I've filed a bug for this against Apple.

BTW: we should not enter 1.4.1 related issues into Bugzilla because the NDA does not 
allow this. Please discuss these issues on the java.seed mailing list.

Reassigned to SWT
Andre, this is yours to do with what you want.  Hope you can get Apple to fix 
this.  Thanks.
Changed to P3 since I'm not able to fix that for 2.1.
(and Apple hasn't released an official JVM 1.4.1).
*** Bug 31961 has been marked as a duplicate of this bug. ***
*** Bug 28647 has been marked as a duplicate of this bug. ***
Not likely to get this fixed for 2.1.
May be we need a workaround if running on 1.4.1 (or at least disable it).
I think we could disable the dialog for 1.4.1 although we have never done this 
in the past.

Since this is a bug in the VM, what we have done in the past is enter a bug 
report against the VM which we reference in the bug report and close the bug 
report as WONTFIX.
*** Bug 32692 has been marked as a duplicate of this bug. ***
Andre, what priority does this bug have with Sun/Apple?  We can create a C 
example that shows the problem if this would help increse the priority.

I can change the dialog to pop up an error dialog instead for JDK 1.4.1.  We 
should decide how we wish to handle this.
I don't know the "priority" of the bug report I filed with Apple. However its severity is 
"Serious Bug". I will check with Apple what the status is.

I think its not very important for 2.1 because Eclipse is configured to use 1.3.1 even if 
1.4.1 is available. So the problem occurs only if you are running a SWT application that 
explicitely uses 1.4.1. I suggest to show an error dialog on JVM 1.4.1.
This bug was originally noticed because the fonts on Eclipse 2.1 on Mac appeared to be significantly larger than 2.0 -- a little too large, in any event.  Perhaps if font changing will not be an option then a double-check on the default sizes might be in order.
Just to make this clear: the Color and Font dialog will work in Eclipse 2.1 even if you 
have the (not officially released) JVM 1.4.1 installed.

They will stop working (and deadlock Eclipse) if you change the (normally invisible)
Info.plist file within the Eclipse application bundle and explicitely switch the JVM to 1.4.1.
However, we do not recommend to run Eclipse on 1.4.1.
I think we should just leave this PR open.  If we put in an error dialog for 
1.4.1, it could still be broken or fixed in 1.4.2.  Since there is no way of 
knowing, we would show the error dialog for ever and never get the fix.
In particular, the bug may yet be fixed for the officially released 1.4.1 version.
I suggest we just add this info to the Eclipse ReadMe then.
I finally had to switch to 1.4.1 as my build environment, which also forced an upgrade to 2.1 (from 
M4), and I confirmed that this bug is still present.

It's a problem that you can't change the fonts, but the more immediate problem is that the default 
text editing font is Geneva, a non-monospaced font, which on the Mac results in the cursor not 
being lined up with where the editing is taking place.  (Probably a separate bug)  It can be as much 
as two character widths away from where the next character would be inserted.

Workaround suggestions:

(1) Monaco is probably a better choice for the default font -- being monospaced it won't have the 
cursor positioning problem.

(2) If there is a config file somewhere where the font options are saved, it would be nice to have it 
mentioned in the readme file beside the bug notification so people can go under the hood if they 
really need to change the font.  As it is I changed the Info.plist entry to start up under 1.3.1 again 
long enough to make the font change, then restarted back into 1.4.1.

The only reason for running Eclipse on 1.4.1 is if you need 1.4.1 features from within Ant 
scripts. Does this apply to you?
If not, please consider running Eclipse on 1.3.1. 
You still can develop for 1.4.1 even if Eclipse runs on 1.3.1.
I assume you knew this already, but perhaps it's helpful to somebody: There is
System.err output when opening the color dialog with 1.4.1, just before the
dialog hangs:

2003-06-08 19:45:43.240 JavaApplicationStub[641] *** _NSAutoreleaseNoPool(): Obj
ect 0x73ef830 of class NSCFArray autoreleased with no pool in place - just leaki
ng
2003-06-08 19:45:44.300 JavaApplicationStub[641] *** _NSAutoreleaseNoPool(): Obj
ect 0xa3086460 of class NSCFString autoreleased with no pool in place - just lea
king

(Runtime Workbench on 3.0 M1 configured for Java 1.4)
I get some additional errors when running under the I20030611 Integration 
build of Eclipse 3.0 (using JDK 1.4.1), which might help some more. They are:

2003-06-11 13:13:04.880 JavaApplicationStub[1058] *** _NSAutoreleaseNoPool(): 
Object 0x14996490 of class NSCFArray autoreleased with no pool in place - just 
leaking
2003-06-11 13:13:05.292 JavaApplicationStub[1058] An uncaught exception was 
raised
2003-06-11 13:13:05.295 JavaApplicationStub[1058] *** -[NSCFArray 
objectAtIndex:]: index (1) beyond bounds (1)
2003-06-11 13:13:05.296 JavaApplicationStub[1058] *** Uncaught exception: &lt;
NSRangeException&gt; *** -[NSCFArray objectAtIndex:]: index (1) beyond bounds (1)

OK, I know what the problem is and how to avoid it in the first place.
A fix is underway...
That's great news!  Can we help?
No, but thanks for your offer.

The trick is to launch the Java VM in the "Main thread". 
So I had to write a "/usr/bin/java" replacement.
An new JDT launcher that uses this replacement is already used in the nightly builds 
(and will be in tomorrows integration build).
It is used whenever you launch applications from within Eclipse under Java 1.4.1.

(I will try to get this launcher into the platform-launcher, too)

A more detailled problem descriptions will follow soon.

That's good news and may also improve performance.  It's possible that Apple 
expects the main thread to be the GUI thread and gives it more cycles.  Just 
guessing here.

Will we need to update the FAQ about running SWT stand alone?
Yes, we'll have to update the FAQ about running SWT stand alone.

The good thing is that any SWT application now can be started from the command line (by means 
of java_swt instead of /usr/bin/java).

On the other hand, since creating an application bundle in /tmp is no longer a side effect of 
launching a SWT application from within Eclipse, setting up a double clickable application requires 
more work.
I'm planning to write an Eclipse plugin for this (in fact, the code is already there; just the UI is 
missing).
BTW: nightly build N20030708 contains my latest code (and works for me).
If you want to give it a try, just replace the "1.3.1" in the Info.plist file with a "1.4.1".
With this Color and Font dialogs work.
In addition, this version runs on Panther (and is pretty fast).
Right, I'll try it.  In the mean time, is this PR fixed?  Do you want to 
update the FAQ?
Andre,

Let me know when the double-clickable app plugin is ready to try. Also, can you send me a bit 
more details about running SWT apps on the mac using java_swt? It would be good to put this in 
the SWT book that Steve and I are working on.

I will close this PR if my fix works for more users than just me.
So I will wait at least for a working integration build.

[Remember, the fix is only activated if you edit the Info.plist file and change
the VM to a path that contains a "1.4.1" ]

Yes, I will update the FAQ as soon as I know what the "current story" is.
I've downloaded the nightly build, and made the changes to the Info.plist file.
I'm developing a plugin, and now when I try to run it, the new perspective that
is in my plugin is not available. Is this a consequence of the new launcher?
No, I don't think so.
The fix for this bug didn't touch any Java code.
BTW, I would recommend to use I20030710 instead of the nightly build.
I have confirmed that it now works for me. Thanks for the fix!
Seems to work.
Will be in M2.
Any productization of java_swt will be done for M3 (see bug #40003)
Here is the story why SWT application needs a special launcher on MacOS X.
[I posted this on the SWT mailing list]:

The problem is neither SWT nor Eclipse, it's /usr/bin/java (and its bundle cousin 
"JavaApplicationStub"; the JavaApplicationStub extracts the arguments from the Info.plist file 
instead of from the command line).

/usr/bin/java (and JavaApplicationStub) starts the Java VM in the second thread because it runs an 
event loop in the first thread (the "Main" thread), and assumes that the Java code (in any thread) 
behind the scene communicates with the event loop in the Main thread.

But this assumption breaks with SWT because it uses code (Carbon and Cocoa natives) that 
normally runs in the main thread and knows nothing about the fact that another event loop is 
already running.

[BTW, I will file a Radar bug against this behavior of /usr/bin/java since it prevents running Java 
code in the "main" thread]

So the only fix for this is a replacement for /usr/bin/java (and the "JavaApplicationStub") that runs 
no additional event loop in the main thread but starts the Java VM there. This is java_swt.

OK, this was the theory. Some caveats:

- for Java 1.3.1 "JavaApplicationStub" contained some workarounds to avoid
  the deadlocks, so with it Eclipse would run without problems as long as
  started from the bundle (via JavaApplicationStub ) and not from /usr/bin/java.
  (that's the reason why the launcher always creates a bundle on the fly instead
  of using /usr/bin/java)

- after installing any version of 1.4.1, the "JavaApplicationStub" was
  replaced with a version without the workaround (for all VM versions including 1.3.1 !).
  As a consequence, I had to adapt Eclipse's MacOS X launcher
  (org.eclipse.jdt.launching.macosx) to continue using the old version
  of the "JavaApplicationStub" (by shipping a copy of it).

- this copy no longer seems to work under Panther. That's the reason why launching
  Eclipse under 1.3.1 on Panther fails. I haven't tried to find the cause of this,
  because Panther is scheduled for the end of this year, with 1.4.1 as default VM,
  and Eclipse will switch to 1.4.1 in September. So there is probably not a great
  need for running Eclipse on 1.3.1 on Panther.

- my new Java VM launcher "java_swt" is only activated if a 1.4.1 VM is selected in
  the Info.plist file. Otherwise, the old 1.3.1 code is used.
  This is done because I didn't want to fix something (1.3.1) that wasn't broken in Jaguar.
  (However, in Panther it is broken...)

- I understand that it would make sense to run SWT applications
  (which don't require 1.4.1) on Panther and a 1.3.1 VM.
  I believe that my fix (the java_swt launcher) will work under 1.3.1 too.
  I just have to find the time to verify it.</WithStack>
    <WithOutStack>Preferences-&gt;Workbench-&gt;Fonts-&gt;Change... correctly brings up a font selection menu, but selecting the new font and closing the selection window causes Eclipse to hang.

Eclipse 2.1 M4 / Mac OS 10.2.3 / JVM 1.4.1DP8
Adding Chris McLaren as he has seen similar issues.
indeed. i didn't spend much time on reproducing, but i can tell you it hung on 
I20020115 / OS 10.2.3 / JVM 1.4.1DP8. also, that i moved back to JVM 1.3.1 and 
it worked correctly. (SWT vs. 1.4.1 may be the problem here.)
This is a known problem  in 1.4.1: Cocoa based dialogs don't work in 1.4.1 (which is very 
strange, because we don't use (or import) any of the Cocoa work Apple did for 1.4.1). 
BTW the color dialog has the same problem.
I've filed a bug for this against Apple.

BTW: we should not enter 1.4.1 related issues into Bugzilla because the NDA does not 
allow this. Please discuss these issues on the java.seed mailing list.

Reassigned to SWT
Andre, this is yours to do with what you want.  Hope you can get Apple to fix 
this.  Thanks.
Changed to P3 since I'm not able to fix that for 2.1.
(and Apple hasn't released an official JVM 1.4.1).
*** Bug 31961 has been marked as a duplicate of this bug. ***
*** Bug 28647 has been marked as a duplicate of this bug. ***
Not likely to get this fixed for 2.1.
May be we need a workaround if running on 1.4.1 (or at least disable it).
I think we could disable the dialog for 1.4.1 although we have never done this 
in the past.

Since this is a bug in the VM, what we have done in the past is enter a bug 
report against the VM which we reference in the bug report and close the bug 
report as WONTFIX.
*** Bug 32692 has been marked as a duplicate of this bug. ***
Andre, what priority does this bug have with Sun/Apple?  We can create a C 
example that shows the problem if this would help increse the priority.

I can change the dialog to pop up an error dialog instead for JDK 1.4.1.  We 
should decide how we wish to handle this.
I don't know the "priority" of the bug report I filed with Apple. However its severity is 
"Serious Bug". I will check with Apple what the status is.

I think its not very important for 2.1 because Eclipse is configured to use 1.3.1 even if 
1.4.1 is available. So the problem occurs only if you are running a SWT application that 
explicitely uses 1.4.1. I suggest to show an error dialog on JVM 1.4.1.
This bug was originally noticed because the fonts on Eclipse 2.1 on Mac appeared to be significantly larger than 2.0 -- a little too large, in any event.  Perhaps if font changing will not be an option then a double-check on the default sizes might be in order.
Just to make this clear: the Color and Font dialog will work in Eclipse 2.1 even if you 
have the (not officially released) JVM 1.4.1 installed.

They will stop working (and deadlock Eclipse) if you change the (normally invisible)
Info.plist file within the Eclipse application bundle and explicitely switch the JVM to 1.4.1.
However, we do not recommend to run Eclipse on 1.4.1.
I think we should just leave this PR open.  If we put in an error dialog for 
1.4.1, it could still be broken or fixed in 1.4.2.  Since there is no way of 
knowing, we would show the error dialog for ever and never get the fix.
In particular, the bug may yet be fixed for the officially released 1.4.1 version.
I suggest we just add this info to the Eclipse ReadMe then.
I finally had to switch to 1.4.1 as my build environment, which also forced an upgrade to 2.1 (from 
M4), and I confirmed that this bug is still present.

It's a problem that you can't change the fonts, but the more immediate problem is that the default 
text editing font is Geneva, a non-monospaced font, which on the Mac results in the cursor not 
being lined up with where the editing is taking place.  (Probably a separate bug)  It can be as much 
as two character widths away from where the next character would be inserted.

Workaround suggestions:

(1) Monaco is probably a better choice for the default font -- being monospaced it won't have the 
cursor positioning problem.

(2) If there is a config file somewhere where the font options are saved, it would be nice to have it 
mentioned in the readme file beside the bug notification so people can go under the hood if they 
really need to change the font.  As it is I changed the Info.plist entry to start up under 1.3.1 again 
long enough to make the font change, then restarted back into 1.4.1.

The only reason for running Eclipse on 1.4.1 is if you need 1.4.1 features from within Ant 
scripts. Does this apply to you?
If not, please consider running Eclipse on 1.3.1. 
You still can develop for 1.4.1 even if Eclipse runs on 1.3.1.
I assume you knew this already, but perhaps it's helpful to somebody: There is
System.err output when opening the color dialog with 1.4.1, just before the
dialog hangs:

2003-06-08 19:45:43.240 JavaApplicationStub[641] *** _NSAutoreleaseNoPool(): Obj
ect 0x73ef830 of class NSCFArray autoreleased with no pool in place - just leaki
ng
2003-06-08 19:45:44.300 JavaApplicationStub[641] *** _NSAutoreleaseNoPool(): Obj
ect 0xa3086460 of class NSCFString autoreleased with no pool in place - just lea
king

(Runtime Workbench on 3.0 M1 configured for Java 1.4)
I get some additional errors when running under the I20030611 Integration 
build of Eclipse 3.0 (using JDK 1.4.1), which might help some more. They are:

2003-06-11 13:13:04.880 JavaApplicationStub[1058] *** _NSAutoreleaseNoPool(): 
Object 0x14996490 of class NSCFArray autoreleased with no pool in place - just 
leaking
2003-06-11 13:13:05.292 JavaApplicationStub[1058] An uncaught exception was 
raised
2003-06-11 13:13:05.295 JavaApplicationStub[1058] *** -[NSCFArray 
objectAtIndex:]: index (1) beyond bounds (1)
2003-06-11 13:13:05.296 JavaApplicationStub[1058] *** Uncaught exception: &lt;
NSRangeException&gt; *** -[NSCFArray objectAtIndex:]: index (1) beyond bounds (1)

OK, I know what the problem is and how to avoid it in the first place.
A fix is underway...
That's great news!  Can we help?
No, but thanks for your offer.

The trick is to launch the Java VM in the "Main thread". 
So I had to write a "/usr/bin/java" replacement.
An new JDT launcher that uses this replacement is already used in the nightly builds 
(and will be in tomorrows integration build).
It is used whenever you launch applications from within Eclipse under Java 1.4.1.

(I will try to get this launcher into the platform-launcher, too)

A more detailled problem descriptions will follow soon.

That's good news and may also improve performance.  It's possible that Apple 
expects the main thread to be the GUI thread and gives it more cycles.  Just 
guessing here.

Will we need to update the FAQ about running SWT stand alone?
Yes, we'll have to update the FAQ about running SWT stand alone.

The good thing is that any SWT application now can be started from the command line (by means 
of java_swt instead of /usr/bin/java).

On the other hand, since creating an application bundle in /tmp is no longer a side effect of 
launching a SWT application from within Eclipse, setting up a double clickable application requires 
more work.
I'm planning to write an Eclipse plugin for this (in fact, the code is already there; just the UI is 
missing).
BTW: nightly build N20030708 contains my latest code (and works for me).
If you want to give it a try, just replace the "1.3.1" in the Info.plist file with a "1.4.1".
With this Color and Font dialogs work.
In addition, this version runs on Panther (and is pretty fast).
Right, I'll try it.  In the mean time, is this PR fixed?  Do you want to 
update the FAQ?
Andre,

Let me know when the double-clickable app plugin is ready to try. Also, can you send me a bit 
more details about running SWT apps on the mac using java_swt? It would be good to put this in 
the SWT book that Steve and I are working on.

I will close this PR if my fix works for more users than just me.
So I will wait at least for a working integration build.

[Remember, the fix is only activated if you edit the Info.plist file and change
the VM to a path that contains a "1.4.1" ]

Yes, I will update the FAQ as soon as I know what the "current story" is.
I've downloaded the nightly build, and made the changes to the Info.plist file.
I'm developing a plugin, and now when I try to run it, the new perspective that
is in my plugin is not available. Is this a consequence of the new launcher?
No, I don't think so.
The fix for this bug didn't touch any Java code.
BTW, I would recommend to use I20030710 instead of the nightly build.
I have confirmed that it now works for me. Thanks for the fix!
Seems to work.
Will be in M2.
Any productization of java_swt will be done for M3 (see bug #40003)
Here is the story why SWT application needs a special launcher on MacOS X.
[I posted this on the SWT mailing list]:

The problem is neither SWT nor Eclipse, it's /usr/bin/java (and its bundle cousin 
"JavaApplicationStub"; the JavaApplicationStub extracts the arguments from the Info.plist file 
instead of from the command line).

/usr/bin/java (and JavaApplicationStub) starts the Java VM in the second thread because it runs an 
event loop in the first thread (the "Main" thread), and assumes that the Java code (in any thread) 
behind the scene communicates with the event loop in the Main thread.

But this assumption breaks with SWT because it uses code (Carbon and Cocoa natives) that 
normally runs in the main thread and knows nothing about the fact that another event loop is 
already running.

[BTW, I will file a Radar bug against this behavior of /usr/bin/java since it prevents running Java 
code in the "main" thread]

So the only fix for this is a replacement for /usr/bin/java (and the "JavaApplicationStub") that runs 
no additional event loop in the main thread but starts the Java VM there. This is java_swt.

OK, this was the theory. Some caveats:

- for Java 1.3.1 "JavaApplicationStub" contained some workarounds to avoid
  the deadlocks, so with it Eclipse would run without problems as long as
  started from the bundle (via JavaApplicationStub ) and not from /usr/bin/java.
  (that's the reason why the launcher always creates a bundle on the fly instead
  of using /usr/bin/java)

- after installing any version of 1.4.1, the "JavaApplicationStub" was
  replaced with a version without the workaround (for all VM versions including 1.3.1 !).
  As a consequence, I had to adapt Eclipse's MacOS X launcher
  (org.eclipse.jdt.launching.macosx) to continue using the old version
  of the "JavaApplicationStub" (by shipping a copy of it).

- this copy no longer seems to work under Panther. That's the reason why launching
  Eclipse under 1.3.1 on Panther fails. I haven't tried to find the cause of this,
  because Panther is scheduled for the end of this year, with 1.4.1 as default VM,
  and Eclipse will switch to 1.4.1 in September. So there is probably not a great
  need for running Eclipse on 1.3.1 on Panther.

- my new Java VM launcher "java_swt" is only activated if a 1.4.1 VM is selected in
  the Info.plist file. Otherwise, the old 1.3.1 code is used.
  This is done because I didn't want to fix something (1.3.1) that wasn't broken in Jaguar.
  (However, in Panther it is broken...)

- I understand that it would make sense to run SWT applications
  (which don't require 1.4.1) on Panther and a 1.3.1 VM.
  I believe that my fix (the java_swt launcher) will work under 1.3.1 too.
  I just have to find the time to verify it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30022" />
    <CreationDate amount="2003-01-22 16:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>SWT needs a component model layer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="6168" end="7309" />
        <code>public class PComposite extends CompositePeer {
	
public PComposite() {
   // Default to GridLayout
   setLayoutManager(new PGridLayout());

   // Turn the border on by default
   Set styles = new TreeSet();
   styles.add(new Integer(SWT.BORDER));
   setStyle(styles);

   // Add IPropertyDescription objects here...
}
	
/**
 * @see org.eclipse.sweet.interfaces.WidgetPeer#createWidget(Widget)
 */
public Widget createWidget(Widget parent) {
   return new Composite((Composite)parent, getStyleBits());
}
    
/**
 * @see org.eclipse.sweet.interfaces.IComponentPeer#getPropertyNames()
 */
public String[] getPropertyNames() {
   // Return an array of property names for a Composite...
}

/**
 * @see org.eclipse.sweet.interfaces.IComponentPeer#getValidStyleNames()
 */
public String[] getValidStyleNames() {
   // Return an array of SWT.XXX names that are the valid style bit constants
   // for a Composite
}

/**
 * @see org.eclipse.sweet.interfaces.IComponentPeer#getValidStyles()
 */
public Integer[] getValidStyles() {
   // Return an array of the integer values corresponding to the style names
   // returned by getValidStyleNames
}

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>SWT needs its own Component API model because of the following significant SWT
programming constraint: Some Widget properties are implemented as style bits
that are passed to the Widget's constructor. These properties cannot be changed
after the object has been constructed.

What this means is that whenever the GUI builder user changes a property that is
actually implemented via a style bit, the changed control plus all controls it
contains must be dispose()d and recreated. There is no way to change this
without introducing a new layer of Java objects on top of the existing SWT
objects (which are really just native operating system objects that are wrapped
by SWT).

Although there are other limitations that impede creating a GUI builder directly
on top of SWT, this is the one that proves to be fatal.

But whose design defect is this?

Because SWT does not maintain its own layer of objects on top of the operating
system's objects, SWT is really just inheriting the design of the underlying
operating system API (mainly the Windows API). Visual Studio, Delphi, and so on
have exactly these same low-level constraints to deal with: this is how the
Windows API works for them too. What has happened on Windows is that the VBX,
Active-X, and VCL APIs have been created on top of the Windows API to wrap and
hide these issues.

SWT is like the Windows API for cross-platform controls. SWT just needs its own
Component API that wraps the messiness just like VBX, Active-X, and VCL have
done for single-platform Windows applications.

However, it is important for the ongoing health of the SWT community that such a
Component API layer become a standard, supported by all SWT GUI builders,
because this would enable a thriving third-party SWT custom control market to
evolve.

On the contrary, if every GUI builder author invented his or her own component
API layer, then there would be as many component models as GUI builders, forcing
custom control authors to choose which GUI builders to support.  In the long
term, this would stifle or possibly eliminate the opportunity for a thriving,
vibrant third-party SWT custom control market, something we consider essential
to the maximum success of all GUI builders on the SWT platform.

The ideal place for such a standard SWT component model would be inside Eclipse
itself.  Then it would be clear to all GUI builder writers and third party
custom control authors what API is the preferred way to support SWT.

In order to help this work be done in the fastest and most expedient way
possible, Advanced Systems Concepts has developed such a component layer for
SWT.  In order to maintain separation of concerns, we have made it a separate
plug-in similar to JFace.

We would like to submit it to the SWT team for possible inclusion into Eclipse
as the community's "first cut" at producing a standard SWT component API.

Attached to this bug report is a copy of the complete plugin including source code.

Please let us know if the attached code will meet the above-described needs and
can be included.  Also, please let us know if you feel that we have missed
anything either in our design or our implementation so we may rectify it and
submit a fixed version.
Created attachment 3089
Proposed Component API layer (Sweet for SWT); initial release

Here's some additional help for anyone who downloads the above plug-in:

Since the Sweet API hasn't been even accepted by Eclipse.org, much less frozen,
I have not documented it beyond its own internal JavaDoc and comments.  This
comment is intended to overcome that limitation by explaining Sweet's overall
structure for someone who is unfamiliar with it.  Hopefully, this will quickly
provide enough background so that an experienced SWT developer can quickly
understand Sweet's structure and get to the point that the Javadoc becomes the
most useful documentation.

Sweet is basically a bunch of interfaces and convenience classes that provide
default implementations of these interfaces.  These classes also function as
base classes for inheritance.  In order to quickly get a feel for Sweet's
structure, the easiest way is to load class Peer into the inheritance view and
expand all children.

The classes, unsurprisingly, follow the same inheritance structure as SWT
itself.  The basic idea is to create a set of peer classes for the SWT objects
where the Sweet side of the relationship adds the features needed by a GUI
builder.  The code uses the terminology "Sweet peer" to refer to the Sweet class
and "SWT peer" to refer to the SWT class in this peer relationship.  The
structure isn't a full Decorator pattern, however, in that the Sweet classes are
not expected to wrap each individual method in the underlying SWT classes. 
Rather, Sweet takes the JFace approach of providing getControl() methods for
accessing the underlying SWT Widgets.

The one exception to the "follow the SWT inheritance structure" principle is
that Sweet has no class corresponding with Scrollable.  This is because we have
not yet encountered anything that Scrollable does in addition to Control that
requires additional support from a GUI builder, so we have followed the
principle of "doing the simplest thing that could possibly work."  Peers of
Scrollables (Sweet peers of List and Tree) currently should extend ControlPeer.

Lastly, the Sweet library is designed to create the inheritance structure from
which actual SWT widget's peers will be created.  We anticipate that a library
of these peers will be provided by a separate plug-in that will be a part of the
Eclipse project (probably org.eclipse.sweet.components).  We are prepared to
develop (or help develop) and support such a plug-in in addition to Sweet but
would like to get the contents of the Sweet API finalized before investing a
large amount of effort in creating peers.

Since Sweet itself does not include any examples of actual Sweet peers, here is
a skeleton peer for Composite to illustrate what a typical peer actually
contains (I have deliberately not implemented some methods since the purpose
here is to illustrate the structure of a Sweet peer rather than provide a
complete working example):

public class PComposite extends CompositePeer {
	
public PComposite() {
   // Default to GridLayout
   setLayoutManager(new PGridLayout());

   // Turn the border on by default
   Set styles = new TreeSet();
   styles.add(new Integer(SWT.BORDER));
   setStyle(styles);

   // Add IPropertyDescription objects here...
}
	
/**
 * @see org.eclipse.sweet.interfaces.WidgetPeer#createWidget(Widget)
 */
public Widget createWidget(Widget parent) {
   return new Composite((Composite)parent, getStyleBits());
}
    
/**
 * @see org.eclipse.sweet.interfaces.IComponentPeer#getPropertyNames()
 */
public String[] getPropertyNames() {
   // Return an array of property names for a Composite...
}

/**
 * @see org.eclipse.sweet.interfaces.IComponentPeer#getValidStyleNames()
 */
public String[] getValidStyleNames() {
   // Return an array of SWT.XXX names that are the valid style bit constants
   // for a Composite
}

/**
 * @see org.eclipse.sweet.interfaces.IComponentPeer#getValidStyles()
 */
public Integer[] getValidStyles() {
   // Return an array of the integer values corresponding to the style names
   // returned by getValidStyleNames
}

}

The purpose of the above is to illustrate how straightforward it is to create a
Sweet peer for a nontrivial SWT class, along with a default layout manager, etc.

If anyone has any questions about the above, please let me know.


Rather than using concrete classes for each widget I think the approach should 
be similar to the BeanInfo approach used by JFC classes.  I think having a 
composite peer is too limiting as it seem to be driven by the need to re-cycle 
the SWT control when one of its style bit values changes, however this should be 
left up to the GUI builder to decide how to do.  Instead the specification 
should be driven more along the lines of a description of how the SWT control' 
properties are made up, what cell editors and label providers work with each 
property.  In the case of the BeanInfo java.beans.PropertyDescriptor the 
assumption is made that the PropertyDescriptor represents a get and set method, 
however with SWT it should provide three different descriptor types, one for a 
get and set method pair, one for a public field, and another for a style bit.
Having retrieved the structure and design time behavior of an SWT control from 
its metadata the metadata class should not actually be used inside the IDE.  The 
metadata could be described in a class format or, my preference, would be an XML 
based descriptor.
Basically - I love the idea of a metadata descriptor for SWT controls in a 
builder, however I am opposed to the idea of this being in the form of a peer 
layer inside the IDE and would rather see it be a declarative format.
Created attachment 3128
Plugin.xml (was missed from the "package plugin jars" function)

Created a page on the Wiki for discussing and resolving people's concerns about
the current design: http://eclipsewiki.swiki.net/248

You guys need to continue your discussions on the Wikki.  I probably won't get 
a chance to take part in this until after 2.1 ships.</WithStack>
    <WithOutStack>SWT needs its own Component API model because of the following significant SWT
programming constraint: Some Widget properties are implemented as style bits
that are passed to the Widget's constructor. These properties cannot be changed
after the object has been constructed.

What this means is that whenever the GUI builder user changes a property that is
actually implemented via a style bit, the changed control plus all controls it
contains must be dispose()d and recreated. There is no way to change this
without introducing a new layer of Java objects on top of the existing SWT
objects (which are really just native operating system objects that are wrapped
by SWT).

Although there are other limitations that impede creating a GUI builder directly
on top of SWT, this is the one that proves to be fatal.

But whose design defect is this?

Because SWT does not maintain its own layer of objects on top of the operating
system's objects, SWT is really just inheriting the design of the underlying
operating system API (mainly the Windows API). Visual Studio, Delphi, and so on
have exactly these same low-level constraints to deal with: this is how the
Windows API works for them too. What has happened on Windows is that the VBX,
Active-X, and VCL APIs have been created on top of the Windows API to wrap and
hide these issues.

SWT is like the Windows API for cross-platform controls. SWT just needs its own
Component API that wraps the messiness just like VBX, Active-X, and VCL have
done for single-platform Windows applications.

However, it is important for the ongoing health of the SWT community that such a
Component API layer become a standard, supported by all SWT GUI builders,
because this would enable a thriving third-party SWT custom control market to
evolve.

On the contrary, if every GUI builder author invented his or her own component
API layer, then there would be as many component models as GUI builders, forcing
custom control authors to choose which GUI builders to support.  In the long
term, this would stifle or possibly eliminate the opportunity for a thriving,
vibrant third-party SWT custom control market, something we consider essential
to the maximum success of all GUI builders on the SWT platform.

The ideal place for such a standard SWT component model would be inside Eclipse
itself.  Then it would be clear to all GUI builder writers and third party
custom control authors what API is the preferred way to support SWT.

In order to help this work be done in the fastest and most expedient way
possible, Advanced Systems Concepts has developed such a component layer for
SWT.  In order to maintain separation of concerns, we have made it a separate
plug-in similar to JFace.

We would like to submit it to the SWT team for possible inclusion into Eclipse
as the community's "first cut" at producing a standard SWT component API.

Attached to this bug report is a copy of the complete plugin including source code.

Please let us know if the attached code will meet the above-described needs and
can be included.  Also, please let us know if you feel that we have missed
anything either in our design or our implementation so we may rectify it and
submit a fixed version.
Created attachment 3089
Proposed Component API layer (Sweet for SWT); initial release

Here's some additional help for anyone who downloads the above plug-in:

Since the Sweet API hasn't been even accepted by Eclipse.org, much less frozen,
I have not documented it beyond its own internal JavaDoc and comments.  This
comment is intended to overcome that limitation by explaining Sweet's overall
structure for someone who is unfamiliar with it.  Hopefully, this will quickly
provide enough background so that an experienced SWT developer can quickly
understand Sweet's structure and get to the point that the Javadoc becomes the
most useful documentation.

Sweet is basically a bunch of interfaces and convenience classes that provide
default implementations of these interfaces.  These classes also function as
base classes for inheritance.  In order to quickly get a feel for Sweet's
structure, the easiest way is to load class Peer into the inheritance view and
expand all children.

The classes, unsurprisingly, follow the same inheritance structure as SWT
itself.  The basic idea is to create a set of peer classes for the SWT objects
where the Sweet side of the relationship adds the features needed by a GUI
builder.  The code uses the terminology "Sweet peer" to refer to the Sweet class
and "SWT peer" to refer to the SWT class in this peer relationship.  The
structure isn't a full Decorator pattern, however, in that the Sweet classes are
not expected to wrap each individual method in the underlying SWT classes. 
Rather, Sweet takes the JFace approach of providing getControl() methods for
accessing the underlying SWT Widgets.

The one exception to the "follow the SWT inheritance structure" principle is
that Sweet has no class corresponding with Scrollable.  This is because we have
not yet encountered anything that Scrollable does in addition to Control that
requires additional support from a GUI builder, so we have followed the
principle of "doing the simplest thing that could possibly work."  Peers of
Scrollables (Sweet peers of List and Tree) currently should extend ControlPeer.

Lastly, the Sweet library is designed to create the inheritance structure from
which actual SWT widget's peers will be created.  We anticipate that a library
of these peers will be provided by a separate plug-in that will be a part of the
Eclipse project (probably org.eclipse.sweet.components).  We are prepared to
develop (or help develop) and support such a plug-in in addition to Sweet but
would like to get the contents of the Sweet API finalized before investing a
large amount of effort in creating peers.

Since Sweet itself does not include any examples of actual Sweet peers, here is
a skeleton peer for Composite to illustrate what a typical peer actually
contains (I have deliberately not implemented some methods since the purpose
here is to illustrate the structure of a Sweet peer rather than provide a
complete working example):

public class PComposite extends CompositePeer {
	
public PComposite() {
   // Default to GridLayout
   setLayoutManager(new PGridLayout());

   // Turn the border on by default
   Set styles = new TreeSet();
   styles.add(new Integer(SWT.BORDER));
   setStyle(styles);

   // Add IPropertyDescription objects here...
}
	
/**
 * @see org.eclipse.sweet.interfaces.WidgetPeer#createWidget(Widget)
 */
public Widget createWidget(Widget parent) {
   return new Composite((Composite)parent, getStyleBits());
}
    
/**
 * @see org.eclipse.sweet.interfaces.IComponentPeer#getPropertyNames()
 */
public String[] getPropertyNames() {
   // Return an array of property names for a Composite...
}

/**
 * @see org.eclipse.sweet.interfaces.IComponentPeer#getValidStyleNames()
 */
public String[] getValidStyleNames() {
   // Return an array of SWT.XXX names that are the valid style bit constants
   // for a Composite
}

/**
 * @see org.eclipse.sweet.interfaces.IComponentPeer#getValidStyles()
 */
public Integer[] getValidStyles() {
   // Return an array of the integer values corresponding to the style names
   // returned by getValidStyleNames
}

}

The purpose of the above is to illustrate how straightforward it is to create a
Sweet peer for a nontrivial SWT class, along with a default layout manager, etc.

If anyone has any questions about the above, please let me know.


Rather than using concrete classes for each widget I think the approach should 
be similar to the BeanInfo approach used by JFC classes.  I think having a 
composite peer is too limiting as it seem to be driven by the need to re-cycle 
the SWT control when one of its style bit values changes, however this should be 
left up to the GUI builder to decide how to do.  Instead the specification 
should be driven more along the lines of a description of how the SWT control' 
properties are made up, what cell editors and label providers work with each 
property.  In the case of the BeanInfo java.beans.PropertyDescriptor the 
assumption is made that the PropertyDescriptor represents a get and set method, 
however with SWT it should provide three different descriptor types, one for a 
get and set method pair, one for a public field, and another for a style bit.
Having retrieved the structure and design time behavior of an SWT control from 
its metadata the metadata class should not actually be used inside the IDE.  The 
metadata could be described in a class format or, my preference, would be an XML 
based descriptor.
Basically - I love the idea of a metadata descriptor for SWT controls in a 
builder, however I am opposed to the idea of this being in the form of a peer 
layer inside the IDE and would rather see it be a declarative format.
Created attachment 3128
Plugin.xml (was missed from the "package plugin jars" function)

Created a page on the Wiki for discussing and resolving people's concerns about
the current design: http://eclipsewiki.swiki.net/248

You guys need to continue your discussions on the Wikki.  I probably won't get 
a chance to take part in this until after 2.1 ships.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30023" />
    <CreationDate amount="2003-01-22 16:58:00 -0500" />
    <DupId amount="29151" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE when performing Surround with try-catch on multiple lines</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437338565461">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform(TextFileChange.java:203)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:173)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:326)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:626)</Frame>
          <Frame depth="5">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1580)</Frame>
          <Frame depth="6">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2621)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:183)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:151)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.internalRun(BusyIndicatorRunnableContext.java:107)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run(BusyIndicatorRunnableContext.java:74)</Frame>
          <Frame depth="11">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run(BusyIndicatorRunnableContext.java:120)</Frame>
          <Frame depth="13">org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run(SurroundWithTryCatchAction.java:110)</Frame>
          <Frame depth="14">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:193)</Frame>
          <Frame depth="15">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:169)</Frame>
          <Frame depth="16">org.eclipse.jface.action.Action.runWithEvent(Action.java:804)</Frame>
          <Frame depth="17">org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:177)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="19">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:422)</Frame>
          <Frame depth="20">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:374)</Frame>
          <Frame depth="21">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:368)</Frame>
          <Frame depth="22">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:69)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.run(Workbench.java:1508)</Frame>
          <Frame depth="29">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="30">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="31">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I slelected multi lines and tried to perform a "surround with try catch". 
Nothing happend and the following NPE was in the log.

!ENTRY org.eclipse.ui 4 0 Jan 22, 2003 17:26:20.216
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at 
org.eclipse.jdt.internal.corext.refactoring.changes.TextFileChange.perform
(TextFileChange.java:203)
	at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation$1.run
(PerformChangeOperation.java:173)
	at org.eclipse.jdt.internal.core.BatchOperation.executeOperation
(BatchOperation.java:34)
	at org.eclipse.jdt.internal.core.JavaModelOperation.execute
(JavaModelOperation.java:326)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:626)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1580)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:2621)
	at 
org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.executeChange
(PerformChangeOperation.java:183)
	at org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run
(PerformChangeOperation.java:151)
	at 
org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.inter
nalRun(BusyIndicatorRunnableContext.java:107)
	at 
org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext$BusyRunnable.run
(BusyIndicatorRunnableContext.java:74)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)
	at org.eclipse.jdt.internal.ui.util.BusyIndicatorRunnableContext.run
(BusyIndicatorRunnableContext.java:120)
	at org.eclipse.jdt.ui.actions.SurroundWithTryCatchAction.run
(SurroundWithTryCatchAction.java:110)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:193)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:169)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:804)
	at org.eclipse.ui.actions.RetargetAction.runWithEvent
(RetargetAction.java:177)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:422)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:374)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:368)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:69)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1508)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
Forgot to mention that I'm using build I20030122


*** This bug has been marked as a duplicate of 29151 ***</WithStack>
    <WithOutStack>I slelected multi lines and tried to perform a "surround with try catch". 
Nothing happend and the following NPE was in the log.

!ENTRY org.eclipse.ui 4 0 Jan 22, 2003 17:26:20.216
!MESSAGE java.lang.NullPointerException
!STACK 0

Forgot to mention that I'm using build I20030122


*** This bug has been marked as a duplicate of 29151 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30024" />
    <CreationDate amount="2003-01-22 17:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[Linked Resources] Variable dialog should have option to "extend"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: I20030122

Doing some more usability testing with linked resource scenarios, I found the
path variable dialog to be missing something.  In the JDT build path variable
dialog, there is a button to "extend" the given variable... that is, select an
existing directory relative to the given path.  See the libraries page of the
java build path property page for an example (click "Add Variable...").

If my variable is TEMP -&gt; c:\temp

And I want my linked resource to be located at c:\temp\foo, I have to type in
the extension by hand.  If I'm not sure of the directory name, I have to drop
down to windows explorer to figure it out.
*** Bug 30540 has been marked as a duplicate of this bug. ***
Fixed in &gt;20030210</WithStack>
    <WithOutStack>Build: I20030122

Doing some more usability testing with linked resource scenarios, I found the
path variable dialog to be missing something.  In the JDT build path variable
dialog, there is a button to "extend" the given variable... that is, select an
existing directory relative to the given path.  See the libraries page of the
java build path property page for an example (click "Add Variable...").

If my variable is TEMP -&gt; c:\temp

And I want my linked resource to be located at c:\temp\foo, I have to type in
the extension by hand.  If I'm not sure of the directory name, I have to drop
down to windows explorer to figure it out.
*** Bug 30540 has been marked as a duplicate of this bug. ***
Fixed in &gt;20030210</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30025" />
    <CreationDate amount="2003-01-22 17:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="critical" />
    <Summery>Importing 2.0 plug-ins from 2.1 code fails</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Downloaded SDK 2.0 into d:\eclipse-sdk2.0</Line>
          <Line>2) Opened 'Import plugins' wizard and unchecked default location check</Line>
          <Line>3) Pointed at d:\eclipse-sdk2.0\eclipse</Line>
          <Line>4) Pressed 'Next'</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Reported by Kevin Haaland:

When trying to import plug-ins from a 2.0 build, the wizard cannot find any 
plug-ins when using 'Other' option in plug-in import wizard.
I tried this:

1) Downloaded SDK 2.0 into d:\eclipse-sdk2.0
2) Opened 'Import plugins' wizard and unchecked default location check
3) Pointed at d:\eclipse-sdk2.0\eclipse
4) Pressed 'Next'

The list contained all the 2.0 plug-ins. However, it did not when I used
d:\eclipse-sdk2.0\eclipse\plugins.

Conclusion - the code expects that the directory is the root of the 
Eclipse product or extension i.e. it expects plug-ins to be in 'plugins'
directory. This is an unreasonable restriction.
Wassim, when you redesigned the import wizard to use the registry loader, we 
lost one suble property of the 'other location' import: the ability to load 
random plug-ins.

The expected behaviour is:

If the location is &lt;foo&gt;, we should look into &lt;foo&gt;\plugins. If we don't find 
anything, we should also look in &lt;foo&gt; itself. This will allow us to import 
from a random directory that contains a few plug-ins i.e. not only a full build.

This behaviour should only apply to the 'Other location' choice. The Target 
Platform preference page should continue to work as today.
Fixed.
expected behavior:
if user chooses to import from a location other than the target platform, e.g. 
from C:\random, we search for plugins in C:\random and C:\random\plugins.</WithStack>
    <WithOutStack>Reported by Kevin Haaland:

When trying to import plug-ins from a 2.0 build, the wizard cannot find any 
plug-ins when using 'Other' option in plug-in import wizard.
I tried this:

1) Downloaded SDK 2.0 into d:\eclipse-sdk2.0
2) Opened 'Import plugins' wizard and unchecked default location check
3) Pointed at d:\eclipse-sdk2.0\eclipse
4) Pressed 'Next'

The list contained all the 2.0 plug-ins. However, it did not when I used
d:\eclipse-sdk2.0\eclipse\plugins.

Conclusion - the code expects that the directory is the root of the 
Eclipse product or extension i.e. it expects plug-ins to be in 'plugins'
directory. This is an unreasonable restriction.
Wassim, when you redesigned the import wizard to use the registry loader, we 
lost one suble property of the 'other location' import: the ability to load 
random plug-ins.

The expected behaviour is:

If the location is &lt;foo&gt;, we should look into &lt;foo&gt;\plugins. If we don't find 
anything, we should also look in &lt;foo&gt; itself. This will allow us to import 
from a random directory that contains a few plug-ins i.e. not only a full build.

This behaviour should only apply to the 'Other location' choice. The Target 
Platform preference page should continue to work as today.
Fixed.
expected behavior:
if user chooses to import from a location other than the target platform, e.g. 
from C:\random, we search for plugins in C:\random and C:\random\plugins.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30026" />
    <CreationDate amount="2003-01-22 17:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>NullPointerException when compiling</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437338565461">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.fromBinding(EclipseWorld.java:142)</Frame>
          <Frame depth="1">org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.makeResolvedMember(EclipseWorld.java:166)</Frame>
          <Frame depth="2">org.aspectj.ajdt.internal.compiler.lookup.PrivilegedHandler.getPrivilegedAccessMethod(PrivilegedHandler.java:44)</Frame>
          <Frame depth="3">org.aspectj.ajdt.internal.compiler.ast.AccessForInlineVisitor.endVisit(AccessForInlineVisitor.java:70)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse(MessageSend.java:319)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:98)</Frame>
          <Frame depth="6">org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration.resolveStatements(AdviceDeclaration.java:153)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:325)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:922)</Frame>
          <Frame depth="9">org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.resolve(AspectDeclaration.java:63)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:954)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:235)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:536)</Frame>
          <Frame depth="13">org.aspectj.ajdt.internal.compiler.AjCompiler.process(AjCompiler.java:63)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:340)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:232)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:171)</Frame>
          <Frame depth="17">org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(AjBuildManager.java:612)</Frame>
          <Frame depth="18">org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:102)</Frame>
          <Frame depth="19">org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:54)</Frame>
          <Frame depth="20">org.aspectj.tools.ajc.Main.run(Main.java:199)</Frame>
          <Frame depth="21">org.aspectj.tools.ajc.Main.runMain(Main.java:138)</Frame>
          <Frame depth="22">org.aspectj.tools.ajc.Main.main(Main.java:58)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338565461">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.fromBinding(EclipseWorld.java:142)</Frame>
          <Frame depth="1">org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.makeResolvedMember(EclipseWorld.java:166)</Frame>
          <Frame depth="2">org.aspectj.ajdt.internal.compiler.lookup.PrivilegedHandler.getPrivilegedAccessMethod(PrivilegedHandler.java:44)</Frame>
          <Frame depth="3">org.aspectj.ajdt.internal.compiler.ast.AccessForInlineVisitor.endVisit(AccessForInlineVisitor.java:70)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse(MessageSend.java:319)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:98)</Frame>
          <Frame depth="6">org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration.resolveStatements(AdviceDeclaration.java:153)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:325)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:922)</Frame>
          <Frame depth="9">org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.resolve(AspectDeclaration.java:63)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:954)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:235)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:536)</Frame>
          <Frame depth="13">org.aspectj.ajdt.internal.compiler.AjCompiler.process(AjCompiler.java:63)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:340)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:232)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:171)</Frame>
          <Frame depth="17">org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(AjBuildManager.java:612)</Frame>
          <Frame depth="18">org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:102)</Frame>
          <Frame depth="19">org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:54)</Frame>
          <Frame depth="20">org.aspectj.tools.ajc.Main.run(Main.java:199)</Frame>
          <Frame depth="21">org.aspectj.tools.ajc.Main.runMain(Main.java:138)</Frame>
          <Frame depth="22">org.aspectj.tools.ajc.Main.main(Main.java:58)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338565461">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.fromBinding(EclipseWorld.java:142)</Frame>
          <Frame depth="1">org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.makeResolvedMember(EclipseWorld.java:166)</Frame>
          <Frame depth="2">org.aspectj.ajdt.internal.compiler.lookup.PrivilegedHandler.getPrivilegedAccessMethod(PrivilegedHandler.java:44)</Frame>
          <Frame depth="3">org.aspectj.ajdt.internal.compiler.ast.AccessForInlineVisitor.endVisit(AccessForInlineVisitor.java:70)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse(MessageSend.java:319)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:98)</Frame>
          <Frame depth="6">org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration.resolveStatements(AdviceDeclaration.java:153)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:325)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:922)</Frame>
          <Frame depth="9">org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.resolve(AspectDeclaration.java:63)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:954)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:235)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:536)</Frame>
          <Frame depth="13">org.aspectj.ajdt.internal.compiler.AjCompiler.process(AjCompiler.java:63)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:340)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:232)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:171)</Frame>
          <Frame depth="17">org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(AjBuildManager.java:612)</Frame>
          <Frame depth="18">org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:102)</Frame>
          <Frame depth="19">org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:54)</Frame>
          <Frame depth="20">org.aspectj.tools.ajc.Main.run(Main.java:199)</Frame>
          <Frame depth="21">org.aspectj.tools.ajc.Main.runMain(Main.java:138)</Frame>
          <Frame depth="22">org.aspectj.tools.ajc.Main.main(Main.java:58)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="3">
      <source_code type="class">
        <location start="149" end="332" />
        <code>public class NullPtr {
    public static void main(String args[]) {
        NullPtr np = new NullPtr();
        np = null;
    }

    public void finalize() throws Throwable {
    }
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="441" end="476" />
        <code>execution(void finalize());</code>
      </source_code>
      <source_code type="functiondef">
        <location start="478" end="652" />
        <code>void around(Object o) throws Throwable: finalizeCall(o) {
        o.finalize();               // error
        ((NullPtr) o).finalize();   // ok
        proceed(o);
    }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>o.finalize();               // error</Line>
          <Line>^^^^^^^^</Line>
          <Line>Exception thrown from AspectJ 1.1beta4</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>With the following program I get a NullPointerException during compiling and a
warning that the source code of Object is not available for weaving:

public class NullPtr {
    public static void main(String args[]) {
        NullPtr np = new NullPtr();
        np = null;
    }

    public void finalize() throws Throwable {
    }
}

aspect FinalizeContract {
    pointcut finalizeCall(Object o):
        this(Object+) &amp;&amp;
        this(o) &amp;&amp;
        execution(void finalize());

    void around(Object o) throws Throwable: finalizeCall(o) {
        o.finalize();               // error
        ((NullPtr) o).finalize();   // ok
        proceed(o);
    }
}

It works if I comment out the line indicated by the // error comment or if I
declare the aspect as privileged.
The correct behavior is for the compiler to signal that the finalize method is 
not visible to the aspect because its a protected method on Object.  This is 
the behavior that I observe for 1.1beta4.

Can you confirm that you're seeing it with the latest version of the compiler, 
and if so include the text of the stack trace and warning?

The compiler claims to be AspectJ Compiler 1.1beta4
Below is what I get when compiling and running the program:

robert@Knochenmehl:~/daten/text/publications/aspecttesting/code&gt; make NullPtr
CLASSPATH=.:/opt/java/junit3.8.1/junit.jar:/home/robert/programme/aspectj1.1b4/lib/aspectjrt.jar:/home/robert/programme/aspectj1.1b4/lib/aspectjtools.jar
/home/robert/programme/aspectj1.1b4/bin/ajc -Xlint -XnoInline
-warn:constructorName,packageDefaultMethod,deprecation,maskedCatchBlocks,unusedImports,syntheticAccess
 NullPtr.java
java.lang.NullPointerException
        at
org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.fromBinding(EclipseWorld.java:142)
        at
org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.makeResolvedMember(EclipseWorld.java:166)
        at
org.aspectj.ajdt.internal.compiler.lookup.PrivilegedHandler.getPrivilegedAccessMethod(PrivilegedHandler.java:44)
        at
org.aspectj.ajdt.internal.compiler.ast.AccessForInlineVisitor.endVisit(AccessForInlineVisitor.java:70)
        at
org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse(MessageSend.java:319)
        at
org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:98)
        at
org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration.resolveStatements(AdviceDeclaration.java:153)
        at
org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:325)
        at
org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:922)
        at
org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.resolve(AspectDeclaration.java:63)
        at
org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:954)
        at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:235)
        at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:536)
        at org.aspectj.ajdt.internal.compiler.AjCompiler.process(AjCompiler.java:63)
        at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:340)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:232)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:171)
        at
org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(AjBuildManager.java:612)
        at
org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:102)
        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:54)
        at org.aspectj.tools.ajc.Main.run(Main.java:199)
        at org.aspectj.tools.ajc.Main.runMain(Main.java:138)
        at org.aspectj.tools.ajc.Main.main(Main.java:58)
/home/robert/daten/text/publications/aspecttesting/code/NullPtr.java:0: Internal
compiler error
java.lang.NullPointerException
        at
org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.fromBinding(EclipseWorld.java:142)
        at
org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.makeResolvedMember(EclipseWorld.java:166)
        at
org.aspectj.ajdt.internal.compiler.lookup.PrivilegedHandler.getPrivilegedAccessMethod(PrivilegedHandler.java:44)
        at
org.aspectj.ajdt.internal.compiler.ast.AccessForInlineVisitor.endVisit(AccessForInlineVisitor.java:70)
        at
org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse(MessageSend.java:319)
        at
org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:98)
        at
org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration.resolveStatements(AdviceDeclaration.java:153)
        at
org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:325)
        at
org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:922)
        at
org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.resolve(AspectDeclaration.java:63)
        at
org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:954)
        at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:235)
        at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:536)
        at org.aspectj.ajdt.internal.compiler.AjCompiler.process(AjCompiler.java:63)
        at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:340)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:232)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:171)
        at
org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(AjBuildManager.java:612)
        at
org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:102)
        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:54)
        at org.aspectj.tools.ajc.Main.run(Main.java:199)
        at org.aspectj.tools.ajc.Main.runMain(Main.java:138)
        at org.aspectj.tools.ajc.Main.main(Main.java:58)


!! no source information available !!
/home/robert/daten/text/publications/aspecttesting/code/NullPtr.java:16: The
method finalize() from the type java.lang.Object is not visible
o.finalize();               // error
  ^^^^^^^^
Exception thrown from AspectJ 1.1beta4

This might be logged as a bug already -- see the bug database at
  http://dev.eclipse.org (product: AspectJ, component: compiler)

Bugs for exceptions thrown have titles File:line from the top stack,
e.g., "SomeFile.java:243"

If you don't find the exception below in a bug, please add a new bug
To make the bug a priority, please include a test program
that can reproduce this exception.
null
java.lang.NullPointerException
        at
org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.fromBinding(EclipseWorld.java:142)
        at
org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.makeResolvedMember(EclipseWorld.java:166)
        at
org.aspectj.ajdt.internal.compiler.lookup.PrivilegedHandler.getPrivilegedAccessMethod(PrivilegedHandler.java:44)
        at
org.aspectj.ajdt.internal.compiler.ast.AccessForInlineVisitor.endVisit(AccessForInlineVisitor.java:70)
        at
org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse(MessageSend.java:319)
        at
org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:98)
        at
org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration.resolveStatements(AdviceDeclaration.java:153)
        at
org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:325)
        at
org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:922)
        at
org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.resolve(AspectDeclaration.java:63)
        at
org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:954)
        at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:235)
        at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:536)
        at org.aspectj.ajdt.internal.compiler.AjCompiler.process(AjCompiler.java:63)
        at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:340)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:232)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:171)
        at
org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(AjBuildManager.java:612)
        at
org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:102)
        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:54)
        at org.aspectj.tools.ajc.Main.run(Main.java:199)
        at org.aspectj.tools.ajc.Main.runMain(Main.java:138)
        at org.aspectj.tools.ajc.Main.main(Main.java:58)


1 fail|abort, 2 errors
make: *** [NullPtr] Fehler 255

fixed in current cvs tree, test case in bugs/Finalizer.java

thanks for confirming that this bug was found in 1.1beta4.  it is now fixed in 
the current cvs tree.</WithStack>
    <WithOutStack>With the following program I get a NullPointerException during compiling and a
warning that the source code of Object is not available for weaving:

public class NullPtr {
    public static void main(String args[]) {
        NullPtr np = new NullPtr();
        np = null;
    }

    public void finalize() throws Throwable {
    }
}

aspect FinalizeContract {
    pointcut finalizeCall(Object o):
        this(Object+) &amp;&amp;
        this(o) &amp;&amp;
        execution(void finalize());

    void around(Object o) throws Throwable: finalizeCall(o) {
        o.finalize();               // error
        ((NullPtr) o).finalize();   // ok
        proceed(o);
    }
}

It works if I comment out the line indicated by the // error comment or if I
declare the aspect as privileged.
The correct behavior is for the compiler to signal that the finalize method is 
not visible to the aspect because its a protected method on Object.  This is 
the behavior that I observe for 1.1beta4.

Can you confirm that you're seeing it with the latest version of the compiler, 
and if so include the text of the stack trace and warning?

The compiler claims to be AspectJ Compiler 1.1beta4
Below is what I get when compiling and running the program:

robert@Knochenmehl:~/daten/text/publications/aspecttesting/code&gt; make NullPtr
CLASSPATH=.:/opt/java/junit3.8.1/junit.jar:/home/robert/programme/aspectj1.1b4/lib/aspectjrt.jar:/home/robert/programme/aspectj1.1b4/lib/aspectjtools.jar
/home/robert/programme/aspectj1.1b4/bin/ajc -Xlint -XnoInline
-warn:constructorName,packageDefaultMethod,deprecation,maskedCatchBlocks,unusedImports,syntheticAccess
 NullPtr.java
/home/robert/daten/text/publications/aspecttesting/code/NullPtr.java:0: Internal
compiler error
java.lang.NullPointerException
        at
org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.fromBinding(EclipseWorld.java:142)
        at
org.aspectj.ajdt.internal.compiler.lookup.EclipseWorld.makeResolvedMember(EclipseWorld.java:166)
        at
org.aspectj.ajdt.internal.compiler.lookup.PrivilegedHandler.getPrivilegedAccessMethod(PrivilegedHandler.java:44)
        at
org.aspectj.ajdt.internal.compiler.ast.AccessForInlineVisitor.endVisit(AccessForInlineVisitor.java:70)
        at
org.eclipse.jdt.internal.compiler.ast.MessageSend.traverse(MessageSend.java:319)
        at
org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:98)
        at
org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration.resolveStatements(AdviceDeclaration.java:153)
        at
org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:325)
        at
org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:922)
        at
org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration.resolve(AspectDeclaration.java:63)
        at
org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:954)
        at
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:235)
        at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:536)
        at org.aspectj.ajdt.internal.compiler.AjCompiler.process(AjCompiler.java:63)
        at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:340)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:232)
        at
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:171)
        at
org.aspectj.ajdt.internal.core.builder.AjBuildManager$BatchBuilder.run(AjBuildManager.java:612)
        at
org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:102)
        at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:54)
        at org.aspectj.tools.ajc.Main.run(Main.java:199)
        at org.aspectj.tools.ajc.Main.runMain(Main.java:138)
        at org.aspectj.tools.ajc.Main.main(Main.java:58)


!! no source information available !!
/home/robert/daten/text/publications/aspecttesting/code/NullPtr.java:16: The
method finalize() from the type java.lang.Object is not visible
o.finalize();               // error
  ^^^^^^^^
Exception thrown from AspectJ 1.1beta4

This might be logged as a bug already -- see the bug database at
  http://dev.eclipse.org (product: AspectJ, component: compiler)

Bugs for exceptions thrown have titles File:line from the top stack,
e.g., "SomeFile.java:243"

If you don't find the exception below in a bug, please add a new bug
To make the bug a priority, please include a test program
that can reproduce this exception.
null



1 fail|abort, 2 errors
make: *** [NullPtr] Fehler 255

fixed in current cvs tree, test case in bugs/Finalizer.java

thanks for confirming that this bug was found in 1.1beta4.  it is now fixed in 
the current cvs tree.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30027" />
    <CreationDate amount="2003-01-22 17:25:00 -0500" />
    <DupId amount="24798" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception in Table cursor when the table is empty.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="335" end="426" />
        <code>void resize() {
	TableItem item = table.getItem(row);
	setBounds(item.getBounds(column));
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="956" end="1180" />
        <code>void resize() {
        if (isDisposed() || !isVisible())
		return;

	if (0 &lt;= row &amp;&amp; row &lt; table.getItemCount()) {
            	TableItem item = table.getItem(row);
           	setBounds(item.getBounds(column));
        }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Check the tablew item count before calling getItem(). Set the row to last</Line>
          <Line>table item if row exceeds table item count.</Line>
          <Line>2. Bypass this resize call completely if the cursor is invisible.</Line>
          <Line>3. These two fixes can be combined.</Line>
          <Line>The resulting code of the resize() function can be like this:</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- Run the snippet in Bug #24798</Line>
          <Line>- Select an item</Line>
          <Line>- Press Delete to remove it</Line>
          <Line>- Resize the columns will cause an exception</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The Table Cursor throws exceptions in the resize() method when the underlying 
table is empty. It can happen when, for instance, column is resized in an empty 
table with cursor.

The code in the resize() (which is triggered from the resize listener) does not 
account for this boundary condition. 
[ TableCursor.java 1.8 ] 
line 445

void resize() {
	TableItem item = table.getItem(row);
	setBounds(item.getBounds(column));
}
when calling method table.getItem(), 
exception is thrown even if row is zero (the default)

Proposed solution:
There can be many modifications, depending on what the expected robustness of 
this component is. The two that come to mind are:
1. Check the tablew item count before calling getItem(). Set the row to last 
table item if row exceeds table item count.
2. Bypass this resize call completely if the cursor is invisible.
3. These two fixes can be combined. 
The resulting code of the resize() function can be like this:

void resize() {
        if (isDisposed() || !isVisible())
		return;

	if (0 &lt;= row &amp;&amp; row &lt; table.getItemCount()) {
            	TableItem item = table.getItem(row);
           	setBounds(item.getBounds(column));
        }
}
VI to investigate and advise.  How is it possible to get into this state?  Did 
the guy destroy all the table items without destroying the TableCursor?
The guy (this will be me) created a table without any items in it, and cursor 
for the table, in anticipation that items will be eventually added.
If the TableCursor is going to behave this way, what is the proper way to clear 
a Table containing a TableCursor and add new items?
Dispose the table cursor, dispose all the items, create the new items, create 
the new table cursor.
Rewriting method resize() doesn't solve problem. You should also rewrite method
paint(). But it is not the end. The Table widget has to set cursor 
unvisible when it has no items and set cursor visible when it has items.

&gt; ------- Additional Comment #1 From Steve Northover  2003-01-23 10:19 -------
&gt; VI to investigate and advise.  How is it possible to get into this state?  Did 
&gt; the guy destroy all the table items without destroying the TableCursor?

This problem occurs not only when you remove all items but when
you put cursor to the last item and then remove this item.


This is a duplicate of Bug#24798. The problem is not with resize.

- Run the snippet in Bug #24798
- Select an item
- Press Delete to remove it
- Resize the columns will cause an exception

The TableCursor was not disposed properly and did not unhook all its listeners. The exception occurs when the selected item is disposed before the cursor is disposed. If the cursor is disposed before the item is disposed then everything appears to work.

*** This bug has been marked as a duplicate of bug 24798 ***</WithStack>
    <WithOutStack>The Table Cursor throws exceptions in the resize() method when the underlying 
table is empty. It can happen when, for instance, column is resized in an empty 
table with cursor.

The code in the resize() (which is triggered from the resize listener) does not 
account for this boundary condition. 
[ TableCursor.java 1.8 ] 
line 445

void resize() {
	TableItem item = table.getItem(row);
	setBounds(item.getBounds(column));
}
when calling method table.getItem(), 
exception is thrown even if row is zero (the default)

Proposed solution:
There can be many modifications, depending on what the expected robustness of 
this component is. The two that come to mind are:
1. Check the tablew item count before calling getItem(). Set the row to last 
table item if row exceeds table item count.
2. Bypass this resize call completely if the cursor is invisible.
3. These two fixes can be combined. 
The resulting code of the resize() function can be like this:

void resize() {
        if (isDisposed() || !isVisible())
		return;

	if (0 &lt;= row &amp;&amp; row &lt; table.getItemCount()) {
            	TableItem item = table.getItem(row);
           	setBounds(item.getBounds(column));
        }
}
VI to investigate and advise.  How is it possible to get into this state?  Did 
the guy destroy all the table items without destroying the TableCursor?
The guy (this will be me) created a table without any items in it, and cursor 
for the table, in anticipation that items will be eventually added.
If the TableCursor is going to behave this way, what is the proper way to clear 
a Table containing a TableCursor and add new items?
Dispose the table cursor, dispose all the items, create the new items, create 
the new table cursor.
Rewriting method resize() doesn't solve problem. You should also rewrite method
paint(). But it is not the end. The Table widget has to set cursor 
unvisible when it has no items and set cursor visible when it has items.

&gt; ------- Additional Comment #1 From Steve Northover  2003-01-23 10:19 -------
&gt; VI to investigate and advise.  How is it possible to get into this state?  Did 
&gt; the guy destroy all the table items without destroying the TableCursor?

This problem occurs not only when you remove all items but when
you put cursor to the last item and then remove this item.


This is a duplicate of Bug#24798. The problem is not with resize.

- Run the snippet in Bug #24798
- Select an item
- Press Delete to remove it
- Resize the columns will cause an exception

The TableCursor was not disposed properly and did not unhook all its listeners. The exception occurs when the selected item is disposed before the cursor is disposed. If the cursor is disposed before the item is disposed then everything appears to work.

*** This bug has been marked as a duplicate of bug 24798 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30028" />
    <CreationDate amount="2003-01-22 17:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Java snippet navigate actions do not work with keybindings</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Open Declaration and Open Type Hierarchy do not work with F3 and F4.
These actions will need to have their action definition ids set and be 
registered with the key binding service for the correct action definitions.
Fixed in SnippetOpenHierarchyOnSelectionAction and 
SnippetOpenOnSelectionAction.

Please verify.
Verified. (I noticed there's no busy cursor, but the java editor does not have 
a busy cursor either - and in general, editors do not display busy cursors due 
to an SWT problem).</WithStack>
    <WithOutStack>Open Declaration and Open Type Hierarchy do not work with F3 and F4.
These actions will need to have their action definition ids set and be 
registered with the key binding service for the correct action definitions.
Fixed in SnippetOpenHierarchyOnSelectionAction and 
SnippetOpenOnSelectionAction.

Please verify.
Verified. (I noticed there's no busy cursor, but the java editor does not have 
a busy cursor either - and in general, editors do not display busy cursors due 
to an SWT problem).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30029" />
    <CreationDate amount="2003-01-22 17:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>Notification of failure for "global" actions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>We are inconsistent with how we notify the user about failure for our global 
actions (Add Breakpoint, Add Method Breakpoint etc). Some of the actions pop up 
an error dialog; some fail silently.

I think we should mimic JDT UI Open Declaration action (F3).  On failure an 
error message is displayed in the status line and a beep is issued.
As part of the rework for bug 29474 and bug 27311, this was right there :-)

Please verify Luc,.
Verified</WithStack>
    <WithOutStack>We are inconsistent with how we notify the user about failure for our global 
actions (Add Breakpoint, Add Method Breakpoint etc). Some of the actions pop up 
an error dialog; some fail silently.

I think we should mimic JDT UI Open Declaration action (F3).  On failure an 
error message is displayed in the status line and a beep is issued.
As part of the rework for bug 29474 and bug 27311, this was right there :-)

Please verify Luc,.
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30030" />
    <CreationDate amount="2003-01-22 18:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>DebugView menu can shrink when no active debug sessions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>A number of items on the DebugView popup menu can be removed when there are no 
active debug sessions.  This is in keeping with the general goal of making menus 
as small as possible and not showing menu items that don't make sense for the 
current context.  Copy Stack, all the Step actions, and the Resume, Suspend, 
etc. actions could all go away.  I think this amounts to adding/changing the 
'visibility' XML for these ViewerContributions.
Deferred
Consider for 3.0
This could be accomplished via contexts. When there are no active debug 
sessions, we can always turn off the "debugging" context.

In the short term, we already do this with some actions using the "visibility" 
XML attribute and a system property like the "org.eclipse.jdt.debug.ui.
debuggerActive" property.
Deferred
Closing.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>A number of items on the DebugView popup menu can be removed when there are no 
active debug sessions.  This is in keeping with the general goal of making menus 
as small as possible and not showing menu items that don't make sense for the 
current context.  Copy Stack, all the Step actions, and the Resume, Suspend, 
etc. actions could all go away.  I think this amounts to adding/changing the 
'visibility' XML for these ViewerContributions.
Deferred
Consider for 3.0
This could be accomplished via contexts. When there are no active debug 
sessions, we can always turn off the "debugging" context.

In the short term, we already do this with some actions using the "visibility" 
XML attribute and a system property like the "org.eclipse.jdt.debug.ui.
debuggerActive" property.
Deferred
Closing.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30031" />
    <CreationDate amount="2003-01-22 18:07:00 -0500" />
    <DupId amount="21988" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[MPE] Unable to restore editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437338565471">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.part.MultiPageEditorPart.getActiveEditor(MultiPageEditorPart.java:199)</Frame>
          <Frame depth="1">org.eclipse.ui.part.MultiPageSelectionProvider.getSelection(MultiPageSelectionProvider.java:85)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.AbstractSelectionService.partActivated(AbstractSelectionService.java:237)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.WWinPartService$1.partActivated(WWinPartService.java:23)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.WWinPartService.pageActivated(WWinPartService.java:146)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPartService.pageOpened(WWinPartService.java:162)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchWindow.firePageOpened(WorkbenchWindow.java:735)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1129)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1081)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.Workbench.access$9(Workbench.java:1050)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.Workbench$10.run(Workbench.java:968)</Frame>
          <Frame depth="11">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:852)</Frame>
          <Frame depth="12">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:920)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.init(Workbench.java:699)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1190)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="18">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="20">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="21">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 200301211004

Run the multipage editor example.
Create a *.mpe file in the navigator.
Delete the file.
Exit Eclipse and restart.

I get "unable to restore editor message".  At some point I also got this in the 
log (as a result of playing around with/deleting *.mpe files):

SESSION Jan 22, 2003 18:15:10.00 ----------------------------------------------
java.fullversion=J2RE 1.3.0 IBM build cn130-20010502 (JIT enabled: jitc)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -dev bin -plugins file:d:\eclipse-ws\ui-
ws\.metadata\.plugins\org.eclipse.pde.core\D__eclipse_runtime-
workspace\plugin_path.properties -data D:\eclipse\runtime-workspace -os win32 -
ws win32 -arch x86 -nl en_US -install file:D:/eclipse/
!ENTRY org.eclipse.ui.workbench 4 2 Jan 22, 2003 18:15:10.00
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.part.MultiPageEditorPart.getActiveEditor
(MultiPageEditorPart.java:199)
	at org.eclipse.ui.part.MultiPageSelectionProvider.getSelection
(MultiPageSelectionProvider.java:85)
	at org.eclipse.ui.internal.AbstractSelectionService.partActivated
(AbstractSelectionService.java:237)
	at org.eclipse.ui.internal.WWinPartService$1.partActivated
(WWinPartService.java:23)
	at org.eclipse.ui.internal.WWinPartService.pageActivated
(WWinPartService.java:146)
	at org.eclipse.ui.internal.WWinPartService.pageOpened
(WWinPartService.java:162)
	at org.eclipse.ui.internal.WorkbenchWindow.firePageOpened
(WorkbenchWindow.java:735)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState
(WorkbenchWindow.java:1129)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1081)
	at org.eclipse.ui.internal.Workbench.access$9(Workbench.java:1050)
	at org.eclipse.ui.internal.Workbench$10.run(Workbench.java:968)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:852)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState
(Workbench.java:920)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:699)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1190)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)


*** This bug has been marked as a duplicate of 21988 ***</WithStack>
    <WithOutStack>Build 200301211004

Run the multipage editor example.
Create a *.mpe file in the navigator.
Delete the file.
Exit Eclipse and restart.

I get "unable to restore editor message".  At some point I also got this in the 
log (as a result of playing around with/deleting *.mpe files):

SESSION Jan 22, 2003 18:15:10.00 ----------------------------------------------
java.fullversion=J2RE 1.3.0 IBM build cn130-20010502 (JIT enabled: jitc)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -dev bin -plugins file:d:\eclipse-ws\ui-
ws\.metadata\.plugins\org.eclipse.pde.core\D__eclipse_runtime-
workspace\plugin_path.properties -data D:\eclipse\runtime-workspace -os win32 -
ws win32 -arch x86 -nl en_US -install file:D:/eclipse/
!ENTRY org.eclipse.ui.workbench 4 2 Jan 22, 2003 18:15:10.00
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.ui.workbench".
!STACK 0



*** This bug has been marked as a duplicate of 21988 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30032" />
    <CreationDate amount="2003-01-22 18:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Compiling against an installed version of eclipse does not support links</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The new pde build mecanism allows to compile against an installed version of 
eclipse. 
This can be improved in handling the sites that are referenced into the links 
directory.
The implementation of this feature will avoid people to copy their features and 
plugins of the referenced site when they want to build against those.
Changing bug assignment to pde-build-inbox. (pde-core-inbox is obsolete)
This has been fixed in HEAD.</WithStack>
    <WithOutStack>The new pde build mecanism allows to compile against an installed version of 
eclipse. 
This can be improved in handling the sites that are referenced into the links 
directory.
The implementation of this feature will avoid people to copy their features and 
plugins of the referenced site when they want to build against those.
Changing bug assignment to pde-build-inbox. (pde-core-inbox is obsolete)
This has been fixed in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30033" />
    <CreationDate amount="2003-01-22 18:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Text selection is not drawn propely (it is a mess) on my laptop.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When I select text from left to right, the selection drawing is messed up big 
time. When I select the same text from right to left, all is well. Go figure. 
Please see the attached screen shots.

My config is http://www5.pc.ibm.com/us/products.nsf/$wwwPartNumLookup/_2652M3U
The only difference with the above is that I have 1GB RAM instead of 512MB.

My OS version is:
Microsoft Windows XP [Version 5.1.2600]

My Java version is:
java version "1.4.1_01"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.1_01-b01)
Java HotSpot(TM) Client VM (build 1.4.1_01-b01, mixed mode)
Created attachment 3091
A screen shot showing the bug.
Created attachment 3092
Microsoft System Information Version 7.0 exported text file.
My goodness, how awful.  What happens when you use a different font?  I haven't 
seen this reported before so it may be an XP graphics driver issue on your 
laptop.

Chrix to investigate and advise.
The problem is the same with the following fonts I just tried:

The "System Font": Tahoma Regular 8
Courrier Regular 10

Here is an interesting twist:
I reproduce the bug.
I bring another window to overlap eclipse (IE or a command prompt window).
I bring eclipse back to the front.
The text selection is drawn properly!

Of course if I select something else left-to-right, the problem re-appears.

Very odd.
Gary - is this still a problem with Eclipse 3.0? If so - please reopen
It is not a problem in 3.1.M1.</WithStack>
    <WithOutStack>When I select text from left to right, the selection drawing is messed up big 
time. When I select the same text from right to left, all is well. Go figure. 
Please see the attached screen shots.

My config is http://www5.pc.ibm.com/us/products.nsf/$wwwPartNumLookup/_2652M3U
The only difference with the above is that I have 1GB RAM instead of 512MB.

My OS version is:
Microsoft Windows XP [Version 5.1.2600]

My Java version is:
java version "1.4.1_01"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.1_01-b01)
Java HotSpot(TM) Client VM (build 1.4.1_01-b01, mixed mode)
Created attachment 3091
A screen shot showing the bug.
Created attachment 3092
Microsoft System Information Version 7.0 exported text file.
My goodness, how awful.  What happens when you use a different font?  I haven't 
seen this reported before so it may be an XP graphics driver issue on your 
laptop.

Chrix to investigate and advise.
The problem is the same with the following fonts I just tried:

The "System Font": Tahoma Regular 8
Courrier Regular 10

Here is an interesting twist:
I reproduce the bug.
I bring another window to overlap eclipse (IE or a command prompt window).
I bring eclipse back to the front.
The text selection is drawn properly!

Of course if I select something else left-to-right, the problem re-appears.

Very odd.
Gary - is this still a problem with Eclipse 3.0? If so - please reopen
It is not a problem in 3.1.M1.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30034" />
    <CreationDate amount="2003-01-22 19:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Tasks] Tasks view should support expandable message (like PDE Error Log)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="4">
      <Enumeration lines="14">
        <Lines>
          <Line>1) the task list should support a table tree view to display messages</Line>
          <Line>- messages can be expanded to reveal 'sub-messages'</Line>
          <Line>- sub-messages are 'indented' as in a standard tree view (the PDE's error</Line>
          <Line>log view doesn't seem to do this correctly)</Line>
          <Line />
          <Line>2) support to create 'nested' markers</Line>
          <Line>- the marker API's should allow 'child' markers to be added, removed from</Line>
          <Line>existing markers</Line>
          <Line />
          <Line>3) a task view option to present errors grouped by file</Line>
          <Line>- the top level markers in the task view correspond to each file containing</Line>
          <Line>an error</Line>
          <Line>- this top level marker can be expanded to reveal all of the markers</Line>
          <Line>associated with the file</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="34">
        <Lines>
          <Line>1) task view scalability / performance</Line>
          <Line />
          <Line>Currently we have a usability problem were project validation produces large</Line>
          <Line>numbers of error messages that clutter the task list</Line>
          <Line>and overwhelm the user.  If the messages were grouped 'by file' the task list</Line>
          <Line>would usually be 10 times smaller and much easier</Line>
          <Line>for the user to digest and navigate.  This is probably the same reasoning</Line>
          <Line>behind the PDE error log design.</Line>
          <Line />
          <Line>In WSAD we encountered significant performance problems during project</Line>
          <Line>validation when populating the task list with large numbers of messages.</Line>
          <Line>In order to work around this problem we implemented a validator error limit</Line>
          <Line>which continually causes user confusion.  The 'group by file' feature</Line>
          <Line>would eliminate our need for this clumsy workaround.</Line>
          <Line />
          <Line />
          <Line>2) grouping related errors</Line>
          <Line />
          <Line>Often we produce several errors that may be symptoms of the same problem.  For</Line>
          <Line>example we may produce 10 message (one for each line) where the name 'foo' is</Line>
          <Line>reference but not declared.  It would be helpful to create a single error</Line>
          <Line>message to desicribe that 'foo is not declared' which could be</Line>
          <Line>expanded to show a message for each line where this problem occurs.</Line>
          <Line />
          <Line />
          <Line>3) grouping to provide context</Line>
          <Line />
          <Line>In some cases, languages the allow the composition files in a a 'macro' like</Line>
          <Line>fashion (for example modular  DTD and  XML Schema).  Let's assume we have a</Line>
          <Line>file A that refers to file B which in turn refers to file C.  Often B and C are</Line>
          <Line>perfectly valid in isolation,  but when we validate file A,</Line>
          <Line>this introduces a new 'context' that causes errors when the parser encounters B</Line>
          <Line>and C.   In order to express these context sensitive error nicely, we could</Line>
          <Line>make use of grouping.  Here's an example of what I mean...</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- messages can be expanded to reveal 'sub-messages'</Line>
          <Line>- sub-messages are 'indented' as in a standard tree view (the PDE's error</Line>
          <Line>log view doesn't seem to do this correctly)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- the top level markers in the task view correspond to each file containing</Line>
          <Line>an error</Line>
          <Line>- this top level marker can be expanded to reveal all of the markers</Line>
          <Line>associated with the file</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>In the WSXX products, we have several problems related to task messages and 
their presentation in the tasks view.  These problems could be solved if 
nested, expandable error messages were supported, similar to the PDE's error 
log view.
                                                                                
           
Here's a list of requirements...
                                      
1) the task list should support a table tree view to display messages
    - messages can be expanded to reveal 'sub-messages'
    - sub-messages are 'indented' as in a standard tree view (the PDE's error 
log view doesn't seem to do this correctly)

2) support to create 'nested' markers
    - the marker API's should allow 'child' markers to be added, removed from 
existing markers

3) a task view option to present errors grouped by file    
    - the top level markers in the task view correspond to each file containing 
an error  
    - this top level marker can be expanded to reveal all of the markers 
associated with the file



This function would enable us to solve several problems related to scalability 
and ease of use.

Here's some justification for the above feature, and some examples of what we'd 
like to achieve.
                                  
1) task view scalability / performance

Currently we have a usability problem were project validation produces large 
numbers of error messages that clutter the task list
and overwhelm the user.  If the messages were grouped 'by file' the task list 
would usually be 10 times smaller and much easier
for the user to digest and navigate.  This is probably the same reasoning 
behind the PDE error log design.
 
In WSAD we encountered significant performance problems during project 
validation when populating the task list with large numbers of messages.
In order to work around this problem we implemented a validator error limit 
which continually causes user confusion.  The 'group by file' feature
would eliminate our need for this clumsy workaround.
   

2) grouping related errors

Often we produce several errors that may be symptoms of the same problem.  For 
example we may produce 10 message (one for each line) where the name 'foo' is 
reference but not declared.  It would be helpful to create a single error 
message to desicribe that 'foo is not declared' which could be
expanded to show a message for each line where this problem occurs.


3) grouping to provide context
                                       
In some cases, languages the allow the composition files in a a 'macro' like 
fashion (for example modular  DTD and  XML Schema).  Let's assume we have a 
file A that refers to file B which in turn refers to file C.  Often B and C are 
perfectly valid in isolation,  but when we validate file A,
this introduces a new 'context' that causes errors when the parser encounters B 
and C.   In order to express these context sensitive error nicely, we could 
make use of grouping.  Here's an example of what I mean...

           Description                             Resource  Location

    X     invalid syntax "foo-&gt;"                    A.dtd       12
    X     invalid character '#'                     A.dtd       12
[-] X     errors including "B.dtd" from "A.dtd"     A.dtd       20  
      X   undeclared element "V"                    B.dtd        4
      X   undeclared element "W"                    B.dtd        5
      X   undeclared element "X"                    B.dtd        6
   [-]X   errors including "C.dtd" from "B.dtd"     B.dtd       20
        X undeclared element "Y"                    C.dtd       15 
        X undelcated element "Z"                    C.dtd       16


If the tasks view as filtered to only show errors for the file "C.dtd", it 
would look something like this...


           Description                             Resource  Location

[-] X     errors including "B.dtd" from "A.dtd"     A.dtd       20  
   [-]X   errors including "C.dtd" from "B.dtd"     B.dtd       20
        X undeclared element "Y"                    C.dtd       15 
        X undelcated element "Z"                    C.dtd       16

This way we could immediatly see the errors in C.dtd and the context in which 
they occur.
Can someone consider this problem?  This feature is required to address several 
customer problems and PMRs that we've received.
There are currently no plans to work on this feature</WithStack>
    <WithOutStack>In the WSXX products, we have several problems related to task messages and 
their presentation in the tasks view.  These problems could be solved if 
nested, expandable error messages were supported, similar to the PDE's error 
log view.
                                                                                
           
Here's a list of requirements...
                                      
1) the task list should support a table tree view to display messages
    - messages can be expanded to reveal 'sub-messages'
    - sub-messages are 'indented' as in a standard tree view (the PDE's error 
log view doesn't seem to do this correctly)

2) support to create 'nested' markers
    - the marker API's should allow 'child' markers to be added, removed from 
existing markers

3) a task view option to present errors grouped by file    
    - the top level markers in the task view correspond to each file containing 
an error  
    - this top level marker can be expanded to reveal all of the markers 
associated with the file



This function would enable us to solve several problems related to scalability 
and ease of use.

Here's some justification for the above feature, and some examples of what we'd 
like to achieve.
                                  
1) task view scalability / performance

Currently we have a usability problem were project validation produces large 
numbers of error messages that clutter the task list
and overwhelm the user.  If the messages were grouped 'by file' the task list 
would usually be 10 times smaller and much easier
for the user to digest and navigate.  This is probably the same reasoning 
behind the PDE error log design.
 
In WSAD we encountered significant performance problems during project 
validation when populating the task list with large numbers of messages.
In order to work around this problem we implemented a validator error limit 
which continually causes user confusion.  The 'group by file' feature
would eliminate our need for this clumsy workaround.
   

2) grouping related errors

Often we produce several errors that may be symptoms of the same problem.  For 
example we may produce 10 message (one for each line) where the name 'foo' is 
reference but not declared.  It would be helpful to create a single error 
message to desicribe that 'foo is not declared' which could be
expanded to show a message for each line where this problem occurs.


3) grouping to provide context
                                       
In some cases, languages the allow the composition files in a a 'macro' like 
fashion (for example modular  DTD and  XML Schema).  Let's assume we have a 
file A that refers to file B which in turn refers to file C.  Often B and C are 
perfectly valid in isolation,  but when we validate file A,
this introduces a new 'context' that causes errors when the parser encounters B 
and C.   In order to express these context sensitive error nicely, we could 
make use of grouping.  Here's an example of what I mean...

           Description                             Resource  Location

    X     invalid syntax "foo-&gt;"                    A.dtd       12
    X     invalid character '#'                     A.dtd       12
[-] X     errors including "B.dtd" from "A.dtd"     A.dtd       20  
      X   undeclared element "V"                    B.dtd        4
      X   undeclared element "W"                    B.dtd        5
      X   undeclared element "X"                    B.dtd        6
   [-]X   errors including "C.dtd" from "B.dtd"     B.dtd       20
        X undeclared element "Y"                    C.dtd       15 
        X undelcated element "Z"                    C.dtd       16


If the tasks view as filtered to only show errors for the file "C.dtd", it 
would look something like this...


           Description                             Resource  Location

[-] X     errors including "B.dtd" from "A.dtd"     A.dtd       20  
   [-]X   errors including "C.dtd" from "B.dtd"     B.dtd       20
        X undeclared element "Y"                    C.dtd       15 
        X undelcated element "Z"                    C.dtd       16

This way we could immediatly see the errors in C.dtd and the context in which 
they occur.
Can someone consider this problem?  This feature is required to address several 
customer problems and PMRs that we've received.
There are currently no plans to work on this feature</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30035" />
    <CreationDate amount="2003-01-22 19:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>NPE running build file in external project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>As well, things do not work well when the project containing the script is 
outside of the workspace. NPEs and such.

See bug 29668 for a project to import. 

Place the project outside of the workspace
Import
Search for build files
Use the run button for the discovered build file for the external project.

Thread [main] (Suspended (exception NullPointerException))
	AntLaunchShortcut.findExistingLaunchConfigurations(IFile) line: 268
	AntLaunchShortcut.launch(IFile, String, String) line: 122
	RunTargetAction.run() line: 50
	RunTargetAction(Action).runWithEvent(Event) line: 804
	ActionContributionItem.handleWidgetSelection(Event) line: 422
	ActionContributionItem.handleWidgetEvent(Event) line: 374
	ActionContributionItem.access$0(ActionContributionItem, Event) line: 
368
	ActionContributionItem$ActionListener.handleEvent(Event) line: 69
	EventTable.sendEvent(Event) line: 77
	ToolItem(Widget).sendEvent(Event) line: 836
	Display.runDeferredEvents() line: 1692
	Display.readAndDispatch() line: 1410
	Workbench.runEventLoop() line: 1467
	Workbench.run(Object) line: 1450
	InternalBootLoader.run(String, URL, String, String[], Runnable) line: 
845
	BootLoader.run(String, URL, String, String[], Runnable) line: 462
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not 
available [native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39 [local 
variables unavailable]
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25 [local 
variables unavailable]
	Method.invoke(Object, Object[]) line: 324 [local variables unavailable]
	Main.basicRun(String[]) line: 247
	Main.run(String[]) line: 703
	Main.main(String[]) line: 539
Fixed in AntUtil.getFile(String fullPath).
This was doing a bunch of work to create a relative path which assumed the 
file was contained in the workspace.  This did not need to be done as with the 
full path can make use if IWorkspaceRoot.getFileForLocation(IPath).

Please verify.
Verified. (However, the second time I run the script it fails due to a locked 
jar - but it looks like the script is doing this intentionally).
Yes that is the bug part of bug 29668 :-)</WithStack>
    <WithOutStack>As well, things do not work well when the project containing the script is 
outside of the workspace. NPEs and such.

See bug 29668 for a project to import. 

Place the project outside of the workspace
Import
Search for build files
Use the run button for the discovered build file for the external project.

Thread [main] (Suspended (exception NullPointerException))
	AntLaunchShortcut.findExistingLaunchConfigurations(IFile) line: 268
	AntLaunchShortcut.launch(IFile, String, String) line: 122
	RunTargetAction.run() line: 50
	RunTargetAction(Action).runWithEvent(Event) line: 804
	ActionContributionItem.handleWidgetSelection(Event) line: 422
	ActionContributionItem.handleWidgetEvent(Event) line: 374
	ActionContributionItem.access$0(ActionContributionItem, Event) line: 
368
	ActionContributionItem$ActionListener.handleEvent(Event) line: 69
	EventTable.sendEvent(Event) line: 77
	ToolItem(Widget).sendEvent(Event) line: 836
	Display.runDeferredEvents() line: 1692
	Display.readAndDispatch() line: 1410
	Workbench.runEventLoop() line: 1467
	Workbench.run(Object) line: 1450
	InternalBootLoader.run(String, URL, String, String[], Runnable) line: 
845
	BootLoader.run(String, URL, String, String[], Runnable) line: 462
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not 
available [native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39 [local 
variables unavailable]
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25 [local 
variables unavailable]
	Method.invoke(Object, Object[]) line: 324 [local variables unavailable]
	Main.basicRun(String[]) line: 247
	Main.run(String[]) line: 703
	Main.main(String[]) line: 539
Fixed in AntUtil.getFile(String fullPath).
This was doing a bunch of work to create a relative path which assumed the 
file was contained in the workspace.  This did not need to be done as with the 
full path can make use if IWorkspaceRoot.getFileForLocation(IPath).

Please verify.
Verified. (However, the second time I run the script it fails due to a locked 
jar - but it looks like the script is doing this intentionally).
Yes that is the bug part of bug 29668 :-)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30036" />
    <CreationDate amount="2003-01-22 19:38:00 -0500" />
    <DupId amount="21904" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cannot CTRL-C Copy selection in the Class File Editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Arg, I cannot use CTRL-C to Copy the selection in the Class File Editor. If 
you can select, you should be able to copy the text, which makes coding long 
method names quicker.
Are you talking about a situation in which you don't have attached source?
Yes, no source code is available.


*** This bug has been marked as a duplicate of 21904 ***</WithStack>
    <WithOutStack>Arg, I cannot use CTRL-C to Copy the selection in the Class File Editor. If 
you can select, you should be able to copy the text, which makes coding long 
method names quicker.
Are you talking about a situation in which you don't have attached source?
Yes, no source code is available.


*** This bug has been marked as a duplicate of 21904 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30037" />
    <CreationDate amount="2003-01-22 20:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Use platform support for breakpoint persistence</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The platform now support selective persistence of markers (rather than 
persistence for a maker type). We should use this support, rather than deleting 
markers ourselves, at startup.
See bug 9267 for details on the platform support.
Fixed. Breakpoint#setPersisted now uses the new TRANSIENT attribute. We still 
have the old code to delete breakpoints at startup for workspace transistion 
(but the code will not be run once old markers are cleaned up).

Requires the latest "org.eclipse.core.resources" plug-in from HEAD. 
Please verify, Darin (S).
Couldn't get/setPersisted only use IMarker.TRANSIENT. Why does it need to set 
the PERSISTED attribute any more? In the distant future we could get rid of 
this constant.
I maintain the persisted attribute for backwards compatibility - i.e. no 
breaking API chnages.
I understand..someone may be relying on the fact that the persisted attribute 
exists.
Verified.</WithStack>
    <WithOutStack>The platform now support selective persistence of markers (rather than 
persistence for a maker type). We should use this support, rather than deleting 
markers ourselves, at startup.
See bug 9267 for details on the platform support.
Fixed. Breakpoint#setPersisted now uses the new TRANSIENT attribute. We still 
have the old code to delete breakpoints at startup for workspace transistion 
(but the code will not be run once old markers are cleaned up).

Requires the latest "org.eclipse.core.resources" plug-in from HEAD. 
Please verify, Darin (S).
Couldn't get/setPersisted only use IMarker.TRANSIENT. Why does it need to set 
the PERSISTED attribute any more? In the distant future we could get rid of 
this constant.
I maintain the persisted attribute for backwards compatibility - i.e. no 
breaking API chnages.
I understand..someone may be relying on the fact that the persisted attribute 
exists.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30038" />
    <CreationDate amount="2003-01-22 22:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[typing] Character deletion has unexpected results after auto-wrap in javadoc</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="150" end="288" />
        <code>public class Test {
	/**
	 * Some method with java doc that goes on for a long, long, long, long,
	 * long, long time.
	 */
	void m() {}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="20">
        <Lines>
          <Line>- position the cursor before the first "long" on the second line.</Line>
          <Line>- press space</Line>
          <Line>- the line changes to: "\t *  long,  long time"</Line>
          <Line>- notice the extra space before the second "long"</Line>
          <Line>- press backspace</Line>
          <Line>- press delete</Line>
          <Line>- it deletes the space previously entered, but leaves the extra one</Line>
          <Line>- the line is now: "\t * long,  long time"</Line>
          <Line>- press delete 5 times</Line>
          <Line>- on the 5th, it jumps the cursor to the start of the line, and adds 2 extra</Line>
          <Line>spaces between "long" and "time"</Line>
          <Line>- the line is now: "\t *  long   time"</Line>
          <Line>- move the cursor back where it was (after "* ")</Line>
          <Line>- press delete again</Line>
          <Line>- it again jumps to the start of the line and adds another space</Line>
          <Line>between "long" and "time"</Line>
          <Line>I encountered this in a real coding situation where the symptoms were much</Line>
          <Line>worse.  Trying to either delete or type new characters in wrapped lines kept</Line>
          <Line>adding extra spaces, sometimes in two places.  I had to eventually turn off</Line>
          <Line>the auto-wrap feature.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>build I20030115

- with auto-wrap on in javadoc, enter the following code by typing, allowing 
auto-wrap to happen between the two lines of javadoc:

public class Test {
	/**
	 * Some method with java doc that goes on for a long, long, long, long,
	 * long, long time.
	 */
	void m() {}
}

- position the cursor before the first "long" on the second line.
- press space
- the line changes to: "\t *  long,  long time" 
- notice the extra space before the second "long"
- press backspace
- press delete
- it deletes the space previously entered, but leaves the extra one
- the line is now: "\t * long,  long time"
- press delete 5 times
- on the 5th, it jumps the cursor to the start of the line, and adds 2 extra 
spaces between "long" and "time"
- the line is now: "\t *  long   time"
- move the cursor back where it was (after "* ")
- press delete again
- it again jumps to the start of the line and adds another space 
between "long" and "time"
I encountered this in a real coding situation where the symptoms were much 
worse.  Trying to either delete or type new characters in wrapped lines kept 
adding extra spaces, sometimes in two places.  I had to eventually turn off 
the auto-wrap feature.

adapted pseudo keyword
javadoc auto-wrap has been disabled a long time ago... closing as... I guess
won't fix since we are not going to fix this for 2.1.</WithStack>
    <WithOutStack>build I20030115

- with auto-wrap on in javadoc, enter the following code by typing, allowing 
auto-wrap to happen between the two lines of javadoc:

public class Test {
	/**
	 * Some method with java doc that goes on for a long, long, long, long,
	 * long, long time.
	 */
	void m() {}
}

- position the cursor before the first "long" on the second line.
- press space
- the line changes to: "\t *  long,  long time" 
- notice the extra space before the second "long"
- press backspace
- press delete
- it deletes the space previously entered, but leaves the extra one
- the line is now: "\t * long,  long time"
- press delete 5 times
- on the 5th, it jumps the cursor to the start of the line, and adds 2 extra 
spaces between "long" and "time"
- the line is now: "\t *  long   time"
- move the cursor back where it was (after "* ")
- press delete again
- it again jumps to the start of the line and adds another space 
between "long" and "time"
I encountered this in a real coding situation where the symptoms were much 
worse.  Trying to either delete or type new characters in wrapped lines kept 
adding extra spaces, sometimes in two places.  I had to eventually turn off 
the auto-wrap feature.

adapted pseudo keyword
javadoc auto-wrap has been disabled a long time ago... closing as... I guess
won't fix since we are not going to fix this for 2.1.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30039" />
    <CreationDate amount="2003-01-22 23:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Accessability] view toolbars</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Would it be possible to make the buttons in a toolbar accessible?

Something along the lines press shift+alt+t (or any other key combination to
focus on the toolbar of the highlighted view) and then &lt;-, -&gt;, Enter to
select/toggle/press a toolbar button?
In most views you can back tab (shift+tab) to the title bar widgets.
If the view has focus one shift tab will get you to the close button/view menu 
a second shift tab will get you to the tool items. You can select between tool 
items (and close button/view menu) using left/right arrow.

The problem with this is that selected/depressed tool items don't change their 
appearance when you have focus. Unselected tool items are raised, like on a 
mouse hover. I haven't tried this on Linux or Mac.

Another problem is that this does not work for all views.
Knut has it right - you can get to any toolbar using Ctrl-Tab and then use the 
arrow keys to navigate - you should get this behaviour by default. I am going 
to mark this as WORKSFORME - if there is something else you need please feel 
free to reopen.
OK</WithStack>
    <WithOutStack>Would it be possible to make the buttons in a toolbar accessible?

Something along the lines press shift+alt+t (or any other key combination to
focus on the toolbar of the highlighted view) and then &lt;-, -&gt;, Enter to
select/toggle/press a toolbar button?
In most views you can back tab (shift+tab) to the title bar widgets.
If the view has focus one shift tab will get you to the close button/view menu 
a second shift tab will get you to the tool items. You can select between tool 
items (and close button/view menu) using left/right arrow.

The problem with this is that selected/depressed tool items don't change their 
appearance when you have focus. Unselected tool items are raised, like on a 
mouse hover. I haven't tried this on Linux or Mac.

Another problem is that this does not work for all views.
Knut has it right - you can get to any toolbar using Ctrl-Tab and then use the 
arrow keys to navigate - you should get this behaviour by default. I am going 
to mark this as WORKSFORME - if there is something else you need please feel 
free to reopen.
OK</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30040" />
    <CreationDate amount="2003-01-23 01:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Can't start the Eclipse on red hat linux 7.2 with sun jdk1.4</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>While starting Eclipse 2.1 -- build I20030121 on Red Hat Linux7.2 and sun JDK 
1.4 its showing popup error while starting then hangs.Can you plese look into 
it whats wroung with it.
   
     JVM terminated. Exit code=6 
     /usr/java/jsdk1.4.1_01/bin/java 
     -cp /usr/eclipse/startup.jar org.eclipse.core.luancher.Main
     -os linux
     -ws motif
     -arch x86
     -showsplash /usr/eclipse/eclipse -shosplash -600

regards,
 venkatesh
What command are you using to start eclipse?  Is there any information in 
your .metadata/.log file?
We need more information to investigate this problem.  Please reopen this bug 
if you can provide steps for us to reproduce.
Got the same symptom, on Mandrake 9.1, with Eclipse 2.1.1 for Motif, using JRE
1.4.1_01 or JDK 1.3.1_09.
Command :
/usr/lib/eclipse/eclipse -vm /usr/java/jdk1.3.1_09/bin/java -debug

The splash screen gets displayed, and stays displayed for around 5 minutes. java
CPU usage is more than 80%. Than a windows displays the following error message :

JVM terminated. Exit code=9
/usr/java/jdk1.3.1_09/bin/java
-cp /usr/lib/eclipse/eclipse/startup.jar org.eclipse.core.launcher.Main
-os Linux
-ws motif
-arch x86
-showsplash /usr/lib/eclipse/eclipse -showsplash 600
-debug</WithStack>
    <WithOutStack>While starting Eclipse 2.1 -- build I20030121 on Red Hat Linux7.2 and sun JDK 
1.4 its showing popup error while starting then hangs.Can you plese look into 
it whats wroung with it.
   
     JVM terminated. Exit code=6 
     /usr/java/jsdk1.4.1_01/bin/java 
     -cp /usr/eclipse/startup.jar org.eclipse.core.luancher.Main
     -os linux
     -ws motif
     -arch x86
     -showsplash /usr/eclipse/eclipse -shosplash -600

regards,
 venkatesh
What command are you using to start eclipse?  Is there any information in 
your .metadata/.log file?
We need more information to investigate this problem.  Please reopen this bug 
if you can provide steps for us to reproduce.
Got the same symptom, on Mandrake 9.1, with Eclipse 2.1.1 for Motif, using JRE
1.4.1_01 or JDK 1.3.1_09.
Command :
/usr/lib/eclipse/eclipse -vm /usr/java/jdk1.3.1_09/bin/java -debug

The splash screen gets displayed, and stays displayed for around 5 minutes. java
CPU usage is more than 80%. Than a windows displays the following error message :

JVM terminated. Exit code=9
/usr/java/jdk1.3.1_09/bin/java
-cp /usr/lib/eclipse/eclipse/startup.jar org.eclipse.core.launcher.Main
-os Linux
-ws motif
-arch x86
-showsplash /usr/lib/eclipse/eclipse -showsplash 600
-debug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30041" />
    <CreationDate amount="2003-01-23 02:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>IMemento ,IDialogSettings and IPreferenceStore duplication</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>From a data structure view both IMemento and IDialogSettings are the same
so why this duplication , why not remove IDialogSettings and just keep IMemento 
as it is more general
Why IPreference store is not stored in xml format as IMemento and 
IDialogSettings , xml format gives more flexiblilty by the ability that and 
element have children..
why not removing IPreferneceStore and use IMemento also
IDialogSettings is a more simple type than an IMemento and has different API. 
The current design is driven by a desire to not overload classes.

It would be possible to merge them but we would have the issue of backwards 
compatibility so this is not currently something we can do.</WithStack>
    <WithOutStack>From a data structure view both IMemento and IDialogSettings are the same
so why this duplication , why not remove IDialogSettings and just keep IMemento 
as it is more general
Why IPreference store is not stored in xml format as IMemento and 
IDialogSettings , xml format gives more flexiblilty by the ability that and 
element have children..
why not removing IPreferneceStore and use IMemento also
IDialogSettings is a more simple type than an IMemento and has different API. 
The current design is driven by a desire to not overload classes.

It would be possible to merge them but we would have the issue of backwards 
compatibility so this is not currently something we can do.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30042" />
    <CreationDate amount="2003-01-23 02:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[View Mgmt] why save the view state when eclipse workbench and not when view closes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functioncall">
        <location start="2882" end="2929" />
        <code>saveState(IMemento m, boolean workspaceCloses);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3370" end="3406" />
        <code>IMemento getStateFor(String viewID);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3411" end="3467" />
        <code>IMemento getStateFor(String viewID, String secondaryID);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="9">
        <Lines>
          <Line>- view A and A' are different instances of the same view (same primary id and</Line>
          <Line>null secondary id for both)</Line>
          <Line>- it has a setting S which defaults to V0</Line>
          <Line>- in view A in window 1, user changes setting S to value V1</Line>
          <Line>- in view A' in window 2, user changes setting S to value V2</Line>
          <Line>- user closes A'</Line>
          <Line>- user closes A</Line>
          <Line>- user reopens A in window 1</Line>
          <Line>- what should the value for S be in A?  Is it V0, V1 or V2?</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- user reopens A' in window 2</Line>
          <Line>- what should the value for S be in A'?  Is it V0, V1 or V2?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>i think it's a good idea to make a method that enables a view to save its state 
when it's closed , not only when the workbench closes
i tried to put the code that saves in dispose() method in the view , but the 
problems that the swt components of the view is already disposed when dispose() 
method in view is called , so i can't save their states.
i saved them in an IDialogSettings.

i think it's a good idea that you make a method in view
boolean willClose(IMemento memento)which is called before a view is closed
and the user can control whether the view can be closed or not , and can store 
the settings in that memento , and that memento can be just like 
IDialogSettings that it's not saved till the workbench closes , but when the 
view is opened again , that memento comes in its init()method
and that memento will be the same memento that's passed to saveState()
and it's up to the user to see what settings will be saved when the view closes 
and what settings will be saved when the workbench closes
What kind of state are you saving?
Just as a workaround if you need, you can add a listener to the view's control.
My view looks like the resources navigator
i want to save the selection , expantion states , the scrol bar states from the 
tree which can't be retrieved if the tree is disposed 
also i want to save the selected filters and sorters and working set

do you mean by the view control the tree in the view ??
The tree.
In case of the Navigator we save the information like selection, expansion etc 
when the workbench is shotdown and some information like sort order we save as 
they change in the dialog settings.

Supose you have 2 windows with your view opened in both; then the user opens a 
couple more windows. Then goes back to the first two and close the views. And 
30 minutes later he opens the view again. Do you expect that the context that 
you saved is still important. If so, are you going to save some info about the 
window as well so you know which one you want to restore?

But what about my porposal about the
boolean willClose(IMemento memento) method that i described earlier
will you invistigate it , or it's not acceptable
There are no plans for the UI team to work on this defect until higher 
priority items are addressed. 
I believe encountered the same problem.
the scenario is :
my perspective contains a view by default.
when the application is closed, the view saveState(IMemento) is called.
when the view is closed, its saveState is not called, so when the user restore
the view (still in the same session), the state of the view is lost.
I am not sure its a bug, since if the user closed the view, he might no longer
be interested in its content, but I find it annoying.
I think a solution could be to call saveState of the view, maybe with some extra
boolean flag indicating if the view is closed or the entire workspace:
saveState(IMemento m, boolean workspaceCloses);
this will allow a view to choose to save state only when the workspace is closing.

also, the willClose idea is not bad.
about the subject of multiple instances of the same view:
I believe the state should be stored per id + secondary id, so a new instance of
the view will not automatically inherit previous instances state, but perhaps a
mechanism to obtain the state of the last instance of this view should be
provided, something like:
IMemento getStateFor(String viewID);
and
IMemento getStateFor(String viewID, String secondaryID);

How do you think the following case should work:
- view A and A' are different instances of the same view (same primary id and
null secondary id for both)
- it has a setting S which defaults to V0
- in view A in window 1, user changes setting S to value V1
- in view A' in window 2, user changes setting S to value V2
- user closes A'
- user closes A
- user reopens A in window 1
- what should the value for S be in A?  Is it V0, V1 or V2?

V0: corresponds to the current behaviour, where the setting is not saved
V1: corresponds to saving the settings of the last closed instance
V2: corresponds to saving the setting when it was last modified

Then ask:
- user reopens A' in window 2
- what should the value for S be in A'?  Is it V0, V1 or V2?

It gets more interesting when the views have multiple settings that are changed
at different times.

There are currently no plans to work on this feature
Hi,


We have exactly the same problem !

Why is the ViewPart.saveState method not called when the view part is closed ?

Is there any workaround to get this method called when the view part is closed ?

Thank you for your help ...


Xav</WithStack>
    <WithOutStack>i think it's a good idea to make a method that enables a view to save its state 
when it's closed , not only when the workbench closes
i tried to put the code that saves in dispose() method in the view , but the 
problems that the swt components of the view is already disposed when dispose() 
method in view is called , so i can't save their states.
i saved them in an IDialogSettings.

i think it's a good idea that you make a method in view
boolean willClose(IMemento memento)which is called before a view is closed
and the user can control whether the view can be closed or not , and can store 
the settings in that memento , and that memento can be just like 
IDialogSettings that it's not saved till the workbench closes , but when the 
view is opened again , that memento comes in its init()method
and that memento will be the same memento that's passed to saveState()
and it's up to the user to see what settings will be saved when the view closes 
and what settings will be saved when the workbench closes
What kind of state are you saving?
Just as a workaround if you need, you can add a listener to the view's control.
My view looks like the resources navigator
i want to save the selection , expantion states , the scrol bar states from the 
tree which can't be retrieved if the tree is disposed 
also i want to save the selected filters and sorters and working set

do you mean by the view control the tree in the view ??
The tree.
In case of the Navigator we save the information like selection, expansion etc 
when the workbench is shotdown and some information like sort order we save as 
they change in the dialog settings.

Supose you have 2 windows with your view opened in both; then the user opens a 
couple more windows. Then goes back to the first two and close the views. And 
30 minutes later he opens the view again. Do you expect that the context that 
you saved is still important. If so, are you going to save some info about the 
window as well so you know which one you want to restore?

But what about my porposal about the
boolean willClose(IMemento memento) method that i described earlier
will you invistigate it , or it's not acceptable
There are no plans for the UI team to work on this defect until higher 
priority items are addressed. 
I believe encountered the same problem.
the scenario is :
my perspective contains a view by default.
when the application is closed, the view saveState(IMemento) is called.
when the view is closed, its saveState is not called, so when the user restore
the view (still in the same session), the state of the view is lost.
I am not sure its a bug, since if the user closed the view, he might no longer
be interested in its content, but I find it annoying.
I think a solution could be to call saveState of the view, maybe with some extra
boolean flag indicating if the view is closed or the entire workspace:
saveState(IMemento m, boolean workspaceCloses);
this will allow a view to choose to save state only when the workspace is closing.

also, the willClose idea is not bad.
about the subject of multiple instances of the same view:
I believe the state should be stored per id + secondary id, so a new instance of
the view will not automatically inherit previous instances state, but perhaps a
mechanism to obtain the state of the last instance of this view should be
provided, something like:
IMemento getStateFor(String viewID);
and
IMemento getStateFor(String viewID, String secondaryID);

How do you think the following case should work:
- view A and A' are different instances of the same view (same primary id and
null secondary id for both)
- it has a setting S which defaults to V0
- in view A in window 1, user changes setting S to value V1
- in view A' in window 2, user changes setting S to value V2
- user closes A'
- user closes A
- user reopens A in window 1
- what should the value for S be in A?  Is it V0, V1 or V2?

V0: corresponds to the current behaviour, where the setting is not saved
V1: corresponds to saving the settings of the last closed instance
V2: corresponds to saving the setting when it was last modified

Then ask:
- user reopens A' in window 2
- what should the value for S be in A'?  Is it V0, V1 or V2?

It gets more interesting when the views have multiple settings that are changed
at different times.

There are currently no plans to work on this feature
Hi,


We have exactly the same problem !

Why is the ViewPart.saveState method not called when the view part is closed ?

Is there any workaround to get this method called when the view part is closed ?

Thank you for your help ...


Xav</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30043" />
    <CreationDate amount="2003-01-23 02:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[windows] 2 windows with open dialogs problem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>if i have 2 windows opened in eclipse , and in the first window i have an open 
dialog (ex:new project dialog) , then i switch to the second window, when i try 
to click anywhere in the second window , the first window appears and the 
second disappears
Is the problem reproduceable?  Are there any entries in the .metadata/.log 
file?
This is because dialogs are SYSTEM_MODAL - the dialog will always get focus as 
long as it is up.</WithStack>
    <WithOutStack>if i have 2 windows opened in eclipse , and in the first window i have an open 
dialog (ex:new project dialog) , then i switch to the second window, when i try 
to click anywhere in the second window , the first window appears and the 
second disappears
Is the problem reproduceable?  Are there any entries in the .metadata/.log 
file?
This is because dialogs are SYSTEM_MODAL - the dialog will always get focus as 
long as it is up.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30044" />
    <CreationDate amount="2003-01-23 02:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[GlobalActions] Copy-paste of 2 (or more) projects fails.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Select 2 projects in workspase. Select "Copy" in context menu. Paste. Only copy 
of the first project appears.
strangely similar to bug 11042
Which view are you in?
Code changed to allow more than one project to be copied and pasted at a time.</WithStack>
    <WithOutStack>Select 2 projects in workspase. Select "Copy" in context menu. Paste. Only copy 
of the first project appears.
strangely similar to bug 11042
Which view are you in?
Code changed to allow more than one project to be copied and pasted at a time.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30045" />
    <CreationDate amount="2003-01-23 02:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P4" />
    <bug_severity amount="trivial" />
    <Summery>Invoke Update from Setup Framework</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We'd like to invoke Eclipse from our setup routines to update itself from a 
fixed (shipped) zip/folder.

Is there a possibility to invoke the Eclipse update manager unattended (as a 
special Eclipse application) from command line?
You can create an eclipse application and run the eclipse platform: See the
application extension point.

Close as no answer</WithStack>
    <WithOutStack>We'd like to invoke Eclipse from our setup routines to update itself from a 
fixed (shipped) zip/folder.

Is there a possibility to invoke the Eclipse update manager unattended (as a 
special Eclipse application) from command line?
You can create an eclipse application and run the eclipse platform: See the
application extension point.

Close as no answer</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30046" />
    <CreationDate amount="2003-01-23 02:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="blocker" />
    <Summery>Stackoverflow when I tried to switch target platform</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Started my old workspace</Line>
          <Line>2. Window -&gt; Preferences -&gt; Plug-in Development -&gt; Target Platform</Line>
          <Line>waited 2 minutes</Line>
          <Line>==&gt; Stackoverflow (see attached .log)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build I20030122

Wanted to switch to newest build
1. Started my old workspace
2. Window -&gt; Preferences -&gt; Plug-in Development -&gt; Target Platform
waited 2 minutes
==&gt; Stackoverflow (see attached .log)

Note: it worked the second time - can I trust it and continue?
Created attachment 3094
,log
Same happened in my other workspace as soon as I opened site.xml.
Can I use this integration build?


Changing severity to blocker. I have to switch back to I20030115:
Stackoverflow when I try to import external plug-ins. Does not work on second
try either.

Nothing in the .log is coming from PDE.  They all seem to be debug exceptions.
Stupid me. I attached the .log of the wrong workspace.
I will take a while to get the .log because I have to reinstall the drop and
start my buildmeister workspace with it.



Attached the correct stack overflow.

Created attachment 3103
.log
Fixed.
Infinite loop occurred only when the workspace contained feature projects.
&gt;Infinite loop occurred only when the workspace contained feature projects.
That's the case in all buildmeister workspaces ;-)

*** Bug 30081 has been marked as a duplicate of this bug. ***
*** Bug 30349 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Build I20030122

Wanted to switch to newest build
1. Started my old workspace
2. Window -&gt; Preferences -&gt; Plug-in Development -&gt; Target Platform
waited 2 minutes
==&gt; Stackoverflow (see attached .log)

Note: it worked the second time - can I trust it and continue?
Created attachment 3094
,log
Same happened in my other workspace as soon as I opened site.xml.
Can I use this integration build?


Changing severity to blocker. I have to switch back to I20030115:
Stackoverflow when I try to import external plug-ins. Does not work on second
try either.

Nothing in the .log is coming from PDE.  They all seem to be debug exceptions.
Stupid me. I attached the .log of the wrong workspace.
I will take a while to get the .log because I have to reinstall the drop and
start my buildmeister workspace with it.



Attached the correct stack overflow.

Created attachment 3103
.log
Fixed.
Infinite loop occurred only when the workspace contained feature projects.
&gt;Infinite loop occurred only when the workspace contained feature projects.
That's the case in all buildmeister workspaces ;-)

*** Bug 30081 has been marked as a duplicate of this bug. ***
*** Bug 30349 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30047" />
    <CreationDate amount="2003-01-23 03:15:00 -0500" />
    <DupId amount="9295" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ip address not refreshed when changed for CVS server</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I couldn't find this bug. Perhaps this says more about my searching capabilities
then about the bugreports but anyway...

In the cvs tab I selected a server with name PAUW. This name is resolved to
a certain ip address. When PAUW is reassigned a new ip address
eclipse doesn't notice that and tries to connect to the old ip address. 

Eclipse has to be restarted to solve this... I think there must be a better
solution to this problem than this workaround


*** This bug has been marked as a duplicate of 9295 ***</WithStack>
    <WithOutStack>I couldn't find this bug. Perhaps this says more about my searching capabilities
then about the bugreports but anyway...

In the cvs tab I selected a server with name PAUW. This name is resolved to
a certain ip address. When PAUW is reassigned a new ip address
eclipse doesn't notice that and tries to connect to the old ip address. 

Eclipse has to be restarted to solve this... I think there must be a better
solution to this problem than this workaround


*** This bug has been marked as a duplicate of 9295 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30048" />
    <CreationDate amount="2003-01-23 03:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Repo View] CVS repository view : branches</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437338565491">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.ui.tags.TagRefreshButtonArea$3.run(TagRefreshButtonArea.java:128)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.ui.tags.TagSelectionDialog$4.run(TagSelectionDialog.java:280)</Frame>
          <Frame depth="2">org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437338565491">
        <Exception>org.eclipse.team.internal.ccvs.core.connection.CVSServerException</Exception>
        <Reason>The server reported an error: No such file or directory</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.core.client.Request.executeRequest(Request.java:173)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.core.client.Command.doExecute(Command.java:404)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.client.Command$1.run(Command.java:323)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.resources.RemoteFolder.run(RemoteFolder.java:457)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.client.Command.execute(Command.java:335)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.client.Command.execute(Command.java:785)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.core.resources.RemoteFile.getLogEntries(RemoteFile.java:269)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.ui.repo.RepositoryRoot.fetchTags(RepositoryRoot.java:435)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ccvs.ui.repo.RepositoryRoot.fetchTagsUsingAutoRefreshFiles(RepositoryRoot.java:408)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.ui.repo.RepositoryRoot.refreshDefinedTags(RepositoryRoot.java:341)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ccvs.ui.repo.RepositoryManager.refreshDefinedTags(RepositoryManager.java:226)</Frame>
          <Frame depth="11">org.eclipse.team.internal.ccvs.ui.tags.SingleFolderTagSource.refresh(SingleFolderTagSource.java:63)</Frame>
          <Frame depth="12">org.eclipse.team.internal.ccvs.ui.tags.TagRefreshButtonArea$3.run(TagRefreshButtonArea.java:118)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="singlecomment">
        <location start="5278" end="5309" />
        <code>//////////////////////////////</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="5691" end="5729" />
        <code>///////////////////////////////////</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hello,
I would suggest an improvement to the CVS repository view. I think that the 
branches sub-list should be identic to the the version sub-list, ie presenting 
the different brnaches by module. Actually we need to make branches onto 
modules like we need to make versions on modules.
we should have the following :
Branches
--Module1
------branch1
------branch2
------xxx
--Module2
------branch3
Versions
--Module1
------Version1
--Module2
------Version2

regards
Xavier
It's interesting -- I would actually rather have the opposite, which is for the
Versions tree have version name as the first layer rather than the module
(basically making it function like the branches tree).  It seems like this might
be worthy of a configuration option.  Regardless, though, I think they should be
mutually consistent unless there's a good reason to do otherwise that I just
can't think of at the moment.
Hi Mike,
Thanks for taken into account my proposal :-) 
We can even have the following :
CVSRepository
--Module1
----Main
-------Current
-------Version1
----Branch1
-------Current
-------Version1
-------Version2
----Branch2
-------Current
--Module2
----Main
-------Current
----Branch1
-------Current
-------Version1
-------Version2

Or also (if a graphical view is provided)
CVSRepository
--Module1
   |_Main
      |_Current
      |_version1 (snapshot)
         |_branch2
             |___Current
             |___Version2.1 (snapshot)
   |_Branch1
      |_ Current
--Module2
....
Best regards
Xavier

There is currently no plan to address this item.
Guys, could you tell me what I've to do to refresh tags?

I'm working with Eclipse Platform 3.1 and my Eclipse java project has two modules inside it (CVS Modules).

When I change something and switch to sychronize perspective I'm able to commit everything fine. Although, when I want to replace some module (working copy at JAVA perspective) with "Replace With-&gt;Another Branch or Version..", I can see just only one created release below "Versions". When I try to refresh tags it crashes and don't give any problems' details.

Is something to configure in CVS related to Refresh tags??

Despite this problem I can see the releases i've created at CVS Repository Exploring perspective. But from it, choosing some release and trying to make a "checkout into" to my project and indicating a module (directory inside the project) nothing happens.

Thanks for any help!

(In reply to comment #2)
&gt; Hi Mike,
&gt; Thanks for taken into account my proposal :-) 
&gt; We can even have the following :
&gt; CVSRepository
&gt; --Module1
&gt; ----Main
&gt; -------Current
&gt; -------Version1
&gt; ----Branch1
&gt; -------Current
&gt; -------Version1
&gt; -------Version2
&gt; ----Branch2
&gt; -------Current
&gt; --Module2
&gt; ----Main
&gt; -------Current
&gt; ----Branch1
&gt; -------Current
&gt; -------Version1
&gt; -------Version2
&gt; 
&gt; Or also (if a graphical view is provided)
&gt; CVSRepository
&gt; --Module1
&gt;    |_Main
&gt;       |_Current
&gt;       |_version1 (snapshot)
&gt;          |_branch2
&gt;              |___Current
&gt;              |___Version2.1 (snapshot)
&gt;    |_Branch1
&gt;       |_ Current
&gt; --Module2
&gt; ....
&gt; Best regards
&gt; Xavier
&gt; (In reply to comment #2)
&gt; Hi Mike,
&gt; Thanks for taken into account my proposal :-) 
&gt; We can even have the following :
&gt; CVSRepository
&gt; --Module1
&gt; ----Main
&gt; -------Current
&gt; -------Version1
&gt; ----Branch1
&gt; -------Current
&gt; -------Version1
&gt; -------Version2
&gt; ----Branch2
&gt; -------Current
&gt; --Module2
&gt; ----Main
&gt; -------Current
&gt; ----Branch1
&gt; -------Current
&gt; -------Version1
&gt; -------Version2
&gt; 
&gt; Or also (if a graphical view is provided)
&gt; CVSRepository
&gt; --Module1
&gt;    |_Main
&gt;       |_Current
&gt;       |_version1 (snapshot)
&gt;          |_branch2
&gt;              |___Current
&gt;              |___Version2.1 (snapshot)
&gt;    |_Branch1
&gt;       |_ Current
&gt; --Module2
&gt; ....
&gt; Best regards
&gt; Xavier
&gt; 


There should be a Configure Tags button that allows you to search for tags on the files in your project.
Thks for your reply, but Eclipse doesn't show the tags (releases) i've created in the CVS repository.
Through the operation "Replace With-&gt;Another Branch or version.." in the JAVA Perspective it shows a node called "Versions" and bellow it is shown just the first tags (releases) i've created in the repcvs. When i hit the button "Refresh tags" it crashes and doesn't show the details button. Through "Configure tags.." option occurs the same problem.

I've created the following structure in $CVSROOT/modules file (i'm working with modules in CVS to address component development versioning stuff):

ALIAS (MODULE)                COMPONENT DIRECTORY
a                             a-dir
b                             b-dir
component-dev  -a             a-dir b-dir ...many others that will be dev.
myproject                     &amp;component-dev

When developers make a checkout of "myproject" is created a Eclipse project which has a-dir and b-dir renamed with their aliases. In JAVA Perspective i'm able to make the operation "Replace With-&gt;Latest from HEAD" and "Replace With-&gt;Another Branch or version.." *JUST* for some releases because Eclipse doesn't show all releases created.
In "CVS Repository Exploring perspective" it shows more releases than the other, but NOT ALL created releases! So it seems to be a bug!?

Hear is the Eclipse log file:
//////////////////////////////
!SESSION 2005-11-24 12:07:45.425 -----------------------------------------------
eclipse.buildId=M20050929-0840
java.version=1.5.0_05
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=pt_BR
Command-line arguments:  -os linux -ws gtk -arch x86

!ENTRY org.eclipse.team.cvs.core 4 0 2005-11-24 12:18:45.619
!MESSAGE Error refreshing tags
!STACK 0
java.lang.reflect.InvocationTargetException
        at org.eclipse.team.internal.ccvs.ui.tags.TagRefreshButtonArea$3.run(TagRefreshButtonArea.java:128)
        at org.eclipse.team.internal.ccvs.ui.tags.TagSelectionDialog$4.run(TagSelectionDialog.java:280)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:76)
Caused by: org.eclipse.team.internal.ccvs.core.connection.CVSServerException: The server reported an error: No such file or directory
        at org.eclipse.team.internal.ccvs.core.client.Request.executeRequest(Request.java:173)
        at org.eclipse.team.internal.ccvs.core.client.Command.doExecute(Command.java:404)
        at org.eclipse.team.internal.ccvs.core.client.Command$1.run(Command.java:323)
        at org.eclipse.team.internal.ccvs.core.resources.RemoteFolder.run(RemoteFolder.java:457)
        at org.eclipse.team.internal.ccvs.core.client.Command.execute(Command.java:335)
        at org.eclipse.team.internal.ccvs.core.client.Command.execute(Command.java:785)
        at org.eclipse.team.internal.ccvs.core.resources.RemoteFile.getLogEntries(RemoteFile.java:269)
        at org.eclipse.team.internal.ccvs.ui.repo.RepositoryRoot.fetchTags(RepositoryRoot.java:435)
        at org.eclipse.team.internal.ccvs.ui.repo.RepositoryRoot.fetchTagsUsingAutoRefreshFiles(RepositoryRoot.java:408)
        at org.eclipse.team.internal.ccvs.ui.repo.RepositoryRoot.refreshDefinedTags(RepositoryRoot.java:341)
        at org.eclipse.team.internal.ccvs.ui.repo.RepositoryManager.refreshDefinedTags(RepositoryManager.java:226)
        at org.eclipse.team.internal.ccvs.ui.tags.SingleFolderTagSource.refresh(SingleFolderTagSource.java:63)
        at org.eclipse.team.internal.ccvs.ui.tags.TagRefreshButtonArea$3.run(TagRefreshButtonArea.java:118)
///////////////////////////////////

Can you help me? I've made tests with Eclipse platform 3.1 and Eclipse SDK 3.1.1

Despite the ROOT CAUSE told in the stack trace, i've checked in the CVS repository and the directory is there.

Why "The server reported an error: No such file or directory" if i'm asking to Refresh tags, not choosing or telling someone that doesn't exists in fact!?

Thks, Denis Clayton

(In reply to comment #5)
&gt; There should be a Configure Tags button that allows you to search for tags on
&gt; the files in your project.
&gt; 


When I make a module check out from my CVS repository choosing the option "Check Out As..." and selecting "Check out as a project configured using the New Project Wizard", this wizard has a "Refresh tags" button which action doesn't generate any exception and so i'm able to see ALL created tags. =) Eclipse platform 3.1.0.

But i still need that the option "Replace with-&gt;Another Branch or Version" from Java perspective works when i hit the "Refresh tags" button, because in my java project i've many modules and sometimes is needed change just one release of a module, not make an entire check out.

Thks again!




(In reply to comment #6)
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Hello,
I would suggest an improvement to the CVS repository view. I think that the 
branches sub-list should be identic to the the version sub-list, ie presenting 
the different brnaches by module. Actually we need to make branches onto 
modules like we need to make versions on modules.
we should have the following :
Branches
--Module1
------branch1
------branch2
------xxx
--Module2
------branch3
Versions
--Module1
------Version1
--Module2
------Version2

regards
Xavier
It's interesting -- I would actually rather have the opposite, which is for the
Versions tree have version name as the first layer rather than the module
(basically making it function like the branches tree).  It seems like this might
be worthy of a configuration option.  Regardless, though, I think they should be
mutually consistent unless there's a good reason to do otherwise that I just
can't think of at the moment.
Hi Mike,
Thanks for taken into account my proposal :-) 
We can even have the following :
CVSRepository
--Module1
----Main
-------Current
-------Version1
----Branch1
-------Current
-------Version1
-------Version2
----Branch2
-------Current
--Module2
----Main
-------Current
----Branch1
-------Current
-------Version1
-------Version2

Or also (if a graphical view is provided)
CVSRepository
--Module1
   |_Main
      |_Current
      |_version1 (snapshot)
         |_branch2
             |___Current
             |___Version2.1 (snapshot)
   |_Branch1
      |_ Current
--Module2
....
Best regards
Xavier

There is currently no plan to address this item.
Guys, could you tell me what I've to do to refresh tags?

I'm working with Eclipse Platform 3.1 and my Eclipse java project has two modules inside it (CVS Modules).

When I change something and switch to sychronize perspective I'm able to commit everything fine. Although, when I want to replace some module (working copy at JAVA perspective) with "Replace With-&gt;Another Branch or Version..", I can see just only one created release below "Versions". When I try to refresh tags it crashes and don't give any problems' details.

Is something to configure in CVS related to Refresh tags??

Despite this problem I can see the releases i've created at CVS Repository Exploring perspective. But from it, choosing some release and trying to make a "checkout into" to my project and indicating a module (directory inside the project) nothing happens.

Thanks for any help!

(In reply to comment #2)
&gt; Hi Mike,
&gt; Thanks for taken into account my proposal :-) 
&gt; We can even have the following :
&gt; CVSRepository
&gt; --Module1
&gt; ----Main
&gt; -------Current
&gt; -------Version1
&gt; ----Branch1
&gt; -------Current
&gt; -------Version1
&gt; -------Version2
&gt; ----Branch2
&gt; -------Current
&gt; --Module2
&gt; ----Main
&gt; -------Current
&gt; ----Branch1
&gt; -------Current
&gt; -------Version1
&gt; -------Version2
&gt; 
&gt; Or also (if a graphical view is provided)
&gt; CVSRepository
&gt; --Module1
&gt;    |_Main
&gt;       |_Current
&gt;       |_version1 (snapshot)
&gt;          |_branch2
&gt;              |___Current
&gt;              |___Version2.1 (snapshot)
&gt;    |_Branch1
&gt;       |_ Current
&gt; --Module2
&gt; ....
&gt; Best regards
&gt; Xavier
&gt; (In reply to comment #2)
&gt; Hi Mike,
&gt; Thanks for taken into account my proposal :-) 
&gt; We can even have the following :
&gt; CVSRepository
&gt; --Module1
&gt; ----Main
&gt; -------Current
&gt; -------Version1
&gt; ----Branch1
&gt; -------Current
&gt; -------Version1
&gt; -------Version2
&gt; ----Branch2
&gt; -------Current
&gt; --Module2
&gt; ----Main
&gt; -------Current
&gt; ----Branch1
&gt; -------Current
&gt; -------Version1
&gt; -------Version2
&gt; 
&gt; Or also (if a graphical view is provided)
&gt; CVSRepository
&gt; --Module1
&gt;    |_Main
&gt;       |_Current
&gt;       |_version1 (snapshot)
&gt;          |_branch2
&gt;              |___Current
&gt;              |___Version2.1 (snapshot)
&gt;    |_Branch1
&gt;       |_ Current
&gt; --Module2
&gt; ....
&gt; Best regards
&gt; Xavier
&gt; 


There should be a Configure Tags button that allows you to search for tags on the files in your project.
Thks for your reply, but Eclipse doesn't show the tags (releases) i've created in the CVS repository.
Through the operation "Replace With-&gt;Another Branch or version.." in the JAVA Perspective it shows a node called "Versions" and bellow it is shown just the first tags (releases) i've created in the repcvs. When i hit the button "Refresh tags" it crashes and doesn't show the details button. Through "Configure tags.." option occurs the same problem.

I've created the following structure in $CVSROOT/modules file (i'm working with modules in CVS to address component development versioning stuff):

ALIAS (MODULE)                COMPONENT DIRECTORY
a                             a-dir
b                             b-dir
component-dev  -a             a-dir b-dir ...many others that will be dev.
myproject                     &amp;component-dev

When developers make a checkout of "myproject" is created a Eclipse project which has a-dir and b-dir renamed with their aliases. In JAVA Perspective i'm able to make the operation "Replace With-&gt;Latest from HEAD" and "Replace With-&gt;Another Branch or version.." *JUST* for some releases because Eclipse doesn't show all releases created.
In "CVS Repository Exploring perspective" it shows more releases than the other, but NOT ALL created releases! So it seems to be a bug!?

Hear is the Eclipse log file:
//////////////////////////////
!SESSION 2005-11-24 12:07:45.425 -----------------------------------------------
eclipse.buildId=M20050929-0840
java.version=1.5.0_05
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=pt_BR
Command-line arguments:  -os linux -ws gtk -arch x86

!ENTRY org.eclipse.team.cvs.core 4 0 2005-11-24 12:18:45.619
!MESSAGE Error refreshing tags
!STACK 0


///////////////////////////////////

Can you help me? I've made tests with Eclipse platform 3.1 and Eclipse SDK 3.1.1

Despite the ROOT CAUSE told in the stack trace, i've checked in the CVS repository and the directory is there.

Why "The server reported an error: No such file or directory" if i'm asking to Refresh tags, not choosing or telling someone that doesn't exists in fact!?

Thks, Denis Clayton

(In reply to comment #5)
&gt; There should be a Configure Tags button that allows you to search for tags on
&gt; the files in your project.
&gt; 


When I make a module check out from my CVS repository choosing the option "Check Out As..." and selecting "Check out as a project configured using the New Project Wizard", this wizard has a "Refresh tags" button which action doesn't generate any exception and so i'm able to see ALL created tags. =) Eclipse platform 3.1.0.

But i still need that the option "Replace with-&gt;Another Branch or Version" from Java perspective works when i hit the "Refresh tags" button, because in my java project i've many modules and sometimes is needed change just one release of a module, not make an entire check out.

Thks again!




(In reply to comment #6)
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30049" />
    <CreationDate amount="2003-01-23 03:26:00 -0500" />
    <DupId amount="14867" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Automatic refresh</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hello,
I've encountered the following pb ; when i update a file outside the eclipse 
workbench (for instance Word document), it is not automatically refresehed into 
the eclipse workbench. I think that mode should be rendered available in the 
preferences dialog box. It is very useful, especially when we use the teamCVS 
feature.
regards
Xavier


*** This bug has been marked as a duplicate of 14867 ***</WithStack>
    <WithOutStack>Hello,
I've encountered the following pb ; when i update a file outside the eclipse 
workbench (for instance Word document), it is not automatically refresehed into 
the eclipse workbench. I think that mode should be rendered available in the 
preferences dialog box. It is very useful, especially when we use the teamCVS 
feature.
regards
Xavier


*** This bug has been marked as a duplicate of 14867 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30050" />
    <CreationDate amount="2003-01-23 03:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Comparing two files/directories in the navigator view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hello,
I would suggest the following improvement ; when we select for instance two 
files/directories into two different projects for comparing (in the case when 
we use the TeaMCVS feature), the compare item sub-menu should only propose 
the "each other" menu item. and not the other two meni items which have no 
meaning in this case.
regards
Xavier
Unfortunately this is difficult to do.  First off, object contributions (ie. 
menus) are assigned on an object type basis (e.g. IResource).  While there are 
different ways of filtering the visibility of these, the filtering rules do not 
include the type of filter you are suggesting.  This is all a consequence of 
the menus and their filtering being declarative in the plugin.xml, which limits 
the set of things you 'talk about'.  This doesn't include "Are these two 
reasources in the same project?".

Enablement gets to actually run code, thus we can't hide them for this case, 
but we can disable them as we do currently.</WithStack>
    <WithOutStack>Hello,
I would suggest the following improvement ; when we select for instance two 
files/directories into two different projects for comparing (in the case when 
we use the TeaMCVS feature), the compare item sub-menu should only propose 
the "each other" menu item. and not the other two meni items which have no 
meaning in this case.
regards
Xavier
Unfortunately this is difficult to do.  First off, object contributions (ie. 
menus) are assigned on an object type basis (e.g. IResource).  While there are 
different ways of filtering the visibility of these, the filtering rules do not 
include the type of filter you are suggesting.  This is all a consequence of 
the menus and their filtering being declarative in the plugin.xml, which limits 
the set of things you 'talk about'.  This doesn't include "Are these two 
reasources in the same project?".

Enablement gets to actually run code, thus we can't hide them for this case, 
but we can disable them as we do currently.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30051" />
    <CreationDate amount="2003-01-23 03:31:00 -0500" />
    <DupId amount="21817" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add compare two directories/files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I'd like to take advantage of the compare in Eclipse to compare 
directories/files on disk which are not part of any project.

The Microsoft Visual Studio IDE comes with a windiff standalone utility
that does this. This utility is pretty crude, but quite useful. In addition to 
having this capability builtin to Eclipse, I'm curious if it might be possible 
to create a standalone compare app that took advantage of the Eclipse stuff.

Øyvind
Yes, agree would be useful.
However, its fairly easy to import external folder into workspce or even
link project to external folder. So a workaround exists.

*** This bug has been marked as a duplicate of 21817 ***</WithStack>
    <WithOutStack>I'd like to take advantage of the compare in Eclipse to compare 
directories/files on disk which are not part of any project.

The Microsoft Visual Studio IDE comes with a windiff standalone utility
that does this. This utility is pretty crude, but quite useful. In addition to 
having this capability builtin to Eclipse, I'm curious if it might be possible 
to create a standalone compare app that took advantage of the Eclipse stuff.

Øyvind
Yes, agree would be useful.
However, its fairly easy to import external folder into workspce or even
link project to external folder. So a workaround exists.

*** This bug has been marked as a duplicate of 21817 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30052" />
    <CreationDate amount="2003-01-23 03:38:00 -0500" />
    <DupId amount="29130" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>The text editing "I" cursor doesn't return</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>After I press Ctrl and click one of the methods (Ctrl turns it into a link), 
the cursor never returns to the standard "I" - instead it becomes an "arrow" 
pointer.


*** This bug has been marked as a duplicate of 29130 ***</WithStack>
    <WithOutStack>After I press Ctrl and click one of the methods (Ctrl turns it into a link), 
the cursor never returns to the standard "I" - instead it becomes an "arrow" 
pointer.


*** This bug has been marked as a duplicate of 29130 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30053" />
    <CreationDate amount="2003-01-23 03:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Viewers] TreeViewer is not documented to be subclassed, but jdt violates that</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>TreeViewer was documented as :
This class is not intended to be subclassed outside the viewer framework. 

but the jdt violated that in class
org.eclipse.jdt.internal.ui.viewsupport.ProblemTreeViewer that extends 
TreeViewer
so i see that TreeViewer must be documented as it can be subclassed
"This class is not intended to be subclassed outside the viewer framework." 
means that, while it's possible to subclass it, we can't guarantee that changes 
to the superclass will be backwards compatible, so the subclass may be broken 
without warning.  JDT has accepted that risk in this case.</WithStack>
    <WithOutStack>TreeViewer was documented as :
This class is not intended to be subclassed outside the viewer framework. 

but the jdt violated that in class
org.eclipse.jdt.internal.ui.viewsupport.ProblemTreeViewer that extends 
TreeViewer
so i see that TreeViewer must be documented as it can be subclassed
"This class is not intended to be subclassed outside the viewer framework." 
means that, while it's possible to subclass it, we can't guarantee that changes 
to the superclass will be backwards compatible, so the subclass may be broken 
without warning.  JDT has accepted that risk in this case.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30054" />
    <CreationDate amount="2003-01-23 03:41:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[CVS UI] Effects of Keyword mode change on other users</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>CVS Server: CVS 1.11.2

When the binary/ascii property of a file is changed from -kb to -kkv,
this change is not visible in the workbench of other users.
In the cvsroot the change is done (rlog filename.v).

If the property of the file is changed from -kkv to binary it works.

It seems that the workbench stores the binary/ascii property of the files
and it don't updates them, when the change from -kb to -kkv occurs.
This is a limitation of CVS. We should make it appearant that all other users 
will need to check out the project from scratch if file types are changed. I'm 
changing the title from "- Server -kkv Mode does not effect checked out Files".
I message is now shown to the user explaining the affect on other developers</WithStack>
    <WithOutStack>CVS Server: CVS 1.11.2

When the binary/ascii property of a file is changed from -kb to -kkv,
this change is not visible in the workbench of other users.
In the cvsroot the change is done (rlog filename.v).

If the property of the file is changed from -kkv to binary it works.

It seems that the workbench stores the binary/ascii property of the files
and it don't updates them, when the change from -kb to -kkv occurs.
This is a limitation of CVS. We should make it appearant that all other users 
will need to check out the project from scratch if file types are changed. I'm 
changing the title from "- Server -kkv Mode does not effect checked out Files".
I message is now shown to the user explaining the affect on other developers</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30055" />
    <CreationDate amount="2003-01-23 03:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P1" />
    <bug_severity amount="blocker" />
    <Summery>DBCS: font rendering quality issue on motif</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Driver: M4, I20030122
Java : IBM Java 1.3.1 SR-3
Platform : RedHat 8.0 ja_JP.eucjp locale
Truetype font : RICHO TrueType font bundled in Japanese Application CD of RedHat
8.0 Professional retail package

I've been looking into font quality issue and found the RICHO truetype font is
acceptable quality for Japanese.
I could use the font by changing at Preferences - Workbench - Fonts menu,
however some string were not changed by the preference such as menu of IDE, view
title, so on. I'd like to know how to change these font.
Created attachment 3095
workbench screen capture

installed NL fragment eclipse-nls-SDK-2.0.x.zip so that workbench can display
Japanese string.
At menu "Search", and "Run" in Japanese are displayed with poor quality.
Welcome page, and all of tile of views as well.
Confirmed on RedHat 8.0 - SWT gets mixed-fixed-regualr 12 as the system default
where clearly the nicer font Fuse-san sees is used in all other windows.

What is interesting is when I open a font selection dialog (you can see it in
the Fonts preference page) there is no font called Richo in there.

Fuse-san do you see the font you think we should use in the font selection
dialog and if so could you tell us the character set, font and size please?
SSQ to get the bottom of this.  SWT does not and should not be overriding the 
default font values for the operating system.

Eclipse could consider providing a file that sets the font using the .Xdefaults 
mechanism as described by:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/faq.html#motiffontsandcolors


I'm trying .Xdefaults configuration refering the SWT FAQ. However failing to 
show up the Richo truetype font.
I will send detail font information to Tod for reproducing.
Here is the suggested .xDefaults file from Fuse-san

Eclipse*spacing:0 
Eclipse*XmForm.background:#e8e7e3 
Eclipse*XmList.background:#e8e7e3 
Eclipse*XmTextField.background:#e8e7e3 
Eclipse*background:#d6d3ce 
Eclipse*fontList:\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso8859-1,\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso10646-1,\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0201.1976-0,\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1983-0,\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1990-0   
Tod, I could not launch the eclipse with the .Xdefault file.
I have just tried using the .xDefaults with a regular system font with no luck.
I will attach the file here.
Created attachment 3133
x defaults with Eclipse set to use symbols.
GG, is the FAQ on the SWT page wrong?  GG please get to the bottom of this.
The FAQ is correct.  I was able to make Tod's .Xdefaults work by changing the 
font line to:

Eclipse*fontList:-urw-standard symbols l-medium-r-normal--0-0-0-0-p-0-adobe-
fontspecific

So the remaining issue is why specifying Ricoh as the font did not work.  Will 
try this next.

Fuse-san, I don't have the Ricoh font installed here, but I think that this will
fix your problem.  Can you please try changing your .Xdefaults to the following,
and follow up if it helps or not:

Eclipse*spacing:0 
Eclipse*XmForm.background:#e8e7e3 
Eclipse*XmList.background:#e8e7e3 
Eclipse*XmTextField.background:#e8e7e3 
Eclipse*background:#d6d3ce 
Eclipse*fontList:\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso8859-1;\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso10646-1;\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0201.1976-0;\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1983-0;\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1990-0:

Following .Xdefaults can change the font successfully.

Eclipse*spacing:0 
Eclipse*XmForm.background:#e8e7e3 
Eclipse*XmList.background:#e8e7e3 
Eclipse*XmTextField.background:#e8e7e3 
Eclipse*background:#d6d3ce 
Eclipse*fontList:\ 
-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso8859-1;\ 
-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso10646-1;\ 
-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0201.1976-0;\ 
-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1983-0;\ 
-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1990-0:

reopening with RC3a. I got following error at terminal and font was not changed.

 ./eclipse -vm /opt/IBMJava2-131/jre/bin/javaw
Warning: Missing charsets in String to FontSet conversion
Warning: Cannot convert string
"-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso8859-1,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso10646-1,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0201.1976-0,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1983-0,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1990-0"
to type FontSet
Warning: Missing charsets in String to FontSet conversion
Warning: Cannot convert string
"-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso8859-1,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso10646-1,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0201.1976-0,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1983-0,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1990-0"
to type FontSet
I've found that RICOH font installation was damaged. I guess that Chinese font 
installation broke the RICOH font. closing this OR.
closing. verified with GM.</WithStack>
    <WithOutStack>Driver: M4, I20030122
Java : IBM Java 1.3.1 SR-3
Platform : RedHat 8.0 ja_JP.eucjp locale
Truetype font : RICHO TrueType font bundled in Japanese Application CD of RedHat
8.0 Professional retail package

I've been looking into font quality issue and found the RICHO truetype font is
acceptable quality for Japanese.
I could use the font by changing at Preferences - Workbench - Fonts menu,
however some string were not changed by the preference such as menu of IDE, view
title, so on. I'd like to know how to change these font.
Created attachment 3095
workbench screen capture

installed NL fragment eclipse-nls-SDK-2.0.x.zip so that workbench can display
Japanese string.
At menu "Search", and "Run" in Japanese are displayed with poor quality.
Welcome page, and all of tile of views as well.
Confirmed on RedHat 8.0 - SWT gets mixed-fixed-regualr 12 as the system default
where clearly the nicer font Fuse-san sees is used in all other windows.

What is interesting is when I open a font selection dialog (you can see it in
the Fonts preference page) there is no font called Richo in there.

Fuse-san do you see the font you think we should use in the font selection
dialog and if so could you tell us the character set, font and size please?
SSQ to get the bottom of this.  SWT does not and should not be overriding the 
default font values for the operating system.

Eclipse could consider providing a file that sets the font using the .Xdefaults 
mechanism as described by:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/faq.html#motiffontsandcolors


I'm trying .Xdefaults configuration refering the SWT FAQ. However failing to 
show up the Richo truetype font.
I will send detail font information to Tod for reproducing.
Here is the suggested .xDefaults file from Fuse-san

Eclipse*spacing:0 
Eclipse*XmForm.background:#e8e7e3 
Eclipse*XmList.background:#e8e7e3 
Eclipse*XmTextField.background:#e8e7e3 
Eclipse*background:#d6d3ce 
Eclipse*fontList:\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso8859-1,\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso10646-1,\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0201.1976-0,\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1983-0,\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1990-0   
Tod, I could not launch the eclipse with the .Xdefault file.
I have just tried using the .xDefaults with a regular system font with no luck.
I will attach the file here.
Created attachment 3133
x defaults with Eclipse set to use symbols.
GG, is the FAQ on the SWT page wrong?  GG please get to the bottom of this.
The FAQ is correct.  I was able to make Tod's .Xdefaults work by changing the 
font line to:

Eclipse*fontList:-urw-standard symbols l-medium-r-normal--0-0-0-0-p-0-adobe-
fontspecific

So the remaining issue is why specifying Ricoh as the font did not work.  Will 
try this next.

Fuse-san, I don't have the Ricoh font installed here, but I think that this will
fix your problem.  Can you please try changing your .Xdefaults to the following,
and follow up if it helps or not:

Eclipse*spacing:0 
Eclipse*XmForm.background:#e8e7e3 
Eclipse*XmList.background:#e8e7e3 
Eclipse*XmTextField.background:#e8e7e3 
Eclipse*background:#d6d3ce 
Eclipse*fontList:\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso8859-1;\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso10646-1;\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0201.1976-0;\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1983-0;\ 
-Ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1990-0:

Following .Xdefaults can change the font successfully.

Eclipse*spacing:0 
Eclipse*XmForm.background:#e8e7e3 
Eclipse*XmList.background:#e8e7e3 
Eclipse*XmTextField.background:#e8e7e3 
Eclipse*background:#d6d3ce 
Eclipse*fontList:\ 
-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso8859-1;\ 
-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso10646-1;\ 
-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0201.1976-0;\ 
-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1983-0;\ 
-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1990-0:

reopening with RC3a. I got following error at terminal and font was not changed.

 ./eclipse -vm /opt/IBMJava2-131/jre/bin/javaw
Warning: Missing charsets in String to FontSet conversion
Warning: Cannot convert string
"-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso8859-1,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso10646-1,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0201.1976-0,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1983-0,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1990-0"
to type FontSet
Warning: Missing charsets in String to FontSet conversion
Warning: Cannot convert string
"-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso8859-1,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-iso10646-1,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0201.1976-0,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1983-0,-ricoh-HGMinchoL-medium-r-normal--0-0-0-0-p-0-jisx0208.1990-0"
to type FontSet
I've found that RICOH font installation was damaged. I guess that Chinese font 
installation broke the RICOH font. closing this OR.
closing. verified with GM.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30056" />
    <CreationDate amount="2003-01-23 03:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Merging with CVS</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hello,
I find the semantic of the merging feature not very clear and useful as it. I 
think that the mergin menu item should be to choose the branch in which we want 
to merge the selection and then performing this opartion...
regards
Xavier
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>Hello,
I find the semantic of the merging feature not very clear and useful as it. I 
think that the mergin menu item should be to choose the branch in which we want 
to merge the selection and then performing this opartion...
regards
Xavier
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30057" />
    <CreationDate amount="2003-01-23 03:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Navigator] NewWizardAction is instantiated in MainActionGroup of ResourceNavigator but never used</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="116" end="197" />
        <code>protected void makeActions() {
...
newWizardAction = new NewWizardAction();
...
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>NewWizardAction is instantiated in 
org.eclipse.ui.views.navigator.MainActionGroup in makeActions() but never used

protected void makeActions() {
...
newWizardAction = new NewWizardAction();
...
}
is there's a point of doing that???
No, I don't think so. The NewWizardAction is already added as a global action 
by the WorkbenchActionBuilder.
Thanks for pointing this out.</WithStack>
    <WithOutStack>NewWizardAction is instantiated in 
org.eclipse.ui.views.navigator.MainActionGroup in makeActions() but never used

protected void makeActions() {
...
newWizardAction = new NewWizardAction();
...
}
is there's a point of doing that???
No, I don't think so. The NewWizardAction is already added as a global action 
by the WorkbenchActionBuilder.
Thanks for pointing this out.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30058" />
    <CreationDate amount="2003-01-23 03:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Comparing with a branch/version</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hello,
It could be very useful to clarify the menu item in the result view of a 
comparison between one selected folder and a selected branch or view.
For instance, if in the current folder there is a file which is not inthe 
selected branch/version, the comparing view displays the tag [deletion]. It is 
not clear. We could have for instance [deleted in branch X].
In the same order, the menu item in the same view [copy from right to left] 
don't indicate clearly what is done. It could be better to display [copy from 
branch X to loal workspace] or something like that. It is important to avaid 
ambiguity.
regards
Xavier
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>Hello,
It could be very useful to clarify the menu item in the result view of a 
comparison between one selected folder and a selected branch or view.
For instance, if in the current folder there is a file which is not inthe 
selected branch/version, the comparing view displays the tag [deletion]. It is 
not clear. We could have for instance [deleted in branch X].
In the same order, the menu item in the same view [copy from right to left] 
don't indicate clearly what is done. It could be better to display [copy from 
branch X to loal workspace] or something like that. It is important to avaid 
ambiguity.
regards
Xavier
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30059" />
    <CreationDate amount="2003-01-23 04:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>share project feature</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hello,
I would suggest the following improvement ; in the case where we share a 
project (team-&gt;share project), it could be very useful after choosing the CVS 
repository to have in a combo box the list of all available modules in the 
selected repository, isntead of having to type it.
regards
Xavier
*** Bug 31988 has been marked as a duplicate of this bug. ***
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>Hello,
I would suggest the following improvement ; in the case where we share a 
project (team-&gt;share project), it could be very useful after choosing the CVS 
repository to have in a combo box the list of all available modules in the 
selected repository, isntead of having to type it.
regards
Xavier
*** Bug 31988 has been marked as a duplicate of this bug. ***
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30060" />
    <CreationDate amount="2003-01-23 04:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Auto implemet interface</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="234" end="292" />
        <code>public MyClass extends Superclass implements MyInterface {</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>1. you write the "implements" code:</Line>
          <Line />
          <Line />
          <Line>...</Line>
          <Line />
          <Line>2. you click in the line where "implements" is written, or even better, you</Line>
          <Line>click on the interface that is to be implemented ("MyInterface"), so you can</Line>
          <Line>call this feature separately for each interface.</Line>
          <Line />
          <Line>3. right click and select (e.g. ) "Source &gt; Generate interface method bodies".</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Whenever a interface is implemented, you have to write all the code for this 
implementation for the class to compile cleanly. This can be quite tedious. I 
would like to see something like this:

1. you write the "implements" code:

public MyClass extends Superclass implements MyInterface {
...

2. you click in the line where "implements" is written, or even better, you 
click on the interface that is to be implemented ("MyInterface"), so you can 
call this feature separately for each interface.

3. right click and select (e.g. ) "Source &gt; Generate interface method bodies".

This will insert all the methods of this interface with an empty method body.
Now, that would be cool. :-)
This is there (at least for 95%). Add your interface and go to Source-
&gt;Override/Implement methods.</WithStack>
    <WithOutStack>Whenever a interface is implemented, you have to write all the code for this 
implementation for the class to compile cleanly. This can be quite tedious. I 
would like to see something like this:

1. you write the "implements" code:

public MyClass extends Superclass implements MyInterface {
...

2. you click in the line where "implements" is written, or even better, you 
click on the interface that is to be implemented ("MyInterface"), so you can 
call this feature separately for each interface.

3. right click and select (e.g. ) "Source &gt; Generate interface method bodies".

This will insert all the methods of this interface with an empty method body.
Now, that would be cool. :-)
This is there (at least for 95%). Add your interface and go to Source-
&gt;Override/Implement methods.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30061" />
    <CreationDate amount="2003-01-23 04:04:00 -0500" />
    <DupId amount="26683" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Feature Req: Bring back the old Ant target choice dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1. Make "Target" the default tab when the wizard appears, since this is the</Line>
          <Line>one that may theoretically be viewed most often (by us at least!). Perhaps the</Line>
          <Line>wizard could at least remember which tab was viewed last, and show that one by</Line>
          <Line>default the next time it is opened.</Line>
          <Line />
          <Line>2. Remove the add, up, down, remove buttons, and just list all the targets,</Line>
          <Line>like before, with checkboxes such that the order in which you check is the</Line>
          <Line>order in which they are run. Like before...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Recently downloaded Eclipse 2.1 M4. Very pleased with everything EXCEPT the 
new Ant wizard that appears after right clicking on a build.xml file. On the 
old one, one could choose the targets easily as well as their order. On the 
new one, to choose a target, or two, and arrange their order requires quite a 
whack of mouse clicks.

We have a relatively complex set of interconnected projects, and our build 
files have (currently) eleven possible targets. Although the default target is 
most often used, we also make regular use of the other targets.

Therefore, the ability to easily choose a specific target, or more than one 
and their order, is *very* important.

Would it be possible to make this a simpler process? We really liked the old 
way. The new wizard is obviously better in other respects, but perhaps the 
following could be done:

1. Make "Target" the default tab when the wizard appears, since this is the 
one that may theoretically be viewed most often (by us at least!). Perhaps the 
wizard could at least remember which tab was viewed last, and show that one by 
default the next time it is opened.

2. Remove the add, up, down, remove buttons, and just list all the targets, 
like before, with checkboxes such that the order in which you check is the 
order in which they are run. Like before...

Best wishes. We all thank you for a fantastic product. Peter.
Peter, thanks for the review.
This area is rapidly changing so I would encourage you to check out the latest 
integration build (20030122).

1. This is implemented in 20030122.
2. It is unlikely we are going back to the old target selection mechanism 
(some loved it, some hated it :-), and was different than any similar 
mechanism within Eclipse).  We are still working in this area but it is likely 
to stay with, by default, only the default target is displayed and then 
additional targets can be added as required. 

If you are using the same build file with multiple combinations of targets, I 
would recommend starting to make use of the external tools launch history and 
configurations.  You can create all of the configurations for all of your 
combinations, organize them using the launch history preference page, and 
rapidly execute them using the external tools drop down history menu.

You might also be a fan of the AntView? Have you given it a try? Again its 
functionality has been rapidly changing and improving.
[1] has been done
[2] see bug 26683 

*** This bug has been marked as a duplicate of 26683 ***</WithStack>
    <WithOutStack>Recently downloaded Eclipse 2.1 M4. Very pleased with everything EXCEPT the 
new Ant wizard that appears after right clicking on a build.xml file. On the 
old one, one could choose the targets easily as well as their order. On the 
new one, to choose a target, or two, and arrange their order requires quite a 
whack of mouse clicks.

We have a relatively complex set of interconnected projects, and our build 
files have (currently) eleven possible targets. Although the default target is 
most often used, we also make regular use of the other targets.

Therefore, the ability to easily choose a specific target, or more than one 
and their order, is *very* important.

Would it be possible to make this a simpler process? We really liked the old 
way. The new wizard is obviously better in other respects, but perhaps the 
following could be done:

1. Make "Target" the default tab when the wizard appears, since this is the 
one that may theoretically be viewed most often (by us at least!). Perhaps the 
wizard could at least remember which tab was viewed last, and show that one by 
default the next time it is opened.

2. Remove the add, up, down, remove buttons, and just list all the targets, 
like before, with checkboxes such that the order in which you check is the 
order in which they are run. Like before...

Best wishes. We all thank you for a fantastic product. Peter.
Peter, thanks for the review.
This area is rapidly changing so I would encourage you to check out the latest 
integration build (20030122).

1. This is implemented in 20030122.
2. It is unlikely we are going back to the old target selection mechanism 
(some loved it, some hated it :-), and was different than any similar 
mechanism within Eclipse).  We are still working in this area but it is likely 
to stay with, by default, only the default target is displayed and then 
additional targets can be added as required. 

If you are using the same build file with multiple combinations of targets, I 
would recommend starting to make use of the external tools launch history and 
configurations.  You can create all of the configurations for all of your 
combinations, organize them using the launch history preference page, and 
rapidly execute them using the external tools drop down history menu.

You might also be a fan of the AntView? Have you given it a try? Again its 
functionality has been rapidly changing and improving.
[1] has been done
[2] see bug 26683 

*** This bug has been marked as a duplicate of 26683 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30062" />
    <CreationDate amount="2003-01-23 04:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>TKCVS like feature</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hello,
I often use TKCVS complementary to the TeamCVS feature because some of the 
TKFeature are not present in TeamCVS. I think especaially to the branch 
representation TKCVS features...
I think that you should integrate some of these features.
regards
Xavier
Which features in particular
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>Hello,
I often use TKCVS complementary to the TeamCVS feature because some of the 
TKFeature are not present in TeamCVS. I think especaially to the branch 
representation TKCVS features...
I think that you should integrate some of these features.
regards
Xavier
Which features in particular
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30063" />
    <CreationDate amount="2003-01-23 04:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Working Sets] No internationalized icons in extension point org.eclipse.ui.workingSets</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>extension point org.eclipse.ui.workingSets does not support 
internationalization (nl structured folders strategy)

this doesn't work
&lt;extension point="org.eclipse.ui.workingSets"&gt;
        &lt;workingSet
            ...
           icon="$nl$/icons/myWorkingSet.gif"
            ...
        &lt;/workingSet&gt;
 &lt;/extension&gt;
Is that a UI issue ?
sure
the dialog that shows the working sets and the dialog that shows the working 
sets types are showing red squares not icons
We do not currently support internationalized icons - only ResourceBundles..
but the same problem was reported as bug for the view's icon and its fixed
http://dev.eclipse.org/bugs/show_bug.cgi?id=28161

all the extensions that contains icons i used till now supports icon's 
internationalization

Assigning to owner of Bug 28161 for comment.
Take a look in WorkbenchPart 1.2. In that case the fix was simple.
Fixed in &gt;20030213</WithStack>
    <WithOutStack>extension point org.eclipse.ui.workingSets does not support 
internationalization (nl structured folders strategy)

this doesn't work
&lt;extension point="org.eclipse.ui.workingSets"&gt;
        &lt;workingSet
            ...
           icon="$nl$/icons/myWorkingSet.gif"
            ...
        &lt;/workingSet&gt;
 &lt;/extension&gt;
Is that a UI issue ?
sure
the dialog that shows the working sets and the dialog that shows the working 
sets types are showing red squares not icons
We do not currently support internationalized icons - only ResourceBundles..
but the same problem was reported as bug for the view's icon and its fixed
http://dev.eclipse.org/bugs/show_bug.cgi?id=28161

all the extensions that contains icons i used till now supports icon's 
internationalization

Assigning to owner of Bug 28161 for comment.
Take a look in WorkbenchPart 1.2. In that case the fix was simple.
Fixed in &gt;20030213</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30064" />
    <CreationDate amount="2003-01-23 04:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>GEF crashes the whole JVM during direct edit operation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="4">
        <Lines>
          <Line>- SuSE Linux 8.1 on an IBM Thinkpad A20p</Line>
          <Line>- IBM JRE 1.3.1</Line>
          <Line>- Eclipse 2.0.2 Motif (IBM Websphere Studio Workbench 2.0.2 or IBM WSAD 5.0)</Line>
          <Line>- GEF I20030123</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- Create a new Logic Diagram and add a Label to it</Line>
          <Line>- Double click on the label to edit it -&gt; this open the direct editor</Line>
          <Line>- Click outside the direct editor to cancel the edition (without typing any new</Line>
          <Line>text)</Line>
          <Line>-&gt; the JVM crashes with the error message:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>The environment is the following:
- SuSE Linux 8.1 on an IBM Thinkpad A20p
- IBM JRE 1.3.1
- Eclipse 2.0.2 Motif (IBM Websphere Studio Workbench 2.0.2 or IBM WSAD 5.0)
- GEF I20030123

To reproduce the problem do the following (using the Logic Diagram example):
- Create a new Logic Diagram and add a Label to it
- Double click on the label to edit it -&gt; this open the direct editor
- Click outside the direct editor to cancel the edition (without typing any new
text)
-&gt; the JVM crashes with the error message:

Unexpected exception has occurred:
ReportedExceptionCode = b, at ExceptionAddress =   425530
        ACCESS_VIOLATION occured outside Interpreter and JITed code
        ExecMode = EXECMODE_BYTECODE
        stackpointer=0xbffc73d0

Maybe it's a problem with SWT. But anyway GEF should try to workaround the
problem because it happens with the version of SWT which is included in products
like WSAD 5.


Here is the post-mortem coredump of the JVM:
------------
Thu Jan 23 10:32:52 2003
SIGABRT received in kill at 0x40077df1 in /lib/libc.so.6. Processing terminated.
PID: 1668
J2RE 1.3.1 IBM build cxia32131-20020622
Operating Environment
---------------------
Host		: tpyannic.
OS Level	: 2.4.19-4GB.#1 Fri Sep 13 13:14:56 UTC 2002
glibc Version	: 2.2.5
No. of Procs	: 1
Memory Info:
        total:    used:    free:  shared: buffers:  cached:
Mem:  527507456 517672960  9834496        0 62976000 248270848
Swap: 534118400        0 534118400
MemTotal:       515144 kB
MemFree:          9604 kB
MemShared:           0 kB
Buffers:         61500 kB
Cached:         242452 kB
SwapCached:          0 kB
Active:         126372 kB
Inactive:       332708 kB
HighTotal:           0 kB
HighFree:            0 kB
LowTotal:       515144 kB
LowFree:          9604 kB
SwapTotal:      521600 kB
SwapFree:       521600 kB
BigFree:             0 kB
User Limits (in bytes except for NOFILE and NPROC) -
	RLIMIT_FSIZE	: infinity
	RLIMIT_DATA	: infinity
	RLIMIT_STACK	: 2093056
	RLIMIT_CORE	: 0
	RLIMIT_NOFILE	: 1024
	RLIMIT_NPROC	: 4095
Application Environment
-----------------------
Signal Handlers - 
	SIGHUP		: intrDispatchMD (libhpi.so)
	SIGINT		: intrDispatchMD (libhpi.so)
	SIGQUIT		: intrDispatchMD (libhpi.so)
	SIGILL		: intrDispatchMD (libhpi.so)
	SIGTRAP		: intrDispatchMD (libhpi.so)
	SIGABRT		: intrDispatchMD (libhpi.so)
	SIGFPE		: intrDispatchMD (libhpi.so)
	SIGBUS		: intrDispatchMD (libhpi.so)
	SIGSEGV		: intrDispatchMD (libhpi.so)
	SIGPIPE		: ignored
	SIGUSR1		: sigusr1Handler (libhpi.so)
	SIGUSR2		: unknown handler
	SIGTERM		: intrDispatchMD (libhpi.so)
Environment Variables -
LESSKEY=/etc/lesskey.bin
MANPATH=/usr/local/man:/usr/share/man:/usr/X11R6/man:/opt/gnome/man
INFODIR=/usr/local/info:/usr/share/info:/usr/info
NNTPSERVER=news
DB2INSTANCE=db2inst1
KDE_MULTIHEAD=false
HOSTNAME=tpyannic
XKEYSYMDB=/usr/X11R6/lib/X11/XKeysymDB
SHELL=/bin/bash
TERM=xterm
HOST=tpyannic
XDM_MANAGED=/var/run/xdmctl/xdmctl-:0,maysd,mayfn,sched
PROFILEREAD=true
GS_LIB=/share/fonts
GNOME_PATH=:/opt/gnome:/usr
GTK_RC_FILES=/etc/gtk/gtkrc:/home/yannick/.gtkrc
KDEHOME=/home/yannick/.kde
JAVAHOME=/opt/eclipse-motif/jre
XSESSION_IS_UP=yes
USER=yannick
JRE_HOME=/usr/lib/java/jre
http_proxy=http://proxy.de.ibm.com
LS_COLORS=no=00:fi=00:di=01;34:ln=00;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31:ex=00;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.bat=01;32:*.btm=01;32:*.dll=01;32:*.tar=00;31:*.tbz=00;31:*.tgz=00;31:*.rpm=00;31:*.deb=00;31:*.arj=00;31:*.taz=00;31:*.lzh=00;31:*.zip=00;31:*.zoo=00;31:*.z=00;31:*.Z=00;31:*.gz=00;31:*.bz2=00;31:*.tb2=00;31:*.tz2=00;31:*.tbz2=00;31:*.avi=01;35:*.bmp=01;35:*.fli=01;35:*.gif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mng=01;35:*.mov=01;35:*.mpg=01;35:*.pcx=01;35:*.pbm=01;35:*.pgm=01;35:*.png=01;35:*.ppm=01;35:*.tga=01;35:*.tif=01;35:*.xbm=01;35:*.xpm=01;35:*.dl=01;35:*.gl=01;35:*.aiff=00;32:*.au=00;32:*.mid=00;32:*.mp3=00;32:*.ogg=00;32:*.voc=00;32:*.wav=00;32:
LD_LIBRARY_PATH=/opt/eclipse-motif/jre/bin:/opt/eclipse-motif/jre/bin/classic::/home/db2inst1/sqllib/lib
OPENWINHOME=/usr/openwin
XNLSPATH=/usr/X11R6/lib/X11/nls
HOSTTYPE=i386
ftp_proxy=proxy.de.ibm.com
LIBPATH=:/home/db2inst1/sqllib/lib
SESSION_MANAGER=local/tpyannic:/tmp/.ICE-unix/1167
PAGER=less
LD_HWCAP_MASK=0x20000000
MINICOM=-c on
KONSOLE_DCOP=DCOPRef(konsole-1394,konsole)
PATH=/usr/local/bin:/usr/bin:/usr/X11R6/bin:/bin:/java/bin:/usr/games:/opt/gnome2/bin:/opt/gnome/bin:/opt/kde3/bin:/usr/lpp/cmvc/bin:/usr/lib/java/jre/bin:/opt/gnome/bin:.:/home/db2inst1/sqllib/bin:/home/db2inst1/sqllib/adm:/home/db2inst1/sqllib/misc
GNOMEDIR=/opt/gnome
CPU=i686
JAVA_BINDIR=/usr/lib/java/jre/bin
LC_COLLATE=POSIX
PWD=/opt/eclipse-motif
INPUTRC=/etc/inputrc
KONSOLE_DCOP_SESSION=DCOPRef(konsole-1394,session-1)
JAVA_HOME=/usr/lib/java/jre
LANG=fr_FR@euro
TEXINPUTS=::/home/yannick/.TeX:/usr/share/doc/.TeX:/usr/doc/.TeX:/home/yannick/.TeX:/usr/share/doc/.TeX:/usr/doc/.TeX
HOME=/home/yannick
SHLVL=2
OSTYPE=linux
LESS_ADVANCED_PREPROCESSOR=no
no_proxy=localhost
LS_OPTIONS=-N --color=tty -T 0
WINDOWMANAGER=/usr/X11R6/bin/kde
VWSPATH=/home/db2inst1/sqllib
LOGNAME=yannick
MACHTYPE=i686-suse-linux
LESS=-M -I
PRINTER=deboel07
CLASSPATH=/home/db2inst1/sqllib/java/db2java.zip:/home/db2inst1/sqllib/java/db2jcc.jar:/home/db2inst1/sqllib/java/sqlj.zip:/home/db2inst1/sqllib/function:.
LESSOPEN=lessopen.sh %s
USE_FAM=
INFOPATH=/usr/local/info:/usr/share/info:/usr/info
DISPLAY=:0.0
LESSCLOSE=lessclose.sh %s %s
COLORTERM=
JAVA_ROOT=/usr/lib/java
IBM_JAVA_COMMAND_LINE=/opt/eclipse-motif/jre/bin/exe/java -cp
/opt/eclipse-motif/./startup.jar org.eclipse.core.launcher.Main -os linux -ws
motif -arch x86 -showsplash /opt/eclipse-motif/./eclipse -showsplash 600 -data
/tmp/test-workspace2/
Memory map
----------
08048000-0804c000 r-xp 00000000 03:02 340055     /opt/eclipse-motif/jre/bin/exe/java
0804c000-0804d000 rw-p 00003000 03:02 340055     /opt/eclipse-motif/jre/bin/exe/java
0804d000-08de4000 rwxp 00000000 00:00 0
10000000-1fb89000 rwxp 00000000 00:00 0
40000000-40012000 r-xp 00000000 03:02 20726      /lib/ld-2.2.5.so
40012000-40013000 rw-p 00011000 03:02 20726      /lib/ld-2.2.5.so
40013000-40014000 rw-p 00000000 00:00 0
40014000-40019000 r-xp 00000000 03:02 340061    
/opt/eclipse-motif/jre/bin/libxhpi.so
40019000-4001a000 rw-p 00004000 03:02 340061    
/opt/eclipse-motif/jre/bin/libxhpi.so
4001a000-4001b000 r--p 00000000 03:02 22148     
/usr/lib/locale/fr_FR@euro/LC_IDENTIFICATION
4001b000-4001c000 r--p 00000000 03:02 23025     
/usr/lib/locale/fr_FR@euro/LC_MEASUREMENT
4001c000-4001d000 r--p 00000000 03:02 22150     
/usr/lib/locale/fr_FR@euro/LC_TELEPHONE
4001d000-4001e000 r--p 00000000 03:02 22827     
/usr/lib/locale/fr_FR@euro/LC_ADDRESS
4001e000-4001f000 r--p 00000000 03:02 22834      /usr/lib/locale/fr_FR@euro/LC_NAME
4001f000-40020000 r--p 00000000 03:02 23031      /usr/lib/locale/fr_FR@euro/LC_PAPER
40020000-40021000 r--p 00000000 03:02 22169     
/usr/lib/locale/fr_FR@euro/LC_MESSAGES/SYS_LC_MESSAGES
40021000-4002f000 r-xp 00000000 03:02 20748      /lib/libpthread.so.0
4002f000-40036000 rw-p 0000e000 03:02 20748      /lib/libpthread.so.0
40036000-40048000 r-xp 00000000 03:02 20739      /lib/libnsl.so.1
40048000-40049000 rw-p 00011000 03:02 20739      /lib/libnsl.so.1
40049000-4004b000 rw-p 00000000 00:00 0
4004b000-4004d000 r-xp 00000000 03:02 20736      /lib/libdl.so.2
4004d000-4004e000 rw-p 00001000 03:02 20736      /lib/libdl.so.2
4004e000-40162000 r-xp 00000000 03:02 20732      /lib/libc.so.6
40162000-40168000 rw-p 00113000 03:02 20732      /lib/libc.so.6
40168000-4016d000 rw-p 00000000 00:00 0
4016d000-402ef000 r-xp 00000000 03:02 340073    
/opt/eclipse-motif/jre/bin/classic/libjvm.so
402ef000-402f5000 rw-p 00181000 03:02 340073    
/opt/eclipse-motif/jre/bin/classic/libjvm.so
402f5000-40308000 rw-p 00000000 00:00 0
40308000-4032a000 r-xp 00000000 03:02 20737      /lib/libm.so.6
4032a000-4032b000 rw-p 00021000 03:02 20737      /lib/libm.so.6
4032b000-4033d000 r-xp 00000000 03:02 340079    
/opt/eclipse-motif/jre/bin/libhpi.so
4033d000-4033f000 rw-p 00011000 03:02 340079    
/opt/eclipse-motif/jre/bin/libhpi.so
4033f000-40362000 rw-p 00000000 00:00 0
40362000-40bc1000 rwxp 00000000 00:00 0
40bc1000-40be4000 r-xp 00000000 03:02 340068    
/opt/eclipse-motif/jre/bin/libjava.so
40be4000-40be8000 rw-p 00022000 03:02 340068    
/opt/eclipse-motif/jre/bin/libjava.so
40be8000-40be9000 rw-p 00000000 00:00 0
40be9000-40bf7000 r-xp 00000000 03:02 340084    
/opt/eclipse-motif/jre/bin/libzip.so
40bf7000-40bfa000 rw-p 0000d000 03:02 340084    
/opt/eclipse-motif/jre/bin/libzip.so
40bfa000-413b2000 r--s 00000000 03:02 339996     /opt/eclipse-motif/jre/lib/rt.jar
413b2000-413e3000 rw-p 00000000 00:00 0
413e3000-41760000 r--s 00000000 03:02 340036     /opt/eclipse-motif/jre/lib/i18n.jar
41760000-41792000 r--p 00000000 03:02 22166      /usr/lib/locale/fr_FR@euro/LC_CTYPE
41792000-41793000 r--p 00000000 03:02 22170     
/usr/lib/locale/fr_FR@euro/LC_MONETARY
41793000-41799000 r--p 00000000 03:02 23022     
/usr/lib/locale/fr_FR@euro/LC_COLLATE
41799000-4179a000 r--p 00000000 03:02 22172      /usr/lib/locale/fr_FR@euro/LC_TIME
4179a000-4179b000 r--p 00000000 03:02 22647     
/usr/lib/locale/fr_FR@euro/LC_NUMERIC
4179b000-41a05000 r-xp 00000000 03:02 340070    
/opt/eclipse-motif/jre/bin/libjitc.so
41a05000-41a0c000 rw-p 00269000 03:02 340070    
/opt/eclipse-motif/jre/bin/libjitc.so
41a0c000-41d5a000 rw-p 00000000 00:00 0
41d5a000-41d65000 r--s 00000000 03:02 339971    
/opt/eclipse-motif/jre/lib/ext/indicim.jar
41d65000-41dc2000 r--s 00000000 03:02 339970    
/opt/eclipse-motif/jre/lib/ext/ibmjcaprovider.jar
41dc2000-41dc7000 r--s 00000000 03:02 339874     /opt/eclipse-motif/startup.jar
41dc7000-41de9000 rw-p 00000000 00:00 0
41de9000-41dfe000 r--s 00000000 03:02 140047    
/opt/eclipse-motif/plugins/org.eclipse.core.boot_2.0.2/boot.jar
41dfe000-41e1a000 r--p 00000000 03:02 23189     
/usr/share/locale/fr/LC_MESSAGES/libc.mo
41e1a000-41e1f000 r--s 00000000 03:02 21264      /usr/lib/gconv/gconv-modules.cache
41e1f000-41e21000 r-xp 00000000 03:02 21218      /usr/lib/gconv/ISO8859-1.so
41e21000-41e22000 rw-p 00001000 03:02 21218      /usr/lib/gconv/ISO8859-1.so
41e22000-41e24000 r-xp 00000000 03:02 21223      /usr/lib/gconv/ISO8859-15.so
41e24000-41e25000 rw-p 00001000 03:02 21223      /usr/lib/gconv/ISO8859-15.so
41e25000-41e57000 r--s 00000000 03:02 140055    
/opt/eclipse-motif/plugins/org.eclipse.core.runtime_2.0.2/runtime.jar
41e57000-4213c000 r--s 00000000 03:02 140598    
/opt/eclipse-motif/plugins/org.eclipse.ui_2.0.2/workbench.jar
4213c000-42152000 r--s 00000000 03:02 140041    
/opt/eclipse-motif/plugins/org.apache.xerces_4.0.7/xmlParserAPIs.jar
42152000-42271000 r--s 00000000 03:02 140045    
/opt/eclipse-motif/plugins/org.apache.xerces_4.0.7/xercesImpl.jar
42271000-422eb000 r--s 00000000 03:02 140134    
/opt/eclipse-motif/plugins/org.eclipse.core.resources_2.0.1/resources.jar
422eb000-42337000 r--s 00000000 03:02 140096    
/opt/eclipse-motif/plugins/org.eclipse.update.core_2.0.2/updatecore.jar
42337000-42358000 r--s 00000000 03:02 140160    
/opt/eclipse-motif/plugins/org.eclipse.help_2.0.2/help.jar
42358000-4242b000 r--s 00000000 03:02 291341    
/opt/eclipse-motif/plugins/org.eclipse.swt.motif_2.0.2/ws/motif/swt.jar
4242b000-42430000 r--s 00000000 03:02 140063    
/opt/eclipse-motif/plugins/org.eclipse.ant.core_2.0.1/antsupport.jar
42430000-42482000 r--s 00000000 03:02 140648    
/opt/eclipse-motif/plugins/org.eclipse.team.cvs.core_2.0.0/cvs.jar
42482000-424df000 r--s 00000000 03:02 165323    
/opt/eclipse-motif/plugins/org.eclipse.compare_2.0.0/compare.jar
424df000-424f5000 r--s 00000000 03:02 165379    
/opt/eclipse-motif/plugins/org.eclipse.help.ui_2.0.1/helpworkbench.jar
424f5000-42526000 r--s 00000000 03:02 339192    
/opt/eclipse-motif/plugins/org.eclipse.jdt.junit_2.0.1/junitsupport.jar
42526000-4273e000 r--s 00000000 03:02 338633    
/opt/eclipse-motif/plugins/org.eclipse.jdt.core_2.0.2/jdtcore.jar
4273e000-427af000 r--s 00000000 03:02 339482    
/opt/eclipse-motif/plugins/com.ibm.etools.xsd.wswb_1.0.0/xsd.jar
427af000-427de000 r--s 00000000 03:02 162846    
/opt/eclipse-motif/plugins/org.eclipse.search_2.0.1/search.jar
427de000-427df000 r-xp 00000000 03:02 291355    
/opt/eclipse-motif/plugins/org.eclipse.core.resources.linux_2.0.1/os/linux/x86/libcore_2_0_5.so
427df000-427e0000 rw-p 00000000 03:02 291355    
/opt/eclipse-motif/plugins/org.eclipse.core.resources.linux_2.0.1/os/linux/x86/libcore_2_0_5.so
427e0000-42825000 r-xp 00000000 03:02 291345    
/opt/eclipse-motif/plugins/org.eclipse.swt.motif_2.0.2/os/linux/x86/libswt-motif-2052.so
42825000-42828000 rw-p 00044000 03:02 291345    
/opt/eclipse-motif/plugins/org.eclipse.swt.motif_2.0.2/os/linux/x86/libswt-motif-2052.so
42828000-42829000 rw-p 00000000 00:00 0
42829000-429ad000 r-xp 00000000 03:02 339869     /opt/eclipse-motif/libXm.so.2.1
429ad000-429c0000 rw-p 00183000 03:02 339869     /opt/eclipse-motif/libXm.so.2.1
429c0000-429c1000 rw-p 00000000 00:00 0
429c1000-429c3000 r-xp 00000000 03:02 24852     
/usr/X11R6/lib/X11/locale/lib/common/xlcDef.so.2
429c3000-429c4000 rw-p 00001000 03:02 24852     
/usr/X11R6/lib/X11/locale/lib/common/xlcDef.so.2
429c4000-429cc000 r--s 00000000 03:02 140128    
/opt/eclipse-motif/plugins/org.apache.lucene_1.2.0/lucene-demos-1.2-rc4.jar
429cc000-429cd000 r--s 00000000 03:02 140629    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlets-common.jar
429cd000-429ce000 r--s 00000000 03:02 339260    
/opt/eclipse-motif/plugins/org.eclipse.platform.doc.isv_2.0.0/activeHelpSample.jar
429ce000-42ac2000 r-xp 00000000 03:02 24862      /usr/X11R6/lib/libX11.so.6.2
42ac2000-42ac6000 rw-p 000f4000 03:02 24862      /usr/X11R6/lib/libX11.so.6.2
42ac6000-42ad3000 r-xp 00000000 03:02 24870      /usr/X11R6/lib/libXext.so.6.4
42ad3000-42ad4000 rw-p 0000c000 03:02 24870      /usr/X11R6/lib/libXext.so.6.4
42ad4000-42b22000 r-xp 00000000 03:02 24890      /usr/X11R6/lib/libXt.so.6.0
42b22000-42b26000 rw-p 0004d000 03:02 24890      /usr/X11R6/lib/libXt.so.6.0
42b26000-42b2d000 r-xp 00000000 03:02 24882      /usr/X11R6/lib/libXp.so.6.2
42b2d000-42b2e000 rw-p 00006000 03:02 24882      /usr/X11R6/lib/libXp.so.6.2
42b2e000-42b36000 r-xp 00000000 03:02 24860      /usr/X11R6/lib/libSM.so.6.0
42b36000-42b37000 rw-p 00007000 03:02 24860      /usr/X11R6/lib/libSM.so.6.0
42b37000-42b4b000 r-xp 00000000 03:02 24858      /usr/X11R6/lib/libICE.so.6.3
42b4b000-42b4c000 rw-p 00013000 03:02 24858      /usr/X11R6/lib/libICE.so.6.3
42b4c000-42b4e000 rw-p 00000000 00:00 0
42b4e000-42b6a000 r-xp 00000000 03:02 24851     
/usr/X11R6/lib/X11/locale/lib/common/ximcp.so.2
42b6a000-42b6c000 rw-p 0001b000 03:02 24851     
/usr/X11R6/lib/X11/locale/lib/common/ximcp.so.2
42b6c000-42bcd000 r--s 00000000 03:02 162794    
/opt/eclipse-motif/plugins/org.eclipse.debug.ui_2.0.0/dtui.jar
42bcd000-42c48000 r--s 00000000 03:02 291326    
/opt/eclipse-motif/plugins/org.eclipse.update.ui_2.0.2/updateui.jar
42c48000-42c57000 r--s 00000000 03:02 291422    
/opt/eclipse-motif/plugins/org.eclipse.pde.runtime_2.0.0/pdert.jar
42c57000-42c5b000 r--s 00000000 03:02 140626    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/tomcatwrapper.jar
42c5b000-42c62000 r--s 00000000 03:02 140637    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/bootstrap.jar
42c62000-42c6a000 r--s 00000000 03:02 140627    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/jakarta-regexp-1.2.jar
42c6a000-42c6e000 r--s 00000000 03:02 140630    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/naming-factory.jar
42c6e000-42d6f000 rw-p 00102000 00:00 0
42d6f000-43027000 r--s 00000000 03:02 339004    
/opt/eclipse-motif/plugins/org.eclipse.jdt.ui_2.0.2/jdt.jar
43027000-43154000 r--s 00000000 03:02 338627    
/opt/eclipse-motif/plugins/org.eclipse.pde.ui_2.0.1/pdeui.jar
43154000-431f7000 r--s 00000000 03:02 200628    
/opt/eclipse-motif/plugins/org.eclipse.team.cvs.ui_2.0.1/teamcvsui.jar
431f7000-43284000 r--s 00000000 03:02 339101    
/opt/eclipse-motif/plugins/org.eclipse.jdt.debug.ui_2.0.2/jdiui.jar
43284000-432c1000 r--s 00000000 03:02 195784    
/opt/eclipse-motif/plugins/org.eclipse.team.ui_2.0.0/teamui.jar
432c1000-432e9000 r--s 00000000 03:02 140757    
/opt/eclipse-motif/plugins/org.eclipse.ui.externaltools_2.0.1/externaltools.jar
432e9000-43317000 r--s 00000000 03:02 155446    
/opt/eclipse-motif/plugins/org.eclipse.gef.examples.logic_2.0.1/runtime/logic.jar
43317000-43338000 r--s 00000000 03:02 140130    
/opt/eclipse-motif/plugins/org.apache.lucene_1.2.0/lucene-1.2-rc4.jar
43338000-433c9000 r--s 00000000 03:02 140631    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/catalina.jar
433c9000-433fd000 r--s 00000000 03:02 140645    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/jasper-compiler.jar
433fd000-4340e000 r--s 00000000 03:02 140635    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/jasper-runtime.jar
4340e000-43415000 r--s 00000000 03:02 140641    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/naming-common.jar
43415000-4341e000 r--s 00000000 03:02 140646    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/naming-resources.jar
4341e000-43432000 r--s 00000000 03:02 140640    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlet.jar
43432000-43437000 r--s 00000000 03:02 140639    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlets-default.jar
43437000-43439000 r--s 00000000 03:02 140633    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlets-invoker.jar
43439000-4343c000 r--s 00000000 03:02 140628    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlets-manager.jar
4343c000-4343e000 r--s 00000000 03:02 140638    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlets-snoop.jar
4343e000-43444000 r--s 00000000 03:02 140632    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlets-webdav.jar
43444000-4345f000 r--s 00000000 03:02 140644    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/tomcat-util.jar
4345f000-43466000 r-xp 00000000 03:02 340080    
/opt/eclipse-motif/jre/bin/libnet.so
43466000-43467000 rw-p 00006000 03:02 340080    
/opt/eclipse-motif/jre/bin/libnet.so
43467000-4346d000 r--s 00000000 03:02 140169    
/opt/eclipse-motif/plugins/org.eclipse.help.webapp_2.0.2/WEB-INF/lib/webapp.jar
4346d000-4346e000 rw-p 00000000 00:00 0
43474000-4347d000 r-xp 00000000 03:02 20743      /lib/libnss_files.so.2
4347d000-4347e000 rw-p 00008000 03:02 20743      /lib/libnss_files.so.2
4347e000-4348f000 r--s 00000000 03:02 140170    
/opt/eclipse-motif/plugins/org.eclipse.help.webapp_2.0.2/WEB-INF/lib/jsp.jar
4348f000-43498000 r-xp 00000000 03:02 24856     
/usr/X11R6/lib/X11/locale/lib/common/xomGeneric.so.2
43498000-43499000 rw-p 00008000 03:02 24856     
/usr/X11R6/lib/X11/locale/lib/common/xomGeneric.so.2
43499000-434b4000 r--s 00000000 03:02 338681    
/opt/eclipse-motif/plugins/org.eclipse.jdt.launching_2.0.1/launching.jar
434b4000-434d1000 r--s 00000000 03:02 338640    
/opt/eclipse-motif/plugins/org.junit_3.7.0/junit.jar
434d1000-434dd000 r--s 00000000 03:02 338674    
/opt/eclipse-motif/plugins/org.eclipse.jdt.debug_2.0.2/jdi.jar
434dd000-4356d000 r--s 00000000 03:02 338675    
/opt/eclipse-motif/plugins/org.eclipse.jdt.debug_2.0.2/jdimodel.jar
4356d000-43591000 r--s 00000000 03:02 140653    
/opt/eclipse-motif/plugins/org.eclipse.update.ui.forms_2.0.0/forms.jar
43591000-435f7000 r--s 00000000 03:02 140068    
/opt/eclipse-motif/plugins/org.apache.ant_1.4.1/ant.jar
435f7000-4366a000 r--s 00000000 03:02 140070    
/opt/eclipse-motif/plugins/org.apache.ant_1.4.1/jakarta-ant-1.4.1-optional.jar
4366a000-436a3000 r--s 00000000 03:02 291449    
/opt/eclipse-motif/plugins/org.eclipse.pde.core_2.0.2/pdecore.jar
436a3000-436ae000 r--s 00000000 03:02 195800    
/opt/eclipse-motif/plugins/org.eclipse.team.cvs.ssh_2.0.0/teamcvsssh.jar
436ae000-436bc000 r--s 00000000 03:02 291380    
/opt/eclipse-motif/plugins/org.eclipse.pde.build_2.0.0/pdebuild.jar
436bc000-436d1000 r--s 00000000 03:02 140253    
/opt/eclipse-motif/plugins/org.eclipse.team.core_2.0.1/team.jar
436d1000-436e9000 r--s 00000000 03:02 140604    
/opt/eclipse-motif/plugins/org.eclipse.debug.core_2.0.0/dtcore.jar
436e9000-436f1000 r--s 00000000 03:02 291454    
/opt/eclipse-motif/plugins/org.eclipse.pde_2.0.2/pde.jar
436f1000-43713000 rw-p 00000000 00:00 0
43713000-437a4000 r--s 00000000 03:02 139576    
/opt/eclipse-motif/plugins/org.eclipse.gef_2.0.1/runtime/gef.jar
437a4000-437f8000 r--s 00000000 03:02 134833    
/opt/eclipse-motif/plugins/org.eclipse.draw2d_2.0.1/runtime/draw2d.jar
437f8000-43879000 rw-p 00000000 00:00 0
43a3c000-43b3d000 rw-p 005ad000 00:00 0
be1be000-be1bf000 ---p 00000000 00:00 0
be1bf000-be1c8000 rwxp 00001000 00:00 0
be1c8000-be1c9000 ---p 0000a000 00:00 0
be1c9000-be200000 rwxp 0000b000 00:00 0
be3be000-be3bf000 ---p 00000000 00:00 0
be3bf000-be3c8000 rwxp 00001000 00:00 0
be3c8000-be3c9000 ---p 0000a000 00:00 0
be3c9000-be400000 rwxp 0000b000 00:00 0
be5be000-be5bf000 ---p 00000000 00:00 0
be5bf000-be5c8000 rwxp 00001000 00:00 0
be5c8000-be5c9000 ---p 0000a000 00:00 0
be5c9000-be600000 rwxp 0000b000 00:00 0
be7be000-be7bf000 ---p 00000000 00:00 0
be7bf000-be7c8000 rwxp 00001000 00:00 0
be7c8000-be7c9000 ---p 0000a000 00:00 0
be7c9000-be800000 rwxp 0000b000 00:00 0
be9be000-be9bf000 ---p 00000000 00:00 0
be9bf000-be9c8000 rwxp 00001000 00:00 0
be9c8000-be9c9000 ---p 0000a000 00:00 0
be9c9000-bea00000 rwxp 0000b000 00:00 0
bebbe000-bebbf000 ---p 00000000 00:00 0
bebbf000-bebc8000 rwxp 00001000 00:00 0
bebc8000-bebc9000 ---p 0000a000 00:00 0
bebc9000-bec00000 rwxp 0000b000 00:00 0
bedbe000-bedbf000 ---p 00000000 00:00 0
bedbf000-bedc8000 rwxp 00001000 00:00 0
bedc8000-bedc9000 ---p 0000a000 00:00 0
bedc9000-bee00000 rwxp 0000b000 00:00 0
befbe000-befbf000 ---p 00000000 00:00 0
befbf000-befc8000 rwxp 00001000 00:00 0
befc8000-befc9000 ---p 0000a000 00:00 0
befc9000-bf000000 rwxp 0000b000 00:00 0
bf1be000-bf1bf000 ---p 00000000 00:00 0
bf1bf000-bf1c8000 rwxp 00001000 00:00 0
bf1c8000-bf1c9000 ---p 0000a000 00:00 0
bf1c9000-bf200000 rwxp 0000b000 00:00 0
bf3be000-bf3bf000 ---p 00000000 00:00 0
bf3bf000-bf3c8000 rwxp 00001000 00:00 0
bf3c8000-bf3c9000 ---p 0000a000 00:00 0
bf3c9000-bf400000 rwxp 0000b000 00:00 0
bf5be000-bf5bf000 ---p 00000000 00:00 0
bf5bf000-bf5c8000 rwxp 00001000 00:00 0
bf5c8000-bf5c9000 ---p 0000a000 00:00 0
bf5c9000-bf600000 rwxp 0000b000 00:00 0
bf7be000-bf7bf000 ---p 00000000 00:00 0
bf7bf000-bf7c8000 rwxp 00001000 00:00 0
bf7c8000-bf7c9000 ---p 0000a000 00:00 0
bf7c9000-bf800000 rwxp 0000b000 00:00 0
bffbf000-bffc8000 rwxp fffc0000 00:00 0
bffc8000-bffc9000 ---p fffc9000 00:00 0
bffc9000-c0000000 rwxp fffca000 00:00 0
	 PID: 1668
	 ----- Native Stack -----	Diagnostics_Impl at 40017409 in libxhpi.so
	dgGenerateJavacore at 4023DF89 in libjvm.so
	abortJVM at 402CEFA1 in libjvm.so	sysUnwindSignalCatchFrame at 40333A1F in
libhpi.so
	sysSignalCatchHandler at 40333AB1 in libhpi.so	intrDispatch at 403342CA in
libhpi.so
	intrDispatchMD at 4033452C in libhpi.s	raise at 4002A5EB in libpthread.so.0
	abort at 400794D9 in libc.so	intrDispatch at 403342CA in libhpi.so
	intrDispatchMD at 4033452C in libhpi.s	_XmPrimitiveImportArgs at 42944C62 in
libXm.so	XtSetValues at 42B05C23 in libXt.so.6
	Java_org_eclipse_swt_internal_motif_OS_XtSetValues at 42821C0F in
libswt-motif-2052.so
	??
	??
--------------------------------------------------------
---------------------- Exception Information ---------------------------
Application aborted in thread "main" (TID:0x100519D8)
 
Native stack at exception generation:
Program Name                                 Entry Name                      
Statement ID 
                                                                                   
 
---------------------- System Properties -------------------------------
J2RE 1.3.1 IBM build cxia32131-20020622
/opt/eclipse-motif/jre/bin/exe/java -cp /opt/eclipse-motif/./startup.jar
org.eclipse.core.launcher.Main -os linux -ws motif -arch x86 -showsplash
/opt/eclipse-motif/./eclipse -showsplash 600 -data /tmp/test-workspace2/
Java Home Dir:	/opt/eclipse-motif/jre
Java DLL Dir:	/opt/eclipse-motif/jre/bin
Sys Classpath:
/opt/eclipse-motif/jre/lib/rt.jar:/opt/eclipse-motif/jre/lib/i18n.jar:/opt/eclipse-motif/jre/classes
UserArgs:
	-Djava.class.path=/home/db2inst1/sqllib/java/db2java.zip:/home/db2inst1/sqllib/java/db2jcc.jar:/home/db2inst1/sqllib/java/sqlj.zip:/home/db2inst1/sqllib/function:.
	-Djava.class.path=/opt/eclipse-motif/./startup.jar
	-Dinvokedviajava
---------------------- XM component Dump Routine  ----------------------
Full thread dump Classic VM (J2RE 1.3.1 IBM build cxia32131-20020622, native
threads):
    "StandardManager[/help]" (TID:0x107D70C0, sys_thread_t:0x8A97878, state:CW,
native ID:0x440D) prio=5
	at java.lang.Thread.sleep(Native Method)
	at
org.apache.catalina.session.StandardManager.threadSleep(StandardManager.java:772)
	at org.apache.catalina.session.StandardManager.run(StandardManager.java:831)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1700
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BE1FF600, REG_ECX : 0, REG_EDX : 40035AC0, REG_ESI
: BE1FF608, REG_EDI : BE1FF600, REG_EBP : BE1FF7C8
--------------------------------------------------------
	 PID: 1700
	 ----- Native Stack -----	condvarTimedWait at 0x40333815 in libhpi.so
	sysMonitorWait at 0x40335d47 in libhpi.so
	xmThreadSleep at 0x402d29c0 in libjvm.so
	JVM_Sleep at 0x40210789 in libjvm.so
	??
	L0_invokenonvirtual_quick__ at 0x4029eb58 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "HttpProcessor[0][4]" (TID:0x107D7508, sys_thread_t:0x8AB6C70, state:CW,
native ID:0x3C0C) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:429)
	at org.apache.catalina.connector.http.HttpProcessor.await(HttpProcessor.java:378)
	at org.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.java:1102)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1698
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BE3FF6F8, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BE3FF6F8, REG_EBP : BE3FF6E0
--------------------------------------------------------
	 PID: 1698
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtual_quick_w__ at 0x4029f489 in libjvm.so
	L0_invokenonvirtual_quick__ at 0x4029eb63 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "HttpProcessor[0][3]" (TID:0x107B6F78, sys_thread_t:0x8AB5778, state:CW,
native ID:0x380B) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:429)
	at org.apache.catalina.connector.http.HttpProcessor.await(HttpProcessor.java:378)
	at org.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.java:1102)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1697
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BE5FF6F8, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BE5FF6F8, REG_EBP : BE5FF6E0
--------------------------------------------------------
	 PID: 1697
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtual_quick_w__ at 0x4029f489 in libjvm.so
	L0_invokenonvirtual_quick__ at 0x4029eb63 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "HttpProcessor[0][2]" (TID:0x107B6FC0, sys_thread_t:0x8AB3648, state:CW,
native ID:0x340A) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:429)
	at org.apache.catalina.connector.http.HttpProcessor.await(HttpProcessor.java:378)
	at org.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.java:1102)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1696
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BE7FF6F8, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BE7FF6F8, REG_EBP : BE7FF6E0
--------------------------------------------------------
	 PID: 1696
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtual_quick_w__ at 0x4029f489 in libjvm.so
	L0_invokenonvirtual_quick__ at 0x4029eb63 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "HttpProcessor[0][1]" (TID:0x107B7008, sys_thread_t:0x8A8AA38, state:CW,
native ID:0x3009) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:429)
	at org.apache.catalina.connector.http.HttpProcessor.await(HttpProcessor.java:378)
	at org.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.java:1102)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1695
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BE9FF6F8, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BE9FF6F8, REG_EBP : BE9FF6E0
--------------------------------------------------------
	 PID: 1695
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtual_quick_w__ at 0x4029f489 in libjvm.so
	L0_invokenonvirtual_quick__ at 0x4029eb63 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "HttpProcessor[0][0]" (TID:0x107B7050, sys_thread_t:0x8AA8A48, state:CW,
native ID:0x2C07) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:429)
	at org.apache.catalina.connector.http.HttpProcessor.await(HttpProcessor.java:378)
	at org.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.java:1102)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1694
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BEDFF6F8, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BEDFF6F8, REG_EBP : BEDFF6E0
--------------------------------------------------------
	 PID: 1694
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtual_quick_w__ at 0x4029f489 in libjvm.so
	L0_invokenonvirtual_quick__ at 0x4029eb63 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "HttpConnector[0]" (TID:0x10729CE0, sys_thread_t:0x8A97330, state:R, native
ID:0x2806) prio=5
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:446)
	at java.net.ServerSocket.implAccept(ServerSocket.java:264)
	at java.net.ServerSocket.accept(ServerSocket.java:243)
	at org.apache.catalina.connector.http.HttpConnector.run(HttpConnector.java:993)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1693
	 ----- Register Values -----
REG_EAX : 0, REG_EBX : BEFFF82C, REG_ECX : BEFFF680, REG_EDX : BEFFF74C, REG_ESI
: 0, REG_EDI : 8A97330, REG_EBP : BEFFF6E8
--------------------------------------------------------
	 PID: 1693
	 ----- Native Stack -----
--------------------------------------------------------
    "StandardManager[]" (TID:0x10424458, sys_thread_t:0x89DECD0, state:CW,
native ID:0x2405) prio=5
	at java.lang.Thread.sleep(Native Method)
	at
org.apache.catalina.session.StandardManager.threadSleep(StandardManager.java:772)
	at org.apache.catalina.session.StandardManager.run(StandardManager.java:831)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1692
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BF1FF600, REG_ECX : 0, REG_EDX : 40035AC0, REG_ESI
: BF1FF608, REG_EDI : BF1FF600, REG_EBP : BF1FF7C8
--------------------------------------------------------
	 PID: 1692
	 ----- Native Stack -----	condvarTimedWait at 0x40333815 in libhpi.so
	sysMonitorWait at 0x40335d47 in libhpi.so
	xmThreadSleep at 0x402d29c0 in libjvm.so
	JVM_Sleep at 0x40210789 in libjvm.so
	??
	L0_invokenonvirtual_quick__ at 0x4029eb58 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "Snapshot" (TID:0x10050E90, sys_thread_t:0x8451AB8, state:CW, native
ID:0x1C08) prio=5
	at java.lang.Object.wait(Native Method)
	at
org.eclipse.core.internal.resources.DelayedSnapshotRunnable.run(DelayedSnapshotRunnable.java:41)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1690
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BEBFF618, REG_ECX : 0, REG_EDX : 40035AC0, REG_ESI
: BEBFF620, REG_EDI : BEBFF618, REG_EBP : BEBFF7E0
--------------------------------------------------------
	 PID: 1690
	 ----- Native Stack -----	condvarTimedWait at 0x40333815 in libhpi.so
	sysMonitorWait at 0x40335d47 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "Finalizer" (TID:0x10051900, sys_thread_t:0x80DE538, state:CW, native
ID:0xC04) prio=8
	at java.lang.Object.wait(Native Method)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:133)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:148)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:213)
	 PID: 1685
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BF3FF704, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BF3FF704, REG_EBP : BF3FF6EC
--------------------------------------------------------
	 PID: 1685
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtual_quick__ at 0x4029ea56 in libjvm.so
	L0_invokevirtual_quick__ at 0x4029ea56 in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "Reference Handler" (TID:0x10051948, sys_thread_t:0x80DAB18, state:CW,
native ID:0x803) prio=10
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:429)
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:132)
	 PID: 1684
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BF5FF75C, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BF5FF75C, REG_EBP : BF5FF744
--------------------------------------------------------
	 PID: 1684
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtualobject_quick__ at 0x4029f031 in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "Signal dispatcher" (TID:0x10051990, sys_thread_t:0x80D5FA0, state:CW,
native ID:0x402) prio=5
	 PID: 1683
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BF7FF970, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BF7FF970, REG_EBP : BF7FF958
--------------------------------------------------------
	 PID: 1683
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	sysSignalWait at 0x4033467f in libhpi.so	xmExecuteThread at 0x402d33b1 in
libjvm.	__clone at 0x40119e4a in libc.so.6
--------------------------------------------------------
    "main" (TID:0x100519D8, sys_thread_t:0x8058D38, state:R, native ID:0x400) prio=5
	at org.eclipse.swt.internal.motif.OS.XtSetValues(Native Method)
	at org.eclipse.swt.widgets.Composite.forceFocus(Composite.java:231)
	at
org.eclipse.gef.ui.parts.DomainEventDispatcher.dispatchMousePressed(DomainEventDispatcher.java:217)
	at
org.eclipse.draw2d.LightweightSystem$EventHandler.mouseDown(LightweightSystem.java:407)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:126)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1326)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:831)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
	 PID: 1668
	 ----- Register Values -----
REG_EAX : 0, REG_EBX : 8058D38, REG_ECX : 1, REG_EDX : 4033E3A0, REG_ESI : C,
REG_EDI : 8058D38, REG_EBP : BFFC72E0
--------------------------------------------------------
	 PID: 1668
	 ----- Native Stack -----
	??
--------------------------------------------------------
---------------------- LK component Dump Routine  ----------------------
Monitor pool info:
  Initial monitor count: 32
  Minimum number of free monitors before expansion: 5
  Pool will next be expanded by: 24
  Current total number of monitors: 48
  Current number of free monitors: 38
Monitor Pool Dump (flat &amp; inflated object-monitors):
  sys_mon_t:0x08057F68 infl_mon_t: 0x08057B50:
    java.lang.ref.Reference$Lock@1005F8C0/1005F8C8: &lt;unowned&gt;
	Waiting to be notified:
	    "Reference Handler" (0x80DAB18)
  sys_mon_t:0x08057FC8 infl_mon_t: 0x08057B90:
    java.lang.ref.ReferenceQueue$Lock@1005F4D0/1005F4D8: &lt;unowned&gt;
	Waiting to be notified:
	    "Finalizer" (0x80DE538)
  sys_mon_t:0x08057FF8 infl_mon_t: 0x08057BB0:
    org.apache.catalina.connector.http.HttpProcessor@107643E8/107643F0: &lt;unowned&gt;
	Waiting to be notified:
	    "HttpProcessor[0][0]" (0x8AA8A48)
  sys_mon_t:0x08058028 infl_mon_t: 0x08057BD0:
   
org.eclipse.core.internal.resources.DelayedSnapshotRunnable@10469AE8/10469AF0:
&lt;unowned&gt;
	Waiting to be notified:
	    "Snapshot" (0x8451AB8)
  sys_mon_t:0x08058058 infl_mon_t: 0x08057BF0:
    org.apache.catalina.connector.http.HttpProcessor@107C5610/107C5618: &lt;unowned&gt;
	Waiting to be notified:
	    "HttpProcessor[0][1]" (0x8A8AA38)
  sys_mon_t:0x08058088 infl_mon_t: 0x08057C10:
    org.apache.catalina.connector.http.HttpProcessor@107C97B0/107C97B8: &lt;unowned&gt;
	Waiting to be notified:
	    "HttpProcessor[0][2]" (0x8AB3648)
  sys_mon_t:0x080580B8 infl_mon_t: 0x08057C30:
    org.apache.catalina.connector.http.HttpProcessor@107D1448/107D1450: &lt;unowned&gt;
	Waiting to be notified:
	    "HttpProcessor[0][3]" (0x8AB5778)
  sys_mon_t:0x080580E8 infl_mon_t: 0x08057C50:
    org.apache.catalina.connector.http.HttpProcessor@107CE160/107CE168: &lt;unowned&gt;
	Waiting to be notified:
	    "HttpProcessor[0][4]" (0x8AB6C70)
JVM System Monitor Dump (registered monitors):
    Evacuation Region lock: &lt;unowned&gt;
    Heap Promotion lock: &lt;unowned&gt;
    Sleep lock: &lt;unowned&gt;
	Waiting to be notified:
	    "StandardManager[]" (0x89DECD0)
	    "StandardManager[/help]" (0x8A97878)
    Method trace lock: &lt;unowned&gt;
    Heap lock: owner "main" (0x8058D38), entry count 1
    Monitor Cache lock: owner "main" (0x8058D38), entry count 1
    JNI Pinning lock: &lt;unowned&gt;
    JNI Global Reference lock: &lt;unowned&gt;
    Classloader lock: &lt;unowned&gt;
    Binclass lock: &lt;unowned&gt;
    Monitor Registry lock: owner "main" (0x8058D38), entry count 1
    Thread queue lock: owner "main" (0x8058D38), entry count 1
Thread identifiers (as used in flat monitors):
    ident 0x0E "StandardManager[/help]" (0x8A97878) ee 0x08A9766C
    ident 0x0D "HttpProcessor[0][4]" (0x8AB6C70) ee 0x08AB6A64
    ident 0x0C "HttpProcessor[0][3]" (0x8AB5778) ee 0x08AB556C
    ident 0x0B "HttpProcessor[0][2]" (0x8AB3648) ee 0x08AB343C
    ident 0x0A "HttpProcessor[0][1]" (0x8A8AA38) ee 0x08A8A82C
    ident 0x07 "HttpProcessor[0][0]" (0x8AA8A48) ee 0x08AA883C
    ident 0x08 "HttpConnector[0]" (0x8A97330) ee 0x08A97124
    ident 0x06 "StandardManager[]" (0x89DECD0) ee 0x089DEAC4
    ident 0x09 "Snapshot" (0x8451AB8) ee 0x084518AC
    ident 0x05 "Finalizer" (0x80DE538) ee 0x080DE32C
    ident 0x04 "Reference Handler" (0x80DAB18) ee 0x080DA90C
    ident 0x03 "Signal dispatcher" (0x80D5FA0) ee 0x080D5D94
    ident 0x02 "main" (0x8058D38) ee 0x08058B2C
Java Object Monitor Dump (flat &amp; inflated object-monitors):
    java.lang.Class@1002E728/1002E730
        locknflags 00020000 Flat locked by thread ident 0x02, entry count 1
    java.lang.ref.ReferenceQueue$Lock@1005F4D0/1005F4D8
        locknflags 80000400 Monitor inflated infl_mon 0x08057B90
    java.lang.ref.Reference$Lock@1005F8C0/1005F8C8
        locknflags 80000200 Monitor inflated infl_mon 0x08057B50
    org.eclipse.core.internal.resources.DelayedSnapshotRunnable@10469AE8/10469AF0
        locknflags 80000600 Monitor inflated infl_mon 0x08057BD0
    java.net.PlainSocketImpl@1075D3D8/1075D3E0
        locknflags 00080000 Flat locked by thread ident 0x08, entry count 1
    org.apache.catalina.connector.http.HttpProcessor@107643E8/107643F0
        locknflags 80000500 Monitor inflated infl_mon 0x08057BB0
    org.apache.catalina.connector.http.HttpProcessor@107C5610/107C5618
        locknflags 80000700 Monitor inflated infl_mon 0x08057BF0
    org.apache.catalina.connector.http.HttpProcessor@107C97B0/107C97B8
        locknflags 80000800 Monitor inflated infl_mon 0x08057C10
    org.apache.catalina.connector.http.HttpProcessor@107CE160/107CE168
        locknflags 80000A00 Monitor inflated infl_mon 0x08057C50
    org.apache.catalina.connector.http.HttpProcessor@107D1448/107D1450
        locknflags 80000900 Monitor inflated infl_mon 0x08057C30
---------------------- END OF DUMP -------------------------------------
I've found the line in code which provokes the code:
org.eclipse.gef.ui.parts.DomainEventDispatcher
-&gt; dispatchMousePressed -&gt; line 217 -&gt; control.forceFocus()

Apparently forceFocus() crashes in the native code of SWT when it is invoked 
on the canvas if it has a child (the Text from the TextCellEditor).
Is there any possibility to avoid to use forceFocus there?
GEF 2.1 requires Eclipse 2.1

This is a known limitation of SWT on Motif, which is supposedly fixed in 2.1.  
Disposing a Text control during a FocusLost event crashes the VM.

Reopen if you reproduce on 2.1.
Is there anywhere a list of the prerequesites for GEF?
I think it is not really clear that GEF is not compatible with the current
version of Eclipse.
Are there any other known problems or binary incompatibilities?
I understand it is more comfortable to prerequesite a higher version of GEF as
trying to workaround a known problem, but for a lot of people it will be a
killer criterium: 
If you are writing a professional/commercial plugin right now, your main target
are the commercial Eclipse based products (-&gt;WSAD 5.0) and they are all based on
Eclipse 2.0.x
We will change our version numbers to 2.1.0, to make the requirement clear.
Websphere Workbench includes GEF 2.0.x, if you are working with Eclipse 2.0.x</WithStack>
    <WithOutStack>The environment is the following:
- SuSE Linux 8.1 on an IBM Thinkpad A20p
- IBM JRE 1.3.1
- Eclipse 2.0.2 Motif (IBM Websphere Studio Workbench 2.0.2 or IBM WSAD 5.0)
- GEF I20030123

To reproduce the problem do the following (using the Logic Diagram example):
- Create a new Logic Diagram and add a Label to it
- Double click on the label to edit it -&gt; this open the direct editor
- Click outside the direct editor to cancel the edition (without typing any new
text)
-&gt; the JVM crashes with the error message:

Unexpected exception has occurred:
ReportedExceptionCode = b, at ExceptionAddress =   425530
        ACCESS_VIOLATION occured outside Interpreter and JITed code
        ExecMode = EXECMODE_BYTECODE
        stackpointer=0xbffc73d0

Maybe it's a problem with SWT. But anyway GEF should try to workaround the
problem because it happens with the version of SWT which is included in products
like WSAD 5.


Here is the post-mortem coredump of the JVM:
------------
Thu Jan 23 10:32:52 2003
SIGABRT received in kill at 0x40077df1 in /lib/libc.so.6. Processing terminated.
PID: 1668
J2RE 1.3.1 IBM build cxia32131-20020622
Operating Environment
---------------------
Host		: tpyannic.
OS Level	: 2.4.19-4GB.#1 Fri Sep 13 13:14:56 UTC 2002
glibc Version	: 2.2.5
No. of Procs	: 1
Memory Info:
        total:    used:    free:  shared: buffers:  cached:
Mem:  527507456 517672960  9834496        0 62976000 248270848
Swap: 534118400        0 534118400
MemTotal:       515144 kB
MemFree:          9604 kB
MemShared:           0 kB
Buffers:         61500 kB
Cached:         242452 kB
SwapCached:          0 kB
Active:         126372 kB
Inactive:       332708 kB
HighTotal:           0 kB
HighFree:            0 kB
LowTotal:       515144 kB
LowFree:          9604 kB
SwapTotal:      521600 kB
SwapFree:       521600 kB
BigFree:             0 kB
User Limits (in bytes except for NOFILE and NPROC) -
	RLIMIT_FSIZE	: infinity
	RLIMIT_DATA	: infinity
	RLIMIT_STACK	: 2093056
	RLIMIT_CORE	: 0
	RLIMIT_NOFILE	: 1024
	RLIMIT_NPROC	: 4095
Application Environment
-----------------------
Signal Handlers - 
	SIGHUP		: intrDispatchMD (libhpi.so)
	SIGINT		: intrDispatchMD (libhpi.so)
	SIGQUIT		: intrDispatchMD (libhpi.so)
	SIGILL		: intrDispatchMD (libhpi.so)
	SIGTRAP		: intrDispatchMD (libhpi.so)
	SIGABRT		: intrDispatchMD (libhpi.so)
	SIGFPE		: intrDispatchMD (libhpi.so)
	SIGBUS		: intrDispatchMD (libhpi.so)
	SIGSEGV		: intrDispatchMD (libhpi.so)
	SIGPIPE		: ignored
	SIGUSR1		: sigusr1Handler (libhpi.so)
	SIGUSR2		: unknown handler
	SIGTERM		: intrDispatchMD (libhpi.so)
Environment Variables -
LESSKEY=/etc/lesskey.bin
MANPATH=/usr/local/man:/usr/share/man:/usr/X11R6/man:/opt/gnome/man
INFODIR=/usr/local/info:/usr/share/info:/usr/info
NNTPSERVER=news
DB2INSTANCE=db2inst1
KDE_MULTIHEAD=false
HOSTNAME=tpyannic
XKEYSYMDB=/usr/X11R6/lib/X11/XKeysymDB
SHELL=/bin/bash
TERM=xterm
HOST=tpyannic
XDM_MANAGED=/var/run/xdmctl/xdmctl-:0,maysd,mayfn,sched
PROFILEREAD=true
GS_LIB=/share/fonts
GNOME_PATH=:/opt/gnome:/usr
GTK_RC_FILES=/etc/gtk/gtkrc:/home/yannick/.gtkrc
KDEHOME=/home/yannick/.kde
JAVAHOME=/opt/eclipse-motif/jre
XSESSION_IS_UP=yes
USER=yannick
JRE_HOME=/usr/lib/java/jre
http_proxy=http://proxy.de.ibm.com
LS_COLORS=no=00:fi=00:di=01;34:ln=00;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31:ex=00;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.bat=01;32:*.btm=01;32:*.dll=01;32:*.tar=00;31:*.tbz=00;31:*.tgz=00;31:*.rpm=00;31:*.deb=00;31:*.arj=00;31:*.taz=00;31:*.lzh=00;31:*.zip=00;31:*.zoo=00;31:*.z=00;31:*.Z=00;31:*.gz=00;31:*.bz2=00;31:*.tb2=00;31:*.tz2=00;31:*.tbz2=00;31:*.avi=01;35:*.bmp=01;35:*.fli=01;35:*.gif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mng=01;35:*.mov=01;35:*.mpg=01;35:*.pcx=01;35:*.pbm=01;35:*.pgm=01;35:*.png=01;35:*.ppm=01;35:*.tga=01;35:*.tif=01;35:*.xbm=01;35:*.xpm=01;35:*.dl=01;35:*.gl=01;35:*.aiff=00;32:*.au=00;32:*.mid=00;32:*.mp3=00;32:*.ogg=00;32:*.voc=00;32:*.wav=00;32:
LD_LIBRARY_PATH=/opt/eclipse-motif/jre/bin:/opt/eclipse-motif/jre/bin/classic::/home/db2inst1/sqllib/lib
OPENWINHOME=/usr/openwin
XNLSPATH=/usr/X11R6/lib/X11/nls
HOSTTYPE=i386
ftp_proxy=proxy.de.ibm.com
LIBPATH=:/home/db2inst1/sqllib/lib
SESSION_MANAGER=local/tpyannic:/tmp/.ICE-unix/1167
PAGER=less
LD_HWCAP_MASK=0x20000000
MINICOM=-c on
KONSOLE_DCOP=DCOPRef(konsole-1394,konsole)
PATH=/usr/local/bin:/usr/bin:/usr/X11R6/bin:/bin:/java/bin:/usr/games:/opt/gnome2/bin:/opt/gnome/bin:/opt/kde3/bin:/usr/lpp/cmvc/bin:/usr/lib/java/jre/bin:/opt/gnome/bin:.:/home/db2inst1/sqllib/bin:/home/db2inst1/sqllib/adm:/home/db2inst1/sqllib/misc
GNOMEDIR=/opt/gnome
CPU=i686
JAVA_BINDIR=/usr/lib/java/jre/bin
LC_COLLATE=POSIX
PWD=/opt/eclipse-motif
INPUTRC=/etc/inputrc
KONSOLE_DCOP_SESSION=DCOPRef(konsole-1394,session-1)
JAVA_HOME=/usr/lib/java/jre
LANG=fr_FR@euro
TEXINPUTS=::/home/yannick/.TeX:/usr/share/doc/.TeX:/usr/doc/.TeX:/home/yannick/.TeX:/usr/share/doc/.TeX:/usr/doc/.TeX
HOME=/home/yannick
SHLVL=2
OSTYPE=linux
LESS_ADVANCED_PREPROCESSOR=no
no_proxy=localhost
LS_OPTIONS=-N --color=tty -T 0
WINDOWMANAGER=/usr/X11R6/bin/kde
VWSPATH=/home/db2inst1/sqllib
LOGNAME=yannick
MACHTYPE=i686-suse-linux
LESS=-M -I
PRINTER=deboel07
CLASSPATH=/home/db2inst1/sqllib/java/db2java.zip:/home/db2inst1/sqllib/java/db2jcc.jar:/home/db2inst1/sqllib/java/sqlj.zip:/home/db2inst1/sqllib/function:.
LESSOPEN=lessopen.sh %s
USE_FAM=
INFOPATH=/usr/local/info:/usr/share/info:/usr/info
DISPLAY=:0.0
LESSCLOSE=lessclose.sh %s %s
COLORTERM=
JAVA_ROOT=/usr/lib/java
IBM_JAVA_COMMAND_LINE=/opt/eclipse-motif/jre/bin/exe/java -cp
/opt/eclipse-motif/./startup.jar org.eclipse.core.launcher.Main -os linux -ws
motif -arch x86 -showsplash /opt/eclipse-motif/./eclipse -showsplash 600 -data
/tmp/test-workspace2/
Memory map
----------
08048000-0804c000 r-xp 00000000 03:02 340055     /opt/eclipse-motif/jre/bin/exe/java
0804c000-0804d000 rw-p 00003000 03:02 340055     /opt/eclipse-motif/jre/bin/exe/java
0804d000-08de4000 rwxp 00000000 00:00 0
10000000-1fb89000 rwxp 00000000 00:00 0
40000000-40012000 r-xp 00000000 03:02 20726      /lib/ld-2.2.5.so
40012000-40013000 rw-p 00011000 03:02 20726      /lib/ld-2.2.5.so
40013000-40014000 rw-p 00000000 00:00 0
40014000-40019000 r-xp 00000000 03:02 340061    
/opt/eclipse-motif/jre/bin/libxhpi.so
40019000-4001a000 rw-p 00004000 03:02 340061    
/opt/eclipse-motif/jre/bin/libxhpi.so
4001a000-4001b000 r--p 00000000 03:02 22148     
/usr/lib/locale/fr_FR@euro/LC_IDENTIFICATION
4001b000-4001c000 r--p 00000000 03:02 23025     
/usr/lib/locale/fr_FR@euro/LC_MEASUREMENT
4001c000-4001d000 r--p 00000000 03:02 22150     
/usr/lib/locale/fr_FR@euro/LC_TELEPHONE
4001d000-4001e000 r--p 00000000 03:02 22827     
/usr/lib/locale/fr_FR@euro/LC_ADDRESS
4001e000-4001f000 r--p 00000000 03:02 22834      /usr/lib/locale/fr_FR@euro/LC_NAME
4001f000-40020000 r--p 00000000 03:02 23031      /usr/lib/locale/fr_FR@euro/LC_PAPER
40020000-40021000 r--p 00000000 03:02 22169     
/usr/lib/locale/fr_FR@euro/LC_MESSAGES/SYS_LC_MESSAGES
40021000-4002f000 r-xp 00000000 03:02 20748      /lib/libpthread.so.0
4002f000-40036000 rw-p 0000e000 03:02 20748      /lib/libpthread.so.0
40036000-40048000 r-xp 00000000 03:02 20739      /lib/libnsl.so.1
40048000-40049000 rw-p 00011000 03:02 20739      /lib/libnsl.so.1
40049000-4004b000 rw-p 00000000 00:00 0
4004b000-4004d000 r-xp 00000000 03:02 20736      /lib/libdl.so.2
4004d000-4004e000 rw-p 00001000 03:02 20736      /lib/libdl.so.2
4004e000-40162000 r-xp 00000000 03:02 20732      /lib/libc.so.6
40162000-40168000 rw-p 00113000 03:02 20732      /lib/libc.so.6
40168000-4016d000 rw-p 00000000 00:00 0
4016d000-402ef000 r-xp 00000000 03:02 340073    
/opt/eclipse-motif/jre/bin/classic/libjvm.so
402ef000-402f5000 rw-p 00181000 03:02 340073    
/opt/eclipse-motif/jre/bin/classic/libjvm.so
402f5000-40308000 rw-p 00000000 00:00 0
40308000-4032a000 r-xp 00000000 03:02 20737      /lib/libm.so.6
4032a000-4032b000 rw-p 00021000 03:02 20737      /lib/libm.so.6
4032b000-4033d000 r-xp 00000000 03:02 340079    
/opt/eclipse-motif/jre/bin/libhpi.so
4033d000-4033f000 rw-p 00011000 03:02 340079    
/opt/eclipse-motif/jre/bin/libhpi.so
4033f000-40362000 rw-p 00000000 00:00 0
40362000-40bc1000 rwxp 00000000 00:00 0
40bc1000-40be4000 r-xp 00000000 03:02 340068    
/opt/eclipse-motif/jre/bin/libjava.so
40be4000-40be8000 rw-p 00022000 03:02 340068    
/opt/eclipse-motif/jre/bin/libjava.so
40be8000-40be9000 rw-p 00000000 00:00 0
40be9000-40bf7000 r-xp 00000000 03:02 340084    
/opt/eclipse-motif/jre/bin/libzip.so
40bf7000-40bfa000 rw-p 0000d000 03:02 340084    
/opt/eclipse-motif/jre/bin/libzip.so
40bfa000-413b2000 r--s 00000000 03:02 339996     /opt/eclipse-motif/jre/lib/rt.jar
413b2000-413e3000 rw-p 00000000 00:00 0
413e3000-41760000 r--s 00000000 03:02 340036     /opt/eclipse-motif/jre/lib/i18n.jar
41760000-41792000 r--p 00000000 03:02 22166      /usr/lib/locale/fr_FR@euro/LC_CTYPE
41792000-41793000 r--p 00000000 03:02 22170     
/usr/lib/locale/fr_FR@euro/LC_MONETARY
41793000-41799000 r--p 00000000 03:02 23022     
/usr/lib/locale/fr_FR@euro/LC_COLLATE
41799000-4179a000 r--p 00000000 03:02 22172      /usr/lib/locale/fr_FR@euro/LC_TIME
4179a000-4179b000 r--p 00000000 03:02 22647     
/usr/lib/locale/fr_FR@euro/LC_NUMERIC
4179b000-41a05000 r-xp 00000000 03:02 340070    
/opt/eclipse-motif/jre/bin/libjitc.so
41a05000-41a0c000 rw-p 00269000 03:02 340070    
/opt/eclipse-motif/jre/bin/libjitc.so
41a0c000-41d5a000 rw-p 00000000 00:00 0
41d5a000-41d65000 r--s 00000000 03:02 339971    
/opt/eclipse-motif/jre/lib/ext/indicim.jar
41d65000-41dc2000 r--s 00000000 03:02 339970    
/opt/eclipse-motif/jre/lib/ext/ibmjcaprovider.jar
41dc2000-41dc7000 r--s 00000000 03:02 339874     /opt/eclipse-motif/startup.jar
41dc7000-41de9000 rw-p 00000000 00:00 0
41de9000-41dfe000 r--s 00000000 03:02 140047    
/opt/eclipse-motif/plugins/org.eclipse.core.boot_2.0.2/boot.jar
41dfe000-41e1a000 r--p 00000000 03:02 23189     
/usr/share/locale/fr/LC_MESSAGES/libc.mo
41e1a000-41e1f000 r--s 00000000 03:02 21264      /usr/lib/gconv/gconv-modules.cache
41e1f000-41e21000 r-xp 00000000 03:02 21218      /usr/lib/gconv/ISO8859-1.so
41e21000-41e22000 rw-p 00001000 03:02 21218      /usr/lib/gconv/ISO8859-1.so
41e22000-41e24000 r-xp 00000000 03:02 21223      /usr/lib/gconv/ISO8859-15.so
41e24000-41e25000 rw-p 00001000 03:02 21223      /usr/lib/gconv/ISO8859-15.so
41e25000-41e57000 r--s 00000000 03:02 140055    
/opt/eclipse-motif/plugins/org.eclipse.core.runtime_2.0.2/runtime.jar
41e57000-4213c000 r--s 00000000 03:02 140598    
/opt/eclipse-motif/plugins/org.eclipse.ui_2.0.2/workbench.jar
4213c000-42152000 r--s 00000000 03:02 140041    
/opt/eclipse-motif/plugins/org.apache.xerces_4.0.7/xmlParserAPIs.jar
42152000-42271000 r--s 00000000 03:02 140045    
/opt/eclipse-motif/plugins/org.apache.xerces_4.0.7/xercesImpl.jar
42271000-422eb000 r--s 00000000 03:02 140134    
/opt/eclipse-motif/plugins/org.eclipse.core.resources_2.0.1/resources.jar
422eb000-42337000 r--s 00000000 03:02 140096    
/opt/eclipse-motif/plugins/org.eclipse.update.core_2.0.2/updatecore.jar
42337000-42358000 r--s 00000000 03:02 140160    
/opt/eclipse-motif/plugins/org.eclipse.help_2.0.2/help.jar
42358000-4242b000 r--s 00000000 03:02 291341    
/opt/eclipse-motif/plugins/org.eclipse.swt.motif_2.0.2/ws/motif/swt.jar
4242b000-42430000 r--s 00000000 03:02 140063    
/opt/eclipse-motif/plugins/org.eclipse.ant.core_2.0.1/antsupport.jar
42430000-42482000 r--s 00000000 03:02 140648    
/opt/eclipse-motif/plugins/org.eclipse.team.cvs.core_2.0.0/cvs.jar
42482000-424df000 r--s 00000000 03:02 165323    
/opt/eclipse-motif/plugins/org.eclipse.compare_2.0.0/compare.jar
424df000-424f5000 r--s 00000000 03:02 165379    
/opt/eclipse-motif/plugins/org.eclipse.help.ui_2.0.1/helpworkbench.jar
424f5000-42526000 r--s 00000000 03:02 339192    
/opt/eclipse-motif/plugins/org.eclipse.jdt.junit_2.0.1/junitsupport.jar
42526000-4273e000 r--s 00000000 03:02 338633    
/opt/eclipse-motif/plugins/org.eclipse.jdt.core_2.0.2/jdtcore.jar
4273e000-427af000 r--s 00000000 03:02 339482    
/opt/eclipse-motif/plugins/com.ibm.etools.xsd.wswb_1.0.0/xsd.jar
427af000-427de000 r--s 00000000 03:02 162846    
/opt/eclipse-motif/plugins/org.eclipse.search_2.0.1/search.jar
427de000-427df000 r-xp 00000000 03:02 291355    
/opt/eclipse-motif/plugins/org.eclipse.core.resources.linux_2.0.1/os/linux/x86/libcore_2_0_5.so
427df000-427e0000 rw-p 00000000 03:02 291355    
/opt/eclipse-motif/plugins/org.eclipse.core.resources.linux_2.0.1/os/linux/x86/libcore_2_0_5.so
427e0000-42825000 r-xp 00000000 03:02 291345    
/opt/eclipse-motif/plugins/org.eclipse.swt.motif_2.0.2/os/linux/x86/libswt-motif-2052.so
42825000-42828000 rw-p 00044000 03:02 291345    
/opt/eclipse-motif/plugins/org.eclipse.swt.motif_2.0.2/os/linux/x86/libswt-motif-2052.so
42828000-42829000 rw-p 00000000 00:00 0
42829000-429ad000 r-xp 00000000 03:02 339869     /opt/eclipse-motif/libXm.so.2.1
429ad000-429c0000 rw-p 00183000 03:02 339869     /opt/eclipse-motif/libXm.so.2.1
429c0000-429c1000 rw-p 00000000 00:00 0
429c1000-429c3000 r-xp 00000000 03:02 24852     
/usr/X11R6/lib/X11/locale/lib/common/xlcDef.so.2
429c3000-429c4000 rw-p 00001000 03:02 24852     
/usr/X11R6/lib/X11/locale/lib/common/xlcDef.so.2
429c4000-429cc000 r--s 00000000 03:02 140128    
/opt/eclipse-motif/plugins/org.apache.lucene_1.2.0/lucene-demos-1.2-rc4.jar
429cc000-429cd000 r--s 00000000 03:02 140629    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlets-common.jar
429cd000-429ce000 r--s 00000000 03:02 339260    
/opt/eclipse-motif/plugins/org.eclipse.platform.doc.isv_2.0.0/activeHelpSample.jar
429ce000-42ac2000 r-xp 00000000 03:02 24862      /usr/X11R6/lib/libX11.so.6.2
42ac2000-42ac6000 rw-p 000f4000 03:02 24862      /usr/X11R6/lib/libX11.so.6.2
42ac6000-42ad3000 r-xp 00000000 03:02 24870      /usr/X11R6/lib/libXext.so.6.4
42ad3000-42ad4000 rw-p 0000c000 03:02 24870      /usr/X11R6/lib/libXext.so.6.4
42ad4000-42b22000 r-xp 00000000 03:02 24890      /usr/X11R6/lib/libXt.so.6.0
42b22000-42b26000 rw-p 0004d000 03:02 24890      /usr/X11R6/lib/libXt.so.6.0
42b26000-42b2d000 r-xp 00000000 03:02 24882      /usr/X11R6/lib/libXp.so.6.2
42b2d000-42b2e000 rw-p 00006000 03:02 24882      /usr/X11R6/lib/libXp.so.6.2
42b2e000-42b36000 r-xp 00000000 03:02 24860      /usr/X11R6/lib/libSM.so.6.0
42b36000-42b37000 rw-p 00007000 03:02 24860      /usr/X11R6/lib/libSM.so.6.0
42b37000-42b4b000 r-xp 00000000 03:02 24858      /usr/X11R6/lib/libICE.so.6.3
42b4b000-42b4c000 rw-p 00013000 03:02 24858      /usr/X11R6/lib/libICE.so.6.3
42b4c000-42b4e000 rw-p 00000000 00:00 0
42b4e000-42b6a000 r-xp 00000000 03:02 24851     
/usr/X11R6/lib/X11/locale/lib/common/ximcp.so.2
42b6a000-42b6c000 rw-p 0001b000 03:02 24851     
/usr/X11R6/lib/X11/locale/lib/common/ximcp.so.2
42b6c000-42bcd000 r--s 00000000 03:02 162794    
/opt/eclipse-motif/plugins/org.eclipse.debug.ui_2.0.0/dtui.jar
42bcd000-42c48000 r--s 00000000 03:02 291326    
/opt/eclipse-motif/plugins/org.eclipse.update.ui_2.0.2/updateui.jar
42c48000-42c57000 r--s 00000000 03:02 291422    
/opt/eclipse-motif/plugins/org.eclipse.pde.runtime_2.0.0/pdert.jar
42c57000-42c5b000 r--s 00000000 03:02 140626    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/tomcatwrapper.jar
42c5b000-42c62000 r--s 00000000 03:02 140637    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/bootstrap.jar
42c62000-42c6a000 r--s 00000000 03:02 140627    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/jakarta-regexp-1.2.jar
42c6a000-42c6e000 r--s 00000000 03:02 140630    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/naming-factory.jar
42c6e000-42d6f000 rw-p 00102000 00:00 0
42d6f000-43027000 r--s 00000000 03:02 339004    
/opt/eclipse-motif/plugins/org.eclipse.jdt.ui_2.0.2/jdt.jar
43027000-43154000 r--s 00000000 03:02 338627    
/opt/eclipse-motif/plugins/org.eclipse.pde.ui_2.0.1/pdeui.jar
43154000-431f7000 r--s 00000000 03:02 200628    
/opt/eclipse-motif/plugins/org.eclipse.team.cvs.ui_2.0.1/teamcvsui.jar
431f7000-43284000 r--s 00000000 03:02 339101    
/opt/eclipse-motif/plugins/org.eclipse.jdt.debug.ui_2.0.2/jdiui.jar
43284000-432c1000 r--s 00000000 03:02 195784    
/opt/eclipse-motif/plugins/org.eclipse.team.ui_2.0.0/teamui.jar
432c1000-432e9000 r--s 00000000 03:02 140757    
/opt/eclipse-motif/plugins/org.eclipse.ui.externaltools_2.0.1/externaltools.jar
432e9000-43317000 r--s 00000000 03:02 155446    
/opt/eclipse-motif/plugins/org.eclipse.gef.examples.logic_2.0.1/runtime/logic.jar
43317000-43338000 r--s 00000000 03:02 140130    
/opt/eclipse-motif/plugins/org.apache.lucene_1.2.0/lucene-1.2-rc4.jar
43338000-433c9000 r--s 00000000 03:02 140631    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/catalina.jar
433c9000-433fd000 r--s 00000000 03:02 140645    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/jasper-compiler.jar
433fd000-4340e000 r--s 00000000 03:02 140635    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/jasper-runtime.jar
4340e000-43415000 r--s 00000000 03:02 140641    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/naming-common.jar
43415000-4341e000 r--s 00000000 03:02 140646    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/naming-resources.jar
4341e000-43432000 r--s 00000000 03:02 140640    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlet.jar
43432000-43437000 r--s 00000000 03:02 140639    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlets-default.jar
43437000-43439000 r--s 00000000 03:02 140633    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlets-invoker.jar
43439000-4343c000 r--s 00000000 03:02 140628    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlets-manager.jar
4343c000-4343e000 r--s 00000000 03:02 140638    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlets-snoop.jar
4343e000-43444000 r--s 00000000 03:02 140632    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/servlets-webdav.jar
43444000-4345f000 r--s 00000000 03:02 140644    
/opt/eclipse-motif/plugins/org.eclipse.tomcat_4.0.3/tomcat-util.jar
4345f000-43466000 r-xp 00000000 03:02 340080    
/opt/eclipse-motif/jre/bin/libnet.so
43466000-43467000 rw-p 00006000 03:02 340080    
/opt/eclipse-motif/jre/bin/libnet.so
43467000-4346d000 r--s 00000000 03:02 140169    
/opt/eclipse-motif/plugins/org.eclipse.help.webapp_2.0.2/WEB-INF/lib/webapp.jar
4346d000-4346e000 rw-p 00000000 00:00 0
43474000-4347d000 r-xp 00000000 03:02 20743      /lib/libnss_files.so.2
4347d000-4347e000 rw-p 00008000 03:02 20743      /lib/libnss_files.so.2
4347e000-4348f000 r--s 00000000 03:02 140170    
/opt/eclipse-motif/plugins/org.eclipse.help.webapp_2.0.2/WEB-INF/lib/jsp.jar
4348f000-43498000 r-xp 00000000 03:02 24856     
/usr/X11R6/lib/X11/locale/lib/common/xomGeneric.so.2
43498000-43499000 rw-p 00008000 03:02 24856     
/usr/X11R6/lib/X11/locale/lib/common/xomGeneric.so.2
43499000-434b4000 r--s 00000000 03:02 338681    
/opt/eclipse-motif/plugins/org.eclipse.jdt.launching_2.0.1/launching.jar
434b4000-434d1000 r--s 00000000 03:02 338640    
/opt/eclipse-motif/plugins/org.junit_3.7.0/junit.jar
434d1000-434dd000 r--s 00000000 03:02 338674    
/opt/eclipse-motif/plugins/org.eclipse.jdt.debug_2.0.2/jdi.jar
434dd000-4356d000 r--s 00000000 03:02 338675    
/opt/eclipse-motif/plugins/org.eclipse.jdt.debug_2.0.2/jdimodel.jar
4356d000-43591000 r--s 00000000 03:02 140653    
/opt/eclipse-motif/plugins/org.eclipse.update.ui.forms_2.0.0/forms.jar
43591000-435f7000 r--s 00000000 03:02 140068    
/opt/eclipse-motif/plugins/org.apache.ant_1.4.1/ant.jar
435f7000-4366a000 r--s 00000000 03:02 140070    
/opt/eclipse-motif/plugins/org.apache.ant_1.4.1/jakarta-ant-1.4.1-optional.jar
4366a000-436a3000 r--s 00000000 03:02 291449    
/opt/eclipse-motif/plugins/org.eclipse.pde.core_2.0.2/pdecore.jar
436a3000-436ae000 r--s 00000000 03:02 195800    
/opt/eclipse-motif/plugins/org.eclipse.team.cvs.ssh_2.0.0/teamcvsssh.jar
436ae000-436bc000 r--s 00000000 03:02 291380    
/opt/eclipse-motif/plugins/org.eclipse.pde.build_2.0.0/pdebuild.jar
436bc000-436d1000 r--s 00000000 03:02 140253    
/opt/eclipse-motif/plugins/org.eclipse.team.core_2.0.1/team.jar
436d1000-436e9000 r--s 00000000 03:02 140604    
/opt/eclipse-motif/plugins/org.eclipse.debug.core_2.0.0/dtcore.jar
436e9000-436f1000 r--s 00000000 03:02 291454    
/opt/eclipse-motif/plugins/org.eclipse.pde_2.0.2/pde.jar
436f1000-43713000 rw-p 00000000 00:00 0
43713000-437a4000 r--s 00000000 03:02 139576    
/opt/eclipse-motif/plugins/org.eclipse.gef_2.0.1/runtime/gef.jar
437a4000-437f8000 r--s 00000000 03:02 134833    
/opt/eclipse-motif/plugins/org.eclipse.draw2d_2.0.1/runtime/draw2d.jar
437f8000-43879000 rw-p 00000000 00:00 0
43a3c000-43b3d000 rw-p 005ad000 00:00 0
be1be000-be1bf000 ---p 00000000 00:00 0
be1bf000-be1c8000 rwxp 00001000 00:00 0
be1c8000-be1c9000 ---p 0000a000 00:00 0
be1c9000-be200000 rwxp 0000b000 00:00 0
be3be000-be3bf000 ---p 00000000 00:00 0
be3bf000-be3c8000 rwxp 00001000 00:00 0
be3c8000-be3c9000 ---p 0000a000 00:00 0
be3c9000-be400000 rwxp 0000b000 00:00 0
be5be000-be5bf000 ---p 00000000 00:00 0
be5bf000-be5c8000 rwxp 00001000 00:00 0
be5c8000-be5c9000 ---p 0000a000 00:00 0
be5c9000-be600000 rwxp 0000b000 00:00 0
be7be000-be7bf000 ---p 00000000 00:00 0
be7bf000-be7c8000 rwxp 00001000 00:00 0
be7c8000-be7c9000 ---p 0000a000 00:00 0
be7c9000-be800000 rwxp 0000b000 00:00 0
be9be000-be9bf000 ---p 00000000 00:00 0
be9bf000-be9c8000 rwxp 00001000 00:00 0
be9c8000-be9c9000 ---p 0000a000 00:00 0
be9c9000-bea00000 rwxp 0000b000 00:00 0
bebbe000-bebbf000 ---p 00000000 00:00 0
bebbf000-bebc8000 rwxp 00001000 00:00 0
bebc8000-bebc9000 ---p 0000a000 00:00 0
bebc9000-bec00000 rwxp 0000b000 00:00 0
bedbe000-bedbf000 ---p 00000000 00:00 0
bedbf000-bedc8000 rwxp 00001000 00:00 0
bedc8000-bedc9000 ---p 0000a000 00:00 0
bedc9000-bee00000 rwxp 0000b000 00:00 0
befbe000-befbf000 ---p 00000000 00:00 0
befbf000-befc8000 rwxp 00001000 00:00 0
befc8000-befc9000 ---p 0000a000 00:00 0
befc9000-bf000000 rwxp 0000b000 00:00 0
bf1be000-bf1bf000 ---p 00000000 00:00 0
bf1bf000-bf1c8000 rwxp 00001000 00:00 0
bf1c8000-bf1c9000 ---p 0000a000 00:00 0
bf1c9000-bf200000 rwxp 0000b000 00:00 0
bf3be000-bf3bf000 ---p 00000000 00:00 0
bf3bf000-bf3c8000 rwxp 00001000 00:00 0
bf3c8000-bf3c9000 ---p 0000a000 00:00 0
bf3c9000-bf400000 rwxp 0000b000 00:00 0
bf5be000-bf5bf000 ---p 00000000 00:00 0
bf5bf000-bf5c8000 rwxp 00001000 00:00 0
bf5c8000-bf5c9000 ---p 0000a000 00:00 0
bf5c9000-bf600000 rwxp 0000b000 00:00 0
bf7be000-bf7bf000 ---p 00000000 00:00 0
bf7bf000-bf7c8000 rwxp 00001000 00:00 0
bf7c8000-bf7c9000 ---p 0000a000 00:00 0
bf7c9000-bf800000 rwxp 0000b000 00:00 0
bffbf000-bffc8000 rwxp fffc0000 00:00 0
bffc8000-bffc9000 ---p fffc9000 00:00 0
bffc9000-c0000000 rwxp fffca000 00:00 0
	 PID: 1668
	 ----- Native Stack -----	Diagnostics_Impl at 40017409 in libxhpi.so
	dgGenerateJavacore at 4023DF89 in libjvm.so
	abortJVM at 402CEFA1 in libjvm.so	sysUnwindSignalCatchFrame at 40333A1F in
libhpi.so
	sysSignalCatchHandler at 40333AB1 in libhpi.so	intrDispatch at 403342CA in
libhpi.so
	intrDispatchMD at 4033452C in libhpi.s	raise at 4002A5EB in libpthread.so.0
	abort at 400794D9 in libc.so	intrDispatch at 403342CA in libhpi.so
	intrDispatchMD at 4033452C in libhpi.s	_XmPrimitiveImportArgs at 42944C62 in
libXm.so	XtSetValues at 42B05C23 in libXt.so.6
	Java_org_eclipse_swt_internal_motif_OS_XtSetValues at 42821C0F in
libswt-motif-2052.so
	??
	??
--------------------------------------------------------
---------------------- Exception Information ---------------------------
Application aborted in thread "main" (TID:0x100519D8)
 
Native stack at exception generation:
Program Name                                 Entry Name                      
Statement ID 
                                                                                   
 
---------------------- System Properties -------------------------------
J2RE 1.3.1 IBM build cxia32131-20020622
/opt/eclipse-motif/jre/bin/exe/java -cp /opt/eclipse-motif/./startup.jar
org.eclipse.core.launcher.Main -os linux -ws motif -arch x86 -showsplash
/opt/eclipse-motif/./eclipse -showsplash 600 -data /tmp/test-workspace2/
Java Home Dir:	/opt/eclipse-motif/jre
Java DLL Dir:	/opt/eclipse-motif/jre/bin
Sys Classpath:
/opt/eclipse-motif/jre/lib/rt.jar:/opt/eclipse-motif/jre/lib/i18n.jar:/opt/eclipse-motif/jre/classes
UserArgs:
	-Djava.class.path=/home/db2inst1/sqllib/java/db2java.zip:/home/db2inst1/sqllib/java/db2jcc.jar:/home/db2inst1/sqllib/java/sqlj.zip:/home/db2inst1/sqllib/function:.
	-Djava.class.path=/opt/eclipse-motif/./startup.jar
	-Dinvokedviajava
---------------------- XM component Dump Routine  ----------------------
Full thread dump Classic VM (J2RE 1.3.1 IBM build cxia32131-20020622, native
threads):
    "StandardManager[/help]" (TID:0x107D70C0, sys_thread_t:0x8A97878, state:CW,
native ID:0x440D) prio=5
	at java.lang.Thread.sleep(Native Method)
	at
org.apache.catalina.session.StandardManager.threadSleep(StandardManager.java:772)
	at org.apache.catalina.session.StandardManager.run(StandardManager.java:831)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1700
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BE1FF600, REG_ECX : 0, REG_EDX : 40035AC0, REG_ESI
: BE1FF608, REG_EDI : BE1FF600, REG_EBP : BE1FF7C8
--------------------------------------------------------
	 PID: 1700
	 ----- Native Stack -----	condvarTimedWait at 0x40333815 in libhpi.so
	sysMonitorWait at 0x40335d47 in libhpi.so
	xmThreadSleep at 0x402d29c0 in libjvm.so
	JVM_Sleep at 0x40210789 in libjvm.so
	??
	L0_invokenonvirtual_quick__ at 0x4029eb58 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "HttpProcessor[0][4]" (TID:0x107D7508, sys_thread_t:0x8AB6C70, state:CW,
native ID:0x3C0C) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:429)
	at org.apache.catalina.connector.http.HttpProcessor.await(HttpProcessor.java:378)
	at org.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.java:1102)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1698
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BE3FF6F8, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BE3FF6F8, REG_EBP : BE3FF6E0
--------------------------------------------------------
	 PID: 1698
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtual_quick_w__ at 0x4029f489 in libjvm.so
	L0_invokenonvirtual_quick__ at 0x4029eb63 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "HttpProcessor[0][3]" (TID:0x107B6F78, sys_thread_t:0x8AB5778, state:CW,
native ID:0x380B) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:429)
	at org.apache.catalina.connector.http.HttpProcessor.await(HttpProcessor.java:378)
	at org.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.java:1102)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1697
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BE5FF6F8, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BE5FF6F8, REG_EBP : BE5FF6E0
--------------------------------------------------------
	 PID: 1697
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtual_quick_w__ at 0x4029f489 in libjvm.so
	L0_invokenonvirtual_quick__ at 0x4029eb63 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "HttpProcessor[0][2]" (TID:0x107B6FC0, sys_thread_t:0x8AB3648, state:CW,
native ID:0x340A) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:429)
	at org.apache.catalina.connector.http.HttpProcessor.await(HttpProcessor.java:378)
	at org.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.java:1102)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1696
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BE7FF6F8, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BE7FF6F8, REG_EBP : BE7FF6E0
--------------------------------------------------------
	 PID: 1696
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtual_quick_w__ at 0x4029f489 in libjvm.so
	L0_invokenonvirtual_quick__ at 0x4029eb63 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "HttpProcessor[0][1]" (TID:0x107B7008, sys_thread_t:0x8A8AA38, state:CW,
native ID:0x3009) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:429)
	at org.apache.catalina.connector.http.HttpProcessor.await(HttpProcessor.java:378)
	at org.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.java:1102)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1695
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BE9FF6F8, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BE9FF6F8, REG_EBP : BE9FF6E0
--------------------------------------------------------
	 PID: 1695
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtual_quick_w__ at 0x4029f489 in libjvm.so
	L0_invokenonvirtual_quick__ at 0x4029eb63 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "HttpProcessor[0][0]" (TID:0x107B7050, sys_thread_t:0x8AA8A48, state:CW,
native ID:0x2C07) prio=5
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:429)
	at org.apache.catalina.connector.http.HttpProcessor.await(HttpProcessor.java:378)
	at org.apache.catalina.connector.http.HttpProcessor.run(HttpProcessor.java:1102)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1694
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BEDFF6F8, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BEDFF6F8, REG_EBP : BEDFF6E0
--------------------------------------------------------
	 PID: 1694
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtual_quick_w__ at 0x4029f489 in libjvm.so
	L0_invokenonvirtual_quick__ at 0x4029eb63 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "HttpConnector[0]" (TID:0x10729CE0, sys_thread_t:0x8A97330, state:R, native
ID:0x2806) prio=5
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:446)
	at java.net.ServerSocket.implAccept(ServerSocket.java:264)
	at java.net.ServerSocket.accept(ServerSocket.java:243)
	at org.apache.catalina.connector.http.HttpConnector.run(HttpConnector.java:993)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1693
	 ----- Register Values -----
REG_EAX : 0, REG_EBX : BEFFF82C, REG_ECX : BEFFF680, REG_EDX : BEFFF74C, REG_ESI
: 0, REG_EDI : 8A97330, REG_EBP : BEFFF6E8
--------------------------------------------------------
	 PID: 1693
	 ----- Native Stack -----
--------------------------------------------------------
    "StandardManager[]" (TID:0x10424458, sys_thread_t:0x89DECD0, state:CW,
native ID:0x2405) prio=5
	at java.lang.Thread.sleep(Native Method)
	at
org.apache.catalina.session.StandardManager.threadSleep(StandardManager.java:772)
	at org.apache.catalina.session.StandardManager.run(StandardManager.java:831)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1692
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BF1FF600, REG_ECX : 0, REG_EDX : 40035AC0, REG_ESI
: BF1FF608, REG_EDI : BF1FF600, REG_EBP : BF1FF7C8
--------------------------------------------------------
	 PID: 1692
	 ----- Native Stack -----	condvarTimedWait at 0x40333815 in libhpi.so
	sysMonitorWait at 0x40335d47 in libhpi.so
	xmThreadSleep at 0x402d29c0 in libjvm.so
	JVM_Sleep at 0x40210789 in libjvm.so
	??
	L0_invokenonvirtual_quick__ at 0x4029eb58 in libjvm.so
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "Snapshot" (TID:0x10050E90, sys_thread_t:0x8451AB8, state:CW, native
ID:0x1C08) prio=5
	at java.lang.Object.wait(Native Method)
	at
org.eclipse.core.internal.resources.DelayedSnapshotRunnable.run(DelayedSnapshotRunnable.java:41)
	at java.lang.Thread.run(Thread.java:512)
	 PID: 1690
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BEBFF618, REG_ECX : 0, REG_EDX : 40035AC0, REG_ESI
: BEBFF620, REG_EDI : BEBFF618, REG_EBP : BEBFF7E0
--------------------------------------------------------
	 PID: 1690
	 ----- Native Stack -----	condvarTimedWait at 0x40333815 in libhpi.so
	sysMonitorWait at 0x40335d47 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokeinterface_quick__ at 0x4029eede in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "Finalizer" (TID:0x10051900, sys_thread_t:0x80DE538, state:CW, native
ID:0xC04) prio=8
	at java.lang.Object.wait(Native Method)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:133)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:148)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:213)
	 PID: 1685
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BF3FF704, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BF3FF704, REG_EBP : BF3FF6EC
--------------------------------------------------------
	 PID: 1685
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtual_quick__ at 0x4029ea56 in libjvm.so
	L0_invokevirtual_quick__ at 0x4029ea56 in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "Reference Handler" (TID:0x10051948, sys_thread_t:0x80DAB18, state:CW,
native ID:0x803) prio=10
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:429)
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:132)
	 PID: 1684
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BF5FF75C, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BF5FF75C, REG_EBP : BF5FF744
--------------------------------------------------------
	 PID: 1684
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	lkMonitorWait at 0x40255164 in libjvm.so
	JVM_MonitorWait at 0x4020f4de in libjvm.so
	??
	L0_invokevirtualobject_quick__ at 0x4029f031 in libjvm.so
	mmipExecuteJava at 0x402990f3 in libjvm.so
	??
--------------------------------------------------------
    "Signal dispatcher" (TID:0x10051990, sys_thread_t:0x80D5FA0, state:CW,
native ID:0x402) prio=5
	 PID: 1683
	 ----- Register Values -----
REG_EAX : FFFFFFFC, REG_EBX : BF7FF970, REG_ECX : 8, REG_EDX : 40166C90, REG_ESI
: 40033070, REG_EDI : BF7FF970, REG_EBP : BF7FF958
--------------------------------------------------------
	 PID: 1683
	 ----- Native Stack -----	pthread_cond_wait at 0x4002614b in libpthread.so.0
	condvarWait at 0x403336da in libhpi.so
	sysMonitorWait at 0x40335d22 in libhpi.so
	sysSignalWait at 0x4033467f in libhpi.so	xmExecuteThread at 0x402d33b1 in
libjvm.	__clone at 0x40119e4a in libc.so.6
--------------------------------------------------------
    "main" (TID:0x100519D8, sys_thread_t:0x8058D38, state:R, native ID:0x400) prio=5
	at org.eclipse.swt.internal.motif.OS.XtSetValues(Native Method)
	at org.eclipse.swt.widgets.Composite.forceFocus(Composite.java:231)
	at
org.eclipse.gef.ui.parts.DomainEventDispatcher.dispatchMousePressed(DomainEventDispatcher.java:217)
	at
org.eclipse.draw2d.LightweightSystem$EventHandler.mouseDown(LightweightSystem.java:407)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:126)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1326)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:831)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
	 PID: 1668
	 ----- Register Values -----
REG_EAX : 0, REG_EBX : 8058D38, REG_ECX : 1, REG_EDX : 4033E3A0, REG_ESI : C,
REG_EDI : 8058D38, REG_EBP : BFFC72E0
--------------------------------------------------------
	 PID: 1668
	 ----- Native Stack -----
	??
--------------------------------------------------------
---------------------- LK component Dump Routine  ----------------------
Monitor pool info:
  Initial monitor count: 32
  Minimum number of free monitors before expansion: 5
  Pool will next be expanded by: 24
  Current total number of monitors: 48
  Current number of free monitors: 38
Monitor Pool Dump (flat &amp; inflated object-monitors):
  sys_mon_t:0x08057F68 infl_mon_t: 0x08057B50:
    java.lang.ref.Reference$Lock@1005F8C0/1005F8C8: &lt;unowned&gt;
	Waiting to be notified:
	    "Reference Handler" (0x80DAB18)
  sys_mon_t:0x08057FC8 infl_mon_t: 0x08057B90:
    java.lang.ref.ReferenceQueue$Lock@1005F4D0/1005F4D8: &lt;unowned&gt;
	Waiting to be notified:
	    "Finalizer" (0x80DE538)
  sys_mon_t:0x08057FF8 infl_mon_t: 0x08057BB0:
    org.apache.catalina.connector.http.HttpProcessor@107643E8/107643F0: &lt;unowned&gt;
	Waiting to be notified:
	    "HttpProcessor[0][0]" (0x8AA8A48)
  sys_mon_t:0x08058028 infl_mon_t: 0x08057BD0:
   
org.eclipse.core.internal.resources.DelayedSnapshotRunnable@10469AE8/10469AF0:
&lt;unowned&gt;
	Waiting to be notified:
	    "Snapshot" (0x8451AB8)
  sys_mon_t:0x08058058 infl_mon_t: 0x08057BF0:
    org.apache.catalina.connector.http.HttpProcessor@107C5610/107C5618: &lt;unowned&gt;
	Waiting to be notified:
	    "HttpProcessor[0][1]" (0x8A8AA38)
  sys_mon_t:0x08058088 infl_mon_t: 0x08057C10:
    org.apache.catalina.connector.http.HttpProcessor@107C97B0/107C97B8: &lt;unowned&gt;
	Waiting to be notified:
	    "HttpProcessor[0][2]" (0x8AB3648)
  sys_mon_t:0x080580B8 infl_mon_t: 0x08057C30:
    org.apache.catalina.connector.http.HttpProcessor@107D1448/107D1450: &lt;unowned&gt;
	Waiting to be notified:
	    "HttpProcessor[0][3]" (0x8AB5778)
  sys_mon_t:0x080580E8 infl_mon_t: 0x08057C50:
    org.apache.catalina.connector.http.HttpProcessor@107CE160/107CE168: &lt;unowned&gt;
	Waiting to be notified:
	    "HttpProcessor[0][4]" (0x8AB6C70)
JVM System Monitor Dump (registered monitors):
    Evacuation Region lock: &lt;unowned&gt;
    Heap Promotion lock: &lt;unowned&gt;
    Sleep lock: &lt;unowned&gt;
	Waiting to be notified:
	    "StandardManager[]" (0x89DECD0)
	    "StandardManager[/help]" (0x8A97878)
    Method trace lock: &lt;unowned&gt;
    Heap lock: owner "main" (0x8058D38), entry count 1
    Monitor Cache lock: owner "main" (0x8058D38), entry count 1
    JNI Pinning lock: &lt;unowned&gt;
    JNI Global Reference lock: &lt;unowned&gt;
    Classloader lock: &lt;unowned&gt;
    Binclass lock: &lt;unowned&gt;
    Monitor Registry lock: owner "main" (0x8058D38), entry count 1
    Thread queue lock: owner "main" (0x8058D38), entry count 1
Thread identifiers (as used in flat monitors):
    ident 0x0E "StandardManager[/help]" (0x8A97878) ee 0x08A9766C
    ident 0x0D "HttpProcessor[0][4]" (0x8AB6C70) ee 0x08AB6A64
    ident 0x0C "HttpProcessor[0][3]" (0x8AB5778) ee 0x08AB556C
    ident 0x0B "HttpProcessor[0][2]" (0x8AB3648) ee 0x08AB343C
    ident 0x0A "HttpProcessor[0][1]" (0x8A8AA38) ee 0x08A8A82C
    ident 0x07 "HttpProcessor[0][0]" (0x8AA8A48) ee 0x08AA883C
    ident 0x08 "HttpConnector[0]" (0x8A97330) ee 0x08A97124
    ident 0x06 "StandardManager[]" (0x89DECD0) ee 0x089DEAC4
    ident 0x09 "Snapshot" (0x8451AB8) ee 0x084518AC
    ident 0x05 "Finalizer" (0x80DE538) ee 0x080DE32C
    ident 0x04 "Reference Handler" (0x80DAB18) ee 0x080DA90C
    ident 0x03 "Signal dispatcher" (0x80D5FA0) ee 0x080D5D94
    ident 0x02 "main" (0x8058D38) ee 0x08058B2C
Java Object Monitor Dump (flat &amp; inflated object-monitors):
    java.lang.Class@1002E728/1002E730
        locknflags 00020000 Flat locked by thread ident 0x02, entry count 1
    java.lang.ref.ReferenceQueue$Lock@1005F4D0/1005F4D8
        locknflags 80000400 Monitor inflated infl_mon 0x08057B90
    java.lang.ref.Reference$Lock@1005F8C0/1005F8C8
        locknflags 80000200 Monitor inflated infl_mon 0x08057B50
    org.eclipse.core.internal.resources.DelayedSnapshotRunnable@10469AE8/10469AF0
        locknflags 80000600 Monitor inflated infl_mon 0x08057BD0
    java.net.PlainSocketImpl@1075D3D8/1075D3E0
        locknflags 00080000 Flat locked by thread ident 0x08, entry count 1
    org.apache.catalina.connector.http.HttpProcessor@107643E8/107643F0
        locknflags 80000500 Monitor inflated infl_mon 0x08057BB0
    org.apache.catalina.connector.http.HttpProcessor@107C5610/107C5618
        locknflags 80000700 Monitor inflated infl_mon 0x08057BF0
    org.apache.catalina.connector.http.HttpProcessor@107C97B0/107C97B8
        locknflags 80000800 Monitor inflated infl_mon 0x08057C10
    org.apache.catalina.connector.http.HttpProcessor@107CE160/107CE168
        locknflags 80000A00 Monitor inflated infl_mon 0x08057C50
    org.apache.catalina.connector.http.HttpProcessor@107D1448/107D1450
        locknflags 80000900 Monitor inflated infl_mon 0x08057C30
---------------------- END OF DUMP -------------------------------------
I've found the line in code which provokes the code:
org.eclipse.gef.ui.parts.DomainEventDispatcher
-&gt; dispatchMousePressed -&gt; line 217 -&gt; control.forceFocus()

Apparently forceFocus() crashes in the native code of SWT when it is invoked 
on the canvas if it has a child (the Text from the TextCellEditor).
Is there any possibility to avoid to use forceFocus there?
GEF 2.1 requires Eclipse 2.1

This is a known limitation of SWT on Motif, which is supposedly fixed in 2.1.  
Disposing a Text control during a FocusLost event crashes the VM.

Reopen if you reproduce on 2.1.
Is there anywhere a list of the prerequesites for GEF?
I think it is not really clear that GEF is not compatible with the current
version of Eclipse.
Are there any other known problems or binary incompatibilities?
I understand it is more comfortable to prerequesite a higher version of GEF as
trying to workaround a known problem, but for a lot of people it will be a
killer criterium: 
If you are writing a professional/commercial plugin right now, your main target
are the commercial Eclipse based products (-&gt;WSAD 5.0) and they are all based on
Eclipse 2.0.x
We will change our version numbers to 2.1.0, to make the requirement clear.
Websphere Workbench includes GEF 2.0.x, if you are working with Eclipse 2.0.x</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30065" />
    <CreationDate amount="2003-01-23 04:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Project meta-information</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hello,
I would suggest the following improvement in order to render more explicit the 
project naming when using with TeamCVS (shared project).
I would like to have the ability to show displayed in the navigator view the 
branch  which the project is plugued in. For instance I've in my navigator view 
two projects which corresponds to the same module in a repository but in two 
different branches. I would like to see :
Module1[head]
Module1[Branch X]
in my navigator in order to distinguish them simply. I recall in mind that this 
information is already present in the properties dialog box. Maybe this feature 
could be proposed as a decorator like other decorators...
regards
Xavier and Christophe
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>Hello,
I would suggest the following improvement in order to render more explicit the 
project naming when using with TeamCVS (shared project).
I would like to have the ability to show displayed in the navigator view the 
branch  which the project is plugued in. For instance I've in my navigator view 
two projects which corresponds to the same module in a repository but in two 
different branches. I would like to see :
Module1[head]
Module1[Branch X]
in my navigator in order to distinguish them simply. I recall in mind that this 
information is already present in the properties dialog box. Maybe this feature 
could be proposed as a decorator like other decorators...
regards
Xavier and Christophe
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30066" />
    <CreationDate amount="2003-01-23 04:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Trigger on CVS actions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hello,
It could be interesting to have triggers on CVS actions (commit, update, ...) 
for instance to notify users of a new version on a tagging action.
regards
Xavier
*** Bug 30067 has been marked as a duplicate of this bug. ***
Do you mean listeners, lime those used by the Java event handling?
I mean that once we made for instance a "tag version" command , an action is 
triggered . For instance an email is sent to a list of users. A more generally 
feature should be to enable for every kind of command in eclipse the ablility 
to associate a command (for instance a ant command).
regards
Xavier
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>Hello,
It could be interesting to have triggers on CVS actions (commit, update, ...) 
for instance to notify users of a new version on a tagging action.
regards
Xavier
*** Bug 30067 has been marked as a duplicate of this bug. ***
Do you mean listeners, lime those used by the Java event handling?
I mean that once we made for instance a "tag version" command , an action is 
triggered . For instance an email is sent to a list of users. A more generally 
feature should be to enable for every kind of command in eclipse the ablility 
to associate a command (for instance a ant command).
regards
Xavier
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30067" />
    <CreationDate amount="2003-01-23 04:23:00 -0500" />
    <DupId amount="30066" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Trigger on CVS actions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hello,
It could be interesting to have triggers on CVS actions (commit, update, ...) 
for instance to notify users of a new version on a tagging action.
regards
Xavier


*** This bug has been marked as a duplicate of 30066 ***</WithStack>
    <WithOutStack>Hello,
It could be interesting to have triggers on CVS actions (commit, update, ...) 
for instance to notify users of a new version on a tagging action.
regards
Xavier


*** This bug has been marked as a duplicate of 30066 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30068" />
    <CreationDate amount="2003-01-23 04:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unknown Protocol: c</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437338565521">
        <Exception>java.net.MalformedURLException</Exception>
        <Reason>unknown protocol: c</Reason>
        <Frames>
          <Frame depth="0">java.net.URL.&lt;init&gt;(URL.java:586)</Frame>
          <Frame depth="1">java.net.URL.&lt;init&gt;(URL.java:476)</Frame>
          <Frame depth="2">java.net.URL.&lt;init&gt;(URL.java:425)</Frame>
          <Frame depth="3">org.apache.xerces.impl.XMLEntityManager.startEntity(Unknown Source)</Frame>
          <Frame depth="4">org.apache.xerces.impl.XMLEntityManager.startDocumentEntity(Unknown Source)</Frame>
          <Frame depth="5">org.apache.xerces.impl.XMLDocumentScannerImpl.setInputSource(Unknown Source)</Frame>
          <Frame depth="6">org.apache.xerces.parsers.DTDConfiguration.parse(Unknown Source)</Frame>
          <Frame depth="7">org.apache.xerces.parsers.DTDConfiguration.parse(Unknown Source)</Frame>
          <Frame depth="8">org.apache.xerces.parsers.XMLParser.parse(Unknown Source)</Frame>
          <Frame depth="9">org.apache.xerces.parsers.DOMParser.parse(Unknown Source)</Frame>
          <Frame depth="10">org.eclipse.update.internal.ui.model.BookmarkUtil.parse(BookmarkUtil.java:21)</Frame>
          <Frame depth="11">org.eclipse.update.internal.ui.model.UpdateModel.startup(UpdateModel.java:27)</Frame>
          <Frame depth="12">org.eclipse.update.internal.ui.UpdateUIPlugin.startup(UpdateUIPlugin.java:144)</Frame>
          <Frame depth="13">org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:705)</Frame>
          <Frame depth="14">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:852)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338565521">
        <Exception>java.net.MalformedURLException</Exception>
        <Reason>unknown protocol: c</Reason>
        <Frames>
          <Frame depth="0">java.net.URL.&lt;init&gt;(Unknown Source)</Frame>
          <Frame depth="1">java.net.URL.&lt;init&gt;(Unknown Source)</Frame>
          <Frame depth="2">org.eclipse.core.launcher.Main.addDevEntries(Main.java:371)</Frame>
          <Frame depth="3">org.eclipse.core.launcher.Main.getDevPath(Main.java:284)</Frame>
          <Frame depth="4">org.eclipse.core.launcher.Main.getBootPath(Main.java:406)</Frame>
          <Frame depth="5">org.eclipse.core.launcher.Main.basicRun(Main.java:174)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.run(Main.java:704)</Frame>
          <Frame depth="7">org.eclipse.core.launcher.Main.main(Main.java:688)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>At startup if there is a new plug in I get an error saying "unkown protocol: c" 
and when I go to windows-&gt;preferences-&gt;Install/Update I get the error. I will 
attatch a screen shot of the error and my log file
Created attachment 3096
A screen shot of the error
Created attachment 3097
The log file showing the exception being thrown
Can you attach the plugin ?

************************************
java.net.MalformedURLException: unknown protocol: c
	at java.net.URL.&lt;init&gt;(URL.java:586)
	at java.net.URL.&lt;init&gt;(URL.java:476)
	at java.net.URL.&lt;init&gt;(URL.java:425)
	at org.apache.xerces.impl.XMLEntityManager.startEntity(Unknown Source)
	at org.apache.xerces.impl.XMLEntityManager.startDocumentEntity(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentScannerImpl.setInputSource(Unknown Source)
	at org.apache.xerces.parsers.DTDConfiguration.parse(Unknown Source)
	at org.apache.xerces.parsers.DTDConfiguration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.eclipse.update.internal.ui.model.BookmarkUtil.parse(BookmarkUtil.java:21)
	at org.eclipse.update.internal.ui.model.UpdateModel.startup(UpdateModel.java:27)
	at org.eclipse.update.internal.ui.UpdateUIPlugin.startup(UpdateUIPlugin.java:144)
	at
org.eclipse.core.internal.plugins.PluginDescriptor$1.run(PluginDescriptor.java:705)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:852)
***************************
The only plugin I add is the XSD http://www.eclipse.org/xsd/ plugin. Which also 
required the EMF plug-in http://www.eclipse.org/emf/. I am using the latest 
builds of both (including src and doc).
This is in Update UI - restoring the bookmarks.
We didn't see this error ever. Can you verify that it happens with M5 build?
M5 doesn't have this problem.
Thanks - closing.
I ran across this bug report while trying to figure what's wrong with my 
workspace.  I am running R3.1 M3.  I have added several plug-ins and have many 
other external plug-ins from M3 imported.  I did a lot of work in this 
workspace before trying to launch a workbench, so I can't pinpoint exactly 
when it started. 

Is there any new info about what this error means?

My launch configuration is an "Eclipse Application" config called "Workbench" 
which runs the application org.eclipse.ui.ide.workbench and uses all of the 
default settings in the launch config dialog. 

Here is the log:

!SESSION Wed Nov 17 09:45:39 PST 2004 -----------------------------------------
-
!ENTRY org.eclipse.core.launcher 4 0 Nov 17, 2004 09:45:39.67
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.net.MalformedURLException: unknown protocol: c
	at java.net.URL.&lt;init&gt;(Unknown Source)
	at java.net.URL.&lt;init&gt;(Unknown Source)
	at org.eclipse.core.launcher.Main.addDevEntries(Main.java:371)
	at org.eclipse.core.launcher.Main.getDevPath(Main.java:284)
	at org.eclipse.core.launcher.Main.getBootPath(Main.java:406)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:174)
	at org.eclipse.core.launcher.Main.run(Main.java:704)
	at org.eclipse.core.launcher.Main.main(Main.java:688)

Susan, the error appears to come from the eclipse launcher, not from update.
Moving to runtime for investigation.
Susan's error has nothing to do with the problem originally reported in this PR,
but rather is a duplicate of bug 78078, which has been fixed recently. Moving
back to update. Feel free to close it again. Susan, please see the indicated bug
for a workaround.
re-marking the original bug as fixed.</WithStack>
    <WithOutStack>At startup if there is a new plug in I get an error saying "unkown protocol: c" 
and when I go to windows-&gt;preferences-&gt;Install/Update I get the error. I will 
attatch a screen shot of the error and my log file
Created attachment 3096
A screen shot of the error
Created attachment 3097
The log file showing the exception being thrown
Can you attach the plugin ?

************************************
***************************
The only plugin I add is the XSD http://www.eclipse.org/xsd/ plugin. Which also 
required the EMF plug-in http://www.eclipse.org/emf/. I am using the latest 
builds of both (including src and doc).
This is in Update UI - restoring the bookmarks.
We didn't see this error ever. Can you verify that it happens with M5 build?
M5 doesn't have this problem.
Thanks - closing.
I ran across this bug report while trying to figure what's wrong with my 
workspace.  I am running R3.1 M3.  I have added several plug-ins and have many 
other external plug-ins from M3 imported.  I did a lot of work in this 
workspace before trying to launch a workbench, so I can't pinpoint exactly 
when it started. 

Is there any new info about what this error means?

My launch configuration is an "Eclipse Application" config called "Workbench" 
which runs the application org.eclipse.ui.ide.workbench and uses all of the 
default settings in the launch config dialog. 

Here is the log:

!SESSION Wed Nov 17 09:45:39 PST 2004 -----------------------------------------
-
!ENTRY org.eclipse.core.launcher 4 0 Nov 17, 2004 09:45:39.67
!MESSAGE Exception launching the Eclipse Platform:
!STACK


Susan, the error appears to come from the eclipse launcher, not from update.
Moving to runtime for investigation.
Susan's error has nothing to do with the problem originally reported in this PR,
but rather is a duplicate of bug 78078, which has been fixed recently. Moving
back to update. Feel free to close it again. Susan, please see the indicated bug
for a workaround.
re-marking the original bug as fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30069" />
    <CreationDate amount="2003-01-23 04:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Right-click on an unselected object shows the wrong context menu.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- Add on the diagram a LED.</Line>
          <Line>- Click outside the LED, so that it is not selected</Line>
          <Line>- Right-click on the LED: it will select the LED and open the context menu</Line>
          <Line>-&gt; the context menu which appears is the menu for an empty selection</Line>
          <Line>- Right-click a 2nd time on the already selected LED</Line>
          <Line>-&gt; the menu is now the correct one.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>GEF I20030121 under Linux/Motif.

To reproduce the problem use the Logic Editor example:
- Add on the diagram a LED.
- Click outside the LED, so that it is not selected
- Right-click on the LED: it will select the LED and open the context menu
-&gt; the context menu which appears is the menu for an empty selection
- Right-click a 2nd time on the already selected LED
-&gt; the menu is now the correct one.

It seems that GEF builds the menu before it selects the object, so that the menu 
corresponds to the previous selection.
It should do the opposite: select first and then build the menu
This is (partly) normal Motif behavior.  Selection doesn't change on on a right
click in Motif.  If you select a project in the Eclipse navigator and then right
click on a file, you'll see the project's context menu.  That's normal under
Motif.  But you'll also notice the project is still selected, even though you
right clicked on the file.  In GEF, however, if there is a target edit part
under the mouse when the right button is pressed, it will be selected.  This
seems awkward, since the context menu doesn't match the selection.  But if we
change it to behave like Motif, it will be wrong on GTK and Windows.  We can't
even break Motif behavior and select the edit part before building the context
menu because in Motif, the context menu appears before we get a mouse down
event.  We don't even know where the mouse is when the context menu is shown.
Cannot reproduce on Eclipse 2.1 M4.</WithStack>
    <WithOutStack>GEF I20030121 under Linux/Motif.

To reproduce the problem use the Logic Editor example:
- Add on the diagram a LED.
- Click outside the LED, so that it is not selected
- Right-click on the LED: it will select the LED and open the context menu
-&gt; the context menu which appears is the menu for an empty selection
- Right-click a 2nd time on the already selected LED
-&gt; the menu is now the correct one.

It seems that GEF builds the menu before it selects the object, so that the menu 
corresponds to the previous selection.
It should do the opposite: select first and then build the menu
This is (partly) normal Motif behavior.  Selection doesn't change on on a right
click in Motif.  If you select a project in the Eclipse navigator and then right
click on a file, you'll see the project's context menu.  That's normal under
Motif.  But you'll also notice the project is still selected, even though you
right clicked on the file.  In GEF, however, if there is a target edit part
under the mouse when the right button is pressed, it will be selected.  This
seems awkward, since the context menu doesn't match the selection.  But if we
change it to behave like Motif, it will be wrong on GTK and Windows.  We can't
even break Motif behavior and select the edit part before building the context
menu because in Motif, the context menu appears before we get a mouse down
event.  We don't even know where the mouse is when the context menu is shown.
Cannot reproduce on Eclipse 2.1 M4.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30070" />
    <CreationDate amount="2003-01-23 04:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Errors are generated when "package xxx.xxx.xxx" statement and source directory names do not have the same case.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>(1) Most available versions of javac (e.g. Sun's own javac's for windows) don't</Line>
          <Line>care what case the directory names are in. Seeing case-sensitivity in package</Line>
          <Line>naming can be very confusing to newcomers to eclipse.</Line>
          <Line>(2) Despite the fact that eclipse has complained about the case mismatch, the</Line>
          <Line>underlying build process has happily created the class files with no problem at</Line>
          <Line>all.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>If a source file is declared part of a package:
"package edu.foo.bar"
but the actual directory hierarchy has the names in a different case, e.g.:
"EDU/FOO/BAR/file.java"

then the incremental compiler complains (underlining the offending package 
statement), and a "build" command generates errors that the expected package 
hierarchy wasn't found.

This is all well and good except for two problems: 
(1) Most available versions of javac (e.g. Sun's own javac's for windows) don't 
care what case the directory names are in. Seeing case-sensitivity in package 
naming can be very confusing to newcomers to eclipse.
(2) Despite the fact that eclipse has complained about the case mismatch, the 
underlying build process has happily created the class files with no problem at 
all.

So, even though case-insensitivity for package names isn't built into the java 
spec, it is part of longstanding java usage, and should be respected by Eclipse.
The generated types should not allow you to run anything, as we do normally 
when errors were detected.
Current behavior is ok. Won't change case sensitivity for 2.1. 
Will reconsider later
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>If a source file is declared part of a package:
"package edu.foo.bar"
but the actual directory hierarchy has the names in a different case, e.g.:
"EDU/FOO/BAR/file.java"

then the incremental compiler complains (underlining the offending package 
statement), and a "build" command generates errors that the expected package 
hierarchy wasn't found.

This is all well and good except for two problems: 
(1) Most available versions of javac (e.g. Sun's own javac's for windows) don't 
care what case the directory names are in. Seeing case-sensitivity in package 
naming can be very confusing to newcomers to eclipse.
(2) Despite the fact that eclipse has complained about the case mismatch, the 
underlying build process has happily created the class files with no problem at 
all.

So, even though case-insensitivity for package names isn't built into the java 
spec, it is part of longstanding java usage, and should be respected by Eclipse.
The generated types should not allow you to run anything, as we do normally 
when errors were detected.
Current behavior is ok. Won't change case sensitivity for 2.1. 
Will reconsider later
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30071" />
    <CreationDate amount="2003-01-23 04:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Workbench] adopt SWTUtil</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>there exist 3 copies of this useful class - maybe platform could adopt it and 
then we could share the code
There are no plans for the UI team to work on this defect until higher priority 
items are addressed. 
This is an ugly code smell that could easily be fixed.
In my current 3.0 installation there are 8 (!) copies of this class. I have now 
created the 9th one in oder not to use internal packages...
There are currently no plans to work on this feature</WithStack>
    <WithOutStack>there exist 3 copies of this useful class - maybe platform could adopt it and 
then we could share the code
There are no plans for the UI team to work on this defect until higher priority 
items are addressed. 
This is an ugly code smell that could easily be fixed.
In my current 3.0 installation there are 8 (!) copies of this class. I have now 
created the 9th one in oder not to use internal packages...
There are currently no plans to work on this feature</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30072" />
    <CreationDate amount="2003-01-23 04:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>adopt Assert</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>we have 9 copies in the SDK !
jface is independent from core so we should at most need 2
There's no point exposing Assert now that we are using JDK 1.4.  You can now use
the assert keyword.
the assert keyword is bogus - you have to _explicitly_ turn on the runtime check
for it. that means we will not delete the 9 Assert classes that we have. 
Reopening for consideration
The org.eclipse.core.runtime.Assert class has been exposed as a public API by the org.eclipse.equinox.common plugin and re-exported by the org.eclipse.common.runtime.

The "other" Assert's are present in the:
org.eclipse.jdt.core.tests.builder
org.eclipse.core.internal.expressions
org.eclipse.core.internal.runtime
org.eclipse.jdt.internal.core
org.eclipse.jdt.internal.corext
org.eclipse.test.internal.performance.data
org.eclipse.ui.internal.misc
org.eclipse.update.internal.core
org.eclipse.webdav.dom
org.eclipse.webdav.internal.kernel.utils

(+ 2 Jface cases that probably can be combined)

Plus, the AssertionFailedException now exposed as an API in the same way and is duplicated by:
org.eclipse.core.internal.expressions
org.eclipse.jdt.core.tests.builder
org.eclipse.webdav.internal.kernel.utils
org.eclipse.jdt.internal.compiler.flow
org.eclipse.jdt.internal.core
org.eclipse.test.internal.performance.data
org.eclipse.webdav.dom


Oleg could you please open bug reports against the various components that still use Assert (even better provide patch) and then close this bug.
The Assert and AssertionFailedException are now provided by the org.eclipse.equinox.common plugin (package org.eclipse.core.runtime).

I recorded individual bugs for the plugins in the eclipse.org repository that depend on org.eclipse.equinox.common and provide they own copies of Assert or AssertionFailedException classes:

Bug 135110
Bug 135134
Bug 135135
Bug 135136
Bug 135139
Bug 135140

Filed bug 155788 for org.eclipse.jface.util.Assert.</WithStack>
    <WithOutStack>we have 9 copies in the SDK !
jface is independent from core so we should at most need 2
There's no point exposing Assert now that we are using JDK 1.4.  You can now use
the assert keyword.
the assert keyword is bogus - you have to _explicitly_ turn on the runtime check
for it. that means we will not delete the 9 Assert classes that we have. 
Reopening for consideration
The org.eclipse.core.runtime.Assert class has been exposed as a public API by the org.eclipse.equinox.common plugin and re-exported by the org.eclipse.common.runtime.

The "other" Assert's are present in the:
org.eclipse.jdt.core.tests.builder
org.eclipse.core.internal.expressions
org.eclipse.core.internal.runtime
org.eclipse.jdt.internal.core
org.eclipse.jdt.internal.corext
org.eclipse.test.internal.performance.data
org.eclipse.ui.internal.misc
org.eclipse.update.internal.core
org.eclipse.webdav.dom
org.eclipse.webdav.internal.kernel.utils

(+ 2 Jface cases that probably can be combined)

Plus, the AssertionFailedException now exposed as an API in the same way and is duplicated by:
org.eclipse.core.internal.expressions
org.eclipse.jdt.core.tests.builder
org.eclipse.webdav.internal.kernel.utils
org.eclipse.jdt.internal.compiler.flow
org.eclipse.jdt.internal.core
org.eclipse.test.internal.performance.data
org.eclipse.webdav.dom


Oleg could you please open bug reports against the various components that still use Assert (even better provide patch) and then close this bug.
The Assert and AssertionFailedException are now provided by the org.eclipse.equinox.common plugin (package org.eclipse.core.runtime).

I recorded individual bugs for the plugins in the eclipse.org repository that depend on org.eclipse.equinox.common and provide they own copies of Assert or AssertionFailedException classes:

Bug 135110
Bug 135134
Bug 135135
Bug 135136
Bug 135139
Bug 135140

Filed bug 155788 for org.eclipse.jface.util.Assert.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30073" />
    <CreationDate amount="2003-01-23 04:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Graphical Editor is not refreshed properly when scrollbars disappear</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="11">
      <source_code type="assignment">
        <location start="1864" end="1897" />
        <code>Display d = Display.getDefault();</code>
      </source_code>
      <source_code type="assignment">
        <location start="1898" end="1925" />
        <code>Shell shell = new Shell(d);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1926" end="1972" />
        <code>shell.setLayout(new FillLayout(SWT.VERTICAL));</code>
      </source_code>
      <source_code type="assignment">
        <location start="1974" end="2043" />
        <code>final Canvas canvas = new Canvas(shell, SWT.H_SCROLL | SWT.V_SCROLL);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2045" end="2256" />
        <code>canvas.addControlListener(new ControlListener() {
	public void controlMoved(ControlEvent e) {
		System.out.println("moved");
	}
	public void controlResized(ControlEvent e) {
		System.out.println("resized");
	}
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="2260" end="2312" />
        <code>final Button button = new Button(shell, SWT.TOGGLE);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2313" end="2355" />
        <code>button.setText("show vertical scrollbar");</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2356" end="2522" />
        <code>button.addSelectionListener(new SelectionAdapter() {
	public void widgetSelected(SelectionEvent e) {
		canvas.getVerticalBar().setVisible(button.getSelection());
	}
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2526" end="2549" />
        <code>shell.setSize(600,500);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2550" end="2563" />
        <code>shell.open();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2622" end="2634" />
        <code>d.sleep();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="20">
        <Lines>
          <Line>- Put some object on the diagram and place them so that scroll bars appear in</Line>
          <Line>the editor</Line>
          <Line>- Move the objects back so that the scroll bars are no longer necessary</Line>
          <Line>-&gt; under Motif, the editor is refreshed under the scroll bars with the wrong color.</Line>
          <Line>See screenshot as attachment</Line>
          <Line>Created attachment 3098</Line>
          <Line>screenshot of the problem</Line>
          <Line>What version of Eclipse are you using?  I'm noticing more refresh problems than</Line>
          <Line>just what you've described on M4.  Performance type problems where a refresh</Line>
          <Line>takes 20-30 seconds (like simply selecting an edit part).  I notice your problem</Line>
          <Line>in both M4 and 2.0.2 versions of Eclipse.</Line>
          <Line>I'm using Eclipse 2.0.2 (our target platform is WSAD 5)</Line>
          <Line>You should be using the version of GEF distributed with WSAD 5.0.</Line>
          <Line>Has this been reproduced on M5?</Line>
          <Line>Yes it is still in M5...</Line>
          <Line>SWT team- there seems to be some inconsistencies with Scrollable.computeTrim on</Line>
          <Line>various platforms.  Can you comment on this?</Line>
          <Line>We need to create a simple wad and run it on all platforms as comparison.</Line>
          <Line>I believe what the user is seeing are disabled scrollbars. I was just looking</Line>
          <Line>for a quick comment to see if there were any known issues.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- on motif, gtk and photon.  Checked by Silenio</Line>
          <Line>- Silenio has taken care of Mac</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>GEF I20030121 under Linux/Motif

To reproduce the problem, use the Logic Editor example:
- Put some object on the diagram and place them so that scroll bars appear in
the editor
- Move the objects back so that the scroll bars are no longer necessary
-&gt; under Motif, the editor is refreshed under the scroll bars with the wrong color.
See screenshot as attachment
Created attachment 3098
screenshot of the problem
What version of Eclipse are you using?  I'm noticing more refresh problems than
just what you've described on M4.  Performance type problems where a refresh
takes 20-30 seconds (like simply selecting an edit part).  I notice your problem
in both M4 and 2.0.2 versions of Eclipse.  
I'm using Eclipse 2.0.2 (our target platform is WSAD 5)
You should be using the version of GEF distributed with WSAD 5.0.
Has this been reproduced on M5?
Yes it is still in M5... 
SWT team- there seems to be some inconsistencies with Scrollable.computeTrim on 
various platforms.  Can you comment on this?
We need to create a simple wad and run it on all platforms as comparison.
I believe what the user is seeing are disabled scrollbars. I was just looking 
for a quick comment to see if there were any known issues.

More info.  The canvas in the picture has NO_RESIZE_REDRAW and probably 
NO_BACKGROUND set on it.  Moving to GEF
Moving back to SWT. I can reproduce this with our latest code.  The problem is 
not simply "cheese".  We are clipped to the client area, and it seems to be 
different on Motif.

On Windows, hiding the scrollbar causes a ResizeEvent. I haven't looked into 
the cause yet, but if this didn't happen on Motif, it would cause us not to 
expand our "figure" to the region previously occupied by the scrollbar.
Bug in SWT.  On Win32, hiding a scrollbar causes a resize event.  On Motif, it 
does not. Have not checked Carbon or GTK versions.

Display d = Display.getDefault();
Shell shell = new Shell(d);
shell.setLayout(new FillLayout(SWT.VERTICAL));

final Canvas canvas = new Canvas(shell, SWT.H_SCROLL | SWT.V_SCROLL);

canvas.addControlListener(new ControlListener() {
	public void controlMoved(ControlEvent e) {
		System.out.println("moved");
	}
	public void controlResized(ControlEvent e) {
		System.out.println("resized");
	}
});

final Button button = new Button(shell, SWT.TOGGLE);
button.setText("show vertical scrollbar");
button.addSelectionListener(new SelectionAdapter() {
	public void widgetSelected(SelectionEvent e) {
		canvas.getVerticalBar().setVisible(button.getSelection());
	}
});

shell.setSize(600,500);
shell.open();
while (!shell.isDisposed())
	while (!d.readAndDispatch())
		d.sleep();

Don't get resize event on GTK or Mac either.

Grant, please look at this for all platforms.
Approved for RC3 by Veronika.
Approved by Mike for RC3.
*** Bug 26499 has been marked as a duplicate of this bug. ***
Fixed &gt; 0314:
- on motif, gtk and photon.  Checked by Silenio
- Silenio has taken care of Mac

GTK is sending resize events always, even when setVisibility(boolean) does not 
change the visibility.
Fixed &gt; 0401, on various platforms.</WithStack>
    <WithOutStack>GEF I20030121 under Linux/Motif

To reproduce the problem, use the Logic Editor example:
- Put some object on the diagram and place them so that scroll bars appear in
the editor
- Move the objects back so that the scroll bars are no longer necessary
-&gt; under Motif, the editor is refreshed under the scroll bars with the wrong color.
See screenshot as attachment
Created attachment 3098
screenshot of the problem
What version of Eclipse are you using?  I'm noticing more refresh problems than
just what you've described on M4.  Performance type problems where a refresh
takes 20-30 seconds (like simply selecting an edit part).  I notice your problem
in both M4 and 2.0.2 versions of Eclipse.  
I'm using Eclipse 2.0.2 (our target platform is WSAD 5)
You should be using the version of GEF distributed with WSAD 5.0.
Has this been reproduced on M5?
Yes it is still in M5... 
SWT team- there seems to be some inconsistencies with Scrollable.computeTrim on 
various platforms.  Can you comment on this?
We need to create a simple wad and run it on all platforms as comparison.
I believe what the user is seeing are disabled scrollbars. I was just looking 
for a quick comment to see if there were any known issues.

More info.  The canvas in the picture has NO_RESIZE_REDRAW and probably 
NO_BACKGROUND set on it.  Moving to GEF
Moving back to SWT. I can reproduce this with our latest code.  The problem is 
not simply "cheese".  We are clipped to the client area, and it seems to be 
different on Motif.

On Windows, hiding the scrollbar causes a ResizeEvent. I haven't looked into 
the cause yet, but if this didn't happen on Motif, it would cause us not to 
expand our "figure" to the region previously occupied by the scrollbar.
Bug in SWT.  On Win32, hiding a scrollbar causes a resize event.  On Motif, it 
does not. Have not checked Carbon or GTK versions.

Display d = Display.getDefault();
Shell shell = new Shell(d);
shell.setLayout(new FillLayout(SWT.VERTICAL));

final Canvas canvas = new Canvas(shell, SWT.H_SCROLL | SWT.V_SCROLL);

canvas.addControlListener(new ControlListener() {
	public void controlMoved(ControlEvent e) {
		System.out.println("moved");
	}
	public void controlResized(ControlEvent e) {
		System.out.println("resized");
	}
});

final Button button = new Button(shell, SWT.TOGGLE);
button.setText("show vertical scrollbar");
button.addSelectionListener(new SelectionAdapter() {
	public void widgetSelected(SelectionEvent e) {
		canvas.getVerticalBar().setVisible(button.getSelection());
	}
});

shell.setSize(600,500);
shell.open();
while (!shell.isDisposed())
	while (!d.readAndDispatch())
		d.sleep();

Don't get resize event on GTK or Mac either.

Grant, please look at this for all platforms.
Approved for RC3 by Veronika.
Approved by Mike for RC3.
*** Bug 26499 has been marked as a duplicate of this bug. ***
Fixed &gt; 0314:
- on motif, gtk and photon.  Checked by Silenio
- Silenio has taken care of Mac

GTK is sending resize events always, even when setVisibility(boolean) does not 
change the visibility.
Fixed &gt; 0401, on various platforms.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30074" />
    <CreationDate amount="2003-01-23 05:02:00 -0500" />
    <DupId amount="30893" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Key Handler doesn't work under Motif</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>GEF I20030121
Eclipse 2.0.2 / Linux/Motif

When using the Logic Editor under motif, the keys DEL and F2 don't work.
Deletion and edition can only be completed with the mouse.
Delete works now.  SWT had changed the KeyEvent for 2.1.
F2 is still a Workbench problem.

*** This bug has been marked as a duplicate of 30893 ***</WithStack>
    <WithOutStack>GEF I20030121
Eclipse 2.0.2 / Linux/Motif

When using the Logic Editor under motif, the keys DEL and F2 don't work.
Deletion and edition can only be completed with the mouse.
Delete works now.  SWT had changed the KeyEvent for 2.1.
F2 is still a Workbench problem.

*** This bug has been marked as a duplicate of 30893 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30075" />
    <CreationDate amount="2003-01-23 05:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE during shutdown</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437338565531">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.setDocument(CompilationUnitEditor.java:354)</Frame>
          <Frame depth="1">org.eclipse.jface.text.source.SourceViewer.setDocument(SourceViewer.java:272)</Frame>
          <Frame depth="2">org.eclipse.jface.text.TextViewer$1.widgetDisposed(TextViewer.java:1125)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:98)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:861)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Widget.releaseWidget(Widget.java:746)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Control.releaseWidget(Control.java:1407)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Scrollable.releaseWidget(Scrollable.java:184)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:364)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Canvas.releaseWidget(Canvas.java:114)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Canvas.releaseWidget(Canvas.java:114)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Canvas.releaseWidget(Canvas.java:114)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Decorations.releaseWidget(Decorations.java:611)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Shell.releaseWidget(Shell.java:693)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Widget.dispose(Widget.java:368)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Shell.dispose(Shell.java:470)</Frame>
          <Frame depth="46">org.eclipse.jface.window.Window.close(Window.java:223)</Frame>
          <Frame depth="47">org.eclipse.jface.window.ApplicationWindow.close(ApplicationWindow.java:224)</Frame>
          <Frame depth="48">org.eclipse.ui.internal.WorkbenchWindow.hardClose(WorkbenchWindow.java:936)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.WorkbenchWindow.busyClose(WorkbenchWindow.java:337)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.WorkbenchWindow.access$3(WorkbenchWindow.java:326)</Frame>
          <Frame depth="51">org.eclipse.ui.internal.WorkbenchWindow$2.run(WorkbenchWindow.java:382)</Frame>
          <Frame depth="52">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.WorkbenchWindow.close(WorkbenchWindow.java:380)</Frame>
          <Frame depth="54">org.eclipse.jface.window.WindowManager.close(WindowManager.java:102)</Frame>
          <Frame depth="55">org.eclipse.ui.internal.Workbench$5.run(Workbench.java:260)</Frame>
          <Frame depth="56">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:852)</Frame>
          <Frame depth="57">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="58">org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:257)</Frame>
          <Frame depth="59">org.eclipse.ui.internal.Workbench.access$7(Workbench.java:214)</Frame>
          <Frame depth="60">org.eclipse.ui.internal.Workbench$7.run(Workbench.java:390)</Frame>
          <Frame depth="61">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)</Frame>
          <Frame depth="62">org.eclipse.ui.internal.Workbench.close(Workbench.java:388)</Frame>
          <Frame depth="63">org.eclipse.ui.internal.Workbench.close(Workbench.java:380)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.close(Workbench.java:374)</Frame>
          <Frame depth="65">org.eclipse.ui.internal.QuitAction.run(QuitAction.java:31)</Frame>
          <Frame depth="66">org.eclipse.jface.action.Action.runWithEvent(Action.java:804)</Frame>
          <Frame depth="67">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:422)</Frame>
          <Frame depth="68">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:374)</Frame>
          <Frame depth="69">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:368)</Frame>
          <Frame depth="70">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:69)</Frame>
          <Frame depth="71">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="72">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)</Frame>
          <Frame depth="73">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="74">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="75">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1467)</Frame>
          <Frame depth="76">org.eclipse.ui.internal.Workbench.run(Workbench.java:1450)</Frame>
          <Frame depth="77">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="78">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="79">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="80">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="81">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="82">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="83">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="84">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="85">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20030115

When exiting my self-hosted dev workspace, I noticed the following entry in 
the .log during shutdown. I had nothing special in my workspace though.

!ENTRY org.eclipse.ui.workbench 4 2 Jan 23, 2003 11:42:41.932
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
        at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer
.setDocument(CompilationUnitEditor.java:354)
        at org.eclipse.jface.text.source.SourceViewer.setDocument
(SourceViewer.java:272)
        at org.eclipse.jface.text.TextViewer$1.widgetDisposed
(TextViewer.java:1125)
        at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:98)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:861)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)
        at org.eclipse.swt.widgets.Widget.releaseWidget(Widget.java:746)
        at org.eclipse.swt.widgets.Control.releaseWidget(Control.java:1407)
        at org.eclipse.swt.widgets.Scrollable.releaseWidget(Scrollable.java:184)
        at org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:364)
        at org.eclipse.swt.widgets.Canvas.releaseWidget(Canvas.java:114)
        at org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)
        at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)
        at org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)
        at org.eclipse.swt.widgets.Canvas.releaseWidget(Canvas.java:114)
        at org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)
        at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)
        at org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)
        at org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)
        at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)
        at org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)
        at org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)
        at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)
        at org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)
        at org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)
        at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)
        at org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)
        at org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)
        at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)
        at org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)
        at org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)
        at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)
        at org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)
        at org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)
        at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)
        at org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)
        at org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:711)
        at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:315)
        at org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:363)
        at org.eclipse.swt.widgets.Canvas.releaseWidget(Canvas.java:114)
        at org.eclipse.swt.widgets.Decorations.releaseWidget
(Decorations.java:611)
        at org.eclipse.swt.widgets.Shell.releaseWidget(Shell.java:693)
        at org.eclipse.swt.widgets.Widget.dispose(Widget.java:368)
        at org.eclipse.swt.widgets.Shell.dispose(Shell.java:470)
        at org.eclipse.jface.window.Window.close(Window.java:223)
        at org.eclipse.jface.window.ApplicationWindow.close
(ApplicationWindow.java:224)
        at org.eclipse.ui.internal.WorkbenchWindow.hardClose
(WorkbenchWindow.java:936)
        at org.eclipse.ui.internal.WorkbenchWindow.busyClose
(WorkbenchWindow.java:337)
        at org.eclipse.ui.internal.WorkbenchWindow.access$3
(WorkbenchWindow.java:326)
        at org.eclipse.ui.internal.WorkbenchWindow$2.run
(WorkbenchWindow.java:382)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)
        at org.eclipse.ui.internal.WorkbenchWindow.close
(WorkbenchWindow.java:380)
        at org.eclipse.jface.window.WindowManager.close(WindowManager.java:102)
        at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:260)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:852)
        at org.eclipse.core.runtime.Platform.run(Platform.java:413)
        at org.eclipse.ui.internal.Workbench.busyClose(Workbench.java:257)
        at org.eclipse.ui.internal.Workbench.access$7(Workbench.java:214)
        at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:390)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)
        at org.eclipse.ui.internal.Workbench.close(Workbench.java:388)
        at org.eclipse.ui.internal.Workbench.close(Workbench.java:380)
        at org.eclipse.ui.internal.Workbench.close(Workbench.java:374)
        at org.eclipse.ui.internal.QuitAction.run(QuitAction.java:31)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:804)
        at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:422)
        at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:374)
        at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:368)
        at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:69)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1467)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1450)
        at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
        at org.eclipse.core.launcher.Main.run(Main.java:703)
        at org.eclipse.core.launcher.Main.main(Main.java:539)
Build &gt; I20030128.</WithStack>
    <WithOutStack>Build 20030115

When exiting my self-hosted dev workspace, I noticed the following entry in 
the .log during shutdown. I had nothing special in my workspace though.

!ENTRY org.eclipse.ui.workbench 4 2 Jan 23, 2003 11:42:41.932
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.ui.workbench".
!STACK 0

Build &gt; I20030128.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30076" />
    <CreationDate amount="2003-01-23 05:18:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>plugin.xml editor should provide some help in locating syntax errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>20030121

as of now, the plugin.xml editor does not (as far as i can tell) offer any help 
in locating a syntax error if i have one - it simply complains that there are 
errors and refuses to launch the runtime workbench correctly but then i'm left 
with going line by line through the code to locate the problem
Actually, that is not true. If your project has PDE nature, our builders will 
kick in and you will get the expected error checking (markers in the task list 
and in the UI). But you must have PDE nature, otherwise builders cannot run.</WithStack>
    <WithOutStack>20030121

as of now, the plugin.xml editor does not (as far as i can tell) offer any help 
in locating a syntax error if i have one - it simply complains that there are 
errors and refuses to launch the runtime workbench correctly but then i'm left 
with going line by line through the code to locate the problem
Actually, that is not true. If your project has PDE nature, our builders will 
kick in and you will get the expected error checking (markers in the task list 
and in the UI). But you must have PDE nature, otherwise builders cannot run.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30077" />
    <CreationDate amount="2003-01-23 05:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Tasks] Filter Based on Package Explorer View</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I would like to request a new filter option be added to the filter options 
availble to the tasks pane. It would be nice to be able to filter tasks based 
on what you have selected to view in the package explorer. So that if you 
click "Go Into" a package somewhere deep in your hierarchy you only see 
problems regarding that subtree of the source directory structure.
There are currently no plans to work on this feature</WithStack>
    <WithOutStack>I would like to request a new filter option be added to the filter options 
availble to the tasks pane. It would be nice to be able to filter tasks based 
on what you have selected to view in the package explorer. So that if you 
click "Go Into" a package somewhere deep in your hierarchy you only see 
problems regarding that subtree of the source directory structure.
There are currently no plans to work on this feature</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30078" />
    <CreationDate amount="2003-01-23 06:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Autocomplete Ignores Read-Only file status</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>If you open a read only file and autocomplete a method call the editor will 
update the view despite the file being read only.
In this situation, the content assist action is disabled by default. What are 
your concrete steps? How does your setup looks like? Is the project of this 
file shared with a repository? What kind of repository?

What build are you using?
I tried to recreate this bug reliably alas I was only able to recreate it once 
and then no matter what I did it would not occur again. The file was not shared 
with a repository. Once the autocompete modifies the file if I try and save it 
I get a complaint saying the file is read only. If I try to type with the 
keyboard it complains that the file is read only. 
If I manage to recreate it again I will submit more information.
sorry I was using build 200302111320
I just managed to recreate it but only once. I experimented and there is a 
circumstance in which Autocomplete isn't switched off, I was able to perform as 
many autocompletes as I like all over the file but any other modification 
attempts failed.
Removing target milestone as we don't have a reproducible case yet.
Still no reproducible case. Closing as REMIND. Please reopen if necessary.
Get rid of deprecated state.
.</WithStack>
    <WithOutStack>If you open a read only file and autocomplete a method call the editor will 
update the view despite the file being read only.
In this situation, the content assist action is disabled by default. What are 
your concrete steps? How does your setup looks like? Is the project of this 
file shared with a repository? What kind of repository?

What build are you using?
I tried to recreate this bug reliably alas I was only able to recreate it once 
and then no matter what I did it would not occur again. The file was not shared 
with a repository. Once the autocompete modifies the file if I try and save it 
I get a complaint saying the file is read only. If I try to type with the 
keyboard it complains that the file is read only. 
If I manage to recreate it again I will submit more information.
sorry I was using build 200302111320
I just managed to recreate it but only once. I experimented and there is a 
circumstance in which Autocomplete isn't switched off, I was able to perform as 
many autocompletes as I like all over the file but any other modification 
attempts failed.
Removing target milestone as we don't have a reproducible case yet.
Still no reproducible case. Closing as REMIND. Please reopen if necessary.
Get rid of deprecated state.
.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30079" />
    <CreationDate amount="2003-01-23 07:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Modifying JRE contents shouldn't trigger a build without asking permission</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="1">
        <Lines>
          <Line>(i.e. will it require a build), rather than letting the java model tell us.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>1) you cannot bind the reference at all.</Line>
          <Line>2) you can bind the reference but the container decides that it cannot resolve</Line>
          <Line>it, i.e., the container spec states: ....u.StandardVMType/1.3 JDK'</Line>
          <Line>but there is no 1.3 JDK defined in my workspace.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20030122

I went to the JRE installs page, so as to remove all but rt.jar from the 
defaults. As soon as I accepted the change, it
triggered a build automatically, even though autobuild was off.
Workaround - press the cancel button.
Do you mean 'Cancel' wouldn't actually cancel my changes to the Jar list ?
To be consistent with the Compiler settings we should prompt the user. However 
as bug 30150 points out we have to make sure that we prompt the user only once 
when more than one page are changed. This requires some coordination among all 
the pages that offer a rebuild. 

Martin will look into offering a flag that allows to check whether the user got 
already prompted for a rebuild. The JRESetting dialog should honor this setting.
 
JRE Install page doesn't know of JDT-UI (it's launching), so coordination is 
not so easely possible.
Checked again the page is contributed by org.eclipse.jdt.debug.ui which pre-
reqs jdt.ui so there is still hope.
The build is actually triggered by the launching plug-in based on the changes 
in a JRE (which does not know of JUI). We may be able to consult an 
IStatusHandler to prompt the user for a build.
Triggering a rebuild as a side effect of a JRE setting is problematic. We have 
moved away from this smartness at the model level. It would be better when the 
UI initiates this rebuild after having prompted the user.
I've added a prompt, and the (launching) core no longer triggers a build.

However, we still have problems here:
* We do let the user cancel the JRE changes at this point - we only let them 
postpone the build. This is because JRE changes have been committed, and 
variables and containers have already been updated (which allows us to 
determine if a build is required - based on java element deltas).
* If a JRE is deleted, and one or more projects require that JRE, we prompt the 
user to choose a new one (once per project). 
Why don't you only commit the changes once user presses OK ?
We commit the changes when OK is pressed, and then prompt the user for a build 
(if required). We determine if a build is required by listening to java element 
deltas (fired in reponse to commiting container changes). This is the easiest 
way to tell if a build is required (otherwise we have to do a before/after 
comparison of the existing and future VMs, to determine if a change may effect 
a project and required a build).

In order to be friendly, I believe we will have to to the analysis ourselves 
(i.e. will it require a build), rather than letting the java model tell us.

The first problem is fixed. Now we need to decide how to handle JRE resolution 
when a referenced JRE is removed.

Question: Should we prompt the user to choose a new JRE when a project 
references a JRE and it is removed? [NOTE: A similar situation arises when a 
user adds a project to the workspace, and a container cannot be resolved].
I have added a quick fix for JRE resolution, rather than a prompt.

When a JRE assigned to a project is deleted (using a contianer), an error will 
appear in the task list (unable to resolve...). The quick fix asks the user to 
choose an alternate JRE.
Please verify, Darin (S)
The error message I get in the task list:

Unbound classpath container 
path: 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.u
i.launcher.StandardVMType/1.3 JDK'.

even when I know what it is trying to say is not all that helpful. The quick 
fix is good. Can we improve the error message?

That's the whole problem - we have no control over the error message - it comes 
from the core that only knows about variables/containers, but not what they are 
semantically bound to - thus, the quick fix.
Verified.
Showing the internal container path isn't a helpful error message.
Containers have a description and JDT Core could put this description into the 
message, e.g. "JRE System Library [1.3]". This is also what we now should the 
user in the UI.
The problem is that precisely in this scenario, we cannot bind the reference to 
an actual IClasspathContainer, thus we can't provide anything else than what 
was available to us.

However, this is questionning the name of these containers to start with:
'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.u
i.launcher.StandardVMType/1.3 JDK'

could have been improved into:
'InstalledJRE/StandardVM/1.3'

thus end-user would have got some clue.

I'd expect there are two cases:
1) you cannot bind the reference at all.
2) you can bind the reference but the container decides that it cannot resolve 
it, i.e., the container spec states: ....u.StandardVMType/1.3 JDK'
 but there is no 1.3 JDK defined in my workspace.

In the case of 2) the container could be resolved. 
A registered container initializer has no description, so we cannot improve our 
error message. I believe the container references should be less cryptic since 
they will be surfaced to users through error messages.
We cannot change the identifier this will invalidate existing class paths and 
generate unnecessary swirl.

The identifier has to be unique and makeing an internal identifier less cryptic 
because we show it to the user is problematic.

Therefore, we should add a description for initializers in the plugin.xml, for 
example:

&lt;extension point = "org.eclipse.jdt.core.classpathContainerInitializer"&gt;
	&lt;classpathContainerInitializer
		id="org.eclipse.jdt.launching.JRE_CONTAINER"
	
	class="org.eclipse.jdt.internal.launching.JREContainerInitializer"/&gt;
****    description="JRE Container"
&lt;/extension&gt;

Then we can show something reasonable to the user.
I am not disagreeing with backward compatibility issues, but along defending 
the existing story, why did you pick up JRE_LIB as a variable name, and not 
org.eclipse.jdt.debug.JRE_LIB instead ? 

Anything which is mentionned on a classpath entry can be shown to the user, and 
all classpath computing story will end up in same boat (ECLIPSE_HOME - what is 
it if unbound ?), adding more knowledge to an initializer is one thing, but 
what if no such initializer is found when restarting workspace (think of wsdd 
initializer for example) ?

I think for now we should stick to what we have and experiment with the 
quickfix.

Also, in the example you provided, an initializer name will match the first 
segment of a container ID, not the full container path, thus would you suggest 
we use the container initializer description in place of the container ID ? If 
so, what if you have 2 container references on your CP which use the same 
initializer, and both cannot be bound ? The actual container path is the 
disambiguating info. The message would have to combine both pieces of 
information, not sure it would become much more readable then.
The container description will be a user presentable name only. This is common 
for extension points to support this.

JRE_LIB was chosen since it was intended to be presented to the user in this 
case we are dealing with a container path that we have never intended to 
present to the user.
But, if the resolution did not work, then there is no container from which to 
obtain a description.
(Sorry, I was many e-mails behind on my last comment)
Improved description with new API from JCORE. The error now reads (for example):

Unbound classpath container: 'JRE System Library [jdk1.3.1]'.

Please verify, Darin S.
Verified.</WithStack>
    <WithOutStack>Build 20030122

I went to the JRE installs page, so as to remove all but rt.jar from the 
defaults. As soon as I accepted the change, it
triggered a build automatically, even though autobuild was off.
Workaround - press the cancel button.
Do you mean 'Cancel' wouldn't actually cancel my changes to the Jar list ?
To be consistent with the Compiler settings we should prompt the user. However 
as bug 30150 points out we have to make sure that we prompt the user only once 
when more than one page are changed. This requires some coordination among all 
the pages that offer a rebuild. 

Martin will look into offering a flag that allows to check whether the user got 
already prompted for a rebuild. The JRESetting dialog should honor this setting.
 
JRE Install page doesn't know of JDT-UI (it's launching), so coordination is 
not so easely possible.
Checked again the page is contributed by org.eclipse.jdt.debug.ui which pre-
reqs jdt.ui so there is still hope.
The build is actually triggered by the launching plug-in based on the changes 
in a JRE (which does not know of JUI). We may be able to consult an 
IStatusHandler to prompt the user for a build.
Triggering a rebuild as a side effect of a JRE setting is problematic. We have 
moved away from this smartness at the model level. It would be better when the 
UI initiates this rebuild after having prompted the user.
I've added a prompt, and the (launching) core no longer triggers a build.

However, we still have problems here:
* We do let the user cancel the JRE changes at this point - we only let them 
postpone the build. This is because JRE changes have been committed, and 
variables and containers have already been updated (which allows us to 
determine if a build is required - based on java element deltas).
* If a JRE is deleted, and one or more projects require that JRE, we prompt the 
user to choose a new one (once per project). 
Why don't you only commit the changes once user presses OK ?
We commit the changes when OK is pressed, and then prompt the user for a build 
(if required). We determine if a build is required by listening to java element 
deltas (fired in reponse to commiting container changes). This is the easiest 
way to tell if a build is required (otherwise we have to do a before/after 
comparison of the existing and future VMs, to determine if a change may effect 
a project and required a build).

In order to be friendly, I believe we will have to to the analysis ourselves 
(i.e. will it require a build), rather than letting the java model tell us.

The first problem is fixed. Now we need to decide how to handle JRE resolution 
when a referenced JRE is removed.

Question: Should we prompt the user to choose a new JRE when a project 
references a JRE and it is removed? [NOTE: A similar situation arises when a 
user adds a project to the workspace, and a container cannot be resolved].
I have added a quick fix for JRE resolution, rather than a prompt.

When a JRE assigned to a project is deleted (using a contianer), an error will 
appear in the task list (unable to resolve...). The quick fix asks the user to 
choose an alternate JRE.
Please verify, Darin (S)
The error message I get in the task list:

Unbound classpath container 
path: 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.u
i.launcher.StandardVMType/1.3 JDK'.

even when I know what it is trying to say is not all that helpful. The quick 
fix is good. Can we improve the error message?

That's the whole problem - we have no control over the error message - it comes 
from the core that only knows about variables/containers, but not what they are 
semantically bound to - thus, the quick fix.
Verified.
Showing the internal container path isn't a helpful error message.
Containers have a description and JDT Core could put this description into the 
message, e.g. "JRE System Library [1.3]". This is also what we now should the 
user in the UI.
The problem is that precisely in this scenario, we cannot bind the reference to 
an actual IClasspathContainer, thus we can't provide anything else than what 
was available to us.

However, this is questionning the name of these containers to start with:
'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.u
i.launcher.StandardVMType/1.3 JDK'

could have been improved into:
'InstalledJRE/StandardVM/1.3'

thus end-user would have got some clue.

I'd expect there are two cases:
1) you cannot bind the reference at all.
2) you can bind the reference but the container decides that it cannot resolve 
it, i.e., the container spec states: ....u.StandardVMType/1.3 JDK'
 but there is no 1.3 JDK defined in my workspace.

In the case of 2) the container could be resolved. 
A registered container initializer has no description, so we cannot improve our 
error message. I believe the container references should be less cryptic since 
they will be surfaced to users through error messages.
We cannot change the identifier this will invalidate existing class paths and 
generate unnecessary swirl.

The identifier has to be unique and makeing an internal identifier less cryptic 
because we show it to the user is problematic.

Therefore, we should add a description for initializers in the plugin.xml, for 
example:

&lt;extension point = "org.eclipse.jdt.core.classpathContainerInitializer"&gt;
	&lt;classpathContainerInitializer
		id="org.eclipse.jdt.launching.JRE_CONTAINER"
	
	class="org.eclipse.jdt.internal.launching.JREContainerInitializer"/&gt;
****    description="JRE Container"
&lt;/extension&gt;

Then we can show something reasonable to the user.
I am not disagreeing with backward compatibility issues, but along defending 
the existing story, why did you pick up JRE_LIB as a variable name, and not 
org.eclipse.jdt.debug.JRE_LIB instead ? 

Anything which is mentionned on a classpath entry can be shown to the user, and 
all classpath computing story will end up in same boat (ECLIPSE_HOME - what is 
it if unbound ?), adding more knowledge to an initializer is one thing, but 
what if no such initializer is found when restarting workspace (think of wsdd 
initializer for example) ?

I think for now we should stick to what we have and experiment with the 
quickfix.

Also, in the example you provided, an initializer name will match the first 
segment of a container ID, not the full container path, thus would you suggest 
we use the container initializer description in place of the container ID ? If 
so, what if you have 2 container references on your CP which use the same 
initializer, and both cannot be bound ? The actual container path is the 
disambiguating info. The message would have to combine both pieces of 
information, not sure it would become much more readable then.
The container description will be a user presentable name only. This is common 
for extension points to support this.

JRE_LIB was chosen since it was intended to be presented to the user in this 
case we are dealing with a container path that we have never intended to 
present to the user.
But, if the resolution did not work, then there is no container from which to 
obtain a description.
(Sorry, I was many e-mails behind on my last comment)
Improved description with new API from JCORE. The error now reads (for example):

Unbound classpath container: 'JRE System Library [jdk1.3.1]'.

Please verify, Darin S.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30080" />
    <CreationDate amount="2003-01-23 07:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[Preferences] NoSuchElementException dumped into .log file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437338565541">
        <Exception>java.util.NoSuchElementException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.StringTokenizer.nextToken(StringTokenizer.java:232)</Frame>
          <Frame depth="1">org.eclipse.jface.resource.StringConverter.asRGB(StringConverter.java:458)</Frame>
          <Frame depth="2">org.eclipse.jface.resource.StringConverter.asRGB(StringConverter.java:481)</Frame>
          <Frame depth="3">org.eclipse.jface.preference.PreferenceConverter.basicGetColor(PreferenceConverter.java:88)</Frame>
          <Frame depth="4">org.eclipse.jface.preference.PreferenceConverter.getColor(PreferenceConverter.java:168)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage.handleSyntaxColorListSelection(JavaEditorPreferencePage.java:325)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage.access$7(JavaEditorPreferencePage.java:322)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage$6.widgetSelected(JavaEditorPreferencePage.java:441)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:87)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="13">org.eclipse.jface.window.Window.runEventLoop(Window.java:561)</Frame>
          <Frame depth="14">org.eclipse.jface.window.Window.open(Window.java:541)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:47)</Frame>
          <Frame depth="16">org.eclipse.jface.action.Action.runWithEvent(Action.java:804)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:422)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:374)</Frame>
          <Frame depth="19">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:368)</Frame>
          <Frame depth="20">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:69)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1525)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.run(Workbench.java:1508)</Frame>
          <Frame depth="27">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="28">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="29">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="30">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="31">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="32">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437338565541">
        <Exception>ava.util.NoSuchElementException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.StringTokenizer.nextToken(StringTokenizer.java:232)</Frame>
          <Frame depth="1">org.eclipse.jface.resource.StringConverter.asRGB(StringConverter.java:458)</Frame>
          <Frame depth="2">org.eclipse.jface.resource.StringConverter.asRGB(StringConverter.java:481)</Frame>
          <Frame depth="3">org.eclipse.jface.preference.PreferenceConverter.basicGetColor(PreferenceConverter.java:88)</Frame>
          <Frame depth="4">org.eclipse.jface.preference.PreferenceConverter.getColor(PreferenceConverter.java:168)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage.handleSyntaxColorListSelection(JavaEditorPreferencePage.java:325)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage.access$7(JavaEditorPreferencePage.java:322)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage$6.widgetSelected(JavaEditorPreferencePage.java:441)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:87)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="13">org.eclipse.jface.window.Window.runEventLoop(Window.java:561)</Frame>
          <Frame depth="14">org.eclipse.jface.window.Window.open(Window.java:541)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.OpenPreferencesAction.run(OpenPreferencesAction.java:47)</Frame>
          <Frame depth="16">org.eclipse.jface.action.Action.runWithEvent(Action.java:804)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:422)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:374)</Frame>
          <Frame depth="19">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:368)</Frame>
          <Frame depth="20">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:69)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1525)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.run(Workbench.java:1508)</Frame>
          <Frame depth="27">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="28">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="29">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="30">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="31">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="32">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20030122

I was modifiying JRE installs (to remove all but rt.jar from within them). 
Unclear if the following is actually related, but timing seems to indicate it 
is.

!ENTRY org.eclipse.ui 4 0 Jan 23, 2003 12:22:52.458
!MESSAGE java.util.NoSuchElementException
!STACK 0
java.util.NoSuchElementException
        at java.util.StringTokenizer.nextToken(StringTokenizer.java:232)
        at org.eclipse.jface.resource.StringConverter.asRGB
(StringConverter.java:458)
        at org.eclipse.jface.resource.StringConverter.asRGB
(StringConverter.java:481)
        at org.eclipse.jface.preference.PreferenceConverter.basicGetColor
(PreferenceConverter.java:88)
        at org.eclipse.jface.preference.PreferenceConverter.getColor
(PreferenceConverter.java:168)
        at 
org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage.handleSyntaxCol
orListSelection(JavaEditorPreferencePage.java:325)
        at 
org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage.access$7
(JavaEditorPreferencePage.java:322)
        at 
org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage$6.widgetSelecte
d(JavaEditorPreferencePage.java:441)
        at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:87)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:561)
        at org.eclipse.jface.window.Window.open(Window.java:541)
        at org.eclipse.ui.internal.OpenPreferencesAction.run
(OpenPreferencesAction.java:47)
        at org.eclipse.jface.action.Action.runWithEvent(Action.java:804)
        at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:422)
        at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:374)
        at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:368)
        at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:69)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1525)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1508)
        at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
        at org.eclipse.core.launcher.Main.run(Main.java:703)
        at org.eclipse.core.launcher.Main.main(Main.java:539)
Looks like the pref store somehow got an invalid string in it.
Should investigate how this happened, and see if we can improve our error 
handling.

Replicated. This has nothing to do with the JRE preference page - if you go to 
the JavaEditor preference page, select a colour and then change it using a 
custom colour you can make this happen.

Here is my trace

ava.util.NoSuchElementException
	at java.util.StringTokenizer.nextToken(StringTokenizer.java:232)
	at org.eclipse.jface.resource.StringConverter.asRGB
(StringConverter.java:458)
	at org.eclipse.jface.resource.StringConverter.asRGB
(StringConverter.java:481)
	at org.eclipse.jface.preference.PreferenceConverter.basicGetColor
(PreferenceConverter.java:88)
	at org.eclipse.jface.preference.PreferenceConverter.getColor
(PreferenceConverter.java:168)
	at 
org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage.handleSyntaxCo
lorListSelection(JavaEditorPreferencePage.java:325)
	at 
org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage.access$7
(JavaEditorPreferencePage.java:322)
	at 
org.eclipse.jdt.internal.ui.preferences.JavaEditorPreferencePage$6.widgetSelect
ed(JavaEditorPreferencePage.java:441)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:87)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:561)
	at org.eclipse.jface.window.Window.open(Window.java:541)
	at org.eclipse.ui.internal.OpenPreferencesAction.run
(OpenPreferencesAction.java:47)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:804)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:422)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:374)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:368)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:69)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1525)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1508)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)

This problem is due to a Bug in the JavaEditorPreferencePage which assigna the 
String value of a Boolean to a colour.

They have the following line 

		new OverlayPreferenceStore.OverlayKey
(OverlayPreferenceStore.STRING, PreferenceConstants.EDITOR_JAVADOC_TAG_BOLD),
		new OverlayPreferenceStore.OverlayKey
(OverlayPreferenceStore.BOOLEAN, PreferenceConstants.EDITOR_JAVADOC_TAG_BOLD),

in 	public final OverlayPreferenceStore.OverlayKey[] fKeys

I think they mean to have

		new OverlayPreferenceStore.OverlayKey
(OverlayPreferenceStore.STRING, PreferenceConstants.EDITOR_JAVADOC_TAG_COLOR),
		new OverlayPreferenceStore.OverlayKey
(OverlayPreferenceStore.BOOLEAN, PreferenceConstants.EDITOR_JAVADOC_TAG_BOLD),


Fixed.
Available in builds &gt; I20030129

start verifying</WithStack>
    <WithOutStack>Build 20030122

I was modifiying JRE installs (to remove all but rt.jar from within them). 
Unclear if the following is actually related, but timing seems to indicate it 
is.

!ENTRY org.eclipse.ui 4 0 Jan 23, 2003 12:22:52.458
!MESSAGE java.util.NoSuchElementException
!STACK 0
Looks like the pref store somehow got an invalid string in it.
Should investigate how this happened, and see if we can improve our error 
handling.

Replicated. This has nothing to do with the JRE preference page - if you go to 
the JavaEditor preference page, select a colour and then change it using a 
custom colour you can make this happen.

Here is my trace



This problem is due to a Bug in the JavaEditorPreferencePage which assigna the 
String value of a Boolean to a colour.

They have the following line 

		new OverlayPreferenceStore.OverlayKey
(OverlayPreferenceStore.STRING, PreferenceConstants.EDITOR_JAVADOC_TAG_BOLD),
		new OverlayPreferenceStore.OverlayKey
(OverlayPreferenceStore.BOOLEAN, PreferenceConstants.EDITOR_JAVADOC_TAG_BOLD),

in 	public final OverlayPreferenceStore.OverlayKey[] fKeys

I think they mean to have

		new OverlayPreferenceStore.OverlayKey
(OverlayPreferenceStore.STRING, PreferenceConstants.EDITOR_JAVADOC_TAG_COLOR),
		new OverlayPreferenceStore.OverlayKey
(OverlayPreferenceStore.BOOLEAN, PreferenceConstants.EDITOR_JAVADOC_TAG_BOLD),


Fixed.
Available in builds &gt; I20030129

start verifying</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30081" />
    <CreationDate amount="2003-01-23 07:33:00 -0500" />
    <DupId amount="30046" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Stack overflow attempting to run Runtime Workbench</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437338565541">
        <Exception>java.lang.StackOverflowError</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.net.URLStreamHandler.setURL(URLStreamHandler.java:469)</Frame>
          <Frame depth="1">java.net.URLStreamHandler.setURL(URLStreamHandler.java:518)</Frame>
          <Frame depth="2">sun.net.www.protocol.jar.Handler.parseURL(Handler.java:76)</Frame>
          <Frame depth="3">java.net.URL.&lt;init&gt;(URL.java:608)</Frame>
          <Frame depth="4">java.net.URL.&lt;init&gt;(URL.java:476)</Frame>
          <Frame depth="5">sun.misc.URLClassPath$JarLoader.checkResource(URLClassPath.java:599)</Frame>
          <Frame depth="6">sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:671)</Frame>
          <Frame depth="7">sun.misc.URLClassPath$JarLoader.findResource(URLClassPath.java:658)</Frame>
          <Frame depth="8">sun.misc.URLClassPath.findResource(URLClassPath.java:137)</Frame>
          <Frame depth="9">java.net.URLClassLoader$2.run(URLClassLoader.java:351)</Frame>
          <Frame depth="10">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="11">java.net.URLClassLoader.findResource(URLClassLoader.java:348)</Frame>
          <Frame depth="12">org.eclipse.core.internal.boot.DelegatingURLClassLoader.findResource(DelegatingURLClassLoader.java:646)</Frame>
          <Frame depth="13">org.eclipse.core.internal.boot.DelegatingURLClassLoader.findResource(DelegatingURLClassLoader.java:631)</Frame>
          <Frame depth="14">java.lang.ClassLoader.getResource(ClassLoader.java:780)</Frame>
          <Frame depth="15">org.eclipse.core.internal.boot.DelegatingURLClassLoader.getResource(DelegatingURLClassLoader.java:786)</Frame>
          <Frame depth="16">java.lang.ClassLoader.getResourceAsStream(ClassLoader.java:941)</Frame>
          <Frame depth="17">org.eclipse.core.internal.boot.DelegatingURLClassLoader.getResourceAsStream(DelegatingURLClassLoader.java:964)</Frame>
          <Frame depth="18">org.apache.xerces.util.SecuritySupport12$4.run(SecuritySupport12.java:119)</Frame>
          <Frame depth="19">java.security.AccessController.doPrivileged(Native Method)</Frame>
          <Frame depth="20">org.apache.xerces.util.SecuritySupport12.getResourceAsStream(SecuritySupport12.java:112)</Frame>
          <Frame depth="21">org.apache.xerces.util.ObjectFactory.findJarServiceProvider(ObjectFactory.java:300)</Frame>
          <Frame depth="22">org.apache.xerces.util.ObjectFactory.createObject(ObjectFactory.java:185)</Frame>
          <Frame depth="23">org.apache.xerces.util.ObjectFactory.createObject(ObjectFactory.java:120)</Frame>
          <Frame depth="24">org.apache.xerces.parsers.DOMParser.&lt;init&gt;(DOMParser.java:109)</Frame>
          <Frame depth="25">org.eclipse.pde.internal.core.SourceDOMParser.&lt;init&gt;(SourceDOMParser.java:25)</Frame>
          <Frame depth="26">org.eclipse.pde.internal.core.feature.AbstractFeatureModel.load(AbstractFeatureModel.java:50)</Frame>
          <Frame depth="27">org.eclipse.pde.internal.core.WorkspaceModelManager.loadFeatureModel(WorkspaceModelManager.java:657)</Frame>
          <Frame depth="28">org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel(WorkspaceModelManager.java:175)</Frame>
          <Frame depth="29">org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel(WorkspaceModelManager.java:182)</Frame>
          <Frame depth="30">org.eclipse.pde.internal.core.WorkspaceModelManager.initializeWorkspacePluginModels(WorkspaceModelManager.java:477)</Frame>
          <Frame depth="31">org.eclipse.pde.internal.core.WorkspaceModelManager.reset(WorkspaceModelManager.java:700)</Frame>
          <Frame depth="32">org.eclipse.pde.internal.core.PDECore.initializeModels(PDECore.java:292)</Frame>
          <Frame depth="33">org.eclipse.pde.internal.core.PDECore.getModelManager(PDECore.java:268)</Frame>
          <Frame depth="34">org.eclipse.pde.internal.core.PDECore.findPlugin(PDECore.java:192)</Frame>
          <Frame depth="35">org.eclipse.pde.internal.core.feature.FeatureImport.parse(FeatureImport.java:72)</Frame>
          <Frame depth="36">org.eclipse.pde.internal.core.feature.Feature.parseRequires(Feature.java:206)</Frame>
          <Frame depth="37">org.eclipse.pde.internal.core.feature.Feature.parse(Feature.java:174)</Frame>
          <Frame depth="38">org.eclipse.pde.internal.core.feature.AbstractFeatureModel.processDocument(AbstractFeatureModel.java:88)</Frame>
          <Frame depth="39">org.eclipse.pde.internal.core.feature.AbstractFeatureModel.load(AbstractFeatureModel.java:70)</Frame>
          <Frame depth="40">org.eclipse.pde.internal.core.WorkspaceModelManager.loadFeatureModel(WorkspaceModelManager.java:657)</Frame>
          <Frame depth="41">org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel(WorkspaceModelManager.java:175)</Frame>
          <Frame depth="42">org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel(WorkspaceModelManager.java:182)</Frame>
          <Frame depth="43">org.eclipse.pde.internal.core.WorkspaceModelManager.initializeWorkspacePluginModels(WorkspaceModelManager.java:477)</Frame>
          <Frame depth="44">org.eclipse.pde.internal.core.WorkspaceModelManager.reset(WorkspaceModelManager.java:700)</Frame>
          <Frame depth="45">org.eclipse.pde.internal.core.PDECore.initializeModels(PDECore.java:292)</Frame>
          <Frame depth="46">org.eclipse.pde.internal.core.PDECore.getModelManager(PDECore.java:268)</Frame>
          <Frame depth="47">org.eclipse.pde.internal.core.PDECore.findPlugin(PDECore.java:192)</Frame>
          <Frame depth="48">org.eclipse.pde.internal.core.feature.FeatureImport.parse(FeatureImport.java:72)</Frame>
          <Frame depth="49">org.eclipse.pde.internal.core.feature.Feature.parseRequires(Feature.java:206)</Frame>
          <Frame depth="50">org.eclipse.pde.internal.core.feature.Feature.parse(Feature.java:174)</Frame>
          <Frame depth="51">org.eclipse.pde.internal.core.feature.AbstractFeatureModel.processDocument(AbstractFeatureModel.java:88)</Frame>
          <Frame depth="52">org.eclipse.pde.internal.core.feature.AbstractFeatureModel.load(AbstractFeatureModel.java:70)</Frame>
          <Frame depth="53">org.eclipse.pde.internal.core.WorkspaceModelManager.loadFeatureModel(WorkspaceModelManager.java:657)</Frame>
          <Frame depth="54">org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel(WorkspaceModelManager.java:175)</Frame>
          <Frame depth="55">org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel(WorkspaceModelManager.java:182)</Frame>
          <Frame depth="56">org.eclipse.pde.internal.core.WorkspaceModelManager.initializeWorkspacePluginModels(WorkspaceModelManager.java:477)</Frame>
          <Frame depth="57">org.eclipse.pde.internal.core.WorkspaceModelManager.reset(WorkspaceModelManager.java:700)</Frame>
          <Frame depth="58">org.eclipse.pde.internal.core.PDECore.initializeModels(PDECore.java:292)</Frame>
          <Frame depth="59">org.eclipse.pde.internal.core.PDECore.getModelManager(PDECore.java:268)</Frame>
          <Frame depth="60">org.eclipse.pde.internal.core.PDECore.findPlugin(PDECore.java:192)</Frame>
          <Frame depth="61">org.eclipse.pde.internal.core.feature.FeatureImport.parse(FeatureImport.java:72)</Frame>
          <Frame depth="62">org.eclipse.pde.internal.core.feature.Feature.parseRequires(Feature.java:206)</Frame>
          <Frame depth="63">org.eclipse.pde.internal.core.feature.Feature.parse(Feature.java:174)</Frame>
          <Frame depth="64">org.eclipse.pde.internal.core.feature.AbstractFeatureModel.processDocument(AbstractFeatureModel.java:88)</Frame>
          <Frame depth="65">org.eclipse.pde.internal.core.feature.AbstractFeatureModel.load(AbstractFeatureModel.java:70)</Frame>
          <Frame depth="66">org.eclipse.pde.internal.core.WorkspaceModelManager.loadFeatureModel(WorkspaceModelManager.java:657)</Frame>
          <Frame depth="67">org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel(WorkspaceModelManager.java:175)</Frame>
          <Frame depth="68">org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel(WorkspaceModelManager.java:182)</Frame>
          <Frame depth="69">org.eclipse.pde.internal.core.WorkspaceModelManager.initializeWorkspacePluginModels(WorkspaceModelManager.java:477)</Frame>
          <Frame depth="70">org.eclipse.pde.internal.core.WorkspaceModelManager.reset(WorkspaceModelManager.java:700)</Frame>
          <Frame depth="71">org.eclipse.pde.internal.core.PDECore.initializeModels(PDECore.java:292)</Frame>
          <Frame depth="72">org.eclipse.pde.internal.core.PDECore.getModelManager(PDECore.java:268)</Frame>
          <Frame depth="73">org.eclipse.pde.internal.core.PDECore.findPlugin(PDECore.java:192)</Frame>
          <Frame depth="74">org.eclipse.pde.internal.core.feature.FeatureImport.parse(FeatureImport.java:72)</Frame>
          <Frame depth="75">org.eclipse.pde.internal.core.feature.Feature.parseRequires(Feature.java:206)</Frame>
          <Frame depth="76">org.eclipse.pde.internal.core.feature.Feature.parse(Feature.java:174)</Frame>
          <Frame depth="77">org.eclipse.pde.internal.core.feature.AbstractFeatureModel.processDocument(AbstractFeatureModel.java:88)</Frame>
          <Frame depth="78">org.eclipse.pde.internal.core.feature.AbstractFeatureModel.load(AbstractFeatureModel.java:70)</Frame>
          <Frame depth="79">org.eclipse.pde.internal.core.WorkspaceModelManager.loadFeatureModel(WorkspaceModelManager.java:657)</Frame>
          <Frame depth="80">org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel(WorkspaceModelManager.java:175)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20030122

When selecting an existing launch config under Runtime Workbench, a stack 
overflow occurred see below:

!ENTRY org.eclipse.ui 4 4 Jan 23, 2003 13:56:58.90
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jan 23, 2003 13:56:58.100
!MESSAGE java.lang.StackOverflowError
!STACK 0
java.lang.StackOverflowError
	at java.net.URLStreamHandler.setURL(URLStreamHandler.java:469)
	at java.net.URLStreamHandler.setURL(URLStreamHandler.java:518)
	at sun.net.www.protocol.jar.Handler.parseURL(Handler.java:76)
	at java.net.URL.&lt;init&gt;(URL.java:608)
	at java.net.URL.&lt;init&gt;(URL.java:476)
	at sun.misc.URLClassPath$JarLoader.checkResource(URLClassPath.java:599)
	at sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:671)
	at sun.misc.URLClassPath$JarLoader.findResource(URLClassPath.java:658)
	at sun.misc.URLClassPath.findResource(URLClassPath.java:137)
	at java.net.URLClassLoader$2.run(URLClassLoader.java:351)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findResource(URLClassLoader.java:348)
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findResource
(DelegatingURLClassLoader.java:646)
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.findResource
(DelegatingURLClassLoader.java:631)
	at java.lang.ClassLoader.getResource(ClassLoader.java:780)
	at org.eclipse.core.internal.boot.DelegatingURLClassLoader.getResource
(DelegatingURLClassLoader.java:786)
	at java.lang.ClassLoader.getResourceAsStream(ClassLoader.java:941)
	at 
org.eclipse.core.internal.boot.DelegatingURLClassLoader.getResourceAsStream
(DelegatingURLClassLoader.java:964)
	at org.apache.xerces.util.SecuritySupport12$4.run
(SecuritySupport12.java:119)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.apache.xerces.util.SecuritySupport12.getResourceAsStream
(SecuritySupport12.java:112)
	at org.apache.xerces.util.ObjectFactory.findJarServiceProvider
(ObjectFactory.java:300)
	at org.apache.xerces.util.ObjectFactory.createObject
(ObjectFactory.java:185)
	at org.apache.xerces.util.ObjectFactory.createObject
(ObjectFactory.java:120)
	at org.apache.xerces.parsers.DOMParser.&lt;init&gt;(DOMParser.java:109)
	at org.eclipse.pde.internal.core.SourceDOMParser.&lt;init&gt;
(SourceDOMParser.java:25)
	at org.eclipse.pde.internal.core.feature.AbstractFeatureModel.load
(AbstractFeatureModel.java:50)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.loadFeatureModel
(WorkspaceModelManager.java:657)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel
(WorkspaceModelManager.java:175)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel
(WorkspaceModelManager.java:182)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.initializeWorkspacePluginMod
els(WorkspaceModelManager.java:477)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.reset
(WorkspaceModelManager.java:700)
	at org.eclipse.pde.internal.core.PDECore.initializeModels
(PDECore.java:292)
	at org.eclipse.pde.internal.core.PDECore.getModelManager
(PDECore.java:268)
	at org.eclipse.pde.internal.core.PDECore.findPlugin(PDECore.java:192)
	at org.eclipse.pde.internal.core.feature.FeatureImport.parse
(FeatureImport.java:72)
	at org.eclipse.pde.internal.core.feature.Feature.parseRequires
(Feature.java:206)
	at org.eclipse.pde.internal.core.feature.Feature.parse(Feature.java:174)
	at 
org.eclipse.pde.internal.core.feature.AbstractFeatureModel.processDocument
(AbstractFeatureModel.java:88)
	at org.eclipse.pde.internal.core.feature.AbstractFeatureModel.load
(AbstractFeatureModel.java:70)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.loadFeatureModel
(WorkspaceModelManager.java:657)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel
(WorkspaceModelManager.java:175)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel
(WorkspaceModelManager.java:182)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.initializeWorkspacePluginMod
els(WorkspaceModelManager.java:477)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.reset
(WorkspaceModelManager.java:700)
	at org.eclipse.pde.internal.core.PDECore.initializeModels
(PDECore.java:292)
	at org.eclipse.pde.internal.core.PDECore.getModelManager
(PDECore.java:268)
	at org.eclipse.pde.internal.core.PDECore.findPlugin(PDECore.java:192)
	at org.eclipse.pde.internal.core.feature.FeatureImport.parse
(FeatureImport.java:72)
	at org.eclipse.pde.internal.core.feature.Feature.parseRequires
(Feature.java:206)
	at org.eclipse.pde.internal.core.feature.Feature.parse(Feature.java:174)
	at 
org.eclipse.pde.internal.core.feature.AbstractFeatureModel.processDocument
(AbstractFeatureModel.java:88)
	at org.eclipse.pde.internal.core.feature.AbstractFeatureModel.load
(AbstractFeatureModel.java:70)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.loadFeatureModel
(WorkspaceModelManager.java:657)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel
(WorkspaceModelManager.java:175)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel
(WorkspaceModelManager.java:182)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.initializeWorkspacePluginMod
els(WorkspaceModelManager.java:477)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.reset
(WorkspaceModelManager.java:700)
	at org.eclipse.pde.internal.core.PDECore.initializeModels
(PDECore.java:292)
	at org.eclipse.pde.internal.core.PDECore.getModelManager
(PDECore.java:268)
	at org.eclipse.pde.internal.core.PDECore.findPlugin(PDECore.java:192)
	at org.eclipse.pde.internal.core.feature.FeatureImport.parse
(FeatureImport.java:72)
	at org.eclipse.pde.internal.core.feature.Feature.parseRequires
(Feature.java:206)
	at org.eclipse.pde.internal.core.feature.Feature.parse(Feature.java:174)
	at 
org.eclipse.pde.internal.core.feature.AbstractFeatureModel.processDocument
(AbstractFeatureModel.java:88)
	at org.eclipse.pde.internal.core.feature.AbstractFeatureModel.load
(AbstractFeatureModel.java:70)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.loadFeatureModel
(WorkspaceModelManager.java:657)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel
(WorkspaceModelManager.java:175)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel
(WorkspaceModelManager.java:182)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.initializeWorkspacePluginMod
els(WorkspaceModelManager.java:477)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.reset
(WorkspaceModelManager.java:700)
	at org.eclipse.pde.internal.core.PDECore.initializeModels
(PDECore.java:292)
	at org.eclipse.pde.internal.core.PDECore.getModelManager
(PDECore.java:268)
	at org.eclipse.pde.internal.core.PDECore.findPlugin(PDECore.java:192)
	at org.eclipse.pde.internal.core.feature.FeatureImport.parse
(FeatureImport.java:72)
	at org.eclipse.pde.internal.core.feature.Feature.parseRequires
(Feature.java:206)
	at org.eclipse.pde.internal.core.feature.Feature.parse(Feature.java:174)
	at 
org.eclipse.pde.internal.core.feature.AbstractFeatureModel.processDocument
(AbstractFeatureModel.java:88)
	at org.eclipse.pde.internal.core.feature.AbstractFeatureModel.load
(AbstractFeatureModel.java:70)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.loadFeatureModel
(WorkspaceModelManager.java:657)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel
(WorkspaceModelManager.java:175)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel
Was using PDE Junit 2.1.2 at that time.
Same occurs with PDE Junit 2.1.3.

Stack overflow occurs as soon as I select the launch config in the list (while 
it actually attempt to show its details in the launch config view).
The launch config was defined previously already (not created with latest build)
I am able to discard old launch config, and create a new one instead. Feels 
like we have a backward compatibility issue.
Actually, I take my previous comment back. I was able to create a new launch 
config of type runtime workbench (left in the defaults). 

Then exited and restarted my workspace, attempt to pick it to run it. 
StackOverFlow again.


I have a workspace for you if you need to reproduce. Just let me know (it is 
178MB big).
This sounds like a dup.


*** This bug has been marked as a duplicate of 30046 ***</WithStack>
    <WithOutStack>Build 20030122

When selecting an existing launch config under Runtime Workbench, a stack 
overflow occurred see below:

!ENTRY org.eclipse.ui 4 4 Jan 23, 2003 13:56:58.90
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jan 23, 2003 13:56:58.100
!MESSAGE java.lang.StackOverflowError
!STACK 0

	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel
Was using PDE Junit 2.1.2 at that time.
Same occurs with PDE Junit 2.1.3.

Stack overflow occurs as soon as I select the launch config in the list (while 
it actually attempt to show its details in the launch config view).
The launch config was defined previously already (not created with latest build)
I am able to discard old launch config, and create a new one instead. Feels 
like we have a backward compatibility issue.
Actually, I take my previous comment back. I was able to create a new launch 
config of type runtime workbench (left in the defaults). 

Then exited and restarted my workspace, attempt to pick it to run it. 
StackOverFlow again.


I have a workspace for you if you need to reproduce. Just let me know (it is 
178MB big).
This sounds like a dup.


*** This bug has been marked as a duplicate of 30046 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30082" />
    <CreationDate amount="2003-01-23 08:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.0" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>X</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>sorry, was a type</WithStack>
    <WithOutStack>sorry, was a type</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30083" />
    <CreationDate amount="2003-01-23 08:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="Other" />
    <op_sys amount="other" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Adding -logger XmlLogger cause Exception on build finished</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="functioncall">
        <location start="583" end="629" />
        <code>fireBuildFinished(getCurrentProject(), error);</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="630" end="779" />
        <code>if (error == null &amp;&amp; scriptExecuted) {
  logMessage(getCurrentProject(), getTimeString(System.currentTimeMillis() - 
startTime), Project.MSG_INFO);
}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="909" end="1058" />
        <code>if (error == null &amp;&amp; scriptExecuted) {
  logMessage(getCurrentProject(), getTimeString(System.currentTimeMillis() - 
startTime), Project.MSG_INFO);
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1059" end="1105" />
        <code>fireBuildFinished(getCurrentProject(), error);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Hi!

&gt;If I start the script using "-logger org.apache.tools.ant.XmlLogger" the
&gt;following output is generated. It seems the logger is working but I'm
&gt;wondering about the exception. It seems that the Eclipse AntRunner is
&gt;invoking something when the build is finished ?!?

I found the bug!!!!

The problem is InternalAntRunner around line 564. In the current code (build 
20030115) the build is finished and then a message is loged. But if you finish 
a build, the XmlLogger throws away some vars (buildElement). I don't know Ant 
but I think this is the root element.

------------
fireBuildFinished(getCurrentProject(), error);
if (error == null &amp;&amp; scriptExecuted) {
  logMessage(getCurrentProject(), getTimeString(System.currentTimeMillis() - 
startTime), Project.MSG_INFO);
}
------------


A possible solution might be to fire the "build finished" event after doing the 
last log entry!!!


------------
if (error == null &amp;&amp; scriptExecuted) {
  logMessage(getCurrentProject(), getTimeString(System.currentTimeMillis() - 
startTime), Project.MSG_INFO);
}
fireBuildFinished(getCurrentProject(), error);
------------

Cu, Gunnar
I love bug reports where the reporter has taken the time to look closely at 
the problem...thanks!
Darin, there are more problems. I tried running the patched version but the 
generated XML log is always empty. I think it is not filled correctly.

Any ideas?

I'd like to help because we really need the ant build output as XML.

The internal ant runner is closing the err and out streams too soon. 

In the finally block of run(List) you need to move the fireBuildFinished after 
the closing of err and out.  The XmlLogger doesn't write anything to disk until 
build finished.
Thanks. Do you think it will be fixed in next builds?
It is already fixed in HEAD...so yes. Thanks for your help.
If you need it before then you should be able to pull from CVS the two jars 
that changed and put them into your install plugin directory (make a backup of 
the old ones first :-) ) org.eclipse.ant.core\lib (antsupportlib.jar) and 
org.eclipse.ui.externaltools\lib (antrunner.jar). It should work (worth a try 
anyways).
Changes to InternalAntRunner to close the streams for the user specified log 
streams after build finished.

moved the "time" messaging into AntProcessBuildLogger where it belonged. 
Otherwise other loggers, such as the XmlLogger would be reporting the time 
twice.

Change the AntProcessBuildLogger to lazily retrieved the ant process. It was 
relying on a build started message before it would log any other messages. This 
was incorrect.

Reworked dealing with -projecthelp to make it more like the commandline ant 
(just for fun)
Please verify (Jared and / or Gunnar if you are so inclined :-) )
Verified code. Gunnar, please let us know whether or not your test case is
working for you in the next build.
My testcase works ok now using the latest libs (antsupportlib.jar and 
antrunner.jar) from CVS HEAD.</WithStack>
    <WithOutStack>Hi!

&gt;If I start the script using "-logger org.apache.tools.ant.XmlLogger" the
&gt;following output is generated. It seems the logger is working but I'm
&gt;wondering about the exception. It seems that the Eclipse AntRunner is
&gt;invoking something when the build is finished ?!?

I found the bug!!!!

The problem is InternalAntRunner around line 564. In the current code (build 
20030115) the build is finished and then a message is loged. But if you finish 
a build, the XmlLogger throws away some vars (buildElement). I don't know Ant 
but I think this is the root element.

------------
fireBuildFinished(getCurrentProject(), error);
if (error == null &amp;&amp; scriptExecuted) {
  logMessage(getCurrentProject(), getTimeString(System.currentTimeMillis() - 
startTime), Project.MSG_INFO);
}
------------


A possible solution might be to fire the "build finished" event after doing the 
last log entry!!!


------------
if (error == null &amp;&amp; scriptExecuted) {
  logMessage(getCurrentProject(), getTimeString(System.currentTimeMillis() - 
startTime), Project.MSG_INFO);
}
fireBuildFinished(getCurrentProject(), error);
------------

Cu, Gunnar
I love bug reports where the reporter has taken the time to look closely at 
the problem...thanks!
Darin, there are more problems. I tried running the patched version but the 
generated XML log is always empty. I think it is not filled correctly.

Any ideas?

I'd like to help because we really need the ant build output as XML.

The internal ant runner is closing the err and out streams too soon. 

In the finally block of run(List) you need to move the fireBuildFinished after 
the closing of err and out.  The XmlLogger doesn't write anything to disk until 
build finished.
Thanks. Do you think it will be fixed in next builds?
It is already fixed in HEAD...so yes. Thanks for your help.
If you need it before then you should be able to pull from CVS the two jars 
that changed and put them into your install plugin directory (make a backup of 
the old ones first :-) ) org.eclipse.ant.core\lib (antsupportlib.jar) and 
org.eclipse.ui.externaltools\lib (antrunner.jar). It should work (worth a try 
anyways).
Changes to InternalAntRunner to close the streams for the user specified log 
streams after build finished.

moved the "time" messaging into AntProcessBuildLogger where it belonged. 
Otherwise other loggers, such as the XmlLogger would be reporting the time 
twice.

Change the AntProcessBuildLogger to lazily retrieved the ant process. It was 
relying on a build started message before it would log any other messages. This 
was incorrect.

Reworked dealing with -projecthelp to make it more like the commandline ant 
(just for fun)
Please verify (Jared and / or Gunnar if you are so inclined :-) )
Verified code. Gunnar, please let us know whether or not your test case is
working for you in the next build.
My testcase works ok now using the latest libs (antsupportlib.jar and 
antrunner.jar) from CVS HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30084" />
    <CreationDate amount="2003-01-23 08:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Printing - Incorrect CopyArea</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="import">
        <location start="36" end="70" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="import">
        <location start="71" end="96" />
        <code>import org.eclipse.swt.*;</code>
      </source_code>
      <source_code type="import">
        <location start="97" end="131" />
        <code>import org.eclipse.swt.graphics.*;</code>
      </source_code>
      <source_code type="import">
        <location start="132" end="166" />
        <code>import org.eclipse.swt.printing.*;</code>
      </source_code>
      <source_code type="import">
        <location start="167" end="199" />
        <code>import org.eclipse.swt.layout.*;</code>
      </source_code>
      <source_code type="class">
        <location start="200" end="1657" />
        <code>public class A
{
	public static void main(String[] argv) {
		new A().printImage();
	}
	public void printImage() {
		Display display = new Display();
		Shell shell = new Shell(display);
		FillLayout layout = new FillLayout();
		shell.setLayout(layout);
		Button button = new Button(shell, SWT.PUSH);
		button.setText("test");
		shell.open();
			
		PrintDialog dialog = new PrintDialog(shell);
		PrinterData data = dialog.open();
		Printer printer = new Printer(data);
		
		Rectangle shellRect = shell.getBounds();

		Image printImage = new Image(display, shellRect);
		GC imageGC = new GC(shell);
		imageGC.copyArea(printImage, -4, -54); // shell image 
cropped if using 0,0
		ImageData printImageData = printImage.getImageData();
		printImageData.transparentPixel = -1;
		
		Point screenDPI = display.getDPI();
		Point printerDPI = printer.getDPI();
		int scaleFactor = printerDPI.x / screenDPI.x;
		Rectangle trim = printer.computeTrim(0, 0, 0, 0);
		if (printer.startJob("SYM Editor Print")) {
		 GC gc = new GC(printer);
		 if (printer.startPage()) {
		  gc.drawImage(printImage,0,0,
		  	printImageData.width,printImageData.height,
		  	-trim.x,-trim.y,
		  	scaleFactor * printImageData.width, 
                        scaleFactor * printImageData.height);
		  printer.endPage();
		 }
		 printer.endJob();
		}
		printer.dispose();
		imageGC.dispose();
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) display.sleep();
		}
	}
	
	

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Run code below.
Image gets cropped.

import org.eclipse.swt.widgets.*;
import org.eclipse.swt.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.printing.*;
import org.eclipse.swt.layout.*;
public class A
{
	public static void main(String[] argv) {
		new A().printImage();
	}
	public void printImage() {
		Display display = new Display();
		Shell shell = new Shell(display);
		FillLayout layout = new FillLayout();
		shell.setLayout(layout);
		Button button = new Button(shell, SWT.PUSH);
		button.setText("test");
		shell.open();
			
		PrintDialog dialog = new PrintDialog(shell);
		PrinterData data = dialog.open();
		Printer printer = new Printer(data);
		
		Rectangle shellRect = shell.getBounds();

		Image printImage = new Image(display, shellRect);
		GC imageGC = new GC(shell);
		imageGC.copyArea(printImage, -4, -54); // shell image 
cropped if using 0,0
		ImageData printImageData = printImage.getImageData();
		printImageData.transparentPixel = -1;
		
		Point screenDPI = display.getDPI();
		Point printerDPI = printer.getDPI();
		int scaleFactor = printerDPI.x / screenDPI.x;
		Rectangle trim = printer.computeTrim(0, 0, 0, 0);
		if (printer.startJob("SYM Editor Print")) {
		 GC gc = new GC(printer);
		 if (printer.startPage()) {
		  gc.drawImage(printImage,0,0,
		  	printImageData.width,printImageData.height,
		  	-trim.x,-trim.y,
		  	scaleFactor * printImageData.width, 
                        scaleFactor * printImageData.height);
		  printer.endPage();
		 }
		 printer.endJob();
		}
		printer.dispose();
		imageGC.dispose();
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) display.sleep();
		}
	}
	
	

}
Must use shell.getClientArea since gc(shell) only accesses the client area of the 
Shell.</WithStack>
    <WithOutStack>Run code below.
Image gets cropped.

import org.eclipse.swt.widgets.*;
import org.eclipse.swt.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.printing.*;
import org.eclipse.swt.layout.*;
public class A
{
	public static void main(String[] argv) {
		new A().printImage();
	}
	public void printImage() {
		Display display = new Display();
		Shell shell = new Shell(display);
		FillLayout layout = new FillLayout();
		shell.setLayout(layout);
		Button button = new Button(shell, SWT.PUSH);
		button.setText("test");
		shell.open();
			
		PrintDialog dialog = new PrintDialog(shell);
		PrinterData data = dialog.open();
		Printer printer = new Printer(data);
		
		Rectangle shellRect = shell.getBounds();

		Image printImage = new Image(display, shellRect);
		GC imageGC = new GC(shell);
		imageGC.copyArea(printImage, -4, -54); // shell image 
cropped if using 0,0
		ImageData printImageData = printImage.getImageData();
		printImageData.transparentPixel = -1;
		
		Point screenDPI = display.getDPI();
		Point printerDPI = printer.getDPI();
		int scaleFactor = printerDPI.x / screenDPI.x;
		Rectangle trim = printer.computeTrim(0, 0, 0, 0);
		if (printer.startJob("SYM Editor Print")) {
		 GC gc = new GC(printer);
		 if (printer.startPage()) {
		  gc.drawImage(printImage,0,0,
		  	printImageData.width,printImageData.height,
		  	-trim.x,-trim.y,
		  	scaleFactor * printImageData.width, 
                        scaleFactor * printImageData.height);
		  printer.endPage();
		 }
		 printer.endJob();
		}
		printer.dispose();
		imageGC.dispose();
		
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) display.sleep();
		}
	}
	
	

}
Must use shell.getClientArea since gc(shell) only accesses the client area of the 
Shell.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30085" />
    <CreationDate amount="2003-01-23 09:29:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Reformatter: add an option to not do anything about line wrapping (plus comments repositionning)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="13">
      <source_code type="ifstatement">
        <location start="520" end="531" />
        <code>if(boo) {</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="1288" end="1299" />
        <code>if(boo) {</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="1691" end="1704" />
        <code>if(boo) {</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="1937" end="1950" />
        <code>if(boo) {</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="2022" end="2035" />
        <code>if(boo) {</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2036" end="2054" />
        <code>//comment</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="3499" end="3522" />
        <code>if(boo) {  //comment1
}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="3521" end="3565" />
        <code>} else if(boo2) { //comment2
   //comment3
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3587" end="3609" />
        <code>if(boo) //comment1
{
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3610" end="3653" />
        <code>else if(boo2) //comment2
{ 
   //comment3
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3701" end="3729" />
        <code>if(boo) //comment1
{doit();}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="3790" end="3830" />
        <code>if(boo) {//comment1
doit(); //comment2
}</code>
      </source_code>
      <source_code type="elsestatement">
        <location start="3829" end="3870" />
        <code>} else {//comment3
dothat(); //comment4
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Please, Please!
Offer an option to preserve current line wrapping (except braces positionning).

The only really common denominator to all reformatter is to place braces and
indent properly. I hate to see the manual formatting destroyed because of
unwrapping when it was, or wrapping when I wanted a single line.

The rule is simple: anything that is a if, loop, switch, method and so on, can
be reconstructed but anything else should not be [un]wrapped.

-----

Additionnally: //comments at the end of a brace like in

  if(boo) { //comment

should not be moved since only the brace moved. I expect

  if(boo) //comment
  {

and the reverse apply (moving the brace up on the if line, before the comment)
How is that feature going?
I would love to be able to use the reformatter without destroying the values I
already put in my own formatting.

The only thing I would like, is the formatter taking care of the brace positions
and the tab indentation, not touching line wrapping.

Sounds like a minor switch to the current formatter. Hope it is.

Code formatting is provided by J Core.
Moving there for consideration.

With the new code formatter preferences page, if you disable all line wrapping,
it should doi what you want. Comments are left where they are in the source.
Your case:

  if(boo) { //comment

should not be moved since only the brace moved. I expect

  if(boo) //comment
  {

is completely unmanagable. How do you find out that the comment is related to
the condition? It could be related to the block that you just open.
&gt;How do you find out that the comment is related to
&gt;the condition? It could be related to the block that you just open.

The line feed.
For the code:
    if(boo) { //comment
        &lt;body&gt;

If the code model do not represent line breaks, you are right. You only get
if-statement, brace, comment, body.
Comment may belong to body header or the if, you cannot tell.


But if the code model gives:

    if(boo) { //comment
        &lt;body&gt;
if-statement, brace, comment, LF, body

-or-

    if(boo) {
        //comment
        &lt;body&gt;

if-statement, brace, LF, comment, body

then the difference is clear.

The new formatter uses a AST to walk the code to format. It doesn't go 
backwards.
How would you have something like this:
if (boo
   &amp;&amp; b1
   &amp;&amp; b2) { // needs to test b2 because....
....

}

How do you want the formatter to find out that the comment is only relevant 
for the line that contains b2.
My point of view is that it is up to the user to put its comments. The 
formatter leaves them where they are. It tries to keep line comment on the 
same line as much as possible.
Remembering that this RFE is about not-unwrapping and not-wrapping, while
positionning braces and indenting. Which means:

if (boo
   &amp;&amp; b1
   &amp;&amp; b2) { // needs to test b2 because....
....
}

would become (if brace position is changed):

if (boo
   &amp;&amp; b1
   &amp;&amp; b2) // needs to test b2 because....
{
....
}


&gt;How do you want the formatter to find out that the comment is only relevant 
&gt;for the line that contains b2.

It doesn't have to. In order to do this brace re-positionning, the said "walker"
do not have to find out anything because the line "&amp;&amp; b2)" still stand alone, I
mean, it is not unwrapped to join previous lines. It does not assign the comment
to the opening block, it assigns the comment in priority to the line, then the
brace if there is nothing else than a brace (for example at the closing brace,
often alone).

Here is another example (push brace down):

if(boo) {  //comment1
} else if(boo2) { //comment2
   //comment3
}//comment4


becomes

if(boo) //comment1
{
}
else if(boo2) //comment2
{ 
   //comment3
} //comment4


Another example: (pull brace up)

if(boo) //comment1
{doit();} //comment2
else //comment3
{dothat();} //comment4

becomes

if(boo) {//comment1
doit(); //comment2
} else {//comment3
dothat(); //comment4
}


See how the comment always follow the meaningfull (non-brace) code, and then
if no non-brace code, it follows the brace.

I mean, I usually make the code so the computer do what I would do myself!
Don't you think these simple law are sufficient to have comments follow the
appropriate code? There is nothing clever in that: the comment follows the code,
and braces are not code, unless left alone.

In other words, if wrapping control is disabled, and brace positions do not
change, then the formatter merely reindent, (and plays with the minor things
like spaces around operators, etc...) and the file has the exact same number of
lines.

If braces positions are changing, beside the fact that lines are created/deleted
for these braces, the comment NEVER leaves the actual meaningfull line.
If you prefer, a brace is not meaningfull to the human, especially since they
may be ommited for single statement blocks.





&gt;It tries to keep line comment on the 
&gt;same line as much as possible.

Exactly. So the only thing to watch for is a brace right before the comment.

PS:
The walker cannot go back? On a stream, you can most certainly mark, look ahead,
and reset. On a document model, the whole data is accessible. So I don't get
what is the problem, but the walker code is, sorry, most obviously not very
conveniently designed for a code formatter. This engine should probably be
revisited. I know how reliable it has to be. I tried to write my own
reformatter, twice, with limited results. So good luck.
This would require to reorder tokens and this is not considered for now.
Will reconsider post 3.0
*** Bug 168168 has been marked as a duplicate of this bug. ***
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Please, Please!
Offer an option to preserve current line wrapping (except braces positionning).

The only really common denominator to all reformatter is to place braces and
indent properly. I hate to see the manual formatting destroyed because of
unwrapping when it was, or wrapping when I wanted a single line.

The rule is simple: anything that is a if, loop, switch, method and so on, can
be reconstructed but anything else should not be [un]wrapped.

-----

Additionnally: //comments at the end of a brace like in

  if(boo) { //comment

should not be moved since only the brace moved. I expect

  if(boo) //comment
  {

and the reverse apply (moving the brace up on the if line, before the comment)
How is that feature going?
I would love to be able to use the reformatter without destroying the values I
already put in my own formatting.

The only thing I would like, is the formatter taking care of the brace positions
and the tab indentation, not touching line wrapping.

Sounds like a minor switch to the current formatter. Hope it is.

Code formatting is provided by J Core.
Moving there for consideration.

With the new code formatter preferences page, if you disable all line wrapping,
it should doi what you want. Comments are left where they are in the source.
Your case:

  if(boo) { //comment

should not be moved since only the brace moved. I expect

  if(boo) //comment
  {

is completely unmanagable. How do you find out that the comment is related to
the condition? It could be related to the block that you just open.
&gt;How do you find out that the comment is related to
&gt;the condition? It could be related to the block that you just open.

The line feed.
For the code:
    if(boo) { //comment
        &lt;body&gt;

If the code model do not represent line breaks, you are right. You only get
if-statement, brace, comment, body.
Comment may belong to body header or the if, you cannot tell.


But if the code model gives:

    if(boo) { //comment
        &lt;body&gt;
if-statement, brace, comment, LF, body

-or-

    if(boo) {
        //comment
        &lt;body&gt;

if-statement, brace, LF, comment, body

then the difference is clear.

The new formatter uses a AST to walk the code to format. It doesn't go 
backwards.
How would you have something like this:
if (boo
   &amp;&amp; b1
   &amp;&amp; b2) { // needs to test b2 because....
....

}

How do you want the formatter to find out that the comment is only relevant 
for the line that contains b2.
My point of view is that it is up to the user to put its comments. The 
formatter leaves them where they are. It tries to keep line comment on the 
same line as much as possible.
Remembering that this RFE is about not-unwrapping and not-wrapping, while
positionning braces and indenting. Which means:

if (boo
   &amp;&amp; b1
   &amp;&amp; b2) { // needs to test b2 because....
....
}

would become (if brace position is changed):

if (boo
   &amp;&amp; b1
   &amp;&amp; b2) // needs to test b2 because....
{
....
}


&gt;How do you want the formatter to find out that the comment is only relevant 
&gt;for the line that contains b2.

It doesn't have to. In order to do this brace re-positionning, the said "walker"
do not have to find out anything because the line "&amp;&amp; b2)" still stand alone, I
mean, it is not unwrapped to join previous lines. It does not assign the comment
to the opening block, it assigns the comment in priority to the line, then the
brace if there is nothing else than a brace (for example at the closing brace,
often alone).

Here is another example (push brace down):

if(boo) {  //comment1
} else if(boo2) { //comment2
   //comment3
}//comment4


becomes

if(boo) //comment1
{
}
else if(boo2) //comment2
{ 
   //comment3
} //comment4


Another example: (pull brace up)

if(boo) //comment1
{doit();} //comment2
else //comment3
{dothat();} //comment4

becomes

if(boo) {//comment1
doit(); //comment2
} else {//comment3
dothat(); //comment4
}


See how the comment always follow the meaningfull (non-brace) code, and then
if no non-brace code, it follows the brace.

I mean, I usually make the code so the computer do what I would do myself!
Don't you think these simple law are sufficient to have comments follow the
appropriate code? There is nothing clever in that: the comment follows the code,
and braces are not code, unless left alone.

In other words, if wrapping control is disabled, and brace positions do not
change, then the formatter merely reindent, (and plays with the minor things
like spaces around operators, etc...) and the file has the exact same number of
lines.

If braces positions are changing, beside the fact that lines are created/deleted
for these braces, the comment NEVER leaves the actual meaningfull line.
If you prefer, a brace is not meaningfull to the human, especially since they
may be ommited for single statement blocks.





&gt;It tries to keep line comment on the 
&gt;same line as much as possible.

Exactly. So the only thing to watch for is a brace right before the comment.

PS:
The walker cannot go back? On a stream, you can most certainly mark, look ahead,
and reset. On a document model, the whole data is accessible. So I don't get
what is the problem, but the walker code is, sorry, most obviously not very
conveniently designed for a code formatter. This engine should probably be
revisited. I know how reliable it has to be. I tried to write my own
reformatter, twice, with limited results. So good luck.
This would require to reorder tokens and this is not considered for now.
Will reconsider post 3.0
*** Bug 168168 has been marked as a duplicate of this bug. ***
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30086" />
    <CreationDate amount="2003-01-23 09:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Ant view not updated when project deleted</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437338565551">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason>at</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.ui.externaltools.internal.ant.launchConfigurations.AntLaunchShortcut.launch(AntLaunchShortcut.java:122)</Frame>
          <Frame depth="1">org.eclipse.ui.externaltools.internal.ant.view.actions.RunTargetAction.run(RunTargetAction.java:58)</Frame>
          <Frame depth="2">org.eclipse.ui.externaltools.internal.ant.view.actions.RunTargetAction.run(RunTargetAction.java:48)</Frame>
          <Frame depth="3">org.eclipse.jface.action.Action.runWithEvent(Action.java:804)</Frame>
          <Frame depth="4">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:422)</Frame>
          <Frame depth="5">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:374)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:368)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:69)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="12">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="13">org.eclipse.ui.internal.Workbench.run(Workbench.java:1508)</Frame>
          <Frame depth="14">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="15">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="16">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I had an ant script in the ant view, and then deleted the associatd project 
from the workspace. The script remained in the ant view. Attempting to run the 
script produced an NPE.

!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at 
	at 
org.eclipse.ui.externaltools.internal.ant.launchConfigurations.AntLaunchShortcut
.launch(AntLaunchShortcut.java:122)
	at 
org.eclipse.ui.externaltools.internal.ant.view.actions.RunTargetAction.run
(RunTargetAction.java:58)
	at 
org.eclipse.ui.externaltools.internal.ant.view.actions.RunTargetAction.run
(RunTargetAction.java:48)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:804)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:422)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:374)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:368)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:69)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1508)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
Should also check:
* Close project
* Delete folder
* Delete file
The bug is that the file returned by the resource delta
now returns null to getLocation(). It's never done this
before.
If a project has been deleted, we can handle it at that level and not process 
all of the children individually.
Fixed in AntView.
Please verify.
*** Bug 29251 has been marked as a duplicate of this bug. ***
Verified.</WithStack>
    <WithOutStack>I had an ant script in the ant view, and then deleted the associatd project 
from the workspace. The script remained in the ant view. Attempting to run the 
script produced an NPE.

!MESSAGE java.lang.NullPointerException
!STACK 0

Should also check:
* Close project
* Delete folder
* Delete file
The bug is that the file returned by the resource delta
now returns null to getLocation(). It's never done this
before.
If a project has been deleted, we can handle it at that level and not process 
all of the children individually.
Fixed in AntView.
Please verify.
*** Bug 29251 has been marked as a duplicate of this bug. ***
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30087" />
    <CreationDate amount="2003-01-23 09:38:00 -0500" />
    <DupId amount="28942" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>extract method: cannot extract tail of void methods</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="141" end="237" />
        <code>public void f3(int y){
 int yg= y+0;
 if (y &gt; 0)   //cannot extract
   return;    //this part
 }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>20030121
there could be a heuristic added that includes the implicit return at the end 
of void methods so that i could extract stuff like:

public void f3(int y){
 int yg= y+0;
 if (y &gt; 0)   //cannot extract
   return;    //this part
 }
the word 'heuristic' is of course bogus here - it could be a real thing 
(implicit return is always at the end of void methods).


*** This bug has been marked as a duplicate of 28942 ***</WithStack>
    <WithOutStack>20030121
there could be a heuristic added that includes the implicit return at the end 
of void methods so that i could extract stuff like:

public void f3(int y){
 int yg= y+0;
 if (y &gt; 0)   //cannot extract
   return;    //this part
 }
the word 'heuristic' is of course bogus here - it could be a real thing 
(implicit return is always at the end of void methods).


*** This bug has been marked as a duplicate of 28942 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30088" />
    <CreationDate amount="2003-01-23 09:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Junit plugin test - cannot edit launch config to remove individual test [JUnit]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20030122 + pde junit 2.1.3

When developping tests, I tried to run them using run as Junit plugin test. 
Given I was editing a test method, it picked up this one method only for run.

Could not figure how to change the launch config to tell it to run the entire 
test suite instead.
Currently you cannot not.
Need to revisit whether the text selection based test selection behaviour is 
desirable.
removed the text selectioin based test case selection</WithStack>
    <WithOutStack>Build 20030122 + pde junit 2.1.3

When developping tests, I tried to run them using run as Junit plugin test. 
Given I was editing a test method, it picked up this one method only for run.

Could not figure how to change the launch config to tell it to run the entire 
test suite instead.
Currently you cannot not.
Need to revisit whether the text selection based test selection behaviour is 
desirable.
removed the text selectioin based test case selection</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30089" />
    <CreationDate amount="2003-01-23 09:53:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>PDE doesn't use plugins in my workspace</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Launch build I20030122 on a fresh workspace</Line>
          <Line>2) import all plugins as binary</Line>
          <Line>3) checkout org.eclipse.core.resources and all team plugins from CVS</Line>
          <Line>4) launch a debug session of Eclipse on an existing workspace ported from 2.0.2</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I performed the following steps:

1) Launch build I20030122 on a fresh workspace
2) import all plugins as binary
3) checkout org.eclipse.core.resources and all team plugins from CVS
4) launch a debug session of Eclipse on an existing workspace ported from 2.0.2

The code being run is not the code in my workspace but appears to be the code 
in the I20030122 build. If I delete the .config directory in the workspace I am 
debugging, it all starts to work again.
Created attachment 3100
Zipped contents of .config

Here is the offending .config directory
Christophe, we have seen this problem more than once. Looks like if there is a 
configuration info, we ignore 'plugins' passed directly and try to use the 
store configuration.

Update Core should never use the saved configuration. Instead, it should always 
use the plug-ins passed using the 'plugins' attribute.
Action Taken: Seems to be linked to 19108 somehow.
Action Plan: Investigate
Meaning bug 29108
Now, when I launch, the folliwng appears in the .log file

java.fullversion=J2RE 1.3.1 IBM Windows 32 build cn131-20020403 (JIT disabled)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -dev bin -plugins 
file:D:\dev\workspace\.metadata\.plugins\org.eclipse.pde.core\D__dev_eclipse_old
Workspace\plugin_path.properties -data D:\dev\eclipse\oldWorkspace -os win32 -
ws win32 -arch x86 -nl en_US -install file:D:/dev/eclipse/
!ENTRY org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Problems encountered loading the plug-in registry.
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.core.boot". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.core.boot_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.apache.xerces". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.apache.xerces_4.0.7/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.core.runtime". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.core.runtime_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.update.core". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.update.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.swt". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.swt_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.doc.user". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.doc.user_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ant.core". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ant.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help.appserver". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.help.appserver_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.text". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.text_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.apache.ant". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.apache.ant_1.5.1/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.apache.lucene". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.apache.lucene_1.2.0.Final/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jface". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.jface_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.help_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.tomcat". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.tomcat_4.0.6/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.debug.core". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.debug.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jface.text". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jface.text_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help.webapp". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.help.webapp_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.workbench". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.workbench_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same 
id: "org.eclipse.ui.workbench.texteditor". Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.workbench.texteditor_2.1.0/plugin
.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.views". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.views_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.editors". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.editors_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.debug.ui". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.debug.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.compare". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.compare_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.update.ui.forms". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.update.ui.forms_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.search". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.search_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.help.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.externaltools". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.externaltools_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.update.ui". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.update.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.doc.isv". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.doc.isv_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.source". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.source_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.win32". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.win32_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same 
id: "org.eclipse.platform.win32.source". Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.win32.source_2.1.0/plugin.x
ml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.core". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.junit". Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.junit_3.8.1/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.jdt_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.doc.user". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.doc.user_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.debug". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.debug_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.launching". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.launching_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.debug.ui". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.debug.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.junit". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.junit_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.doc.isv". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.doc.isv_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.source". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.source_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.doc.user". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.doc.user_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.build". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.build_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.runtime". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.runtime_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.source". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.source_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.core". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.pde_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.pde.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.sdk.win32". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.sdk.win32_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.webdav". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.webdav_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.launching.j9". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.launching.j9_2.0.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.junit". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.junit_2.1.3/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.ui". Ignoring 
duplicate at "file:D:/dev/workspace/org.eclipse.team.ui/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.cvs.ui". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.cvs.ui/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.extras". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.extras/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.core.resources". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.core.resources/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.cvs.core". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.cvs.core/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.cvs.ssh". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.cvs.ssh/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.core". Ignoring 
duplicate at "file:D:/dev/workspace/org.eclipse.team.core/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Duplicate fragment found with id "org.eclipse.ui.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Duplicate fragment found with id "org.eclipse.help.ui.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Duplicate fragment found with id "org.eclipse.swt.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Duplicate fragment found with id "org.eclipse.update.ui.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Duplicate fragment found with id "org.eclipse.update.core.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Duplicate fragment found with id "org.eclipse.core.resources.win32" 
and version "2.1.0".
How do you start the workbench ? do you pass the -install ?
I started the 2.0.2 Eclipse using:

  D:\dev\R2_0_2\eclipse\eclipse.exe -vm D:\dev\ibm\jre\bin\javaw.exe -data 
D:\dev\eclipse\oldWorkspace

I started the 2.1 Eclipse using

  D:\dev\eclipse\eclipse.exe -vm D:\dev\ibm\jre\bin\javaw.exe -data 
D:\dev\workspace -debug

I launched PDE using the default settings (except I changed the workspace to 
D:\dev\eclipse\oldWorkspace)
To elaborate, I used 2.0.2 to check out two projects from a test repository. 
Then I closed 2.0.2 and launched the debug session on the 2.0.2 workspace.
Action Taken: 
I installed the driver 0122 in d:\OTI\Drivers\0122
I installed eclipse 2.0.2 in c:\202
I started 2.0.2, I imported 2 projects from CVS
I closed 2.0.2
I started 0122
I setup a runtime workspace launcher against C:\202\eclipse\workspace
I launched it as Debug
I selected the thread , right click, properties
I got

c:\JDK\SUN\j2sdk1.4.1\jre\bin\javaw.exe -classpath
C:\OTI\Drivers\0122\eclipse\startup.jar -Xdebug -Xnoagent -Djava.compiler=NONE
-Xrunjdwp:transport=dt_socket,suspend=y,address=localhost:8151
org.eclipse.core.launcher.Main -dev bin -plugins
file:C:\OTI\Drivers\0122\eclipse\workspace\.metadata\.plugins\org.eclipse.pde.core\C__202_eclipse_workspace\plugin_path.properties
-data C:\202\eclipse\workspace -showsplash C:\OTI\Drivers\0122\eclipse\eclipse
-showsplash 600 -os win32 -ws win32 -arch x86 -nl en_US

What is yours ?

When I launch the 2.1 build over the 2.0.2 workspace my log contains the 
following:

!SESSION Jan 23, 2003 13:06:10.140 ---------------------------------------------
java.fullversion=J2RE 1.3.1 IBM Windows 32 build cn131-20020403 (JIT disabled)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -dev bin -plugins 
file:D:\dev\workspace\.metadata\.plugins\org.eclipse.pde.core\D__dev_eclipse_old
Workspace\plugin_path.properties -data D:\dev\eclipse\oldWorkspace -os win32 -
ws win32 -arch x86 -nl en_US -install file:D:/dev/eclipse/
!ENTRY org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.140
!MESSAGE Problems encountered loading the plug-in registry.
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.140
!MESSAGE Two plug-ins found with the same id: "org.eclipse.core.boot". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.core.boot_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.140
!MESSAGE Two plug-ins found with the same id: "org.apache.xerces". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.apache.xerces_4.0.7/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.140
!MESSAGE Two plug-ins found with the same id: "org.eclipse.core.runtime". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.core.runtime_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.update.core". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.update.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.swt". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.swt_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.doc.user". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.doc.user_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ant.core". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ant.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help.appserver". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.help.appserver_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.text". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.text_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.apache.ant". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.apache.ant_1.5.1/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.apache.lucene". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.apache.lucene_1.2.0.Final/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jface". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.jface_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.help_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.tomcat". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.tomcat_4.0.6/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.debug.core". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.debug.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jface.text". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jface.text_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help.webapp". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.help.webapp_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.workbench". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.workbench_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same 
id: "org.eclipse.ui.workbench.texteditor". Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.workbench.texteditor_2.1.0/plugin
.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.views". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.views_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.editors". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.editors_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.debug.ui". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.debug.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.compare". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.compare_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.update.ui.forms". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.update.ui.forms_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.search". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.search_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.help.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.externaltools". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.externaltools_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.update.ui". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.update.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.doc.isv". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.doc.isv_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.source". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.source_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.win32". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.win32_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same 
id: "org.eclipse.platform.win32.source". Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.win32.source_2.1.0/plugin.x
ml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.core". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.junit". Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.junit_3.8.1/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.jdt_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.doc.user". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.doc.user_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.debug". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.debug_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.launching". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.launching_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.debug.ui". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.debug.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.junit". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.junit_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.doc.isv". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.doc.isv_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.source". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.source_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.doc.user". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.doc.user_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.build". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.build_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.runtime". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.runtime_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.source". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.source_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.core". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.pde_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.pde.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.sdk.win32". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.sdk.win32_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.webdav". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.webdav_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.extras". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.team.extras_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.launching.j9". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.launching.j9_2.0.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.junit". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.junit_2.1.3/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.ui". Ignoring 
duplicate at "file:D:/dev/workspace/org.eclipse.team.ui/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.cvs.ui". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.cvs.ui/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.core.resources". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.core.resources/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.cvs.core". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.cvs.core/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.ftp". Ignoring 
duplicate at "file:D:/dev/workspace/org.eclipse.team.ftp/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.cvs.ssh". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.cvs.ssh/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.core". Ignoring 
duplicate at "file:D:/dev/workspace/org.eclipse.team.core/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.webdav". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.webdav/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Duplicate fragment found with id "org.eclipse.ui.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Duplicate fragment found with id "org.eclipse.help.ui.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Duplicate fragment found with id "org.eclipse.swt.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Duplicate fragment found with id "org.eclipse.update.ui.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Duplicate fragment found with id "org.eclipse.update.core.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Duplicate fragment found with id "org.eclipse.core.resources.win32" 
and version "2.1.0".
I do not have any log,
Are my steps the same you took ?
Are the properties if the Thread the same as the one in the log ?
The only differences I can think of would be:
1) I imported all plugins WITHOUT copying them.
2) I checked out org.eclipse.core.runtime and all the org.eclipse.team.* 
plugins from Eclipse (you didn't mention having any source projects in your 2.1 
workspace).
Action Taken: I talked to the Architect of Startup and teh one of PDE. PDE
should create a platform configuration instead of calling the deprecated
-plugins and -boot arguments. Update Core must create a paper explaining how to
do that before PDE core could evaluate feasibility for 2.1
Action Plan: Update Core to create a white paper
*** Bug 29943 has been marked as a duplicate of this bug. ***
PDE is now using a new way of launching a runtime-workbench.</WithStack>
    <WithOutStack>I performed the following steps:

1) Launch build I20030122 on a fresh workspace
2) import all plugins as binary
3) checkout org.eclipse.core.resources and all team plugins from CVS
4) launch a debug session of Eclipse on an existing workspace ported from 2.0.2

The code being run is not the code in my workspace but appears to be the code 
in the I20030122 build. If I delete the .config directory in the workspace I am 
debugging, it all starts to work again.
Created attachment 3100
Zipped contents of .config

Here is the offending .config directory
Christophe, we have seen this problem more than once. Looks like if there is a 
configuration info, we ignore 'plugins' passed directly and try to use the 
store configuration.

Update Core should never use the saved configuration. Instead, it should always 
use the plug-ins passed using the 'plugins' attribute.
Action Taken: Seems to be linked to 19108 somehow.
Action Plan: Investigate
Meaning bug 29108
Now, when I launch, the folliwng appears in the .log file

java.fullversion=J2RE 1.3.1 IBM Windows 32 build cn131-20020403 (JIT disabled)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -dev bin -plugins 
file:D:\dev\workspace\.metadata\.plugins\org.eclipse.pde.core\D__dev_eclipse_old
Workspace\plugin_path.properties -data D:\dev\eclipse\oldWorkspace -os win32 -
ws win32 -arch x86 -nl en_US -install file:D:/dev/eclipse/
!ENTRY org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Problems encountered loading the plug-in registry.
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.core.boot". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.core.boot_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.apache.xerces". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.apache.xerces_4.0.7/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.core.runtime". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.core.runtime_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.update.core". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.update.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.swt". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.swt_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.doc.user". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.doc.user_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ant.core". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ant.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help.appserver". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.help.appserver_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.eclipse.text". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.text_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.apache.ant". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.apache.ant_1.5.1/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.530
!MESSAGE Two plug-ins found with the same id: "org.apache.lucene". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.apache.lucene_1.2.0.Final/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jface". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.jface_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.help_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.tomcat". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.tomcat_4.0.6/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.debug.core". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.debug.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jface.text". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jface.text_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help.webapp". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.help.webapp_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.workbench". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.workbench_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same 
id: "org.eclipse.ui.workbench.texteditor". Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.workbench.texteditor_2.1.0/plugin
.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.views". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.views_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.editors". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.editors_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.debug.ui". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.debug.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.compare". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.compare_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.update.ui.forms". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.update.ui.forms_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.546
!MESSAGE Two plug-ins found with the same id: "org.eclipse.search". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.search_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.help.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.externaltools". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.externaltools_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.update.ui". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.update.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.doc.isv". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.doc.isv_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.source". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.source_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.win32". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.win32_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same 
id: "org.eclipse.platform.win32.source". Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.win32.source_2.1.0/plugin.x
ml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.core". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.junit". Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.junit_3.8.1/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.jdt_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.562
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.doc.user". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.doc.user_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.debug". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.debug_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.launching". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.launching_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.debug.ui". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.debug.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.junit". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.junit_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.doc.isv". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.doc.isv_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.source". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.source_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.doc.user". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.doc.user_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.build". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.build_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.runtime". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.runtime_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.source". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.source_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.core". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.pde_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.pde.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.sdk.win32". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.sdk.win32_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.577
!MESSAGE Two plug-ins found with the same id: "org.eclipse.webdav". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.webdav_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.launching.j9". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.launching.j9_2.0.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.junit". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.junit_2.1.3/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.ui". Ignoring 
duplicate at "file:D:/dev/workspace/org.eclipse.team.ui/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.cvs.ui". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.cvs.ui/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.extras". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.extras/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.core.resources". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.core.resources/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.cvs.core". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.cvs.core/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.cvs.ssh". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.cvs.ssh/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.core". Ignoring 
duplicate at "file:D:/dev/workspace/org.eclipse.team.core/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Duplicate fragment found with id "org.eclipse.ui.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Duplicate fragment found with id "org.eclipse.help.ui.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Duplicate fragment found with id "org.eclipse.swt.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Duplicate fragment found with id "org.eclipse.update.ui.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Duplicate fragment found with id "org.eclipse.update.core.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 09:22:34.593
!MESSAGE Duplicate fragment found with id "org.eclipse.core.resources.win32" 
and version "2.1.0".
How do you start the workbench ? do you pass the -install ?
I started the 2.0.2 Eclipse using:

  D:\dev\R2_0_2\eclipse\eclipse.exe -vm D:\dev\ibm\jre\bin\javaw.exe -data 
D:\dev\eclipse\oldWorkspace

I started the 2.1 Eclipse using

  D:\dev\eclipse\eclipse.exe -vm D:\dev\ibm\jre\bin\javaw.exe -data 
D:\dev\workspace -debug

I launched PDE using the default settings (except I changed the workspace to 
D:\dev\eclipse\oldWorkspace)
To elaborate, I used 2.0.2 to check out two projects from a test repository. 
Then I closed 2.0.2 and launched the debug session on the 2.0.2 workspace.
Action Taken: 
I installed the driver 0122 in d:\OTI\Drivers\0122
I installed eclipse 2.0.2 in c:\202
I started 2.0.2, I imported 2 projects from CVS
I closed 2.0.2
I started 0122
I setup a runtime workspace launcher against C:\202\eclipse\workspace
I launched it as Debug
I selected the thread , right click, properties
I got

c:\JDK\SUN\j2sdk1.4.1\jre\bin\javaw.exe -classpath
C:\OTI\Drivers\0122\eclipse\startup.jar -Xdebug -Xnoagent -Djava.compiler=NONE
-Xrunjdwp:transport=dt_socket,suspend=y,address=localhost:8151
org.eclipse.core.launcher.Main -dev bin -plugins
file:C:\OTI\Drivers\0122\eclipse\workspace\.metadata\.plugins\org.eclipse.pde.core\C__202_eclipse_workspace\plugin_path.properties
-data C:\202\eclipse\workspace -showsplash C:\OTI\Drivers\0122\eclipse\eclipse
-showsplash 600 -os win32 -ws win32 -arch x86 -nl en_US

What is yours ?

When I launch the 2.1 build over the 2.0.2 workspace my log contains the 
following:

!SESSION Jan 23, 2003 13:06:10.140 ---------------------------------------------
java.fullversion=J2RE 1.3.1 IBM Windows 32 build cn131-20020403 (JIT disabled)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -dev bin -plugins 
file:D:\dev\workspace\.metadata\.plugins\org.eclipse.pde.core\D__dev_eclipse_old
Workspace\plugin_path.properties -data D:\dev\eclipse\oldWorkspace -os win32 -
ws win32 -arch x86 -nl en_US -install file:D:/dev/eclipse/
!ENTRY org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.140
!MESSAGE Problems encountered loading the plug-in registry.
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.140
!MESSAGE Two plug-ins found with the same id: "org.eclipse.core.boot". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.core.boot_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.140
!MESSAGE Two plug-ins found with the same id: "org.apache.xerces". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.apache.xerces_4.0.7/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.140
!MESSAGE Two plug-ins found with the same id: "org.eclipse.core.runtime". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.core.runtime_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.update.core". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.update.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.swt". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.swt_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.doc.user". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.doc.user_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ant.core". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ant.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help.appserver". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.help.appserver_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.text". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.text_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.apache.ant". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.apache.ant_1.5.1/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.apache.lucene". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.apache.lucene_1.2.0.Final/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jface". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.jface_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.help_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.tomcat". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.tomcat_4.0.6/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.debug.core". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.debug.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jface.text". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jface.text_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help.webapp". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.help.webapp_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.workbench". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.workbench_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same 
id: "org.eclipse.ui.workbench.texteditor". Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.workbench.texteditor_2.1.0/plugin
.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.views". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.views_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.editors". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.editors_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.155
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.debug.ui". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.debug.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.compare". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.compare_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.update.ui.forms". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.update.ui.forms_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.search". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.search_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.help.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.help.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.ui.externaltools". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.ui.externaltools_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.update.ui". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.update.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.doc.isv". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.doc.isv_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.source". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.source_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.platform.win32". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.win32_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same 
id: "org.eclipse.platform.win32.source". Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.platform.win32.source_2.1.0/plugin.x
ml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.core". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.junit". Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.junit_3.8.1/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.171
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.jdt_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.doc.user". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.doc.user_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.debug". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.debug_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.launching". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.launching_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.debug.ui". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.debug.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.junit". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.junit_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.doc.isv". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.doc.isv_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.source". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.source_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.doc.user". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.doc.user_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.build". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.build_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.runtime". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.runtime_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.source". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.source_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.core". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.core_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.pde_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.ui". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.pde.ui_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.sdk.win32". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.sdk.win32_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.webdav". Ignoring 
duplicate at "file:D:/dev/eclipse/plugins/org.eclipse.webdav_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.extras". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.team.extras_2.1.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.187
!MESSAGE Two plug-ins found with the same id: "org.eclipse.jdt.launching.j9". 
Ignoring duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.jdt.launching.j9_2.0.0/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.pde.junit". Ignoring 
duplicate 
at "file:D:/dev/eclipse/plugins/org.eclipse.pde.junit_2.1.3/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.ui". Ignoring 
duplicate at "file:D:/dev/workspace/org.eclipse.team.ui/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.cvs.ui". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.cvs.ui/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.core.resources". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.core.resources/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.cvs.core". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.cvs.core/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.ftp". Ignoring 
duplicate at "file:D:/dev/workspace/org.eclipse.team.ftp/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.cvs.ssh". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.cvs.ssh/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.core". Ignoring 
duplicate at "file:D:/dev/workspace/org.eclipse.team.core/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Two plug-ins found with the same id: "org.eclipse.team.webdav". 
Ignoring duplicate 
at "file:D:/dev/workspace/org.eclipse.team.webdav/plugin.xml".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Duplicate fragment found with id "org.eclipse.ui.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Duplicate fragment found with id "org.eclipse.help.ui.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Duplicate fragment found with id "org.eclipse.swt.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Duplicate fragment found with id "org.eclipse.update.ui.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Duplicate fragment found with id "org.eclipse.update.core.win32" and 
version "2.1.0".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Jan 23, 2003 13:06:10.202
!MESSAGE Duplicate fragment found with id "org.eclipse.core.resources.win32" 
and version "2.1.0".
I do not have any log,
Are my steps the same you took ?
Are the properties if the Thread the same as the one in the log ?
The only differences I can think of would be:
1) I imported all plugins WITHOUT copying them.
2) I checked out org.eclipse.core.runtime and all the org.eclipse.team.* 
plugins from Eclipse (you didn't mention having any source projects in your 2.1 
workspace).
Action Taken: I talked to the Architect of Startup and teh one of PDE. PDE
should create a platform configuration instead of calling the deprecated
-plugins and -boot arguments. Update Core must create a paper explaining how to
do that before PDE core could evaluate feasibility for 2.1
Action Plan: Update Core to create a white paper
*** Bug 29943 has been marked as a duplicate of this bug. ***
PDE is now using a new way of launching a runtime-workbench.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30090" />
    <CreationDate amount="2003-01-23 10:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[UI Guidelines] Update toolbar/context menu section</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The relationship between toolbar items and menu items (view/main menu) and 
icons on menus need clarification. See the note below.

"Working on bug 27481 revealed the need for clarifications of the UI guidelines.
Specifically the section below should be clarified.

Toolbars (above guideline 6.12)
Change "Any action which appears in the toolbar must also appear in the menu, 
but there is no need to duplicate every action in the menu within the toolbar. "
to "Any action which appears in the toolbar must also appear in either the view 
menu or the main menu. There is no need to duplicate every action in the menu 
within the toolbar."

Also, comment #9 (http://dev.eclipse.org/bugs/show_bug.cgi?id=27481#c9) 
mentions icons on context menus. This should be clarified in the guidelines. 
Probably by adding a guideline to the Editors and Views context menu sections."
UI guidelines need a complete review post 2.1. Incorporate these changes at 
that time.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>The relationship between toolbar items and menu items (view/main menu) and 
icons on menus need clarification. See the note below.

"Working on bug 27481 revealed the need for clarifications of the UI guidelines.
Specifically the section below should be clarified.

Toolbars (above guideline 6.12)
Change "Any action which appears in the toolbar must also appear in the menu, 
but there is no need to duplicate every action in the menu within the toolbar. "
to "Any action which appears in the toolbar must also appear in either the view 
menu or the main menu. There is no need to duplicate every action in the menu 
within the toolbar."

Also, comment #9 (http://dev.eclipse.org/bugs/show_bug.cgi?id=27481#c9) 
mentions icons on context menus. This should be clarified in the guidelines. 
Probably by adding a guideline to the Editors and Views context menu sections."
UI guidelines need a complete review post 2.1. Incorporate these changes at 
that time.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30091" />
    <CreationDate amount="2003-01-23 10:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug-cdi" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Want to launch on remote machine</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>I'm developing for Linux/ia64.  Because of bug 27577 I cannot run Eclipse
locally on that machine.

Thus I'm running Eclipse on my desktop Linux/ia32, but building / running on the
(remote) IA64 machine.  For my needs, running over ssh would be just fine (as I
have the same directories available on both machines).  Also, I have ssh set up
so that I don't need any username / password for connecting to it.

Thus, something like the "C/C++ Local" launcher but with an additional tab for
the remote machine info would be great!
Well, just my two cents ;)

I use PuTTY on windows and build over SSH on my remote Linux machine.
I did rightclick on the project, went to the "C/C++ Project"-&gt;"Build Settings"
Page and changed from the default build command to:

plink &lt;sessionname&gt; "cd workspace/&lt;project&gt; &amp;&amp; make -f Makefile"

Maybe that helps, if you didn't know.

Henning
Thanks, I do that already.  That helps me build remotely, but it doesn't help me
launch on the remote machine from within Eclipse.

Of course I can ssh over to it and launch from the command line (which is what I
do), but that kind of takes the 'I' out of 'IDE'...  Hence this feature request.

PR was not targeted to any particular release. Changing target milestone to 2.1
This bug can be closed. Remote building and debugging is supported now.</WithStack>
    <WithOutStack>I'm developing for Linux/ia64.  Because of bug 27577 I cannot run Eclipse
locally on that machine.

Thus I'm running Eclipse on my desktop Linux/ia32, but building / running on the
(remote) IA64 machine.  For my needs, running over ssh would be just fine (as I
have the same directories available on both machines).  Also, I have ssh set up
so that I don't need any username / password for connecting to it.

Thus, something like the "C/C++ Local" launcher but with an additional tab for
the remote machine info would be great!
Well, just my two cents ;)

I use PuTTY on windows and build over SSH on my remote Linux machine.
I did rightclick on the project, went to the "C/C++ Project"-&gt;"Build Settings"
Page and changed from the default build command to:

plink &lt;sessionname&gt; "cd workspace/&lt;project&gt; &amp;&amp; make -f Makefile"

Maybe that helps, if you didn't know.

Henning
Thanks, I do that already.  That helps me build remotely, but it doesn't help me
launch on the remote machine from within Eclipse.

Of course I can ssh over to it and launch from the command line (which is what I
do), but that kind of takes the 'I' out of 'IDE'...  Hence this feature request.

PR was not targeted to any particular release. Changing target milestone to 2.1
This bug can be closed. Remote building and debugging is supported now.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30092" />
    <CreationDate amount="2003-01-23 10:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[browsing]Missing View Short cuts in the Java Browsing perspective</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functioncall">
        <location start="287" end="340" />
        <code>layout.addShowViewShortcut(IPageLayout.ID_OUTLINE);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="341" end="396" />
        <code>layout.addShowViewShortcut(IPageLayout.ID_TASK_LIST);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="397" end="450" />
        <code>layout.addShowViewShortcut(IPageLayout.ID_RES_NAV);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) in the Java Browsing Perspective</Line>
          <Line>2) execute Window&gt;Show View</Line>
          <Line>-&gt;notice that the Views shown in the Browsing Perspective do not show up in the</Line>
          <Line>menu. You have to go to the Other... dialog.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1) in the Java Browsing Perspective
2) execute Window&gt;Show View
-&gt;notice that the Views shown in the Browsing Perspective do not show up in the 
menu. You have to go to the Other... dialog.

This should be changed (the perspective factory can define the corresponding 
short cuts), e.g.
		layout.addShowViewShortcut(IPageLayout.ID_OUTLINE);
		layout.addShowViewShortcut(IPageLayout.ID_TASK_LIST);
		layout.addShowViewShortcut(IPageLayout.ID_RES_NAV);

This is easy to fix and will be important once we add the Show In... support
The platform added the views in 2.0 automatically.
Fixed for 2.1.
Available in builds &gt; N20030123</WithStack>
    <WithOutStack>1) in the Java Browsing Perspective
2) execute Window&gt;Show View
-&gt;notice that the Views shown in the Browsing Perspective do not show up in the 
menu. You have to go to the Other... dialog.

This should be changed (the perspective factory can define the corresponding 
short cuts), e.g.
		layout.addShowViewShortcut(IPageLayout.ID_OUTLINE);
		layout.addShowViewShortcut(IPageLayout.ID_TASK_LIST);
		layout.addShowViewShortcut(IPageLayout.ID_RES_NAV);

This is easy to fix and will be important once we add the Show In... support
The platform added the views in 2.0 automatically.
Fixed for 2.1.
Available in builds &gt; N20030123</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30093" />
    <CreationDate amount="2003-01-23 10:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Handling bad definitions of extension points</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>If a plugin is used that poorly defines a task / type / extra classpath entry 
all Ant builds will fail and it is rather hard problem for the user to diagnose 
since we do not show then these task definitions (bug bug 27675).
Fixed in AntCorePreferences and InternalAntRunner.
If plugins specify bad libraries, tasks, or types, an error is logged and the 
build continues.

Please verify.
Verified.</WithStack>
    <WithOutStack>If a plugin is used that poorly defines a task / type / extra classpath entry 
all Ant builds will fail and it is rather hard problem for the user to diagnose 
since we do not show then these task definitions (bug bug 27675).
Fixed in AntCorePreferences and InternalAntRunner.
If plugins specify bad libraries, tasks, or types, an error is logged and the 
build continues.

Please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30094" />
    <CreationDate amount="2003-01-23 10:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Wanted: Remote debugging</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I want a "C/C++ Remote" debug launcher.  Since this has been discussed a bit in
both mailing lists and the news group I'm surprized I didn't find any bug about
it, but I didn't.  If there is one, please close this one as a duplicate of the
other one.

In my case, because of bug 27577 I cannot run Eclipse on my Linux/ia64 box, so I
have to choose between remote debugging (from my Linux/ia32 box) and no debugging.  

Just launching gdb on the remote machine using ssh would work fine for me, but
if you want to solve this some other way that would be great as well.
As I am not familiar with your code, this may or may not be a duplicate of bug
30091.

PR was not targeted to any particular release. Changing target milestone to 2.1
Moving the target milestone to FUTURE.
*** Bug 57325 has been marked as a duplicate of this bug. ***
Can anybody pls let me know the current status of the remote c/c++ debugging ?

Please this feature urgently.... else let me how I can implement one for Eclipse.

(In reply to comment #1)
&gt; As I am not familiar with your code, this may or may not be a duplicate of bug
&gt; 30091.
&gt; 

Can anybody please let me know if remote debugging is possible using CDT 3.1 , if yes, where I can find details about it ?
Since I don't see any additional comment since 3/06, it's probably safe to think this is "dead in the water". If no one is working on this feature, I would like to volunteer my services to the project.

Bill Holman
(In reply to comment #7)
&gt; Since I don't see any additional comment since 3/06, it's probably safe to
&gt; think this is "dead in the water". If no one is working on this feature, I
&gt; would like to volunteer my services to the project.
&gt; Bill Holman

I would suggest to check it with DSDP folks first. They have somebody working on the remote launch configuration for their target management system. See the "dsdp-tm-dev@eclipse.org" mailing list.
But if you have another solution and are willing to contribute it, you are very welcome.

Thank you Mikhail.  I am investigating the dsdp-tm and the dsdp-dd projects before going any further with this.  It sounds like the device debugger might be configured for what I need - remote debugging on a RH-Linux box, from a Win32 PC&gt;


(In reply to comment #9)
Yes, it seems they support both target types, though I have never tried it.

There is some discussion about this on the eclipse.dsdp.tm newsgroup right now,
http://dev.eclipse.org/newslists/news.eclipse.dsdp.tm/msg00100.html

The TM "CDT Remote Debug" currently uses gdbserver on the remote machine, and a local (cross) gdb. It seems to work OK though setting up the (cross) gdb is not trivial.

An alternative solution would be to launch gdb on the remote side, and do the gdb/mi communication through an (ssh) channel. We had an earlier product (SNiFF+) which did exactly this, and it worked fine. Has anybody tried this on the CDT, or knows how this could be done?

Also, I'm wondering what the plans are for the HP Remote Solution (bug 168048).
(In reply to comment #11)
Martin, I have seen many commercial solutions based on the first approach (gdb on the host and a debug agent on the target). I personally have implemented a couple. Most of these solutions are based on the commercial target management systems and use the tm-specific UI to select and configure the target before starting the gdb session.
I have been thinking to add an abstract remote launch configuration but without target management it is too generic. CDT currently provides support for the custom remote launch configurations. Given a good target management system (DSDP TM?) it's only a question of writing the UI components.
Regarding the second approach (gdb on the target), the only CDT_based implementation I now is the HP's one. As far as I know they are planning to provide it as a separate project.
It should work, in theory, without additional effort as long as the MI I/O happens on stdin/stdout. You can then replace the debugger command with a script that wraps the ssh call.

In theory, you should also be able to replace the MIProcess instance that is passed to the MISession with something that handles this kind of communication from inside Eclipse. This, of course, would require a new launch configuration, which is fine by me.

The HP remote solution is on hold at the moment. I am waiting for them to start working with the Target Management folk and others who require remote development so that we can have a common solution. It looks like you guys are starting to think alike anyway.
For background info on C/C++ Remote Development see also
http://dev.eclipse.org/mhonarc/lists/dsdp-tm-dev/msg01369.html
Future means you commit to fix it in the Future. Inboxes can't make committments. Moving to '--'.
An FAQ about remote debugging is now here:
http://wiki.eclipse.org/TM_and_RSE_FAQ#How_can_I_do_Remote_Debugging_with_CDT.3F
Marking this fixed as a remote debugging solution exists. Please create new bugs for more specific issues.</WithStack>
    <WithOutStack>I want a "C/C++ Remote" debug launcher.  Since this has been discussed a bit in
both mailing lists and the news group I'm surprized I didn't find any bug about
it, but I didn't.  If there is one, please close this one as a duplicate of the
other one.

In my case, because of bug 27577 I cannot run Eclipse on my Linux/ia64 box, so I
have to choose between remote debugging (from my Linux/ia32 box) and no debugging.  

Just launching gdb on the remote machine using ssh would work fine for me, but
if you want to solve this some other way that would be great as well.
As I am not familiar with your code, this may or may not be a duplicate of bug
30091.

PR was not targeted to any particular release. Changing target milestone to 2.1
Moving the target milestone to FUTURE.
*** Bug 57325 has been marked as a duplicate of this bug. ***
Can anybody pls let me know the current status of the remote c/c++ debugging ?

Please this feature urgently.... else let me how I can implement one for Eclipse.

(In reply to comment #1)
&gt; As I am not familiar with your code, this may or may not be a duplicate of bug
&gt; 30091.
&gt; 

Can anybody please let me know if remote debugging is possible using CDT 3.1 , if yes, where I can find details about it ?
Since I don't see any additional comment since 3/06, it's probably safe to think this is "dead in the water". If no one is working on this feature, I would like to volunteer my services to the project.

Bill Holman
(In reply to comment #7)
&gt; Since I don't see any additional comment since 3/06, it's probably safe to
&gt; think this is "dead in the water". If no one is working on this feature, I
&gt; would like to volunteer my services to the project.
&gt; Bill Holman

I would suggest to check it with DSDP folks first. They have somebody working on the remote launch configuration for their target management system. See the "dsdp-tm-dev@eclipse.org" mailing list.
But if you have another solution and are willing to contribute it, you are very welcome.

Thank you Mikhail.  I am investigating the dsdp-tm and the dsdp-dd projects before going any further with this.  It sounds like the device debugger might be configured for what I need - remote debugging on a RH-Linux box, from a Win32 PC&gt;


(In reply to comment #9)
Yes, it seems they support both target types, though I have never tried it.

There is some discussion about this on the eclipse.dsdp.tm newsgroup right now,
http://dev.eclipse.org/newslists/news.eclipse.dsdp.tm/msg00100.html

The TM "CDT Remote Debug" currently uses gdbserver on the remote machine, and a local (cross) gdb. It seems to work OK though setting up the (cross) gdb is not trivial.

An alternative solution would be to launch gdb on the remote side, and do the gdb/mi communication through an (ssh) channel. We had an earlier product (SNiFF+) which did exactly this, and it worked fine. Has anybody tried this on the CDT, or knows how this could be done?

Also, I'm wondering what the plans are for the HP Remote Solution (bug 168048).
(In reply to comment #11)
Martin, I have seen many commercial solutions based on the first approach (gdb on the host and a debug agent on the target). I personally have implemented a couple. Most of these solutions are based on the commercial target management systems and use the tm-specific UI to select and configure the target before starting the gdb session.
I have been thinking to add an abstract remote launch configuration but without target management it is too generic. CDT currently provides support for the custom remote launch configurations. Given a good target management system (DSDP TM?) it's only a question of writing the UI components.
Regarding the second approach (gdb on the target), the only CDT_based implementation I now is the HP's one. As far as I know they are planning to provide it as a separate project.
It should work, in theory, without additional effort as long as the MI I/O happens on stdin/stdout. You can then replace the debugger command with a script that wraps the ssh call.

In theory, you should also be able to replace the MIProcess instance that is passed to the MISession with something that handles this kind of communication from inside Eclipse. This, of course, would require a new launch configuration, which is fine by me.

The HP remote solution is on hold at the moment. I am waiting for them to start working with the Target Management folk and others who require remote development so that we can have a common solution. It looks like you guys are starting to think alike anyway.
For background info on C/C++ Remote Development see also
http://dev.eclipse.org/mhonarc/lists/dsdp-tm-dev/msg01369.html
Future means you commit to fix it in the Future. Inboxes can't make committments. Moving to '--'.
An FAQ about remote debugging is now here:
http://wiki.eclipse.org/TM_and_RSE_FAQ#How_can_I_do_Remote_Debugging_with_CDT.3F
Marking this fixed as a remote debugging solution exists. Please create new bugs for more specific issues.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30095" />
    <CreationDate amount="2003-01-23 10:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>ELF parser doesn't work on ELF64 binaries</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Press the little '+' sign next to an IA64 ELF binary (compiled with -g) in the
"C/C++ Projects" pane.

Current behaviour:
The '+' disappears.

Expected behaviour:
The functions of the file should have been displayed, just as they are for IA32
binaries.

Will attach an IA64 binary for you to try on.
Created attachment 3102
ELF binary of Linux/IA64 hello world program, with debugging information

Here's a Hello World binary for you to play with :-).
Yes, I see it.
We would need to change the Elf.java Class or write a new Elf64.java
base on the Elf-64 standard.
One of the problem is address arithmetic, java does not have a 128 bit type.
This is needed since 64 bits type in java is signed.  For example in the
Elf class we use 64 bits type to hold a 32 bits unsigned and do arithmetic
on it.
Interesting challenge.
Do you have an URL for Elf.java at your ViewCVS web interface to your CVS
repository at "http://dev.eclipse.org/viewcvs/index.cgi/?cvsroot=Tools_Project"?

Never mind the URL, knowing myself I'm quite sure I'd never look at it anyway,
regardless of how good my intentions might be...
This would be an enhancement request.
Doug, has this really been fixed or did you close it by accident?

Doug, I'm assuming you closed this by accident, not because it has been fixed.

If it actually has been fixed, please say so and close it again.

Oops, yes, I just wanted to make this an enhancement request. We haven't seen 
any work on ELF64 yet. Thanks.
&gt; Oops, yes, I just wanted to make this an enhancement request. We haven't seen 
&gt; any work on ELF64 yet. Thanks.

Yes, althougth we've accepted some patches to "recognize" Elf64.
There is no parser for ELF64 yet.  This is tricky:
no "unsigned 64 bit" in java integer types.

And since I do not have any Elf 64 machines handy ... ..
I don't have any problems accepting there are a ton of things being more
important than this, but I don't really understand why lack of machines would be
one of them.

A Hello World binary is attached to this bug, that should get you quite far.  If
you need more or bigger binaries to test on, packages.debian.org should be a
gold-mine.  For example, here's Evolution (click on "ia64"):

http://packages.debian.org/unstable/gnome/evolution

But again, my point isn't you should re-arrange your priorities, my point is
that *lack of machines* shouldn't be the only thing holding up ELF64 support.
&gt; But again, my point isn't you should re-arrange your priorities, my point is
&gt; that *lack of machines* shouldn't be the only thing holding up ELF64 support.

8-)
Most of the developement is fuel by commercial and commiters/users
desires.  Our cie does not have interests in it so no resources been
allocated to it.  I(as a user) have marginal interest in it, since
in my freetime do not have any ia64 to play with.


PR was targeted to the 2.0 release but not resolved, moving target to 2.1
CDT 2.1 (currently HEAD) can now recognize ELF64 binaries
Cool! Thanks, Dave.</WithStack>
    <WithOutStack>Press the little '+' sign next to an IA64 ELF binary (compiled with -g) in the
"C/C++ Projects" pane.

Current behaviour:
The '+' disappears.

Expected behaviour:
The functions of the file should have been displayed, just as they are for IA32
binaries.

Will attach an IA64 binary for you to try on.
Created attachment 3102
ELF binary of Linux/IA64 hello world program, with debugging information

Here's a Hello World binary for you to play with :-).
Yes, I see it.
We would need to change the Elf.java Class or write a new Elf64.java
base on the Elf-64 standard.
One of the problem is address arithmetic, java does not have a 128 bit type.
This is needed since 64 bits type in java is signed.  For example in the
Elf class we use 64 bits type to hold a 32 bits unsigned and do arithmetic
on it.
Interesting challenge.
Do you have an URL for Elf.java at your ViewCVS web interface to your CVS
repository at "http://dev.eclipse.org/viewcvs/index.cgi/?cvsroot=Tools_Project"?

Never mind the URL, knowing myself I'm quite sure I'd never look at it anyway,
regardless of how good my intentions might be...
This would be an enhancement request.
Doug, has this really been fixed or did you close it by accident?

Doug, I'm assuming you closed this by accident, not because it has been fixed.

If it actually has been fixed, please say so and close it again.

Oops, yes, I just wanted to make this an enhancement request. We haven't seen 
any work on ELF64 yet. Thanks.
&gt; Oops, yes, I just wanted to make this an enhancement request. We haven't seen 
&gt; any work on ELF64 yet. Thanks.

Yes, althougth we've accepted some patches to "recognize" Elf64.
There is no parser for ELF64 yet.  This is tricky:
no "unsigned 64 bit" in java integer types.

And since I do not have any Elf 64 machines handy ... ..
I don't have any problems accepting there are a ton of things being more
important than this, but I don't really understand why lack of machines would be
one of them.

A Hello World binary is attached to this bug, that should get you quite far.  If
you need more or bigger binaries to test on, packages.debian.org should be a
gold-mine.  For example, here's Evolution (click on "ia64"):

http://packages.debian.org/unstable/gnome/evolution

But again, my point isn't you should re-arrange your priorities, my point is
that *lack of machines* shouldn't be the only thing holding up ELF64 support.
&gt; But again, my point isn't you should re-arrange your priorities, my point is
&gt; that *lack of machines* shouldn't be the only thing holding up ELF64 support.

8-)
Most of the developement is fuel by commercial and commiters/users
desires.  Our cie does not have interests in it so no resources been
allocated to it.  I(as a user) have marginal interest in it, since
in my freetime do not have any ia64 to play with.


PR was targeted to the 2.0 release but not resolved, moving target to 2.1
CDT 2.1 (currently HEAD) can now recognize ELF64 binaries
Cool! Thanks, Dave.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30096" />
    <CreationDate amount="2003-01-23 10:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Need accessibility role for hyperlinks</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>PDE needs to map accessibility roles for custom-drawn hyperlink widgets in its 
editors.

From Veronika's note:

On windows, I think the correct role to use would be ROLE_SYSTEM_LINK.  
However, this is not mapped to any SWT role so you need to either request 
support for this role or use something like ACC.ROLE_PUSHBUTTON.

Hence the request is to provide support for mapping hyperlinks in SWT.

Please indicate if you cannot contain it in 2.1 so that we can use 
ACC.ROLE_PUSHBUTTON instead.
Dejan, can you use ROLL_PUSHBUTTON for 2.1 instead?
I already did. This is just a reminder re what the 'right' mapping should be.
Just browsing old bugs - this has been resolved with the addition of ACC.ROLE_LINK I believe.</WithStack>
    <WithOutStack>PDE needs to map accessibility roles for custom-drawn hyperlink widgets in its 
editors.

From Veronika's note:

On windows, I think the correct role to use would be ROLE_SYSTEM_LINK.  
However, this is not mapped to any SWT role so you need to either request 
support for this role or use something like ACC.ROLE_PUSHBUTTON.

Hence the request is to provide support for mapping hyperlinks in SWT.

Please indicate if you cannot contain it in 2.1 so that we can use 
ACC.ROLE_PUSHBUTTON instead.
Dejan, can you use ROLL_PUSHBUTTON for 2.1 instead?
I already did. This is just a reminder re what the 'right' mapping should be.
Just browsing old bugs - this has been resolved with the addition of ACC.ROLE_LINK I believe.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30097" />
    <CreationDate amount="2003-01-23 10:48:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>'references in file' searches not in the list of searches [search]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030121
pressing ctrl+shift+U does not add entries to the list of searches in the 
search view
the search is AST based so we would need a way to map back to an AST Node.
No plan to do so for now.
.
this works in R2.1</WithStack>
    <WithOutStack>20030121
pressing ctrl+shift+U does not add entries to the list of searches in the 
search view
the search is AST based so we would need a way to map back to an AST Node.
No plan to do so for now.
.
this works in R2.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30098" />
    <CreationDate amount="2003-01-23 10:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>AntSecurityManager throws exception when exiting Eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I am writing a plugin which uses AntRunner.
The Ant scripts it's running are most importantly : 

- a target to start Tomcat 4.0 :

    &lt;target name="start.tomcat.40"&gt;
        &lt;java classname="org.apache.catalina.startup.Bootstrap" fork="yes"&gt;
	    [...]
            &lt;arg value="start"/&gt;
        &lt;/java&gt;
    &lt;/target&gt;

- another one to stop Tomcat (identical to the previous one, except &lt;arg 
value="stop"&gt;), which puts an end to the previous target's java task.

These 2 targets are called separately by 2 AntRunner instances.

An exception occurs when closing down Eclipse or the Eclipse instance in self-
hosting. 
This is thrown by the checkExit(int) method of AntSecurityManager :

Thread [main] (Suspended (exception org.eclipse.ant.core.AntSecurityException))
 org.eclipse.ant.internal.core.ant.AntSecurityManager.checkExit(int) line: 40
 java.lang.Runtime.exit(int) line: 86
 java.lang.System.exit(int) line: 696
 org.eclipse.core.launcher.Main.main(java.lang.String[]) line: 551

Thanks,

Julien
Solving this bug is vital for the Eclipse plug-in I'm writing for Cactus, 
which is a framework for unit testing server-side Java code.
Do you think correcting could be integrated to Eclipse M5 ?

Thanks in advance,

Julien
I will investigate further today.
If two ant builds are started that run in the background and the second starts 
after the first and completes before the first, the original System security 
manager is not be restored.
I have changed the code so that this problem can no longer occur but I am not 
sure you are going to like the solution, Julien.

Because of the implementation of Apache Ant and the use of the System.out and 
System.err (see bug 29318), the Eclipse Ant integration has been changed so 
that only one Ant build can occur at any given time. AntRunner enforces this 
invariant.


Please verify the changes (DarinW).

Julien, please let us know if this impacts you negatively so we can work 
together to find a solution.
Verified.
I do indeed get an error message when trying to launch 2 builds 
simultaneously : !AntRunner.Already_in_progress! (guess the properties file 
hasn't been updated yet).
What can we do for my plugin to work again ?
Is there a way to launch a java task from Ant and terminate the build, even if 
the jvm the java task launched hasn't returned ?

I am writing again because solving this problem has become critical for the 
Eclipse plugin for Cactus. If I can help in any way, I would be glad to spend 
some time on it. Could you give me some information about where to look at ?

Thanks,

Julien</WithStack>
    <WithOutStack>I am writing a plugin which uses AntRunner.
The Ant scripts it's running are most importantly : 

- a target to start Tomcat 4.0 :

    &lt;target name="start.tomcat.40"&gt;
        &lt;java classname="org.apache.catalina.startup.Bootstrap" fork="yes"&gt;
	    [...]
            &lt;arg value="start"/&gt;
        &lt;/java&gt;
    &lt;/target&gt;

- another one to stop Tomcat (identical to the previous one, except &lt;arg 
value="stop"&gt;), which puts an end to the previous target's java task.

These 2 targets are called separately by 2 AntRunner instances.

An exception occurs when closing down Eclipse or the Eclipse instance in self-
hosting. 
This is thrown by the checkExit(int) method of AntSecurityManager :

Thread [main] (Suspended (exception org.eclipse.ant.core.AntSecurityException))
 org.eclipse.ant.internal.core.ant.AntSecurityManager.checkExit(int) line: 40
 java.lang.Runtime.exit(int) line: 86
 java.lang.System.exit(int) line: 696
 org.eclipse.core.launcher.Main.main(java.lang.String[]) line: 551

Thanks,

Julien
Solving this bug is vital for the Eclipse plug-in I'm writing for Cactus, 
which is a framework for unit testing server-side Java code.
Do you think correcting could be integrated to Eclipse M5 ?

Thanks in advance,

Julien
I will investigate further today.
If two ant builds are started that run in the background and the second starts 
after the first and completes before the first, the original System security 
manager is not be restored.
I have changed the code so that this problem can no longer occur but I am not 
sure you are going to like the solution, Julien.

Because of the implementation of Apache Ant and the use of the System.out and 
System.err (see bug 29318), the Eclipse Ant integration has been changed so 
that only one Ant build can occur at any given time. AntRunner enforces this 
invariant.


Please verify the changes (DarinW).

Julien, please let us know if this impacts you negatively so we can work 
together to find a solution.
Verified.
I do indeed get an error message when trying to launch 2 builds 
simultaneously : !AntRunner.Already_in_progress! (guess the properties file 
hasn't been updated yet).
What can we do for my plugin to work again ?
Is there a way to launch a java task from Ant and terminate the build, even if 
the jvm the java task launched hasn't returned ?

I am writing again because solving this problem has become critical for the 
Eclipse plugin for Cactus. If I can help in any way, I would be glad to spend 
some time on it. Could you give me some information about where to look at ?

Thanks,

Julien</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30099" />
    <CreationDate amount="2003-01-23 10:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>NamingConvention.suggestArgumentNames: No guess returned</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20030122

NamingConvention.suggestArgumentNames(... "Class" ) returns no guess.
It would be good if NamingConvention could guaranteed that always at least one 
guess is returned. (c, class1), whatever. Otherwise such 'extra' guessing code 
has to be introduced on the client side.
If the Type is equals to a keyword then NamingConvention will add a number at 
the end of the name ('class1'). And if no names can be computed a default name 
will be proposed ('nameX' where X is a number).

Fixed.
Verified.</WithStack>
    <WithOutStack>20030122

NamingConvention.suggestArgumentNames(... "Class" ) returns no guess.
It would be good if NamingConvention could guaranteed that always at least one 
guess is returned. (c, class1), whatever. Otherwise such 'extra' guessing code 
has to be introduced on the client side.
If the Type is equals to a keyword then NamingConvention will add a number at 
the end of the name ('class1'). And if no names can be computed a default name 
will be proposed ('nameX' where X is a number).

Fixed.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="30100" />
    <CreationDate amount="2003-01-23 10:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Some text drop from included schema file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I created an included schema file that has one element with the following 
description in it:

This element is used to help determine the action enablement based on the 
current selection. Ignored if the &lt;samp&gt;enablement&lt;/samp&gt; element is specified 
for the action.

When I include this schema file into an extension point schema file and look at 
the preview doc, the description for the included element is cut off 
after "...Ignore is the". It seem to have problem with the &lt;samp&gt; tag.

If I place the exact same description into an element in the extension point 
schema file, it has no problem with it. Only if it is from an element that is 
being included.
This is our bug. Unlike attribute annotation, element annotation was not 
encoded before saving into the schema source. As a result, the &lt;samp&gt;&lt;/samp&gt; 
tags were left as-is, causing the truncation.

You can verify this by copying the exact same text and pasting it into an 
attribute. You will notice that the tags look like &amp;lt;samp&amp;gt;.

We have a method 'getWritableDescription()' that all the objects can use
to write into the buffer but for some reason we were dumping raw text
for elements. Thanks for finding this out.</WithStack>
    <WithOutStack>I created an included schema file that has one element with the following 
description in it:

This element is used to help determine the action enablement based on the 
current selection. Ignored if the &lt;samp&gt;enablement&lt;/samp&gt; element is specified 
for the action.

When I include this schema file into an extension point schema file and look at 
the preview doc, the description for the included element is cut off 
after "...Ignore is the". It seem to have problem with the &lt;samp&gt; tag.

If I place the exact same description into an element in the extension point 
schema file, it has no problem with it. Only if it is from an element that is 
being included.
This is our bug. Unlike attribute annotation, element annotation was not 
encoded before saving into the schema source. As a result, the &lt;samp&gt;&lt;/samp&gt; 
tags were left as-is, causing the truncation.

You can verify this by copying the exact same text and pasting it into an 
attribute. You will notice that the tags look like &amp;lt;samp&amp;gt;.

We have a method 'getWritableDescription()' that all the objects can use
to write into the buffer but for some reason we were dumping raw text
for elements. Thanks for finding this out.</WithOutStack>
  </Bug>
</infozilla-output>

