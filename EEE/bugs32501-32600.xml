<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="32501" />
    <CreationDate amount="2003-02-21 13:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Accessibility: On Mozilla the toolbar buttons do not work via the keyboard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If I focus on any of the toolbar buttons, pressing any of them does not perform 
any action
Fixed.
Also had to increase the height of the toolbar and tabs on mozilla.</WithStack>
    <WithOutStack>If I focus on any of the toolbar buttons, pressing any of them does not perform 
any action
Fixed.
Also had to increase the height of the toolbar and tabs on mozilla.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32502" />
    <CreationDate amount="2003-02-21 13:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Mozilla toolbars lose top frameborder</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When doing keyboard navigation in Mozilla, the navigation and content toolbars 
are moved up by a pixel or two, so the top frameborder disappers.
Fixed.
Also had to increase the height of the toolbar and tabs on mozilla.
The fix causes regressions:

Long book titles pushes toolbar buttons out of a view.  Before the title would 
be clipped before the buttons would be moved outside of the frame.

Extra Large fonts make toolbar boottom border dissapear.
It looks like the tabs frame and the search banner have similar problems. It is 
possible to make the help window smaller enough so they don't show complete.

I made a fix, give this a try (just for the toolbar, not for the other problems 
mentioned).
One problem fixed - the toolbar stays visible now and label gets truncated.

The other regression (in the same toolbar) - "Extra Large fonts make toolbar 
boottom border dissapear" still exists.
I've added another small fix that should address the remaining issue.</WithStack>
    <WithOutStack>When doing keyboard navigation in Mozilla, the navigation and content toolbars 
are moved up by a pixel or two, so the top frameborder disappers.
Fixed.
Also had to increase the height of the toolbar and tabs on mozilla.
The fix causes regressions:

Long book titles pushes toolbar buttons out of a view.  Before the title would 
be clipped before the buttons would be moved outside of the frame.

Extra Large fonts make toolbar boottom border dissapear.
It looks like the tabs frame and the search banner have similar problems. It is 
possible to make the help window smaller enough so they don't show complete.

I made a fix, give this a try (just for the toolbar, not for the other problems 
mentioned).
One problem fixed - the toolbar stays visible now and label gets truncated.

The other regression (in the same toolbar) - "Extra Large fonts make toolbar 
boottom border dissapear" still exists.
I've added another small fix that should address the remaining issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32503" />
    <CreationDate amount="2003-02-21 13:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>code assist should help on your previous error</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="38" end="119" />
        <code>public class Main {

	public static void main(String[] args) {
		new Date().
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Do code assist in the following code

public class Main {

	public static void main(String[] args) {
		new Date().
	}
}

Currently you get no help since Date is not defined.  Why don't we notice this 
and try to do something.  If we would code assist on Date in this failed case 
(and then code assist the next case?) it would do what I want/hope.
You get a quick fix in this case.
In the bug scenario code assist isn't helpful and there is no quick fix due to 
the syntax error, i.e., there is no "red sea" for the incorrect Date type 
reference.

In general I find type reference errors more important than syntax errors. 
Since I'm in the middle of typing I expect syntax errors but I'd like to fix 
type reference errors. 

Notice that the more "common" scenario works fine:
   new Dat&lt;code assist&gt;
this will do the auto import.

Philippe anything we can do with regard to error reporting, so that we can 
still get the type reference error even when there is a syntax error?

moving to JDT Core for comment.
We noticed recently (see bug 31764) that we were not surfacing errors to user, 
and mentionned it to Martin (the UI side was actually doing it wrong too - 
would only show error message if completions were available !?).
I was actually surprised nobody had noticed it, it was already broken in 1.0.

We did not change this since it would require UI action as well, unless we do 
all the smartness (doable). The trickyness is to only surface the relevant 
error to the user. A heuristic would be to find closest error prior to 
completion location. 

I was waiting on someone complaining about this behavior to investigate for 
RC2, since it may have UI implications (hopefully no).

Jdtcore part of the problem is fixed (bug 31764). The error message will be 
shown when bug 32101 will be fixed.

Moving to Jdtui.

Build &gt; 20030303.</WithStack>
    <WithOutStack>Do code assist in the following code

public class Main {

	public static void main(String[] args) {
		new Date().
	}
}

Currently you get no help since Date is not defined.  Why don't we notice this 
and try to do something.  If we would code assist on Date in this failed case 
(and then code assist the next case?) it would do what I want/hope.
You get a quick fix in this case.
In the bug scenario code assist isn't helpful and there is no quick fix due to 
the syntax error, i.e., there is no "red sea" for the incorrect Date type 
reference.

In general I find type reference errors more important than syntax errors. 
Since I'm in the middle of typing I expect syntax errors but I'd like to fix 
type reference errors. 

Notice that the more "common" scenario works fine:
   new Dat&lt;code assist&gt;
this will do the auto import.

Philippe anything we can do with regard to error reporting, so that we can 
still get the type reference error even when there is a syntax error?

moving to JDT Core for comment.
We noticed recently (see bug 31764) that we were not surfacing errors to user, 
and mentionned it to Martin (the UI side was actually doing it wrong too - 
would only show error message if completions were available !?).
I was actually surprised nobody had noticed it, it was already broken in 1.0.

We did not change this since it would require UI action as well, unless we do 
all the smartness (doable). The trickyness is to only surface the relevant 
error to the user. A heuristic would be to find closest error prior to 
completion location. 

I was waiting on someone complaining about this behavior to investigate for 
RC2, since it may have UI implications (hopefully no).

Jdtcore part of the problem is fixed (bug 31764). The error message will be 
shown when bug 32101 will be fixed.

Moving to Jdtui.

Build &gt; 20030303.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32504" />
    <CreationDate amount="2003-02-21 13:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Accessibility: removing of bookmarks is difficult to perform with keyboard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Unless the mouse is positioned over the bookmark,just selecting it and pressing 
Shift-F10 to get its context menu does not work.
Even when it does (i.e. when the mouse is over the bookmark) it is hard to 
select the Remove action from its context menu (that only contains that action).
Fixed.
Select the bookmark and press the "Delete" key to delete the bookmark.</WithStack>
    <WithOutStack>Unless the mouse is positioned over the bookmark,just selecting it and pressing 
Shift-F10 to get its context menu does not work.
Even when it does (i.e. when the mouse is over the bookmark) it is hard to 
select the Remove action from its context menu (that only contains that action).
Fixed.
Select the bookmark and press the "Delete" key to delete the bookmark.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32505" />
    <CreationDate amount="2003-02-21 13:46:00 -0500" />
    <DupId amount="36032" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>M5 build incorrectly reports unresolvable type errors for non-public classes in files with different name</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Unresolvable type errors are shown in the editors for references to non-public 
classes that are defined in files whose name doesn't match the class (but does 
match another public class defined in the same file).  The actual compiler 
doesn't have any problem, so nothing shows up in the Tasks view.
This is a known issue when targeting secondary types. Note that these are 
usually not a good idea, since when performing incremental compilation, there 
is a chance that these files could be missing.

We could fix this down the road by looking in every single compilation unit 
(mean open and parse contents to find these types). Though doable, the penalty 
hit would not be acceptable.

Deferring (could use our index).
*** Bug 34002 has been marked as a duplicate of this bug. ***
*** Bug 36012 has been marked as a duplicate of this bug. ***
*** Bug 32889 has been marked as a duplicate of this bug. ***
This is also a problem for plugins--ITypeBinding.resolveTypeBinding() will 
return null.
*** Bug 81155 has been marked as a duplicate of this bug. ***
Reopen to close as duplicate



*** This bug has been marked as a duplicate of bug 36032 ***
Verified for 3.2 using M20060629-1905.</WithStack>
    <WithOutStack>Unresolvable type errors are shown in the editors for references to non-public 
classes that are defined in files whose name doesn't match the class (but does 
match another public class defined in the same file).  The actual compiler 
doesn't have any problem, so nothing shows up in the Tasks view.
This is a known issue when targeting secondary types. Note that these are 
usually not a good idea, since when performing incremental compilation, there 
is a chance that these files could be missing.

We could fix this down the road by looking in every single compilation unit 
(mean open and parse contents to find these types). Though doable, the penalty 
hit would not be acceptable.

Deferring (could use our index).
*** Bug 34002 has been marked as a duplicate of this bug. ***
*** Bug 36012 has been marked as a duplicate of this bug. ***
*** Bug 32889 has been marked as a duplicate of this bug. ***
This is also a problem for plugins--ITypeBinding.resolveTypeBinding() will 
return null.
*** Bug 81155 has been marked as a duplicate of this bug. ***
Reopen to close as duplicate



*** This bug has been marked as a duplicate of bug 36032 ***
Verified for 3.2 using M20060629-1905.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32506" />
    <CreationDate amount="2003-02-21 14:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>[resources] Exceptions starting with missing links</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>- I deleted my old Eclipse install (build 0218) and installed the new build.</Line>
          <Line>- I started Eclipse putting to my existing workspace</Line>
          <Line>- my workspace had links to my old dev which are now broken.</Line>
          <Line>- I got the following log file. (will attach)</Line>
          <Line>Created attachment 3635</Line>
          <Line>log</Line>
          <Line>The missing message is from an extra space in the #bind() call in the code.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build i0221 (1205), win2k, j9sc20030214

- I deleted my old Eclipse install (build 0218) and installed the new build.
- I started Eclipse putting to my existing workspace
- my workspace had links to my old dev which are now broken.
- I got the following log file. (will attach)
Created attachment 3635
log
The missing message is from an extra space in the #bind() call in the code.

The problem is in the ProjectDescriptionReader.

When reading the XML elements, character data is reported to the SAXParser but 
it may be reported in chunks. The reader doesn't take this into consideration 
so any character data in the .project file (nature id, builder id, etc) could 
be truncated.

(see PluginParser for an example of correct behaviour)
Fixed and released.
Added tests to test suite.
*** Bug 32577 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>build i0221 (1205), win2k, j9sc20030214

- I deleted my old Eclipse install (build 0218) and installed the new build.
- I started Eclipse putting to my existing workspace
- my workspace had links to my old dev which are now broken.
- I got the following log file. (will attach)
Created attachment 3635
log
The missing message is from an extra space in the #bind() call in the code.

The problem is in the ProjectDescriptionReader.

When reading the XML elements, character data is reported to the SAXParser but 
it may be reported in chunks. The reader doesn't take this into consideration 
so any character data in the .project file (nature id, builder id, etc) could 
be truncated.

(see PluginParser for an example of correct behaviour)
Fixed and released.
Added tests to test suite.
*** Bug 32577 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32507" />
    <CreationDate amount="2003-02-21 14:01:00 -0500" />
    <DupId amount="10712" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>long println() causes Eclipse to hang</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="208" end="526" />
        <code>public class ConsoleLineTooLong{
    public static void main(String[] args){
        char[] bigChars = new char[32797];
        Arrays.fill(bigChars,'a');
        String bigString = new String(bigChars);
        System.out.println("message length " + bigString.length());
        System.out.println(bigString);
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If a java application launched within Eclipse prints a very long line to the
console, Eclipse freezes. My system is Windows 2000, dell laptop, nvidia driver
and Eclipse M5.

Example class to exhibit problem.
public class ConsoleLineTooLong{
    public static void main(String[] args){
        char[] bigChars = new char[32797];
        Arrays.fill(bigChars,'a');
        String bigString = new String(bigChars);
        System.out.println("message length " + bigString.length());
        System.out.println(bigString);
    }
}

Particularly frustrating when done unintentionally, e.g. printing a really large
hashtable like javax.swing.UIManager.getDefaults().
*** Bug 32508 has been marked as a duplicate of this bug. ***
This is a limitation in the platform widget. The workaround is to used a fixed 
width console via the "Debug -&gt; Console" preference page.

*** This bug has been marked as a duplicate of 10712 ***</WithStack>
    <WithOutStack>If a java application launched within Eclipse prints a very long line to the
console, Eclipse freezes. My system is Windows 2000, dell laptop, nvidia driver
and Eclipse M5.

Example class to exhibit problem.
public class ConsoleLineTooLong{
    public static void main(String[] args){
        char[] bigChars = new char[32797];
        Arrays.fill(bigChars,'a');
        String bigString = new String(bigChars);
        System.out.println("message length " + bigString.length());
        System.out.println(bigString);
    }
}

Particularly frustrating when done unintentionally, e.g. printing a really large
hashtable like javax.swing.UIManager.getDefaults().
*** Bug 32508 has been marked as a duplicate of this bug. ***
This is a limitation in the platform widget. The workaround is to used a fixed 
width console via the "Debug -&gt; Console" preference page.

*** This bug has been marked as a duplicate of 10712 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32508" />
    <CreationDate amount="2003-02-21 14:03:00 -0500" />
    <DupId amount="32507" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>long println() causes Eclipse to hang</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="208" end="526" />
        <code>public class ConsoleLineTooLong{
    public static void main(String[] args){
        char[] bigChars = new char[32797];
        Arrays.fill(bigChars,'a');
        String bigString = new String(bigChars);
        System.out.println("message length " + bigString.length());
        System.out.println(bigString);
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If a java application launched within Eclipse prints a very long line to the
console, Eclipse freezes. My system is Windows 2000, dell laptop, nvidia driver
and Eclipse M5.

Example class to exhibit problem.
public class ConsoleLineTooLong{
    public static void main(String[] args){
        char[] bigChars = new char[32797];
        Arrays.fill(bigChars,'a');
        String bigString = new String(bigChars);
        System.out.println("message length " + bigString.length());
        System.out.println(bigString);
    }
}

Particularly frustrating when done unintentionally, e.g. printing a really large
hashtable like javax.swing.UIManager.getDefaults().


*** This bug has been marked as a duplicate of 32507 ***</WithStack>
    <WithOutStack>If a java application launched within Eclipse prints a very long line to the
console, Eclipse freezes. My system is Windows 2000, dell laptop, nvidia driver
and Eclipse M5.

Example class to exhibit problem.
public class ConsoleLineTooLong{
    public static void main(String[] args){
        char[] bigChars = new char[32797];
        Arrays.fill(bigChars,'a');
        String bigString = new String(bigChars);
        System.out.println("message length " + bigString.length());
        System.out.println(bigString);
    }
}

Particularly frustrating when done unintentionally, e.g. printing a really large
hashtable like javax.swing.UIManager.getDefaults().


*** This bug has been marked as a duplicate of 32507 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32509" />
    <CreationDate amount="2003-02-21 14:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="minor" />
    <Summery>[PropertiesView] Accelerator keys in PB work in a confusing manner</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Open Eclipse</Line>
          <Line>2. Create a Java project and a java file</Line>
          <Line>3. Ensure the property browser is shown</Line>
          <Line>4. Click on Info so it is selected</Line>
          <Line>5. Hit e then l then n (for editable, last modified and name repsectively).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Some times the PB seems to get stuck moving from field to field by typing the 
first letter of the Property name.  

Repro:

1. Open Eclipse
2. Create a Java project and a java file
3. Ensure the property browser is shown
4. Click on Info so it is selected
5. Hit e then l then n (for editable, last modified and name repsectively).

Results:

Eventually the keys stop moving you from field to field (usually fairly quickly 
but sometimes you can move fields a few times before it happens).  Then you 
need to hit the Esc key to enable moving by the first letter again.
I believe this is OS behaviour.  I've seen this in Explorer as well.

There are no plans for the UI team to work on this defect until higher 
priority items are addressed.  If you would like to work on this defect, 
please let us know on the platform-ui-dev mailing list.


Cleaning up defect lists by setting ones without recent traffic to 'REMIND'.

As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Some times the PB seems to get stuck moving from field to field by typing the 
first letter of the Property name.  

Repro:

1. Open Eclipse
2. Create a Java project and a java file
3. Ensure the property browser is shown
4. Click on Info so it is selected
5. Hit e then l then n (for editable, last modified and name repsectively).

Results:

Eventually the keys stop moving you from field to field (usually fairly quickly 
but sometimes you can move fields a few times before it happens).  Then you 
need to hit the Esc key to enable moving by the first letter again.
I believe this is OS behaviour.  I've seen this in Explorer as well.

There are no plans for the UI team to work on this defect until higher 
priority items are addressed.  If you would like to work on this defect, 
please let us know on the platform-ui-dev mailing list.


Cleaning up defect lists by setting ones without recent traffic to 'REMIND'.

As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32510" />
    <CreationDate amount="2003-02-21 14:37:00 -0500" />
    <DupId amount="30971" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Console output window empty until you reselect "show default output"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>M5: When I debug my project the console window remains empty until I reselect 
one of the options in the Display Output menu.

Havent tried it yet in run mode, or with other projects.  But it is happening 
consistantly for me now.

It was working fine for a few days, I think this started for the first time 
after I used that feature for the first time.
If you have more specific steps to reproduce the problem, it would help. If you 
select a process in the console drop down menu, the console remains locked to 
that process until you remove it - at which point the console is supposed to 
revert to showing the "default" output (i.e. the output from the selected 
process in the debug view, or the most recent launch).
This is likely a dup of bug 30971. Cannot reproduce in latest code.

*** This bug has been marked as a duplicate of 30971 ***
I took the steps described in bug 30971 comment #8 and that fixed it.</WithStack>
    <WithOutStack>M5: When I debug my project the console window remains empty until I reselect 
one of the options in the Display Output menu.

Havent tried it yet in run mode, or with other projects.  But it is happening 
consistantly for me now.

It was working fine for a few days, I think this started for the first time 
after I used that feature for the first time.
If you have more specific steps to reproduce the problem, it would help. If you 
select a process in the console drop down menu, the console remains locked to 
that process until you remove it - at which point the console is supposed to 
revert to showing the "default" output (i.e. the output from the selected 
process in the debug view, or the most recent launch).
This is likely a dup of bug 30971. Cannot reproduce in latest code.

*** This bug has been marked as a duplicate of 30971 ***
I took the steps described in bug 30971 comment #8 and that fixed it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32511" />
    <CreationDate amount="2003-02-21 14:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Editor Mgmt] DND from task list to Editor causes ClassCastException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340333657">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason>org.eclipse.core.internal.resources.WorkspaceRoot</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.WorkbenchPage.openMarker(WorkbenchPage.java:1921)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.WorkbenchPage.openInternalEditor(WorkbenchPage.java:1915)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.EditorAreaDropAdapter.asyncDrop(EditorAreaDropAdapter.java:78)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.EditorAreaDropAdapter.access$0(EditorAreaDropAdapter.java:52)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.EditorAreaDropAdapter$1.run(EditorAreaDropAdapter.java:47)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(Compiled Code))</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(Compiled Code))</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="9">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="10">org.eclipse.ui.internal.Workbench.run(Workbench.java:1244)</Frame>
          <Frame depth="11">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="12">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="13">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="14">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="15">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="16">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 20030219

Create a task that is not associated with a file.
Drag that task to the editor area
The following exception is generated.


!ENTRY org.eclipse.ui 4 4 Feb 21, 2003 14:48:51.350
!MESSAGE 
*** Stack trace of contained exception ***
!ENTRY org.eclipse.ui 4 0 Feb 21, 2003 14:48:51.366
!MESSAGE org.eclipse.core.internal.resources.WorkspaceRoot
!STACK 0
java.lang.ClassCastException: org.eclipse.core.internal.resources.WorkspaceRoot
	at org.eclipse.ui.internal.WorkbenchPage.openMarker
(WorkbenchPage.java:1921)
	at org.eclipse.ui.internal.WorkbenchPage.openInternalEditor
(WorkbenchPage.java:1915)
	at org.eclipse.ui.internal.EditorAreaDropAdapter.asyncDrop
(EditorAreaDropAdapter.java:78)
	at org.eclipse.ui.internal.EditorAreaDropAdapter.access$0
(EditorAreaDropAdapter.java:52)
	at org.eclipse.ui.internal.EditorAreaDropAdapter$1.run
(EditorAreaDropAdapter.java:47)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java(Compiled Code))
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1244)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
Fix released to the HEAD stream. (WorkbenchPage)</WithStack>
    <WithOutStack>Eclipse 20030219

Create a task that is not associated with a file.
Drag that task to the editor area
The following exception is generated.


!ENTRY org.eclipse.ui 4 4 Feb 21, 2003 14:48:51.350
!MESSAGE 
*** Stack trace of contained exception ***
!ENTRY org.eclipse.ui 4 0 Feb 21, 2003 14:48:51.366
!MESSAGE org.eclipse.core.internal.resources.WorkspaceRoot
!STACK 0

Fix released to the HEAD stream. (WorkbenchPage)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32512" />
    <CreationDate amount="2003-02-21 14:53:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>JVM crash in org.eclipse.swt.graphics.Device.getFontList()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1) Write an action that will create and hold 400 instances of</Line>
          <Line>org.eclipse.swt.internal.Callback (more or less may be required).</Line>
          <Line>2) Start eclipse and call the action.</Line>
          <Line>3) Create a file with the new file wizard.</Line>
          <Line>4) Eclipse crashes (error log attached). Examining the source for the swt.dll</Line>
          <Line>indicates that some internal limit for callbacks has been reached, and the</Line>
          <Line>callback allocated for the wizard is created with a 0 address. Presumably this</Line>
          <Line>invalid address is what causes the EXCEPTION_ACCESS_VIOLATION noted in the log.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Steps to reproduce:
1) Write an action that will create and hold 400 instances of 
org.eclipse.swt.internal.Callback (more or less may be required).
2) Start eclipse and call the action.
3) Create a file with the new file wizard.
4) Eclipse crashes (error log attached). Examining the source for the swt.dll 
indicates that some internal limit for callbacks has been reached, and the 
callback allocated for the wizard is created with a 0 address. Presumably this 
invalid address is what causes the EXCEPTION_ACCESS_VIOLATION noted in the log.

Expected results: the getFontList() call should check for a 0 address when it 
creates the callback, and fail gracefully
Created attachment 3637
Trace of exception.
There is a limit of 128 callbacks.  Why are you creating so many?
Actually, why are you creating any yourself, this is internal stuff?
Closing as WONTFIX.  We keep track of how many Callbacks are being created by 
SWT and that is all we intend to support.</WithStack>
    <WithOutStack>Steps to reproduce:
1) Write an action that will create and hold 400 instances of 
org.eclipse.swt.internal.Callback (more or less may be required).
2) Start eclipse and call the action.
3) Create a file with the new file wizard.
4) Eclipse crashes (error log attached). Examining the source for the swt.dll 
indicates that some internal limit for callbacks has been reached, and the 
callback allocated for the wizard is created with a 0 address. Presumably this 
invalid address is what causes the EXCEPTION_ACCESS_VIOLATION noted in the log.

Expected results: the getFontList() call should check for a 0 address when it 
creates the callback, and fail gracefully
Created attachment 3637
Trace of exception.
There is a limit of 128 callbacks.  Why are you creating so many?
Actually, why are you creating any yourself, this is internal stuff?
Closing as WONTFIX.  We keep track of how many Callbacks are being created by 
SWT and that is all we intend to support.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32513" />
    <CreationDate amount="2003-02-21 15:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Cannot change scope selection after searching in the workbench.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Perform test I5 from 2.1 help test plan.
Then try changing scope to "All documents" in the browser.  The scope does not 
change.
Fixed.</WithStack>
    <WithOutStack>Perform test I5 from 2.1 help test plan.
Then try changing scope to "All documents" in the browser.  The scope does not 
change.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32514" />
    <CreationDate amount="2003-02-21 15:12:00 -0500" />
    <DupId amount="32078" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Commit does not remember that last comment was blank</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="4">
        <Lines>
          <Line>- make a change to some file</Line>
          <Line>- sync and commit it</Line>
          <Line>- give it a comment</Line>
          <Line>- OK</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- make another change</Line>
          <Line>- sync and commit it</Line>
          <Line>- it kindly shows you the last comment you entered</Line>
          <Line>- pretend it no longer applies, so clear it</Line>
          <Line>- OK</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- make another change</Line>
          <Line>- sync and commit it</Line>
          <Line>- it not so kindly shows you the comment you entered the first time</Line>
          <Line>dupe.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>build I20030220

- make a change to some file
- sync and commit it
- give it a comment
- OK

- make another change
- sync and commit it
- it kindly shows you the last comment you entered
- pretend it no longer applies, so clear it
- OK

- make another change
- sync and commit it
- it not so kindly shows you the comment you entered the first time
dupe.

I think this is now fixed.


*** This bug has been marked as a duplicate of 32078 ***</WithStack>
    <WithOutStack>build I20030220

- make a change to some file
- sync and commit it
- give it a comment
- OK

- make another change
- sync and commit it
- it kindly shows you the last comment you entered
- pretend it no longer applies, so clear it
- OK

- make another change
- sync and commit it
- it not so kindly shows you the comment you entered the first time
dupe.

I think this is now fixed.


*** This bug has been marked as a duplicate of 32078 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32515" />
    <CreationDate amount="2003-02-21 15:13:00 -0500" />
    <DupId amount="33186" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Coolbars] Unused Space in CoolBars</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Eclipse 20020220

The attached file shows wasted space in the coolbar area.  When I reset the 
perspective this space disappears.  I did not create the space manually, it 
appears at random intervals.  I have not yet figured out the trigger.
Created attachment 3638
space in coolbar

Eclipse 20030220, not 20020220 ...
Andrew, if you size the workbench window smaller such that the coolitems will 
not fit on one row, the coolitems will wrap to a new row and extra space will 
be created between the coolitems.  If you then switch amongst perspectives, 
this extra space will be "remembered".  Did you size your window so that 
wrapping of the coolitems occurred?  This could explain the extra space you are 
seeing.
I do not recall resizing my workbench, I usually have it taking up 80% of the 
width of my screen, my screen is in 1280x960.  If anything I might have 
maximized the window and then 'restored' the window.

I will keep an eye out for this and let you know what I was doing when/if it 
happens.
An SWT bug report [Bug 26140] already exists for the extra space that is 
created when coolitems are wrapped.
There are two versions of this problem.  The SWT bug report mentioned above and 
the UI behavior described in [Bug 33186].  


*** This bug has been marked as a duplicate of 33186 ***</WithStack>
    <WithOutStack>Eclipse 20020220

The attached file shows wasted space in the coolbar area.  When I reset the 
perspective this space disappears.  I did not create the space manually, it 
appears at random intervals.  I have not yet figured out the trigger.
Created attachment 3638
space in coolbar

Eclipse 20030220, not 20020220 ...
Andrew, if you size the workbench window smaller such that the coolitems will 
not fit on one row, the coolitems will wrap to a new row and extra space will 
be created between the coolitems.  If you then switch amongst perspectives, 
this extra space will be "remembered".  Did you size your window so that 
wrapping of the coolitems occurred?  This could explain the extra space you are 
seeing.
I do not recall resizing my workbench, I usually have it taking up 80% of the 
width of my screen, my screen is in 1280x960.  If anything I might have 
maximized the window and then 'restored' the window.

I will keep an eye out for this and let you know what I was doing when/if it 
happens.
An SWT bug report [Bug 26140] already exists for the extra space that is 
created when coolitems are wrapped.
There are two versions of this problem.  The SWT bug report mentioned above and 
the UI behavior described in [Bug 33186].  


*** This bug has been marked as a duplicate of 33186 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32516" />
    <CreationDate amount="2003-02-21 15:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>PaletteDrawer should fire DRAWER_TYPE property change</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Whenever an item is added to palettedrawer it could fire drawer_type changed.

I'm not sure if this is necessary.  It could be sufficient that clients using 
customizers *MUST* set the palette type manually on new drawers that are 
created and are therefore empty.  Perhaps just adding a setDrawerType(Object 
ID) would be sufficient. If the type wasn't set, then the children would be 
inspected as the code currently shows. If the result is UNKNOWN_TYPE, then we 
could visually display an error in the drawerfigure.

But, this would cause a problem in drawers that started off with children, and 
later became empty.  They would never have their drawer_type set, and once 
empty the type can not be determined.
clients must set drawertype for empty drawers.</WithStack>
    <WithOutStack>Whenever an item is added to palettedrawer it could fire drawer_type changed.

I'm not sure if this is necessary.  It could be sufficient that clients using 
customizers *MUST* set the palette type manually on new drawers that are 
created and are therefore empty.  Perhaps just adding a setDrawerType(Object 
ID) would be sufficient. If the type wasn't set, then the children would be 
inspected as the code currently shows. If the result is UNKNOWN_TYPE, then we 
could visually display an error in the drawerfigure.

But, this would cause a problem in drawers that started off with children, and 
later became empty.  They would never have their drawer_type set, and once 
empty the type can not be determined.
clients must set drawertype for empty drawers.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32517" />
    <CreationDate amount="2003-02-21 17:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No mneumonics on the Choose Configuration Type dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The External Tools builder Choose Configuration Type dialog is missing 
mneumonics.
As well the label text should end in a ':'.
Fixed in ExternalToolsUIMessages.properties
Please verify.
Verified.
Please update the build notes (DarinS).</WithStack>
    <WithOutStack>The External Tools builder Choose Configuration Type dialog is missing 
mneumonics.
As well the label text should end in a ':'.
Fixed in ExternalToolsUIMessages.properties
Please verify.
Verified.
Please update the build notes (DarinS).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32518" />
    <CreationDate amount="2003-02-21 17:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unknown plug-in while self-hosting</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1.  Turn of automatic compile.</Line>
          <Line>2.  Load the following plug-ins from CVS:  swt, core, ui and ui-examples.</Line>
          <Line>3.  Import all required plug-ins with source.</Line>
          <Line>4.  Turn back on automatic compile.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Eclipse 200302211557

New Install, new workspace, new runtime-workspace. 
Self host Eclipse (Run-&gt;Run-time Workbench.)

Following log in runtime-workbench/.metadata/.log
!SESSION Feb 21, 2003 17:21:38.632 ---------------------------------------------
java.fullversion=J2RE 1.3.1 IBM Windows 32 build cn131-20020403 (JIT enabled: 
jitc)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -dev bin, -feature org.eclipse.platform -data 
d:\ide\runtime-workspace -os win32 -ws win32 -arch x86 -nl en_US -configuration 
file:d:/ide/workspace-
R2.1/.metadata/.plugins/org.eclipse.pde.core/d__ide_runtime-
workspace/platform.cfg -install file:D:/ide/eclipse/
!ENTRY org.eclipse.core.runtime 2 1 Feb 21, 2003 17:21:38.632
!MESSAGE Problems encountered loading the plug-in registry.
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Feb 21, 2003 17:21:38.632
!MESSAGE Unknown extension point "org.eclipse.ant.core.antTasks" specified in 
plug-in "org.eclipse.core.resources".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Feb 21, 2003 17:21:38.632
!MESSAGE Unknown extension point "org.eclipse.ant.core.extraClasspathEntries" 
specified in plug-in "org.eclipse.core.resources".
Do you have the org.eclipse.ant.core plug-in in your target platform?
I do not have ant in my workspace.  
My environment was as follows:

With a brand new workspace 
1.  Turn of automatic compile.
2.  Load the following plug-ins from CVS:  swt, core, ui and ui-examples.
3.  Import all required plug-ins with source.
4.  Turn back on automatic compile.

I do believe when I did this in previous build I did not see the log.  Could 
this be something different in PDE?
From a Platform/Core point of view, this is ok. The extension point does exist 
in the ant plug-in so it looks like it is not in your workspace.

I believe that there is an option somewhere for "run with all the plug-ins in 
my workspace and the ones that you can't find get from the file system".

Moving to PDE/UI for comment/closure.

Yes. You must have all the plug-ins and you don't (you have a subset).

You should go to PDE-&gt;Target Platform preference page and press on 'Not In 
Workspace' button to fill in the delta with plug-ins from the the target 
Eclipse.</WithStack>
    <WithOutStack>Eclipse 200302211557

New Install, new workspace, new runtime-workspace. 
Self host Eclipse (Run-&gt;Run-time Workbench.)

Following log in runtime-workbench/.metadata/.log
!SESSION Feb 21, 2003 17:21:38.632 ---------------------------------------------
java.fullversion=J2RE 1.3.1 IBM Windows 32 build cn131-20020403 (JIT enabled: 
jitc)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -dev bin, -feature org.eclipse.platform -data 
d:\ide\runtime-workspace -os win32 -ws win32 -arch x86 -nl en_US -configuration 
file:d:/ide/workspace-
R2.1/.metadata/.plugins/org.eclipse.pde.core/d__ide_runtime-
workspace/platform.cfg -install file:D:/ide/eclipse/
!ENTRY org.eclipse.core.runtime 2 1 Feb 21, 2003 17:21:38.632
!MESSAGE Problems encountered loading the plug-in registry.
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Feb 21, 2003 17:21:38.632
!MESSAGE Unknown extension point "org.eclipse.ant.core.antTasks" specified in 
plug-in "org.eclipse.core.resources".
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Feb 21, 2003 17:21:38.632
!MESSAGE Unknown extension point "org.eclipse.ant.core.extraClasspathEntries" 
specified in plug-in "org.eclipse.core.resources".
Do you have the org.eclipse.ant.core plug-in in your target platform?
I do not have ant in my workspace.  
My environment was as follows:

With a brand new workspace 
1.  Turn of automatic compile.
2.  Load the following plug-ins from CVS:  swt, core, ui and ui-examples.
3.  Import all required plug-ins with source.
4.  Turn back on automatic compile.

I do believe when I did this in previous build I did not see the log.  Could 
this be something different in PDE?
From a Platform/Core point of view, this is ok. The extension point does exist 
in the ant plug-in so it looks like it is not in your workspace.

I believe that there is an option somewhere for "run with all the plug-ins in 
my workspace and the ones that you can't find get from the file system".

Moving to PDE/UI for comment/closure.

Yes. You must have all the plug-ins and you don't (you have a subset).

You should go to PDE-&gt;Target Platform preference page and press on 'Not In 
Workspace' button to fill in the delta with plug-ins from the the target 
Eclipse.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32519" />
    <CreationDate amount="2003-02-21 17:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE on shutdown.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build id: 200302211557

Got the following NPE on shutdown. Not sure if will be able to reproduce it.

- It is help being activated on showdown?

Thread [main] (Suspended (exception NullPointerException))
	WorkbenchHelpPlugin.startup() line: 111
	PluginDescriptor$1.run() line: 728
	InternalPlatform.run(ISafeRunnable) line: 867
	PluginDescriptor.internalDoPluginActivation() line: 740
	PluginDescriptor.doPluginActivation() line: 188
	PluginClassLoader.activatePlugin(String) line: 112
	PluginClassLoader.internalFindClassParentsSelf(String, boolean, 
DelegatingURLClassLoader, boolean) line: 185
	PluginClassLoader(DelegatingURLClassLoader).findClassParentsSelf
(String, boolean, DelegatingURLClassLoader, boolean) line: 490
	PluginClassLoader(DelegatingURLClassLoader).loadClass(String, boolean, 
DelegatingURLClassLoader, Vector, boolean) line: 882
	PluginClassLoader(DelegatingURLClassLoader).loadClass(String, boolean) 
line: 862
	PluginClassLoader(ClassLoader).loadClass(String) line: 250
	PluginDescriptor.createExecutableExtension(String, Object, 
IConfigurationElement, String) line: 130
	PluginDescriptor.createExecutableExtension(String, String, Object, 
IConfigurationElement, String) line: 167
	ConfigurationElement.createExecutableExtension(String) line: 103
	BrowserManager.createBrowserDescriptors() line: 132
	BrowserManager.&lt;init&gt;() line: 29
	BrowserManager.getInstance() line: 106
	HelpSystem.shutdown() line: 151
	HelpPlugin.shutdown() line: 94
	PluginRegistry$2.run() line: 283
	InternalPlatform.run(ISafeRunnable) line: 867
	PluginRegistry$1.visit(IPluginDescriptor) line: 296
	PluginRegistry.accept(IPluginVisitor, boolean) line: 55
	PluginRegistry.shutdownPlugins() line: 299
	PluginRegistry.shutdown(IProgressMonitor) line: 265
	InternalPlatform.loaderShutdown() line: 517
	Method.invoke(Object, Object[]) line: not available [native method]
	InternalBootLoader.shutdown() line: 979
	InternalBootLoader.run(String, URL, String, String[], Runnable) line: 
850
	BootLoader.run(String, URL, String, String[], Runnable) line: 461
	Method.invoke(Object, Object[]) line: not available [native method]
	Main.basicRun(String[]) line: 247
	Main.run(String[]) line: 703
	Main.main(String[]) line: 539
Fixed.  If there is a rebuild of RC1 for any reason, the fix will make it.  If 
the last build is declared stable, the fix will be in RC2.
It does seem strange that the HelpSystem is triggering plugin action on shutdown
().  Can this be avoided?
This is a regression bug, caused by moving some code between the two plug-ins.  
The released fix avoids plug-in activation.

*** Bug 33218 has been marked as a duplicate of this bug. ***
*** Bug 33409 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Build id: 200302211557

Got the following NPE on shutdown. Not sure if will be able to reproduce it.

- It is help being activated on showdown?

Thread [main] (Suspended (exception NullPointerException))
	WorkbenchHelpPlugin.startup() line: 111
	PluginDescriptor$1.run() line: 728
	InternalPlatform.run(ISafeRunnable) line: 867
	PluginDescriptor.internalDoPluginActivation() line: 740
	PluginDescriptor.doPluginActivation() line: 188
	PluginClassLoader.activatePlugin(String) line: 112
	PluginClassLoader.internalFindClassParentsSelf(String, boolean, 
DelegatingURLClassLoader, boolean) line: 185
	PluginClassLoader(DelegatingURLClassLoader).findClassParentsSelf
(String, boolean, DelegatingURLClassLoader, boolean) line: 490
	PluginClassLoader(DelegatingURLClassLoader).loadClass(String, boolean, 
DelegatingURLClassLoader, Vector, boolean) line: 882
	PluginClassLoader(DelegatingURLClassLoader).loadClass(String, boolean) 
line: 862
	PluginClassLoader(ClassLoader).loadClass(String) line: 250
	PluginDescriptor.createExecutableExtension(String, Object, 
IConfigurationElement, String) line: 130
	PluginDescriptor.createExecutableExtension(String, String, Object, 
IConfigurationElement, String) line: 167
	ConfigurationElement.createExecutableExtension(String) line: 103
	BrowserManager.createBrowserDescriptors() line: 132
	BrowserManager.&lt;init&gt;() line: 29
	BrowserManager.getInstance() line: 106
	HelpSystem.shutdown() line: 151
	HelpPlugin.shutdown() line: 94
	PluginRegistry$2.run() line: 283
	InternalPlatform.run(ISafeRunnable) line: 867
	PluginRegistry$1.visit(IPluginDescriptor) line: 296
	PluginRegistry.accept(IPluginVisitor, boolean) line: 55
	PluginRegistry.shutdownPlugins() line: 299
	PluginRegistry.shutdown(IProgressMonitor) line: 265
	InternalPlatform.loaderShutdown() line: 517
	Method.invoke(Object, Object[]) line: not available [native method]
	InternalBootLoader.shutdown() line: 979
	InternalBootLoader.run(String, URL, String, String[], Runnable) line: 
850
	BootLoader.run(String, URL, String, String[], Runnable) line: 461
	Method.invoke(Object, Object[]) line: not available [native method]
	Main.basicRun(String[]) line: 247
	Main.run(String[]) line: 703
	Main.main(String[]) line: 539
Fixed.  If there is a rebuild of RC1 for any reason, the fix will make it.  If 
the last build is declared stable, the fix will be in RC2.
It does seem strange that the HelpSystem is triggering plugin action on shutdown
().  Can this be avoided?
This is a regression bug, caused by moving some code between the two plug-ins.  
The released fix avoids plug-in activation.

*** Bug 33218 has been marked as a duplicate of this bug. ***
*** Bug 33409 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32520" />
    <CreationDate amount="2003-02-21 17:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Show-in Accelerator not working</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Eclipse 200302211557

Installed in a new workspace.  The alt-shift-s accelerator is not present for 
Show-in.

attached is a screen shot of the menu.
Created attachment 3642
Missing accelerator
alt-shift-s opens Source menu
Show In now uses a submenu rather than a dialog.  It no longer has an 
accelerator.
Show In now uses a submenu instead of a dialog.  The accelerator does not apply 
and has been removed.</WithStack>
    <WithOutStack>Eclipse 200302211557

Installed in a new workspace.  The alt-shift-s accelerator is not present for 
Show-in.

attached is a screen shot of the menu.
Created attachment 3642
Missing accelerator
alt-shift-s opens Source menu
Show In now uses a submenu rather than a dialog.  It no longer has an 
accelerator.
Show In now uses a submenu instead of a dialog.  The accelerator does not apply 
and has been removed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32521" />
    <CreationDate amount="2003-02-21 17:33:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>(minor)AntView status line shows "no description"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The status line of the AntView shows the following text:
Name: gather.logs Dependencies: init Description: (no description)

* it is difficult to distinguish the fixed text from the variable (interesting 
text). Suggest to minimize the fixed test, e.g. remove "Name:"

* when there is no Description then omit the field  alltogether showing "(no 
description)" has only minimal value. 

Here is a proposal:
gather.logs, depends: init, "its description"
Separating the depends from the description with commas would be confusing
for targets with multiple dependencies. For example:
gather.logs, depends: init, do it, another target, a description

We need to keep the "depends:" (agree we should shorten it from
"dependencies") and "description" labels for this reason. I added the "name"
label only for consistency but we can remove it if you think it takes up too
much space.

I also agree that we can lose the "description: (no description)" text.

An alternative would be to show the description separated by a -, e.g.,
   gather.logs, depends: init, do it, another target - a description

However, I have no strong opinion on this one, but I still suggest to remove 
the Name: field.


What do you think about making the string mirror the target definition in the
XML?
name=rebuild all depends=init,clean description=Rebuild all
this would make sense, but I find that without quotes it is difficult to parse:

name=rebuild all depends=...

vs

name="rebuild all" depends=...

However, adding quotes makes the line more noisy. 
Went with the XML-style naming which makes it easier to parse the status line
visually and removed the (no description) text.

Please verify, DarinS.
Verified.</WithStack>
    <WithOutStack>The status line of the AntView shows the following text:
Name: gather.logs Dependencies: init Description: (no description)

* it is difficult to distinguish the fixed text from the variable (interesting 
text). Suggest to minimize the fixed test, e.g. remove "Name:"

* when there is no Description then omit the field  alltogether showing "(no 
description)" has only minimal value. 

Here is a proposal:
gather.logs, depends: init, "its description"
Separating the depends from the description with commas would be confusing
for targets with multiple dependencies. For example:
gather.logs, depends: init, do it, another target, a description

We need to keep the "depends:" (agree we should shorten it from
"dependencies") and "description" labels for this reason. I added the "name"
label only for consistency but we can remove it if you think it takes up too
much space.

I also agree that we can lose the "description: (no description)" text.

An alternative would be to show the description separated by a -, e.g.,
   gather.logs, depends: init, do it, another target - a description

However, I have no strong opinion on this one, but I still suggest to remove 
the Name: field.


What do you think about making the string mirror the target definition in the
XML?
name=rebuild all depends=init,clean description=Rebuild all
this would make sense, but I find that without quotes it is difficult to parse:

name=rebuild all depends=...

vs

name="rebuild all" depends=...

However, adding quotes makes the line more noisy. 
Went with the XML-style naming which makes it easier to parse the status line
visually and removed the (no description) text.

Please verify, DarinS.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32522" />
    <CreationDate amount="2003-02-21 17:42:00 -0500" />
    <DupId amount="32529" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No decorators in Package Explorer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1.  Turn of automatic compile.</Line>
          <Line>2.  Load the following plug-ins from CVS:  swt, core, ui and ui-examples.</Line>
          <Line>3.  Import all required plug-ins with source.</Line>
          <Line>4.  Import the attached prefences (Window-&gt; Preferences-&gt; import)  This will</Line>
          <Line>cause the compile.</Line>
          <Line />
          <Line>5.  Make changes to workbench.java</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Eclipse 200302211557

With a brand new workspace 
1.  Turn of automatic compile.
2.  Load the following plug-ins from CVS:  swt, core, ui and ui-examples.
3.  Import all required plug-ins with source.
4.  Import the attached prefences (Window-&gt; Preferences-&gt; import)  This will 
cause the compile.

5.  Make changes to workbench.java

No decorators were shown in the Package Explorer (i.e. &gt; or [dev.eclipse.org]

I then verified I had indeed turned on CVS decorators; they were on;  I make no 
changes.  I do not remember if I now hit 'ok' or 'cancel'

All decorators are now present.
Created attachment 3643
Preferences to import
I could see the same problem in both package explorer/resources navigator, with 
all kinds of decorators. See bug 32529.
Sounds like a dup since Andrew used import preferences.

*** This bug has been marked as a duplicate of 32529 ***</WithStack>
    <WithOutStack>Eclipse 200302211557

With a brand new workspace 
1.  Turn of automatic compile.
2.  Load the following plug-ins from CVS:  swt, core, ui and ui-examples.
3.  Import all required plug-ins with source.
4.  Import the attached prefences (Window-&gt; Preferences-&gt; import)  This will 
cause the compile.

5.  Make changes to workbench.java

No decorators were shown in the Package Explorer (i.e. &gt; or [dev.eclipse.org]

I then verified I had indeed turned on CVS decorators; they were on;  I make no 
changes.  I do not remember if I now hit 'ok' or 'cancel'

All decorators are now present.
Created attachment 3643
Preferences to import
I could see the same problem in both package explorer/resources navigator, with 
all kinds of decorators. See bug 32529.
Sounds like a dup since Andrew used import preferences.

*** This bug has been marked as a duplicate of 32529 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32523" />
    <CreationDate amount="2003-02-21 17:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>NPE discarding location when there are no locations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340333677">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.ui.repo.RemoveRootAction.getSelectedRemoteRoots(RemoveRootAction.java:49)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.ui.repo.RemoveRootAction.run(RemoveRootAction.java:72)</Frame>
          <Frame depth="2">org.eclipse.jface.action.Action.runWithEvent(Action.java:841)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 200302211557

In the CVS Repositories view, a NPE is generated discarding a location when 
there is no locations created.

Steps to reproduce:

1 - Open a new workspace
2 - Open the CVS Repositories view
3 - Open the context menu in this view area: "Discard location" option is 
enabled (shouldn't)
4 - Select "Discard location" (bug happens)

An entry for the NPE in the log is generated. Top entries in stack trace are:

java.lang.NullPointerException
at 
org.eclipse.team.internal.ccvs.ui.repo.RemoveRootAction.getSelectedRemoteRoots
(RemoveRootAction.java:49)
at org.eclipse.team.internal.ccvs.ui.repo.RemoveRootAction.run
(RemoveRootAction.java:72)
at org.eclipse.jface.action.Action.runWithEvent(Action.java:841)
...
Created attachment 3795
This also solves the "global and context enablement out of sync" problem
Patch has been applied</WithStack>
    <WithOutStack>Build 200302211557

In the CVS Repositories view, a NPE is generated discarding a location when 
there is no locations created.

Steps to reproduce:

1 - Open a new workspace
2 - Open the CVS Repositories view
3 - Open the context menu in this view area: "Discard location" option is 
enabled (shouldn't)
4 - Select "Discard location" (bug happens)

An entry for the NPE in the log is generated. Top entries in stack trace are:


...
Created attachment 3795
This also solves the "global and context enablement out of sync" problem
Patch has been applied</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32524" />
    <CreationDate amount="2003-02-21 17:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>CoolBar Clips 'run' icon</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Run the second attached test case.</Line>
          <Line>2. Press the Add Tool Items button, which adds items to the third coolitem and</Line>
          <Line>resets the preferred/minimumSize for the coolitem.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 200302211557

The attached screenshot shows the 'run' icon being clipped on linux-gtk
Created attachment 3644
Clipped icon
The external tools icon was covered completely!
Reassigning to SWT.

Do not see the behavior on Win2K or Motif.  Spent all day trying to install 
gtk2 (unsuccessfully).  Based on the attached screen snap, it appears that the 
GTK version of the coolbar is not honoring minimumSize.  I set the minimumSize 
of the coolitems to the maximumSize of the toolbar so that chevrons will never 
appear.  This behavior works on Motif and Windows, but not GTK for some reason.
The error does not appear everytime on GTK either.  I have seen extra space in 
the coolbars on windows/motif and gtk in the recent past, perhaps one weeks 
worth of builds.
Note that "the extra space appearing" that AI mentions is another problem.  I 
will track that down.  This problem specifically has to do with chevrons 
appearing when they should not.  Andrew, under what circumstances did the 
coolitems get clippped?
I only saw the clipping when I first installed Eclipse 20030221.  My workspace 
was a previously created workspace, probably created by Eclipse 20030219.  I 
captured the screenshot, and then moved the coolbars around.  Since then I have 
not seen it again.
There was a fix to some size problems in toolbar on GTK for RC1.
The old workspace would have cached the wrong size information and tried to 
restore it.  Reseting the perspective or repositioning the hidden items should 
have fixed the problem.

I am going to close this bug report since it only occurs when moving between an 
~M5 workspace to an ~RC1 workspace.
There are problems with coolitems getting clipped and the behavior does not have
to do with M4 workspaces.  I have one test case so far and am working on
another.  The behavior is leading to chevrons appearing in Eclipse when they
should not.  Note that I am on Linux-Motif.

For the first attached test case, run the example.  Notice that the first item
in the coolbar is completely clipped (slide the first gripper to the right to
see the coolitem that is being clipped).  Running the same example on Windows
correctly shows the first item.
Created attachment 3733
test case 1, jar file
1. Run the second attached test case.
2. Press the Add Tool Items button, which adds items to the third coolitem and
resets the preferred/minimumSize for the coolitem.

Notice that the third item is completely clippped.  The minimumSize is not being
honored.  Running the same test on Windows works.
Created attachment 3737
test case 2, jar file
Nick has originally marked this as RC2 and then the bug was moved to the SWT 
shop.  SWT is looking at the problem but we are not committed to it for the 
RC2 milestone.
Fixed &gt; 20040426 in HEAD
I tested both testcases and they are working fine.</WithStack>
    <WithOutStack>Eclipse 200302211557

The attached screenshot shows the 'run' icon being clipped on linux-gtk
Created attachment 3644
Clipped icon
The external tools icon was covered completely!
Reassigning to SWT.

Do not see the behavior on Win2K or Motif.  Spent all day trying to install 
gtk2 (unsuccessfully).  Based on the attached screen snap, it appears that the 
GTK version of the coolbar is not honoring minimumSize.  I set the minimumSize 
of the coolitems to the maximumSize of the toolbar so that chevrons will never 
appear.  This behavior works on Motif and Windows, but not GTK for some reason.
The error does not appear everytime on GTK either.  I have seen extra space in 
the coolbars on windows/motif and gtk in the recent past, perhaps one weeks 
worth of builds.
Note that "the extra space appearing" that AI mentions is another problem.  I 
will track that down.  This problem specifically has to do with chevrons 
appearing when they should not.  Andrew, under what circumstances did the 
coolitems get clippped?
I only saw the clipping when I first installed Eclipse 20030221.  My workspace 
was a previously created workspace, probably created by Eclipse 20030219.  I 
captured the screenshot, and then moved the coolbars around.  Since then I have 
not seen it again.
There was a fix to some size problems in toolbar on GTK for RC1.
The old workspace would have cached the wrong size information and tried to 
restore it.  Reseting the perspective or repositioning the hidden items should 
have fixed the problem.

I am going to close this bug report since it only occurs when moving between an 
~M5 workspace to an ~RC1 workspace.
There are problems with coolitems getting clipped and the behavior does not have
to do with M4 workspaces.  I have one test case so far and am working on
another.  The behavior is leading to chevrons appearing in Eclipse when they
should not.  Note that I am on Linux-Motif.

For the first attached test case, run the example.  Notice that the first item
in the coolbar is completely clipped (slide the first gripper to the right to
see the coolitem that is being clipped).  Running the same example on Windows
correctly shows the first item.
Created attachment 3733
test case 1, jar file
1. Run the second attached test case.
2. Press the Add Tool Items button, which adds items to the third coolitem and
resets the preferred/minimumSize for the coolitem.

Notice that the third item is completely clippped.  The minimumSize is not being
honored.  Running the same test on Windows works.
Created attachment 3737
test case 2, jar file
Nick has originally marked this as RC2 and then the bug was moved to the SWT 
shop.  SWT is looking at the problem but we are not committed to it for the 
RC2 milestone.
Fixed &gt; 20040426 in HEAD
I tested both testcases and they are working fine.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32525" />
    <CreationDate amount="2003-02-21 18:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>5 ways to report errors?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="5">
        <Lines>
          <Line>- marker in the left margin</Line>
          <Line>- box in the outline in the right margin</Line>
          <Line>- icon on the editor tab</Line>
          <Line>- squiggly-line in the text</Line>
          <Line>- square in the top-right of the editor</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- it shows me the exact same info as the icon in the editor tab</Line>
          <Line>- its an ugly box</Line>
          <Line>- I can't click on it or do anything with it</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>In the latest builds, there are now 5 different ways to report errors in a Java 
editor:

- marker in the left margin
- box in the outline in the right margin
- icon on the editor tab
- squiggly-line in the text
- square in the top-right of the editor

I know that the 5th was added for M5 but I don't understand the "value add" for 
it.
- it shows me the exact same info as the icon in the editor tab
- its an ugly box
- I can't click on it or do anything with it

So what does it add? If it is deemed necessary, can we at least replace it with 
a nice icon?
editor tab icon is computed basing on the build state
the NE icon square is based on parse state (you don't have to build)

it's a good place to look at to quickly see if you have any errors/warnings in 
the current file (otheriwise you have to look ath the whole overview ruler or 
do a build)

the icon is suboptimal: +1 from me
see also bug 31770 for my suggestion to put some info in the hover of that icon
See Adam's comment. 
We are not using an icon as the color configured color of the 
problems/warnings is used.</WithStack>
    <WithOutStack>In the latest builds, there are now 5 different ways to report errors in a Java 
editor:

- marker in the left margin
- box in the outline in the right margin
- icon on the editor tab
- squiggly-line in the text
- square in the top-right of the editor

I know that the 5th was added for M5 but I don't understand the "value add" for 
it.
- it shows me the exact same info as the icon in the editor tab
- its an ugly box
- I can't click on it or do anything with it

So what does it add? If it is deemed necessary, can we at least replace it with 
a nice icon?
editor tab icon is computed basing on the build state
the NE icon square is based on parse state (you don't have to build)

it's a good place to look at to quickly see if you have any errors/warnings in 
the current file (otheriwise you have to look ath the whole overview ruler or 
do a build)

the icon is suboptimal: +1 from me
see also bug 31770 for my suggestion to put some info in the hover of that icon
See Adam's comment. 
We are not using an icon as the color configured color of the 
problems/warnings is used.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32526" />
    <CreationDate amount="2003-02-21 18:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Revealing locations in editors takes very long</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Put a breakpoint in ShowStaticVariablesAction.run(IAction)</Line>
          <Line>2. Launch a target Eclipse.</Line>
          <Line>3. When the breakpoint is hit, select a stack frame. Eclipse hangs for nearly</Line>
          <Line>10 seconds.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 20030221

1. Put a breakpoint in ShowStaticVariablesAction.run(IAction)
2. Launch a target Eclipse.
3. When the breakpoint is hit, select a stack frame. Eclipse hangs for nearly
10 seconds.

I don't get this problem with a simple toy test case.
I get the same problem selecting methods in the outline. Passing up the JDT UI.
As this is platform specific. Moving to SWT.
The problem appears when debugging eclipse. When the UI thread of the target
Eclipse is suspended, all actions which try to reveal a location take very long.

The actions take long not only on the host Eclipse which launched the target,
but on all launched Eclipse.
I suggest someone from Debug to some investigation to determine which call is 
taking the time.
*** Bug 35028 has been marked as a duplicate of this bug. ***
Deferred
Jared, is this still a problem? If not, please close. Thanks.
Can no longer reproduce. Closing.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Build 20030221

1. Put a breakpoint in ShowStaticVariablesAction.run(IAction)
2. Launch a target Eclipse.
3. When the breakpoint is hit, select a stack frame. Eclipse hangs for nearly
10 seconds.

I don't get this problem with a simple toy test case.
I get the same problem selecting methods in the outline. Passing up the JDT UI.
As this is platform specific. Moving to SWT.
The problem appears when debugging eclipse. When the UI thread of the target
Eclipse is suspended, all actions which try to reveal a location take very long.

The actions take long not only on the host Eclipse which launched the target,
but on all launched Eclipse.
I suggest someone from Debug to some investigation to determine which call is 
taking the time.
*** Bug 35028 has been marked as a duplicate of this bug. ***
Deferred
Jared, is this still a problem? If not, please close. Thanks.
Can no longer reproduce. Closing.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32527" />
    <CreationDate amount="2003-02-21 18:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Fragments cannot define libraries with the same name?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Build id: 200302211557

I have two fragments (one win32/one linux) that I am actively developing.  I
used to be able to run my runtime workbench with both of these plugins active,
but now I cannot.  The problem appears to be that the two plugins both define
their jars with the same name.  Has this always been disallowed? 

!SESSION Feb 21, 2003 17:04:07.486 ---------------------------------------------
java.version=1.3.1_03
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -data
C:\home\eclipse\2.1\eclipse20030221\eclipse\runtime-test-workspace -dev bin
-consolelog -port 14128 -testpluginname com.example.autorefresh.tests
-classnames com.example.autorefresh.tests.AutomatedSuite
!ENTRY org.eclipse.core.runtime 2 1 Feb 21, 2003 17:04:07.486
!MESSAGE Problems encountered loading the plug-in registry.
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Feb 21, 2003 17:04:07.486
!MESSAGE Fragment "com.example.autorefresh.win32" for plug-in
"com.example.autorefresh", has added duplicate library entry "refresh.jar" .
It was always dis-allowed but now we are actually telling the user about it.

See Bug 23522.</WithStack>
    <WithOutStack>Build id: 200302211557

I have two fragments (one win32/one linux) that I am actively developing.  I
used to be able to run my runtime workbench with both of these plugins active,
but now I cannot.  The problem appears to be that the two plugins both define
their jars with the same name.  Has this always been disallowed? 

!SESSION Feb 21, 2003 17:04:07.486 ---------------------------------------------
java.version=1.3.1_03
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -data
C:\home\eclipse\2.1\eclipse20030221\eclipse\runtime-test-workspace -dev bin
-consolelog -port 14128 -testpluginname com.example.autorefresh.tests
-classnames com.example.autorefresh.tests.AutomatedSuite
!ENTRY org.eclipse.core.runtime 2 1 Feb 21, 2003 17:04:07.486
!MESSAGE Problems encountered loading the plug-in registry.
!SUBENTRY 1 org.eclipse.core.runtime 2 1 Feb 21, 2003 17:04:07.486
!MESSAGE Fragment "com.example.autorefresh.win32" for plug-in
"com.example.autorefresh", has added duplicate library entry "refresh.jar" .
It was always dis-allowed but now we are actually telling the user about it.

See Bug 23522.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32528" />
    <CreationDate amount="2003-02-21 18:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="Other" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[Contributions] VariableFilterActions don't work</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20030221

The variable filter actions don't work. The actions are not shown in the UI
with space for checkmarks nor does clicking on them do anything.
Debugging through this, the action appears to be executed just fine. Could be
a problem with the label provider? Investigating.
The JDIModelPresentation doesn't appear to be part of the labelling anymore.
Probably caused by one of the fixes to Bug 31819.
I'm at a loss. I can't see how this ever worked. It looks like the variables
view sets it label provider to a VariablesViewModelPresentation which does
*not* delegate to anyone in getText() but just returns a value without taking
the label preferences into account.

I would expect the VariablesView to use a JDIModelPresentation instead. What
am I missing?
It works - the VariablesViewModelPresentation is a subtype of the 
DelegatingModelPresentation, which gets its text from the super method, and 
then processes the special characters. The problem is in the checked state of 
the toggle action - it never shows up as checked, so we're always turning the 
action off.
for some reason, the actions are set up as "push buttons" instead of toggles.
It looks like a new "style" attribute was introduced to action contributions, 
where in the past, a "state" attribute was sufficient to set an action as a 
toggle.

Trying to determine when this was introduced, but I beleive it is a breaking 
change.
When I add the "style = "toggle"" attribute, things work. But this was not 
neccessary until this build.
I have released the fix (added toggle styles to the actions). However, I am 
moving this bug to UI, since it seems like a breaking change.
Yes, this is a breaking change on our part which will be fixed for RC2.

Can you tell me which plugin.xml (and what part of the file) you modified? I 
just need one example so I can debug it. I'm pretty sure what is causing this 
problem, but just want to confirm this.
*** Bug 32916 has been marked as a duplicate of this bug. ***
Code changes done and released for thursday's integration build. Now backward 
compatible again with old action contribution format.
*** Bug 33384 has been marked as a duplicate of this bug. ***
*** Bug 33727 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Build 20030221

The variable filter actions don't work. The actions are not shown in the UI
with space for checkmarks nor does clicking on them do anything.
Debugging through this, the action appears to be executed just fine. Could be
a problem with the label provider? Investigating.
The JDIModelPresentation doesn't appear to be part of the labelling anymore.
Probably caused by one of the fixes to Bug 31819.
I'm at a loss. I can't see how this ever worked. It looks like the variables
view sets it label provider to a VariablesViewModelPresentation which does
*not* delegate to anyone in getText() but just returns a value without taking
the label preferences into account.

I would expect the VariablesView to use a JDIModelPresentation instead. What
am I missing?
It works - the VariablesViewModelPresentation is a subtype of the 
DelegatingModelPresentation, which gets its text from the super method, and 
then processes the special characters. The problem is in the checked state of 
the toggle action - it never shows up as checked, so we're always turning the 
action off.
for some reason, the actions are set up as "push buttons" instead of toggles.
It looks like a new "style" attribute was introduced to action contributions, 
where in the past, a "state" attribute was sufficient to set an action as a 
toggle.

Trying to determine when this was introduced, but I beleive it is a breaking 
change.
When I add the "style = "toggle"" attribute, things work. But this was not 
neccessary until this build.
I have released the fix (added toggle styles to the actions). However, I am 
moving this bug to UI, since it seems like a breaking change.
Yes, this is a breaking change on our part which will be fixed for RC2.

Can you tell me which plugin.xml (and what part of the file) you modified? I 
just need one example so I can debug it. I'm pretty sure what is causing this 
problem, but just want to confirm this.
*** Bug 32916 has been marked as a duplicate of this bug. ***
Code changes done and released for thursday's integration build. Now backward 
compatible again with old action contribution format.
*** Bug 33384 has been marked as a duplicate of this bug. ***
*** Bug 33727 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32529" />
    <CreationDate amount="2003-02-21 18:18:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Decorators] decorators are not enabled when importing preferences</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build id: 200302211557

1 - open a workspace with binary projects, projects taken from a CVS 
repository, and project containings linked resources

2 - turn all decorators on (apply changes)

3 - Resource navigator / package explorer icons/labels will be decorated

4 - export preferences to any location

5 - reopen preferences, turn all decorators off (decorations disappear)

6 - reimport the preferences from the location you chose in step 4

7 - decorators won't be turned on (bug)

8 - open decorators preference page: all decorators seem to be on. Apply 
changes or close the preferences dialog with Ok

9 - decorators will be turned on
*** Bug 32522 has been marked as a duplicate of this bug. ***
There are no plans for the UI team to work on this defect until higher 
priority items are addressed.  If you would like to work on this defect, 
please let us know on the platform-ui-dev mailing list.

*** Bug 35702 has been marked as a duplicate of this bug. ***
Should fix for 2.2.

Tod is this still a problem
Yes but it is not that big of a deal. You just need to have something happen 
(like load a resource or open a view) for them to kick in.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Build id: 200302211557

1 - open a workspace with binary projects, projects taken from a CVS 
repository, and project containings linked resources

2 - turn all decorators on (apply changes)

3 - Resource navigator / package explorer icons/labels will be decorated

4 - export preferences to any location

5 - reopen preferences, turn all decorators off (decorations disappear)

6 - reimport the preferences from the location you chose in step 4

7 - decorators won't be turned on (bug)

8 - open decorators preference page: all decorators seem to be on. Apply 
changes or close the preferences dialog with Ok

9 - decorators will be turned on
*** Bug 32522 has been marked as a duplicate of this bug. ***
There are no plans for the UI team to work on this defect until higher 
priority items are addressed.  If you would like to work on this defect, 
please let us know on the platform-ui-dev mailing list.

*** Bug 35702 has been marked as a duplicate of this bug. ***
Should fix for 2.2.

Tod is this still a problem
Yes but it is not that big of a deal. You just need to have something happen 
(like load a resource or open a view) for them to kick in.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32530" />
    <CreationDate amount="2003-02-21 18:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Selecting inner-type methods in outline has no effect</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build 20030221

If I expand an inner type declaration node in the outline page and select a 
method, the method is not selected in the editor.
Cannot reproduceon RC1. What are your steps?
I can't reproduce the problem now either. It's possible that an earlier
exception occurred to get it into this state. Closing. I'll reopen if I see
it again.</WithStack>
    <WithOutStack>Build 20030221

If I expand an inner type declaration node in the outline page and select a 
method, the method is not selected in the editor.
Cannot reproduceon RC1. What are your steps?
I can't reproduce the problem now either. It's possible that an earlier
exception occurred to get it into this state. Closing. I'll reopen if I see
it again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32531" />
    <CreationDate amount="2003-02-21 18:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>NPE importing preferences</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340333687">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.rootsAndContainers(PackageExplorerContentProvider.java:153)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.getChildren(PackageExplorerContentProvider.java:131)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.getFilteredChildren(PackageExplorerPart.java:352)</Frame>
          <Frame depth="3">org.eclipse.jface.viewers.StructuredViewer.getSortedChildren(StructuredViewer.java:555)</Frame>
          <Frame depth="4">org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren(AbstractTreeViewer.java:1282)</Frame>
          <Frame depth="5">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:925)</Frame>
          <Frame depth="6">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:934)</Frame>
          <Frame depth="7">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:895)</Frame>
          <Frame depth="8">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:881)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:858)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:798)</Frame>
          <Frame depth="11">org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:856)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:818)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.propertyChange(PackageExplorerPart.java:1062)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build id: 200302211557

Got error messages when importing preferences. I couldn't reproduce the problem 
anymore. Will attach stack traces (two generated in a row). Top entries are:

java.lang.NullPointerException
at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.rootsAndC
ontainers(PackageExplorerContentProvider.java:153)
at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.getChildr
en(PackageExplorerContentProvider.java:131)
at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.getFilteredChildre
n(PackageExplorerPart.java:352)
at org.eclipse.jface.viewers.StructuredViewer.getSortedChildren
(StructuredViewer.java:555)
at org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren
(AbstractTreeViewer.java:1282)
at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java:925)
at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java:934)
at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java:895)
at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java:881)
at org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:858)
at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:798)
at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:856)
at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:818)
at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.propertyChange
(PackageExplorerPart.java:1062)
Created attachment 3645
log containg stack traces
could not reproduce but added missing null check.


Created attachment 3808
log for NPE when rebuilding

This guard was not released into build 200302270800, right?

Just to add more context to the PR, I got a similar NPE, but now when
rebuilding all projects. 

Sorry, but again I can't reproduce it.
verified that the null check got not released in 0227</WithStack>
    <WithOutStack>Build id: 200302211557

Got error messages when importing preferences. I couldn't reproduce the problem 
anymore. Will attach stack traces (two generated in a row). Top entries are:


Created attachment 3645
log containg stack traces
could not reproduce but added missing null check.


Created attachment 3808
log for NPE when rebuilding

This guard was not released into build 200302270800, right?

Just to add more context to the PR, I got a similar NPE, but now when
rebuilding all projects. 

Sorry, but again I can't reproduce it.
verified that the null check got not released in 0227</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32532" />
    <CreationDate amount="2003-02-21 18:44:00 -0500" />
    <DupId amount="32734" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE refreshing in the variables view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340333687">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.swt.widgets.Tree.wmNotifyChild(Tree.java:1788)</Frame>
          <Frame depth="1">org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:3774)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Composite.WM_NOTIFY(Composite.java:638)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Control.windowProc(Control.java:2810)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Display.windowProc(Display.java:2281)</Frame>
          <Frame depth="5">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="6">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1227)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java:152)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Control.windowProc(Control.java:2839)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Display.windowProc(Display.java:2281)</Frame>
          <Frame depth="10">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="11">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1227)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java:152)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Control.windowProc(Control.java:2839)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.windowProc(Display.java:2281)</Frame>
          <Frame depth="15">org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)</Frame>
          <Frame depth="16">org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:1776)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Tree.destroyItem(Tree.java:337)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.TreeItem.releaseChild(TreeItem.java:465)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Widget.dispose(Widget.java:367)</Frame>
          <Frame depth="20">org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren(AbstractTreeViewer.java:1316)</Frame>
          <Frame depth="21">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:925)</Frame>
          <Frame depth="22">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:895)</Frame>
          <Frame depth="23">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:881)</Frame>
          <Frame depth="24">org.eclipse.jface.viewers.StructuredViewer$7.run(StructuredViewer.java:858)</Frame>
          <Frame depth="25">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:798)</Frame>
          <Frame depth="26">org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:856)</Frame>
          <Frame depth="27">org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:818)</Frame>
          <Frame depth="28">org.eclipse.debug.internal.ui.views.variables.VariablesViewer.refresh(VariablesViewer.java:60)</Frame>
          <Frame depth="29">org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler.refresh(AbstractDebugEventHandler.java:140)</Frame>
          <Frame depth="30">org.eclipse.debug.internal.ui.views.variables.VariablesViewEventHandler.doHandleSuspendEvent(VariablesViewEventHandler.java:86)</Frame>
          <Frame depth="31">org.eclipse.debug.internal.ui.views.variables.VariablesViewEventHandler.doHandleDebugEvents(VariablesViewEventHandler.java:40)</Frame>
          <Frame depth="32">org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run(AbstractDebugEventHandler.java:65)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:94)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1752)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1487)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1271)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)</Frame>
          <Frame depth="39">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="40">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="41">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="42">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="43">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="44">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="45">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="46">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="47">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>On shutdown, I noticed this in my log:
java.lang.NullPointerException
	at org.eclipse.swt.widgets.Tree.wmNotifyChild(Tree.java:1788)
	at org.eclipse.swt.widgets.Control.WM_NOTIFY(Control.java:3774)
	at org.eclipse.swt.widgets.Composite.WM_NOTIFY(Composite.java:638)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2810)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2281)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1227)
	at org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java:152)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2839)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2281)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1227)
	at org.eclipse.swt.widgets.Tree.callWindowProc(Tree.java:152)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2839)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2281)
	at org.eclipse.swt.internal.win32.OS.SendMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.SendMessage(OS.java:1776)
	at org.eclipse.swt.widgets.Tree.destroyItem(Tree.java:337)
	at org.eclipse.swt.widgets.TreeItem.releaseChild(TreeItem.java:465)
	at org.eclipse.swt.widgets.Widget.dispose(Widget.java:367)
	at org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren
(AbstractTreeViewer.java:1316)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java:925)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java:895)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java:881)
	at org.eclipse.jface.viewers.StructuredViewer$7.run
(StructuredViewer.java:858)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:798)
	at org.eclipse.jface.viewers.StructuredViewer.refresh
(StructuredViewer.java:856)
	at org.eclipse.jface.viewers.StructuredViewer.refresh
(StructuredViewer.java:818)
	at org.eclipse.debug.internal.ui.views.variables.VariablesViewer.refresh
(VariablesViewer.java:60)
	at org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler.refresh
(AbstractDebugEventHandler.java:140)
	at 
org.eclipse.debug.internal.ui.views.variables.VariablesViewEventHandler.doHandle
SuspendEvent(VariablesViewEventHandler.java:86)
	at 
org.eclipse.debug.internal.ui.views.variables.VariablesViewEventHandler.doHandle
DebugEvents(VariablesViewEventHandler.java:40)
	at org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run
(AbstractDebugEventHandler.java:65)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:94)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1752)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1487)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1271)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)


*** This bug has been marked as a duplicate of 32734 ***</WithStack>
    <WithOutStack>On shutdown, I noticed this in my log:



*** This bug has been marked as a duplicate of 32734 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32533" />
    <CreationDate amount="2003-02-21 21:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Check out as" ends up telling you project already exists, when it didn't before started checking out from cvs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>CVS view, right click on cvs project, and select "Check out as..." and click 
next to choose java project, enter a project name you know you've never had in 
eclipse ie: yaddayaddayadda, click finish.  Doesn't matter what you answer to 
the confirm perspective switch, immediately after that you will get:

The resource "yaddayaddayadda" already exists in the workspace. Overwrite?

This should happen, the resource never existed in my workspace until I began 
the check out process.
This is still occurring, and is VERY annoying whenever you are loading in a 
new project from CVS, which I do very fairly often.
Unfortunately, this is not as easy to fix as it should be and points to a 
bigger issue in how projects with a particulr nature are created (e.g java 
nature). The workaround is to commit the .project to the repository. Hopefully, 
we will be able to address this properly in 2.2.
Add to readme for 2.1
This was fixed in 3.0 M3</WithStack>
    <WithOutStack>CVS view, right click on cvs project, and select "Check out as..." and click 
next to choose java project, enter a project name you know you've never had in 
eclipse ie: yaddayaddayadda, click finish.  Doesn't matter what you answer to 
the confirm perspective switch, immediately after that you will get:

The resource "yaddayaddayadda" already exists in the workspace. Overwrite?

This should happen, the resource never existed in my workspace until I began 
the check out process.
This is still occurring, and is VERY annoying whenever you are loading in a 
new project from CVS, which I do very fairly often.
Unfortunately, this is not as easy to fix as it should be and points to a 
bigger issue in how projects with a particulr nature are created (e.g java 
nature). The workaround is to commit the .project to the repository. Hopefully, 
we will be able to address this properly in 2.2.
Add to readme for 2.1
This was fixed in 3.0 M3</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32534" />
    <CreationDate amount="2003-02-21 22:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>Add capability to restore from repository based on a date &amp; time, and not just branch/version.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I would like a very simple mechanism to restore an entire project from CVS to 
a point in time, and not just points in time where a tag/branch was created.

specifically, exactly like using cvs update -D rather than cvs update -r
This was added in 3.0</WithStack>
    <WithOutStack>I would like a very simple mechanism to restore an entire project from CVS to 
a point in time, and not just points in time where a tag/branch was created.

specifically, exactly like using cvs update -D rather than cvs update -r
This was added in 3.0</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32535" />
    <CreationDate amount="2003-02-21 23:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Stellation" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Repository access and other Core errors are often not reported to the user</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="13">
        <Lines>
          <Line>(1) The scm.model patch modifies scm.model internal error reporting to route</Line>
          <Line>most error reports to the standard plugin log for the scm.model plugin.</Line>
          <Line>The revised code is probably reporting too many errors to the end user, and</Line>
          <Line>we should probably prune the set of user-visible error messages, routing</Line>
          <Line>excluded error messages to an internal debug log.</Line>
          <Line>(2) The scm.ui patch adds a new class, ModelStatusReporter, which listens for</Line>
          <Line>log entries made to the scm.model log.	These are reported to the user via a</Line>
          <Line>standard popup dialog.	Additional patch elements include some fixes to the</Line>
          <Line>previous error popup dialog, and insertion of a ModelStatusReporter into</Line>
          <Line>various repository-related operations (project creation/sharing, the</Line>
          <Line>InfoLister, checkin/checkout, etc.).</Line>
          <Line>Looks good to me.</Line>
          <Line>Checked into CVS and tagged as version Bugzilla-32535</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The current Eclipse client has very weak error reporting.
The existing code was designed to report errors via log4j, and should be 
modified to report errors to the user via standard Eclipse mechanisms.
Created attachment 3646
Error reporting enhancement patch

This zip contains two patches.
(1) The scm.model patch modifies scm.model internal error reporting to route
most error reports to the standard plugin log for the scm.model plugin.
The revised code is probably reporting too many errors to the end user, and
we should probably prune the set of user-visible error messages, routing
excluded error messages to an internal debug log.
(2) The scm.ui patch adds a new class, ModelStatusReporter, which listens for
log entries made to the scm.model log.	These are reported to the user via a
standard popup dialog.	Additional patch elements include some fixes to the
previous error popup dialog, and insertion of a ModelStatusReporter into
various repository-related operations (project creation/sharing, the
InfoLister, checkin/checkout, etc.).
Looks good to me. 
Checked into CVS and tagged as version Bugzilla-32535</WithStack>
    <WithOutStack>The current Eclipse client has very weak error reporting.
The existing code was designed to report errors via log4j, and should be 
modified to report errors to the user via standard Eclipse mechanisms.
Created attachment 3646
Error reporting enhancement patch

This zip contains two patches.
(1) The scm.model patch modifies scm.model internal error reporting to route
most error reports to the standard plugin log for the scm.model plugin.
The revised code is probably reporting too many errors to the end user, and
we should probably prune the set of user-visible error messages, routing
excluded error messages to an internal debug log.
(2) The scm.ui patch adds a new class, ModelStatusReporter, which listens for
log entries made to the scm.model log.	These are reported to the user via a
standard popup dialog.	Additional patch elements include some fixes to the
previous error popup dialog, and insertion of a ModelStatusReporter into
various repository-related operations (project creation/sharing, the
InfoLister, checkin/checkout, etc.).
Looks good to me. 
Checked into CVS and tagged as version Bugzilla-32535</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32536" />
    <CreationDate amount="2003-02-21 23:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>Ability to compare two local history versions of a file to each other</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>It would be useful to be able to compare two local history versions of a file to
each other.  For example:  I want to revert to a previous version of some file,
but I'm not sure which one.  Comparing some version with a different version
would help me decide by telling me what changes were made between the two.
Yes, will be considered for 2.2
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>It would be useful to be able to compare two local history versions of a file to
each other.  For example:  I want to revert to a previous version of some file,
but I'm not sure which one.  Comparing some version with a different version
would help me decide by telling me what changes were made between the two.
Yes, will be considered for 2.2
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32537" />
    <CreationDate amount="2003-02-21 23:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Menu text and accelerator text overlapping</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20030221

In the Edit menu, the accelerator text for "Incremental Find Previous" and "Show
Tooltip Description" are overlapping the text for the menu item.
Works OK for me in Windows 2000.  Could you attach a screen shot (use PrtSc 
rather than Alt+PrtSc to avoid dismissing the menu).

Created attachment 3660
Cut off menu items

Screenshot showing cut off menu items in both the Edit and Navigate-&gt;Go To
menu.
Created attachment 3661
Inconsistent spacing

I've also noticed that every menu seems to have a different amount of space
between the end of the longest item and the left margin of the accelerator
text.  For example, in the attached screenshot the Refactor menu has very
little space between the end of the longest item ("Convert Anonymous Class to
Nested...") and the left margin of the accelerator text, while the Run menu has
plenty of space (maybe even too much).
Steve, I thought we had recently fixed this bug.  Did we remove the fix?

I'm seeing this on Win2K on my laptop using the RC1 build.
I can demo it if needed.

The problem was in Windows.  I think we played with a numbers somewhere and 
made it better but could not get rid of it entirely.
*** Bug 33954 has been marked as a duplicate of this bug. ***
This doesn't seem to happen with RC2.  Is this bug randomly attacking builds, or
did someone fix it?

Randomly attacks.  The menu must have at least one check item.  Since we have 
no control over where Windows draws the accelerator text, it's hard to work 
around.
*** Bug 37226 has been marked as a duplicate of this bug. ***
Created attachment 8385
MenuBug snippet

Could the cut off menu items be caused by mixing menu items with and without
images (and also having check items in the menu)? The "Cut off menu items"
attachment shows just such a case.

I encountered this problem while creating a GUI for one of my own programs,
using SWT 3.0 M7. As long as all menu items had images, the accelerators were
properly aligned. When I removed the image of the longest item, its text got
cut off by the accelerator. I've attached a snippet to demonstrate this
behaviour. It also includes a possible workaround for the problem: If you have
at least one image in a menu, set an image on all menu items. This can be a
transparent image of height 1, as long as its width matches the width of the
other images.

Am I on track there or is this just a coincidence?
Fixed &gt; 20040308

Good work Stefan!  The work around was based on your observation.  When a 
check item does not have an image but it is in a menu that has images, we lie 
to Windows at the last minute (way down in the depths of MenuItem) and tell it 
to draw using the width of the widest image.  How about that!

Everyone should be on the look out for menu sizing bugs that might be caused 
by this work around.</WithStack>
    <WithOutStack>I20030221

In the Edit menu, the accelerator text for "Incremental Find Previous" and "Show
Tooltip Description" are overlapping the text for the menu item.
Works OK for me in Windows 2000.  Could you attach a screen shot (use PrtSc 
rather than Alt+PrtSc to avoid dismissing the menu).

Created attachment 3660
Cut off menu items

Screenshot showing cut off menu items in both the Edit and Navigate-&gt;Go To
menu.
Created attachment 3661
Inconsistent spacing

I've also noticed that every menu seems to have a different amount of space
between the end of the longest item and the left margin of the accelerator
text.  For example, in the attached screenshot the Refactor menu has very
little space between the end of the longest item ("Convert Anonymous Class to
Nested...") and the left margin of the accelerator text, while the Run menu has
plenty of space (maybe even too much).
Steve, I thought we had recently fixed this bug.  Did we remove the fix?

I'm seeing this on Win2K on my laptop using the RC1 build.
I can demo it if needed.

The problem was in Windows.  I think we played with a numbers somewhere and 
made it better but could not get rid of it entirely.
*** Bug 33954 has been marked as a duplicate of this bug. ***
This doesn't seem to happen with RC2.  Is this bug randomly attacking builds, or
did someone fix it?

Randomly attacks.  The menu must have at least one check item.  Since we have 
no control over where Windows draws the accelerator text, it's hard to work 
around.
*** Bug 37226 has been marked as a duplicate of this bug. ***
Created attachment 8385
MenuBug snippet

Could the cut off menu items be caused by mixing menu items with and without
images (and also having check items in the menu)? The "Cut off menu items"
attachment shows just such a case.

I encountered this problem while creating a GUI for one of my own programs,
using SWT 3.0 M7. As long as all menu items had images, the accelerators were
properly aligned. When I removed the image of the longest item, its text got
cut off by the accelerator. I've attached a snippet to demonstrate this
behaviour. It also includes a possible workaround for the problem: If you have
at least one image in a menu, set an image on all menu items. This can be a
transparent image of height 1, as long as its width matches the width of the
other images.

Am I on track there or is this just a coincidence?
Fixed &gt; 20040308

Good work Stefan!  The work around was based on your observation.  When a 
check item does not have an image but it is in a menu that has images, we lie 
to Windows at the last minute (way down in the depths of MenuItem) and tell it 
to draw using the width of the widest image.  How about that!

Everyone should be on the look out for menu sizing bugs that might be caused 
by this work around.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32538" />
    <CreationDate amount="2003-02-22 00:06:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Using Other VM, Clispe crashes on CVS</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Currently only SUN VM is supported.

Blackdown, IBM, BEA (JRockit) are not?

When I use J::Rockit 8 VM, and click CVS sync., the IDE crashes.

.V
Are you getting any information in your workspace/.metadata/.log file?
Is there any messages being printed to the console?
Are you getting any javacore dump files?

Which versions of the VMs are you running? I know that people developing 
Eclipse run at least 5 different vm/version combinations and it works ok.

No further information from originator.
Closing.</WithStack>
    <WithOutStack>Currently only SUN VM is supported.

Blackdown, IBM, BEA (JRockit) are not?

When I use J::Rockit 8 VM, and click CVS sync., the IDE crashes.

.V
Are you getting any information in your workspace/.metadata/.log file?
Is there any messages being printed to the console?
Are you getting any javacore dump files?

Which versions of the VMs are you running? I know that people developing 
Eclipse run at least 5 different vm/version combinations and it works ok.

No further information from originator.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32539" />
    <CreationDate amount="2003-02-22 00:18:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P1" />
    <bug_severity amount="enhancement" />
    <Summery>[CVS Core] Charset for CVS log is invalid</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="functiondef">
        <location start="423" end="470" />
        <code>public String readLine() throws CVSException {</code>
      </source_code>
      <source_code type="assignment">
        <location start="479" end="536" />
        <code>String result = new String(readLineBuffer, 0, index);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="543" end="635" />
        <code>public void write(String s) throws CVSException {
          write(s.getBytes(), false); 
 }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="641" end="735" />
        <code>public void writeLine(String s) throws CVSException {
          write(s.getBytes(), true);
 }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1) I'm a bit uninformed when it comes to encodings. Is ASCII always preserved</Line>
          <Line>accross encoding translations (I'll look this up but thought I'd ask in case</Line>
          <Line>someone knows for sure).</Line>
          <Line />
          <Line>2) The patch changes the encoding of outgoing messages to the server but does</Line>
          <Line>not do anything for incoming messages. Wouldn't the incoming messages need to</Line>
          <Line>be translated as well? Has anyone run with the patch or is it just a suggested</Line>
          <Line>direction?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This is a internationalization proble. I write about Japanse but some of other
language may have same problem.

When I use CVS reposity with Windows and Linux in Japanese. CVS message is sent
with EUC-JP to pserver in Linux environment. But in Windows it is
Windows-31J(MS932).This problem bring broken characters in Windows and Linux
mixed environment.

I investigated the cause and found problem is in Connection.java:


 public String readLine() throws CVSException {
...    
    String result = new String(readLineBuffer, 0, index);

....
 public void write(String s) throws CVSException {
          write(s.getBytes(), false); 
 }
....
 public void writeLine(String s) throws CVSException {
          write(s.getBytes(), true);
 } 

Above code doesn't specify charset and use default charset. I want to set
charset by plugin.properties here. It will resolve charset conflict between
Windows and Linux.

Please fix this problem.

regards,

Takashi Okamoto
That is correct, we use the platform character set (as does Eclipse in general).

We'd need to consider the ramifications of using something different.  Michael, 
comments?
Created attachment 3932
set charset in preferences.ini

I attached my patch to set charset at preferences.ini.I can't help for	GUI but
I would like to set charset in cvs dialog for each repositoly.
This sounds interesting and is worth investigating for 2.2
I'm adding Kai to the CC list because it is my understanding that he will be 
doing encoding work in 2.2 and this may be of interest to him as well.
I've read the cvs protocol spec and it says that string sent to the server can 
be any byte sequence and doesn't specify encoding restrictions. As long as all 
clients agree on encoding, then we should honour the platform encoding for 
comments.

Raising priority since this is a encoding incompatibility.
*** Bug 39321 has been marked as a duplicate of this bug. ***
Created attachment 8719
patch to configuration encoding with CVS UI.

&gt; I've read the cvs protocol spec and it says that string sent to
&gt; the server can be any byte sequence and doesn't specify
&gt; encoding restrictions.

In the fact, Japanese (and maybe other countries users) have conflict problem 
with encoding between sevral platform. I strongly recommend fixing this
problem.

This patch add encoding configuring function for Eclipse 3.0 latest
snapshot(2004-03-18) CVS core. Please use this patch with next patch for CVS
UI.

regards,

Takashi Okamoto
Created attachment 8720
patch to configure encoding with CVS UI (2)

Please apply this patch with previous patch.
Thanks for the patched - this is a P1 bug for us to resolve in M9. 
I've had a look at the patch and have the following questions and concerns:

1) I'm a bit uninformed when it comes to encodings. Is ASCII always preserved 
accross encoding translations (I'll look this up but thought I'd ask in case 
someone knows for sure).

2) The patch changes the encoding of outgoing messages to the server but does 
not do anything for incoming messages. Wouldn't the incoming messages need to 
be translated as well? Has anyone run with the patch or is it just a suggested 
direction?


Hi,

 |1) I'm a bit uninformed when it comes to encodings. Is ASCII always preserved 
 |accross encoding translations (I'll look this up but thought I'd ask in case 
 |someone knows for sure).

ASCII characters will be always preserved. 
I, however, have another concern in that patch.  It seems that patch trys to 
translate every date from/to CVS server, but how about the case for binary 
files?  I mean files added with '-kb' option.
I think encoding translations should be done only for non-binary files and 
commit logs.

 |2) The patch changes the encoding of outgoing messages to the server but does 
 |not do anything for incoming messages. Wouldn't the incoming messages need to 
 |be translated as well? Has anyone run with the patch or is it just a   
 |suggested direction?

It seems to me that patch has also translated incoming messages in readLine 
method of org.eclipse.team.internal.ccvs.core.connection.Connection class.

Sorry, I missed the read because I just did a visual inspection of the patch. 
The patch does not translate files at all since files are not transfered using 
the methods on Connection but are instead transfered directly to the streams. 
The encoding must be done for all other communications as they can contain 
file names or folder names which may be encoded. As long as ASCII is 
preserved, we should be OK.

As an aside, the expectation for situations like this is that files will 
always be binary since the CVS spec says that non-binary files are ASCII. 
There is a CVS preferences for making all new files binary which is meant to 
be used in these situations. Therefore, we do not plan on doing any encoding 
translations on files.
Hi,

 |The patch does not translate files at all since files are not transfered 
using 
 |the methods on Connection but are instead transfered directly to the streams. 
 |The encoding must be done for all other communications as they can contain 
 |file names or folder names which may be encoded. As long as ASCII is 
 |preserved, we should be OK.

That sounds good!  We will wait for that patch will be applied to CVS 
repository.
Thank you for taking your time for this issue.

I have released the Core changes to HEAD (with some modifications) and the UI 
changes to branch branch_20040329_CVSEncodingTranslation. I didn't release the 
UI changes to HEAD because it just uses a text field for the encoding. The 
Editors preference page (IDEEditorsPreferencePage) has a widget that allows 
selection of relevant encodings and we will want to do something similar for 
consistency. Unfortunately it is not reusable. We could either need to 
duplicate the code or generalize it and supply a patch to UI.
I have released the UI changes for this to HEAD. The encoding can only be 
changed from the properties dialog. I didn't feel that it should be in the new 
location wizard since it would be confusing for most users. I am leaving this 
bug open since I have not had a chance to thouroughly test the encoding 
support. Feel free to give it a try.
Encoding support is in build I20040406 and beyond. I have tested that the 
encoding support does not have any negative effects when the encoding isn't 
set. However, I haven't gone through the process to set up a client and server 
that have different but compatible encodings. Since many of you who are 
listeneing to this bug work daily in this setup, I am hoping that some of you 
will volunteer to test the encoding support for this setup. 

Any volunteers?
  |Any volunteers?

I tried this new functionality and it worked!
Thank for your efforts.

FYI, here are what I did and what I got.
I have a CVS repository on GNU/Linux(Redhat 9) and its files
and commit logs are in 'EUC-JP' encoding.
I tried that repository by I20040407(GTK version) on GNU/Linux and
I could edit files and brows commit logs without any problems,
because Eclipse on GNU/Linux will use 'EUC-JP' by the default.

Next, I also tried that repository location by I20040407 on Win2k and
I could not browse commit logs correctly, because Eclipse on Windows
will use the encoding 'MS932' by the default.

So, I visited at the property page for that repository location and
go to the page 'Server Encoding'.  On this page, I putted 'EUC_JP' for the
encoding setting, and commit logs were displayed correctly!
Now, commit logs from Eclipse on Widonws can be shown on Eclipse on GNU/Linux.


*** Bug 63188 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>This is a internationalization proble. I write about Japanse but some of other
language may have same problem.

When I use CVS reposity with Windows and Linux in Japanese. CVS message is sent
with EUC-JP to pserver in Linux environment. But in Windows it is
Windows-31J(MS932).This problem bring broken characters in Windows and Linux
mixed environment.

I investigated the cause and found problem is in Connection.java:


 public String readLine() throws CVSException {
...    
    String result = new String(readLineBuffer, 0, index);

....
 public void write(String s) throws CVSException {
          write(s.getBytes(), false); 
 }
....
 public void writeLine(String s) throws CVSException {
          write(s.getBytes(), true);
 } 

Above code doesn't specify charset and use default charset. I want to set
charset by plugin.properties here. It will resolve charset conflict between
Windows and Linux.

Please fix this problem.

regards,

Takashi Okamoto
That is correct, we use the platform character set (as does Eclipse in general).

We'd need to consider the ramifications of using something different.  Michael, 
comments?
Created attachment 3932
set charset in preferences.ini

I attached my patch to set charset at preferences.ini.I can't help for	GUI but
I would like to set charset in cvs dialog for each repositoly.
This sounds interesting and is worth investigating for 2.2
I'm adding Kai to the CC list because it is my understanding that he will be 
doing encoding work in 2.2 and this may be of interest to him as well.
I've read the cvs protocol spec and it says that string sent to the server can 
be any byte sequence and doesn't specify encoding restrictions. As long as all 
clients agree on encoding, then we should honour the platform encoding for 
comments.

Raising priority since this is a encoding incompatibility.
*** Bug 39321 has been marked as a duplicate of this bug. ***
Created attachment 8719
patch to configuration encoding with CVS UI.

&gt; I've read the cvs protocol spec and it says that string sent to
&gt; the server can be any byte sequence and doesn't specify
&gt; encoding restrictions.

In the fact, Japanese (and maybe other countries users) have conflict problem 
with encoding between sevral platform. I strongly recommend fixing this
problem.

This patch add encoding configuring function for Eclipse 3.0 latest
snapshot(2004-03-18) CVS core. Please use this patch with next patch for CVS
UI.

regards,

Takashi Okamoto
Created attachment 8720
patch to configure encoding with CVS UI (2)

Please apply this patch with previous patch.
Thanks for the patched - this is a P1 bug for us to resolve in M9. 
I've had a look at the patch and have the following questions and concerns:

1) I'm a bit uninformed when it comes to encodings. Is ASCII always preserved 
accross encoding translations (I'll look this up but thought I'd ask in case 
someone knows for sure).

2) The patch changes the encoding of outgoing messages to the server but does 
not do anything for incoming messages. Wouldn't the incoming messages need to 
be translated as well? Has anyone run with the patch or is it just a suggested 
direction?


Hi,

 |1) I'm a bit uninformed when it comes to encodings. Is ASCII always preserved 
 |accross encoding translations (I'll look this up but thought I'd ask in case 
 |someone knows for sure).

ASCII characters will be always preserved. 
I, however, have another concern in that patch.  It seems that patch trys to 
translate every date from/to CVS server, but how about the case for binary 
files?  I mean files added with '-kb' option.
I think encoding translations should be done only for non-binary files and 
commit logs.

 |2) The patch changes the encoding of outgoing messages to the server but does 
 |not do anything for incoming messages. Wouldn't the incoming messages need to 
 |be translated as well? Has anyone run with the patch or is it just a   
 |suggested direction?

It seems to me that patch has also translated incoming messages in readLine 
method of org.eclipse.team.internal.ccvs.core.connection.Connection class.

Sorry, I missed the read because I just did a visual inspection of the patch. 
The patch does not translate files at all since files are not transfered using 
the methods on Connection but are instead transfered directly to the streams. 
The encoding must be done for all other communications as they can contain 
file names or folder names which may be encoded. As long as ASCII is 
preserved, we should be OK.

As an aside, the expectation for situations like this is that files will 
always be binary since the CVS spec says that non-binary files are ASCII. 
There is a CVS preferences for making all new files binary which is meant to 
be used in these situations. Therefore, we do not plan on doing any encoding 
translations on files.
Hi,

 |The patch does not translate files at all since files are not transfered 
using 
 |the methods on Connection but are instead transfered directly to the streams. 
 |The encoding must be done for all other communications as they can contain 
 |file names or folder names which may be encoded. As long as ASCII is 
 |preserved, we should be OK.

That sounds good!  We will wait for that patch will be applied to CVS 
repository.
Thank you for taking your time for this issue.

I have released the Core changes to HEAD (with some modifications) and the UI 
changes to branch branch_20040329_CVSEncodingTranslation. I didn't release the 
UI changes to HEAD because it just uses a text field for the encoding. The 
Editors preference page (IDEEditorsPreferencePage) has a widget that allows 
selection of relevant encodings and we will want to do something similar for 
consistency. Unfortunately it is not reusable. We could either need to 
duplicate the code or generalize it and supply a patch to UI.
I have released the UI changes for this to HEAD. The encoding can only be 
changed from the properties dialog. I didn't feel that it should be in the new 
location wizard since it would be confusing for most users. I am leaving this 
bug open since I have not had a chance to thouroughly test the encoding 
support. Feel free to give it a try.
Encoding support is in build I20040406 and beyond. I have tested that the 
encoding support does not have any negative effects when the encoding isn't 
set. However, I haven't gone through the process to set up a client and server 
that have different but compatible encodings. Since many of you who are 
listeneing to this bug work daily in this setup, I am hoping that some of you 
will volunteer to test the encoding support for this setup. 

Any volunteers?
  |Any volunteers?

I tried this new functionality and it worked!
Thank for your efforts.

FYI, here are what I did and what I got.
I have a CVS repository on GNU/Linux(Redhat 9) and its files
and commit logs are in 'EUC-JP' encoding.
I tried that repository by I20040407(GTK version) on GNU/Linux and
I could edit files and brows commit logs without any problems,
because Eclipse on GNU/Linux will use 'EUC-JP' by the default.

Next, I also tried that repository location by I20040407 on Win2k and
I could not browse commit logs correctly, because Eclipse on Windows
will use the encoding 'MS932' by the default.

So, I visited at the property page for that repository location and
go to the page 'Server Encoding'.  On this page, I putted 'EUC_JP' for the
encoding setting, and commit logs were displayed correctly!
Now, commit logs from Eclipse on Widonws can be shown on Eclipse on GNU/Linux.


*** Bug 63188 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32540" />
    <CreationDate amount="2003-02-22 00:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>OK button does not always work in search scope window</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In RC1 build, using Mozilla 1.0.1, OK button in search scope window does not 
always work.  Clicking it more times does not help.  It is required to choose 
some other element or move a window, than clicking OK usually works.  Similar 
problems are present in New Search List window.
It seems that soemething else is holding the focus.  And does not easily 
release it.

I do not have a clear scenario that will always reproduce this behavior, but it 
happened mutliple times.
The problem exists on Mozilla &lt;= 1.0.1.  Mozilla 121 does not experience the 
problem.
I can always reproduce it.  The trick is to click the OK button on its left 
side (to the left of the "OK" letters).
The only button affected is the OK button, other buttons are fine.  I will look 
more for what is different about this button.
Fixed.
This is some Mozilla but, but I have removed allign="right" attribute from the 
inner table containing OK and Cancel buttons.  This fixes the problem.  
Alignment is still correct since the outer table is already aligned to the 
right.</WithStack>
    <WithOutStack>In RC1 build, using Mozilla 1.0.1, OK button in search scope window does not 
always work.  Clicking it more times does not help.  It is required to choose 
some other element or move a window, than clicking OK usually works.  Similar 
problems are present in New Search List window.
It seems that soemething else is holding the focus.  And does not easily 
release it.

I do not have a clear scenario that will always reproduce this behavior, but it 
happened mutliple times.
The problem exists on Mozilla &lt;= 1.0.1.  Mozilla 121 does not experience the 
problem.
I can always reproduce it.  The trick is to click the OK button on its left 
side (to the left of the "OK" letters).
The only button affected is the OK button, other buttons are fine.  I will look 
more for what is different about this button.
Fixed.
This is some Mozilla but, but I have removed allign="right" attribute from the 
inner table containing OK and Cancel buttons.  This fixes the problem.  
Alignment is still correct since the outer table is already aligned to the 
right.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32541" />
    <CreationDate amount="2003-02-22 01:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Add import doesn't work when full type is not selected</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When editing code, a right-click on a type followed by selecting 'Source/Add 
Import' does add the import unless the whole type is selected.
fe. 
public void addDocument(Document doc)
and Document would not yet be amongst the imports.

A 'right-click, Source/Add Import' does not do the import.
Control-Shift-M does work without selecting the whole type.
Works for me in RC1. BTW, Ctrl+Shift+M is a short-cut for add import. It triggers the 
same action. 
I've tried it in 2.1.0 beta and it's the same behaviour.
Problem : a right-click does not position the cursor at the correct place.
The menu is displayed but the cursor is still at its previous place.
Any import only relates to the type it is currently positioned on, NOT where 
the right-click happened (unless both are the same).
Are you saying that you expect when right clicking on something that doesn't 
have the "cursor" we should treat the element you right clicked on as the 
element to process.

No text editor is changing the position of the caret on right click. So 
Eclipse is consistent here.

Closing</WithStack>
    <WithOutStack>When editing code, a right-click on a type followed by selecting 'Source/Add 
Import' does add the import unless the whole type is selected.
fe. 
public void addDocument(Document doc)
and Document would not yet be amongst the imports.

A 'right-click, Source/Add Import' does not do the import.
Control-Shift-M does work without selecting the whole type.
Works for me in RC1. BTW, Ctrl+Shift+M is a short-cut for add import. It triggers the 
same action. 
I've tried it in 2.1.0 beta and it's the same behaviour.
Problem : a right-click does not position the cursor at the correct place.
The menu is displayed but the cursor is still at its previous place.
Any import only relates to the type it is currently positioned on, NOT where 
the right-click happened (unless both are the same).
Are you saying that you expect when right clicking on something that doesn't 
have the "cursor" we should treat the element you right clicked on as the 
element to process.

No text editor is changing the position of the caret on right click. So 
Eclipse is consistent here.

Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32542" />
    <CreationDate amount="2003-02-22 01:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>Code Assist should allow for auto-brace-insert</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Like Borland JBuilder, when doing code editing using Eclipse, it might be very 
usefull if 
Window &gt; Preferences &gt; Java &gt; Editor &gt; Code Assist &gt; 

would feature the option where the matching brace is automatically added when 
typing '{'.
Enhanced completion when typing if,switch, for, do, .... might even be 
considered.
Part one:
Window&gt;Preferences&gt;Java&gt;Editor&gt;Typing


Works for me in 2.1.0 beta.
My version at the time of reporting was 2.0.x</WithStack>
    <WithOutStack>Like Borland JBuilder, when doing code editing using Eclipse, it might be very 
usefull if 
Window &gt; Preferences &gt; Java &gt; Editor &gt; Code Assist &gt; 

would feature the option where the matching brace is automatically added when 
typing '{'.
Enhanced completion when typing if,switch, for, do, .... might even be 
considered.
Part one:
Window&gt;Preferences&gt;Java&gt;Editor&gt;Typing


Works for me in 2.1.0 beta.
My version at the time of reporting was 2.0.x</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32543" />
    <CreationDate amount="2003-02-22 02:00:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Right-click 'New' does not feature 'Class' in the Navigator</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>When browing the project folders using the Navigator, right-click 'New' on a 
code folder does not feature 'Class' as a possibility.
I believe this is intentional. The JDT plug-ins contribute the New -&gt; Class 
action to the Packages Explorer.

In the Navigator you can perform New -&gt; Other and choose Java Class from there.</WithStack>
    <WithOutStack>When browing the project folders using the Navigator, right-click 'New' on a 
code folder does not feature 'Class' as a possibility.
I believe this is intentional. The JDT plug-ins contribute the New -&gt; Class 
action to the Packages Explorer.

In the Navigator you can perform New -&gt; Other and choose Java Class from there.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32544" />
    <CreationDate amount="2003-02-22 02:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>'Add Import' should allow for class and package imports</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="import">
        <location start="215" end="232" />
        <code>import java.io.*;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Currently, adding a import only adds the selected type to the list of imports.
The options should allow for automatic .* imports as well.

fe.
File f = ...

if File is unknown, adding the import should allow to add
import java.io.*;

This might be asked once and toggable through the options.
This can be customized via Preferences-&gt;Java-&gt;Organize Import. Set Number of 
imports needed .... to 1.</WithStack>
    <WithOutStack>Currently, adding a import only adds the selected type to the list of imports.
The options should allow for automatic .* imports as well.

fe.
File f = ...

if File is unknown, adding the import should allow to add
import java.io.*;

This might be asked once and toggable through the options.
This can be customized via Preferences-&gt;Java-&gt;Organize Import. Set Number of 
imports needed .... to 1.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32545" />
    <CreationDate amount="2003-02-22 03:07:00 -0500" />
    <DupId amount="31398" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Cannot override a method that's accessible in the superclass, but inaccessible in the super-superclass</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>2.1M5

I'll describe the concrete problem:

Sun's Wireless Toolkit 1.0.4 defines class javax.microedition.lcdui.Displayable
which has method paint defined as abstract package private. In the same package,
there is also class Canvas, where paint is overriden as protected abstract.

Under 2.0, I could subclass Canvas and define the required paint method. Under
2.1, this is marked as syntax error because I'm trying to override a method that
was marked as package private in Displayable (but which my class, not being
abstract, has to define).

I'm not a Java language expert, but in my reading of the language specification
(2nd ed., section 8.4.6), I only see the immediate superclass as being important
in determining access scope and no mention of superclass's superclass. This
would make the new behaviour incorrect, not to mention that it breaks a major
Java toolkit.
In M5, we had a regression causing invalid diagnosis of missing abstract method 
implementations. This got resolved in subsequent builds, in particular our 
latest integration build should behave properly.

Closing as duplicate, please reopen if your steps still demonstrate an issue, 
and then please provide steps to reproduce.

*** This bug has been marked as a duplicate of 31398 ***</WithStack>
    <WithOutStack>2.1M5

I'll describe the concrete problem:

Sun's Wireless Toolkit 1.0.4 defines class javax.microedition.lcdui.Displayable
which has method paint defined as abstract package private. In the same package,
there is also class Canvas, where paint is overriden as protected abstract.

Under 2.0, I could subclass Canvas and define the required paint method. Under
2.1, this is marked as syntax error because I'm trying to override a method that
was marked as package private in Displayable (but which my class, not being
abstract, has to define).

I'm not a Java language expert, but in my reading of the language specification
(2nd ed., section 8.4.6), I only see the immediate superclass as being important
in determining access scope and no mention of superclass's superclass. This
would make the new behaviour incorrect, not to mention that it breaks a major
Java toolkit.
In M5, we had a regression causing invalid diagnosis of missing abstract method 
implementations. This got resolved in subsequent builds, in particular our 
latest integration build should behave properly.

Closing as duplicate, please reopen if your steps still demonstrate an issue, 
and then please provide steps to reproduce.

*** This bug has been marked as a duplicate of 31398 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32546" />
    <CreationDate amount="2003-02-22 03:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>scope Find/Replace too limited</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>The F/R as implemented in 2.0.2 starts searching/replacing from the current 
cursor position. This is very unusual compared to other software but not 
necessary unlogical or impractical but definitely too limited.
Most F/R's start searching from the top of the document.
The F/R dialog should at least implement the possibility to start from the top 
or current cursorposition.
A dialog might be shown asking to restart from top when the bottom was reached.
Not sure if Find/Replace is UI or Search. Moving to Search for comment/re-
assignment.
Moving to Platform Text.

&gt;This is very unusual compared to other software
To what tools to you refer? Which platform? All the IDEs, editors, browsers and
mail tools I use show exactly the Find/Replace behavior that Eclipse does.

Created attachment 3829
IDE 2.1.0 screenshot

Failing Find/Replace screenshot
I was able to reproduce the 'bug'.
I downloaded and installed 2.1.0 beta.
I imported iText source code.
Double-clicked a source file.
Use cursor-keys or mouse to position myself around line 15.
Use menu and control-f to bring up find/replace dialog.
Entered the the Java file name. (as is to be found at the top of every source 
file in this project fe. :  * $Id: Document.java).
Find is not able to find my string.
MS Word, UltraEdit and other tools start their search at the beginning if no 
match can be found below the current cursor position.
Tried this with several source files : same behaviour.
Check "Wrap Search" in the Find/Replace dialog</WithStack>
    <WithOutStack>The F/R as implemented in 2.0.2 starts searching/replacing from the current 
cursor position. This is very unusual compared to other software but not 
necessary unlogical or impractical but definitely too limited.
Most F/R's start searching from the top of the document.
The F/R dialog should at least implement the possibility to start from the top 
or current cursorposition.
A dialog might be shown asking to restart from top when the bottom was reached.
Not sure if Find/Replace is UI or Search. Moving to Search for comment/re-
assignment.
Moving to Platform Text.

&gt;This is very unusual compared to other software
To what tools to you refer? Which platform? All the IDEs, editors, browsers and
mail tools I use show exactly the Find/Replace behavior that Eclipse does.

Created attachment 3829
IDE 2.1.0 screenshot

Failing Find/Replace screenshot
I was able to reproduce the 'bug'.
I downloaded and installed 2.1.0 beta.
I imported iText source code.
Double-clicked a source file.
Use cursor-keys or mouse to position myself around line 15.
Use menu and control-f to bring up find/replace dialog.
Entered the the Java file name. (as is to be found at the top of every source 
file in this project fe. :  * $Id: Document.java).
Find is not able to find my string.
MS Word, UltraEdit and other tools start their search at the beginning if no 
match can be found below the current cursor position.
Tried this with several source files : same behaviour.
Check "Wrap Search" in the Find/Replace dialog</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32547" />
    <CreationDate amount="2003-02-22 04:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="major" />
    <Summery>[Editor Mgmt] NullPointerException when navigating editor history with non persistable input</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340333697">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.NavigationHistoryAction.getMenu(NavigationHistoryAction.java:83)</Frame>
          <Frame depth="1">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:430)</Frame>
          <Frame depth="2">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:398)</Frame>
          <Frame depth="3">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:392)</Frame>
          <Frame depth="4">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1289)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.Workbench.run(Workbench.java:1272)</Frame>
          <Frame depth="11">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="12">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="13">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="15">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="16">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Two different kind of editors, both inputs non persistable.
Navigate between the two and then close both.
Then press navigate back at the arrow to see the list, the #1.
Tried to debug it with the result,
that if the editors are closed the history list looses that entries (ok, they 
are non persitable) but the active entry remains the same.


#1
java.lang.NullPointerException
	at org.eclipse.ui.internal.NavigationHistoryAction.getMenu
(NavigationHistoryAction.java:83)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:430)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:398)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:392)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1692)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1410)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1289)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1272)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
Released fix.</WithStack>
    <WithOutStack>Two different kind of editors, both inputs non persistable.
Navigate between the two and then close both.
Then press navigate back at the arrow to see the list, the #1.
Tried to debug it with the result,
that if the editors are closed the history list looses that entries (ok, they 
are non persitable) but the active entry remains the same.


#1

Released fix.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32548" />
    <CreationDate amount="2003-02-22 04:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Perspectives] Cannot find 'goto resource' action</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build 20030221

In navigate menu of Java perspective, only 'goto type/package' is enabled. 
Where did the goto resource go ?
JDT/UI activates the action set in its perspective factories.

Nick, additional comments. 
If you go to the perspective customization dialog, is the Resource Navigation 
action set checked (under Other)?  If not, does Reset Perspective bring it in?
Is it possible you've had this perspective around for months?

Could not reproduce. Please reopen if you have more information.</WithStack>
    <WithOutStack>Build 20030221

In navigate menu of Java perspective, only 'goto type/package' is enabled. 
Where did the goto resource go ?
JDT/UI activates the action set in its perspective factories.

Nick, additional comments. 
If you go to the perspective customization dialog, is the Resource Navigation 
action set checked (under Other)?  If not, does Reset Perspective bring it in?
Is it possible you've had this perspective around for months?

Could not reproduce. Please reopen if you have more information.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32549" />
    <CreationDate amount="2003-02-22 06:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Eclipse doesn't start, splash screen must be killed manually</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Unfortunately I've few clues.
Fresh install of Eclipse 2M5, a M4 is installed at another place.
Sun SDK 1.4.1_01.
Windows 2000 SP3.

eclipse.exe -vm "c:\j2sdk1.4.1\bin\java.exe" -debug -console

The second time a console window is opened, a stack trace appears, but the
console closes too fast for me to read the error. No .log is created in .metadata...
Sorry, after rebooting, everything works fine. I don't understand what can have
caused that. Still, the .log could probably be created sooner, or plan a
mecanism to redirect the forked javaw outputs to somewhere usable when the first
mecanism (.log) fails.</WithStack>
    <WithOutStack>Unfortunately I've few clues.
Fresh install of Eclipse 2M5, a M4 is installed at another place.
Sun SDK 1.4.1_01.
Windows 2000 SP3.

eclipse.exe -vm "c:\j2sdk1.4.1\bin\java.exe" -debug -console

The second time a console window is opened, a stack trace appears, but the
console closes too fast for me to read the error. No .log is created in .metadata...
Sorry, after rebooting, everything works fine. I don't understand what can have
caused that. Still, the .log could probably be created sooner, or plan a
mecanism to redirect the forked javaw outputs to somewhere usable when the first
mecanism (.log) fails.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32550" />
    <CreationDate amount="2003-02-22 06:19:00 -0500" />
    <DupId amount="27980" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Editor Mgmt] API for adding a file extension to an already existing editor.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="326" end="398" />
        <code>public removeExtension(IEditorDescriptor editor, String extension);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hello

currently in Eclipse 2.1 M5, there is no way to add or remove a file extension 
mapping to a already defined editor specified by a third party plugin. So, I 
propose you to add the following interface's methods.

public interface IEditorRegistry {
     public addExtension(IEditorDescriptor editor, String extension); 
     public removeExtension(IEditorDescriptor editor, String extension);
}

Regards


*** This bug has been marked as a duplicate of 27980 ***</WithStack>
    <WithOutStack>Hello

currently in Eclipse 2.1 M5, there is no way to add or remove a file extension 
mapping to a already defined editor specified by a third party plugin. So, I 
propose you to add the following interface's methods.

public interface IEditorRegistry {
     public addExtension(IEditorDescriptor editor, String extension); 
     public removeExtension(IEditorDescriptor editor, String extension);
}

Regards


*** This bug has been marked as a duplicate of 27980 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32551" />
    <CreationDate amount="2003-02-22 09:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>"Run Ant" causes ClassCastException with filesets</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I use the latest xdoclet (1.2 b2) task definitions in my build.xml. In M5 or 
newer (currently 200302211557), selecting the build.xml, pressing right mouse 
button and selecting "Run Ant..." causes the 
text "file:d:/project/.../build.xml:17:java.lang.ClassCastException" in the 
opening Window (under the text "Modify attributes and launch."). No stack trace 
appears to be in the .log file.

In versions earlier to M5, the very same build file worked ok. Also, running 
the same build file in the newest build by using "Run-&gt;external tools" works ok.

The line number (17) in the exception message refers to the ejbdoclet task 
definition. My build.xml :


&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;project name="Webdoc" default="build" basedir=".."&gt;

    &lt;path id="compile.classpath"&gt;
      &lt;fileset dir="lib"&gt;
        &lt;include name="**/*.jar"/&gt;
        &lt;include name="**/*.zip"/&gt;
      &lt;/fileset&gt;
      &lt;pathelement location="devel/classes" /&gt; &lt;!-- must be here since ejbc 
needs it 
                                                    for seeing the shares 
classes --&gt;
    &lt;/path&gt;

    &lt;taskdef
        name="ejbdoclet"
        classname="xdoclet.modules.ejb.EjbDocletTask"
        classpathref="compile.classpath"
        /&gt;
    &lt;taskdef
        name="webdoclet"
        classname="xdoclet.modules.web.WebDocletTask"
        classpathref="compile.classpath"
        /&gt;

    &lt;!--
      ==================================================
       Initialization target
      ==================================================
     --&gt;
  
    &lt;target name="init"&gt;
      &lt;tstamp&gt;
        &lt;format property="TODAY" pattern="d-MM-yy"/&gt;
      &lt;/tstamp&gt;

      &lt;mkdir dir="javadoc"/&gt;
      &lt;mkdir dir="devel"/&gt;
      &lt;mkdir dir="devel/classes"/&gt;
      &lt;mkdir dir="devel/ejb_src"/&gt;
      &lt;mkdir dir="devel/test"/&gt;
      &lt;mkdir dir="devel/test/classes"/&gt;
    &lt;/target&gt;

    &lt;!--
      ==================================================
       Usage target
      ==================================================
     --&gt;

    &lt;target name="usage"&gt;
      &lt;echo message="Try ant -projecthelp"/&gt;
    &lt;/target&gt;


    &lt;!--
      ==================================================
       Cleans up development and deployment directories
      ==================================================
     --&gt;

    &lt;target name="clean" 
            description="Deletes the devel directory"&gt;
      &lt;delete dir="devel/" includeEmptyDirs="true"/&gt;      
    &lt;/target&gt;
    &lt;target name="build"
            depends="init"
    /&gt;

&lt;/project&gt;



I'm using Ant 1.5.1, W2K. Eclipse starts with a 1.4.1_01 jvm. and JAVA_HOME 
correctly refers to the jdk directory. Also, writing java -version in the 
command prompt shows the correct jdk version.
Sorry if I asked this already...but was there anything in your .log file?
No, there's nothing in the .log file. I also tried to start Eclipse with "java" 
command instead of "javaw" -&gt; nothing is printed to the console.
There is a bug in InternalProject with the lazy loading of Ant data types.
*** Bug 32804 has been marked as a duplicate of this bug. ***
How do you know the bugs are the same? How are filesets related to this bug? I 
have no problems with my build.xml:s with no xdoclet tasks!
I have had no problem running other xdoclet tasks (both 1.2 and 1.1.2).
As well I have debugged the problem using both sample build files and the root 
of the ClassCastException is the same.

When you use Run Ant... we attempt to make parsing of the Ant file quick to 
determine the targets.  There is a bug in our implementation of lazily loading 
the classes for data types.  A definition of a fileset outside of a target will 
expose the problem.
*** Bug 33055 has been marked as a duplicate of this bug. ***
*** Bug 32952 has been marked as a duplicate of this bug. ***
This problem will occur in the Ant View as well...same parsing of targets.
*** Bug 33375 has been marked as a duplicate of this bug. ***
Ok, I see you guys are onto this, and nailed it's position already.
I did search the database on 'ClassCastException' for the ant module which
returned 'zaaro boogs'.
Success swatting this one down.
Let me know if I can be of help on testing or anything.
Test added to ant core tests (See TargetTests.testGetTargetsWithDataTypes).
Fixed for tomorrow's integration build.
Please verify the changes to InternalProject (Jared).
This is a pretty big problem for me, but I am not comfortable running a 
nightly build for my complete eclipse platform.  Is there anyway to only 
update this component/plugin or is that generally not a good idea?

(Sorry to be slightly off topic)
Scott
Guys, I was very lucky and found a work-around for the EJBDoclet problems. Just 
move the task definitions to the "init"-target. Worked for me :). No need to 
wait for the new integration build anymore!
Posti is correct...any definition etc that you move within a target will be 
fine. Our bug was with datatypes referenced / defined outside of targets.

Note that a new integration build is slated to come out this morning.
Verified code.</WithStack>
    <WithOutStack>I use the latest xdoclet (1.2 b2) task definitions in my build.xml. In M5 or 
newer (currently 200302211557), selecting the build.xml, pressing right mouse 
button and selecting "Run Ant..." causes the 
text "file:d:/project/.../build.xml:17:java.lang.ClassCastException" in the 
opening Window (under the text "Modify attributes and launch."). No stack trace 
appears to be in the .log file.

In versions earlier to M5, the very same build file worked ok. Also, running 
the same build file in the newest build by using "Run-&gt;external tools" works ok.

The line number (17) in the exception message refers to the ejbdoclet task 
definition. My build.xml :


&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;project name="Webdoc" default="build" basedir=".."&gt;

    &lt;path id="compile.classpath"&gt;
      &lt;fileset dir="lib"&gt;
        &lt;include name="**/*.jar"/&gt;
        &lt;include name="**/*.zip"/&gt;
      &lt;/fileset&gt;
      &lt;pathelement location="devel/classes" /&gt; &lt;!-- must be here since ejbc 
needs it 
                                                    for seeing the shares 
classes --&gt;
    &lt;/path&gt;

    &lt;taskdef
        name="ejbdoclet"
        classname="xdoclet.modules.ejb.EjbDocletTask"
        classpathref="compile.classpath"
        /&gt;
    &lt;taskdef
        name="webdoclet"
        classname="xdoclet.modules.web.WebDocletTask"
        classpathref="compile.classpath"
        /&gt;

    &lt;!--
      ==================================================
       Initialization target
      ==================================================
     --&gt;
  
    &lt;target name="init"&gt;
      &lt;tstamp&gt;
        &lt;format property="TODAY" pattern="d-MM-yy"/&gt;
      &lt;/tstamp&gt;

      &lt;mkdir dir="javadoc"/&gt;
      &lt;mkdir dir="devel"/&gt;
      &lt;mkdir dir="devel/classes"/&gt;
      &lt;mkdir dir="devel/ejb_src"/&gt;
      &lt;mkdir dir="devel/test"/&gt;
      &lt;mkdir dir="devel/test/classes"/&gt;
    &lt;/target&gt;

    &lt;!--
      ==================================================
       Usage target
      ==================================================
     --&gt;

    &lt;target name="usage"&gt;
      &lt;echo message="Try ant -projecthelp"/&gt;
    &lt;/target&gt;


    &lt;!--
      ==================================================
       Cleans up development and deployment directories
      ==================================================
     --&gt;

    &lt;target name="clean" 
            description="Deletes the devel directory"&gt;
      &lt;delete dir="devel/" includeEmptyDirs="true"/&gt;      
    &lt;/target&gt;
    &lt;target name="build"
            depends="init"
    /&gt;

&lt;/project&gt;



I'm using Ant 1.5.1, W2K. Eclipse starts with a 1.4.1_01 jvm. and JAVA_HOME 
correctly refers to the jdk directory. Also, writing java -version in the 
command prompt shows the correct jdk version.
Sorry if I asked this already...but was there anything in your .log file?
No, there's nothing in the .log file. I also tried to start Eclipse with "java" 
command instead of "javaw" -&gt; nothing is printed to the console.
There is a bug in InternalProject with the lazy loading of Ant data types.
*** Bug 32804 has been marked as a duplicate of this bug. ***
How do you know the bugs are the same? How are filesets related to this bug? I 
have no problems with my build.xml:s with no xdoclet tasks!
I have had no problem running other xdoclet tasks (both 1.2 and 1.1.2).
As well I have debugged the problem using both sample build files and the root 
of the ClassCastException is the same.

When you use Run Ant... we attempt to make parsing of the Ant file quick to 
determine the targets.  There is a bug in our implementation of lazily loading 
the classes for data types.  A definition of a fileset outside of a target will 
expose the problem.
*** Bug 33055 has been marked as a duplicate of this bug. ***
*** Bug 32952 has been marked as a duplicate of this bug. ***
This problem will occur in the Ant View as well...same parsing of targets.
*** Bug 33375 has been marked as a duplicate of this bug. ***
Ok, I see you guys are onto this, and nailed it's position already.
I did search the database on 'ClassCastException' for the ant module which
returned 'zaaro boogs'.
Success swatting this one down.
Let me know if I can be of help on testing or anything.
Test added to ant core tests (See TargetTests.testGetTargetsWithDataTypes).
Fixed for tomorrow's integration build.
Please verify the changes to InternalProject (Jared).
This is a pretty big problem for me, but I am not comfortable running a 
nightly build for my complete eclipse platform.  Is there anyway to only 
update this component/plugin or is that generally not a good idea?

(Sorry to be slightly off topic)
Scott
Guys, I was very lucky and found a work-around for the EJBDoclet problems. Just 
move the task definitions to the "init"-target. Worked for me :). No need to 
wait for the new integration build anymore!
Posti is correct...any definition etc that you move within a target will be 
fine. Our bug was with datatypes referenced / defined outside of targets.

Note that a new integration build is slated to come out this morning.
Verified code.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32552" />
    <CreationDate amount="2003-02-22 10:21:00 -0500" />
    <DupId amount="32408" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eclipse application icon has disappeared in I20030220 [regression]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="DUPLICATE" />
    <WithStack>2.1M5 used to have the eclipse icon as the application. Now it has the standard
Mac application icon (paper, pencil and ruler).
Created attachment 3648
Screenshot of application icon (or lack thereof)


*** This bug has been marked as a duplicate of 32408 ***</WithStack>
    <WithOutStack>2.1M5 used to have the eclipse icon as the application. Now it has the standard
Mac application icon (paper, pencil and ruler).
Created attachment 3648
Screenshot of application icon (or lack thereof)


*** This bug has been marked as a duplicate of 32408 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32553" />
    <CreationDate amount="2003-02-22 10:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="trivial" />
    <Summery>[Viewers] Closing a project does not remove [+] icon</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I just launched I20030220 and imported a couple of existing projects into the
workspace, with the [+] icon by each project (denoting contents). I then closed
a couple of the projects that I was not looking at, and the [+] icon remained
after closing the projects.

Of course clicking on this icon resulted in nothing happening, except the [+]
disappeared.

It would be better if the icon was cleared when the project was closed.

Mac OS X.2.4 Eclipse I20030220
I've tried to repeat this, and I can't.

It seems that whenever a project is imported or opened, it is automatically
expanded now. Whichever combination of open/close/imports, it does seem to
remove the [+] icon.

The only time I managed to get it to not do this was using .metadata from 2.1M5,
so there may have been a glitch in this configuration. If there's an option
to not open a project when it is imported (can't see one, but I think there
used to be) then it is my guess that this behaviour would be seen again.

Closing as WORKSFORME unless I can figure out how to re-create it reliably.
FWIW I20030221, not 20 as previously mentioned.
Typical. No sooner do I close a bug than I have to reopen it because I've
found a way to recreate it ...

File-&gt;New-&gt;Project-&gt;Simple 'Stuff'
Project-&gt;Close Project
Project-&gt;Open Project
Project-&gt;Close Project 

[+] is always there, whether open or closed.

Looks like this happens with empty projects, but I've also seen this behaviour
with odd CVS setups before.
This still happens in I20041123.  Just create a simple project with any name,
and immediately close without ever expanding the project node.  The + box stays
there.
Created attachment 16219
Patch to WorkbenchContentProvider.java

I was curious about whether this was a problem with deltas so I debugged it. 
It turns out the deltas are fine but WorkbenchContentProvider just wasn't
performing the necessary updates in this case. When the OPEN flag was set, it
would just update the item and assume that resource change events on the
children (add or remove) would cause the parent's plus box to be updated.  When
a project is removed that has never been expanded, there are no Items in the
tree for the children, so the necessary refresh doesn't occur.	The fix is to
just do a complete refresh of the project on close (all children are going away
anyway so this simplifies the update).	Fixed, tested, and patch attached.
This is working in 20050517
I have seen this bug again on Mac OS X with the new Eclipse 3.1. Sometimes it appears, sometimes it 
doesn't. Closing a whole suite of projects in one go often leaves about 20% of them with the arrow icon 
next to it. On Mac OSX, it's a |&gt; type icon, rather than [+] on Windows.
I've been able to reproduce this behaviour with Eclipse 3.1 on Windows XP as well.

Version: 3.1.0
Build id: I20050627-1435

It seems the easiest way to reproduce this is to have a bunch of projects open,
select all of them, and then select 'close project' from the pop-up menu (from a
Navigator view). Don't know if it helps/hinders reproduction, but I had a set of
dependencies between the projects as I was doing some PDE work.

After closing, I clicked on the [+] buttons next to each (they disappeared). I
then opened them all, and then closed them all, and the [+] was next to every one...
Agreed, it's still easy to reproduce.  In the resource perspective, create a
simple project, and then close it without ever expanding it.  The plus box
remains.  Note this problem does not appear in the Package Explorer.
Changing to OS to All, since it's visible on both Mac and Windows platforms. 
*** Bug 34509 has been marked as a duplicate of this bug. ***
Created attachment 33822
Updated patch
Created attachment 33823
Updated patch
This has been bugging me for years, so to avoid the possibility of another ignored patch, I have released the fix.
[I20060214-0800]

Verfied on Windows XP.
Have you verified it on a Mac platform too? That was the original platform the bug was raised against ;-)
Kim, could you do me a favour and verify this one on the Mac? Thanks!</WithStack>
    <WithOutStack>I just launched I20030220 and imported a couple of existing projects into the
workspace, with the [+] icon by each project (denoting contents). I then closed
a couple of the projects that I was not looking at, and the [+] icon remained
after closing the projects.

Of course clicking on this icon resulted in nothing happening, except the [+]
disappeared.

It would be better if the icon was cleared when the project was closed.

Mac OS X.2.4 Eclipse I20030220
I've tried to repeat this, and I can't.

It seems that whenever a project is imported or opened, it is automatically
expanded now. Whichever combination of open/close/imports, it does seem to
remove the [+] icon.

The only time I managed to get it to not do this was using .metadata from 2.1M5,
so there may have been a glitch in this configuration. If there's an option
to not open a project when it is imported (can't see one, but I think there
used to be) then it is my guess that this behaviour would be seen again.

Closing as WORKSFORME unless I can figure out how to re-create it reliably.
FWIW I20030221, not 20 as previously mentioned.
Typical. No sooner do I close a bug than I have to reopen it because I've
found a way to recreate it ...

File-&gt;New-&gt;Project-&gt;Simple 'Stuff'
Project-&gt;Close Project
Project-&gt;Open Project
Project-&gt;Close Project 

[+] is always there, whether open or closed.

Looks like this happens with empty projects, but I've also seen this behaviour
with odd CVS setups before.
This still happens in I20041123.  Just create a simple project with any name,
and immediately close without ever expanding the project node.  The + box stays
there.
Created attachment 16219
Patch to WorkbenchContentProvider.java

I was curious about whether this was a problem with deltas so I debugged it. 
It turns out the deltas are fine but WorkbenchContentProvider just wasn't
performing the necessary updates in this case. When the OPEN flag was set, it
would just update the item and assume that resource change events on the
children (add or remove) would cause the parent's plus box to be updated.  When
a project is removed that has never been expanded, there are no Items in the
tree for the children, so the necessary refresh doesn't occur.	The fix is to
just do a complete refresh of the project on close (all children are going away
anyway so this simplifies the update).	Fixed, tested, and patch attached.
This is working in 20050517
I have seen this bug again on Mac OS X with the new Eclipse 3.1. Sometimes it appears, sometimes it 
doesn't. Closing a whole suite of projects in one go often leaves about 20% of them with the arrow icon 
next to it. On Mac OSX, it's a |&gt; type icon, rather than [+] on Windows.
I've been able to reproduce this behaviour with Eclipse 3.1 on Windows XP as well.

Version: 3.1.0
Build id: I20050627-1435

It seems the easiest way to reproduce this is to have a bunch of projects open,
select all of them, and then select 'close project' from the pop-up menu (from a
Navigator view). Don't know if it helps/hinders reproduction, but I had a set of
dependencies between the projects as I was doing some PDE work.

After closing, I clicked on the [+] buttons next to each (they disappeared). I
then opened them all, and then closed them all, and the [+] was next to every one...
Agreed, it's still easy to reproduce.  In the resource perspective, create a
simple project, and then close it without ever expanding it.  The plus box
remains.  Note this problem does not appear in the Package Explorer.
Changing to OS to All, since it's visible on both Mac and Windows platforms. 
*** Bug 34509 has been marked as a duplicate of this bug. ***
Created attachment 33822
Updated patch
Created attachment 33823
Updated patch
This has been bugging me for years, so to avoid the possibility of another ignored patch, I have released the fix.
[I20060214-0800]

Verfied on Windows XP.
Have you verified it on a Mac platform too? That was the original platform the bug was raised against ;-)
Kim, could you do me a favour and verify this one on the Mac? Thanks!</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32554" />
    <CreationDate amount="2003-02-22 10:37:00 -0500" />
    <DupId amount="23842" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New dialog/wizard has white background instead of mac background</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The 'new' wizard/dialog has whitespace around the title [Java Project] and
description [Create a new Java project]. The icon also has whitespace around
parts of it as well.

This occurs with other new components, such as creating a Java package and class. However, I don't think it's JDT specific since it also exists for
other new types (new project, new file)

Mac OS X.2.4 Eclipse I20030220
Created attachment 3649
Screenshot showing whitespace around wizard

The whitespace can be seen at the top of the image, around the 'Java project',
'Create new Java Project' and the icon on the right.
The eclipse version should have been I20030221, sorry.
Please check to ensure we are not calling setBackground.
If we're not, it's an SWT problem.

I think the problem is reversed: the title are of the wizard should have a white background 
everywhere (which is bug 23842).


*** This bug has been marked as a duplicate of 23842 ***</WithStack>
    <WithOutStack>The 'new' wizard/dialog has whitespace around the title [Java Project] and
description [Create a new Java project]. The icon also has whitespace around
parts of it as well.

This occurs with other new components, such as creating a Java package and class. However, I don't think it's JDT specific since it also exists for
other new types (new project, new file)

Mac OS X.2.4 Eclipse I20030220
Created attachment 3649
Screenshot showing whitespace around wizard

The whitespace can be seen at the top of the image, around the 'Java project',
'Create new Java Project' and the icon on the right.
The eclipse version should have been I20030221, sorry.
Please check to ensure we are not calling setBackground.
If we're not, it's an SWT problem.

I think the problem is reversed: the title are of the wizard should have a white background 
everywhere (which is bug 23842).


*** This bug has been marked as a duplicate of 23842 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32555" />
    <CreationDate amount="2003-02-22 10:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Share existing CVS project hangs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Mac OS X.2.4 Eclipse I20030220

I imported a project which I had used under Eclipse 2.1M5. The project was
originally shared with CVS information, but the CVS tags showed up as Java
packages (in the Java Browsing view). The CVS connection was using extssh to
a CVS server which I independently verified using the CVS command-line tool
that I could still use (so not due to the fact the CVS server could be connected).

When I set it for sharing, it asked whether or not I wanted to use the existing
CVS information. I did, and selected the 'Verify when finished', but it hung
very shortly into the CVS process.

Having waited for 10 minutes, I had to force-quite Eclipse because it wasn't
responsive.
Created attachment 3650
Screenshot of Eclipse hanging during import phase

This showed how far the connection progress bar went; it may be useful in
determining at what point the connection failed
Created attachment 3651
Screenshot of Eclipse hanging during import phase

This showed how far the connection progress bar went; it may be useful in
determining at what point the connection failed
Created attachment 3652
ROOT entry in CVS directory for project
I force-quat eclipse, and then copied over the .metadata from my previous
workspace. When I restarted, the application worked as expected and I could
use CVS to interact with it.

It looks like the problem is in sharing an existing repository rather than 
repository access per se.

I also got the build wrong; it was 20030221, not 20 as previously mentioned.
I checked out the same project using :ext: instead of :extssh: and it seemed
to work fine when I'd checked it out as directly.

It may either be a glitch in the :extssh: or the share mechanism...
Are you running cvs on MacOS X?
What version? Apple's version is too old.
I'm using Mac OS X on the client, with SSH to connect to a Linux server.

The CVS on the local path (Mac OS X) is /usr/bin/cvs (1.10) which I'm guessing
is Apple's; under Linux it's 1.11.1p1.

I should have said that I've been using CVS to share my files since Eclipse
came out for Mac OS X with no problems at all up until I tried to 'Share 
existing project' with 2.1RC1.

Instead, I dropped the project from Eclipse, then checked out the version from
CVS as a project, and the synchronization/uploading/downloading etc. works
fine.

So it seems to be just a glitch in the share existing project, or something
that depends off that ...
I've seen this behaviour since the M4 builds (up to RC1), even with "pserver"
connection types. Last week I installed cvs 1.11.5 via fink, linked /usr/bin/cvs
to /sw/bin/cvs, but Eclipse still showed no difference...

If I remember correctly, Eclipse doesn't support 1.10.x versions of CVS. It requires 1.11.x. 
So I'm using the Fink version of CVS (version 1.11.2) which works without problems.
However, I'm not sure whether your problem is related to the CVS version.

From the Eclipse FAQ (admittedly from 2.0)

1.  Does Eclipse use [WinCVS|CVS command-line client] to talk to the server? 

No. Eclipse implements a CVS client in Java that talks directly to the server using the documented CVS protocol. No external CVS client is required.

http://dev.eclipse.org/viewcvs/index.cgi/~checkout~/platform-vcm-home/docs/online/cvs_features2.0/cvs-faq.html

So I don't see why having any kind of version on the Mac should hit this issue
at all. My CVS server is on Linux using CVS 1.11.

Has something changed with 2.1 that uses the OS native CVS tool?

In any case, extracting from a CVS server works, committing works, synchronizing
works; it's just the sharing that doesn't.

I have tried many different combinations of sharing projects both with extssh 
and pserver and have not been able to reproduce this, therefore there is 
nothing I can do for 2.1. Moving to 2.2.
Does this problem still occur in RC2? If so, can you give us your exact setup 
(i.e. Mac model, processor speed and OS, JVM, CVS Server version)?
As far as I have seen it seems to work in RC2. In the meantime I have installed CVS 1.11.5 via fink which should now be used by default; perhaps this helped solving the problem...?
Tested against 2.1RC2 on Mac OS X.2.4 (client) Linux 2.4.18 (server).

I have not been able to replicate this problem again. I suggest marking as
'WORKSFORME' and if I can not find a way of replicating this again under RC2
then I'll verify it later this week.
Verified as working under 2.1RC2 on Mac OS X.2.4</WithStack>
    <WithOutStack>Mac OS X.2.4 Eclipse I20030220

I imported a project which I had used under Eclipse 2.1M5. The project was
originally shared with CVS information, but the CVS tags showed up as Java
packages (in the Java Browsing view). The CVS connection was using extssh to
a CVS server which I independently verified using the CVS command-line tool
that I could still use (so not due to the fact the CVS server could be connected).

When I set it for sharing, it asked whether or not I wanted to use the existing
CVS information. I did, and selected the 'Verify when finished', but it hung
very shortly into the CVS process.

Having waited for 10 minutes, I had to force-quite Eclipse because it wasn't
responsive.
Created attachment 3650
Screenshot of Eclipse hanging during import phase

This showed how far the connection progress bar went; it may be useful in
determining at what point the connection failed
Created attachment 3651
Screenshot of Eclipse hanging during import phase

This showed how far the connection progress bar went; it may be useful in
determining at what point the connection failed
Created attachment 3652
ROOT entry in CVS directory for project
I force-quat eclipse, and then copied over the .metadata from my previous
workspace. When I restarted, the application worked as expected and I could
use CVS to interact with it.

It looks like the problem is in sharing an existing repository rather than 
repository access per se.

I also got the build wrong; it was 20030221, not 20 as previously mentioned.
I checked out the same project using :ext: instead of :extssh: and it seemed
to work fine when I'd checked it out as directly.

It may either be a glitch in the :extssh: or the share mechanism...
Are you running cvs on MacOS X?
What version? Apple's version is too old.
I'm using Mac OS X on the client, with SSH to connect to a Linux server.

The CVS on the local path (Mac OS X) is /usr/bin/cvs (1.10) which I'm guessing
is Apple's; under Linux it's 1.11.1p1.

I should have said that I've been using CVS to share my files since Eclipse
came out for Mac OS X with no problems at all up until I tried to 'Share 
existing project' with 2.1RC1.

Instead, I dropped the project from Eclipse, then checked out the version from
CVS as a project, and the synchronization/uploading/downloading etc. works
fine.

So it seems to be just a glitch in the share existing project, or something
that depends off that ...
I've seen this behaviour since the M4 builds (up to RC1), even with "pserver"
connection types. Last week I installed cvs 1.11.5 via fink, linked /usr/bin/cvs
to /sw/bin/cvs, but Eclipse still showed no difference...

If I remember correctly, Eclipse doesn't support 1.10.x versions of CVS. It requires 1.11.x. 
So I'm using the Fink version of CVS (version 1.11.2) which works without problems.
However, I'm not sure whether your problem is related to the CVS version.

From the Eclipse FAQ (admittedly from 2.0)

1.  Does Eclipse use [WinCVS|CVS command-line client] to talk to the server? 

No. Eclipse implements a CVS client in Java that talks directly to the server using the documented CVS protocol. No external CVS client is required.

http://dev.eclipse.org/viewcvs/index.cgi/~checkout~/platform-vcm-home/docs/online/cvs_features2.0/cvs-faq.html

So I don't see why having any kind of version on the Mac should hit this issue
at all. My CVS server is on Linux using CVS 1.11.

Has something changed with 2.1 that uses the OS native CVS tool?

In any case, extracting from a CVS server works, committing works, synchronizing
works; it's just the sharing that doesn't.

I have tried many different combinations of sharing projects both with extssh 
and pserver and have not been able to reproduce this, therefore there is 
nothing I can do for 2.1. Moving to 2.2.
Does this problem still occur in RC2? If so, can you give us your exact setup 
(i.e. Mac model, processor speed and OS, JVM, CVS Server version)?
As far as I have seen it seems to work in RC2. In the meantime I have installed CVS 1.11.5 via fink which should now be used by default; perhaps this helped solving the problem...?
Tested against 2.1RC2 on Mac OS X.2.4 (client) Linux 2.4.18 (server).

I have not been able to replicate this problem again. I suggest marking as
'WORKSFORME' and if I can not find a way of replicating this again under RC2
then I'll verify it later this week.
Verified as working under 2.1RC2 on Mac OS X.2.4</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32556" />
    <CreationDate amount="2003-02-22 11:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="minor" />
    <Summery>Project-&gt;Refactor-&gt;Move only works on open projects but enabled on closed projects</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The Project-&gt;Refactor-&gt;Move option only works on resources that are open, 
according to a dialog box when I tried to move a closed project.

However, if this is the case then the Refactor-&gt;Move action should be disabled
unless the project is open.

Alternatively it should be possible to move a project w/o opening it first,
especially if that project is large and may require a lot of compilation
when the only purpose is to move its location.
Wes should disable Move &amp; Rename for closed projects 
Personally, I don't think disabling is the answer here. If you want to move
a project to a new location (say, because you're upgrading Eclipse and you
want to move it to a backup location first) there's no reason to need to
open the project first of all.

Indeed, opening a closed project will cause all manner of things -- building,
cleaning and generally a bunch of time-consuming activities. If you want to
move a project's location, then, you have to open, move, then close it again
with a lot of wasted time on the developer's hands.

The same goes for renaming as well; if I am renaming a closed project, I 
presumably don't want to open it (otherwise I would have opened it first).

Although disabling these features for closed projects will fix the bug, it
will be annoying that the move/rename operation can't be done on a closed
project.
Dirk, you resolved the issue
please take care of the report
To be consistent with the navigator and on recommendation of core resources 
the actions got disabled for closed projects.
I disagree that 'move' should not be applicable for a closed project; I would
argue that it is more applicable to closed than open projects.

However, the bug has been fixed since it is now not possible to move a closed
project and as such will verify this.</WithStack>
    <WithOutStack>The Project-&gt;Refactor-&gt;Move option only works on resources that are open, 
according to a dialog box when I tried to move a closed project.

However, if this is the case then the Refactor-&gt;Move action should be disabled
unless the project is open.

Alternatively it should be possible to move a project w/o opening it first,
especially if that project is large and may require a lot of compilation
when the only purpose is to move its location.
Wes should disable Move &amp; Rename for closed projects 
Personally, I don't think disabling is the answer here. If you want to move
a project to a new location (say, because you're upgrading Eclipse and you
want to move it to a backup location first) there's no reason to need to
open the project first of all.

Indeed, opening a closed project will cause all manner of things -- building,
cleaning and generally a bunch of time-consuming activities. If you want to
move a project's location, then, you have to open, move, then close it again
with a lot of wasted time on the developer's hands.

The same goes for renaming as well; if I am renaming a closed project, I 
presumably don't want to open it (otherwise I would have opened it first).

Although disabling these features for closed projects will fix the bug, it
will be annoying that the move/rename operation can't be done on a closed
project.
Dirk, you resolved the issue
please take care of the report
To be consistent with the navigator and on recommendation of core resources 
the actions got disabled for closed projects.
I disagree that 'move' should not be applicable for a closed project; I would
argue that it is more applicable to closed than open projects.

However, the bug has been fixed since it is now not possible to move a closed
project and as such will verify this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32557" />
    <CreationDate amount="2003-02-22 11:25:00 -0500" />
    <DupId amount="27479" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Restarting Eclipse causes Eclipse Crash error</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When installing a new update into Mac OS X (10.2.4/I20030221), the process
prompts for restarting Eclipse. When the application closes down, Mac OS X
gives an error message indicating that Eclipse has crashed but hasn't taken
down the system. It then fails to restart automatically.

The install I added was for the JBoss IDE plugin from sourceforge (which worked
OK under Eclipse 2.1M5). Not sure whether that is related to the problem or not.

Restarting Eclipse seemed to fail as well; when I tried launching it it died
unexpectedly. I had to Force-Quit Eclipse, and remove the workspace before it
would come back up again.
Since I'm not finished with porting "eclipse.exe", updates don't work yet.

*** This bug has been marked as a duplicate of 27479 ***</WithStack>
    <WithOutStack>When installing a new update into Mac OS X (10.2.4/I20030221), the process
prompts for restarting Eclipse. When the application closes down, Mac OS X
gives an error message indicating that Eclipse has crashed but hasn't taken
down the system. It then fails to restart automatically.

The install I added was for the JBoss IDE plugin from sourceforge (which worked
OK under Eclipse 2.1M5). Not sure whether that is related to the problem or not.

Restarting Eclipse seemed to fail as well; when I tried launching it it died
unexpectedly. I had to Force-Quit Eclipse, and remove the workspace before it
would come back up again.
Since I'm not finished with porting "eclipse.exe", updates don't work yet.

*** This bug has been marked as a duplicate of 27479 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32558" />
    <CreationDate amount="2003-02-22 11:30:00 -0500" />
    <DupId amount="33261" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Build progress still not always reading "Building..."</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20030221

When a rebuild is initiated through a Java compiler preference change, the 
progress doesn't read "Building..." (as when initiating a manual rebuild all).
Are you sure that these messages came from using RC1 and not the builds earlier 
in the day? 

(these missing messages were one of the problems addressed by bug 32506)

Sorry, wrong browser window...please ignore previous comment.
Moving to JDT/UI. Code is in OptionsConfigurationBlock.

See Platform/UI classes BuildAction and GlobalBuildAction for examples of 
setting the task name in the progress monitor.


*** This bug has been marked as a duplicate of 33261 ***</WithStack>
    <WithOutStack>Build 20030221

When a rebuild is initiated through a Java compiler preference change, the 
progress doesn't read "Building..." (as when initiating a manual rebuild all).
Are you sure that these messages came from using RC1 and not the builds earlier 
in the day? 

(these missing messages were one of the problems addressed by bug 32506)

Sorry, wrong browser window...please ignore previous comment.
Moving to JDT/UI. Code is in OptionsConfigurationBlock.

See Platform/UI classes BuildAction and GlobalBuildAction for examples of 
setting the task name in the progress monitor.


*** This bug has been marked as a duplicate of 33261 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32559" />
    <CreationDate amount="2003-02-22 11:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TextEditor with multiple line number rulers</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="ifstatement">
        <location start="60" end="201" />
        <code>if (LINE_NUMBER_RULER.equals(property)) {
	if (isLineNumberRulerVisible())
		showLineNumberRuler();
	else
		hideLineNumberRuler();
	return;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Method handlePreferenceStoreChanged in TextEditor has this

if (LINE_NUMBER_RULER.equals(property)) {
	if (isLineNumberRulerVisible())
		showLineNumberRuler();
	else
		hideLineNumberRuler();
	return;
}

If it is already visible you show ??

This means that if you create a property page that allows toy to tweak the 
value of LINE_NUMBER_RULER, you will end up with many ruler columnbs as you 
play with Restore Defaults/Apply/OK in your preference page.

I have such a property page and indeed I can see the bug.

If this is not going to be fixed for 2.1, can you please post a workaround ? I 
have my own text editor which inherits from TextEditor, and I am seeing this 
problem. I'd like to prevent having multiple line number rulers in my editor.

thanks,

marcio
The value of the LINE_NUMBER_RULER property of the preference store can be 
either 'true' or 'false'. This means when th editor is notified that the value 
changed, it must either turn from 'true' to 'false' or the other way. This is 
the case the code covers.

No property event should be sent out when the value didn't change. This is the 
resonsibility of the preference page.

-Install the sglebs plugin to your Eclipse (attached here)
-Create a simple project
-Add a file to it, with .sglebs as extension: a.sglebs
-It should open with line numbers enabled
-Type this in the file:

for a class
 do while x
 #foo
 
-Save the file (control-S)
-Go to Window-&gt;Preferences, SGlebs
-Uncheck "Show Line Numbers", Click Apply, see the Editor update accordingly. 
SO far so good.
-Check "Show Line Numbers", CLick apply, see the Editor update accordingly. 
-Click Restore Defaults, no update happens (show line numbers is the default, 
so it's ok)
-Click Apply, see a second ruler for line numbers show up.
	

Can you show me where the bug is in the preference page ? It uses field 
editors, so I have no handler for the apply default button.

Created attachment 3745
plugin with editor with problem
Investigation item.
Added a guard to avoid the instantiation of multiple line number rulers. You 
problem has been caused by the fact that independent of the concrete changes 
of the property values a property change event is sent out when restoring 
defaults. This is conceptually wrong but part of the API so we can not change 
it by now.

Build &gt; 20030227.</WithStack>
    <WithOutStack>Method handlePreferenceStoreChanged in TextEditor has this

if (LINE_NUMBER_RULER.equals(property)) {
	if (isLineNumberRulerVisible())
		showLineNumberRuler();
	else
		hideLineNumberRuler();
	return;
}

If it is already visible you show ??

This means that if you create a property page that allows toy to tweak the 
value of LINE_NUMBER_RULER, you will end up with many ruler columnbs as you 
play with Restore Defaults/Apply/OK in your preference page.

I have such a property page and indeed I can see the bug.

If this is not going to be fixed for 2.1, can you please post a workaround ? I 
have my own text editor which inherits from TextEditor, and I am seeing this 
problem. I'd like to prevent having multiple line number rulers in my editor.

thanks,

marcio
The value of the LINE_NUMBER_RULER property of the preference store can be 
either 'true' or 'false'. This means when th editor is notified that the value 
changed, it must either turn from 'true' to 'false' or the other way. This is 
the case the code covers.

No property event should be sent out when the value didn't change. This is the 
resonsibility of the preference page.

-Install the sglebs plugin to your Eclipse (attached here)
-Create a simple project
-Add a file to it, with .sglebs as extension: a.sglebs
-It should open with line numbers enabled
-Type this in the file:

for a class
 do while x
 #foo
 
-Save the file (control-S)
-Go to Window-&gt;Preferences, SGlebs
-Uncheck "Show Line Numbers", Click Apply, see the Editor update accordingly. 
SO far so good.
-Check "Show Line Numbers", CLick apply, see the Editor update accordingly. 
-Click Restore Defaults, no update happens (show line numbers is the default, 
so it's ok)
-Click Apply, see a second ruler for line numbers show up.
	

Can you show me where the bug is in the preference page ? It uses field 
editors, so I have no handler for the apply default button.

Created attachment 3745
plugin with editor with problem
Investigation item.
Added a guard to avoid the instantiation of multiple line number rulers. You 
problem has been caused by the fact that independent of the concrete changes 
of the property values a property change event is sent out when restoring 
defaults. This is conceptually wrong but part of the API so we can not change 
it by now.

Build &gt; 20030227.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32560" />
    <CreationDate amount="2003-02-22 12:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception auto-detecting root</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437340333707">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable 
(java.lang.InternalError: jzentry == 0)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2316)</Frame>
          <Frame depth="1">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(Compiled Code))</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="4">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)</Frame>
          <Frame depth="6">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="7">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="8">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="9">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="10">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="11">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437340333707">
        <Exception>java.lang.InternalError</Exception>
        <Reason>jzentry == 0</Reason>
        <Frames>
          <Frame depth="0">java.util.zip.ZipFile$2.nextElement(ZipFile.java(Compiled Code))</Frame>
          <Frame depth="1">org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation.autoDetectRoot(ArchiveSourceLocation.java(Compiled Code))</Frame>
          <Frame depth="2">org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation.findSourceElement(ArchiveSourceLocation.java:143)</Frame>
          <Frame depth="3">org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator.getSourceElement(JavaSourceLocator.java:252)</Frame>
          <Frame depth="4">org.eclipse.jdt.debug.ui.JavaUISourceLocator.findSourceElement(JavaUISourceLocator.java:194)</Frame>
          <Frame depth="5">org.eclipse.jdt.debug.ui.JavaUISourceLocator.getSourceElement(JavaUISourceLocator.java:140)</Frame>
          <Frame depth="6">org.eclipse.debug.internal.ui.views.launch.LaunchView.lookupEditorInput(LaunchView.java:587)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.views.launch.LaunchView.openEditorForStackFrame(LaunchView.java:642)</Frame>
          <Frame depth="8">org.eclipse.debug.internal.ui.views.launch.LaunchView.showEditorForCurrentSelection(LaunchView.java:565)</Frame>
          <Frame depth="9">org.eclipse.debug.internal.ui.views.launch.LaunchView.selectionChanged(LaunchView.java:441)</Frame>
          <Frame depth="10">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java(Compiled Code))</Frame>
          <Frame depth="11">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1287)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1017)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java:962)</Frame>
          <Frame depth="14">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspendThreadEvent(LaunchViewEventHandler.java:229)</Frame>
          <Frame depth="15">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspendEvent(LaunchViewEventHandler.java:175)</Frame>
          <Frame depth="16">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugEvents(LaunchViewEventHandler.java:96)</Frame>
          <Frame depth="17">org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run(AbstractDebugEventHandler.java:65)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(Compiled Code))</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java(Compiled Code))</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java(Compiled Code))</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java(Compiled Code))</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)</Frame>
          <Frame depth="24">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="25">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="26">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Not sure how I did this:

!ENTRY org.eclipse.ui 4 4 Feb 22, 2003 11:05:55.851
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Feb 22, 2003 11:05:55.851
!MESSAGE Failed to execute runnable (java.lang.InternalError: jzentry == 0)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable 
(java.lang.InternalError: jzentry == 0)
	at org.eclipse.swt.SWT.error(SWT.java:2316)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
!ENTRY org.eclipse.ui 4 4 Feb 22, 2003 11:05:55.951
!MESSAGE 
*** Stack trace of contained exception ***
!ENTRY org.eclipse.ui 4 0 Feb 22, 2003 11:05:56.121
!MESSAGE jzentry == 0
!STACK 0
java.lang.InternalError: jzentry == 0
	at java.util.zip.ZipFile$2.nextElement(ZipFile.java(Compiled Code))
	at 
org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation.autoDetectRoot
(ArchiveSourceLocation.java(Compiled Code))
	at 
org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation.findSourceElement
(ArchiveSourceLocation.java:143)
	at 
org.eclipse.jdt.launching.sourcelookup.JavaSourceLocator.getSourceElement
(JavaSourceLocator.java:252)
	at org.eclipse.jdt.debug.ui.JavaUISourceLocator.findSourceElement
(JavaUISourceLocator.java:194)
	at org.eclipse.jdt.debug.ui.JavaUISourceLocator.getSourceElement
(JavaUISourceLocator.java:140)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.lookupEditorInput
(LaunchView.java:587)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.openEditorForStackFrame
(LaunchView.java:642)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.showEditorForCurrentSelect
ion(LaunchView.java:565)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.selectionChanged
(LaunchView.java:441)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java
(Compiled Code))
	at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:1287)
	at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:1017)
	at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java:962)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspen
dThreadEvent(LaunchViewEventHandler.java:229)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspen
dEvent(LaunchViewEventHandler.java:175)
	at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugE
vents(LaunchViewEventHandler.java:96)
	at org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run
(AbstractDebugEventHandler.java:65)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java(Compiled Code))
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
I have been unable to reproduce this problem.</WithStack>
    <WithOutStack>Not sure how I did this:

!ENTRY org.eclipse.ui 4 4 Feb 22, 2003 11:05:55.851
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Feb 22, 2003 11:05:55.851
!MESSAGE Failed to execute runnable (java.lang.InternalError: jzentry == 0)
!STACK 0
!ENTRY org.eclipse.ui 4 4 Feb 22, 2003 11:05:55.951
!MESSAGE 
*** Stack trace of contained exception ***
!ENTRY org.eclipse.ui 4 0 Feb 22, 2003 11:05:56.121
!MESSAGE jzentry == 0
!STACK 0

I have been unable to reproduce this problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32561" />
    <CreationDate amount="2003-02-22 13:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Updates preferences lists version 1.0.2 &gt; 1.0.1</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>IMHO the update/install preferences page, which defines and tries to list the
different major/minor increments, does not read very well. I read 1.0.2 &gt; 1.0.1
as being a downgrade from 1.0.2 to 1.0.1.

It would be better (IMHO) if you reworded the labels as 1.0.1 -&gt; 1.0.2 and 1.0.1 -&gt; 1.1 as this would more clearly indicate the old-&gt;new versions.
Agreed - fixed.
Verified against 2.1RC2 on Mac OS X.2.4</WithStack>
    <WithOutStack>IMHO the update/install preferences page, which defines and tries to list the
different major/minor increments, does not read very well. I read 1.0.2 &gt; 1.0.1
as being a downgrade from 1.0.2 to 1.0.1.

It would be better (IMHO) if you reworded the labels as 1.0.1 -&gt; 1.0.2 and 1.0.1 -&gt; 1.1 as this would more clearly indicate the old-&gt;new versions.
Agreed - fixed.
Verified against 2.1RC2 on Mac OS X.2.4</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32562" />
    <CreationDate amount="2003-02-22 14:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Issues with hover over variables</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build 200302211557 (although I believe I have seen this issue for some time now)

Sometimes when I am at a breakpoint, I hover over a variable in the editor that 
is defined and I can see in the variables view, and it shows me the type rather 
than what the variable currently evaluates to.

If I then close the editor, and open the same file back up and hover over it 
again, it shows me the value of the variable.
Cannot reproduce. However, please note that objects (i.e. non-primitives) 
display with their type name. For example, when hovering over a variable 
containing a vector, the result I see is:

"fFull = (java.util.Vector)(id=27)"

is this what you are seeing?


No, I'm seing Strings being show as String instead of their object reference or 
value.

It appears if I have the java source file already open before the breakpoint 
gets hit, this happens, but if the java source file gets opened on account of 
the breakpoint getting hit, it doesn't occur.

Again, I get just the type name on the hovers when this occurs, and if I 
immediately close the file and reopen the file and hover over the same exact 
item, it will then correctly display what it references evaluates to.
Still not able to reproduce. Deferred for post 2.1 investigation.
Closing.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Build 200302211557 (although I believe I have seen this issue for some time now)

Sometimes when I am at a breakpoint, I hover over a variable in the editor that 
is defined and I can see in the variables view, and it shows me the type rather 
than what the variable currently evaluates to.

If I then close the editor, and open the same file back up and hover over it 
again, it shows me the value of the variable.
Cannot reproduce. However, please note that objects (i.e. non-primitives) 
display with their type name. For example, when hovering over a variable 
containing a vector, the result I see is:

"fFull = (java.util.Vector)(id=27)"

is this what you are seeing?


No, I'm seing Strings being show as String instead of their object reference or 
value.

It appears if I have the java source file already open before the breakpoint 
gets hit, this happens, but if the java source file gets opened on account of 
the breakpoint getting hit, it doesn't occur.

Again, I get just the type name on the hovers when this occurs, and if I 
immediately close the file and reopen the file and hover over the same exact 
item, it will then correctly display what it references evaluates to.
Still not able to reproduce. Deferred for post 2.1 investigation.
Closing.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32563" />
    <CreationDate amount="2003-02-22 14:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>IAE in org.eclipse.jdt.core.Signature.toCharArray (M5)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340333717">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.core.Signature.toCharArray(Signature.java:1269)</Frame>
          <Frame depth="1">org.eclipse.jdt.core.Signature.toString(Signature.java:1381)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.Member.findMethods(Member.java:107)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.SourceType.findMethods(SourceType.java:134)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.CompilationUnit.findElements(CompilationUnit.java:268)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.corext.util.JavaModelUtil.findInCompilationUnit(JavaModelUtil.java:219)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.getWorkingCopy(EditorUtility.java:295)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.getCorrespondingElement(CompilationUnitEditor.java:679)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.setSelection(JavaEditor.java:1422)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.revealInEditor(EditorUtility.java:121)</Frame>
          <Frame depth="10">org.eclipse.jdt.ui.JavaUI.revealInEditor(JavaUI.java:564)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="6">
      <source_code type="ifstatement">
        <location start="209" end="342" />
        <code>if (element != null) {
	   IEditorPart javaEditor = JavaUI.openInEditor(element);
	   JavaUI.revealInEditor(javaEditor, element);
	}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="823" end="986" />
        <code>private Max(String name, String per, double value, IJavaElement element) {
	this(name, per, value);
	if (element != null) handle = element.getHandleIdentifier();
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1414" end="1966" />
        <code>private IMethod findMethod(MethodDeclaration m) {
	IType type = (IType)input;
	List parms = m.parameters();
	String[] argtypes = new String[parms.size()];
	int index = 0;
	for (Iterator i = parms.iterator();i.hasNext();index++) {
		String svd = i.next().toString();
		int space = svd.indexOf(' ');
		argtypes[index] = svd.substring(0, space);
	}
	IMethod im = type.getMethod(m.getName().getIdentifier(), argtypes);
	if (im == null) {
		System.err.println("No method found for " + m.getName
().getIdentifier() + " (" + argtypes + ")");
	} 
	return im;
}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="2179" end="2300" />
        <code>if (im == null) {
   System.err.println("No method found for " + m.getName().getIdentifier() + " 
(" + argtypes + ")");
}</code>
      </source_code>
      <source_code type="elsestatement">
        <location start="2299" end="2653" />
        <code>} else {
   System.err.println("Found method " + im.getHandleIdentifier());
   try {
	IMethod[] methods = type.getMethods();
	for (int i = 0; i &lt; methods.length;i++) {
		System.err.println("methods[" + i + "] = " + methods
[i].getHandleIdentifier());
	}
   } catch (JavaModelException e) {
	// HACK Auto-generated catch block
	e.printStackTrace();
   }
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3231" end="3838" />
        <code>private IMethod findMethod(MethodDeclaration m) {
   IType type = (IType)input;
   List parms = m.parameters();
   String[] argtypes = new String[parms.size()];
   int index = 0;
   for (Iterator i = parms.iterator();i.hasNext();index++) {
	String svd = i.next().toString();
	int space = svd.indexOf(' ');
	argtypes[index] = Signature.createTypeSignature(svd.substring(0, 
space), false);
   }
   IMethod im = type.getMethod(m.getName().getIdentifier(), argtypes);
   if (im == null) {
	System.err.println("No method found for " + m.getName().getIdentifier() 
+ " (" + argtypes + ")");
   } 
   return im;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- getMethod(String name, String[] parameterTypeSignatures) is a handle-only</Line>
          <Line>function. The method may or may not be present. You need to call exists() on</Line>
          <Line>this method if you want to know if the method is present in the type.</Line>
          <Line>- getMethods() returns the methods and constructors declared by this type. So</Line>
          <Line>all methods returns by this function are guarantied to exist.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Upon revealing a IJavaElement in an editor I get thisthe following exception.
The IJavaElement represents a method. It was reconstructed from a handle 
created with IJavaElement.getHandleIdentifier()

java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.Signature.toCharArray(Signature.java:1269)
	at org.eclipse.jdt.core.Signature.toString(Signature.java:1381)
	at org.eclipse.jdt.internal.core.Member.findMethods(Member.java:107)
	at org.eclipse.jdt.internal.core.SourceType.findMethods
(SourceType.java:134)
	at org.eclipse.jdt.internal.core.CompilationUnit.findElements
(CompilationUnit.java:268)
	at 
org.eclipse.jdt.internal.corext.util.JavaModelUtil.findInCompilationUnit
(JavaModelUtil.java:219)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.getWorkingCopy
(EditorUtility.java:295)
	at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.getCorrespondingEle
ment(CompilationUnitEditor.java:679)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.setSelection
(JavaEditor.java:1422)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.revealInEditor
(EditorUtility.java:121)
	at org.eclipse.jdt.ui.JavaUI.revealInEditor(JavaUI.java:564)

code:
	if (element != null) {
	   IEditorPart javaEditor = JavaUI.openInEditor(element);
	   JavaUI.revealInEditor(javaEditor, element);
	}


Frank
example handle that fails:

=FPL/src&lt;net.sourceforge.fpl.commands{GlobNode.java
[GlobNode~addFolderContent~File~String~boolean~List
Frank, it looks like the handle for the method you're trying to reveal in the 
editor is malformed. The parameter types should be signatures, i.e. they should 
be: {"QFile;", "QString;", "Z", "QList;"}

Did you create this handle? If you didn't, how did you get it?
The handle was created with the element.getHandleIdentifier() method....

private Max(String name, String per, double value, IJavaElement element) {
	this(name, per, value);
	if (element != null) handle = element.getHandleIdentifier();
}

I meant: how was the method (i.e. the IJavaElement you're getting the handle 
identifier from) created? 

It looks like this IJavaElement (an IMethod from my investigation) was created 
using the wrong parameter type signatures. If the IMethod is malformed, then 
the handle identifier is also malformed, which causes the IAE.
The IMethod was obtained like this, starting with a  
org.eclipse.jdt.core.dom.MethodDeclaration:

private IMethod findMethod(MethodDeclaration m) {
	IType type = (IType)input;
	List parms = m.parameters();
	String[] argtypes = new String[parms.size()];
	int index = 0;
	for (Iterator i = parms.iterator();i.hasNext();index++) {
		String svd = i.next().toString();
		int space = svd.indexOf(' ');
		argtypes[index] = svd.substring(0, space);
	}
	IMethod im = type.getMethod(m.getName().getIdentifier(), argtypes);
	if (im == null) {
		System.err.println("No method found for " + m.getName
().getIdentifier() + " (" + argtypes + ")");
	} 
	return im;
}
Hmm, I see what you're saying now. I changed the code posted earlier
to print the following output, and what I get from the getMethod call is
definetely different from a direct listing of all the methods. Code:

if (im == null) {
   System.err.println("No method found for " + m.getName().getIdentifier() + " 
(" + argtypes + ")");
} else {
   System.err.println("Found method " + im.getHandleIdentifier());
   try {
	IMethod[] methods = type.getMethods();
	for (int i = 0; i &lt; methods.length;i++) {
		System.err.println("methods[" + i + "] = " + methods
[i].getHandleIdentifier());
	}
   } catch (JavaModelException e) {
	// HACK Auto-generated catch block
	e.printStackTrace();
   }
}

Found method =FPL/src&lt;net.sourceforge.fpl.commands{FPLNode.java
[FPLNode~fireVariableSet~Variable~boolean
...
methods[47] = =FPL/src&lt;net.sourceforge.fpl.commands{FPLNode.java
[FPLNode~fireVariableSet~QVariable;~Z

So why does type.getMethod(m.getName().getIdentifier(), argtypes) find
something if I don't pass the correct argument types, or why does the IMethod
returned by the getMethod - if it finds a method - not answer the correct
handle?
found workaround as follows.
This still does not explain differnetce between getMethod(name, argtypes)
and getMethods() though...

private IMethod findMethod(MethodDeclaration m) {
   IType type = (IType)input;
   List parms = m.parameters();
   String[] argtypes = new String[parms.size()];
   int index = 0;
   for (Iterator i = parms.iterator();i.hasNext();index++) {
	String svd = i.next().toString();
	int space = svd.indexOf(' ');
	argtypes[index] = Signature.createTypeSignature(svd.substring(0, 
space), false);
   }
   IMethod im = type.getMethod(m.getName().getIdentifier(), argtypes);
   if (im == null) {
	System.err.println("No method found for " + m.getName().getIdentifier() 
+ " (" + argtypes + ")");
   } 
   return im;
}
As specified in the javadoc of these methods:
- getMethod(String name, String[] parameterTypeSignatures) is a handle-only 
function. The method may or may not be present. You need to call exists() on 
this method if you want to know if the method is present in the type.
- getMethods() returns the methods and constructors declared by this type. So 
all methods returns by this function are guarantied to exist.

I agree that the names of these methods may be too close. The second one should 
really be 'findMethods()'. However these are here since 1.0, and we cannot 
change the names any longer.

BTW, I don't think you're solution is a workaround. I think that it the right 
way to get the IMethod handle from the ASTNode. However you don't need to check 
for null as getMethod(String, String[]) will never return null. You can - if 
you want - call exists() on this method to ensure it is present in the type.
Frank, with the above explanation is it ok to close?
yes, ok. I agree that the method names could be improved:
getMethod(name, argtypes) should be createMethod since it's not really a finder
but more of a factory method. Thanks for your help.
Closing.</WithStack>
    <WithOutStack>Upon revealing a IJavaElement in an editor I get thisthe following exception.
The IJavaElement represents a method. It was reconstructed from a handle 
created with IJavaElement.getHandleIdentifier()



code:
	if (element != null) {
	   IEditorPart javaEditor = JavaUI.openInEditor(element);
	   JavaUI.revealInEditor(javaEditor, element);
	}


Frank
example handle that fails:

=FPL/src&lt;net.sourceforge.fpl.commands{GlobNode.java
[GlobNode~addFolderContent~File~String~boolean~List
Frank, it looks like the handle for the method you're trying to reveal in the 
editor is malformed. The parameter types should be signatures, i.e. they should 
be: {"QFile;", "QString;", "Z", "QList;"}

Did you create this handle? If you didn't, how did you get it?
The handle was created with the element.getHandleIdentifier() method....

private Max(String name, String per, double value, IJavaElement element) {
	this(name, per, value);
	if (element != null) handle = element.getHandleIdentifier();
}

I meant: how was the method (i.e. the IJavaElement you're getting the handle 
identifier from) created? 

It looks like this IJavaElement (an IMethod from my investigation) was created 
using the wrong parameter type signatures. If the IMethod is malformed, then 
the handle identifier is also malformed, which causes the IAE.
The IMethod was obtained like this, starting with a  
org.eclipse.jdt.core.dom.MethodDeclaration:

private IMethod findMethod(MethodDeclaration m) {
	IType type = (IType)input;
	List parms = m.parameters();
	String[] argtypes = new String[parms.size()];
	int index = 0;
	for (Iterator i = parms.iterator();i.hasNext();index++) {
		String svd = i.next().toString();
		int space = svd.indexOf(' ');
		argtypes[index] = svd.substring(0, space);
	}
	IMethod im = type.getMethod(m.getName().getIdentifier(), argtypes);
	if (im == null) {
		System.err.println("No method found for " + m.getName
().getIdentifier() + " (" + argtypes + ")");
	} 
	return im;
}
Hmm, I see what you're saying now. I changed the code posted earlier
to print the following output, and what I get from the getMethod call is
definetely different from a direct listing of all the methods. Code:

if (im == null) {
   System.err.println("No method found for " + m.getName().getIdentifier() + " 
(" + argtypes + ")");
} else {
   System.err.println("Found method " + im.getHandleIdentifier());
   try {
	IMethod[] methods = type.getMethods();
	for (int i = 0; i &lt; methods.length;i++) {
		System.err.println("methods[" + i + "] = " + methods
[i].getHandleIdentifier());
	}
   } catch (JavaModelException e) {
	// HACK Auto-generated catch block
	e.printStackTrace();
   }
}

Found method =FPL/src&lt;net.sourceforge.fpl.commands{FPLNode.java
[FPLNode~fireVariableSet~Variable~boolean
...
methods[47] = =FPL/src&lt;net.sourceforge.fpl.commands{FPLNode.java
[FPLNode~fireVariableSet~QVariable;~Z

So why does type.getMethod(m.getName().getIdentifier(), argtypes) find
something if I don't pass the correct argument types, or why does the IMethod
returned by the getMethod - if it finds a method - not answer the correct
handle?
found workaround as follows.
This still does not explain differnetce between getMethod(name, argtypes)
and getMethods() though...

private IMethod findMethod(MethodDeclaration m) {
   IType type = (IType)input;
   List parms = m.parameters();
   String[] argtypes = new String[parms.size()];
   int index = 0;
   for (Iterator i = parms.iterator();i.hasNext();index++) {
	String svd = i.next().toString();
	int space = svd.indexOf(' ');
	argtypes[index] = Signature.createTypeSignature(svd.substring(0, 
space), false);
   }
   IMethod im = type.getMethod(m.getName().getIdentifier(), argtypes);
   if (im == null) {
	System.err.println("No method found for " + m.getName().getIdentifier() 
+ " (" + argtypes + ")");
   } 
   return im;
}
As specified in the javadoc of these methods:
- getMethod(String name, String[] parameterTypeSignatures) is a handle-only 
function. The method may or may not be present. You need to call exists() on 
this method if you want to know if the method is present in the type.
- getMethods() returns the methods and constructors declared by this type. So 
all methods returns by this function are guarantied to exist.

I agree that the names of these methods may be too close. The second one should 
really be 'findMethods()'. However these are here since 1.0, and we cannot 
change the names any longer.

BTW, I don't think you're solution is a workaround. I think that it the right 
way to get the IMethod handle from the ASTNode. However you don't need to check 
for null as getMethod(String, String[]) will never return null. You can - if 
you want - call exists() on this method to ensure it is present in the type.
Frank, with the above explanation is it ok to close?
yes, ok. I agree that the method names could be improved:
getMethod(name, argtypes) should be createMethod since it's not really a finder
but more of a factory method. Thanks for your help.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32564" />
    <CreationDate amount="2003-02-22 15:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Cant open Update perspective!!!</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I just updated to RC1, and Eclipse can no longer open the updates 
perspective.  It fails with an error, and presents a blank perspective.

I will attach the log.

Scott
Created attachment 3654
Eclipse .log file
Something is wrong in the way you updated - I am currently on RC1 and I can 
open Update perspective without problems. The error in your log is related to 
the problem in the build from the day before (0220). The currently RC1 build 
does not have it.
Uh...i didnt use yesterdays build.
I have been on M5 until today, when I downloaded RC1.

Scott
THe only way I can explain it is that there is something wrong with your 
workspace (have you noticed many entries in the log?). Start RC1 with a clean 
workspace and you will se that you can open the Update perspective without 
problems.

The only thing I can think of is that primary feature file format has change a 
bit and it choked Update in 0220 driver until we synced up our code with that 
of Platform UI. If you are providing your own primary feature, your 
ini/settings/etc. files may need to be fixed. Check the Eclipse SDK attribution 
files and compare to yours if this is the case.
I completely closed my workspace...then reinstalled RC1. It seems to have 
fixed the problem.  I am okay with you closing the bug now, though I don't 
think I did anything that should have warranted this problem.

Thanks,
Scott
I am confused too, particularly because I had an M5 workspace laying around, so 
I started RC1 by pointing at it, and didn't have any problems showing the 
Update perspective.

I don't know what is your selfhosting scenario - maybe you didn't update your 
classpaths to point to the new build or re-imported binary projects in case you 
use binary plug-in projects for self-hosting. Either way, it looked to me like 
you were running older Update code on the new ini files.</WithStack>
    <WithOutStack>I just updated to RC1, and Eclipse can no longer open the updates 
perspective.  It fails with an error, and presents a blank perspective.

I will attach the log.

Scott
Created attachment 3654
Eclipse .log file
Something is wrong in the way you updated - I am currently on RC1 and I can 
open Update perspective without problems. The error in your log is related to 
the problem in the build from the day before (0220). The currently RC1 build 
does not have it.
Uh...i didnt use yesterdays build.
I have been on M5 until today, when I downloaded RC1.

Scott
THe only way I can explain it is that there is something wrong with your 
workspace (have you noticed many entries in the log?). Start RC1 with a clean 
workspace and you will se that you can open the Update perspective without 
problems.

The only thing I can think of is that primary feature file format has change a 
bit and it choked Update in 0220 driver until we synced up our code with that 
of Platform UI. If you are providing your own primary feature, your 
ini/settings/etc. files may need to be fixed. Check the Eclipse SDK attribution 
files and compare to yours if this is the case.
I completely closed my workspace...then reinstalled RC1. It seems to have 
fixed the problem.  I am okay with you closing the bug now, though I don't 
think I did anything that should have warranted this problem.

Thanks,
Scott
I am confused too, particularly because I had an M5 workspace laying around, so 
I started RC1 by pointing at it, and didn't have any problems showing the 
Update perspective.

I don't know what is your selfhosting scenario - maybe you didn't update your 
classpaths to point to the new build or re-imported binary projects in case you 
use binary plug-in projects for self-hosting. Either way, it looked to me like 
you were running older Update code on the new ini files.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32565" />
    <CreationDate amount="2003-02-22 15:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Color washing in StyledText</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="467" end="502" />
        <code>Independent (non-Xinerama) heads;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I've never seen anything quite as weird in my life.

The color-highlighted syntax of Java appears color-uneven, as shown in the
attached screenshot.  This is not an effect of antialiasing - look at how the
same word 'Positions' is different color.  None of the other GTK programs
exhibit this, and other places in Eclipse look ok, too.

Details:
Kernel: 2.4.19
GTK: 2.0.6
Freetype: 2.0.9
Video setup:
  XFree86: 4.2.1
  G550 with Matrox driver (not the XFree driver)
  Independent (non-Xinerama) heads;
  the bug happens both on the accel and non-accel head
Created attachment 3656
Snapshot
This looks like an anti-alias thing.  When anti-alias text is drawn in the 
same place multiple times without erasing, it gets darker.  Does it happen 
every time?

FH to investigate.
That's not only about anti-aliasing, the video card hardware (or the linux 
drive) is bad too.
Which video card do you have ?

Try to disaple the anti-aliasing in Gnome's font preferences, change the "Best 
shapes" to "Best Contrast" for example.

Let me know what happens.

As I mentioned in the original report,  the card is a Matrox G550 with the 
vendor (hal-supporting) driver.  Disabling anti-aliasing (GDK_USE_XFT=0) does 
rectify the problem.  The card is a well known classic for its great stability 
and glitch-free Linux support (like many other cards from Matrox); also, other 
GTK apps taking advantage of AA, don't exhibit the problem.

I will try this with the new 4.3.0 driver from official X (luckily no need for 
dvi) and let you know what happens.
closing</WithStack>
    <WithOutStack>I've never seen anything quite as weird in my life.

The color-highlighted syntax of Java appears color-uneven, as shown in the
attached screenshot.  This is not an effect of antialiasing - look at how the
same word 'Positions' is different color.  None of the other GTK programs
exhibit this, and other places in Eclipse look ok, too.

Details:
Kernel: 2.4.19
GTK: 2.0.6
Freetype: 2.0.9
Video setup:
  XFree86: 4.2.1
  G550 with Matrox driver (not the XFree driver)
  Independent (non-Xinerama) heads;
  the bug happens both on the accel and non-accel head
Created attachment 3656
Snapshot
This looks like an anti-alias thing.  When anti-alias text is drawn in the 
same place multiple times without erasing, it gets darker.  Does it happen 
every time?

FH to investigate.
That's not only about anti-aliasing, the video card hardware (or the linux 
drive) is bad too.
Which video card do you have ?

Try to disaple the anti-aliasing in Gnome's font preferences, change the "Best 
shapes" to "Best Contrast" for example.

Let me know what happens.

As I mentioned in the original report,  the card is a Matrox G550 with the 
vendor (hal-supporting) driver.  Disabling anti-aliasing (GDK_USE_XFT=0) does 
rectify the problem.  The card is a well known classic for its great stability 
and glitch-free Linux support (like many other cards from Matrox); also, other 
GTK apps taking advantage of AA, don't exhibit the problem.

I will try this with the new 4.3.0 driver from official X (luckily no need for 
dvi) and let you know what happens.
closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32566" />
    <CreationDate amount="2003-02-22 15:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>expose unusedParameterWhenOverridingConcrete and unusedParameterWhenImplementingAbstract at the UI Level [build path]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functioncall">
        <location start="920" end="943" />
        <code>method m1(String p1);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="944" end="967" />
        <code>method m2(String p2);</code>
      </source_code>
      <source_code type="class">
        <location start="971" end="1103" />
        <code>class XAdaptor
{
  method m1(String p1) &lt;--not reported as unused
  {
  }
  method m2(String p2) &lt;--not reported as unused
  {
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>After i downloaded the 200302211557 build my warning tasks disappear. Now I 
only have "Task Tag" items remaining. If I create a new method with unused 
parameters the task does show up. But in the already existing classes in my 
project the unused parameters do not show. I tried switching those compiler 
settings off in to no avail. I tried rebuilding the project no tasks show. I 
tried deleting the project (without deleting the files of that project) and 
then recreating it no tasks show!
This works for me using RC1. Some questions:

Have you set any special filters ? If you open the file, do the warnings show 
up as annotations in the editor ? Do you have a small reproducable case ?
I belive that eclipse has been enhanced to detect the use of adapters and not 
report the parameters there as unused! If this is infact true can you please 
explain exactly what feature has allowed this?

e.g:

interface X
{
  method m1(String p1);
  method m2(String p2);
}

class XAdaptor
{
  method m1(String p1) &lt;--not reported as unused
  {
  }
  method m2(String p2) &lt;--not reported as unused
  {
  }
}
I forgot to mention that in the above example XAdapter implements X
This enhancement was documented in JDT/Core buildnotes (also see bug 25204 and 
bug 27251):

Unused parameter diagnosis will now ignore parameters in an abstract method, a 
main method, an implementation of an abstract method or a method overriding a 
concrete one. Additional settings got added for enabling the diagnosis of the 
latter two scenarii. 
* COMPILER / Reporting Unused Parameter if Implementing Abstract Method
*    When enabled, the compiler will signal unused parameters in abstract 
method implementations.
*    The severity of the problem is controlled with 
option "org.eclipse.jdt.core.compiler.problem.unusedParameter".
*     - option 
id:         "org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementi
ngAbstract"
*     - possible values:   { "enabled", "disabled" }
*     - default:           "disabled"
*
* COMPILER / Reporting Unused Parameter if Overriding Concrete Method
*    When enabled, the compiler will signal unused parameters in methods 
overriding concrete ones.
*    The severity of the problem is controlled with 
option "org.eclipse.jdt.core.compiler.problem.unusedParameter".
*     - option 
id:         "org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverriding
Concrete"
*     - possible values:   { "enabled", "disabled" }
*     - default:           "disabled"

As you can see the JDT/Core is configurable, but unfortunately JDT/UI doesn't 
surface these settings (yet).

Until it occurs, you may manually add the following 2 lines to 
&lt;workspace&gt;/.metadata/.plugins\org.eclipse.jdt.core/pref_store.ini

org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enab
led
org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=en
abled

Make sure to exit before you modify it manually.

Back to JDT/UI which should consider surfacing these settings.
changed summary
No plans to expose the settings for 2.1. We are working on RC2 and only 
critical bugs will be fixed.
this seems to have been fixed in the latest integration build. Is this a 
duplicate of something?
Reopening...
This got addressed by the reowrk of the compiler preference page. Thanks for 
letting us know.</WithStack>
    <WithOutStack>After i downloaded the 200302211557 build my warning tasks disappear. Now I 
only have "Task Tag" items remaining. If I create a new method with unused 
parameters the task does show up. But in the already existing classes in my 
project the unused parameters do not show. I tried switching those compiler 
settings off in to no avail. I tried rebuilding the project no tasks show. I 
tried deleting the project (without deleting the files of that project) and 
then recreating it no tasks show!
This works for me using RC1. Some questions:

Have you set any special filters ? If you open the file, do the warnings show 
up as annotations in the editor ? Do you have a small reproducable case ?
I belive that eclipse has been enhanced to detect the use of adapters and not 
report the parameters there as unused! If this is infact true can you please 
explain exactly what feature has allowed this?

e.g:

interface X
{
  method m1(String p1);
  method m2(String p2);
}

class XAdaptor
{
  method m1(String p1) &lt;--not reported as unused
  {
  }
  method m2(String p2) &lt;--not reported as unused
  {
  }
}
I forgot to mention that in the above example XAdapter implements X
This enhancement was documented in JDT/Core buildnotes (also see bug 25204 and 
bug 27251):

Unused parameter diagnosis will now ignore parameters in an abstract method, a 
main method, an implementation of an abstract method or a method overriding a 
concrete one. Additional settings got added for enabling the diagnosis of the 
latter two scenarii. 
* COMPILER / Reporting Unused Parameter if Implementing Abstract Method
*    When enabled, the compiler will signal unused parameters in abstract 
method implementations.
*    The severity of the problem is controlled with 
option "org.eclipse.jdt.core.compiler.problem.unusedParameter".
*     - option 
id:         "org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementi
ngAbstract"
*     - possible values:   { "enabled", "disabled" }
*     - default:           "disabled"
*
* COMPILER / Reporting Unused Parameter if Overriding Concrete Method
*    When enabled, the compiler will signal unused parameters in methods 
overriding concrete ones.
*    The severity of the problem is controlled with 
option "org.eclipse.jdt.core.compiler.problem.unusedParameter".
*     - option 
id:         "org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverriding
Concrete"
*     - possible values:   { "enabled", "disabled" }
*     - default:           "disabled"

As you can see the JDT/Core is configurable, but unfortunately JDT/UI doesn't 
surface these settings (yet).

Until it occurs, you may manually add the following 2 lines to 
&lt;workspace&gt;/.metadata/.plugins\org.eclipse.jdt.core/pref_store.ini

org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enab
led
org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=en
abled

Make sure to exit before you modify it manually.

Back to JDT/UI which should consider surfacing these settings.
changed summary
No plans to expose the settings for 2.1. We are working on RC2 and only 
critical bugs will be fixed.
this seems to have been fixed in the latest integration build. Is this a 
duplicate of something?
Reopening...
This got addressed by the reowrk of the compiler preference page. Thanks for 
letting us know.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32567" />
    <CreationDate amount="2003-02-22 15:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>A4: Extensions tree collapses on Save</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Whenever I change something in the property sheet for the selected element in 
the tree view and save using Ctrl+S, the tree collapses. This is very annoying 
because Ctrl+S is almost 'muscle memory' for me - I do it very often.
Kai, I have found a problem in synchronization between the two models in the 
manifest editor. When we change something in the PDE model (the classic one), 
when we save, we flush the model into the document, then save the document into 
the file system. This triggers your reconciler which keeps both models in sync 
(line 147 in DocumentModel - near 'update'). This makes source model in sync 
but unnecessarily refreshes our model. 

Here is the expected behaviour: we should somehow be able to tell you that our 
model has caused the document change, and that it is in sync - all that is 
needed is to update the source model. Can we do something about it?

To reproduce this problem, create a hello world plug-in, switch to the source 
page (important!), switch back to the 'Extensions' page, change some property 
to cause the editor to be dirty, and save. You will notice how the entire tree 
collapses. This is because saving causes our model to be reloaded 
and 'WORLD_CHANGED' event is fired.

This is not happening if source page is not visited because your model is not 
created.
Fixed by the Text team - thanks Christof and Kai!</WithStack>
    <WithOutStack>Whenever I change something in the property sheet for the selected element in 
the tree view and save using Ctrl+S, the tree collapses. This is very annoying 
because Ctrl+S is almost 'muscle memory' for me - I do it very often.
Kai, I have found a problem in synchronization between the two models in the 
manifest editor. When we change something in the PDE model (the classic one), 
when we save, we flush the model into the document, then save the document into 
the file system. This triggers your reconciler which keeps both models in sync 
(line 147 in DocumentModel - near 'update'). This makes source model in sync 
but unnecessarily refreshes our model. 

Here is the expected behaviour: we should somehow be able to tell you that our 
model has caused the document change, and that it is in sync - all that is 
needed is to update the source model. Can we do something about it?

To reproduce this problem, create a hello world plug-in, switch to the source 
page (important!), switch back to the 'Extensions' page, change some property 
to cause the editor to be dirty, and save. You will notice how the entire tree 
collapses. This is because saving causes our model to be reloaded 
and 'WORLD_CHANGED' event is fired.

This is not happening if source page is not visited because your model is not 
created.
Fixed by the Text team - thanks Christof and Kai!</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32568" />
    <CreationDate amount="2003-02-22 16:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>B6.3: Classpath container library icons should be consistent with JDT</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When in classpath container dialog, icons used for the entries are not 
consistent with the way they are presented in JDT. In particular, it is not 
immediately obvious if they have source attached or not. These icons have been 
recently made API by JDT and should be used.
Used. The same icons used in Plug-ins view as well.</WithStack>
    <WithOutStack>When in classpath container dialog, icons used for the entries are not 
consistent with the way they are presented in JDT. In particular, it is not 
immediately obvious if they have source attached or not. These icons have been 
recently made API by JDT and should be used.
Used. The same icons used in Plug-ins view as well.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32569" />
    <CreationDate amount="2003-02-22 16:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Classpath container does not show project entries in Package Explorer [package explorer] [render]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>1) Create 'Hello, world' plug-in from a PDE template.</Line>
          <Line>2) Switch to classpath containers in PDE 'Java build path control' Preference</Line>
          <Line>page.</Line>
          <Line>3) Recompute the classpath of the hello world project. It should have</Line>
          <Line>a 'Required plug-in entries' container with external JARs as members'.</Line>
          <Line>4) Import org.eclipse.core.resources as a binary project.</Line>
          <Line>5) Explore the new classpath in Properties-&gt;Libraries tab. The container now</Line>
          <Line>has org.eclipse.core.resources as a project entry.</Line>
          <Line>6) Expand the same entry in the Package Explorer view. It contains all the</Line>
          <Line>external JARs, but not the project entry.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>1) Create 'Hello, world' plug-in from a PDE template.
2) Switch to classpath containers in PDE 'Java build path control' Preference 
page.
3) Recompute the classpath of the hello world project. It should have 
a 'Required plug-in entries' container with external JARs as members'.
4) Import org.eclipse.core.resources as a binary project.
5) Explore the new classpath in Properties-&gt;Libraries tab. The container now 
has org.eclipse.core.resources as a project entry.
6) Expand the same entry in the Package Explorer view. It contains all the 
external JARs, but not the project entry.

Expectation: since project entries are valid for the classpath container, I was 
confused why they are present in the properties but not in the view. For a 
moment, I thought that there was a bug in PDE code.
This is on RC1.
We don't show required projects as well, so changing this now would result in 
an incosistency. The other argument is that this will increase clutter (for the 
required projects case).

This is mostly based on implementation reasons since JFace viewers work better 
when the objects are unique. We can revisit after 2.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>1) Create 'Hello, world' plug-in from a PDE template.
2) Switch to classpath containers in PDE 'Java build path control' Preference 
page.
3) Recompute the classpath of the hello world project. It should have 
a 'Required plug-in entries' container with external JARs as members'.
4) Import org.eclipse.core.resources as a binary project.
5) Explore the new classpath in Properties-&gt;Libraries tab. The container now 
has org.eclipse.core.resources as a project entry.
6) Expand the same entry in the Package Explorer view. It contains all the 
external JARs, but not the project entry.

Expectation: since project entries are valid for the classpath container, I was 
confused why they are present in the properties but not in the view. For a 
moment, I thought that there was a bug in PDE code.
This is on RC1.
We don't show required projects as well, so changing this now would result in 
an incosistency. The other argument is that this will increase clutter (for the 
required projects case).

This is mostly based on implementation reasons since JFace viewers work better 
when the objects are unique. We can revisit after 2.1
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32570" />
    <CreationDate amount="2003-02-22 17:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>E2: Children of 'Information' outline node are missing translations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When 'Information' node in the outline view of the feature editor is expanded, 
all three children have resource keys instead of the values from the message 
file.
Fixed.</WithStack>
    <WithOutStack>When 'Information' node in the outline view of the feature editor is expanded, 
all three children have resource keys instead of the values from the message 
file.
Fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32571" />
    <CreationDate amount="2003-02-22 18:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[painting] Squiggles in Java Editor are on top of text instead of below it</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The Red squiggles that indicate problems are being painted too high by one 
pixel.  If you look closely, you can see that they overlap the font (Courier-
regular-10 on WinXP) by one pixel.  This means that "." and "," are impossible 
to see.  Would it be possible to move the squiggle down one pixel so I can see 
commas and periods, which often contribute to errors.
The problem is that if I'd draw it one pixel lower, the bottom would be 
clipped. Making the squigglies more flat would make them look bad. I'd like to 
see a way to draw before the text is drawn. The same for the print margin as 
this can hide 'l' and 'i' in the text.

Moving to SWT.
For all Font sizes?  If I used a taller font, the available space (font decent) 
would be bigger, wouldn't it?
Assigning to LK.  Since we own StyledText, we should be able to control the 
drawing order or allow them to render the complete line of text anyway they 
want.  Seems wierd to have special support for "drawing before the text is 
drawn".

NOTE:  I just tried Word and they don't obscure the ','.  I think they have a 
bigger line height.
Defer until 2.2.
Courier-10 font has descent of 2 and "short" commas (2 pixels high), so you can 
see the problem.  The amount of overlap does not occur with other fonts due to 
taller descents and/or taller commas.

StyledText could increase its line height by 1 pixel, but there is enough room 
to draw the annotation without the increased line height.


Note, AnnotationPainter does paint "last".  The problem that Kai mentions has 
to do with having an annotation that "spans" over two text lines (i.e., draws 
partly in the top area of the line below it).  

We believe that JFace text can draw annotations outside of a given line if the 
way annotations are drawn is changed.  For example, when you get a paint event, 
first clear the annotation area for the lines that intersect the paint area.  
Then extend the gc clipping rectangle to include the necessary portion of the 
next line (i.e., the area that the annotation spans into).  When you get a 
modelChanged event, redraw the annotation area of the entire line.

Kai, can you try this out?  We looked into it some, but AnnotationPainter seems 
to be doing a lot of extra drawing which makes it hard to understand what's 
going on.
Kai, is there any work you require from SWT to resolve this issue?  Changing 
the Component to "Text" since you currently own the bug report.  However, if 
you think this is something that StyledText needs to change, please reassign 
it to the SWT inbox.
Will be investigated after 3.1
We'd like to get an API (listener?) that allows to paint squiggles, print margin
and similar marks before the actuall text is painted.
Daniel, what would such a listener look like?  Would it it be pre-paint?
The squiggles would get over-written by the selection range that TextLayout 
renders. And also by the highlight-current-line feature, or any text which 
currently paints using a background color.  So, squiggles must come last.
Yes, the idea was some sort of pre-paint. Not sure whether setting the bg style
upon paint would erase the pre-painted squiggles though.
See bug 149229 for some suggested back-end functionality that this bug report
might be able to benefit from.
No work to be done here. Closing PR.

The pre-paint idea is capture in bug 149229

Personally I think TextEditor should use TextStyle#underlineStyle = SWT.UNDERLINE_ERROR.</WithStack>
    <WithOutStack>The Red squiggles that indicate problems are being painted too high by one 
pixel.  If you look closely, you can see that they overlap the font (Courier-
regular-10 on WinXP) by one pixel.  This means that "." and "," are impossible 
to see.  Would it be possible to move the squiggle down one pixel so I can see 
commas and periods, which often contribute to errors.
The problem is that if I'd draw it one pixel lower, the bottom would be 
clipped. Making the squigglies more flat would make them look bad. I'd like to 
see a way to draw before the text is drawn. The same for the print margin as 
this can hide 'l' and 'i' in the text.

Moving to SWT.
For all Font sizes?  If I used a taller font, the available space (font decent) 
would be bigger, wouldn't it?
Assigning to LK.  Since we own StyledText, we should be able to control the 
drawing order or allow them to render the complete line of text anyway they 
want.  Seems wierd to have special support for "drawing before the text is 
drawn".

NOTE:  I just tried Word and they don't obscure the ','.  I think they have a 
bigger line height.
Defer until 2.2.
Courier-10 font has descent of 2 and "short" commas (2 pixels high), so you can 
see the problem.  The amount of overlap does not occur with other fonts due to 
taller descents and/or taller commas.

StyledText could increase its line height by 1 pixel, but there is enough room 
to draw the annotation without the increased line height.


Note, AnnotationPainter does paint "last".  The problem that Kai mentions has 
to do with having an annotation that "spans" over two text lines (i.e., draws 
partly in the top area of the line below it).  

We believe that JFace text can draw annotations outside of a given line if the 
way annotations are drawn is changed.  For example, when you get a paint event, 
first clear the annotation area for the lines that intersect the paint area.  
Then extend the gc clipping rectangle to include the necessary portion of the 
next line (i.e., the area that the annotation spans into).  When you get a 
modelChanged event, redraw the annotation area of the entire line.

Kai, can you try this out?  We looked into it some, but AnnotationPainter seems 
to be doing a lot of extra drawing which makes it hard to understand what's 
going on.
Kai, is there any work you require from SWT to resolve this issue?  Changing 
the Component to "Text" since you currently own the bug report.  However, if 
you think this is something that StyledText needs to change, please reassign 
it to the SWT inbox.
Will be investigated after 3.1
We'd like to get an API (listener?) that allows to paint squiggles, print margin
and similar marks before the actuall text is painted.
Daniel, what would such a listener look like?  Would it it be pre-paint?
The squiggles would get over-written by the selection range that TextLayout 
renders. And also by the highlight-current-line feature, or any text which 
currently paints using a background color.  So, squiggles must come last.
Yes, the idea was some sort of pre-paint. Not sure whether setting the bg style
upon paint would erase the pre-painted squiggles though.
See bug 149229 for some suggested back-end functionality that this bug report
might be able to benefit from.
No work to be done here. Closing PR.

The pre-paint idea is capture in bug 149229

Personally I think TextEditor should use TextStyle#underlineStyle = SWT.UNDERLINE_ERROR.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32572" />
    <CreationDate amount="2003-02-22 18:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="Sun" />
    <op_sys amount="Solaris" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Linked ouput folder changes to non-linked folder</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="15">
        <Lines>
          <Line>1. Checkout a simple project from CVS named "dist" to /dist</Line>
          <Line>2. Checkout a java project from CVS named "dev" to /dev</Line>
          <Line>3. Set dev's output folder:</Line>
          <Line>click on browse:</Line>
          <Line>Create new folder...</Line>
          <Line>Folder name: output</Line>
          <Line>Link to folder on the file system:</Line>
          <Line>point to /dist</Line>
          <Line>4. Looking at the browsing window used in step three the output folder</Line>
          <Line>under /dev contains all same the folders under /dist</Line>
          <Line>5. Run first compile</Line>
          <Line>6. A new file folder on the system /dev/output has been created by eclipse and</Line>
          <Line>contains all the output of the /dev build.</Line>
          <Line>7. The /dist folder remains untouched, nullifiying the use of the link in the</Line>
          <Line>first place.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- "Abort building on build path errors" must be unset;</Line>
          <Line>- "Allow to clean output folders for a full build" must be unset.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- the Java builder will not scrub the contents in SimpleProj;</Line>
          <Line>- but it will copy all contents from JavaProj to SimpleProj;</Line>
          <Line>- the .project will be copied as well, replacing the existing one in</Line>
          <Line>SimpleProj. SimpleProj will become a Java project, if lots of other funny</Line>
          <Line>things will happen (depending on what we have in JavaProject's project</Line>
          <Line>description file).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>A linked folder used for output in a Java project back to being a folder under 
the Java project. Our java projects use runtime configuration files located in 
a cvs managed distribution directory. In other words, our project uses a 
development directory (/dev) and a target distribution directory (/dist). Both 
are cvs managed. We set both as projects in Eclipse with the /dist being a 
simple project and a /dev being a java project. A new folder is created to be 
the output folder in /dev and is linked to the /dist folder. Looking at the 
linked folder shows that is does indeed contain all that exists in /dist. By 
the way, there are no common sub-folders between the dist and dev directories.
After the first compile that generates ouput is run, something strange happens. 
The "linked" output folder now exists as a real folder on the filesystem and 
contains all the compiled class files, and the folder that was linked to 
remains untouched. Unfortunately this makes it so that we cannot use Eclipse 
for compilation.

Here is a 
1. Checkout a simple project from CVS named "dist" to /dist
2. Checkout a java project from CVS named "dev" to /dev
3. Set dev's output folder:
   click on browse:
      Create new folder...
         Folder name: output
         Link to folder on the file system:
              point to /dist
4. Looking at the browsing window used in step three the output folder 
under /dev contains all same the folders under /dist
5. Run first compile
6. A new file folder on the system /dev/output has been created by eclipse and 
contains all the output of the /dev build.
7. The /dist folder remains untouched, nullifiying the use of the link in the 
first place.

This problem is seems to be on Solaris. No error messages or warnings were 
given. The pc seems to be a different story I noticed when I tried it out on 
the PC the directory structure created was something like
\dist\output\output\...  With a nested redunancy.

Solaris is my primary concern though as it is our primary development platform. 
Any help would be greatly appreciated.
That's a strange setup...expected behaviour would be for the contents of 
your /dist project to be removed on a full build as the Java builder would 
scrub the output folder. (unless this is somehow disallowed)

Investigate for RC2.
I couldn't reproduce this problem on Solaris. I found actually a different
problem, because the output directory is pointing to another project's root, and
the Java Builder is scrubing the output directory (then erasing that project's
description file). But the linked folder didn't turn into a standard folder.

For the problem I mentioned not to occur, you should have configured  the Java
compiler to not erase the contents of the output folder (project properties,
Java compiler, "Use project settings", "Allow to clean output folders for a full
build" should be unchecked).	

Are you using automatic building (Preferences -&gt; Workbench -&gt; "Perform build
automatically...")?

Do you have any ant scripts configured as external tool builders?

Can you reproduce this problem for a new Java project?

Thanks.
Another point: which build are you using (Help -&gt; About Eclipse Platform)?
I use 2.1RC1 (Although, I believe this problem also happened with M5 and 
possibly earlier) Automatic building: Yes. Ant Scripts: Yes, but none as 
external tool builders. This behavior manifests independent of the ant scripts. 
Dissallowing the cleaning of the output folder does not seem to make a 
difference. The java project was new as in only the source was brought from CVS.

I ended up using a non-technical solution to this problem. I convinced the 
project managers to have the code compiled to a different directory. We can 
still look at this, but it is not as high of a priority for me. Here is 
something we may want to take a look at though:

I tried creating an empty java project and inserting a single java class and 
ended up with a new problem. One that I vaguely remember seeing on the PC. 

Using the settings above, Create two empty projects:
  1. dist (Simple Project) in ./dist
     also create a ./dist/dummy folder to verify that things are not
     overwritten 
  2. dev (Java Project) in ./dev
     Set the output folder to a new folder "output" which is linked to
     the filesystem directory ./dist
  
Now create a HelloWorld class in project dev, and compile (a refresh may be 
neeeded). ./dist/dummy remains untouched. The HelloWorld class file was also 
correctly in ./dist. The strange thing was there was a new directory tree 
under ./dist. looked like this:
./dist/output/dummy

I thought that was pretty wierd, and it looks like the cause of it is that the 
simple project dist was converted to a Java project. Its output directory was 
set to /dist/output just like the original dev project. Although in this 
project, the output folder was a filesystem folder. Even though the do not 
erase output setting was set the project settings of dev seem to have been 
transferred to dist. I repeated this twice to make sure I was not doing 
something wrong. I remember something similar to this happening on the PC.

This second scenario I could reproduce on Windows XP:

You must ensure that the following options are configured as follows for the 
Java compiler (Preferences-&gt;Java-&gt;Compiler-&gt;Build Path):
- "Abort building on build path errors" must be unset;
- "Allow to clean output folders for a full build" must be unset.

And when creating the Java project (JavaProj), use the project as the source 
container and for the output create a new linked folder "output" pointing to an 
existing simple project (SimpleProj).

Consequences:
- the Java builder will not scrub the contents in SimpleProj;
- but it will copy all contents from JavaProj to SimpleProj;
- the .project will be copied as well, replacing the existing one in 
SimpleProj. SimpleProj will become a Java project, if lots of other funny 
things will happen (depending on what we have in JavaProject's project 
description file).

To avoid this, the project JavaProject should use source folders (instead of 
project root as the source root), or the output should point to a subdir of the 
SimpleProject (instead of SimpleProject's root).

But again, I still can't see a linked folder become an ordinary folder as 
originally reported. 
Agreed, the linked folder to real folder conversion is too difficult to 
reproduce to worry about. I can only reproduce it using new projects with the 
source code from checked out from cvs. (note project information was not stored 
in cvs) Another, more simple, project setup should be used. 

As for a java project's destination to the root of a simple project, another 
solution would be to add a ".project" and ".classpath" to the filtered 
resources not copied to the build directory. Although this is a very strange 
setup, and probably does not warrant making it the default. 

When a destination folder is attemted to be linked to a Java project the 
warning is given: "Location ... may overlap the location of a another resource. 
This is permitted, but duplication can have unexpected side-effects." This 
warning is only displayed (as of 2.1RC1) when the target overlaps a java 
project and not a simple project. We should probably also show this warning for 
a simple project.

Thanks for your help!
Sorry, but I couldn't reproduce it even when sharing both projects using CVS.

The behaviour described in comment 5, despite being strange, is expected, and 
that setup (output pointing to another project's root) should be avoided, 
because it destroys the target project's description file (the output should 
point to a subdirectory of the "dist" project instead).

Regarding the message "Location XXX may overlap the location of a another 
resource. This is permitted, but duplication can have unexpected side-
effects.", it should be produced whenever you create a new linked resource 
whose target location overlaps any other linked resource's target location in 
the same workspace, regardless the nature of the projects envolved. If you have 
found any scenario where this is not happening, please open another PR against 
platform/core describing a reproducible test case. Thanks.

I recommend closing this bug as works-for-me.
Closing bug as suggested.  Please reopen or create a new bug report if you find
reproducible steps.</WithStack>
    <WithOutStack>A linked folder used for output in a Java project back to being a folder under 
the Java project. Our java projects use runtime configuration files located in 
a cvs managed distribution directory. In other words, our project uses a 
development directory (/dev) and a target distribution directory (/dist). Both 
are cvs managed. We set both as projects in Eclipse with the /dist being a 
simple project and a /dev being a java project. A new folder is created to be 
the output folder in /dev and is linked to the /dist folder. Looking at the 
linked folder shows that is does indeed contain all that exists in /dist. By 
the way, there are no common sub-folders between the dist and dev directories.
After the first compile that generates ouput is run, something strange happens. 
The "linked" output folder now exists as a real folder on the filesystem and 
contains all the compiled class files, and the folder that was linked to 
remains untouched. Unfortunately this makes it so that we cannot use Eclipse 
for compilation.

Here is a 
1. Checkout a simple project from CVS named "dist" to /dist
2. Checkout a java project from CVS named "dev" to /dev
3. Set dev's output folder:
   click on browse:
      Create new folder...
         Folder name: output
         Link to folder on the file system:
              point to /dist
4. Looking at the browsing window used in step three the output folder 
under /dev contains all same the folders under /dist
5. Run first compile
6. A new file folder on the system /dev/output has been created by eclipse and 
contains all the output of the /dev build.
7. The /dist folder remains untouched, nullifiying the use of the link in the 
first place.

This problem is seems to be on Solaris. No error messages or warnings were 
given. The pc seems to be a different story I noticed when I tried it out on 
the PC the directory structure created was something like
\dist\output\output\...  With a nested redunancy.

Solaris is my primary concern though as it is our primary development platform. 
Any help would be greatly appreciated.
That's a strange setup...expected behaviour would be for the contents of 
your /dist project to be removed on a full build as the Java builder would 
scrub the output folder. (unless this is somehow disallowed)

Investigate for RC2.
I couldn't reproduce this problem on Solaris. I found actually a different
problem, because the output directory is pointing to another project's root, and
the Java Builder is scrubing the output directory (then erasing that project's
description file). But the linked folder didn't turn into a standard folder.

For the problem I mentioned not to occur, you should have configured  the Java
compiler to not erase the contents of the output folder (project properties,
Java compiler, "Use project settings", "Allow to clean output folders for a full
build" should be unchecked).	

Are you using automatic building (Preferences -&gt; Workbench -&gt; "Perform build
automatically...")?

Do you have any ant scripts configured as external tool builders?

Can you reproduce this problem for a new Java project?

Thanks.
Another point: which build are you using (Help -&gt; About Eclipse Platform)?
I use 2.1RC1 (Although, I believe this problem also happened with M5 and 
possibly earlier) Automatic building: Yes. Ant Scripts: Yes, but none as 
external tool builders. This behavior manifests independent of the ant scripts. 
Dissallowing the cleaning of the output folder does not seem to make a 
difference. The java project was new as in only the source was brought from CVS.

I ended up using a non-technical solution to this problem. I convinced the 
project managers to have the code compiled to a different directory. We can 
still look at this, but it is not as high of a priority for me. Here is 
something we may want to take a look at though:

I tried creating an empty java project and inserting a single java class and 
ended up with a new problem. One that I vaguely remember seeing on the PC. 

Using the settings above, Create two empty projects:
  1. dist (Simple Project) in ./dist
     also create a ./dist/dummy folder to verify that things are not
     overwritten 
  2. dev (Java Project) in ./dev
     Set the output folder to a new folder "output" which is linked to
     the filesystem directory ./dist
  
Now create a HelloWorld class in project dev, and compile (a refresh may be 
neeeded). ./dist/dummy remains untouched. The HelloWorld class file was also 
correctly in ./dist. The strange thing was there was a new directory tree 
under ./dist. looked like this:
./dist/output/dummy

I thought that was pretty wierd, and it looks like the cause of it is that the 
simple project dist was converted to a Java project. Its output directory was 
set to /dist/output just like the original dev project. Although in this 
project, the output folder was a filesystem folder. Even though the do not 
erase output setting was set the project settings of dev seem to have been 
transferred to dist. I repeated this twice to make sure I was not doing 
something wrong. I remember something similar to this happening on the PC.

This second scenario I could reproduce on Windows XP:

You must ensure that the following options are configured as follows for the 
Java compiler (Preferences-&gt;Java-&gt;Compiler-&gt;Build Path):
- "Abort building on build path errors" must be unset;
- "Allow to clean output folders for a full build" must be unset.

And when creating the Java project (JavaProj), use the project as the source 
container and for the output create a new linked folder "output" pointing to an 
existing simple project (SimpleProj).

Consequences:
- the Java builder will not scrub the contents in SimpleProj;
- but it will copy all contents from JavaProj to SimpleProj;
- the .project will be copied as well, replacing the existing one in 
SimpleProj. SimpleProj will become a Java project, if lots of other funny 
things will happen (depending on what we have in JavaProject's project 
description file).

To avoid this, the project JavaProject should use source folders (instead of 
project root as the source root), or the output should point to a subdir of the 
SimpleProject (instead of SimpleProject's root).

But again, I still can't see a linked folder become an ordinary folder as 
originally reported. 
Agreed, the linked folder to real folder conversion is too difficult to 
reproduce to worry about. I can only reproduce it using new projects with the 
source code from checked out from cvs. (note project information was not stored 
in cvs) Another, more simple, project setup should be used. 

As for a java project's destination to the root of a simple project, another 
solution would be to add a ".project" and ".classpath" to the filtered 
resources not copied to the build directory. Although this is a very strange 
setup, and probably does not warrant making it the default. 

When a destination folder is attemted to be linked to a Java project the 
warning is given: "Location ... may overlap the location of a another resource. 
This is permitted, but duplication can have unexpected side-effects." This 
warning is only displayed (as of 2.1RC1) when the target overlaps a java 
project and not a simple project. We should probably also show this warning for 
a simple project.

Thanks for your help!
Sorry, but I couldn't reproduce it even when sharing both projects using CVS.

The behaviour described in comment 5, despite being strange, is expected, and 
that setup (output pointing to another project's root) should be avoided, 
because it destroys the target project's description file (the output should 
point to a subdirectory of the "dist" project instead).

Regarding the message "Location XXX may overlap the location of a another 
resource. This is permitted, but duplication can have unexpected side-
effects.", it should be produced whenever you create a new linked resource 
whose target location overlaps any other linked resource's target location in 
the same workspace, regardless the nature of the projects envolved. If you have 
found any scenario where this is not happening, please open another PR against 
platform/core describing a reproducible test case. Thanks.

I recommend closing this bug as works-for-me.
Closing bug as suggested.  Please reopen or create a new bug report if you find
reproducible steps.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32573" />
    <CreationDate amount="2003-02-22 19:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add properties item at the end of the context menu for all text editors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>This is a request to add a "Properties" item at the end of the context menu 
for all text editors (plain text, java comp unit, etc.). Especially now that 
back-linking is disabled by default, it's harder to get the properties of the 
current file (for example to see the full path, modified date, cvs status, and 
size).
Back linking is enabled again and it is easy to get at the editor input object. 
Just adding Properties... would be inconsistent, why not add the team actions 
that operate on the editor input as well, etc.
No context menu yet but, File &gt; Properties is enabled and Alt+Enter works too.</WithStack>
    <WithOutStack>This is a request to add a "Properties" item at the end of the context menu 
for all text editors (plain text, java comp unit, etc.). Especially now that 
back-linking is disabled by default, it's harder to get the properties of the 
current file (for example to see the full path, modified date, cvs status, and 
size).
Back linking is enabled again and it is easy to get at the editor input object. 
Just adding Properties... would be inconsistent, why not add the team actions 
that operate on the editor input as well, etc.
No context menu yet but, File &gt; Properties is enabled and Alt+Enter works too.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32574" />
    <CreationDate amount="2003-02-22 19:46:00 -0500" />
    <DupId amount="34937" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>F2.6: Site builder leaves files behind in the related projects</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When referenced features and plug-ins are built using the Site builder, the 
build files (build.xml etc.) are not cleaned up.

Expectation: the build should be performed and no new files should be 
introduced in other projects.
Approved for fixing in RC3
This is the same problem as 34937

*** This bug has been marked as a duplicate of 34937 ***</WithStack>
    <WithOutStack>When referenced features and plug-ins are built using the Site builder, the 
build files (build.xml etc.) are not cleaned up.

Expectation: the build should be performed and no new files should be 
introduced in other projects.
Approved for fixing in RC3
This is the same problem as 34937

*** This bug has been marked as a duplicate of 34937 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32575" />
    <CreationDate amount="2003-02-22 20:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>F2.6: Update site build log could be more informative</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>At the moment, build log does not contain useful information. It should show 
the actual files compiled, tasks performed etc.
No such log is generated anymore, as information captured through the listener 
are clearly not that informative.</WithStack>
    <WithOutStack>At the moment, build log does not contain useful information. It should show 
the actual files compiled, tasks performed etc.
No such log is generated anymore, as information captured through the listener 
are clearly not that informative.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32576" />
    <CreationDate amount="2003-02-22 20:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>C4.1: Compute dependency extent doesn't work for external plug-ins</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When all the required plug-ins are external (as opposed to binary) compute 
dependency extent finds only extension points (no code). The same function 
works when binary projects are used for self-hosting.
Fixed.
*** Bug 32877 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>When all the required plug-ins are external (as opposed to binary) compute 
dependency extent finds only extension points (no code). The same function 
works when binary projects are used for self-hosting.
Fixed.
*** Bug 32877 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32577" />
    <CreationDate amount="2003-02-22 21:04:00 -0500" />
    <DupId amount="32506" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing message from org.eclipse.core.internal.utils.messages</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>RC1
I am getting an error (I haven't figured out the root of that problem) but my 
log is now full of:
!ENTRY org.eclipse.core.resources 2 567 Feb 21, 2003 09:55:49.390
!MESSAGE Missing message: projectDescriptionReader.failureReadingProjectDesc  
in: org.eclipse.core.internal.utils.messages
Are you sure that these messages came from using RC1 and not the builds earlier 
in the day? 

(these missing messages were one of the problems addressed by bug 32506)

Sorry about that.

*** This bug has been marked as a duplicate of 32506 ***</WithStack>
    <WithOutStack>RC1
I am getting an error (I haven't figured out the root of that problem) but my 
log is now full of:
!ENTRY org.eclipse.core.resources 2 567 Feb 21, 2003 09:55:49.390
!MESSAGE Missing message: projectDescriptionReader.failureReadingProjectDesc  
in: org.eclipse.core.internal.utils.messages
Are you sure that these messages came from using RC1 and not the builds earlier 
in the day? 

(these missing messages were one of the problems addressed by bug 32506)

Sorry about that.

*** This bug has been marked as a duplicate of 32506 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32578" />
    <CreationDate amount="2003-02-22 23:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="UI" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>packages with only *.aj files misdisplayed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If there's a package with only *.aj files (in an AspectJ project), the Java-
perspective package explorer shows it as a file folder, not as a Java package.
Moved this to "enhaancement" category - the Package Explorer View (in fact, any 
view other than the Outline!) is not aspect-aware yet. High priority item post 
0.6.1 release.

*** Bug 40758 has been marked as a duplicate of this bug. ***
Problem solved. The build configurator plugin I am working on contains an 
image decorator that cares about this problem.
Closing according to Luzius' fix.</WithStack>
    <WithOutStack>If there's a package with only *.aj files (in an AspectJ project), the Java-
perspective package explorer shows it as a file folder, not as a Java package.
Moved this to "enhaancement" category - the Package Explorer View (in fact, any 
view other than the Outline!) is not aspect-aware yet. High priority item post 
0.6.1 release.

*** Bug 40758 has been marked as a duplicate of this bug. ***
Problem solved. The build configurator plugin I am working on contains an 
image decorator that cares about this problem.
Closing according to Luzius' fix.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32579" />
    <CreationDate amount="2003-02-23 00:58:00 -0500" />
    <DupId amount="31398" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>abstract protected method can't be overridden</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In MIDP 1.0 in class javax.microedition.lcdui.Canvas (a subclass of javax.microedition.lcdui.Displayable) there is a method called paint() which is abstract and protected.  A subclass of Canvas in another package should be allowed to override this method.  This is not allowed.  I created a class called GameInfoScreen that subclasses Canvas and I get the message from eclipse build M5 "This class must implement the inherited abstract method Displayable.paint(Graphics), but cannot override it since it is not visible from GameInfoScreen.  Either make the type abstract or make the inherited method visible."  The Displayable class does not have a method called paint() but the subclass of it Canvas does.  I have no problem compiling my code using Jikes so eclipse is not identifying a relevant problem.
Assuming this was not on latest integration build, this is already resolved.

*** This bug has been marked as a duplicate of 31398 ***</WithStack>
    <WithOutStack>In MIDP 1.0 in class javax.microedition.lcdui.Canvas (a subclass of javax.microedition.lcdui.Displayable) there is a method called paint() which is abstract and protected.  A subclass of Canvas in another package should be allowed to override this method.  This is not allowed.  I created a class called GameInfoScreen that subclasses Canvas and I get the message from eclipse build M5 "This class must implement the inherited abstract method Displayable.paint(Graphics), but cannot override it since it is not visible from GameInfoScreen.  Either make the type abstract or make the inherited method visible."  The Displayable class does not have a method called paint() but the subclass of it Canvas does.  I have no problem compiling my code using Jikes so eclipse is not identifying a relevant problem.
Assuming this was not on latest integration build, this is already resolved.

*** This bug has been marked as a duplicate of 31398 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32580" />
    <CreationDate amount="2003-02-23 00:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>diff tool zip doesn't contain full source</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I downloaded the diff tool (from the jdt development resources page) and tried
to build it from the source in diffsrc.zip. However these packages are missing:

com.example.location
com.example.util
My build scripts must have missed those.  I will rebuild today.
The new build has been posted.  It includes _all_ of the source.  Thanks for the
bug report!</WithStack>
    <WithOutStack>I downloaded the diff tool (from the jdt development resources page) and tried
to build it from the source in diffsrc.zip. However these packages are missing:

com.example.location
com.example.util
My build scripts must have missed those.  I will rebuild today.
The new build has been posted.  It includes _all_ of the source.  Thanks for the
bug report!</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32581" />
    <CreationDate amount="2003-02-23 03:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Hiding real resources from user when sysnchronizing??</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>it will be good that when i use team development that i can hide the real
resources of my model , and the user sees the model objects not the real
resources when he synchronizes with the repository

for example:
in the case of the jdt , the Synchronize view will shows the package hierarchy 
like the package explorer view ,
instead of showing the real directory sturcture like what's happening
now....
is it possible that i as a plugin developer contribute by something that make
that mapping (ViewPart or ContentProvider and LabelProvider or anything) so
as the user always see consistent views that represents his model
elements....
Sonia, there should be an old bug report on this subject (perhaps by Erich).

This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>it will be good that when i use team development that i can hide the real
resources of my model , and the user sees the model objects not the real
resources when he synchronizes with the repository

for example:
in the case of the jdt , the Synchronize view will shows the package hierarchy 
like the package explorer view ,
instead of showing the real directory sturcture like what's happening
now....
is it possible that i as a plugin developer contribute by something that make
that mapping (ViewPart or ContentProvider and LabelProvider or anything) so
as the user always see consistent views that represents his model
elements....
Sonia, there should be an old bug report on this subject (perhaps by Erich).

This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32582" />
    <CreationDate amount="2003-02-23 03:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>logical to physical mapping problem , 1 model element = 2 Files problem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>In my model some of my objects are persistened in 2
different files where a primary file contains objects that's linked to
other objects in the secondry file (using emf) and when i change somethings
in the primary file , the secondry file is changed also...

what's the best practice for my work when i deal with Team enviroment , can
i hide this from the user so the user is not aware that he's dealing with 2
files, and he feels that he's dealing only with 1 model object ????

for example if there's a team provider plugin makes checkin and checkout 
operations,the scenario that it asks the selection provider for the selected 
resources , and in my case the selected model objects will adapts to IFile to 
refer to the primary file , but i want that when i'm asked for the selected 
resources that each model object will adapts to 2 IFiles (primary and secondry)
how can this happened so that the 2 files are checkedin and out at the same time
thanks..
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>In my model some of my objects are persistened in 2
different files where a primary file contains objects that's linked to
other objects in the secondry file (using emf) and when i change somethings
in the primary file , the secondry file is changed also...

what's the best practice for my work when i deal with Team enviroment , can
i hide this from the user so the user is not aware that he's dealing with 2
files, and he feels that he's dealing only with 1 model object ????

for example if there's a team provider plugin makes checkin and checkout 
operations,the scenario that it asks the selection provider for the selected 
resources , and in my case the selected model objects will adapts to IFile to 
refer to the primary file , but i want that when i'm asked for the selected 
resources that each model object will adapts to 2 IFiles (primary and secondry)
how can this happened so that the 2 files are checkedin and out at the same time
thanks..
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32583" />
    <CreationDate amount="2003-02-23 05:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Please switch on Bugzilla voting for CDT bugs / feature requests</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Bugzilla voting has just been switched on for a couple of bug categories (bug
12115).  CDT is not one of them however.

I want to be able to vote for CDT issues as well.
This decision needs to be made by the CDT project commiters and their PMC. 
I will forward the request to the list and reassign this to the PMC
to get its attention
Voting has been switched on.  Enjoy :-).</WithStack>
    <WithOutStack>Bugzilla voting has just been switched on for a couple of bug categories (bug
12115).  CDT is not one of them however.

I want to be able to vote for CDT issues as well.
This decision needs to be made by the CDT project commiters and their PMC. 
I will forward the request to the list and reassign this to the PMC
to get its attention
Voting has been switched on.  Enjoy :-).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32584" />
    <CreationDate amount="2003-02-23 07:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Menu Problems (org.eclipse.ui.actionSets)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>The black arrow and/or label from the menu item to its submenus does not
always appear in the UI, and the submenu does not open when dragging the
mouse.
Same problem also exists for toolbar icons.
The problem seem to cease after changing to some other perspective and
back.

In addition, there is a gray dot to the left of out topmost menu item.

Here is a snippet of the plugin.xml file:

 &lt;extension
         point="org.eclipse.ui.actionSets"&gt;
      &lt;actionSet
            label="%ACTION_SET_NAME"
            visible="false"
            id="myplugin.actionSets"&gt;
         &lt;menu
               label="%MY_MENU_LABEL"
               path="MYMenu"
               id="myplugin.actionSets.menu"&gt;
            &lt;separator
                  name="slot1"&gt;
            &lt;/separator&gt;
            &lt;separator
                  name="slot2"&gt;
            &lt;/separator&gt;
            &lt;separator
                  name="slot3"&gt;
            &lt;/separator&gt;
         &lt;/menu&gt;
         &lt;action
               label="%LABEL1"
               icon="icons/Action1.gif"
               tooltip="%ACTION1_TOOL_TIP"
               class="myplugin.actions.Action1Delegate"
               menubarPath="myplugin.actionSets.menu/slot3"
               toolbarPath="MYMain"
               id="myplugin.Action1"&gt;
         &lt;/action&gt;
         &lt;action
               label="%LABEL2"
               icon="icons/Action2.gif"
               tooltip="%ACTION2_TOOL_TIP"
               class="myplugin.actions.Action2Delegate"
               menubarPath="myplugin.actionSets.menu/slot2"
               toolbarPath="MYMain"
               id="myplugin.Action2"&gt;
         &lt;/action&gt;
         &lt;action
               label="%LABEL3"
               icon="icons/Action3.gif"
               tooltip="%ACTION3_TOOL_TIP"
           class="myplugin.actions.Action3Delegate"
               menubarPath="myplugin.actionSets.menu/slot2"
               toolbarPath="MYMain"
               id="myplugin.Action3"&gt;
         &lt;/action&gt;
         &lt;action
               label="%LABEL4"
               icon="icons/Actoin4.gif"
               tooltip="%ACTION4_TOOL_TIP"
               class="myplugin.actions.Action4Delegate"
               menubarPath="myplugin.actionSets.menu/slot1"
               toolbarPath="MYMain"
               id="myplugin.Action4"&gt;
         &lt;/action&gt;
         &lt;action
               label="%BUILDER_WIZARD"
               icon="icons/wiz_small.gif"
               tooltip="%BUILDER_TOOL_TIP"
               class="myplugin.actions.WizardLaucherActionDelegate"
               toolbarPath="MYMain"
               id="myplugin.ProjectWizard"&gt;
         &lt;/action&gt;
      &lt;/actionSet&gt;
   &lt;/extension&gt;
Could this be caused by the recent changes to Action?

What build?
Version: 2.0.2.1
Build id: 200211071448
Can you reproduce this problem using the latest integration build (currently, 
that is 2.1 RC1, 200302211557) and if so, can you list the steps to reproduce 
it?

Starting from a new 2.0.2.1 installation, can you reproduce this problem and if 
so, can you list the steps?

Since we are getting so close to the end of our release cycle for version 2.1, 
I do not have enough time currently to dig into this to come up with a 
reproducable test case. If you can provide us with these steps (especially 
using the latest build) this week, we may be able to provide a fix for it for 
2.1 RC2
I've found the problem - it was in my code. Sorry and thanks.</WithStack>
    <WithOutStack>The black arrow and/or label from the menu item to its submenus does not
always appear in the UI, and the submenu does not open when dragging the
mouse.
Same problem also exists for toolbar icons.
The problem seem to cease after changing to some other perspective and
back.

In addition, there is a gray dot to the left of out topmost menu item.

Here is a snippet of the plugin.xml file:

 &lt;extension
         point="org.eclipse.ui.actionSets"&gt;
      &lt;actionSet
            label="%ACTION_SET_NAME"
            visible="false"
            id="myplugin.actionSets"&gt;
         &lt;menu
               label="%MY_MENU_LABEL"
               path="MYMenu"
               id="myplugin.actionSets.menu"&gt;
            &lt;separator
                  name="slot1"&gt;
            &lt;/separator&gt;
            &lt;separator
                  name="slot2"&gt;
            &lt;/separator&gt;
            &lt;separator
                  name="slot3"&gt;
            &lt;/separator&gt;
         &lt;/menu&gt;
         &lt;action
               label="%LABEL1"
               icon="icons/Action1.gif"
               tooltip="%ACTION1_TOOL_TIP"
               class="myplugin.actions.Action1Delegate"
               menubarPath="myplugin.actionSets.menu/slot3"
               toolbarPath="MYMain"
               id="myplugin.Action1"&gt;
         &lt;/action&gt;
         &lt;action
               label="%LABEL2"
               icon="icons/Action2.gif"
               tooltip="%ACTION2_TOOL_TIP"
               class="myplugin.actions.Action2Delegate"
               menubarPath="myplugin.actionSets.menu/slot2"
               toolbarPath="MYMain"
               id="myplugin.Action2"&gt;
         &lt;/action&gt;
         &lt;action
               label="%LABEL3"
               icon="icons/Action3.gif"
               tooltip="%ACTION3_TOOL_TIP"
           class="myplugin.actions.Action3Delegate"
               menubarPath="myplugin.actionSets.menu/slot2"
               toolbarPath="MYMain"
               id="myplugin.Action3"&gt;
         &lt;/action&gt;
         &lt;action
               label="%LABEL4"
               icon="icons/Actoin4.gif"
               tooltip="%ACTION4_TOOL_TIP"
               class="myplugin.actions.Action4Delegate"
               menubarPath="myplugin.actionSets.menu/slot1"
               toolbarPath="MYMain"
               id="myplugin.Action4"&gt;
         &lt;/action&gt;
         &lt;action
               label="%BUILDER_WIZARD"
               icon="icons/wiz_small.gif"
               tooltip="%BUILDER_TOOL_TIP"
               class="myplugin.actions.WizardLaucherActionDelegate"
               toolbarPath="MYMain"
               id="myplugin.ProjectWizard"&gt;
         &lt;/action&gt;
      &lt;/actionSet&gt;
   &lt;/extension&gt;
Could this be caused by the recent changes to Action?

What build?
Version: 2.0.2.1
Build id: 200211071448
Can you reproduce this problem using the latest integration build (currently, 
that is 2.1 RC1, 200302211557) and if so, can you list the steps to reproduce 
it?

Starting from a new 2.0.2.1 installation, can you reproduce this problem and if 
so, can you list the steps?

Since we are getting so close to the end of our release cycle for version 2.1, 
I do not have enough time currently to dig into this to come up with a 
reproducable test case. If you can provide us with these steps (especially 
using the latest build) this week, we may be able to provide a fix for it for 
2.1 RC2
I've found the problem - it was in my code. Sorry and thanks.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32585" />
    <CreationDate amount="2003-02-23 08:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>Organize Import Second Guessing Itself (regression!)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="class">
        <location start="17" end="73" />
        <code>public class Outer{
   public static class Inner{
   }
}</code>
      </source_code>
      <source_code type="import">
        <location start="96" end="116" />
        <code>import Outer.Inner;</code>
      </source_code>
      <source_code type="class">
        <location start="117" end="191" />
        <code>public class Client{
   {
      Object innerInstance = new Inner();
   }
}</code>
      </source_code>
      <source_code type="package">
        <location start="1109" end="1121" />
        <code>package com;</code>
      </source_code>
      <source_code type="class">
        <location start="1122" end="1190" />
        <code>public class Outer{
  public static class Inner extends Outer{
  }
}</code>
      </source_code>
      <source_code type="package">
        <location start="1214" end="1226" />
        <code>package org;</code>
      </source_code>
      <source_code type="class">
        <location start="1303" end="1364" />
        <code>public class Client{
  public class Save extends Inner{
  }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>file:Outer.java

public class Outer{
   public static class Inner{
   }
}
----
file:Client.java

import Outer.Inner;
public class Client{
   {
      Object innerInstance = new Inner();
   }
}

In build rc1 (I20030221-win32), 'Organize Imports' command flips between adding
and removing the statement 'import Outer.Inner;'  With the import statement
removed, there is no 'Inner' class in scope, and therefore (correctly) causes a
compiler error.

This has been an issue in the past (I don't recall which version), but was
working correctly in the I20030211-win32 build (among others), simply adding the
import statement and leaving it be on subsequent organize import invocations.

Thanks in advance
Martin, can you please comment on this.
seems to be a bug in organize import. Suggest to fix this for RC2
Sorry can't reproduce a 'flipping'.

Both classes are in the default package.
I do an 'Organize import' on 'Client.java'; the import is kept, as required.
Can you give me more details?
sorry... I lied in the example (over simplified)... the following should
demonstrate the problem

**File: Outer.java**
package com;
public class Outer{
  public static class Inner extends Outer{
  }
}

**File: Client.java**
package org;

import cwillu.client.Outer.Inner;  //  &lt;-- this line will flip in and out

public class Client{
  public class Save extends Inner{
  }
}
fixed &gt; 20030302</WithStack>
    <WithOutStack>file:Outer.java

public class Outer{
   public static class Inner{
   }
}
----
file:Client.java

import Outer.Inner;
public class Client{
   {
      Object innerInstance = new Inner();
   }
}

In build rc1 (I20030221-win32), 'Organize Imports' command flips between adding
and removing the statement 'import Outer.Inner;'  With the import statement
removed, there is no 'Inner' class in scope, and therefore (correctly) causes a
compiler error.

This has been an issue in the past (I don't recall which version), but was
working correctly in the I20030211-win32 build (among others), simply adding the
import statement and leaving it be on subsequent organize import invocations.

Thanks in advance
Martin, can you please comment on this.
seems to be a bug in organize import. Suggest to fix this for RC2
Sorry can't reproduce a 'flipping'.

Both classes are in the default package.
I do an 'Organize import' on 'Client.java'; the import is kept, as required.
Can you give me more details?
sorry... I lied in the example (over simplified)... the following should
demonstrate the problem

**File: Outer.java**
package com;
public class Outer{
  public static class Inner extends Outer{
  }
}

**File: Client.java**
package org;

import cwillu.client.Outer.Inner;  //  &lt;-- this line will flip in and out

public class Client{
  public class Save extends Inner{
  }
}
fixed &gt; 20030302</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32586" />
    <CreationDate amount="2003-02-23 09:35:00 -0500" />
    <DupId amount="33161" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Key Bindings] Keys, commands and conflicts</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>It seems to be not possible to determine how to resolve a conflict or if you 
are creating one when assigning a key binding.

Steps:
Selected the command "Show in Package Explorer" for the Standard configuration.
&lt;no key sequences assigned&gt;
Set scope to global
Configuration standard
Selected F9 for key sequence

I have the FollowHyperLink assigned to F9 previously and this shows in the 
commands listing.
I click add.
There is no indication of conflict and it looks like I have been successful in 
setting F9 for Show in Package Explorer (and removing it from FollowHyperLink).
I try to use the Key...nothing.
Back into the preferences
Select Show In Package Explorer

Now it shows a conflict but I do not have indication of with what?

In the commands listing it has &lt;undefined&gt;&lt;conflict&gt;?

How do I figure out what the conflict is with?

Clicking remove for this command (Show In Package Explorer), leaves me with 
nothing showing for F9
this was a major problem in RC1. your test case works fine now, and there are 
no conflicts in the factory ship (and you can't introduce them in the 
preference page either). 

'proper' conflicts are still possible (two third-party plugins registering the 
same key for the same scope and configuration, and i am adding a duplicate 
notation to follow resolution of conflicts in the UI

*** This bug has been marked as a duplicate of 33161 ***</WithStack>
    <WithOutStack>It seems to be not possible to determine how to resolve a conflict or if you 
are creating one when assigning a key binding.

Steps:
Selected the command "Show in Package Explorer" for the Standard configuration.
&lt;no key sequences assigned&gt;
Set scope to global
Configuration standard
Selected F9 for key sequence

I have the FollowHyperLink assigned to F9 previously and this shows in the 
commands listing.
I click add.
There is no indication of conflict and it looks like I have been successful in 
setting F9 for Show in Package Explorer (and removing it from FollowHyperLink).
I try to use the Key...nothing.
Back into the preferences
Select Show In Package Explorer

Now it shows a conflict but I do not have indication of with what?

In the commands listing it has &lt;undefined&gt;&lt;conflict&gt;?

How do I figure out what the conflict is with?

Clicking remove for this command (Show In Package Explorer), leaves me with 
nothing showing for F9
this was a major problem in RC1. your test case works fine now, and there are 
no conflicts in the factory ship (and you can't introduce them in the 
preference page either). 

'proper' conflicts are still possible (two third-party plugins registering the 
same key for the same scope and configuration, and i am adding a duplicate 
notation to follow resolution of conflicts in the UI

*** This bug has been marked as a duplicate of 33161 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32587" />
    <CreationDate amount="2003-02-23 10:28:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>AntView actions are incorrecly enabled --&gt; NPE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340333737">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.externaltools.internal.ant.view.actions.EditLaunchConfigurationAction.run(EditLaunchConfigurationAction.java:46)</Frame>
          <Frame depth="1">org.eclipse.jface.action.Action.runWithEvent(Action.java:841)</Frame>
          <Frame depth="2">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="3">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="4">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="5">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1775)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1483)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1271)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)</Frame>
          <Frame depth="12">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="13">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="15">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="16">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="17">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="20">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>It appears that the action enabled states are not set correctly for the 
AntView.
For example, in the context menu "Properties" is enabled when nothing is in 
the view; Results in:

java.lang.NullPointerException
	at 
org.eclipse.ui.externaltools.internal.ant.view.actions.EditLaunchConfigurationA
ction.run(EditLaunchConfigurationAction.java:46)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:841)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1775)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1483)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1271)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
Fixed in AntView.
Please verify.
Verified.</WithStack>
    <WithOutStack>It appears that the action enabled states are not set correctly for the 
AntView.
For example, in the context menu "Properties" is enabled when nothing is in 
the view; Results in:


Fixed in AntView.
Please verify.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32588" />
    <CreationDate amount="2003-02-23 12:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.0.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows All" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Error saving changed source files; all files in project deleted</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340333747">
        <Exception>org.eclipse.core.internal.resources.ResourceException</Exception>
        <Reason>Resource /A3/src does 
not exist.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.resources.Resource.checkExists(Resource.java:179)</Frame>
          <Frame depth="1">org.eclipse.core.internal.resources.Resource.accept(Resource.java:57)</Frame>
          <Frame depth="2">org.eclipse.core.internal.resources.Resource.accept(Resource.java:40)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.builder.BatchImageBuilder.copyExtraResourcesBack(BatchImageBuilder.java:116)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.builder.BatchImageBuilder.scrubOutputFolder(BatchImageBuilder.java:88)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:33)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:170)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:103)</Frame>
          <Frame depth="8">org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:392)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:839)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java:416)</Frame>
          <Frame depth="11">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:120)</Frame>
          <Frame depth="12">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:176)</Frame>
          <Frame depth="13">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:186)</Frame>
          <Frame depth="14">org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:146)</Frame>
          <Frame depth="15">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:839)</Frame>
          <Frame depth="16">org.eclipse.core.runtime.Platform.run(Platform.java:416)</Frame>
          <Frame depth="17">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:160)</Frame>
          <Frame depth="18">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:211)</Frame>
          <Frame depth="19">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:745)</Frame>
          <Frame depth="20">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1383)</Frame>
          <Frame depth="21">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:78)</Frame>
          <Frame depth="22">org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation(AbstractTextEditor.java:2329)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperation(CompilationUnitEditor.java:664)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:712)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.EditorManager$11.run(EditorManager.java:1004)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:873)</Frame>
          <Frame depth="27">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:299)</Frame>
          <Frame depth="28">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)</Frame>
          <Frame depth="29">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:394)</Frame>
          <Frame depth="30">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:66)</Frame>
          <Frame depth="31">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:391)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1126)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation(EditorManager.java:879)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.EditorManager.saveEditor(EditorManager.java:1009)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.WorkbenchPage.saveEditor(WorkbenchPage.java:1990)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.SaveAction.run(SaveAction.java:32)</Frame>
          <Frame depth="37">org.eclipse.jface.action.Action.runWithEvent(Action.java:749)</Frame>
          <Frame depth="38">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:407)</Frame>
          <Frame depth="39">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:361)</Frame>
          <Frame depth="40">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:352)</Frame>
          <Frame depth="41">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:47)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1529)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1291)</Frame>
          <Frame depth="46">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1343)</Frame>
          <Frame depth="47">org.eclipse.ui.internal.Workbench.run(Workbench.java:1326)</Frame>
          <Frame depth="48">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:831)</Frame>
          <Frame depth="49">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="50">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="51">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="52">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="53">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="54">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="55">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="56">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>1. Start new workspace (autobuild is on)</Line>
          <Line>2. Create Java project with 1 src folder and 1 bin folder</Line>
          <Line>3. Add class X in src folder</Line>
          <Line>4. Edit .classpath file so as to make the output entry point to the project:</Line>
          <Line>&lt;?xml version="1.0" encoding="UTF-8"?&gt;</Line>
          <Line>&lt;classpath&gt;</Line>
          <Line>&lt;classpathentry kind="src" path="src"/&gt;</Line>
          <Line>&lt;classpathentry kind="var" path="JRE_LIB" rootpath="JRE_SRCROOT"</Line>
          <Line>sourcepath="JRE_SRC"/&gt;</Line>
          <Line>&lt;classpathentry kind="output" path=""/&gt;</Line>
          <Line>&lt;/classpath&gt;</Line>
          <Line>5. Exit/restart project</Line>
          <Line>6. Change class X to add a field and save</Line>
          <Line>Observe: All files in the project are removed</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>After making some changes to the source code in my Java project, I hit 
CTRL+SHIFT+S to save.

Got an error "Unable to restore CommandImpl.java" (one of the sourcefiles).

The project folder was now empty except for the .project file.  All other files 
(significant amount of work) had been deleted.
This message means that Eclipse was unable to reopen an editor on a file which 
was supposed to exist.

How did your files disappear ? Did the package explorer still show them at this 
point, but nothing was left on the disc ? Was autobuild on (i.e. 
Window&gt;Preferences&gt;Workbench&gt;Perform build automatically on resource 
modification) ?

Could you provide us with steps to reproduce ? 
Autobuild was in fact on. (Most of my settings are still default at this point)

The files were showing in the package explorer immediately before I attempted 
to save; they were not there immediately after the error.

The only potentially significant detail I could add is that the project I was 
working on had been coded with JBuilder originally.  I had copied the source 
only over to the new Eclipse project folder and imported the source into the 
project.  I had been working without problems on the source for a couple hours 
at the time of the error.


What are your settings for the .classpath file? Did you use source folders?
Different output folders?
Do you have any information in your .log file ?
On the surface it feels something bad occurred, causing the project to default 
to an empty classpath, and since autobuild was on, it would consider it should 
empty it completely.

We'd like to understand how this is possible. Need to investigate.

The classpath was completely vanilla: only project classes and standard java 
classes were used.

There were two folders under the project folder: src and classes for source and 
compiled output respectively.

I have performed a thorough search of my harddrive and have been unable to find 
a .log file.  Could it have a different name on my systems?  Is it the default 
to have this feature enabled? 
The .log file should reside inside your workspace, under:
&lt;workspace&gt;/.metadata/.log

When you say 'only project classes', do you mean the project was acting as a 
source folder ? Also did you recall where your output location was pointing at, 
directly to the project or a separate 'bin' folder ?
All project source was in the src folder under the project folder.  All 
compiled classes were in the classes folder under the project folder.  The 
classes folder would have been on the classpath.

I guess my thorough search for the .log wasn't thorough enough. ;-)  Here are 
the relevant log entries from the time of the error:

!SESSION Feb 23, 2003 11:36:59.500 ---------------------------------------------
java.version=1.4.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:C:/Eclipse/
!ENTRY org.eclipse.jdt.core 4 4 Feb 23, 2003 11:36:59.500
!MESSAGE JavaBuilder handling ImageBuilderInternalException
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource /A3/src does 
not exist.
	at org.eclipse.core.internal.resources.Resource.checkExists
(Resource.java:179)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:57)
	at org.eclipse.core.internal.resources.Resource.accept(Resource.java:40)
	at 
org.eclipse.jdt.internal.core.builder.BatchImageBuilder.copyExtraResourcesBack
(BatchImageBuilder.java:116)
	at 
org.eclipse.jdt.internal.core.builder.BatchImageBuilder.scrubOutputFolder
(BatchImageBuilder.java:88)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build
(BatchImageBuilder.java:33)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll
(JavaBuilder.java:170)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build
(JavaBuilder.java:103)
	at org.eclipse.core.internal.events.BuildManager$2.run
(BuildManager.java:392)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:839)
	at org.eclipse.core.runtime.Platform.run(Platform.java:416)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:120)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:176)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:186)
	at org.eclipse.core.internal.events.BuildManager$1.run
(BuildManager.java:146)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:839)
	at org.eclipse.core.runtime.Platform.run(Platform.java:416)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:160)
	at org.eclipse.core.internal.events.BuildManager.build
(BuildManager.java:211)
	at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java:745)
	at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1383)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:78)
	at org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation
(AbstractTextEditor.java:2329)
	at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperatio
n(CompilationUnitEditor.java:664)
	at org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave
(CompilationUnitEditor.java:712)
	at org.eclipse.ui.internal.EditorManager$11.run(EditorManager.java:1004)
	at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:873)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread
(ModalContext.java:299)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:249)
	at org.eclipse.jface.window.ApplicationWindow$1.run
(ApplicationWindow.java:394)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:66)
	at org.eclipse.jface.window.ApplicationWindow.run
(ApplicationWindow.java:391)
	at org.eclipse.ui.internal.WorkbenchWindow.run
(WorkbenchWindow.java:1126)
	at org.eclipse.ui.internal.EditorManager.runProgressMonitorOperation
(EditorManager.java:879)
	at org.eclipse.ui.internal.EditorManager.saveEditor
(EditorManager.java:1009)
	at org.eclipse.ui.internal.WorkbenchPage.saveEditor
(WorkbenchPage.java:1990)
	at org.eclipse.ui.internal.SaveAction.run(SaveAction.java:32)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:749)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:407)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:361)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:352)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:47)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:827)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1529)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1291)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1343)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1326)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:831)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
!ENTRY org.eclipse.core.resources 4 368 Feb 23, 2003 11:36:59.770
!MESSAGE Resource /A3/src does not exist.
!ENTRY org.eclipse.ui 4 4 Feb 23, 2003 11:37:00.160
!MESSAGE Unable to restore editor - createElement returned null for input 
element factory: org.eclipse.ui.part.FileEditorInputFactory
!ENTRY org.eclipse.ui 4 4 Feb 23, 2003 11:37:00.320
!MESSAGE Unable to restore editor - createElement returned null for input 
element factory: org.eclipse.ui.part.FileEditorInputFactory
Just to make it clear, could you recreate an empty project and set it up as you 
did initially (when you saw the problem). Then please paste in this PR, the 
contents of the .classpath file (in the project folder, may need to be revealed 
by disabling .* filter in navigator/package explorer).
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;classpath&gt;
    &lt;classpathentry kind="src" path="src"/&gt;
    &lt;classpathentry kind="var" path="JRE_LIB" rootpath="JRE_SRCROOT" 
sourcepath="JRE_SRC"/&gt;
    &lt;classpathentry kind="output" path="classes"/&gt;
&lt;/classpath&gt;
I am investigating.
Have you seen such a problem with a 2.1 build as well or just with a 2.0.2 build?

The problem is that your stacktrace is completely different now.
I only use build 2.0.2.  I have only seen this problem once even with 2.0.2.

The stacktrace is completely different from what?
I meant that this code completely changed since 2.0.2. In 2.1, exclusion filters
have been added and the code of the builder is quite different. I will
investigate in 2.0.2 and try to see if I can reproduce in 2.1.
Do you remember if you changed the output folder or edited the .classpath file
yourself?
I am trying to find some steps to reproduce in order to understand how you ended
up losing source files.
As mentioned previously, the source code was originally from a JBuilder 
project; I copied over the source folder (with ONLY *.java files) to the new 
folder (which was NOT under the workspace folder but under my C:\ directory, if 
that helps.)

I do vaguely recall having some difficulty at first getting the project to 
recognize the new source folder; it is possible that I fixed the problem by 
manually changing the source folder definition in the .classpath, but I can't 
say for sure.

At the time of the error, I had been working in the project for a couple hours, 
saving frequently.   The error occured on the first occasion that I used Save 
All that I know of (again, if that helps).

I don't recall having made any changes to the project metadata just before the 
error.


I was able to reproduce in 2.0.2 with the following steps:
1. Start new workspace (autobuild is on)
2. Create Java project with 1 src folder and 1 bin folder
3. Add class X in src folder
4. Edit .classpath file so as to make the output entry point to the project:
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;classpath&gt;
    &lt;classpathentry kind="src" path="src"/&gt;
    &lt;classpathentry kind="var" path="JRE_LIB" rootpath="JRE_SRCROOT" 
sourcepath="JRE_SRC"/&gt;
    &lt;classpathentry kind="output" path=""/&gt;
&lt;/classpath&gt;
5. Exit/restart project
6. Change class X to add a field and save
Observe: All files in the project are removed

Problem still exists in 2.1, even if after step 4 a build path error marker is 
created which should prevent the builder from running.
Removed the builder scrubbing output in presence of a broken classpath. 
Backported to 2.0.x stream for upcoming rollup.
Fixed
Added regression tests OutputFolderTests.testInvalidOutput() to 2.0.x and 2.1 
streams.
Verified.</WithStack>
    <WithOutStack>After making some changes to the source code in my Java project, I hit 
CTRL+SHIFT+S to save.

Got an error "Unable to restore CommandImpl.java" (one of the sourcefiles).

The project folder was now empty except for the .project file.  All other files 
(significant amount of work) had been deleted.
This message means that Eclipse was unable to reopen an editor on a file which 
was supposed to exist.

How did your files disappear ? Did the package explorer still show them at this 
point, but nothing was left on the disc ? Was autobuild on (i.e. 
Window&gt;Preferences&gt;Workbench&gt;Perform build automatically on resource 
modification) ?

Could you provide us with steps to reproduce ? 
Autobuild was in fact on. (Most of my settings are still default at this point)

The files were showing in the package explorer immediately before I attempted 
to save; they were not there immediately after the error.

The only potentially significant detail I could add is that the project I was 
working on had been coded with JBuilder originally.  I had copied the source 
only over to the new Eclipse project folder and imported the source into the 
project.  I had been working without problems on the source for a couple hours 
at the time of the error.


What are your settings for the .classpath file? Did you use source folders?
Different output folders?
Do you have any information in your .log file ?
On the surface it feels something bad occurred, causing the project to default 
to an empty classpath, and since autobuild was on, it would consider it should 
empty it completely.

We'd like to understand how this is possible. Need to investigate.

The classpath was completely vanilla: only project classes and standard java 
classes were used.

There were two folders under the project folder: src and classes for source and 
compiled output respectively.

I have performed a thorough search of my harddrive and have been unable to find 
a .log file.  Could it have a different name on my systems?  Is it the default 
to have this feature enabled? 
The .log file should reside inside your workspace, under:
&lt;workspace&gt;/.metadata/.log

When you say 'only project classes', do you mean the project was acting as a 
source folder ? Also did you recall where your output location was pointing at, 
directly to the project or a separate 'bin' folder ?
All project source was in the src folder under the project folder.  All 
compiled classes were in the classes folder under the project folder.  The 
classes folder would have been on the classpath.

I guess my thorough search for the .log wasn't thorough enough. ;-)  Here are 
the relevant log entries from the time of the error:

!SESSION Feb 23, 2003 11:36:59.500 ---------------------------------------------
java.version=1.4.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:C:/Eclipse/
!ENTRY org.eclipse.jdt.core 4 4 Feb 23, 2003 11:36:59.500
!MESSAGE JavaBuilder handling ImageBuilderInternalException
!STACK 1

!ENTRY org.eclipse.core.resources 4 368 Feb 23, 2003 11:36:59.770
!MESSAGE Resource /A3/src does not exist.
!ENTRY org.eclipse.ui 4 4 Feb 23, 2003 11:37:00.160
!MESSAGE Unable to restore editor - createElement returned null for input 
element factory: org.eclipse.ui.part.FileEditorInputFactory
!ENTRY org.eclipse.ui 4 4 Feb 23, 2003 11:37:00.320
!MESSAGE Unable to restore editor - createElement returned null for input 
element factory: org.eclipse.ui.part.FileEditorInputFactory
Just to make it clear, could you recreate an empty project and set it up as you 
did initially (when you saw the problem). Then please paste in this PR, the 
contents of the .classpath file (in the project folder, may need to be revealed 
by disabling .* filter in navigator/package explorer).
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;classpath&gt;
    &lt;classpathentry kind="src" path="src"/&gt;
    &lt;classpathentry kind="var" path="JRE_LIB" rootpath="JRE_SRCROOT" 
sourcepath="JRE_SRC"/&gt;
    &lt;classpathentry kind="output" path="classes"/&gt;
&lt;/classpath&gt;
I am investigating.
Have you seen such a problem with a 2.1 build as well or just with a 2.0.2 build?

The problem is that your stacktrace is completely different now.
I only use build 2.0.2.  I have only seen this problem once even with 2.0.2.

The stacktrace is completely different from what?
I meant that this code completely changed since 2.0.2. In 2.1, exclusion filters
have been added and the code of the builder is quite different. I will
investigate in 2.0.2 and try to see if I can reproduce in 2.1.
Do you remember if you changed the output folder or edited the .classpath file
yourself?
I am trying to find some steps to reproduce in order to understand how you ended
up losing source files.
As mentioned previously, the source code was originally from a JBuilder 
project; I copied over the source folder (with ONLY *.java files) to the new 
folder (which was NOT under the workspace folder but under my C:\ directory, if 
that helps.)

I do vaguely recall having some difficulty at first getting the project to 
recognize the new source folder; it is possible that I fixed the problem by 
manually changing the source folder definition in the .classpath, but I can't 
say for sure.

At the time of the error, I had been working in the project for a couple hours, 
saving frequently.   The error occured on the first occasion that I used Save 
All that I know of (again, if that helps).

I don't recall having made any changes to the project metadata just before the 
error.


I was able to reproduce in 2.0.2 with the following steps:
1. Start new workspace (autobuild is on)
2. Create Java project with 1 src folder and 1 bin folder
3. Add class X in src folder
4. Edit .classpath file so as to make the output entry point to the project:
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;classpath&gt;
    &lt;classpathentry kind="src" path="src"/&gt;
    &lt;classpathentry kind="var" path="JRE_LIB" rootpath="JRE_SRCROOT" 
sourcepath="JRE_SRC"/&gt;
    &lt;classpathentry kind="output" path=""/&gt;
&lt;/classpath&gt;
5. Exit/restart project
6. Change class X to add a field and save
Observe: All files in the project are removed

Problem still exists in 2.1, even if after step 4 a build path error marker is 
created which should prevent the builder from running.
Removed the builder scrubbing output in presence of a broken classpath. 
Backported to 2.0.x stream for upcoming rollup.
Fixed
Added regression tests OutputFolderTests.testInvalidOutput() to 2.0.x and 2.1 
streams.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32589" />
    <CreationDate amount="2003-02-23 13:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>can we have emacs/xemacs as a true editor plug-in? Please?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hi, Thank you for making an emacs-like key bindings available in the text/code
deditor. But IMHO, they don't go far enough, and perhaps never will. I would like
to see emacs / xemacs run as a true "editor" plugin within Eclipse. Is there any
chance of that happening? How can I contribute?
Thanks.
I don't know if you are already doing this, but filing / voting for bugs about
implementing the Emacs features you miss in the Eclipse editor could be useful
as well.

Candidates for this could be for example: bug 8583, bug 10017, bug 9999, bug
26639, bug 4134, bug 4135, bug 5179, bug 6280 and bug 8009.  There are probably
more, but those are ones I have filed / voted for that are Emacs related.

There are no plans for the UI team to work on this defect until higher priority 
items are addressed.  If you would like to work on this defect, please let us 
know on the platform-ui-dev mailing list.

Are there currently any plans for UI team to work on this defect?

Thanks.
adding doug to cc
Btw: the CVS version of JEmacs (http://jemacs.sf.net) now runs on top of SWT (as
well as Swing).  JEmacs is a (re-)implementation of Emacs that implements the
Emacs Lisp extension language by compiling Emacs Lisp to Java bytecodes instead
of Emacs bytecode format.  So it's "just" a matter of re-implementing the Emacs
C core in Java.  Enough works for a prototype, but a lot functionality is missing.
I have no idea what would be involved in turning Jemacs into an Eclipse plugin.

JEmacs has been stagnent for a number of years, but the recent SWT  has given me
some hope that the project can continue.  Unfortunately, it is difficult to find
time to work on JEmacs.
We currently have no plans to work on this item.</WithStack>
    <WithOutStack>Hi, Thank you for making an emacs-like key bindings available in the text/code
deditor. But IMHO, they don't go far enough, and perhaps never will. I would like
to see emacs / xemacs run as a true "editor" plugin within Eclipse. Is there any
chance of that happening? How can I contribute?
Thanks.
I don't know if you are already doing this, but filing / voting for bugs about
implementing the Emacs features you miss in the Eclipse editor could be useful
as well.

Candidates for this could be for example: bug 8583, bug 10017, bug 9999, bug
26639, bug 4134, bug 4135, bug 5179, bug 6280 and bug 8009.  There are probably
more, but those are ones I have filed / voted for that are Emacs related.

There are no plans for the UI team to work on this defect until higher priority 
items are addressed.  If you would like to work on this defect, please let us 
know on the platform-ui-dev mailing list.

Are there currently any plans for UI team to work on this defect?

Thanks.
adding doug to cc
Btw: the CVS version of JEmacs (http://jemacs.sf.net) now runs on top of SWT (as
well as Swing).  JEmacs is a (re-)implementation of Emacs that implements the
Emacs Lisp extension language by compiling Emacs Lisp to Java bytecodes instead
of Emacs bytecode format.  So it's "just" a matter of re-implementing the Emacs
C core in Java.  Enough works for a prototype, but a lot functionality is missing.
I have no idea what would be involved in turning Jemacs into an Eclipse plugin.

JEmacs has been stagnent for a number of years, but the recent SWT  has given me
some hope that the project can continue.  Unfortunately, it is difficult to find
time to work on JEmacs.
We currently have no plans to work on this item.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32590" />
    <CreationDate amount="2003-02-23 13:50:00 -0500" />
    <DupId amount="32356" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JUnit tests crash when using junit.jar through ECLIPSE_HOME classpath variable.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Hello,

I have a project with junit.jar added to the build path using an extension of
the ECLIPSE_HOME classpath variable. Everything compiles, but when I want to run
my JUnit tests using the JUnit runner or as a Java Application, I always get
NoClassDefFoundError


*** This bug has been marked as a duplicate of 32356 ***</WithStack>
    <WithOutStack>Hello,

I have a project with junit.jar added to the build path using an extension of
the ECLIPSE_HOME classpath variable. Everything compiles, but when I want to run
my JUnit tests using the JUnit runner or as a Java Application, I always get
NoClassDefFoundError


*** This bug has been marked as a duplicate of 32356 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32591" />
    <CreationDate amount="2003-02-23 14:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[Editor Mgmt] Ctrl-F6 editor list isn't updated properly in RC1</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The current editor should always be at the top of the Ctrl-F6 editor list. In 
RC1, the editor list is not properly updated when the user switches from one 
editor to another by clicking in the Package Explorer or Navigator. (Clicking 
in editor tab works.) This breaks ability to toggle between two most recently 
used editors by successive Ctrl-F6.
Bob, do you mean it used to work before and was broken in RC1, or you noticed 
it on RC1?
I meant the former but I just went back and checked it in 2.0.2 and M3 and, darn
it, it behaves the same. :( So I guess it's not a regression, but it sure seems
wrong.
There is a few other action that we do on editor activation instead of 
bringToTop. Going to defer this for 2.2 since we do not keep a list of the 
editors in that order.

Should analize the other action as well.
fixed</WithStack>
    <WithOutStack>The current editor should always be at the top of the Ctrl-F6 editor list. In 
RC1, the editor list is not properly updated when the user switches from one 
editor to another by clicking in the Package Explorer or Navigator. (Clicking 
in editor tab works.) This breaks ability to toggle between two most recently 
used editors by successive Ctrl-F6.
Bob, do you mean it used to work before and was broken in RC1, or you noticed 
it on RC1?
I meant the former but I just went back and checked it in 2.0.2 and M3 and, darn
it, it behaves the same. :( So I guess it's not a regression, but it sure seems
wrong.
There is a few other action that we do on editor activation instead of 
bringToTop. Going to defer this for 2.2 since we do not keep a list of the 
editors in that order.

Should analize the other action as well.
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32592" />
    <CreationDate amount="2003-02-23 14:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>ProjectSetCapability - remove method addToWorkspace</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1- send it and provide a default implementation that just calls the old</Line>
          <Line>extension point, or</Line>
          <Line>2- remove it</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I don't think we meant to leave addToWorkspace in there.  It allows 
notification with a progress monitor arg.  Its abstract so everyone is forced 
to re-implement it, yet there are no senders.

We should either:

1- send it and provide a default implementation that just calls the old 
extension point, or
2- remove it

I think #2.
The method has been removed (and copyright added).</WithStack>
    <WithOutStack>I don't think we meant to leave addToWorkspace in there.  It allows 
notification with a progress monitor arg.  Its abstract so everyone is forced 
to re-implement it, yet there are no senders.

We should either:

1- send it and provide a default implementation that just calls the old 
extension point, or
2- remove it

I think #2.
The method has been removed (and copyright added).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32593" />
    <CreationDate amount="2003-02-23 14:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>RepsitoryProviderType, ProjectSetCapability -- require javadoc</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We need at a minimum the correct paragraph to say its provisional API.  See 
SimpleAccess.
Javadoc has been added.</WithStack>
    <WithOutStack>We need at a minimum the correct paragraph to say its provisional API.  See 
SimpleAccess.
Javadoc has been added.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32594" />
    <CreationDate amount="2003-02-23 15:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[typing] Java comments auto-wrap on end of printable margin</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>In M3 I came accustomed to, and liked the auto-wrap feature of commenting 
during editing.  In newer builds (M5,RC1) this feature is no longer available 
or I cannot find it.

Personally I thought this was a very useful addition and hope to see its return
shortly.
This has been replaced by the comment formatter.</WithStack>
    <WithOutStack>In M3 I came accustomed to, and liked the auto-wrap feature of commenting 
during editing.  In newer builds (M5,RC1) this feature is no longer available 
or I cannot find it.

Personally I thought this was a very useful addition and hope to see its return
shortly.
This has been replaced by the comment formatter.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32595" />
    <CreationDate amount="2003-02-23 16:56:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Automatic build can't be turned off</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) Go to Windows -&gt; Preferences -&gt; Workbench</Line>
          <Line>2) Uncheck "Perform build automatically..."</Line>
          <Line>3) Press "Apply" if you like (doesn't matter)</Line>
          <Line>4) Press "OK"</Line>
          <Line>5) Go to Windows -&gt; Preferences -&gt; Workbench</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I just installed 2.1 RC1 into a clean directory, clean workspace.  I do:

1) Go to Windows -&gt; Preferences -&gt; Workbench
2) Uncheck "Perform build automatically..."
3) Press "Apply" if you like (doesn't matter)
4) Press "OK"
5) Go to Windows -&gt; Preferences -&gt; Workbench

Expect to see "Perform build automatically..." unchecked but it is checked 
again.  

For those of us that don't want to perform a build automatically, this is very 
annoying.
Cannot reproduce. This works ok for me with build RC1 with both a new workspace 
and an existing workspace.</WithStack>
    <WithOutStack>I just installed 2.1 RC1 into a clean directory, clean workspace.  I do:

1) Go to Windows -&gt; Preferences -&gt; Workbench
2) Uncheck "Perform build automatically..."
3) Press "Apply" if you like (doesn't matter)
4) Press "OK"
5) Go to Windows -&gt; Preferences -&gt; Workbench

Expect to see "Perform build automatically..." unchecked but it is checked 
again.  

For those of us that don't want to perform a build automatically, this is very 
annoying.
Cannot reproduce. This works ok for me with build RC1 with both a new workspace 
and an existing workspace.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32596" />
    <CreationDate amount="2003-02-23 20:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>RC1 no longer places plugin output in plug-ins during export.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Exporting from the update site I created with M5 would place plug-in output in 
a 'plugins' directory in the resultant zip, but RC1 no longer does that.  
Feature output is still correctly place in a 'features' directory.
Please provide more detail about your setup and the scenario to follow while 
reproducing the problem.
I have a single feature with 8 plug-ins.  I created an update site project 
project that has the following sitebuild.xml: 

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;site-build
      feature-location="features"
      plugin-location="plugins"
      autobuild="false"
      scrub-output="true"
      use-console="true"&gt;
   &lt;feature id="com.objy.assist" version="1.0.0"/&gt;
&lt;/site-build&gt;

When right clicking on the update site project and selecting export I 
select "Deployable features" and then my feature with "deployable ZIP files 
(source excluded)" selected.

This procedure produces correct results with M5, but in RC1 the plug-in 
location of the sitebuild.xml file seems to be ignored.
This is a valid defect against the export wizard.  plugins should fall under 
plugins/ directory in the zip distribution file.
However, in your case, you really should not be using the export wizard for 
site projects.  Site projects have their own build mechanisms.
Please read the related article in PDE UI's development resources:
http://www.eclipse.org/pde/index.html
Thanks.  FYI, I just tried export from the feature project and the feature 
plug-in project with the same results.
Fixed.
When you export a feature in zip format, the contents of the zip will put 
feature resources under features/ directory, and plugins' resources under 
plugins/ directory.</WithStack>
    <WithOutStack>Exporting from the update site I created with M5 would place plug-in output in 
a 'plugins' directory in the resultant zip, but RC1 no longer does that.  
Feature output is still correctly place in a 'features' directory.
Please provide more detail about your setup and the scenario to follow while 
reproducing the problem.
I have a single feature with 8 plug-ins.  I created an update site project 
project that has the following sitebuild.xml: 

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;site-build
      feature-location="features"
      plugin-location="plugins"
      autobuild="false"
      scrub-output="true"
      use-console="true"&gt;
   &lt;feature id="com.objy.assist" version="1.0.0"/&gt;
&lt;/site-build&gt;

When right clicking on the update site project and selecting export I 
select "Deployable features" and then my feature with "deployable ZIP files 
(source excluded)" selected.

This procedure produces correct results with M5, but in RC1 the plug-in 
location of the sitebuild.xml file seems to be ignored.
This is a valid defect against the export wizard.  plugins should fall under 
plugins/ directory in the zip distribution file.
However, in your case, you really should not be using the export wizard for 
site projects.  Site projects have their own build mechanisms.
Please read the related article in PDE UI's development resources:
http://www.eclipse.org/pde/index.html
Thanks.  FYI, I just tried export from the feature project and the feature 
plug-in project with the same results.
Fixed.
When you export a feature in zip format, the contents of the zip will put 
feature resources under features/ directory, and plugins' resources under 
plugins/ directory.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32597" />
    <CreationDate amount="2003-02-23 23:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>yet another null pointer ... just opening PDE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437340333747">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.pde.internal.core.feature.FeatureInfo.parse(FeatureInfo.java:88)</Frame>
          <Frame depth="1">org.eclipse.pde.internal.core.feature.Feature.parse(Feature.java:166)</Frame>
          <Frame depth="2">org.eclipse.pde.internal.core.feature.AbstractFeatureModel.processDocument(AbstractFeatureModel.java:88)</Frame>
          <Frame depth="3">org.eclipse.pde.internal.core.feature.AbstractFeatureModel.load(AbstractFeatureModel.java:70)</Frame>
          <Frame depth="4">org.eclipse.pde.internal.core.WorkspaceModelManager.loadFeatureModel(WorkspaceModelManager.java:668)</Frame>
          <Frame depth="5">org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel(WorkspaceModelManager.java:175)</Frame>
          <Frame depth="6">org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel(WorkspaceModelManager.java:182)</Frame>
          <Frame depth="7">org.eclipse.pde.internal.core.WorkspaceModelManager.initializeWorkspacePluginModels(WorkspaceModelManager.java:488)</Frame>
          <Frame depth="8">org.eclipse.pde.internal.core.WorkspaceModelManager.reset(WorkspaceModelManager.java:711)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.core.PDECore.initializeModels(PDECore.java:302)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.core.PDECore.getWorkspaceModelManager(PDECore.java:269)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.editor.manifest.ManifestEditor.createResourceModel(ManifestEditor.java:205)</Frame>
          <Frame depth="12">org.eclipse.pde.internal.ui.editor.manifest.ManifestEditor.createModel(ManifestEditor.java:138)</Frame>
          <Frame depth="13">org.eclipse.pde.internal.ui.editor.PDEMultiPageEditor.initializeModels(PDEMultiPageEditor.java:475)</Frame>
          <Frame depth="14">org.eclipse.pde.internal.ui.editor.PDEMultiPageEditor.init(PDEMultiPageEditor.java:452)</Frame>
          <Frame depth="15">org.eclipse.pde.internal.ui.editor.manifest.ManifestEditor.init(ManifestEditor.java:285)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:598)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:660)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:453)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.EditorManager.openEditorFromInput(EditorManager.java:327)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:418)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2030)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:1978)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.WorkbenchPage$8.run(WorkbenchPage.java:1965)</Frame>
          <Frame depth="24">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1960)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1865)</Frame>
          <Frame depth="27">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:129)</Frame>
          <Frame depth="28">org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:102)</Frame>
          <Frame depth="29">org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open(OpenActionUtil.java:47)</Frame>
          <Frame depth="30">org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:158)</Frame>
          <Frame depth="31">org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:147)</Frame>
          <Frame depth="32">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:191)</Frame>
          <Frame depth="33">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:169)</Frame>
          <Frame depth="34">org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:323)</Frame>
          <Frame depth="35">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$3.open(PackageExplorerPart.java:318)</Frame>
          <Frame depth="36">org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:397)</Frame>
          <Frame depth="37">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:867)</Frame>
          <Frame depth="38">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="39">org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:395)</Frame>
          <Frame depth="40">org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:602)</Frame>
          <Frame depth="41">org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:691)</Frame>
          <Frame depth="42">org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:203)</Frame>
          <Frame depth="43">org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:198)</Frame>
          <Frame depth="44">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:227)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)</Frame>
          <Frame depth="47">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1775)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1483)</Frame>
          <Frame depth="49">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1271)</Frame>
          <Frame depth="50">org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)</Frame>
          <Frame depth="51">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="52">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="53">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="54">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="55">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="56">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="57">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="58">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="59">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437340333747">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.pde.internal.ui.search.FindPluginReferencesAction.selectionChanged(FindPluginReferencesAction.java:73)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.PluginAction.refreshEnablement(PluginAction.java:204)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.PluginAction.selectionChanged(PluginAction.java:271)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.ObjectActionContributor.contributeObjectActions(ObjectActionContributor.java:98)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.ObjectActionContributorManager.contributeObjectActions(ObjectActionContributorManager.java:133)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.PopupMenuExtender.addObjectActions(PopupMenuExtender.java:45)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.PopupMenuExtender.menuAboutToShow(PopupMenuExtender.java:65)</Frame>
          <Frame depth="7">org.eclipse.jface.action.MenuManager.fireAboutToShow(MenuManager.java:249)</Frame>
          <Frame depth="8">org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:328)</Frame>
          <Frame depth="9">org.eclipse.jface.action.MenuManager.access$0(MenuManager.java:325)</Frame>
          <Frame depth="10">org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:337)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:114)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:861)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:3121)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Control.windowProc(Control.java:2785)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1225)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Display.windowProc(Display.java:2281)</Frame>
          <Frame depth="20">org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Menu._setVisible(Menu.java:209)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.runPopups(Display.java:1800)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1476)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1271)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)</Frame>
          <Frame depth="26">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="27">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="28">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="29">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="30">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="31">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This seems to mostly occur just after opening workbench. 
The user error just says "errors occurred, see log". 
Editor opens ok second attempt. Following was in log.



!ENTRY org.eclipse.jface 4 2 Feb 23, 2003 23:24:50.769
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jface".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.pde.internal.core.feature.FeatureInfo.parse
(FeatureInfo.java:88)
	at org.eclipse.pde.internal.core.feature.Feature.parse(Feature.java:166)
	at 
org.eclipse.pde.internal.core.feature.AbstractFeatureModel.processDocument
(AbstractFeatureModel.java:88)
	at org.eclipse.pde.internal.core.feature.AbstractFeatureModel.load
(AbstractFeatureModel.java:70)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.loadFeatureModel
(WorkspaceModelManager.java:668)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel
(WorkspaceModelManager.java:175)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.createWorkspaceFeatureModel
(WorkspaceModelManager.java:182)
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.initializeWorkspacePluginMod
els(WorkspaceModelManager.java:488)
	at org.eclipse.pde.internal.core.WorkspaceModelManager.reset
(WorkspaceModelManager.java:711)
	at org.eclipse.pde.internal.core.PDECore.initializeModels
(PDECore.java:302)
	at org.eclipse.pde.internal.core.PDECore.getWorkspaceModelManager
(PDECore.java:269)
	at 
org.eclipse.pde.internal.ui.editor.manifest.ManifestEditor.createResourceModel
(ManifestEditor.java:205)
	at 
org.eclipse.pde.internal.ui.editor.manifest.ManifestEditor.createModel
(ManifestEditor.java:138)
	at 
org.eclipse.pde.internal.ui.editor.PDEMultiPageEditor.initializeModels
(PDEMultiPageEditor.java:475)
	at org.eclipse.pde.internal.ui.editor.PDEMultiPageEditor.init
(PDEMultiPageEditor.java:452)
	at org.eclipse.pde.internal.ui.editor.manifest.ManifestEditor.init
(ManifestEditor.java:285)
	at org.eclipse.ui.internal.EditorManager.createSite
(EditorManager.java:598)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor
(EditorManager.java:660)
	at org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor
(EditorManager.java:453)
	at org.eclipse.ui.internal.EditorManager.openEditorFromInput
(EditorManager.java:327)
	at org.eclipse.ui.internal.EditorManager.openEditor
(EditorManager.java:418)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor
(WorkbenchPage.java:2030)
	at org.eclipse.ui.internal.WorkbenchPage.access$6
(WorkbenchPage.java:1978)
	at org.eclipse.ui.internal.WorkbenchPage$8.run(WorkbenchPage.java:1965)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1960)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1865)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor
(EditorUtility.java:129)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor
(EditorUtility.java:102)
	at org.eclipse.jdt.internal.ui.actions.OpenActionUtil.open
(OpenActionUtil.java:47)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:158)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:147)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:191)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:169)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen
(PackageExplorerActionGroup.java:323)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$3.open
(PackageExplorerPart.java:318)
	at org.eclipse.jface.viewers.StructuredViewer$2.run
(StructuredViewer.java:397)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:867)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen
(StructuredViewer.java:395)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen
(StructuredViewer.java:602)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen
(StructuredViewer.java:691)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent
(OpenStrategy.java:203)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:198)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent
(OpenStrategy.java:227)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1775)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1483)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1271)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
Oh, should have said explicitly this was found on RC1.

This looks like a problem in feature editor that you left open on a feature. 
Could you attach feature.xml file that is causing this? 
I wasn't working with any feature.xml's ... certainly not editing any. There 
might be some incorrect ones in my workspace, or something, but I wouldn't know 
how to go about narrowing down. Again, seems to happen only right after opening 
workbench. And I do have "refresh workspace on startup" enabled. 

In fact, when I tried it just now, still got NullPointerException, but from 
then on 'selection' (or, more precisely double cliking) on plugin.xml file no 
longer worked ... just nothing happened. The following was in my .log file:

!ENTRY org.eclipse.ui 4 4 Feb 24, 2003 19:41:08.518
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Feb 24, 2003 19:41:08.518
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at 
org.eclipse.pde.internal.ui.search.FindPluginReferencesAction.selectionChanged
(FindPluginReferencesAction.java:73)
	at org.eclipse.ui.internal.PluginAction.refreshEnablement
(PluginAction.java:204)
	at org.eclipse.ui.internal.PluginAction.selectionChanged
(PluginAction.java:271)
	at 
org.eclipse.ui.internal.ObjectActionContributor.contributeObjectActions
(ObjectActionContributor.java:98)
	at 
org.eclipse.ui.internal.ObjectActionContributorManager.contributeObjectActions
(ObjectActionContributorManager.java:133)
	at org.eclipse.ui.internal.PopupMenuExtender.addObjectActions
(PopupMenuExtender.java:45)
	at org.eclipse.ui.internal.PopupMenuExtender.menuAboutToShow
(PopupMenuExtender.java:65)
	at org.eclipse.jface.action.MenuManager.fireAboutToShow
(MenuManager.java:249)
	at org.eclipse.jface.action.MenuManager.handleAboutToShow
(MenuManager.java:328)
	at org.eclipse.jface.action.MenuManager.access$0(MenuManager.java:325)
	at org.eclipse.jface.action.MenuManager$2.menuShown
(MenuManager.java:337)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:114)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:836)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:861)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:841)
	at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:3121)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2785)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1225)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2281)
	at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(Native Method)
	at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:209)
	at org.eclipse.swt.widgets.Display.runPopups(Display.java:1800)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1476)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1271)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)

Fixed. The problem is caused by our parser when description, license or 
copyright is as this:

&lt;copyright url="url.html"&gt;&lt;/copyright&gt;

We were choking on the null annotation (element body).</WithStack>
    <WithOutStack>This seems to mostly occur just after opening workbench. 
The user error just says "errors occurred, see log". 
Editor opens ok second attempt. Following was in log.



!ENTRY org.eclipse.jface 4 2 Feb 23, 2003 23:24:50.769
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jface".
!STACK 0
Oh, should have said explicitly this was found on RC1.

This looks like a problem in feature editor that you left open on a feature. 
Could you attach feature.xml file that is causing this? 
I wasn't working with any feature.xml's ... certainly not editing any. There 
might be some incorrect ones in my workspace, or something, but I wouldn't know 
how to go about narrowing down. Again, seems to happen only right after opening 
workbench. And I do have "refresh workspace on startup" enabled. 

In fact, when I tried it just now, still got NullPointerException, but from 
then on 'selection' (or, more precisely double cliking) on plugin.xml file no 
longer worked ... just nothing happened. The following was in my .log file:

!ENTRY org.eclipse.ui 4 4 Feb 24, 2003 19:41:08.518
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Feb 24, 2003 19:41:08.518
!MESSAGE java.lang.NullPointerException
!STACK 0


Fixed. The problem is caused by our parser when description, license or 
copyright is as this:

&lt;copyright url="url.html"&gt;&lt;/copyright&gt;

We were choking on the null annotation (element body).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32598" />
    <CreationDate amount="2003-02-24 02:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>DBCS: DBCS Search scope name is garbaged at the edit page</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>1) edit DBCS name scope will be bogus</Line>
          <Line>2) unnable to remove DBCS name scope</Line>
          <Line>I've confirmed that it works on Linux, but not on WindowsXP.</Line>
          <Line>I fixed problem #2 (removing of dbcs working sets), but cannot reproduce #1</Line>
          <Line>(edit dbcs name is bogus). I tried both Windows XP and 2000.</Line>
          <Line>Please try the next driver and let us know if #1 is still a problem.Thanks!</Line>
          <Line>with I20030304, I confirmed the fix for 2). However edit DBCS named topics</Line>
          <Line>having a truncation at last DBCS character or all of them.</Line>
          <Line>Created attachment 3838</Line>
          <Line>test data</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>30594 exists on RC1.
Errors are;
1) edit DBCS name scope will be bogus
2) unnable to remove DBCS name scope
I've confirmed that it works on Linux, but not on WindowsXP.
I fixed problem #2 (removing of dbcs working sets), but cannot reproduce #1 
(edit dbcs name is bogus). I tried both Windows XP and 2000.
Please try the next driver and let us know if #1 is still a problem.Thanks!
with I20030304, I confirmed the fix for 2). However edit DBCS named topics
having a truncation at last DBCS character or all of them.
Created attachment 3838
test data

Please use the attached test data for the topics name.
*** Bug 30594 has been marked as a duplicate of this bug. ***
Fixed.
verified with RC1
On 3.0 M7, this bug is reappeared. I found it when verifying bug 41909.
Thank you Masayuki Fuse.
I think corrupted search scope in 3.0 is probably a completely different 
problem than it was in 2.1.  The code for encoding/decoding has been 
replaced.  I am not sure there is subtle bug there or more thing do not work.
I have found more serious problem with NL support in 3.0 help.  See bug 52887.

Do you really see the same bug, while other things works OK for you?
Linux has this problem too and DBCS bookmark is garbled.
I guess that bug 52887 is introducing these problems.    
52887 is fixed in 3.0 development stream and I do not see this bug in 3.0 
anymore.
I've verified in 20040310 on WindowsXP Japanese and RHEL 3.0 ja_JP locale</WithStack>
    <WithOutStack>30594 exists on RC1.
Errors are;
1) edit DBCS name scope will be bogus
2) unnable to remove DBCS name scope
I've confirmed that it works on Linux, but not on WindowsXP.
I fixed problem #2 (removing of dbcs working sets), but cannot reproduce #1 
(edit dbcs name is bogus). I tried both Windows XP and 2000.
Please try the next driver and let us know if #1 is still a problem.Thanks!
with I20030304, I confirmed the fix for 2). However edit DBCS named topics
having a truncation at last DBCS character or all of them.
Created attachment 3838
test data

Please use the attached test data for the topics name.
*** Bug 30594 has been marked as a duplicate of this bug. ***
Fixed.
verified with RC1
On 3.0 M7, this bug is reappeared. I found it when verifying bug 41909.
Thank you Masayuki Fuse.
I think corrupted search scope in 3.0 is probably a completely different 
problem than it was in 2.1.  The code for encoding/decoding has been 
replaced.  I am not sure there is subtle bug there or more thing do not work.
I have found more serious problem with NL support in 3.0 help.  See bug 52887.

Do you really see the same bug, while other things works OK for you?
Linux has this problem too and DBCS bookmark is garbled.
I guess that bug 52887 is introducing these problems.    
52887 is fixed in 3.0 development stream and I do not see this bug in 3.0 
anymore.
I've verified in 20040310 on WindowsXP Japanese and RHEL 3.0 ja_JP locale</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32599" />
    <CreationDate amount="2003-02-24 02:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>When adding a working set, eclipse for GTK 2.0.6 crash.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>1. Open eclipse for GTK</Line>
          <Line>2. Click menu Search-&gt;Java...</Line>
          <Line>3. In the pop up window, click "Choose..." button in the bottom of the window.</Line>
          <Line>4. Click "New" button in the "Select Working Sets" window.</Line>
          <Line>5. A new window pop up, Select "Resource", then Click "Next".</Line>
          <Line>6. In the new window, enter a working set name, and select a project. Click</Line>
          <Line>Finish.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="WONTFIX" />
    <WithStack>Bug: When adding a working set, eclipse for GTK 2.0.6 crash.

OS: RedHat 8.0
Language: Simplified Chinese
        
Eclipse Build:           200302061700 Stable Build (M5)
JRE version: 
        JRE 1.3.1 IBM build cxia32131-20021102 (JIT enabled: jitc)
        JRE 1.4.0 IBM build cxia32140-20020917a (JIT enabled:jitc)

&lt;&lt;Steps to recreate problem&gt;&gt;
1. Open eclipse for GTK
2. Click menu Search-&gt;Java...
3. In the pop up window, click "Choose..." button in the bottom of the window.
4. Click "New" button in the "Select Working Sets" window.
5. A new window pop up, Select "Resource", then Click "Next".
6. In the new window, enter a working set name, and select a project. Click 
Finish.

&lt;&lt;Error&gt;&gt;
    Before step 5, eclipse works correctly (as is shown in beforeCrash.jpg). 
When we click "Next" in step 5, eclipse crashed with a error window (as is 
shown in crashWindow.jpg). At the same time, the terminal window that started 
up eclipse also generated some error message, as is shown in ConsoleOutput.txt.

&lt;&lt;Expected Result&gt;&gt;
	Can define a working set correctly.

Comments
    1)This function is correct in GTK 2.2.0.
Created attachment 3662
Bug info
Note that this bug does not occur in GTK 2.2.0.

GTK 2.2.0 is what we require for Simplified Chinese support.

Felipe, keep track of the issues reported for DBCS in 2.0.6 and then close the 
bug reports as wontfix.
Works for 2.2.0.
Closing problem report.

Verified</WithStack>
    <WithOutStack>Bug: When adding a working set, eclipse for GTK 2.0.6 crash.

OS: RedHat 8.0
Language: Simplified Chinese
        
Eclipse Build:           200302061700 Stable Build (M5)
JRE version: 
        JRE 1.3.1 IBM build cxia32131-20021102 (JIT enabled: jitc)
        JRE 1.4.0 IBM build cxia32140-20020917a (JIT enabled:jitc)

&lt;&lt;Steps to recreate problem&gt;&gt;
1. Open eclipse for GTK
2. Click menu Search-&gt;Java...
3. In the pop up window, click "Choose..." button in the bottom of the window.
4. Click "New" button in the "Select Working Sets" window.
5. A new window pop up, Select "Resource", then Click "Next".
6. In the new window, enter a working set name, and select a project. Click 
Finish.

&lt;&lt;Error&gt;&gt;
    Before step 5, eclipse works correctly (as is shown in beforeCrash.jpg). 
When we click "Next" in step 5, eclipse crashed with a error window (as is 
shown in crashWindow.jpg). At the same time, the terminal window that started 
up eclipse also generated some error message, as is shown in ConsoleOutput.txt.

&lt;&lt;Expected Result&gt;&gt;
	Can define a working set correctly.

Comments
    1)This function is correct in GTK 2.2.0.
Created attachment 3662
Bug info
Note that this bug does not occur in GTK 2.2.0.

GTK 2.2.0 is what we require for Simplified Chinese support.

Felipe, keep track of the issues reported for DBCS in 2.0.6 and then close the 
bug reports as wontfix.
Works for 2.2.0.
Closing problem report.

Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="32600" />
    <CreationDate amount="2003-02-24 02:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[build path] Broken Javadoc URL setting</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="12">
        <Lines>
          <Line>1. When using a local (LAN) path, "file://" does not work, you must use "file:/"</Line>
          <Line>(single slash).</Line>
          <Line>2. UNC paths do not work, even when chosen from the Browse dialog.</Line>
          <Line>3. Clicking Browse with a valid path already in the textbox (even one set using</Line>
          <Line>the Browse dialog), does not select the existing path.</Line>
          <Line>4. For local paths, you should not have to prepend "file://", it should be smart</Line>
          <Line>enough to do it for you.  Even better would be to leave the "file://" off</Line>
          <Line>completely for local paths (it just needlessly complicates the setting and could</Line>
          <Line>be added behind the scenes when needed).</Line>
          <Line>5. It should consistently either show or not show a trailing slash.</Line>
          <Line>(1.) Couldn't reproduce that "file://" does not work. (Windows XT). Can you give</Line>
          <Line>reproducable steps?</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="8">
        <Lines>
          <Line>(1.) Couldn't reproduce that "file://" does not work. (Windows XT). Can you give</Line>
          <Line>reproducable steps?</Line>
          <Line />
          <Line>(4.)  We must make clear that this is an URL and not a normal file path, I don't</Line>
          <Line>think we should change that</Line>
          <Line>(5.) After browse, we could take the trailing slash. However, the user can add</Line>
          <Line>one. As long as it is a valid URL we accept it.</Line>
          <Line>Using the latest integration build (I20030227):</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The Javadoc URL setting at Preferences-&gt;Java-&gt;Installed JREs-&gt;Edit is broken in
multiple ways:

1. When using a local (LAN) path, "file://" does not work, you must use "file:/"
(single slash).
2. UNC paths do not work, even when chosen from the Browse dialog.
3. Clicking Browse with a valid path already in the textbox (even one set using
the Browse dialog), does not select the existing path.
4. For local paths, you should not have to prepend "file://", it should be smart
enough to do it for you.  Even better would be to leave the "file://" off
completely for local paths (it just needlessly complicates the setting and could
be added behind the scenes when needed).
5. It should consistently either show or not show a trailing slash.
(1.) Couldn't reproduce that "file://" does not work. (Windows XT). Can you give
reproducable steps? 

(4.)  We must make clear that this is an URL and not a normal file path, I don't
think we should change that
(5.) After browse, we could take the trailing slash. However, the user can add
one. As long as it is a valid URL we accept it.
Using the latest integration build (I20030227):

1. Setting the Javadoc URL field to "file://O:/Dev/Jar/docs/j2sdk-1.4.1/api"
(with or without trailing slash).  Place caret on "println" in
'System.out.println("blah")', and press Shift+F2.  Error message: "The
documentation does not contain an entry for 'println(String)'. (File
'file://O:/Dev/Jar/docs/j2sdk-1.4.1/api/java/io/PrintStream.html' does not
exist.)"  Using a single slash after "file:" brings up help as expected.  Maybe
a Win2k specific issue?

4.  If you want it to always look like a URL (with a leading "protocol://"), I
can live with that.  I still think it would be more user friendly if it
intelligently added the protocol if missing.  Note that Windows Explorer,
Internet Explorer, and Mozilla all intelligently add either "file://" or
"http://" as appropriate.

Nothing planned for 2.1. Will consider enhancements in 2.2
Moving to JUI for consideration. We now re-use the dialog from JUI.
*** Bug 118626 has been marked as a duplicate of this bug. ***
Created attachment 36883
proposed fix

This is a possible fix
Moving to JDT/DEBUG to fix, its not jdt/ui code...
Benno, this bug report claims URLs were not working for Javadoc locations. The attached fixed uses URLs for install locations, which was never intended to work.
(In reply to comment #8)
&gt; Benno, this bug report claims URLs were not working for Javadoc locations. The
&gt; attached fixed uses URLs for install locations, which was never intended to
&gt; work.
&gt; 

Yes, of course, I'm #@% stupit, and take the bug back in shame...
*** Bug 118626 has been marked as a duplicate of this bug. ***
Looks like we can't fix it at the moment.


As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>The Javadoc URL setting at Preferences-&gt;Java-&gt;Installed JREs-&gt;Edit is broken in
multiple ways:

1. When using a local (LAN) path, "file://" does not work, you must use "file:/"
(single slash).
2. UNC paths do not work, even when chosen from the Browse dialog.
3. Clicking Browse with a valid path already in the textbox (even one set using
the Browse dialog), does not select the existing path.
4. For local paths, you should not have to prepend "file://", it should be smart
enough to do it for you.  Even better would be to leave the "file://" off
completely for local paths (it just needlessly complicates the setting and could
be added behind the scenes when needed).
5. It should consistently either show or not show a trailing slash.
(1.) Couldn't reproduce that "file://" does not work. (Windows XT). Can you give
reproducable steps? 

(4.)  We must make clear that this is an URL and not a normal file path, I don't
think we should change that
(5.) After browse, we could take the trailing slash. However, the user can add
one. As long as it is a valid URL we accept it.
Using the latest integration build (I20030227):

1. Setting the Javadoc URL field to "file://O:/Dev/Jar/docs/j2sdk-1.4.1/api"
(with or without trailing slash).  Place caret on "println" in
'System.out.println("blah")', and press Shift+F2.  Error message: "The
documentation does not contain an entry for 'println(String)'. (File
'file://O:/Dev/Jar/docs/j2sdk-1.4.1/api/java/io/PrintStream.html' does not
exist.)"  Using a single slash after "file:" brings up help as expected.  Maybe
a Win2k specific issue?

4.  If you want it to always look like a URL (with a leading "protocol://"), I
can live with that.  I still think it would be more user friendly if it
intelligently added the protocol if missing.  Note that Windows Explorer,
Internet Explorer, and Mozilla all intelligently add either "file://" or
"http://" as appropriate.

Nothing planned for 2.1. Will consider enhancements in 2.2
Moving to JUI for consideration. We now re-use the dialog from JUI.
*** Bug 118626 has been marked as a duplicate of this bug. ***
Created attachment 36883
proposed fix

This is a possible fix
Moving to JDT/DEBUG to fix, its not jdt/ui code...
Benno, this bug report claims URLs were not working for Javadoc locations. The attached fixed uses URLs for install locations, which was never intended to work.
(In reply to comment #8)
&gt; Benno, this bug report claims URLs were not working for Javadoc locations. The
&gt; attached fixed uses URLs for install locations, which was never intended to
&gt; work.
&gt; 

Yes, of course, I'm #@% stupit, and take the bug back in shame...
*** Bug 118626 has been marked as a duplicate of this bug. ***
Looks like we can't fix it at the moment.


As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
</infozilla-output>

