<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="38401" />
    <CreationDate amount="2003-06-04 03:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows ME" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>&lt;property environment&gt; Hangs Eclipse (Win 98/ME)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I guess that this is the same bug as Bug 28016. 

When I use the External Tools to attempt to run an ant build file, Eclipse 
hangs as soon as the external tools dialog opens. The Windows command window 
(command.com) opens for about 5-10 seconds. When it closes, Eclipse does not 
recover and needs to be shut down with a ctrl-alt-del.

I have tried this with ant 1.5.2 and 1.5.3-1

I have narrowed this down to the use of the tag:

&lt;property environment="env" /&gt;

When this is not in the build file, the problem does not manifest. I have also 
tried this on Windows 2000, and the problem does not occur there at all. This 
seems to be a Win ME / Win 98 environment problem.
Michael, can you successfully run the buildfile from the using cmd line Ant?
Appears to be http://nagoya.apache.org/bugzilla/show_bug.cgi?id=13006
Hi Darin,

Thank you for investigating this bug.

In answer to Comment #1, the build file works correctly from the command line. 
From what I can tell, the bug you mention in Comment #2 seems to affect Ant in 
general, so it may not be the same.

An example build file is:

&lt;project name="Test" default="banner" basedir="."&gt;
  &lt;property environment="env" /&gt;
  &lt;target name="banner"&gt;  
    &lt;echo message="${ant.version} on ${java.version}" /&gt;
  &lt;/target&gt;
&lt;/project&gt;

This build.xml works correctly from the command line, printing:

[echo] Apache Ant version 1.5.3 compiled on April 16 2003 on 1.4.1_02

The same file in Eclipse External tools causes the command window 
("C:/WINDOWS/Command.com") to appear for 10 seconds and then Eclipse not to 
recover.

If I remove the &lt;property environment="env" /&gt; tag, then the same output 
appears via Eclipse than does through the command line.


Michael, I am sorry to say that it is unlikely that we will be spending much 
time on this problem if the problem only occurs on Win98 or WinME.
From
http://www.eclipse.org/eclipse/development/eclipse_project_plan_2_2.html#TargetO
peratingEnvironments 

both Win98 and WinME are untested, "as-is" operating environments. "As-is" 
means a configuration that has received no testing, and which may or may not 
work.

I would be happy to help you and / or the community in applying any patches 
that become available.
Thanks for your help Darin, I understand the issues with running something like 
this on 98/ME. I don't use ME professionally, and it is easy enough to work 
around. 

I'll mark the bug as WONTFIX.</WithStack>
    <WithOutStack>I guess that this is the same bug as Bug 28016. 

When I use the External Tools to attempt to run an ant build file, Eclipse 
hangs as soon as the external tools dialog opens. The Windows command window 
(command.com) opens for about 5-10 seconds. When it closes, Eclipse does not 
recover and needs to be shut down with a ctrl-alt-del.

I have tried this with ant 1.5.2 and 1.5.3-1

I have narrowed this down to the use of the tag:

&lt;property environment="env" /&gt;

When this is not in the build file, the problem does not manifest. I have also 
tried this on Windows 2000, and the problem does not occur there at all. This 
seems to be a Win ME / Win 98 environment problem.
Michael, can you successfully run the buildfile from the using cmd line Ant?
Appears to be http://nagoya.apache.org/bugzilla/show_bug.cgi?id=13006
Hi Darin,

Thank you for investigating this bug.

In answer to Comment #1, the build file works correctly from the command line. 
From what I can tell, the bug you mention in Comment #2 seems to affect Ant in 
general, so it may not be the same.

An example build file is:

&lt;project name="Test" default="banner" basedir="."&gt;
  &lt;property environment="env" /&gt;
  &lt;target name="banner"&gt;  
    &lt;echo message="${ant.version} on ${java.version}" /&gt;
  &lt;/target&gt;
&lt;/project&gt;

This build.xml works correctly from the command line, printing:

[echo] Apache Ant version 1.5.3 compiled on April 16 2003 on 1.4.1_02

The same file in Eclipse External tools causes the command window 
("C:/WINDOWS/Command.com") to appear for 10 seconds and then Eclipse not to 
recover.

If I remove the &lt;property environment="env" /&gt; tag, then the same output 
appears via Eclipse than does through the command line.


Michael, I am sorry to say that it is unlikely that we will be spending much 
time on this problem if the problem only occurs on Win98 or WinME.
From
http://www.eclipse.org/eclipse/development/eclipse_project_plan_2_2.html#TargetO
peratingEnvironments 

both Win98 and WinME are untested, "as-is" operating environments. "As-is" 
means a configuration that has received no testing, and which may or may not 
work.

I would be happy to help you and / or the community in applying any patches 
that become available.
Thanks for your help Darin, I understand the issues with running something like 
this on 98/ME. I don't use ME professionally, and it is easy enough to work 
around. 

I'll mark the bug as WONTFIX.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38402" />
    <CreationDate amount="2003-06-04 04:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Stepping in" in "external" functions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340643648">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.cdt.internal.core.model.Openable.&lt;init&gt;(Openable.java:36)</Frame>
          <Frame depth="1">org.eclipse.cdt.internal.core.model.TranslationUnit.&lt;init&gt;(TranslationUnit.java:41)</Frame>
          <Frame depth="2">org.eclipse.cdt.internal.core.model.WorkingCopy.getOriginalElement(WorkingCopy.java:177)</Frame>
          <Frame depth="3">org.eclipse.cdt.internal.core.model.WorkingCopy.openBuffer(WorkingCopy.java:252)</Frame>
          <Frame depth="4">org.eclipse.cdt.internal.core.model.Openable.getBuffer(Openable.java:129)</Frame>
          <Frame depth="5">org.eclipse.cdt.internal.core.model.TranslationUnit.parse(TranslationUnit.java:483)</Frame>
          <Frame depth="6">org.eclipse.cdt.internal.core.model.TranslationUnit.generateInfos(TranslationUnit.java:324)</Frame>
          <Frame depth="7">org.eclipse.cdt.internal.core.model.TranslationUnit.buildStructure(TranslationUnit.java:243)</Frame>
          <Frame depth="8">org.eclipse.cdt.internal.core.model.Openable.openWhenClosed(Openable.java:275)</Frame>
          <Frame depth="9">org.eclipse.cdt.internal.core.model.CElement.openHierarchy(CElement.java:315)</Frame>
          <Frame depth="10">org.eclipse.cdt.internal.core.model.CElement.getElementInfo(CElement.java:198)</Frame>
          <Frame depth="11">org.eclipse.cdt.internal.core.model.Parent.getChildren(Parent.java:47)</Frame>
          <Frame depth="12">org.eclipse.cdt.internal.ui.BaseCElementContentProvider.getChildren(BaseCElementContentProvider.java:129)</Frame>
          <Frame depth="13">org.eclipse.cdt.internal.ui.BaseCElementContentProvider.getElements(BaseCElementContentProvider.java:100)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.StructuredViewer.getRawChildren(StructuredViewer.java:507)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren(AbstractTreeViewer.java:650)</Frame>
          <Frame depth="16">org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren(StructuredViewer.java:454)</Frame>
          <Frame depth="17">org.eclipse.jface.viewers.StructuredViewer.getSortedChildren(StructuredViewer.java:558)</Frame>
          <Frame depth="18">org.eclipse.jface.viewers.AbstractTreeViewer$1.run(AbstractTreeViewer.java:301)</Frame>
          <Frame depth="19">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="20">org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:289)</Frame>
          <Frame depth="21">org.eclipse.jface.viewers.AbstractTreeViewer$5.run(AbstractTreeViewer.java:729)</Frame>
          <Frame depth="22">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:801)</Frame>
          <Frame depth="23">org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged(AbstractTreeViewer.java:721)</Frame>
          <Frame depth="24">org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)</Frame>
          <Frame depth="25">org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:991)</Frame>
          <Frame depth="26">org.eclipse.cdt.internal.ui.editor.CContentOutlinePage.createControl(CContentOutlinePage.java:199)</Frame>
          <Frame depth="27">org.eclipse.ui.views.contentoutline.ContentOutline.doCreatePage(ContentOutline.java:125)</Frame>
          <Frame depth="28">org.eclipse.ui.part.PageBookView.createPage(PageBookView.java:306)</Frame>
          <Frame depth="29">org.eclipse.ui.part.PageBookView.partActivated(PageBookView.java:561)</Frame>
          <Frame depth="30">org.eclipse.ui.views.contentoutline.ContentOutline.partBroughtToTop(ContentOutline.java:191)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.PartListenerList$2.run(PartListenerList.java:69)</Frame>
          <Frame depth="32">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:889)</Frame>
          <Frame depth="33">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.PartListenerList.firePartBroughtToTop(PartListenerList.java:67)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.WorkbenchPage.firePartBroughtToTop(WorkbenchPage.java:1194)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2082)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:2004)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:1991)</Frame>
          <Frame depth="39">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1986)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1919)</Frame>
          <Frame depth="42">org.eclipse.debug.internal.ui.views.launch.LaunchView$4.run(LaunchView.java:813)</Frame>
          <Frame depth="43">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="44">org.eclipse.debug.internal.ui.views.launch.LaunchView.openEditor(LaunchView.java:822)</Frame>
          <Frame depth="45">org.eclipse.debug.internal.ui.views.launch.LaunchView.openEditor(LaunchView.java:784)</Frame>
          <Frame depth="46">org.eclipse.debug.internal.ui.views.launch.LaunchView.openEditorForStackFrame(LaunchView.java:651)</Frame>
          <Frame depth="47">org.eclipse.debug.internal.ui.views.launch.LaunchView.showEditorForCurrentSelection(LaunchView.java:570)</Frame>
          <Frame depth="48">org.eclipse.debug.internal.ui.views.launch.LaunchView.selectionChanged(LaunchView.java:446)</Frame>
          <Frame depth="49">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Frame>
          <Frame depth="50">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:889)</Frame>
          <Frame depth="51">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="52">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="53">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1290)</Frame>
          <Frame depth="54">org.eclipse.jface.viewers.StructuredViewer.setSelection(StructuredViewer.java:1020)</Frame>
          <Frame depth="55">org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand(LaunchView.java:966)</Frame>
          <Frame depth="56">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspendThreadEvent(LaunchViewEventHandler.java:235)</Frame>
          <Frame depth="57">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspendEvent(LaunchViewEventHandler.java:181)</Frame>
          <Frame depth="58">org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugEvents(LaunchViewEventHandler.java:102)</Frame>
          <Frame depth="59">org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run(AbstractDebugEventHandler.java:70)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:98)</Frame>
          <Frame depth="62">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1815)</Frame>
          <Frame depth="63">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1549)</Frame>
          <Frame depth="64">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="65">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="66">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="67">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="68">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="69">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="70">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="71">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>There is some problem when "step in"  in external function(laying in file out 
of workspace) while debugging. 
 
Now after "step in" error dialog occurs and such diagnostic appeares in .log:
 
java.lang.NullPointerException
 at org.eclipse.cdt.internal.core.model.Openable.&lt;init&gt;(Openable.java:36)
 at org.eclipse.cdt.internal.core.model.TranslationUnit.&lt;init&gt;
(TranslationUnit.java:41)
 at org.eclipse.cdt.internal.core.model.WorkingCopy.getOriginalElement
(WorkingCopy.java:177)
 at org.eclipse.cdt.internal.core.model.WorkingCopy.openBuffer
(WorkingCopy.java:252)
 at org.eclipse.cdt.internal.core.model.Openable.getBuffer(Openable.java:129)
 at org.eclipse.cdt.internal.core.model.TranslationUnit.parse
(TranslationUnit.java:483)
 at org.eclipse.cdt.internal.core.model.TranslationUnit.generateInfos
(TranslationUnit.java:324)
 at org.eclipse.cdt.internal.core.model.TranslationUnit.buildStructure
(TranslationUnit.java:243)
 at org.eclipse.cdt.internal.core.model.Openable.openWhenClosed
(Openable.java:275)
 at org.eclipse.cdt.internal.core.model.CElement.openHierarchy
(CElement.java:315)
 at org.eclipse.cdt.internal.core.model.CElement.getElementInfo
(CElement.java:198)
 at org.eclipse.cdt.internal.core.model.Parent.getChildren(Parent.java:47)
 at org.eclipse.cdt.internal.ui.BaseCElementContentProvider.getChildren
(BaseCElementContentProvider.java:129)
 at org.eclipse.cdt.internal.ui.BaseCElementContentProvider.getElements
(BaseCElementContentProvider.java:100)
 at org.eclipse.jface.viewers.StructuredViewer.getRawChildren
(StructuredViewer.java:507)
 at org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren
(AbstractTreeViewer.java:650)
 at org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren
(StructuredViewer.java:454)
 at org.eclipse.jface.viewers.StructuredViewer.getSortedChildren
(StructuredViewer.java:558)
 at org.eclipse.jface.viewers.AbstractTreeViewer$1.run
(AbstractTreeViewer.java:301)
 at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
 at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren
(AbstractTreeViewer.java:289)
 at org.eclipse.jface.viewers.AbstractTreeViewer$5.run
(AbstractTreeViewer.java:729)
 at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:801)
 at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged
(AbstractTreeViewer.java:721)
 at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:238)
 at org.eclipse.jface.viewers.StructuredViewer.setInput
(StructuredViewer.java:991)
 at org.eclipse.cdt.internal.ui.editor.CContentOutlinePage.createControl
(CContentOutlinePage.java:199)
 at org.eclipse.ui.views.contentoutline.ContentOutline.doCreatePage
(ContentOutline.java:125)
 at org.eclipse.ui.part.PageBookView.createPage(PageBookView.java:306)
 at org.eclipse.ui.part.PageBookView.partActivated(PageBookView.java:561)
 at org.eclipse.ui.views.contentoutline.ContentOutline.partBroughtToTop
(ContentOutline.java:191)
 at org.eclipse.ui.internal.PartListenerList$2.run(PartListenerList.java:69)
 at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:889)
 at org.eclipse.core.runtime.Platform.run(Platform.java:413)
 at org.eclipse.ui.internal.PartListenerList.firePartBroughtToTop
(PartListenerList.java:67)
 at org.eclipse.ui.internal.WorkbenchPage.firePartBroughtToTop
(WorkbenchPage.java:1194)
 at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor
(WorkbenchPage.java:2082)
 at org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:2004)
 at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:1991)
 at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
 at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1986)
 at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1919)
 at org.eclipse.debug.internal.ui.views.launch.LaunchView$4.run
(LaunchView.java:813)
 at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
 at org.eclipse.debug.internal.ui.views.launch.LaunchView.openEditor
(LaunchView.java:822)
 at org.eclipse.debug.internal.ui.views.launch.LaunchView.openEditor
(LaunchView.java:784)
 at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.openEditorForStackFrame
(LaunchView.java:651)
 at 
org.eclipse.debug.internal.ui.views.launch.LaunchView.showEditorForCurrentSelect
ion(LaunchView.java:570)
 at org.eclipse.debug.internal.ui.views.launch.LaunchView.selectionChanged
(LaunchView.java:446)
 at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
 at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:889)
 at org.eclipse.core.runtime.Platform.run(Platform.java:413)
 at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)
 at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java:1290)
 at org.eclipse.jface.viewers.StructuredViewer.setSelection
(StructuredViewer.java:1020)
 at org.eclipse.debug.internal.ui.views.launch.LaunchView.autoExpand
(LaunchView.java:966)
 at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspen
dThreadEvent(LaunchViewEventHandler.java:235)
 at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleSuspen
dEvent(LaunchViewEventHandler.java:181)
 at 
org.eclipse.debug.internal.ui.views.launch.LaunchViewEventHandler.doHandleDebugE
vents(LaunchViewEventHandler.java:102)
 at org.eclipse.debug.internal.ui.views.AbstractDebugEventHandler$1.run
(AbstractDebugEventHandler.java:70)
 at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
 at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:98)
 at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1815)
 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1549)
 at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
 at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
 at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
 at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
 at java.lang.reflect.Method.invoke(Native Method)
 at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
 at org.eclipse.core.launcher.Main.run(Main.java:747)
 at org.eclipse.core.launcher.Main.main(Main.java:583)

 After that work continues normally. And then no errors occur.
 
 It's easy to find out that error occurs there:
 
 org.eclipse.cdt.internal.ui.editor.CContentOutlinePage.createControl
(CContentOutlinePage.java:199)
Fix in the head.
Please reopen if problems.</WithStack>
    <WithOutStack>There is some problem when "step in"  in external function(laying in file out 
of workspace) while debugging. 
 
Now after "step in" error dialog occurs and such diagnostic appeares in .log:
 


 After that work continues normally. And then no errors occur.
 
 It's easy to find out that error occurs there:
 
 org.eclipse.cdt.internal.ui.editor.CContentOutlinePage.createControl
(CContentOutlinePage.java:199)
Fix in the head.
Please reopen if problems.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38403" />
    <CreationDate amount="2003-06-04 05:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>can't stop eclipse from switching to debug perspective</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>20030528
i don't use the debug perspective - i debug in my normal java perspective
in the past i used to be able to stop eclipse from switching (there was UI to 
make it possible)
now i cannot seem to find the ui and eclipse always switches to debug

marking a major - very frustrating
looks like the pref got moved
closing the report as invalid
So others can easily find it (reported in the build notes as well):

In the launch configuration dialog, select a launch configuration type.
Then using the displayed Perspectives tab you can control the perspective 
switching that occurs based on the launch mode.</WithStack>
    <WithOutStack>20030528
i don't use the debug perspective - i debug in my normal java perspective
in the past i used to be able to stop eclipse from switching (there was UI to 
make it possible)
now i cannot seem to find the ui and eclipse always switches to debug

marking a major - very frustrating
looks like the pref got moved
closing the report as invalid
So others can easily find it (reported in the build notes as well):

In the launch configuration dialog, select a launch configuration type.
Then using the displayed Perspectives tab you can control the perspective 
switching that occurs based on the launch mode.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38404" />
    <CreationDate amount="2003-06-04 06:33:00 -0400" />
    <DupId amount="6224" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Refactoring] Renaming of method parameters not reflected in @param tags</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="multicomment">
        <location start="0" end="133" />
        <code>/**
 * useless method to demonstrate something.
 * @param s1 unused parameter number one
 * @param s2 unused parameter number two
 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="134" end="173" />
        <code>void method(String s1, int i1) { ... }</code>
      </source_code>
      <source_code type="multicomment">
        <location start="427" end="561" />
        <code>/**
 * useless method to demonstrate something.
 * @param s1 unused parameter number one
 * @param s2 unused parameter number two
 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="562" end="612" />
        <code>void method(String uselessString, int i1) { ... }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>/**
 * useless method to demonstrate something.
 * @param s1 unused parameter number one
 * @param s2 unused parameter number two
 */
 void method(String s1, int i1) { ... }

Now point to "s1" and select "Refactor/Rename" and change it to something more 
meaningful like "uselessString". All references in the code are replaced, 
however after the refactoring it looks like this, i. e. the documentation 
comment is unchanged:

/**
 * useless method to demonstrate something.
 * @param s1 unused parameter number one
 * @param s2 unused parameter number two
 */
 void method(String uselessString, int i1) { ... }

I believe this should be changed, too.


*** This bug has been marked as a duplicate of 6224 ***</WithStack>
    <WithOutStack>/**
 * useless method to demonstrate something.
 * @param s1 unused parameter number one
 * @param s2 unused parameter number two
 */
 void method(String s1, int i1) { ... }

Now point to "s1" and select "Refactor/Rename" and change it to something more 
meaningful like "uselessString". All references in the code are replaced, 
however after the refactoring it looks like this, i. e. the documentation 
comment is unchanged:

/**
 * useless method to demonstrate something.
 * @param s1 unused parameter number one
 * @param s2 unused parameter number two
 */
 void method(String uselessString, int i1) { ... }

I believe this should be changed, too.


*** This bug has been marked as a duplicate of 6224 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38405" />
    <CreationDate amount="2003-06-04 06:50:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Problem with syntax highlighting of preprocessor directives</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Syntax highlighting of preprocessor directives doesn't handle whitespaces 
around # sign (internal parser seems to work fine, though). And some people 
write conditional code like this:
 
#ifdef blabla
#    define A
#endif
 
or
 
#ifdef blabla
    #define A
#endif

In these examples, second #define is not highlighted in C/C++ editors.
Created attachment 5053
Patch

   I've patched UI code to add a new rule for handling preprocessor directives,
PreprocessorRule class (extends WordRule). And here I noticed that
CppCodeScanner uses private class CWordRule, while CCodeScanner uses standard
WordRule. They seem to do exactly the same thing, but CWordRule additionally
checks for # sign to be the first character on the line.  As now preprocessor
directives are handled by PreprocessorRule class, CWordRule can be removed and
replaced with WordRule; also, there is no need for CWordDetector to pick up #
sign as a valid word start.
Patch applied.
status flip to Fixed</WithStack>
    <WithOutStack>Syntax highlighting of preprocessor directives doesn't handle whitespaces 
around # sign (internal parser seems to work fine, though). And some people 
write conditional code like this:
 
#ifdef blabla
#    define A
#endif
 
or
 
#ifdef blabla
    #define A
#endif

In these examples, second #define is not highlighted in C/C++ editors.
Created attachment 5053
Patch

   I've patched UI code to add a new rule for handling preprocessor directives,
PreprocessorRule class (extends WordRule). And here I noticed that
CppCodeScanner uses private class CWordRule, while CCodeScanner uses standard
WordRule. They seem to do exactly the same thing, but CWordRule additionally
checks for # sign to be the first character on the line.  As now preprocessor
directives are handled by PreprocessorRule class, CWordRule can be removed and
replaced with WordRule; also, there is no need for CWordDetector to pick up #
sign as a valid word start.
Patch applied.
status flip to Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38406" />
    <CreationDate amount="2003-06-04 08:17:00 -0400" />
    <DupId amount="38935" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No coding assistance for eclipse-tasks</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>There is no coding assistance for the ant "runtime tasks" defined in the 
preferences, like eclipse.incrementalBuild etc.


*** This bug has been marked as a duplicate of 38935 ***</WithStack>
    <WithOutStack>There is no coding assistance for the ant "runtime tasks" defined in the 
preferences, like eclipse.incrementalBuild etc.


*** This bug has been marked as a duplicate of 38935 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38407" />
    <CreationDate amount="2003-06-04 08:21:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[launching] Allow Java launch configurations to be specified as external tool builders</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. The "export ant build" files will create a an ant task with each of your</Line>
          <Line>launch configurations which you can then use in your build system.</Line>
          <Line>2. There is also ant4eclipse which will allow you to launch configurations</Line>
          <Line>(http://ant4eclipse.sourceforge.net/).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I have a launch configuration which is required to be run which generates some 
code. If that launch configuration isn't run then the project will not compile. 
(The autogenerated files are not in version control). It would be nice to be 
able to say in  the external tool builders section that you want a particular 
launch configuration to run at a certain point in the build cycle.
In the external tool builders property page you can specify to copy an existing 
configuration to run as an external tool.
yes but you can only copy other EXTERNAL configurations. I want a java launch 
configuration to be run!
Deferred
Is this going to be considered for 3.1?
This is not on the 3.1 plan.
I'd like to see that too. I'd like to run my junit tests on build.
any chance this could be considered for 3.2?
There appear to be 2 workarounds for this:
1. The "export ant build" files will create a an ant task with each of your
launch configurations which you can then use in your build system.
2. There is also ant4eclipse which will allow you to launch configurations
(http://ant4eclipse.sourceforge.net/).

Both of the above solutions have problems which still means we can't use it for
our situation.
No committment for 3.2, but re-opening to re-evaluate.
Deferred for post 3.2.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I have a launch configuration which is required to be run which generates some 
code. If that launch configuration isn't run then the project will not compile. 
(The autogenerated files are not in version control). It would be nice to be 
able to say in  the external tool builders section that you want a particular 
launch configuration to run at a certain point in the build cycle.
In the external tool builders property page you can specify to copy an existing 
configuration to run as an external tool.
yes but you can only copy other EXTERNAL configurations. I want a java launch 
configuration to be run!
Deferred
Is this going to be considered for 3.1?
This is not on the 3.1 plan.
I'd like to see that too. I'd like to run my junit tests on build.
any chance this could be considered for 3.2?
There appear to be 2 workarounds for this:
1. The "export ant build" files will create a an ant task with each of your
launch configurations which you can then use in your build system.
2. There is also ant4eclipse which will allow you to launch configurations
(http://ant4eclipse.sourceforge.net/).

Both of the above solutions have problems which still means we can't use it for
our situation.
No committment for 3.2, but re-opening to re-evaluate.
Deferred for post 3.2.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38408" />
    <CreationDate amount="2003-06-04 08:50:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Caret.drawCaret ignores image content</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20030528
Mac OS 10.2.6

On MacOS X the implementation of Caret.drawCaret does not use the contents of an 
image but only its bounds.
Fixed &gt; 20040609.</WithStack>
    <WithOutStack>I20030528
Mac OS 10.2.6

On MacOS X the implementation of Caret.drawCaret does not use the contents of an 
image but only its bounds.
Fixed &gt; 20040609.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38409" />
    <CreationDate amount="2003-06-04 10:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Error underlining flickers when changing selection</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Open a Java editor, add some errors: Errors get underlined by the Java editor</Line>
          <Line>2. At a location without error make a selection with the mouse. While enlarging</Line>
          <Line>the selection you see that all error underlines are flickering.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604

1. Open a Java editor, add some errors: Errors get underlined by the Java editor
2. At a location without error make a selection with the mouse. While enlarging
the selection you see that all error underlines are flickering.

Seems to be new in 3.0, because the flickering does not appear in 2.1.1
verified.
Knut, is that a StyledText problem or JDT UI ?

I loaded all Platform UI and SWT plugins from head in a 20030528 workspace. The 
inner Eclipse running with that code base does not exhibit this problem. Seems 
to be JDT text.
The code painting the squiggly lines (i.e. any text annotation) does not 
differ between 2.1.1 and the 3.0 code stream. Will check with M1 build.
*** Bug 38505 has been marked as a duplicate of this bug. ***
*** Bug 38520 has been marked as a duplicate of this bug. ***
I20030605.

Exposed by change of default setting of the synchronization preference. Scope 
surrounded by setRedraw(false) - setRedraw(true) was too wide.</WithStack>
    <WithOutStack>20030604

1. Open a Java editor, add some errors: Errors get underlined by the Java editor
2. At a location without error make a selection with the mouse. While enlarging
the selection you see that all error underlines are flickering.

Seems to be new in 3.0, because the flickering does not appear in 2.1.1
verified.
Knut, is that a StyledText problem or JDT UI ?

I loaded all Platform UI and SWT plugins from head in a 20030528 workspace. The 
inner Eclipse running with that code base does not exhibit this problem. Seems 
to be JDT text.
The code painting the squiggly lines (i.e. any text annotation) does not 
differ between 2.1.1 and the 3.0 code stream. Will check with M1 build.
*** Bug 38505 has been marked as a duplicate of this bug. ***
*** Bug 38520 has been marked as a duplicate of this bug. ***
I20030605.

Exposed by change of default setting of the synchronization preference. Scope 
surrounded by setRedraw(false) - setRedraw(true) was too wide.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38410" />
    <CreationDate amount="2003-06-04 10:35:00 -0400" />
    <DupId amount="26846" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Tasks] More sofisticated filter</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I would like to be able to have a filter on my tasks as follows:
Any severe task in any project and Any warning in the currantly selected 
resource.

to phrase it differently:
All Severe problems everywhere + warnings in the current file.


*** This bug has been marked as a duplicate of 26846 ***</WithStack>
    <WithOutStack>I would like to be able to have a filter on my tasks as follows:
Any severe task in any project and Any warning in the currantly selected 
resource.

to phrase it differently:
All Severe problems everywhere + warnings in the current file.


*** This bug has been marked as a duplicate of 26846 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38411" />
    <CreationDate amount="2003-06-04 10:37:00 -0400" />
    <DupId amount="37870" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Renaming instance variable does not update outline view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Performing a Refactgor/Rename on an instance variable of a class does not 
update the outline view. I am using 3.0 build 200305270800


*** This bug has been marked as a duplicate of 37870 ***</WithStack>
    <WithOutStack>Performing a Refactgor/Rename on an instance variable of a class does not 
update the outline view. I am using 3.0 build 200305270800


*** This bug has been marked as a duplicate of 37870 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38412" />
    <CreationDate amount="2003-06-04 10:50:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[Actions] Navigator tree cell editors too small</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="12">
        <Lines>
          <Line>- start Eclipse</Line>
          <Line>- in the Navigator select any resource</Line>
          <Line>- from the context menu select "Rename"</Line>
          <Line>Observe:  the cell editor field is too small and leaves only the upper half of the text visible.</Line>
          <Line>Created attachment 5054</Line>
          <Line>Tree cell editor too small</Line>
          <Line>Text widget with no border is now smaller.  Waiting on VI for fixes to</Line>
          <Line>TreeEditor etc.</Line>
          <Line>VI, can you implement the vertical alignment thing?</Line>
          <Line>When TreeEditor etc. is fixed, someone will have to contact JFace with the</Line>
          <Line>good code.</Line>
          <Line>Vertical alignment now implemented on TreeEditor.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20030528
MacOS X 10.2.6

- start Eclipse
- in the Navigator select any resource
- from the context menu select "Rename"
Observe:  the cell editor field is too small and leaves only the upper half of the text visible.
Created attachment 5054
Tree cell editor too small
Text widget with no border is now smaller.  Waiting on VI for fixes to 
TreeEditor etc.
VI, can you implement the vertical alignment thing?
When TreeEditor etc. is fixed, someone will have to contact JFace with the 
good code.
Vertical alignment now implemented on TreeEditor.

Will investigate what is required by JFace.
*** Bug 49208 has been marked as a duplicate of this bug. ***
We could gain another two pixel of vertical space, if we can get rid of the black border.
The Mac has a focus ring, so there is no need to have a black frame too.
I realized that this cell editor is custom made in the RenameResourceAction.
Moving to platform.ui.
Increased severity to major because renaming resources is really hampered by this problem.
In addition, the Text doesn't seem to use the same font as the underlying Tree.
Created attachment 8494
patch for RenameResourceAction.java

This patch fixes both problems for me.
(Apply to project).
fixed and released for I20040413
*** Bug 64296 has been marked as a duplicate of this bug. ***
In M9 the system property "org.eclipse.swt.internal.carbon.noFocusRing" has been introduced
as a temporary workaround for bug #28842. The existence of the property turns the native focus ring 
off.
As a consequence the fix for this problem must now include a test for existence of the system property
"org.eclipse.swt.internal.carbon.noFocusRing". Without this, the cell editor will have no border at all.

Created attachment 11445
patch with additional check for system property
RC2 candidate
You have to check if the editor is in a main window too. The focus ring is 
drawn on dialogs.
Thanks for mentioning this.
Created attachment 11505
patch with additional check for system property
Michael, OK to fix for 3.0 RC2 ?
Fixed for I20040604
Verified on Mac OS 10.3.3 using I20040529.
Adding Kim so that she can mark this bug as verified.
Marking as verified on your behalf.
I'm still seeing this problem on RC2 using the Properties view to edit a Text field.  The text gets cut off 
at the bottom of the field.
This bug report (and its fix) is only for the Navigator.
[I've updated title accordingly]

Please file a new bug against the Properties view.</WithStack>
    <WithOutStack>I20030528
MacOS X 10.2.6

- start Eclipse
- in the Navigator select any resource
- from the context menu select "Rename"
Observe:  the cell editor field is too small and leaves only the upper half of the text visible.
Created attachment 5054
Tree cell editor too small
Text widget with no border is now smaller.  Waiting on VI for fixes to 
TreeEditor etc.
VI, can you implement the vertical alignment thing?
When TreeEditor etc. is fixed, someone will have to contact JFace with the 
good code.
Vertical alignment now implemented on TreeEditor.

Will investigate what is required by JFace.
*** Bug 49208 has been marked as a duplicate of this bug. ***
We could gain another two pixel of vertical space, if we can get rid of the black border.
The Mac has a focus ring, so there is no need to have a black frame too.
I realized that this cell editor is custom made in the RenameResourceAction.
Moving to platform.ui.
Increased severity to major because renaming resources is really hampered by this problem.
In addition, the Text doesn't seem to use the same font as the underlying Tree.
Created attachment 8494
patch for RenameResourceAction.java

This patch fixes both problems for me.
(Apply to project).
fixed and released for I20040413
*** Bug 64296 has been marked as a duplicate of this bug. ***
In M9 the system property "org.eclipse.swt.internal.carbon.noFocusRing" has been introduced
as a temporary workaround for bug #28842. The existence of the property turns the native focus ring 
off.
As a consequence the fix for this problem must now include a test for existence of the system property
"org.eclipse.swt.internal.carbon.noFocusRing". Without this, the cell editor will have no border at all.

Created attachment 11445
patch with additional check for system property
RC2 candidate
You have to check if the editor is in a main window too. The focus ring is 
drawn on dialogs.
Thanks for mentioning this.
Created attachment 11505
patch with additional check for system property
Michael, OK to fix for 3.0 RC2 ?
Fixed for I20040604
Verified on Mac OS 10.3.3 using I20040529.
Adding Kim so that she can mark this bug as verified.
Marking as verified on your behalf.
I'm still seeing this problem on RC2 using the Properties view to edit a Text field.  The text gets cut off 
at the bottom of the field.
This bug report (and its fix) is only for the Navigator.
[I've updated title accordingly]

Please file a new bug against the Properties view.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38413" />
    <CreationDate amount="2003-06-04 10:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Inline editing of Tree node results in blank node</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="26">
        <Lines>
          <Line>- start Eclipse</Line>
          <Line>- in the Navigator select any resource</Line>
          <Line>- from the context menu select "Rename"</Line>
          <Line>- type in a new name and press the Return key</Line>
          <Line>Observe:  the cell editor goes away and the renamed node becomes blank, that is no</Line>
          <Line>label, no icon.</Line>
          <Line>Created attachment 5055</Line>
          <Line>blank tree node after rename</Line>
          <Line>Clipping bug?</Line>
          <Line>BTW:  I was able to repeat this but it doesn't seem to happen for the last</Line>
          <Line>item in the tree.</Line>
          <Line>*** Bug 39171 has been marked as a duplicate of this bug. ***</Line>
          <Line>Note: It's ok to mark 39171 as a duplicate of this bug as long as you don't forget about the redraw</Line>
          <Line>issue it mentions. Did you open a new bug to cover that aspect of it?</Line>
          <Line>I think my "tree node becomes blank" and your</Line>
          <Line>"area under in-place editing window is blank"</Line>
          <Line>are the same thing.</Line>
          <Line>However, I could not repaint the blank area just by collapsing and the expanding the</Line>
          <Line>container node. I had to scroll once first.</Line>
          <Line>*** Bug 44457 has been marked as a duplicate of this bug. ***</Line>
          <Line>*** Bug 45916 has been marked as a duplicate of this bug. ***</Line>
          <Line>Cannot reproduce in I20040310</Line>
          <Line>Note: This should have been resolved as "fixed" not worksforme. SWT did actually fix the underlying</Line>
          <Line>problem.</Line>
          <Line>How could I know...</Line>
          <Line>*sigh*. Not your problem Andre. Silenio should have marked it fixed after making the fix.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I20030528
MacOS X 10.2.6

- start Eclipse
- in the Navigator select any resource
- from the context menu select "Rename"
- type in a new name and press the Return key
Observe:  the cell editor goes away and the renamed node becomes blank, that is no 
label, no icon.
Created attachment 5055
blank tree node after rename
Clipping bug?
BTW:  I was able to repeat this but it doesn't seem to happen for the last 
item in the tree.
*** Bug 39171 has been marked as a duplicate of this bug. ***
Note: It's ok to mark 39171 as a duplicate of this bug as long as you don't forget about the redraw 
issue it mentions. Did you open a new bug to cover that aspect of it?
I think my "tree node becomes blank" and your
"area under in-place editing window is blank"
are the same thing.
However, I could not repaint the blank area just by collapsing and the expanding the 
container node. I had to scroll once first.
*** Bug 44457 has been marked as a duplicate of this bug. ***
*** Bug 45916 has been marked as a duplicate of this bug. ***
Cannot reproduce in I20040310
Note: This should have been resolved as "fixed" not worksforme. SWT did actually fix the underlying 
problem.
How could I know... 
*sigh*. Not your problem Andre. Silenio should have marked it fixed after making the fix.

Sorry, I was sure I had another bug report for this problem, but I could not 
find it. This is a duplicate of bug#51088.</WithStack>
    <WithOutStack>I20030528
MacOS X 10.2.6

- start Eclipse
- in the Navigator select any resource
- from the context menu select "Rename"
- type in a new name and press the Return key
Observe:  the cell editor goes away and the renamed node becomes blank, that is no 
label, no icon.
Created attachment 5055
blank tree node after rename
Clipping bug?
BTW:  I was able to repeat this but it doesn't seem to happen for the last 
item in the tree.
*** Bug 39171 has been marked as a duplicate of this bug. ***
Note: It's ok to mark 39171 as a duplicate of this bug as long as you don't forget about the redraw 
issue it mentions. Did you open a new bug to cover that aspect of it?
I think my "tree node becomes blank" and your
"area under in-place editing window is blank"
are the same thing.
However, I could not repaint the blank area just by collapsing and the expanding the 
container node. I had to scroll once first.
*** Bug 44457 has been marked as a duplicate of this bug. ***
*** Bug 45916 has been marked as a duplicate of this bug. ***
Cannot reproduce in I20040310
Note: This should have been resolved as "fixed" not worksforme. SWT did actually fix the underlying 
problem.
How could I know... 
*sigh*. Not your problem Andre. Silenio should have marked it fixed after making the fix.

Sorry, I was sure I had another bug report for this problem, but I could not 
find it. This is a duplicate of bug#51088.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38414" />
    <CreationDate amount="2003-06-04 11:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Viewers] StructuredViewer.setSelection() fires if selection does not change</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>The comment for StructureViewer.setSelection(ISelection, boolean) claims that
updateSelection is called only if the selection differs from the current 
selection.

The code looks like it does not implement this behaviour.  It seems that 
updateSelection is always called.

I don't know if the comment has just become stale, but I believe behaviour 
that matches the comment would be more beneficial than the existing behaviour.
The comment is stale.  It is sometimes necessary to be able to force 
notification of a selection change, e.g. when the program changes the selection 
at the SWT widget level (SWT does not send change events when things are 
changed programmatically).  This can be done using viewer.setSelection
(viewer.getSelection()).  It may be better to have special API to force a 
notification, rather than relying on the behaviour of setSelection.

Reassigning bugs in component areas that are changing ownership.
There are no plans to fix this.</WithStack>
    <WithOutStack>The comment for StructureViewer.setSelection(ISelection, boolean) claims that
updateSelection is called only if the selection differs from the current 
selection.

The code looks like it does not implement this behaviour.  It seems that 
updateSelection is always called.

I don't know if the comment has just become stale, but I believe behaviour 
that matches the comment would be more beneficial than the existing behaviour.
The comment is stale.  It is sometimes necessary to be able to force 
notification of a selection change, e.g. when the program changes the selection 
at the SWT widget level (SWT does not send change events when things are 
changed programmatically).  This can be done using viewer.setSelection
(viewer.getSelection()).  It may be better to have special API to force a 
notification, rather than relying on the behaviour of setSelection.

Reassigning bugs in component areas that are changing ownership.
There are no plans to fix this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38415" />
    <CreationDate amount="2003-06-04 11:21:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>remove() function in combo behaves inconsistently (BBAWT)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="import">
        <location start="292" end="320" />
        <code>import org.eclipse.swt.SWT;</code>
      </source_code>
      <source_code type="import">
        <location start="321" end="362" />
        <code>import org.eclipse.swt.layout.FillLayout;</code>
      </source_code>
      <source_code type="import">
        <location start="363" end="400" />
        <code>import org.eclipse.swt.widgets.Combo;</code>
      </source_code>
      <source_code type="import">
        <location start="401" end="440" />
        <code>import org.eclipse.swt.widgets.Display;</code>
      </source_code>
      <source_code type="import">
        <location start="441" end="478" />
        <code>import org.eclipse.swt.widgets.Shell;</code>
      </source_code>
      <source_code type="class">
        <location start="481" end="1128" />
        <code>public class SWTChoiceTest {
	
	Display display;
	Shell shell;
	Combo combo;
	
	public void run(){
		display = new Display();
		shell = new Shell(display,SWT.SHELL_TRIM);
		combo = new Combo(shell,SWT.DROP_DOWN | SWT.READ_ONLY | SWT.CLIP_CHILDREN |
SWT.CLIP_SIBLINGS);
		shell.setLayout(new FillLayout());
		shell.setSize(400,400);
		combo.add("Item 1");
		combo.add("Item 2");
		combo.select(0);
		shell.open();
		combo.remove(0);
		combo.remove(0);
		while(!shell.isDisposed()){
			display.readAndDispatch();
			display.sleep();
		}
		display.dispose();
			
		
	}
	
	public static void main(String [] args){
		new SWTChoiceTest().run();
	}
		

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>On Linux (GTK AND Motif), if you remove() the last item in a combo, the text
field of the combo still shows that item. But on Windows and QNX, it does not.
The following test case demonstrates this, as there are no items remaining in
the combo, but it still shows 'Item 2' in the textfield. 

import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;


public class SWTChoiceTest {
	
	Display display;
	Shell shell;
	Combo combo;
	
	public void run(){
		display = new Display();
		shell = new Shell(display,SWT.SHELL_TRIM);
		combo = new Combo(shell,SWT.DROP_DOWN | SWT.READ_ONLY | SWT.CLIP_CHILDREN |
SWT.CLIP_SIBLINGS);
		shell.setLayout(new FillLayout());
		shell.setSize(400,400);
		combo.add("Item 1");
		combo.add("Item 2");
		combo.select(0);
		shell.open();
		combo.remove(0);
		combo.remove(0);
		while(!shell.isDisposed()){
			display.readAndDispatch();
			display.sleep();
		}
		display.dispose();
			
		
	}
	
	public static void main(String [] args){
		new SWTChoiceTest().run();
	}
		

}
SWT version: 3007
GTK version: 2.0.6
This has been fixed for a while.</WithStack>
    <WithOutStack>On Linux (GTK AND Motif), if you remove() the last item in a combo, the text
field of the combo still shows that item. But on Windows and QNX, it does not.
The following test case demonstrates this, as there are no items remaining in
the combo, but it still shows 'Item 2' in the textfield. 

import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;


public class SWTChoiceTest {
	
	Display display;
	Shell shell;
	Combo combo;
	
	public void run(){
		display = new Display();
		shell = new Shell(display,SWT.SHELL_TRIM);
		combo = new Combo(shell,SWT.DROP_DOWN | SWT.READ_ONLY | SWT.CLIP_CHILDREN |
SWT.CLIP_SIBLINGS);
		shell.setLayout(new FillLayout());
		shell.setSize(400,400);
		combo.add("Item 1");
		combo.add("Item 2");
		combo.select(0);
		shell.open();
		combo.remove(0);
		combo.remove(0);
		while(!shell.isDisposed()){
			display.readAndDispatch();
			display.sleep();
		}
		display.dispose();
			
		
	}
	
	public static void main(String [] args){
		new SWTChoiceTest().run();
	}
		

}
SWT version: 3007
GTK version: 2.0.6
This has been fixed for a while.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38416" />
    <CreationDate amount="2003-06-04 11:29:00 -0400" />
    <DupId amount="11426" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[Sync View] Synchronize view should contain a TableTree</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When synchronizing with CVS repository, the top pane (structure compare) is 
currently a Tree.  This tree does not utilize its full width.  When catching up 
with changes, it is *very* important to know what the change is so it can be 
reviewed.  For example, is it a JavaDoc change, or a bug fix.  Currently, you 
must select the file, wait 3 seconds, right-click, Show in Resource-History, 
and find the release comment that corresponds to the revision you are catching 
up with.  This is very inefficient.

The preferred way for me would be to see a TableTree widget.  The additional 
columns would display who released the incoming change, and the release 
comment.  That way, unimportant changes like whitespace and comments can be 
ignored, and code changes can be reviewed.
I agree with the frustration.

We are already working on a replacement for the sync view that will pretty much
have what you describe plus much more! Look for the first cut in the 3.0 M2 build.
Table view is in new sync view but we haven't added showin of incoming
comment/username yet.

*** This bug has been marked as a duplicate of 11426 ***</WithStack>
    <WithOutStack>When synchronizing with CVS repository, the top pane (structure compare) is 
currently a Tree.  This tree does not utilize its full width.  When catching up 
with changes, it is *very* important to know what the change is so it can be 
reviewed.  For example, is it a JavaDoc change, or a bug fix.  Currently, you 
must select the file, wait 3 seconds, right-click, Show in Resource-History, 
and find the release comment that corresponds to the revision you are catching 
up with.  This is very inefficient.

The preferred way for me would be to see a TableTree widget.  The additional 
columns would display who released the incoming change, and the release 
comment.  That way, unimportant changes like whitespace and comments can be 
ignored, and code changes can be reviewed.
I agree with the frustration.

We are already working on a replacement for the sync view that will pretty much
have what you describe plus much more! Look for the first cut in the 3.0 M2 build.
Table view is in new sync view but we haven't added showin of incoming
comment/username yet.

*** This bug has been marked as a duplicate of 11426 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38417" />
    <CreationDate amount="2003-06-04 12:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CVS label decorations not displayed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I have 2 workstaions, Windows XP and Red Hat 9. Source code was initialy 
committed from the XP box. Did an Team/Update on the Linux box. Everything is 
fine except that there are no icon and label decorations on the linux box. XP 
displays them fine.
Have you turned them on in the preferences? 

Window &gt; Preferences &gt; workbench &gt; Label Decorations.
Shame on me. That was it. The only thing I can say in my defence is that on XP 
I didn't have to enable it for CVS. I didn't even know that you can turn it 
on/off.

Sorry for taking your time.

Milan
Closing then.</WithStack>
    <WithOutStack>I have 2 workstaions, Windows XP and Red Hat 9. Source code was initialy 
committed from the XP box. Did an Team/Update on the Linux box. Everything is 
fine except that there are no icon and label decorations on the linux box. XP 
displays them fine.
Have you turned them on in the preferences? 

Window &gt; Preferences &gt; workbench &gt; Label Decorations.
Shame on me. That was it. The only thing I can say in my defence is that on XP 
I didn't have to enable it for CVS. I didn't even know that you can turn it 
on/off.

Sorry for taking your time.

Milan
Closing then.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38418" />
    <CreationDate amount="2003-06-04 13:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Shells are resizable on GTK and Motif when resizeability is not specified (BBAWT)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="import">
        <location start="136" end="164" />
        <code>import org.eclipse.swt.SWT;</code>
      </source_code>
      <source_code type="import">
        <location start="165" end="206" />
        <code>import org.eclipse.swt.layout.FillLayout;</code>
      </source_code>
      <source_code type="import">
        <location start="207" end="246" />
        <code>import org.eclipse.swt.widgets.Display;</code>
      </source_code>
      <source_code type="import">
        <location start="247" end="284" />
        <code>import org.eclipse.swt.widgets.Shell;</code>
      </source_code>
      <source_code type="class">
        <location start="287" end="728" />
        <code>public class SWTResizeTest {
	
	Display display;
	Shell shell;
	
	public void run(){
		display = new Display();
		shell = new Shell(display,SWT.BORDER | SWT.CLOSE | SWT.TITLE | SWT.NULL |
SWT.APPLICATION_MODAL);
		shell.setSize(400,400);
		shell.open();
		while(!shell.isDisposed()){
			display.readAndDispatch();
			display.sleep();
		}
		display.dispose();

	}
	
	public static void main (String [] args){
		new SWTResizeTest().run();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>In the following test case, the shell created will not be resizable in GTK or
Motif on Linux, but will be resizable on Windows and QNX.

import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;


public class SWTResizeTest {
	
	Display display;
	Shell shell;
	
	public void run(){
		display = new Display();
		shell = new Shell(display,SWT.BORDER | SWT.CLOSE | SWT.TITLE | SWT.NULL |
SWT.APPLICATION_MODAL);
		shell.setSize(400,400);
		shell.open();
		while(!shell.isDisposed()){
			display.readAndDispatch();
			display.sleep();
		}
		display.dispose();

	}
	
	public static void main (String [] args){
		new SWTResizeTest().run();
	}
}
SWT version: 3007
Did you get this backwards?

&gt; In the following test case, the shell created will not be resizable in GTK
&gt; or Motif on Linux, but will be resizable on Windows and QNX.

I seems different from the title of this PR.  In any case, I'm going to assume 
the title is what you meant.  On GTK and Motif, we are at the mercy of the 
window manager.  Window trimming is a hint that may not be honoured.  To see 
that this is true, try to find any other app that has a dialog with the 
trimming you want on the desktop.  Also, run the control example and see if 
the native message box has the trim you want.  If the answer is no to both of 
these, then there is nothing we can do.

I'm going to write a FAQ about this very soon.

Marking as WONTFIX (really CANTFIX).  Please reopen this PR if I am wrong.  
Thanks.

I wanted to reopen this to mark it as a duplicate of bug 37052, but there is no
"reopen bug" option on this bug report for some reason.</WithStack>
    <WithOutStack>In the following test case, the shell created will not be resizable in GTK or
Motif on Linux, but will be resizable on Windows and QNX.

import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;


public class SWTResizeTest {
	
	Display display;
	Shell shell;
	
	public void run(){
		display = new Display();
		shell = new Shell(display,SWT.BORDER | SWT.CLOSE | SWT.TITLE | SWT.NULL |
SWT.APPLICATION_MODAL);
		shell.setSize(400,400);
		shell.open();
		while(!shell.isDisposed()){
			display.readAndDispatch();
			display.sleep();
		}
		display.dispose();

	}
	
	public static void main (String [] args){
		new SWTResizeTest().run();
	}
}
SWT version: 3007
Did you get this backwards?

&gt; In the following test case, the shell created will not be resizable in GTK
&gt; or Motif on Linux, but will be resizable on Windows and QNX.

I seems different from the title of this PR.  In any case, I'm going to assume 
the title is what you meant.  On GTK and Motif, we are at the mercy of the 
window manager.  Window trimming is a hint that may not be honoured.  To see 
that this is true, try to find any other app that has a dialog with the 
trimming you want on the desktop.  Also, run the control example and see if 
the native message box has the trim you want.  If the answer is no to both of 
these, then there is nothing we can do.

I'm going to write a FAQ about this very soon.

Marking as WONTFIX (really CANTFIX).  Please reopen this PR if I am wrong.  
Thanks.

I wanted to reopen this to mark it as a duplicate of bug 37052, but there is no
"reopen bug" option on this bug report for some reason.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38419" />
    <CreationDate amount="2003-06-04 13:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Variable "filters" is a misnomer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The-functionality-formerly-known-as-object-browser is currently
called variable filters. I think this is a misnomer as the term
"filter" in UI terminology means something that removes information
(usually, useless information). The object browser just presents
data in a different form.

Since this mechanism provides a different way to browse objects, I
like the "browser" terminology. Object browser, variable browser,
etc. Or maybe something like "enhanced view"?
We also need a new icon for this feature.
Changed all external AND internal references from:
"variable filters" &amp; "variables content providers"
to
"object browsers".

This makes things a lot more consistent, and easier to follow.  

Filed bug 39024 for the icon issue.
Please verify, Darin W.
Changed tool-tip text to "Show Logical Structure". Still need new artwork.
This is fixed. The term "logical structures" now appears in the UI. A bug is 
filed for new artwork (bug 39024). A "show as" cascading (context) menu appears 
when there are logical structure choices for the selected variable/value.
Please verify, Jared.
Verified.</WithStack>
    <WithOutStack>The-functionality-formerly-known-as-object-browser is currently
called variable filters. I think this is a misnomer as the term
"filter" in UI terminology means something that removes information
(usually, useless information). The object browser just presents
data in a different form.

Since this mechanism provides a different way to browse objects, I
like the "browser" terminology. Object browser, variable browser,
etc. Or maybe something like "enhanced view"?
We also need a new icon for this feature.
Changed all external AND internal references from:
"variable filters" &amp; "variables content providers"
to
"object browsers".

This makes things a lot more consistent, and easier to follow.  

Filed bug 39024 for the icon issue.
Please verify, Darin W.
Changed tool-tip text to "Show Logical Structure". Still need new artwork.
This is fixed. The term "logical structures" now appears in the UI. A bug is 
filed for new artwork (bug 39024). A "show as" cascading (context) menu appears 
when there are logical structure choices for the selected variable/value.
Please verify, Jared.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38420" />
    <CreationDate amount="2003-06-04 13:11:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Details pane doesn't populate when first opened</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>In Variables &amp; Expressions view, if something is selected when the Details pane 
is hidden, then the Details pane is shown, it doesn't populate with details for 
the selected item.  This appears to have been a regression from work on 36942.
Fixed in VariablesView.isDetailsPaneVisible().
Please verify, Darins.
Verified.</WithStack>
    <WithOutStack>In Variables &amp; Expressions view, if something is selected when the Details pane 
is hidden, then the Details pane is shown, it doesn't populate with details for 
the selected item.  This appears to have been a regression from work on 36942.
Fixed in VariablesView.isDetailsPaneVisible().
Please verify, Darins.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38421" />
    <CreationDate amount="2003-06-04 13:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Misfiring KeyReleased event in Motif (BBAWT)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="import">
        <location start="305" end="333" />
        <code>import org.eclipse.swt.SWT;</code>
      </source_code>
      <source_code type="import">
        <location start="334" end="373" />
        <code>import org.eclipse.swt.events.KeyEvent;</code>
      </source_code>
      <source_code type="import">
        <location start="374" end="416" />
        <code>import org.eclipse.swt.events.KeyListener;</code>
      </source_code>
      <source_code type="import">
        <location start="417" end="456" />
        <code>import org.eclipse.swt.widgets.Display;</code>
      </source_code>
      <source_code type="import">
        <location start="457" end="494" />
        <code>import org.eclipse.swt.widgets.Shell;</code>
      </source_code>
      <source_code type="class">
        <location start="496" end="1254" />
        <code>public class SWTKeyAdapterTest {

	Display display;
	Shell shell;

	public void run() {
		display = new Display();
		shell = new Shell(display, SWT.SHELL_TRIM);
		shell.addKeyListener(new KeyListener() {
			/**
				 * @see org.eclipse.swt.events.KeyListener#keyReleased(KeyEvent)
				 */
			public void keyReleased(KeyEvent e) {
				System.out.println(e.character + "  Key Released");
			}
			/**
			 * @see org.eclipse.swt.events.KeyListener#keyPressed(KeyEvent)
			 */
			public void keyPressed(KeyEvent e) {
			}

		});

		shell.setSize(300, 300);
		shell.open();
		while (!shell.isDisposed()) {
			display.readAndDispatch();
			display.sleep();
		}
		display.dispose();

	}

	public static void main(String[] args) {
		new SWTKeyAdapterTest().run();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>In the following test case, when the shell is maximized, any key pressed should
be reported to the terminal upon being released. However, in Motif, the key is
reported as soon as it is pressed. If you hold the key down, it gets reported
before you let it go. This is not a problem on GTK, Windows or QNX.

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.KeyEvent;
import org.eclipse.swt.events.KeyListener;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;

public class SWTKeyAdapterTest {

	Display display;
	Shell shell;

	public void run() {
		display = new Display();
		shell = new Shell(display, SWT.SHELL_TRIM);
		shell.addKeyListener(new KeyListener() {
			/**
				 * @see org.eclipse.swt.events.KeyListener#keyReleased(KeyEvent)
				 */
			public void keyReleased(KeyEvent e) {
				System.out.println(e.character + "  Key Released");
			}
			/**
			 * @see org.eclipse.swt.events.KeyListener#keyPressed(KeyEvent)
			 */
			public void keyPressed(KeyEvent e) {
			}

		});

		shell.setSize(300, 300);
		shell.open();
		while (!shell.isDisposed()) {
			display.readAndDispatch();
			display.sleep();
		}
		display.dispose();

	}

	public static void main(String[] args) {
		new SWTKeyAdapterTest().run();
	}
}
SWT version: 3007
This is a platform difference that we won't work around.  When you hold a key 
in X, it is undefined whether you will get down/up or just repeated downs.</WithStack>
    <WithOutStack>In the following test case, when the shell is maximized, any key pressed should
be reported to the terminal upon being released. However, in Motif, the key is
reported as soon as it is pressed. If you hold the key down, it gets reported
before you let it go. This is not a problem on GTK, Windows or QNX.

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.KeyEvent;
import org.eclipse.swt.events.KeyListener;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;

public class SWTKeyAdapterTest {

	Display display;
	Shell shell;

	public void run() {
		display = new Display();
		shell = new Shell(display, SWT.SHELL_TRIM);
		shell.addKeyListener(new KeyListener() {
			/**
				 * @see org.eclipse.swt.events.KeyListener#keyReleased(KeyEvent)
				 */
			public void keyReleased(KeyEvent e) {
				System.out.println(e.character + "  Key Released");
			}
			/**
			 * @see org.eclipse.swt.events.KeyListener#keyPressed(KeyEvent)
			 */
			public void keyPressed(KeyEvent e) {
			}

		});

		shell.setSize(300, 300);
		shell.open();
		while (!shell.isDisposed()) {
			display.readAndDispatch();
			display.sleep();
		}
		display.dispose();

	}

	public static void main(String[] args) {
		new SWTKeyAdapterTest().run();
	}
}
SWT version: 3007
This is a platform difference that we won't work around.  When you hold a key 
in X, it is undefined whether you will get down/up or just repeated downs.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38422" />
    <CreationDate amount="2003-06-04 14:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Compare with superclass(es)?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>(Apologies if this suggestion is misplaced; I'm still figuring out Eclipse's 
structure.)

I like the code-structure comparison tool... but as far as I can tell (at least 
in WSAD) there's no really easy way to compare a subclass against its 
superclass. Simplest workaround I've found is to temporarily rename the subclass 
to the same name as the superclass, save it that way (compilation error, but 
that's OK), do the "compare with each other", then repair the classname.

There should probably be a compare that ignores the classname, to address this 
case.

Even better might be "compare each member against nearest superclass with 
like-named member". That would avoid the need to explicitly select the 
superclass for comparison, and would yield a useful summary of how this subclass 
actually differs.

(Also, on a related topic: Much as I like the smart-scrolling view of the 
comparison results... sometimes, when trying to understand a set of interlinked 
overrides, it might be helpful to be able to print the comparison results so we 
can scribble notes and arrows on them.)
Not for 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>(Apologies if this suggestion is misplaced; I'm still figuring out Eclipse's 
structure.)

I like the code-structure comparison tool... but as far as I can tell (at least 
in WSAD) there's no really easy way to compare a subclass against its 
superclass. Simplest workaround I've found is to temporarily rename the subclass 
to the same name as the superclass, save it that way (compilation error, but 
that's OK), do the "compare with each other", then repair the classname.

There should probably be a compare that ignores the classname, to address this 
case.

Even better might be "compare each member against nearest superclass with 
like-named member". That would avoid the need to explicitly select the 
superclass for comparison, and would yield a useful summary of how this subclass 
actually differs.

(Also, on a related topic: Much as I like the smart-scrolling view of the 
comparison results... sometimes, when trying to understand a set of interlinked 
overrides, it might be helpful to be able to print the comparison results so we 
can scribble notes and arrows on them.)
Not for 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38423" />
    <CreationDate amount="2003-06-04 14:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>NPE during creation of variables view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340643668">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.debug.internal.ui.views.variables.VariablesView.populateDetailPane(VariablesView.java:867)</Frame>
          <Frame depth="1">org.eclipse.debug.internal.ui.views.variables.VariablesView.showDetailPane(VariablesView.java:649)</Frame>
          <Frame depth="2">org.eclipse.debug.internal.ui.views.variables.VariablesView.setDetailPaneOrientation(VariablesView.java:632)</Frame>
          <Frame depth="3">org.eclipse.debug.internal.ui.views.variables.VariablesView.createViewer(VariablesView.java:500)</Frame>
          <Frame depth="4">org.eclipse.debug.ui.AbstractDebugView$ViewerPage.createControl(AbstractDebugView.java:253)</Frame>
          <Frame depth="5">org.eclipse.debug.ui.AbstractDebugView.createDefaultPage(AbstractDebugView.java:335)</Frame>
          <Frame depth="6">org.eclipse.ui.part.PageBookView.createPartControl(PageBookView.java:362)</Frame>
          <Frame depth="7">org.eclipse.debug.ui.AbstractDebugView.createPartControl(AbstractDebugView.java:302)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.PartPane$4.run(PartPane.java:141)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:889)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:137)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.ViewPane.createChildControl(ViewPane.java:211)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.PartPane.createControl(PartPane.java:186)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:190)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.PartTabFolder.createPartTab(PartTabFolder.java:252)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.PartTabFolder.createControl(PartTabFolder.java:224)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:192)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.PerspectivePresentation.activate(PerspectivePresentation.java:96)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:718)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.WorkbenchPage.onActivate(WorkbenchPage.java:1794)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.WorkbenchWindow$7.run(WorkbenchWindow.java:1442)</Frame>
          <Frame depth="22">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.WorkbenchWindow.setActivePage(WorkbenchWindow.java:1429)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1305)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1263)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1223)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench$12.run(Workbench.java:1141)</Frame>
          <Frame depth="28">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:889)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:1093)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.init(Workbench.java:870)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.run(Workbench.java:1373)</Frame>
          <Frame depth="33">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="34">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="35">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="36">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="37">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="38">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="41">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Restarted Eclipse with the debug perspective active and the variables view 
visible.

java.lang.NullPointerException
at 
org.eclipse.debug.internal.ui.views.variables.VariablesView.populateDetailPane
(VariablesView.java:867)
at org.eclipse.debug.internal.ui.views.variables.VariablesView.showDetailPane
(VariablesView.java:649)
at 
org.eclipse.debug.internal.ui.views.variables.VariablesView.setDetailPaneOrienta
tion(VariablesView.java:632)
at org.eclipse.debug.internal.ui.views.variables.VariablesView.createViewer
(VariablesView.java:500)
at org.eclipse.debug.ui.AbstractDebugView$ViewerPage.createControl
(AbstractDebugView.java:253)
at org.eclipse.debug.ui.AbstractDebugView.createDefaultPage
(AbstractDebugView.java:335)
at org.eclipse.ui.part.PageBookView.createPartControl(PageBookView.java:362)
at org.eclipse.debug.ui.AbstractDebugView.createPartControl
(AbstractDebugView.java:302)
at org.eclipse.ui.internal.PartPane$4.run(PartPane.java:141)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:889)
at org.eclipse.core.runtime.Platform.run(Platform.java:413)
at org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:137)
at org.eclipse.ui.internal.ViewPane.createChildControl(ViewPane.java:211)
at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:186)
at org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:190)
at org.eclipse.ui.internal.PartTabFolder.createPartTab(PartTabFolder.java:252)
at org.eclipse.ui.internal.PartTabFolder.createControl(PartTabFolder.java:224)
at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:192)
at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:96)
at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:718)
at org.eclipse.ui.internal.WorkbenchPage.onActivate(WorkbenchPage.java:1794)
at org.eclipse.ui.internal.WorkbenchWindow$7.run(WorkbenchWindow.java:1442)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at org.eclipse.ui.internal.WorkbenchWindow.setActivePage
(WorkbenchWindow.java:1429)
at org.eclipse.ui.internal.WorkbenchWindow.restoreState
(WorkbenchWindow.java:1305)
at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1263)
at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1223)
at org.eclipse.ui.internal.Workbench$12.run(Workbench.java:1141)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:889)
at org.eclipse.core.runtime.Platform.run(Platform.java:413)
at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState
(Workbench.java:1093)
at org.eclipse.ui.internal.Workbench.init(Workbench.java:870)
at org.eclipse.ui.internal.Workbench.run(Workbench.java:1373)
at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
at org.eclipse.core.launcher.Main.run(Main.java:747)
at org.eclipse.core.launcher.Main.main(Main.java:583)
Side effect of 38420.
Fixed in VariablesView.populateDetailPane().
Please verify, Darins.
Verified.</WithStack>
    <WithOutStack>Restarted Eclipse with the debug perspective active and the variables view 
visible.


Side effect of 38420.
Fixed in VariablesView.populateDetailPane().
Please verify, Darins.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38424" />
    <CreationDate amount="2003-06-04 14:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="1.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>Mistake on Web site</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>On the page:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/jdt-core-home/howto/generate%20parser/generateParser.html

Point 4, at the bottom, I think the class:

   org.eclipse.jdt.internal.compiler.parser.TerminalSymbols.

Should in fact be: 

   org.eclipse.jdt.internal.compiler.parser.TerminalTokens
Oh, and point 5 should be:

... jar:. Up...

not

... jar;. Up...
Oh, and point 5 should be:

... jar:. Up...

not

... jar;. Up...

Fixed.
Verified.</WithStack>
    <WithOutStack>On the page:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/jdt-core-home/howto/generate%20parser/generateParser.html

Point 4, at the bottom, I think the class:

   org.eclipse.jdt.internal.compiler.parser.TerminalSymbols.

Should in fact be: 

   org.eclipse.jdt.internal.compiler.parser.TerminalTokens
Oh, and point 5 should be:

... jar:. Up...

not

... jar;. Up...
Oh, and point 5 should be:

... jar:. Up...

not

... jar;. Up...

Fixed.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38425" />
    <CreationDate amount="2003-06-04 14:36:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.0.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Resource is out of sync with the file system</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340643678">
        <Exception>org.eclipse.core.internal.resources.ResourceException</Exception>
        <Reason>Resource is out of sync 
with the file system: /WHS/CVS/Root.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.localstore.FileSystemResourceManager.read(FileSystemResourceManager.java:318)</Frame>
          <Frame depth="1">org.eclipse.core.internal.resources.File.getContents(File.java:203)</Frame>
          <Frame depth="2">org.eclipse.core.internal.resources.File.getContents(File.java:193)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.readFirstLine(SyncFileWriter.java:291)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.readFolderSync(SyncFileWriter.java:165)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.cacheFolderSync(EclipseSynchronizer.java:717)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync(EclipseSynchronizer.java:118)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.core.resources.EclipsePhantomSynchronizer.getFolderSync(EclipsePhantomSynchronizer.java:70)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.getFolderSyncInfo(EclipseFolder.java:174)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.core.CVSTeamProvider.setProject(CVSTeamProvider.java:151)</Frame>
          <Frame depth="10">org.eclipse.team.core.RepositoryProvider.mapNewProvider(RepositoryProvider.java:140)</Frame>
          <Frame depth="11">org.eclipse.team.core.RepositoryProvider.getProvider(RepositoryProvider.java:332)</Frame>
          <Frame depth="12">org.eclipse.team.internal.core.MoveDeleteManager.getHookFor(MoveDeleteManager.java:24)</Frame>
          <Frame depth="13">org.eclipse.team.internal.core.MoveDeleteManager.deleteFolder(MoveDeleteManager.java:56)</Frame>
          <Frame depth="14">org.eclipse.core.internal.resources.Resource.delete(Resource.java:436)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.core.builder.BatchImageBuilder.scrubOutputFolder(BatchImageBuilder.java:86)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:33)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:170)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:103)</Frame>
          <Frame depth="19">org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:392)</Frame>
          <Frame depth="20">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:839)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.Platform.run(Platform.java:416)</Frame>
          <Frame depth="22">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:120)</Frame>
          <Frame depth="23">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:176)</Frame>
          <Frame depth="24">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:186)</Frame>
          <Frame depth="25">org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:146)</Frame>
          <Frame depth="26">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:839)</Frame>
          <Frame depth="27">org.eclipse.core.runtime.Platform.run(Platform.java:416)</Frame>
          <Frame depth="28">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:160)</Frame>
          <Frame depth="29">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:211)</Frame>
          <Frame depth="30">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:745)</Frame>
          <Frame depth="31">org.eclipse.core.internal.resources.Resource.refreshLocal(Resource.java:974)</Frame>
          <Frame depth="32">com.ibm.etools.emf.workbench.WorkbenchURIConverterImpl.makeInputStream(WorkbenchURIConverterImpl.java:229)</Frame>
          <Frame depth="33">com.ibm.etools.j2ee.j2eeproject.J2EEWorkbenchURIConverterImpl.makeInputStream(J2EEWorkbenchURIConverterImpl.java:198)</Frame>
          <Frame depth="34">com.ibm.etools.emf.resource.impl.URIConverterImpl.makeInputStream(URIConverterImpl.java:148)</Frame>
          <Frame depth="35">com.ibm.etools.emf.resource.impl.ResourceFactoryImpl.load(ResourceFactoryImpl.java:89)</Frame>
          <Frame depth="36">com.ibm.etools.emf.resource.impl.ResourceFactoryImpl.load(ResourceFactoryImpl.java:77)</Frame>
          <Frame depth="37">com.ibm.etools.emf.workbench.ProjectResourceSetImpl.loadFromFactory(ProjectResourceSetImpl.java:151)</Frame>
          <Frame depth="38">com.ibm.etools.emf.workbench.ProjectResourceSetImpl.load(ProjectResourceSetImpl.java:105)</Frame>
          <Frame depth="39">com.ibm.etools.emf.workbench.WorkbenchResourceHelper.load(WorkbenchResourceHelper.java:449)</Frame>
          <Frame depth="40">com.ibm.etools.emf.workbench.WorkbenchResourceHelper.load(WorkbenchResourceHelper.java:424)</Frame>
          <Frame depth="41">com.ibm.etools.emf.workbench.WorkspaceResourceHandler.load(WorkspaceResourceHandler.java:187)</Frame>
          <Frame depth="42">com.ibm.etools.emf.workbench.WorkspaceResourceHandler.loadForWorkspaceProtocol(WorkspaceResourceHandler.java:82)</Frame>
          <Frame depth="43">com.ibm.etools.emf.workbench.WorkspaceResourceHandler.loadForCompatibilityMode(WorkspaceResourceHandler.java:152)</Frame>
          <Frame depth="44">com.ibm.etools.emf.workbench.WorkspaceResourceHandler.load(WorkspaceResourceHandler.java:52)</Frame>
          <Frame depth="45">com.ibm.etools.emf.workbench.WorkbenchResourceHelper.load(WorkbenchResourceHelper.java:400)</Frame>
          <Frame depth="46">com.ibm.etools.emf.workbench.PassthruResourceSet.load(PassthruResourceSet.java:71)</Frame>
          <Frame depth="47">com.ibm.etools.emf.workbench.ProjectResourceSetImpl.load(ProjectResourceSetImpl.java:62)</Frame>
          <Frame depth="48">com.ibm.etools.rsc.core.ui.util.RSCCoreUIUtil.loadDoc(RSCCoreUIUtil.java:106)</Frame>
          <Frame depth="49">com.ibm.etools.rsc.core.ui.util.RSCCoreUIUtil.loadDatabaseDoc(RSCCoreUIUtil.java:120)</Frame>
          <Frame depth="50">com.ibm.etools.rsc.core.ui.view.DataTree.addToRootNode(DataTree.java:110)</Frame>
          <Frame depth="51">com.ibm.etools.rsc.core.ui.view.DataTree.addToRootNode(DataTree.java:101)</Frame>
          <Frame depth="52">com.ibm.etools.rsc.core.ui.view.DataTree.addToRootNode(DataTree.java:101)</Frame>
          <Frame depth="53">com.ibm.etools.rsc.core.ui.view.DataTree.addToRootNode(DataTree.java:101)</Frame>
          <Frame depth="54">com.ibm.etools.rsc.core.ui.view.DataTree.addToRootNode(DataTree.java:101)</Frame>
          <Frame depth="55">com.ibm.etools.rsc.core.ui.view.DataTree.addToRootNode(DataTree.java:101)</Frame>
          <Frame depth="56">com.ibm.etools.rsc.core.ui.view.DataTree.buildTree(DataTree.java:87)</Frame>
          <Frame depth="57">com.ibm.etools.rsc.core.ui.view.DataTree.&lt;init&gt;(DataTree.java:65)</Frame>
          <Frame depth="58">com.ibm.etools.j2ee.provider.J2EERoot.initializeChildren(J2EERoot.java:297)</Frame>
          <Frame depth="59">com.ibm.etools.j2ee.provider.J2EEItemProvider.getChildren(J2EEItemProvider.java:185)</Frame>
          <Frame depth="60">com.ibm.etools.emf.edit.ui.provider.AdapterFactoryContentProvider.getChildren(AdapterFactoryContentProvider.java:156)</Frame>
          <Frame depth="61">com.ibm.etools.j2ee.provider.J2EEAdapterFactoryContentProvider.getRoots(J2EEAdapterFactoryContentProvider.java:102)</Frame>
          <Frame depth="62">com.ibm.etools.j2ee.provider.J2EEAdapterFactoryContentProvider.getElements(J2EEAdapterFactoryContentProvider.java:94)</Frame>
          <Frame depth="63">org.eclipse.jface.viewers.StructuredViewer.getRawChildren(StructuredViewer.java:397)</Frame>
          <Frame depth="64">org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren(AbstractTreeViewer.java:570)</Frame>
          <Frame depth="65">org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren(StructuredViewer.java:346)</Frame>
          <Frame depth="66">org.eclipse.jface.viewers.StructuredViewer.getSortedChildren(StructuredViewer.java:447)</Frame>
          <Frame depth="67">org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:241)</Frame>
          <Frame depth="68">org.eclipse.jface.viewers.AbstractTreeViewer$2.run(AbstractTreeViewer.java:646)</Frame>
          <Frame depth="69">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:688)</Frame>
          <Frame depth="70">org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged(AbstractTreeViewer.java:638)</Frame>
          <Frame depth="71">org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:234)</Frame>
          <Frame depth="72">org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:875)</Frame>
          <Frame depth="73">com.ibm.etools.j2ee.ui.J2EEView.createPartControl(J2EEView.java:505)</Frame>
          <Frame depth="74">org.eclipse.ui.internal.PartPane$4.run(PartPane.java:136)</Frame>
          <Frame depth="75">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:839)</Frame>
          <Frame depth="76">org.eclipse.core.runtime.Platform.run(Platform.java:416)</Frame>
          <Frame depth="77">org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:134)</Frame>
          <Frame depth="78">org.eclipse.ui.internal.PartPane.createControl(PartPane.java:178)</Frame>
          <Frame depth="79">org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:181)</Frame>
          <Frame depth="80">org.eclipse.ui.internal.PartTabFolder.createPartTab(PartTabFolder.java:249)</Frame>
          <Frame depth="81">org.eclipse.ui.internal.PartTabFolder.createControl(PartTabFolder.java:221)</Frame>
          <Frame depth="82">org.eclipse.ui.internal.PartSashContainer.createControl(PartSashContainer.java:180)</Frame>
          <Frame depth="83">org.eclipse.ui.internal.PerspectivePresentation.activate(PerspectivePresentation.java:95)</Frame>
          <Frame depth="84">org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:674)</Frame>
          <Frame depth="85">org.eclipse.ui.internal.WorkbenchPage.onActivate(WorkbenchPage.java:1525)</Frame>
          <Frame depth="86">org.eclipse.ui.internal.WorkbenchWindow$7.run(WorkbenchWindow.java:1235)</Frame>
          <Frame depth="87">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:66)</Frame>
          <Frame depth="88">org.eclipse.ui.internal.WorkbenchWindow.setActivePage(WorkbenchWindow.java:1222)</Frame>
          <Frame depth="89">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1109)</Frame>
          <Frame depth="90">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1204)</Frame>
          <Frame depth="91">org.eclipse.ui.internal.Workbench.access$7(Workbench.java:1173)</Frame>
          <Frame depth="92">org.eclipse.ui.internal.Workbench$6.run(Workbench.java:811)</Frame>
          <Frame depth="93">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:839)</Frame>
          <Frame depth="94">org.eclipse.core.runtime.Platform.run(Platform.java:416)</Frame>
          <Frame depth="95">org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:763)</Frame>
          <Frame depth="96">org.eclipse.ui.internal.Workbench.init(Workbench.java:577)</Frame>
          <Frame depth="97">org.eclipse.ui.internal.Workbench.run(Workbench.java:1319)</Frame>
          <Frame depth="98">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:831)</Frame>
          <Frame depth="99">org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)</Frame>
          <Frame depth="100">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="101">org.eclipse.core.launcher.Main.basicRun(Main.java:247)</Frame>
          <Frame depth="102">org.eclipse.core.launcher.Main.run(Main.java:703)</Frame>
          <Frame depth="103">org.eclipse.core.launcher.Main.main(Main.java:539)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I have received a WSAD workspace which was created by checking out project
from CVS.  When I brought up WSAD 5.0.1, I got a lot of stack traces like the 
one below.  It took almost 15-20 mins to startup WSAD because of these errors.

!ENTRY org.eclipse.team.cvs.core 4 274 Jun 04, 2003 14:26:06.707
!MESSAGE Resource is out of sync with the file system: /WHS/CVS/Root.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: Resource is out of sync 
with the file system: /WHS/CVS/Root.
        at org.eclipse.core.internal.localstore.FileSystemResourceManager.read
(FileSystemResourceManager.java:318)
        at org.eclipse.core.internal.resources.File.getContents(File.java:203)
        at org.eclipse.core.internal.resources.File.getContents(File.java:193)
        at org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.readFirstLine
(SyncFileWriter.java:291)
        at 
org.eclipse.team.internal.ccvs.core.util.SyncFileWriter.readFolderSync
(SyncFileWriter.java:165)
        at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.cacheFolderSyn
c(EclipseSynchronizer.java:717)
        at 
org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.getFolderSync
(EclipseSynchronizer.java:118)
        at 
org.eclipse.team.internal.ccvs.core.resources.EclipsePhantomSynchronizer.getFold
erSync(EclipsePhantomSynchronizer.java:70)
        at 
org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.getFolderSyncInfo
(EclipseFolder.java:174)
        at org.eclipse.team.internal.ccvs.core.CVSTeamProvider.setProject
(CVSTeamProvider.java:151)
        at org.eclipse.team.core.RepositoryProvider.mapNewProvider
(RepositoryProvider.java:140)
        at org.eclipse.team.core.RepositoryProvider.getProvider
(RepositoryProvider.java:332)
        at org.eclipse.team.internal.core.MoveDeleteManager.getHookFor
(MoveDeleteManager.java:24)
        at org.eclipse.team.internal.core.MoveDeleteManager.deleteFolder
(MoveDeleteManager.java:56)
        at org.eclipse.core.internal.resources.Resource.delete
(Resource.java:436)
        at 
org.eclipse.jdt.internal.core.builder.BatchImageBuilder.scrubOutputFolder
(BatchImageBuilder.java:86)
        at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build
(BatchImageBuilder.java:33)
        at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll
(JavaBuilder.java:170)
        at org.eclipse.jdt.internal.core.builder.JavaBuilder.build
(JavaBuilder.java:103)
        at org.eclipse.core.internal.events.BuildManager$2.run
(BuildManager.java:392)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:839)
        at org.eclipse.core.runtime.Platform.run(Platform.java:416)
        at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:120)
        at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:176)
        at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:186)
        at org.eclipse.core.internal.events.BuildManager$1.run
(BuildManager.java:146)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:839)
        at org.eclipse.core.runtime.Platform.run(Platform.java:416)
        at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:160)
        at org.eclipse.core.internal.events.BuildManager.build
(BuildManager.java:211)
        at org.eclipse.core.internal.resources.Workspace.endOperation
(Workspace.java:745)
        at org.eclipse.core.internal.resources.Resource.refreshLocal
(Resource.java:974)
        at 
com.ibm.etools.emf.workbench.WorkbenchURIConverterImpl.makeInputStream
(WorkbenchURIConverterImpl.java:229)
        at 
com.ibm.etools.j2ee.j2eeproject.J2EEWorkbenchURIConverterImpl.makeInputStream
(J2EEWorkbenchURIConverterImpl.java:198)
        at com.ibm.etools.emf.resource.impl.URIConverterImpl.makeInputStream
(URIConverterImpl.java:148)
        at com.ibm.etools.emf.resource.impl.ResourceFactoryImpl.load
(ResourceFactoryImpl.java:89)
        at com.ibm.etools.emf.resource.impl.ResourceFactoryImpl.load
(ResourceFactoryImpl.java:77)
        at com.ibm.etools.emf.workbench.ProjectResourceSetImpl.loadFromFactory
(ProjectResourceSetImpl.java:151)
        at com.ibm.etools.emf.workbench.ProjectResourceSetImpl.load
(ProjectResourceSetImpl.java:105)
        at com.ibm.etools.emf.workbench.WorkbenchResourceHelper.load
(WorkbenchResourceHelper.java:449)
        at com.ibm.etools.emf.workbench.WorkbenchResourceHelper.load
(WorkbenchResourceHelper.java:424)
        at com.ibm.etools.emf.workbench.WorkspaceResourceHandler.load
(WorkspaceResourceHandler.java:187)
        at 
com.ibm.etools.emf.workbench.WorkspaceResourceHandler.loadForWorkspaceProtocol
(WorkspaceResourceHandler.java:82)
        at 
com.ibm.etools.emf.workbench.WorkspaceResourceHandler.loadForCompatibilityMode
(WorkspaceResourceHandler.java:152)
        at com.ibm.etools.emf.workbench.WorkspaceResourceHandler.load
(WorkspaceResourceHandler.java:52)
        at com.ibm.etools.emf.workbench.WorkbenchResourceHelper.load
(WorkbenchResourceHelper.java:400)
        at com.ibm.etools.emf.workbench.PassthruResourceSet.load
(PassthruResourceSet.java:71)
        at com.ibm.etools.emf.workbench.ProjectResourceSetImpl.load
(ProjectResourceSetImpl.java:62)
        at com.ibm.etools.rsc.core.ui.util.RSCCoreUIUtil.loadDoc
(RSCCoreUIUtil.java:106)
        at com.ibm.etools.rsc.core.ui.util.RSCCoreUIUtil.loadDatabaseDoc
(RSCCoreUIUtil.java:120)
        at com.ibm.etools.rsc.core.ui.view.DataTree.addToRootNode
(DataTree.java:110)
        at com.ibm.etools.rsc.core.ui.view.DataTree.addToRootNode
(DataTree.java:101)
        at com.ibm.etools.rsc.core.ui.view.DataTree.addToRootNode
(DataTree.java:101)
        at com.ibm.etools.rsc.core.ui.view.DataTree.addToRootNode
(DataTree.java:101)
        at com.ibm.etools.rsc.core.ui.view.DataTree.addToRootNode
(DataTree.java:101)
        at com.ibm.etools.rsc.core.ui.view.DataTree.addToRootNode
(DataTree.java:101)
        at com.ibm.etools.rsc.core.ui.view.DataTree.buildTree(DataTree.java:87)
        at com.ibm.etools.rsc.core.ui.view.DataTree.&lt;init&gt;(DataTree.java:65)
        at com.ibm.etools.j2ee.provider.J2EERoot.initializeChildren
(J2EERoot.java:297)
        at com.ibm.etools.j2ee.provider.J2EEItemProvider.getChildren
(J2EEItemProvider.java:185)
        at 
com.ibm.etools.emf.edit.ui.provider.AdapterFactoryContentProvider.getChildren
(AdapterFactoryContentProvider.java:156)
        at 
com.ibm.etools.j2ee.provider.J2EEAdapterFactoryContentProvider.getRoots
(J2EEAdapterFactoryContentProvider.java:102)
        at 
com.ibm.etools.j2ee.provider.J2EEAdapterFactoryContentProvider.getElements
(J2EEAdapterFactoryContentProvider.java:94)
        at org.eclipse.jface.viewers.StructuredViewer.getRawChildren
(StructuredViewer.java:397)
        at org.eclipse.jface.viewers.AbstractTreeViewer.getRawChildren
(AbstractTreeViewer.java:570)
        at org.eclipse.jface.viewers.StructuredViewer.getFilteredChildren
(StructuredViewer.java:346)
        at org.eclipse.jface.viewers.StructuredViewer.getSortedChildren
(StructuredViewer.java:447)
        at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren
(AbstractTreeViewer.java:241)
        at org.eclipse.jface.viewers.AbstractTreeViewer$2.run
(AbstractTreeViewer.java:646)
        at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:688)
        at org.eclipse.jface.viewers.AbstractTreeViewer.inputChanged
(AbstractTreeViewer.java:638)
        at org.eclipse.jface.viewers.ContentViewer.setInput
(ContentViewer.java:234)
        at org.eclipse.jface.viewers.StructuredViewer.setInput
(StructuredViewer.java:875)
        at com.ibm.etools.j2ee.ui.J2EEView.createPartControl(J2EEView.java:505)
        at org.eclipse.ui.internal.PartPane$4.run(PartPane.java:136)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:839)
        at org.eclipse.core.runtime.Platform.run(Platform.java:416)
        at org.eclipse.ui.internal.PartPane.createChildControl
(PartPane.java:134)
        at org.eclipse.ui.internal.PartPane.createControl(PartPane.java:178)
        at org.eclipse.ui.internal.ViewPane.createControl(ViewPane.java:181)
        at org.eclipse.ui.internal.PartTabFolder.createPartTab
(PartTabFolder.java:249)
        at org.eclipse.ui.internal.PartTabFolder.createControl
(PartTabFolder.java:221)
        at org.eclipse.ui.internal.PartSashContainer.createControl
(PartSashContainer.java:180)
        at org.eclipse.ui.internal.PerspectivePresentation.activate
(PerspectivePresentation.java:95)
        at org.eclipse.ui.internal.Perspective.onActivate(Perspective.java:674)
        at org.eclipse.ui.internal.WorkbenchPage.onActivate
(WorkbenchPage.java:1525)
        at org.eclipse.ui.internal.WorkbenchWindow$7.run
(WorkbenchWindow.java:1235)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:66)
        at org.eclipse.ui.internal.WorkbenchWindow.setActivePage
(WorkbenchWindow.java:1222)
        at org.eclipse.ui.internal.WorkbenchWindow.restoreState
(WorkbenchWindow.java:1109)
        at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1204)
        at org.eclipse.ui.internal.Workbench.access$7(Workbench.java:1173)
        at org.eclipse.ui.internal.Workbench$6.run(Workbench.java:811)
        at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:839)
        at org.eclipse.core.runtime.Platform.run(Platform.java:416)
        at org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState
(Workbench.java:763)
        at org.eclipse.ui.internal.Workbench.init(Workbench.java:577)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1319)
        at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:831)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
        at java.lang.reflect.Method.invoke(Native Method)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
        at org.eclipse.core.launcher.Main.run(Main.java:703)
        at org.eclipse.core.launcher.Main.main(Main.java:539)
!ENTRY org.eclipse.core.resources 4 274 Jun 04, 2003 14:26:07.394
!MESSAGE Resource is out of sync with the file system: /WHS/CVS/Root.
Only the person who created the workspace has access to CVS.  I don't have 
access to it.

When the workspace loads, disconnect the CVS team provider.

We should look into why we care about if these files are out-of-sync with the
file system to begin with.
I tried to disconnect the projects from CVS.  However, the project contains 57
projects.  Everytime I right click on a project, a couple of the above stack
traces were thrown.  I need a function that I can disconnect all projects in one
operation.
This exception is no longer logged</WithStack>
    <WithOutStack>I have received a WSAD workspace which was created by checking out project
from CVS.  When I brought up WSAD 5.0.1, I got a lot of stack traces like the 
one below.  It took almost 15-20 mins to startup WSAD because of these errors.

!ENTRY org.eclipse.team.cvs.core 4 274 Jun 04, 2003 14:26:06.707
!MESSAGE Resource is out of sync with the file system: /WHS/CVS/Root.
!STACK 1

!ENTRY org.eclipse.core.resources 4 274 Jun 04, 2003 14:26:07.394
!MESSAGE Resource is out of sync with the file system: /WHS/CVS/Root.
Only the person who created the workspace has access to CVS.  I don't have 
access to it.

When the workspace loads, disconnect the CVS team provider.

We should look into why we care about if these files are out-of-sync with the
file system to begin with.
I tried to disconnect the projects from CVS.  However, the project contains 57
projects.  Everytime I right click on a project, a couple of the above stack
traces were thrown.  I need a function that I can disconnect all projects in one
operation.
This exception is no longer logged</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38426" />
    <CreationDate amount="2003-06-04 14:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TVT21:  Button Truncation in Java Application</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Windows-&gt;Open Perspective-&gt;Java</Line>
          <Line>2. Run -&gt; Run</Line>
          <Line>3. left panel select Java Appliaction and click New</Line>
          <Line>4. The left and right panel sides are resized</Line>
          <Line>Which widget toolkit are you using on Linux?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build driver: 20030602 
Language: Brazilian Portuguese, French
Testcase: 09.00700 

Summary: Button Delete (in bottom right part is truncated) 

Description: 
The button "Delete" becames truncated after we select a New Configuration in 
Java Application in left box. 
When you first come to this panel the button is OK, however after you make a 
selection in left panel, the product automatically change the panel size to 
display right side, and then the button is cutoff. 

See image attached, in left bottom side...almost no button. 

Steps to recreate: 
1. Windows-&gt;Open Perspective-&gt;Java 
2. Run -&gt; Run 
3. left panel select Java Appliaction and click New 
4. The left and right panel sides are resized
Which widget toolkit are you using on Linux?

Since the button is only truncated and still visible we do not intend to fix 
for 2.1.1
Workaround is to resize the dialog. As there is a workaround I decreasing the 
severity.
We have worked on and are continuing to work on the resizing in 3.0 stream and 
the fixes are not trivial.


Created attachment 5063
screenshot
Nothing planned
Closing.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Build driver: 20030602 
Language: Brazilian Portuguese, French
Testcase: 09.00700 

Summary: Button Delete (in bottom right part is truncated) 

Description: 
The button "Delete" becames truncated after we select a New Configuration in 
Java Application in left box. 
When you first come to this panel the button is OK, however after you make a 
selection in left panel, the product automatically change the panel size to 
display right side, and then the button is cutoff. 

See image attached, in left bottom side...almost no button. 

Steps to recreate: 
1. Windows-&gt;Open Perspective-&gt;Java 
2. Run -&gt; Run 
3. left panel select Java Appliaction and click New 
4. The left and right panel sides are resized
Which widget toolkit are you using on Linux?

Since the button is only truncated and still visible we do not intend to fix 
for 2.1.1
Workaround is to resize the dialog. As there is a workaround I decreasing the 
severity.
We have worked on and are continuing to work on the resizing in 3.0 stream and 
the fixes are not trivial.


Created attachment 5063
screenshot
Nothing planned
Closing.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38427" />
    <CreationDate amount="2003-06-04 15:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[breakpoints] class breakpoints - useful new feature</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="REOPENED" />
    <resolution amount="" />
    <WithStack>Sometimes, when I debug, I want to stop execution as soon as it reaches a 
certain class context to execute certain methods on the class manually. This 
is useful, for example, when doing GUI development; after I make certain 
changes to my GUI components I redisplay them by calling an initialization 
method on the class.

Right now, what I have to do is to set a breakpoint on a particular method of 
the class, and then somehow make my application call that method, which leads 
to the breakpoint being hit and me being able to manually call my 
initialization method. Instead of setting a breakpoint on a particular method, 
I want the breakpoint to be hit on any class method, since that gives me the 
class context I need to call my initialization method. I don't want to be 
required to set a breakpoint on a specific method, when all I need is the 
class context.

JBuilder has this feature from what I've seen.
I'm not clear on the request:
* Do you want a class load breakpoint (i.e. suspend when the VM loads the 
class)?
* Or, do you want a "stop in any method on this class" breakpoint?
A "stop in any method on this class" breakpoint.
This can be done, but the implementation may have performance problems. This is 
implemented with "method entry requests" into a specific class. If the target 
VM implements this inefficiently, then the target program may run/debug slowly.
Breakpoints that stopped in any method of a class should perform better than our 
existing method breakpoints.
Not true - a method entry breakpoint is currently implemented with a line 
breakpoint on the method (which is faster than a method entry breakpoint 
request). Using a method entry request for a type (usually) turns on method 
tracing in the target VM, which (usually) slows down the target program.
Deferred
Closing, not planning to implement.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.
This is a useful feature.. I don't think the sited performance concerns are reason to drop it. If a user were to manually troll thru a class and set a breakpoint at the start of each method, the feature would be, in effect, implemented. You cannot prevent a user from doing that and so the performance issue already exists and has not been reported as an issue (i hope :&gt;). I've done it and hated it with up to 32 methods. Works fine. (matters-not why I can't figure out the entry point by other means). There may be valid performance issue with the manner you envisioned to implement about which I cannot say... but at least look at it from the above perspective. Make it a UI trick, if you must, but please reopen.
Re-opening as per request. Currently no plans to implement.
&gt; If a user were to manually troll thru a class and set a
&gt; breakpoint at the start of each method, the feature would be, in effect,
&gt; implemented.

You can already do that by selecting the methods in the Outline view and then using Toggle Method Breakpoint (from the context menu or the Run menu).
(In reply to comment #11)
&gt; You can already do that by selecting the methods in the Outline view and then
&gt; using Toggle Method Breakpoint (from the context menu or the Run menu).
If the selection contains an abstract method the context menu does not have the 'Toggle Method Breakpoint' option :) , the Run menu has the option though which just skips the abstract method.

But the original bug is about *any method* in a class, including inherited methods.</WithStack>
    <WithOutStack>Sometimes, when I debug, I want to stop execution as soon as it reaches a 
certain class context to execute certain methods on the class manually. This 
is useful, for example, when doing GUI development; after I make certain 
changes to my GUI components I redisplay them by calling an initialization 
method on the class.

Right now, what I have to do is to set a breakpoint on a particular method of 
the class, and then somehow make my application call that method, which leads 
to the breakpoint being hit and me being able to manually call my 
initialization method. Instead of setting a breakpoint on a particular method, 
I want the breakpoint to be hit on any class method, since that gives me the 
class context I need to call my initialization method. I don't want to be 
required to set a breakpoint on a specific method, when all I need is the 
class context.

JBuilder has this feature from what I've seen.
I'm not clear on the request:
* Do you want a class load breakpoint (i.e. suspend when the VM loads the 
class)?
* Or, do you want a "stop in any method on this class" breakpoint?
A "stop in any method on this class" breakpoint.
This can be done, but the implementation may have performance problems. This is 
implemented with "method entry requests" into a specific class. If the target 
VM implements this inefficiently, then the target program may run/debug slowly.
Breakpoints that stopped in any method of a class should perform better than our 
existing method breakpoints.
Not true - a method entry breakpoint is currently implemented with a line 
breakpoint on the method (which is faster than a method entry breakpoint 
request). Using a method entry request for a type (usually) turns on method 
tracing in the target VM, which (usually) slows down the target program.
Deferred
Closing, not planning to implement.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.
This is a useful feature.. I don't think the sited performance concerns are reason to drop it. If a user were to manually troll thru a class and set a breakpoint at the start of each method, the feature would be, in effect, implemented. You cannot prevent a user from doing that and so the performance issue already exists and has not been reported as an issue (i hope :&gt;). I've done it and hated it with up to 32 methods. Works fine. (matters-not why I can't figure out the entry point by other means). There may be valid performance issue with the manner you envisioned to implement about which I cannot say... but at least look at it from the above perspective. Make it a UI trick, if you must, but please reopen.
Re-opening as per request. Currently no plans to implement.
&gt; If a user were to manually troll thru a class and set a
&gt; breakpoint at the start of each method, the feature would be, in effect,
&gt; implemented.

You can already do that by selecting the methods in the Outline view and then using Toggle Method Breakpoint (from the context menu or the Run menu).
(In reply to comment #11)
&gt; You can already do that by selecting the methods in the Outline view and then
&gt; using Toggle Method Breakpoint (from the context menu or the Run menu).
If the selection contains an abstract method the context menu does not have the 'Toggle Method Breakpoint' option :) , the Run menu has the option though which just skips the abstract method.

But the original bug is about *any method* in a class, including inherited methods.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38428" />
    <CreationDate amount="2003-06-04 15:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TVT21: Extra mnemonic strings appear all over for DBCS</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. From the main Workbench menu, click Window -&gt; Open Perspective -&gt; Other -&gt;</Line>
          <Line>Java.</Line>
          <Line>2. From the main Workbench menu, click Run -&gt; Run....</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="WONTFIX" />
    <WithStack>Build driver: 20030602 
Reporter: Yin Hong Mei 

Test case #: 09.00100 

Summary: TVT21: Extra string appears in particular windows for DBCS

Description: Extra string '(N)' appears in the title of Run window. I guess it 
is caused by text sharing between menu item and title, as you may know, in 
DBCS, we need add mnemonic key definition after translation string, for 
example: 
english source: Ru&amp;n, 
we need translate it to: ****(&amp;N), **** means S.Chinese character. 

Steps to recreate problem: 
1. From the main Workbench menu, click Window -&gt; Open Perspective -&gt; Other -&gt; 
Java. 
2. From the main Workbench menu, click Run -&gt; Run.... 

see attached sch.gif file for your reference.

An example in Japanese:
Description: 
Steps to recreate problem: 
Run-&gt;External Tools 
-&gt;External Tools... 
On title of External Tools window, Extra string '(E)' appears.

see attached ja.gif

Similarities in TCH:
Steps to recreate problem: 
On the tool bar from the Main Workbench panel, find the running man icon and 
hover over it to reveal the hover help. 
The extra mnemonics appears on the below icons: 
External Tools 
Debug 
Run
see attached TCH1.jpg, TCH2.jpg, TCH3.jpg
Created attachment 5056
SCH extra string
Created attachment 5057
Japanese extra strings
Created attachment 5058
TCH extra string
Created attachment 5059
TCH2 extra string
Created attachment 5060
TCH3 extra string
This is not critical and should not be done 2.1.1
This appears to be a mnemonic not being stripped correctly when it is being 
reused for hover help.

Marking as normal as there is no functionality loss as a result.
The problem is the getShellTitle method in LaunchConfigurationDialog. This 
method trys to strip out mnemonics but does not take into account that DBCS 
menmonics are shown as (X) rather than &amp;X.

Moving to Debug.
As a point of interest, shouldn't there be one mechanism for striping out 
mneumonics and everyone just calls it rather than having different components 
do the work (incorrectly) themselves?

Tod, could we consider a workbench utility for stripping out mnemonics?
If there is a good one already around I see no reason why we couldn't move it 
into a Util class for the workbench.
Nothing planned
Closed. fixed in 3.0 - see bug 71185.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Build driver: 20030602 
Reporter: Yin Hong Mei 

Test case #: 09.00100 

Summary: TVT21: Extra string appears in particular windows for DBCS

Description: Extra string '(N)' appears in the title of Run window. I guess it 
is caused by text sharing between menu item and title, as you may know, in 
DBCS, we need add mnemonic key definition after translation string, for 
example: 
english source: Ru&amp;n, 
we need translate it to: ****(&amp;N), **** means S.Chinese character. 

Steps to recreate problem: 
1. From the main Workbench menu, click Window -&gt; Open Perspective -&gt; Other -&gt; 
Java. 
2. From the main Workbench menu, click Run -&gt; Run.... 

see attached sch.gif file for your reference.

An example in Japanese:
Description: 
Steps to recreate problem: 
Run-&gt;External Tools 
-&gt;External Tools... 
On title of External Tools window, Extra string '(E)' appears.

see attached ja.gif

Similarities in TCH:
Steps to recreate problem: 
On the tool bar from the Main Workbench panel, find the running man icon and 
hover over it to reveal the hover help. 
The extra mnemonics appears on the below icons: 
External Tools 
Debug 
Run
see attached TCH1.jpg, TCH2.jpg, TCH3.jpg
Created attachment 5056
SCH extra string
Created attachment 5057
Japanese extra strings
Created attachment 5058
TCH extra string
Created attachment 5059
TCH2 extra string
Created attachment 5060
TCH3 extra string
This is not critical and should not be done 2.1.1
This appears to be a mnemonic not being stripped correctly when it is being 
reused for hover help.

Marking as normal as there is no functionality loss as a result.
The problem is the getShellTitle method in LaunchConfigurationDialog. This 
method trys to strip out mnemonics but does not take into account that DBCS 
menmonics are shown as (X) rather than &amp;X.

Moving to Debug.
As a point of interest, shouldn't there be one mechanism for striping out 
mneumonics and everyone just calls it rather than having different components 
do the work (incorrectly) themselves?

Tod, could we consider a workbench utility for stripping out mnemonics?
If there is a good one already around I see no reason why we couldn't move it 
into a Util class for the workbench.
Nothing planned
Closed. fixed in 3.0 - see bug 71185.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38429" />
    <CreationDate amount="2003-06-04 15:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>compare has no option to wrap long lines</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>compare of two files with really long lines (text, not source code) does not 
wrap the lines, making it difficult to see differences.

2.1
win2k
jvm 1.3 (sun)
Would be pretty hard to do since infrastructure isn't capable of dealing with wrapped lines.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>compare of two files with really long lines (text, not source code) does not 
wrap the lines, making it difficult to see differences.

2.1
win2k
jvm 1.3 (sun)
Would be pretty hard to do since infrastructure isn't capable of dealing with wrapped lines.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38430" />
    <CreationDate amount="2003-06-04 15:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[CVS FAQ]"Check out as..." causes abort w/ "Connection reset" exception</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1) Set up a new repository as :pserver:anonymous@dev.eclipse.org:/home/tools</Line>
          <Line>2) Connect, and select org.eclipse.draw2d.examples</Line>
          <Line>3) Select "Check out as..." from the context menu</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Using a pserver connection, right-clicking on a checked-in project and 
selecting "Check out as project" works, but "Check out as..." causes a hang and 
a timeout after about a minute. Internally, the latter case throws 
org.eclipse.team.internal.ccvs.core.connection.CVSCommunicationException
(Socket Exception: Connection reset)

Note: This also seems to apply when 
To reproduce:
1) Set up a new repository as :pserver:anonymous@dev.eclipse.org:/home/tools
2) Connect, and select org.eclipse.draw2d.examples
3) Select "Check out as..." from the context menu

You'll need to run with debugging enabled and watch the console log to see the 
exception; Eclipse reports it with a "Socket Exception: Connection reset" 
dialog.
This works for me on Windows XP. I'll try and find a Windows 2000 box to see 
if it's related to the platform. Also, could you let me know your 
configuration information so I can test the same setup (i.e. Eclipse build, 
Java VM)
(Also in bug 38342)

This is 100% repeatable for me, unfortunately. I'll go install on a local WinXP 
box and see if it happens there.

Multiple operations exhibit the same behavior: creating a new module (bug 
38342), updating from a changed project, committing changes. It happens whether 
I'm talking to the CVS server on my local network (1.11.5 on NetBSD 1.6), or to 
an outside server (e.g. dev.eclipse.org). The GNU CVS tools (WinCVS and cygwin) 
work under the same circumstances. 

Eclipse version 2.1.0, build 200303272130 (2.1 release)

From the System properties:

java.home=C:\j2sdk1.4.1_02\jre
java.io.tmpdir=C:\DOCUME~1\rdclark\LOCALS~1\Temp\
java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition
java.runtime.version=1.4.1_02-b06
java.version=1.4.1_02
java.vm.info=mixed mode
java.vm.name=Java HotSpot(TM) Client VM
java.vm.version=1.4.1_02-b06



I am unable to reproduce this on Win2K with the same Eclipse build and Java 
VM. What make of network card does your computer have?
*** Bug 38432 has been marked as a duplicate of this bug. ***
VIA Rhine II Fast Ethernet Adaptor (integrated into the motherboard, a SOYO 
Dragon Plus.)

For the record, this is a Win2K SP3 machine.
We have had previous bug reports about problems occuring in Eclipse CVS with 
this card (See bug 27077). We'll leave this bug open to investigate further.
We think we may have solved this problem in 3.0. Could you try using the latst 
3.0 integration build (I20030528 or later) to see if the problem still occurs? 
I installed a Linksys ethernet card and the bug went away. I recommend marking 
this as a duplicate of 27077, and I'll try the 3.0 integration build w/ the old 
ethernet controller.

Could I ask this be added to the CVS team FAQ?

I have a related error. When I try to select an entire project (~5000 files) and
merge from a branch to the trunk, or vice versa, I'll get this error (Socket
Exception: Connection Reset) ... I'm on an IBM Thinkpad T40, with an Intel(r)
Pro/1000 MT Mobile Connection NIC. I'm running Eclipse 2.1.1, against a CVSNT
server (unsupported, I know). 

Multiple posts to the CVSNT &amp; CVS mailing lists/newsgroups have indicated that
this is not something that is a CVSNT/CVS specific problem - specifically others
have posted that they've seen this error against main-line CVS on *nix boxes. 

It seems to have something to do with (a) the size of the project and (b) how
deeply folders are nested. At least this has been my experience. Does it seem
like this is something that might be fixed in 3.0?

Note: This happens when Eclipse is interrogating CVS as to which files have
changes that need to be merged, not after that, when its
updating/overriding&amp;updating, etc.
I have the same problem with a laptop (windows XP), with a Realtek RTL8139C 
network card. Each time I make a cvs sync, or replace with branch, I get 
a "Sockect Exception: Connection reset" or a "I/O has been interrupted" error, 
and then only way is to turn off the PC. I am using Eclipse 2.1.3
I have changed the connection type to "extssh" and now it works perfectly. So 
the bug is only with "pserver" type of connection.

At least that's allow me to work normally.
*** Bug 37204 has been marked as a duplicate of this bug. ***
Although I have not been able to reproduce this, I have found and fixed a 
likely cause. The fix will be in 3.0 M9 next week in case anyone who has 
experienced the problem wants to verify the fix. 
I tested 3.0RC2

Great! No more BSODs! Thanks a LOT!

I suggest to close bug 35891 as a duplicate of this one.</WithStack>
    <WithOutStack>Using a pserver connection, right-clicking on a checked-in project and 
selecting "Check out as project" works, but "Check out as..." causes a hang and 
a timeout after about a minute. Internally, the latter case throws 
org.eclipse.team.internal.ccvs.core.connection.CVSCommunicationException
(Socket Exception: Connection reset)

Note: This also seems to apply when 
To reproduce:
1) Set up a new repository as :pserver:anonymous@dev.eclipse.org:/home/tools
2) Connect, and select org.eclipse.draw2d.examples
3) Select "Check out as..." from the context menu

You'll need to run with debugging enabled and watch the console log to see the 
exception; Eclipse reports it with a "Socket Exception: Connection reset" 
dialog.
This works for me on Windows XP. I'll try and find a Windows 2000 box to see 
if it's related to the platform. Also, could you let me know your 
configuration information so I can test the same setup (i.e. Eclipse build, 
Java VM)
(Also in bug 38342)

This is 100% repeatable for me, unfortunately. I'll go install on a local WinXP 
box and see if it happens there.

Multiple operations exhibit the same behavior: creating a new module (bug 
38342), updating from a changed project, committing changes. It happens whether 
I'm talking to the CVS server on my local network (1.11.5 on NetBSD 1.6), or to 
an outside server (e.g. dev.eclipse.org). The GNU CVS tools (WinCVS and cygwin) 
work under the same circumstances. 

Eclipse version 2.1.0, build 200303272130 (2.1 release)

From the System properties:

java.home=C:\j2sdk1.4.1_02\jre
java.io.tmpdir=C:\DOCUME~1\rdclark\LOCALS~1\Temp\
java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition
java.runtime.version=1.4.1_02-b06
java.version=1.4.1_02
java.vm.info=mixed mode
java.vm.name=Java HotSpot(TM) Client VM
java.vm.version=1.4.1_02-b06



I am unable to reproduce this on Win2K with the same Eclipse build and Java 
VM. What make of network card does your computer have?
*** Bug 38432 has been marked as a duplicate of this bug. ***
VIA Rhine II Fast Ethernet Adaptor (integrated into the motherboard, a SOYO 
Dragon Plus.)

For the record, this is a Win2K SP3 machine.
We have had previous bug reports about problems occuring in Eclipse CVS with 
this card (See bug 27077). We'll leave this bug open to investigate further.
We think we may have solved this problem in 3.0. Could you try using the latst 
3.0 integration build (I20030528 or later) to see if the problem still occurs? 
I installed a Linksys ethernet card and the bug went away. I recommend marking 
this as a duplicate of 27077, and I'll try the 3.0 integration build w/ the old 
ethernet controller.

Could I ask this be added to the CVS team FAQ?

I have a related error. When I try to select an entire project (~5000 files) and
merge from a branch to the trunk, or vice versa, I'll get this error (Socket
Exception: Connection Reset) ... I'm on an IBM Thinkpad T40, with an Intel(r)
Pro/1000 MT Mobile Connection NIC. I'm running Eclipse 2.1.1, against a CVSNT
server (unsupported, I know). 

Multiple posts to the CVSNT &amp; CVS mailing lists/newsgroups have indicated that
this is not something that is a CVSNT/CVS specific problem - specifically others
have posted that they've seen this error against main-line CVS on *nix boxes. 

It seems to have something to do with (a) the size of the project and (b) how
deeply folders are nested. At least this has been my experience. Does it seem
like this is something that might be fixed in 3.0?

Note: This happens when Eclipse is interrogating CVS as to which files have
changes that need to be merged, not after that, when its
updating/overriding&amp;updating, etc.
I have the same problem with a laptop (windows XP), with a Realtek RTL8139C 
network card. Each time I make a cvs sync, or replace with branch, I get 
a "Sockect Exception: Connection reset" or a "I/O has been interrupted" error, 
and then only way is to turn off the PC. I am using Eclipse 2.1.3
I have changed the connection type to "extssh" and now it works perfectly. So 
the bug is only with "pserver" type of connection.

At least that's allow me to work normally.
*** Bug 37204 has been marked as a duplicate of this bug. ***
Although I have not been able to reproduce this, I have found and fixed a 
likely cause. The fix will be in 3.0 M9 next week in case anyone who has 
experienced the problem wants to verify the fix. 
I tested 3.0RC2

Great! No more BSODs! Thanks a LOT!

I suggest to close bug 35891 as a duplicate of this one.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38431" />
    <CreationDate amount="2003-06-04 15:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception of bad macro definition</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340643678">
        <Exception>rg.eclipse.cdt.internal.core.parser.ScannerException</Exception>
        <Reason>Invalid preprocessor
directive encountered at offset 204</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.cdt.internal.core.parser.Scanner.nextToken(Scanner.java:842)</Frame>
          <Frame depth="1">org.eclipse.cdt.internal.core.parser.Scanner.nextToken(Scanner.java:468)</Frame>
          <Frame depth="2">org.eclipse.cdt.internal.core.parser.Parser.fetchToken(Parser.java:2887)</Frame>
          <Frame depth="3">org.eclipse.cdt.internal.core.parser.Parser.LA(Parser.java:2909)</Frame>
          <Frame depth="4">org.eclipse.cdt.internal.core.parser.Parser.translationUnit(Parser.java:173)</Frame>
          <Frame depth="5">org.eclipse.cdt.internal.core.parser.Parser.parse(Parser.java:146)</Frame>
          <Frame depth="6">org.eclipse.cdt.internal.core.model.CModelBuilder.parse(CModelBuilder.java:81)</Frame>
          <Frame depth="7">org.eclipse.cdt.internal.core.model.TranslationUnit.parse(TranslationUnit.java:215)</Frame>
          <Frame depth="8">org.eclipse.cdt.internal.core.model.TranslationUnit.parse(TranslationUnit.java:486)</Frame>
          <Frame depth="9">org.eclipse.cdt.internal.core.model.TranslationUnit.generateInfos(TranslationUnit.java:324)</Frame>
          <Frame depth="10">org.eclipse.cdt.internal.core.model.TranslationUnit.buildStructure(TranslationUnit.java:243)</Frame>
          <Frame depth="11">org.eclipse.cdt.internal.core.model.TranslationUnit.makeConsistent(TranslationUnit.java:446)</Frame>
          <Frame depth="12">org.eclipse.cdt.internal.core.model.WorkingCopy.reconcile(WorkingCopy.java:313)</Frame>
          <Frame depth="13">org.eclipse.cdt.internal.ui.text.CReconcilingStrategy.reconcile(CReconcilingStrategy.java:88)</Frame>
          <Frame depth="14">org.eclipse.cdt.internal.ui.text.CReconcilingStrategy.reconcile(CReconcilingStrategy.java:66)</Frame>
          <Frame depth="15">org.eclipse.jface.text.reconciler.Reconciler.process(Reconciler.java:124)</Frame>
          <Frame depth="16">org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:189)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Code sample:
=============foo.c
# jakdfjadf

==============

The giberish after "#" is obviously not a valid macro
processor but the console keep on throwing the exception below.
For example when starting a valid macro
#def

and by the time you finish writing "define", the console is full
of exception.

rg.eclipse.cdt.internal.core.parser.ScannerException: Invalid preprocessor
directive encountered at offset 204
	at org.eclipse.cdt.internal.core.parser.Scanner.nextToken(Scanner.java:842)
	at org.eclipse.cdt.internal.core.parser.Scanner.nextToken(Scanner.java:468)
	at org.eclipse.cdt.internal.core.parser.Parser.fetchToken(Parser.java:2887)
	at org.eclipse.cdt.internal.core.parser.Parser.LA(Parser.java:2909)
	at org.eclipse.cdt.internal.core.parser.Parser.translationUnit(Parser.java:173)
	at org.eclipse.cdt.internal.core.parser.Parser.parse(Parser.java:146)
	at
org.eclipse.cdt.internal.core.model.CModelBuilder.parse(CModelBuilder.java:81)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.parse(TranslationUnit.java:215)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.parse(TranslationUnit.java:486)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.generateInfos(TranslationUnit.java:324)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.buildStructure(TranslationUnit.java:243)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.makeConsistent(TranslationUnit.java:446)
	at
org.eclipse.cdt.internal.core.model.WorkingCopy.reconcile(WorkingCopy.java:313)
	at
org.eclipse.cdt.internal.ui.text.CReconcilingStrategy.reconcile(CReconcilingStrategy.java:88)
	at
org.eclipse.cdt.internal.ui.text.CReconcilingStrategy.reconcile(CReconcilingStrategy.java:66)
	at org.eclipse.jface.text.reconciler.Reconciler.process(Reconciler.java:124)
	at
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:189)
I cannot reproduce it with the latest build (2003-06-13)
Very true, This seems to be fix in the trunk</WithStack>
    <WithOutStack>Code sample:
=============foo.c
# jakdfjadf

==============

The giberish after "#" is obviously not a valid macro
processor but the console keep on throwing the exception below.
For example when starting a valid macro
#def

and by the time you finish writing "define", the console is full
of exception.


I cannot reproduce it with the latest build (2003-06-13)
Very true, This seems to be fix in the trunk</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38432" />
    <CreationDate amount="2003-06-04 15:50:00 -0400" />
    <DupId amount="38430" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Share project" fails w/ Connection reset</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Make sure you have a repository that uses :pserver: authentication</Line>
          <Line>2) Create a new project in Eclipse</Line>
          <Line>3) Select "Team &gt; Share Project..." from the context menu</Line>
          <Line>4) Select "Finish"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>After creating a new project in Eclipse, attempting to use "Share Project" 
times out with "Socket Exception: Connection reset". (May be related to bug 
38430)

1) Make sure you have a repository that uses :pserver: authentication
2) Create a new project in Eclipse
3) Select "Team &gt; Share Project..." from the context menu
4) Select "Finish"

The connection hangs after pserver authentication is finished. Note the 
following information from the debugging log (with all the "acceptable 
response" parts snipped):

Root /usr/local/cvsroot
CMD&gt; cvs version
version
M Concurrent Versions System (CVS) 1.11.5 (client/server)
ok
RESULT&gt; Status OKorg.eclipse.team.cvs.core code=0 ok null

Root /usr/local/cvsroot
CMD&gt; cvs -n update -d ""
Global_option -n
Argument -d
Directory .
/usr/local/cvsroot/cvs-trial
Argument .
Directory .
/usr/local/cvsroot/cvs-trial
update
E cvs server: Updating .
E cvs server: cannot open directory /usr/local/cvsroot/cvs-trial: No such file o
r directory
E cvs server: skipping directory
ok
RESULT&gt; Status ERRORorg.eclipse.team.cvs.core code=1 The following warnings were
 reported while performing the "cvs update" command. null children=[Status ERROR
org.eclipse.team.cvs.core code=-14 cvs server: cannot open directory /usr/local/
cvsroot/cvs-trial: No such file or directory null]

Root /usr/local/cvsroot
CMD&gt; cvs import -m "Initial import" "cvs-trial" "vendor" "start"
Argument -b
Argument 1.1.1
Argument -m
Argument Initial import
Directory .
/usr/local/cvsroot/.
Argument cvs-trial
Argument vendor
Argument start
Directory .
/usr/local/cvsroot/
import
RESULT&gt; org.eclipse.team.internal.ccvs.core.connection.CVSCommunicationException
: Socket Exception: Connection reset
This works for me on Windows XP. Is it repeatable for you. I'll try Windows 
2000 next, Can you give me your setup info (Eclips ebuild, Java VM). 
This is 100% repeatable for me, unfortunately.

Eclipse version 2.1.0, build 200303272130 (2.1 release)

*** System properties:
awt.toolkit=sun.awt.windows.WToolkit
file.encoding=Cp1252
file.encoding.pkg=sun.io
file.separator=\
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.awt.printerjob=sun.awt.windows.WPrinterJob
java.class.path=C:\eclipse\startup.jar
java.class.version=48.0
java.endorsed.dirs=C:\j2sdk1.4.1_02\jre\lib\endorsed
java.ext.dirs=C:\j2sdk1.4.1_02\jre\lib\ext
java.home=C:\j2sdk1.4.1_02\jre
java.io.tmpdir=C:\DOCUME~1\rdclark\LOCALS~1\Temp\
java.library.path=C:\j2sdk1.4.1_02
\bin;.;C:\WINNT\System32;C:\WINNT;C:\Tcl\bin;C:\Perl\bin\;c:\program 
files\imagemagick-5.5.3-q8;E:\Perl\bin\;D:\Perl\bin\;C:\PROGRA~1\MICROS~3
\Common\msdev98\BIN;C:\PROGRA~1\MICROS~3\VC98\BIN;C:\PROGRA~1\MICROS~3
\Common\msdev98\TOOLS\WINNT;C:\PROGRA~1\MICROS~3\Common\msdev98
\TOOLS;C:\j2sdk1.4.1_02\bin;C:\WINNT\system32;C:\WINNT;C:\WINNT\System32
\Wbem;C:\Program Files\Common Files\Adaptec Shared\System;C:\Program 
Files\Metrowerks\CodeWarrior\Other Metrowerks Tools\Command Line 
Tools;C:\Program Files\Metrowerks\CodeWarrior\Win32-x86 
Support\Libraries\Runtime\Libs\MSL_All-DLLs;C:\Program 
Files\Metrowerks\CodeWarrior\Win32-x86 Support\Libraries\MFC\Libs;c:\emacs-20.7
\bin;c:\ant\bin;C:\cygwin\bin
java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition
java.runtime.version=1.4.1_02-b06
java.specification.name=Java Platform API Specification
java.specification.vendor=Sun Microsystems Inc.
java.specification.version=1.4
java.util.prefs.PreferencesFactory=java.util.prefs.WindowsPreferencesFactory
java.vendor=Sun Microsystems Inc.
java.vendor.url=http://java.sun.com/
java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi
java.version=1.4.1_02
java.vm.info=mixed mode
java.vm.name=Java HotSpot(TM) Client VM
java.vm.specification.name=Java Virtual Machine Specification
java.vm.specification.vendor=Sun Microsystems Inc.
java.vm.specification.version=1.0
java.vm.vendor=Sun Microsystems Inc.
java.vm.version=1.4.1_02-b06
line.separator=

I am fairly confident that the root problem for this bug and bug 38430 are the 
same. Marking as a duplicate.

*** This bug has been marked as a duplicate of 38430 ***</WithStack>
    <WithOutStack>After creating a new project in Eclipse, attempting to use "Share Project" 
times out with "Socket Exception: Connection reset". (May be related to bug 
38430)

1) Make sure you have a repository that uses :pserver: authentication
2) Create a new project in Eclipse
3) Select "Team &gt; Share Project..." from the context menu
4) Select "Finish"

The connection hangs after pserver authentication is finished. Note the 
following information from the debugging log (with all the "acceptable 
response" parts snipped):

Root /usr/local/cvsroot
CMD&gt; cvs version
version
M Concurrent Versions System (CVS) 1.11.5 (client/server)
ok
RESULT&gt; Status OKorg.eclipse.team.cvs.core code=0 ok null

Root /usr/local/cvsroot
CMD&gt; cvs -n update -d ""
Global_option -n
Argument -d
Directory .
/usr/local/cvsroot/cvs-trial
Argument .
Directory .
/usr/local/cvsroot/cvs-trial
update
E cvs server: Updating .
E cvs server: cannot open directory /usr/local/cvsroot/cvs-trial: No such file o
r directory
E cvs server: skipping directory
ok
RESULT&gt; Status ERRORorg.eclipse.team.cvs.core code=1 The following warnings were
 reported while performing the "cvs update" command. null children=[Status ERROR
org.eclipse.team.cvs.core code=-14 cvs server: cannot open directory /usr/local/
cvsroot/cvs-trial: No such file or directory null]

Root /usr/local/cvsroot
CMD&gt; cvs import -m "Initial import" "cvs-trial" "vendor" "start"
Argument -b
Argument 1.1.1
Argument -m
Argument Initial import
Directory .
/usr/local/cvsroot/.
Argument cvs-trial
Argument vendor
Argument start
Directory .
/usr/local/cvsroot/
import
RESULT&gt; org.eclipse.team.internal.ccvs.core.connection.CVSCommunicationException
: Socket Exception: Connection reset
This works for me on Windows XP. Is it repeatable for you. I'll try Windows 
2000 next, Can you give me your setup info (Eclips ebuild, Java VM). 
This is 100% repeatable for me, unfortunately.

Eclipse version 2.1.0, build 200303272130 (2.1 release)

*** System properties:
awt.toolkit=sun.awt.windows.WToolkit
file.encoding=Cp1252
file.encoding.pkg=sun.io
file.separator=\
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.awt.printerjob=sun.awt.windows.WPrinterJob
java.class.path=C:\eclipse\startup.jar
java.class.version=48.0
java.endorsed.dirs=C:\j2sdk1.4.1_02\jre\lib\endorsed
java.ext.dirs=C:\j2sdk1.4.1_02\jre\lib\ext
java.home=C:\j2sdk1.4.1_02\jre
java.io.tmpdir=C:\DOCUME~1\rdclark\LOCALS~1\Temp\
java.library.path=C:\j2sdk1.4.1_02
\bin;.;C:\WINNT\System32;C:\WINNT;C:\Tcl\bin;C:\Perl\bin\;c:\program 
files\imagemagick-5.5.3-q8;E:\Perl\bin\;D:\Perl\bin\;C:\PROGRA~1\MICROS~3
\Common\msdev98\BIN;C:\PROGRA~1\MICROS~3\VC98\BIN;C:\PROGRA~1\MICROS~3
\Common\msdev98\TOOLS\WINNT;C:\PROGRA~1\MICROS~3\Common\msdev98
\TOOLS;C:\j2sdk1.4.1_02\bin;C:\WINNT\system32;C:\WINNT;C:\WINNT\System32
\Wbem;C:\Program Files\Common Files\Adaptec Shared\System;C:\Program 
Files\Metrowerks\CodeWarrior\Other Metrowerks Tools\Command Line 
Tools;C:\Program Files\Metrowerks\CodeWarrior\Win32-x86 
Support\Libraries\Runtime\Libs\MSL_All-DLLs;C:\Program 
Files\Metrowerks\CodeWarrior\Win32-x86 Support\Libraries\MFC\Libs;c:\emacs-20.7
\bin;c:\ant\bin;C:\cygwin\bin
java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition
java.runtime.version=1.4.1_02-b06
java.specification.name=Java Platform API Specification
java.specification.vendor=Sun Microsystems Inc.
java.specification.version=1.4
java.util.prefs.PreferencesFactory=java.util.prefs.WindowsPreferencesFactory
java.vendor=Sun Microsystems Inc.
java.vendor.url=http://java.sun.com/
java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi
java.version=1.4.1_02
java.vm.info=mixed mode
java.vm.name=Java HotSpot(TM) Client VM
java.vm.specification.name=Java Virtual Machine Specification
java.vm.specification.vendor=Sun Microsystems Inc.
java.vm.specification.version=1.0
java.vm.vendor=Sun Microsystems Inc.
java.vm.version=1.4.1_02-b06
line.separator=

I am fairly confident that the root problem for this bug and bug 38430 are the 
same. Marking as a duplicate.

*** This bug has been marked as a duplicate of 38430 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38433" />
    <CreationDate amount="2003-06-04 16:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Editor titlebars are not painted</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20030604

The editor titlebar is not correctly painted. Only some of the
editors actually appear. Also, the bottom 1/4 of viewpart titlebars
are not painted.
Created attachment 5062
screenshot of the problem
Also, the caret in the editor is drawn much wider than it's supposed
to be.
#2:
I've seen the wide caret on MacOS X too. The culprit for it is bug #38408.
May be GTK has the same problem.
This bug was caused by the fix for Bug#38077 which is related with clipping on
the GC.


Fixed in latest (&gt;20030604) (HEAD).</WithStack>
    <WithOutStack>Build 20030604

The editor titlebar is not correctly painted. Only some of the
editors actually appear. Also, the bottom 1/4 of viewpart titlebars
are not painted.
Created attachment 5062
screenshot of the problem
Also, the caret in the editor is drawn much wider than it's supposed
to be.
#2:
I've seen the wide caret on MacOS X too. The culprit for it is bug #38408.
May be GTK has the same problem.
This bug was caused by the fix for Bug#38077 which is related with clipping on
the GC.


Fixed in latest (&gt;20030604) (HEAD).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38434" />
    <CreationDate amount="2003-06-04 16:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE in CModelBuilder.createVariableSpecification(...)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>org.eclipse.cdt.internal.core.CModelBuilder (Version 1.19.2.3, Tag
CDT_GA_1_1_0_20030516).

To reproduce, open lib/sh/getenv.c from bash-2.05b.

Stack trace:

NullPointer exception generating CModel
	at
org.eclipse.cdt.internal.core.model.CModelBuilder.createVariableSpecification(CModelBuilder.java:416)
	at
org.eclipse.cdt.internal.core.model.CModelBuilder.createElement(CModelBuilder.java:214)
	at
org.eclipse.cdt.internal.core.model.CModelBuilder.generateModelElements(CModelBuilder.java:166)
	at
org.eclipse.cdt.internal.core.model.CModelBuilder.generateModelElements(CModelBuilder.java:116)
	at org.eclipse.cdt.internal.core.model.CModelBuilder.parse(CModelBuilder.java:91)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.parse(TranslationUnit.java:215)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.parse(TranslationUnit.java:486)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.generateInfos(TranslationUnit.java:324)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.buildStructure(TranslationUnit.java:243)
	at org.eclipse.cdt.internal.core.model.Openable.openWhenClosed(Openable.java:275)
	at org.eclipse.cdt.internal.core.model.Openable.open(Openable.java:229)
	at org.eclipse.cdt.internal.core.model.WorkingCopy.open(WorkingCopy.java:235)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.getWorkingCopy(TranslationUnit.java:408)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.getSharedWorkingCopy(TranslationUnit.java:382)
	at
org.eclipse.cdt.internal.ui.editor.CDocumentProvider.createElementInfo(CDocumentProvider.java:198)
	at
org.eclipse.ui.texteditor.AbstractDocumentProvider.connect(AbstractDocumentProvider.java:306)
	at
org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput(AbstractTextEditor.java:2393)
	at org.eclipse.ui.texteditor.StatusTextEditor.doSetInput(StatusTextEditor.java:162)
	at org.eclipse.ui.editors.text.TextEditor.doSetInput(TextEditor.java:476)
	at org.eclipse.cdt.internal.ui.editor.CEditor.doSetInput(CEditor.java:142)
	at org.eclipse.ui.texteditor.AbstractTextEditor$8.run(AbstractTextEditor.java:1882)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:431)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:428)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1385)
	at
org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:1897)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:1914)
	at org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:604)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:666)
	at org.eclipse.ui.internal.EditorManager.access$7(EditorManager.java:655)
	at org.eclipse.ui.internal.EditorManager$7.run(EditorManager.java:919)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:889)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:864)
	at org.eclipse.ui.internal.EditorManager$6.run(EditorManager.java:857)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:853)
	at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:756)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2263)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1327)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1263)
	at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1223)
	at org.eclipse.ui.internal.Workbench$12.run(Workbench.java:1141)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:889)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at
org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:1093)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:870)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1373)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Hoda,
	Do you want to take a look at this, I think you are in
the vicinity 8-).  Please let me know if yes and I will reassign
if no I'll take a second look later this week.

Thanks
Actually after a close look, it looks like the CModelBuilder is correct
but the Dom parser is returning some bogus data(uninitialize declarators)

Any comments John?
Do you need the getenv.c file?
Another way to reproduce this

char *
getenv (name)
	const char * name;
{
	return 0;
}

8-)
It seem K&amp;R is not going well for the parser.
*** Bug 38769 has been marked as a duplicate of this bug. ***
confirm this was fix by the latest patch dealing with K&amp;R from Victor

I think , victor already commited JUnit tests.

Changing Status</WithStack>
    <WithOutStack>org.eclipse.cdt.internal.core.CModelBuilder (Version 1.19.2.3, Tag
CDT_GA_1_1_0_20030516).

To reproduce, open lib/sh/getenv.c from bash-2.05b.

Stack trace:

NullPointer exception generating CModel
	at
org.eclipse.cdt.internal.core.model.CModelBuilder.createVariableSpecification(CModelBuilder.java:416)
	at
org.eclipse.cdt.internal.core.model.CModelBuilder.createElement(CModelBuilder.java:214)
	at
org.eclipse.cdt.internal.core.model.CModelBuilder.generateModelElements(CModelBuilder.java:166)
	at
org.eclipse.cdt.internal.core.model.CModelBuilder.generateModelElements(CModelBuilder.java:116)
	at org.eclipse.cdt.internal.core.model.CModelBuilder.parse(CModelBuilder.java:91)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.parse(TranslationUnit.java:215)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.parse(TranslationUnit.java:486)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.generateInfos(TranslationUnit.java:324)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.buildStructure(TranslationUnit.java:243)
	at org.eclipse.cdt.internal.core.model.Openable.openWhenClosed(Openable.java:275)
	at org.eclipse.cdt.internal.core.model.Openable.open(Openable.java:229)
	at org.eclipse.cdt.internal.core.model.WorkingCopy.open(WorkingCopy.java:235)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.getWorkingCopy(TranslationUnit.java:408)
	at
org.eclipse.cdt.internal.core.model.TranslationUnit.getSharedWorkingCopy(TranslationUnit.java:382)
	at
org.eclipse.cdt.internal.ui.editor.CDocumentProvider.createElementInfo(CDocumentProvider.java:198)
	at
org.eclipse.ui.texteditor.AbstractDocumentProvider.connect(AbstractDocumentProvider.java:306)
	at
org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput(AbstractTextEditor.java:2393)
	at org.eclipse.ui.texteditor.StatusTextEditor.doSetInput(StatusTextEditor.java:162)
	at org.eclipse.ui.editors.text.TextEditor.doSetInput(TextEditor.java:476)
	at org.eclipse.cdt.internal.ui.editor.CEditor.doSetInput(CEditor.java:142)
	at org.eclipse.ui.texteditor.AbstractTextEditor$8.run(AbstractTextEditor.java:1882)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
	at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:431)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:428)
	at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1385)
	at
org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:1897)
	at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:1914)
	at org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:604)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:666)
	at org.eclipse.ui.internal.EditorManager.access$7(EditorManager.java:655)
	at org.eclipse.ui.internal.EditorManager$7.run(EditorManager.java:919)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:889)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:864)
	at org.eclipse.ui.internal.EditorManager$6.run(EditorManager.java:857)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:853)
	at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:756)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2263)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1327)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:1263)
	at org.eclipse.ui.internal.Workbench.access$10(Workbench.java:1223)
	at org.eclipse.ui.internal.Workbench$12.run(Workbench.java:1141)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:889)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at
org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:1093)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:870)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1373)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Hoda,
	Do you want to take a look at this, I think you are in
the vicinity 8-).  Please let me know if yes and I will reassign
if no I'll take a second look later this week.

Thanks
Actually after a close look, it looks like the CModelBuilder is correct
but the Dom parser is returning some bogus data(uninitialize declarators)

Any comments John?
Do you need the getenv.c file?
Another way to reproduce this

char *
getenv (name)
	const char * name;
{
	return 0;
}

8-)
It seem K&amp;R is not going well for the parser.
*** Bug 38769 has been marked as a duplicate of this bug. ***
confirm this was fix by the latest patch dealing with K&amp;R from Victor

I think , victor already commited JUnit tests.

Changing Status</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38435" />
    <CreationDate amount="2003-06-04 16:15:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[EditorMgmt] Tile Editors in editor area programmatically</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Need to set the tile as the default layout of the editor
area programmatically, so that whenever  two editors are opened in the
editor area,we will be able to see the two editors in tiled layout.
Hi,

    I know we can  tile the editor working area manually by using drag and
drop.But is it possible to set the tile as the default layout of the editor
area programmatically, so that whenever  two editors are opened in the
editor area,we will be able to see the two editors in tiled layout.

MorPheus

Any more ideas? 
I'm looking to do exactly this in our application: programmatically lay out two editors next to each other without requiring the user to do it themselves.

Typically, users with only basic UI manipulation experience will not consider that the tabs can be moved at all, and will therefore not consider the fact they can be laid out in any manner other than that presented programmatically by the application itself.

What we basically need in an 'IWorkbenchPage.openEditors(editors[])' and the workbench will arrange them proportionally. Later, controls to define the portions of the screen each editor gets given would be useful.
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.</WithStack>
    <WithOutStack>Need to set the tile as the default layout of the editor
area programmatically, so that whenever  two editors are opened in the
editor area,we will be able to see the two editors in tiled layout.
Hi,

    I know we can  tile the editor working area manually by using drag and
drop.But is it possible to set the tile as the default layout of the editor
area programmatically, so that whenever  two editors are opened in the
editor area,we will be able to see the two editors in tiled layout.

MorPheus

Any more ideas? 
I'm looking to do exactly this in our application: programmatically lay out two editors next to each other without requiring the user to do it themselves.

Typically, users with only basic UI manipulation experience will not consider that the tabs can be moved at all, and will therefore not consider the fact they can be laid out in any manner other than that presented programmatically by the application itself.

What we basically need in an 'IWorkbenchPage.openEditors(editors[])' and the workbench will arrange them proportionally. Later, controls to define the portions of the screen each editor gets given would be useful.
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38436" />
    <CreationDate amount="2003-06-04 16:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Locating Widgets in display coordinates for automated whitebox testing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340644225">
        <Exception>abbot.WaitTimedOutError</Exception>
        <Reason>Timed out waiting for External Tools to show</Reason>
        <Frames>
          <Frame depth="0">abbot.tester.swt.Robot.wait(Robot.java:1454)</Frame>
          <Frame depth="1">abbot.tester.swt.Robot.wait(Robot.java:1442)</Frame>
          <Frame depth="2">abbot.tester.swt.WidgetTester.waitForShellShowing(WidgetTester.java:897)</Frame>
          <Frame depth="3">abbot.swt.eclipse.tests.MenuItemGetBoundsTest$1.run(MenuItemGetBoundsTest.java:82)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="36">
      <source_code type="functiondef">
        <location start="10172" end="10260" />
        <code>not implementing getBounds() for {MenuItem, TableItem, TreeItem,
  CoolItem, ToolItem}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="13663" end="13828" />
        <code>public Object getAdapter(Class adapter) {
    return Platform.getAdapterManager().
      getAdapter(this, adapter);  // note Platform reference... see PS below
  }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="22196" end="22630" />
        <code>public Rectangle TabItem_getBounds(TabFolder parent){
   int index = parent.indexOf(this);
   if (index == -1) return new Rectangle (0, 0, 0, 0);
   RECT rect = new RECT();
   OS.SendMessage( parent.handle,
           OS.HDM_FIRST + 7 /*OS.TCM_GETITEMRECT*/,
           index,
           rect);
   int width = rect.right - rect.left;
   int height = rect.bottom - rect.top;
   return new Rectangle(rect.left,rect.top,width,height); 
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="23134" end="23592" />
        <code>&gt; public Rectangle TabItem_getBounds(TabFolder parent){
&gt;    int index = parent.indexOf(this);
&gt;    if (index == -1) return new Rectangle (0, 0, 0, 0);
&gt;    RECT rect = new RECT();
&gt;    OS.SendMessage( parent.handle,
&gt;            OS.HDM_FIRST + 7 /*OS.TCM_GETITEMRECT*/,
&gt;            index,
&gt;            rect);
&gt;    int width = rect.right - rect.left;
&gt;    int height = rect.bottom - rect.top;
&gt;    return new Rectangle(rect.left,rect.top,width,height); 
&gt; }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="25427" end="25909" />
        <code>&gt;&gt;&gt; public Rectangle TabItem_getBounds(TabFolder parent){
&gt;&gt;&gt;    int index = parent.indexOf(this);
&gt;&gt;&gt;    if (index == -1) return new Rectangle (0, 0, 0, 0);
&gt;&gt;&gt;    RECT rect = new RECT();
&gt;&gt;&gt;    OS.SendMessage( parent.handle,
&gt;&gt;&gt;            OS.HDM_FIRST + 7 /*OS.TCM_GETITEMRECT*/,
&gt;&gt;&gt;            index,
&gt;&gt;&gt;            rect);
&gt;&gt;&gt;    int width = rect.right - rect.left;
&gt;&gt;&gt;    int height = rect.bottom - rect.top;
&gt;&gt;&gt;    return new Rectangle(rect.left,rect.top,width,height); 
&gt;&gt;&gt; }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="32311" end="33584" />
        <code>void dumpMenubarItemBounds(MenuRef menu) {
	AXUIElementRef ref= AXUIElementCreateWithHIObjectAndIdentifier((HIObjectRef)menu, (UInt64)0);
	if (ref != NULL) {
		int i= 0;
		CFArrayRef children;
		fprintf(stderr, "menubar item bounds:\n");
		AXUIElementCopyAttributeValue(ref, kAXChildrenAttribute, (CFTypeRef*) &amp;children);
		
		CFIndex count= CFArrayGetCount(children);
		for (i= 0; i &lt; count; i++) {
			CFTypeRef valueRef;
			CGPoint position;
			CGSize size;
			CFStringRef title;
 			
			AXUIElementRef menuItem= (AXUIElementRef) CFArrayGetValueAtIndex(children, i);

			AXUIElementCopyAttributeValue(menuItem, kAXTitleAttribute, (CFTypeRef*) &amp;title);
			const char *t= CFStringGetCStringPtr(title, kCFStringEncodingMacRoman);
		
			AXUIElementCopyAttributeValue(menuItem, kAXPositionAttribute, &amp;valueRef);
			AXValueGetValue(valueRef, kAXValueCGPointType, &amp;position);
 
			AXUIElementCopyAttributeValue(menuItem, kAXSizeAttribute, &amp;valueRef);
			AXValueGetValue(valueRef, kAXValueCGSizeType, &amp;size);
            	            	
			fprintf(stderr, "  %d %s: x:%d y:%d w:%d h:%d\n", i, t, 
				(int)position.x, (int)position.y, (int)size.width, (int)size.height);
            	
			CFRelease(valueRef);
			CFRelease(title);
		}
	 	CFRelease(children);
		CFRelease(ref);
	}
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="33668" end="34894" />
        <code>public Rectangle[] getItemBounds () {
	if ((style &amp; SWT.BAR) != 0) return null;	
	int menuRef = handle;
	int ref = OS.AXUIElementCreateWithHIObjectAndIdentifier (menuRef, (long)0);
	if (ref != 0) {
		int [] children = new int [1];
		System.out.println("XAERROR: " + OS.AXUIElementCopyAttributeValue (ref, 
OS.kAXChildrenAttribute (), children));
		int count = OS.CFArrayGetCount (children [0]);
		Rectangle [] result = new Rectangle [count];
		int [] valueRef = new int [1];
        CGPoint position = new CGPoint ();
        CGSize size = new CGSize ();
		for (int i = 0; i &lt; count; i++) {
			int menuItem = OS.CFArrayGetValueAtIndex (children [0], i);
            OS.AXUIElementCopyAttributeValue (menuItem, OS.kAXPositionAttribute(), valueRef);
            OS.AXValueGetValue (valueRef [0], OS.kAXValueCGPointType, position);
            OS.CFRelease (valueRef [0]);
            OS.AXUIElementCopyAttributeValue (menuItem, OS.kAXSizeAttribute(), valueRef);
            OS.AXValueGetValue (valueRef [0], OS.kAXValueCGSizeType, size);
            OS.CFRelease (valueRef [0]);
            result [i] = new Rectangle ((int)position.x, (int)position.y, (int)size.width, (int)size.height);
		}
		return result;
	}
	return null;
}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="42208" end="42335" />
        <code>if (Universal Access not set) {
  if (user not administrative)
    throw SWTException // ERROR_USER_LACKS_PERMISSION
  set it
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="44211" end="44225" />
        <code>getBounds () {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="51308" end="51345" />
        <code>&gt; /*public*/ Rectangle getBounds () {</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="52217" end="52472" />
        <code>&gt;&gt;&gt;&gt; if(w instanceof TableItem){
&gt;&gt;&gt;&gt;    TableItem item = (TableItem)w;
&gt;&gt;&gt;&gt;    Rectangle bounds = item.getBounds();
&gt;&gt;&gt;&gt;    Point p = item.getParent().toDisplay(bounds.x,bounds.y);
&gt;&gt;&gt;&gt;    return new Rectangle(p.x,p.y,bounds.width,bounds.height);
&gt;&gt;&gt;&gt;  }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="52637" end="52678" />
        <code>&gt;&gt;&gt; &gt; /*public*/ Rectangle getBounds () {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="53741" end="53798" />
        <code>public Rectangle getBounds () {
  return getBounds (0);
}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="53830" end="53841" />
        <code>/*public*/</code>
      </source_code>
      <source_code type="functiondef">
        <location start="53831" end="54242" />
        <code>/*public*/ Rectangle getBounds () {
  checkWidget();
  if (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);
  int itemIndex = parent.indexOf (this);
  if (itemIndex == -1) return new Rectangle (0, 0, 0, 0);
  RECT rect = getBounds (itemIndex, 0, true, false);
  int width = rect.right - rect.left, height = rect.bottom - rect.top;
  return new Rectangle (rect.left, rect.top, width, height);
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="70162" end="73535" />
        <code>+   public static Rectangle getBounds (MenuItem menuItem) {
+ // start code from 3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds()    
+ //  checkWidget ();
+ // not visible, but menuItem.getParent() will call it
+ //  Menu parent = menuItem.getParent();
+ //  if (OS.IsWinCE) return new Rectangle (0, 0, 0, 0);
+ //  int index = parent.indexOf (menuItem);
+ //  if (index == -1) return new Rectangle (0, 0, 0, 0);
+ //  if ((parent.getStyle() &amp; SWT.BAR) != 0) {
+ //    Decorations shell = parent.getParent();
+ //    if (shell.getMenuBar() != parent) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    int hwndShell = shell.handle;
+ //    MENUBARINFO info1 = new MENUBARINFO ();
+ //    info1.cbSize = MENUBARINFO.sizeof;
+ //    if (!OS.GetMenuBarInfo (hwndShell, OS.OBJID_MENU, 1, info1)) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    MENUBARINFO info2 = new MENUBARINFO ();
+ //    info2.cbSize = MENUBARINFO.sizeof;
+ //    if (!OS.GetMenuBarInfo (hwndShell, OS.OBJID_MENU, index + 1, info2)) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    int x = info2.left - info1.left;
+ //    int y = info2.top - info1.top;
+ //    int width = info1.right - info1.left;
+ //    int height = info1.bottom - info1.top;
+ //    return new Rectangle (x, y, width, height);
+ //  } else {
+ //    int hMenu = parent.handle;
+ //    RECT rect1 = new RECT ();
+ //    if (!OS.GetMenuItemRect (0, hMenu, 0, rect1)) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    RECT rect2 = new RECT ();
+ //    if (!OS.GetMenuItemRect (0, hMenu, index, rect2)) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    int x = rect2.left - rect1.left + 2;
+ //    int y = rect2.top - rect1.top + 2;
+ //    int width = rect2.right - rect2.left;
+ //    int height = rect2.bottom - rect2.top;
+ //    return new Rectangle (x, y, width, height);
+ //  }
+ // end code from 3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds()
+ // start code adapted from o.e.swt.patched.MenuItem.getBounds()
+     Menu parent = menuItem.getParent();
+     Decorations parentControl = parent.getParent();
+     if (OS.IsWinCE) return new Rectangle (0, 0, 0, 0);
+     int index = parent.indexOf (menuItem);
+     if (index == -1) return new Rectangle (0, 0, 0, 0);
+     RECT rect = new RECT();
+     boolean success =
OS.GetMenuItemRect(((parent.getStyle()&amp;SWT.BAR)==SWT.BAR)?parentControl.handle:0,
+               parent.handle,
+               index,
+               rect);
+     if (!success) {
+       /* the OS API call couldn't get the MenuItem bounds, so return an empty
rectangle */
+       return new Rectangle(0, 0, 0, 0);   
+     }
+     if ((parentControl.getStyle() &amp; SWT.MIRRORED) == 0) {
+       /* coordinates are not mirrored */
+       Point p = parentControl.toControl(rect.left,rect.top);
+       int width = rect.right - rect.left;
+       int height = rect.bottom - rect.top;
+       return new Rectangle(p.x,p.y,width,height);   
+     } else {
+       /* coordinates are mirrored */
+       /* TODO: this has not been tested */
+       Point p = parentControl.toControl(rect.left,rect.top);
+       int width = rect.left - rect.right;
+       int height = rect.bottom - rect.top;
+       return new Rectangle(p.x,p.y,width,height);       
+     }
+ // end code adapted from o.e.swt.patched.MenuItem.getBounds()
+   }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="73823" end="77170" />
        <code>-   public static Rectangle getBounds (MenuItem menuItem) {
- // start code from 3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds()    
- //  checkWidget ();
- // not visible, but menuItem.getParent() will call it
-   Menu parent = menuItem.getParent();
-   if (OS.IsWinCE) return new Rectangle (0, 0, 0, 0);
-   int index = parent.indexOf (menuItem);
-   if (index == -1) return new Rectangle (0, 0, 0, 0);
-   if ((parent.getStyle() &amp; SWT.BAR) != 0) {
-     Decorations shell = parent.getParent();
-     if (shell.getMenuBar() != parent) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     int hwndShell = shell.handle;
-     MENUBARINFO info1 = new MENUBARINFO ();
-     info1.cbSize = MENUBARINFO.sizeof;
-     if (!OS.GetMenuBarInfo (hwndShell, OS.OBJID_MENU, 1, info1)) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     MENUBARINFO info2 = new MENUBARINFO ();
-     info2.cbSize = MENUBARINFO.sizeof;
-     if (!OS.GetMenuBarInfo (hwndShell, OS.OBJID_MENU, index + 1, info2)) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     int x = info2.left - info1.left;
-     int y = info2.top - info1.top;
-     int width = info1.right - info1.left;
-     int height = info1.bottom - info1.top;
-     return new Rectangle (x, y, width, height);
-   } else {
-     int hMenu = parent.handle;
-     RECT rect1 = new RECT ();
-     if (!OS.GetMenuItemRect (0, hMenu, 0, rect1)) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     RECT rect2 = new RECT ();
-     if (!OS.GetMenuItemRect (0, hMenu, index, rect2)) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     int x = rect2.left - rect1.left + 2;
-     int y = rect2.top - rect1.top + 2;
-     int width = rect2.right - rect2.left;
-     int height = rect2.bottom - rect2.top;
-     return new Rectangle (x, y, width, height);
-   }
- // end code from 3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds()
- // start code adapted from o.e.swt.patched.MenuItem.getBounds()
- //    Menu parent = menuItem.getParent();
- //    Decorations parentControl = parent.getParent();
- //    if (OS.IsWinCE) return new Rectangle (0, 0, 0, 0);
- //    int index = parent.indexOf (menuItem);
- //    if (index == -1) return new Rectangle (0, 0, 0, 0);
- //    RECT rect = new RECT();
- //    boolean success =
OS.GetMenuItemRect(((parent.getStyle()&amp;SWT.BAR)==SWT.BAR)?parentControl.handle:0,
- //              parent.handle,
- //              index,
- //              rect);
- //    if (!success) {
- //      /* the OS API call couldn't get the MenuItem bounds, so return an
empty rectangle */
- //      return new Rectangle(0, 0, 0, 0);   
- //    }
- //    if ((parentControl.getStyle() &amp; SWT.MIRRORED) == 0) {
- //      /* coordinates are not mirrored */
- //      Point p = parentControl.toControl(rect.left,rect.top);
- //      int width = rect.right - rect.left;
- //      int height = rect.bottom - rect.top;
- //      return new Rectangle(p.x,p.y,width,height);   
- //    } else {
- //      /* coordinates are mirrored */
- //      /* TODO: this has not been tested */
- //      Point p = parentControl.toControl(rect.left,rect.top);
- //      int width = rect.left - rect.right;
- //      int height = rect.bottom - rect.top;
- //      return new Rectangle(p.x,p.y,width,height);       
- //    }
- // end code adapted from o.e.swt.patched.MenuItem.getBounds()
-   }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="88850" end="90020" />
        <code>public static void main(String[] args) {
	Display display = new Display ();
	Shell shell = new Shell (display);
	Menu bar = new Menu (shell, SWT.BAR);
	shell.setMenuBar (bar);
	MenuItem fileItem = new MenuItem (bar, SWT.CASCADE);
	fileItem.setText ("File");
	Menu submenu = new Menu (shell, SWT.DROP_DOWN);
	fileItem.setMenu (submenu);
	MenuItem item = new MenuItem (submenu, SWT.PUSH);
	item.setText ("Select &amp;All\tCtrl+A");
	item.setAccelerator (SWT.CTRL + 'A');
	shell.setSize (200, 200);
	shell.open ();
	
	try {
		Method m = fileItem.getClass().getDeclaredMethods()[8];
		System.out.println(m.toString());
		m.setAccessible(true);
		Rectangle rect = (Rectangle)m.invoke(fileItem, null);
		Point where = new Point(rect.x, rect.y);
		where = shell.toDisplay(where);
		Shell highlight = new Shell(display, SWT.NO_TRIM | 
SWT.PRIMARY_MODAL);
		highlight.setBounds(where.x, where.y, rect.width, rect.height);
		highlight.setBackground(display.getSystemColor
(SWT.COLOR_INFO_BACKGROUND));
		highlight.open();
	} catch (Exception e) {
		e.printStackTrace();
	}
	
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch ()) display.sleep ();
	}
	display.dispose ();
}</code>
      </source_code>
      <source_code type="import">
        <location start="90541" end="90569" />
        <code>import java.lang.reflect.*;</code>
      </source_code>
      <source_code type="import">
        <location start="90570" end="90596" />
        <code>import org.eclipse.swt.*;</code>
      </source_code>
      <source_code type="import">
        <location start="90597" end="90631" />
        <code>import org.eclipse.swt.graphics.*;</code>
      </source_code>
      <source_code type="import">
        <location start="90632" end="90665" />
        <code>import org.eclipse.swt.widgets.*;</code>
      </source_code>
      <source_code type="class">
        <location start="90667" end="92120" />
        <code>public class PR_38436 {
public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	Menu bar = new Menu(shell, SWT.BAR);
	shell.setMenuBar(bar);
	MenuItem fileItem = new MenuItem(bar, SWT.CASCADE);
	fileItem.setText("File");
	Menu submenu = new Menu(shell, SWT.DROP_DOWN);
	fileItem.setMenu(submenu);
	MenuItem item = new MenuItem(submenu, SWT.PUSH);
	item.setText("Select &amp;All\tCtrl+A");
	item.setAccelerator(SWT.CTRL + 'A');
	shell.setSize(200, 200);
	shell.open();
	try {
		Method m1 = bar.getClass().getDeclaredMethod("getBounds", 
null);
		m1.setAccessible(true);
		Rectangle menuRect = (Rectangle) m1.invoke(bar, null);
		Method m2 = fileItem.getClass().getDeclaredMethod("getBounds", 
null);
		m2.setAccessible(true);
		Rectangle itemRect = (Rectangle) m2.invoke(fileItem, null);
		if ((bar.getStyle() &amp; SWT.RIGHT_TO_LEFT) != 0) {
			itemRect.x = menuRect.x + menuRect.width - 
itemRect.width - itemRect.x;
		} else {
			itemRect.x += menuRect.x;
		}
		itemRect.y += menuRect.y;
		Shell highlight = new Shell(display, SWT.NO_TRIM | 
SWT.PRIMARY_MODAL);
		highlight.setBounds(itemRect.x, itemRect.y, itemRect.width, 
itemRect.height);
		highlight.setBackground(display.getSystemColor
(SWT.COLOR_INFO_BACKGROUND));
		highlight.open();
	} catch (Exception e) {
		e.printStackTrace();
	}
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="92505" end="94501" />
        <code>public static Rectangle getBounds(MenuItem menuItem) {
//		 start code adapted from 
&lt;url&gt;https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c112&lt;/url&gt;
		Menu parent = menuItem.getParent();
		Method m1 = null;
		try {
			m1 = parent.getClass().getDeclaredMethod("getBounds", 
null);
		} catch (SecurityException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (NoSuchMethodException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		}
		m1.setAccessible(true);
		Rectangle menuRect = null;
		try {
			menuRect = (Rectangle) m1.invoke(parent, null);
		} catch (IllegalArgumentException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		}
		Method m2 = null;
		try {
			m2 = menuItem.getClass().getDeclaredMethod
("getBounds", null);
		} catch (SecurityException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (NoSuchMethodException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		}
		m2.setAccessible(true);
		Rectangle itemRect = null;
		try {
			itemRect = (Rectangle) m2.invoke(menuItem, null);
		} catch (IllegalArgumentException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		}
		if ((parent.getStyle() &amp; SWT.RIGHT_TO_LEFT) != 0) {
			itemRect.x = menuRect.x + menuRect.width - 
itemRect.width - itemRect.x;
		} else {
			itemRect.x += menuRect.x;
		}
		itemRect.y += menuRect.y;
		return itemRect;
//		 end code adapted from 
&lt;url&gt;https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c112&lt;/url&gt;	
	
	}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="94550" end="94648" />
        <code>if(w instanceof MenuItem){
	MenuItem item = (MenuItem)w;
	return SWTWorkarounds.getBounds(item);
}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="95585" end="95711" />
        <code>if ((parent.getStyle() &amp; SWT.RIGHT_TO_LEFT) != 0) {
	itemRect.x = menuRect.x + menuRect.width - itemRect.width - itemRect.x;
}</code>
      </source_code>
      <source_code type="elsestatement">
        <location start="95710" end="95747" />
        <code>} else {
	itemRect.x += menuRect.x;
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="95748" end="95773" />
        <code>itemRect.y += menuRect.y;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="99345" end="99647" />
        <code>/**
   * Translates from SWT keys values to AWT ones, e.g.
   * from &lt;code&gt;SWT.ESC&lt;/code&gt; to &lt;code&gt;VK_ESCAPE&lt;/code&gt;.
   * For details see
   * {@link org.eclipse.swt.widgets.Display#KeyTable}
   * Workaround for package scope of
   * {@link org.eclipse.swt.widgets.Display#untranslateKey(int)}
   */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="105853" end="105908" />
        <code>new Robot().keyPress(SWTWorkarounds.swt2OS(SWT.ESC));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="107030" end="107087" />
        <code>&gt;   new Robot().keyPress(SWTWorkarounds.swt2OS(SWT.ESC));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="108599" end="108643" />
        <code>new Robot().keyPress(KeyEvent.VK_ESCAPE));</code>
      </source_code>
      <source_code type="functioncall">
        <location start="108786" end="108830" />
        <code>&gt; new Robot().keyPress(KeyEvent.VK_ESCAPE));</code>
      </source_code>
      <source_code type="assignment">
        <location start="110150" end="110175" />
        <code>itemRect.y += menuRect.y;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="110270" end="110732" />
        <code>public static Rectangle getBounds(MenuItem menuItem) {
        Rectangle itemRect = getBounds ((Object)menuItem);
        Rectangle menuRect = getBounds (menuItem.getParent ());
        if ((menuItem.getParent ().getStyle() &amp; SWT.RIGHT_TO_LEFT) != 0) {
            itemRect.x = menuRect.x + menuRect.width - itemRect.width - itemRect.x;
        } else {
            itemRect.x += menuRect.x;
        }
        itemRect.y += menuRect.y;
        return itemRect;
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="110927" end="110954" />
        <code>&gt; itemRect.y += menuRect.y;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="5">
      <Enumeration lines="759">
        <Lines>
          <Line>I.e. getBounds() for each child of Widget.</Line>
          <Line />
          <Line>&gt;&gt; Everything that holds that back requires workarounds.</Line>
          <Line />
          <Line>Steve Northover 2005-05-10 16:11 -------</Line>
          <Line>&gt; You can get the information you need already for the TableItem on</Line>
          <Line>&gt; all platforms so I'm not sure what you are working around in this</Line>
          <Line>&gt; particular case.</Line>
          <Line />
          <Line>The non-public-ness of TableItem.getBounds(). As previously mentioned.</Line>
          <Line>I'm not sure what isn't clear here.</Line>
          <Line />
          <Line>We need getBounds() to find things. We have Component.getBounds(), we</Line>
          <Line>need Widget.getBounds(). Forgive the repetition, but "Everything that</Line>
          <Line>holds [Widget.getBounds()] back requires workarounds." (E.g. Abbot</Line>
          <Line>works around AWT MenuComponent's, but fortunately JMenuItem has mostly</Line>
          <Line>superceded that, and JMenuItem isa Component.)</Line>
          <Line />
          <Line>What we can find, we can automate--knock wood, but it's been true so</Line>
          <Line>far, threading be damned. Automation is good. Automation allows your</Line>
          <Line>users to create more/better tests--which means we develop better UIs</Line>
          <Line>faster--and automation allows your users to drive their code for</Line>
          <Line>demos, TVT, etc. Code-centric automation is better: it enhances</Line>
          <Line>developer-time testing and supports TDD. Multi-platform code-centric</Line>
          <Line>automation is better yet.</Line>
          <Line />
          <Line>Automation requires coordinate finding. Swing supports automation via</Line>
          <Line>a single API, Component.getBounds(), the sufficiency of which is</Line>
          <Line>evinced by the number of code-centric tools that build on that simple</Line>
          <Line>foundation, the functionality those tools provide, the number of their</Line>
          <Line>users, and the goodness of the UIs their users develop. That's good.</Line>
          <Line>That's important.</Line>
          <Line />
          <Line>If you can give SWT automation a similar foundation,</Line>
          <Line>Eclipse+JUnit+Abbot can deliver similar goodness a lot more/faster.</Line>
          <Line>Otherwise we hafta workaround you.</Line>
          <Line />
          <Line>I do second Tom on that one.</Line>
          <Line>&gt; "Everything that holds [Widget.getBounds()] back requires workarounds."</Line>
          <Line>I am faced with the exact same issues for the plug-in I am working on.</Line>
          <Line>Shall I continue to leave in the underworld of patched SWT?</Line>
          <Line>And I am dying to use abbot for my tests.</Line>
          <Line />
          <Line>Steve, in comment #79 you replied to me:</Line>
          <Line>&gt; API's can change after M6 but it's way harder to make it</Line>
          <Line>&gt; happen ... and that's a good thing at this stage in the game.</Line>
          <Line>I guess that this bugzilla has enough votes and followers to carry some weight</Line>
          <Line>and do some thing about it.</Line>
          <Line>You can make API change happen, you said it.</Line>
          <Line>I feel kind of let down here.</Line>
          <Line />
          <Line>Now, over 42 unique individuals, including 23 positives votes, the rest as CC</Line>
          <Line>are following this bug! I wish all bugs were so popular!</Line>
          <Line />
          <Line>Just some of the folks and companies which are represented in the CC on this</Line>
          <Line>bug, based on the voters and CCed emails:</Line>
          <Line>(excluding all the IBM folks in the US, Canada, and Switzerland ;-) )</Line>
          <Line />
          <Line>*Eclipse board and strategic members:</Line>
          <Line>SAP</Line>
          <Line>Intel</Line>
          <Line />
          <Line>*Add-in provider members like:</Line>
          <Line>Agitar</Line>
          <Line>Instantiations</Line>
          <Line />
          <Line>*Companies like:</Line>
          <Line>Apple</Line>
          <Line>RIM (the blackberry guys)</Line>
          <Line>Orbeon</Line>
          <Line>Worldpac</Line>
          <Line>Trigeo</Line>
          <Line />
          <Line>*Open source projects: empproject, abbot, orbeon, oxf studio, vence,</Line>
          <Line>easyeclipse, eclipse-ccase, harbour-ide</Line>
          <Line />
          <Line>*Eclipse advocates and bloggers like Luis de la Rosa, and Gunnar Wagenknecht</Line>
          <Line />
          <Line>*Plus at least two academic institutions....</Line>
          <Line />
          <Line>I think it is enough justification to give a push and make it so that it goes</Line>
          <Line>into 3.1 !</Line>
          <Line>The original discussion was about TableItem.getBounds(), which you do not need</Line>
          <Line>today in order to make Abbot work.  I agree that you need the general</Line>
          <Line>capability to get widget coordinates.  You are free to contribute the code</Line>
          <Line>that does this at any time.</Line>
          <Line />
          <Line>In the case of MenuItem.getBounds() and Menu.getBounds(), we are stuck on</Line>
          <Line>Apple and have been for a while.  There is nothing I can do about this.  So,</Line>
          <Line>the right thing for you to do in the short term is to include platform</Line>
          <Line>specific code in Abbot and not to support Abbot on the Mac.  This is sad, but</Line>
          <Line>it is the right software engineering thing to do.</Line>
          <Line />
          <Line>Please stop ranting at me.  I am doing all I can and it doesn't help.</Line>
          <Line>Philippe, the bug is important and we are doing all we can.  The implications</Line>
          <Line>of adding an API like Widget.getBounds() (or solving this problem in another</Line>
          <Line>way) are big.  We cannot propose API that is no-portable.  We realize this bug</Line>
          <Line>is important and have been trying to get to it for a while.</Line>
          <Line>Steve,</Line>
          <Line />
          <Line>First I would like you to kindly accept my public apologies if I came out hard</Line>
          <Line>and harsh.</Line>
          <Line />
          <Line>This may be my French way of loving heated arguments and debates resurfacing now</Line>
          <Line>and then ;-) I want you to be my best buddy, and I have serious respect for the</Line>
          <Line>work you guys are doing.Being the API guardians of the essential SWT must be a</Line>
          <Line>tough job, with trolls like me ruining your day!</Line>
          <Line />
          <Line>In all fairness, if some irresponsible person had given me your job, SWT would</Line>
          <Line>have been a half-baked, ugly, buggy, non-portable piece of crap, instead of the</Line>
          <Line>elegant work it is today and Eclipse would be dying from my incompetence :-)</Line>
          <Line />
          <Line>Be assured that if I need to vent my SWT frustration in the future, I will do it</Line>
          <Line>1-on-1 first.</Line>
          <Line />
          <Line>Now, right after posting that unruly comment yesterday, I was hanging @ #eclipse</Line>
          <Line>and chatted with Billy B. who gave me some valuable insights.</Line>
          <Line />
          <Line>Also I did not really understand until now that the menu problem on Mac is real</Line>
          <Line>hard, and may not be solvable in a portable way because the way carbon handles</Line>
          <Line>menu bars.</Line>
          <Line />
          <Line>As far as I am concerned, I need the menu and menu items coordinates</Line>
          <Line>(MenuItem.getBounds() and Menu.getBounds() ), but I can live without</Line>
          <Line>portability, and Billy told me there could be a way to do it in my plug-in,</Line>
          <Line>probably without having to resort to SWT patching, or weird aspects, reflection</Line>
          <Line>or byte code hacks, as long as portability was not the major concern. And for me</Line>
          <Line>it is not.</Line>
          <Line />
          <Line>I care about making my own little plugin run nicely on top of a vanilla Eclipse</Line>
          <Line>build, with decent support for at least Windows, Mac and Linux/GTK. And if some</Line>
          <Line>features are NOT available on Mac, then so be it. I can live with that, and I</Line>
          <Line>can inform my users properly about the capabilities of that plugin on each</Line>
          <Line>platforms, both in the documentation and at run-time.</Line>
          <Line>I also care about SWT staying homogenous, elegant and portable on all Eclipse's</Line>
          <Line>platforms, and do not want to be an architect of its demise.</Line>
          <Line />
          <Line>If there is a way to get some code examples for Win and GTK posted somewhere to</Line>
          <Line>get me started, that would be great.</Line>
          <Line>And as far as I am concerned, that would close that bug!</Line>
          <Line />
          <Line>Cordially</Line>
          <Line>Ok, thanks Philippe, I wouldn't go quite that far.</Line>
          <Line />
          <Line>If you are looking for the code that does Menu.getBounds() and</Line>
          <Line>MenuItem.getBounds(), it is also released as /*public*/ but doesn't work on</Line>
          <Line>the Mac.  NOTE:  Since many operating systems don't compute the menu bounds</Line>
          <Line>until the menu is about to be shown, the bounds are zero when the menu is not</Line>
          <Line>displayed.  Also, this the coordinate systems are consistent but might not be</Line>
          <Line>the same when the code is finally released (sometime in the year 3000).  It</Line>
          <Line>should be easy enough to do the same thing that Tom is doing (ie. copy the</Line>
          <Line>code to a platform specific utility class) and call it.  Maybe Tom could</Line>
          <Line>provide his utility class as a patch in this bug report?</Line>
          <Line />
          <Line>Also, BB should be commenting in the bug report rather than chatting privately!</Line>
          <Line>Steve,</Line>
          <Line>since Menu.getBounds() and  MenuItem.getBounds() are /*public*/, I can work</Line>
          <Line>around that with reflection, as long I am not under the control of a restrictive</Line>
          <Line>security manager. A bit awkward, but the hack will do the trick for me, together</Line>
          <Line>with some platform specific conditions for macs or platforms where it returns</Line>
          <Line>odd or (0,0,0,0) values</Line>
          <Line />
          <Line>&gt;NOTE:  Since many operating systems don't compute the menu bounds</Line>
          <Line>&gt;until the menu is about to be shown, the bounds are zero when the menu is not</Line>
          <Line>displayed.</Line>
          <Line>In my case that would not be a problem. I really only need to compute the menu</Line>
          <Line>bounds just right after they have been displayed, not before.</Line>
          <Line />
          <Line>&gt;It should be easy enough to do the same thing that Tom is doing</Line>
          <Line>&gt; (ie. copy the code to a platform specific utility class) and call it.</Line>
          <Line>Does not this require a patched SWT and therefore a modified core eclispe?</Line>
          <Line>I am trying to avoid that.</Line>
          <Line />
          <Line>Tom your patch would be welcomed or is it already in abbot? If so, I will do a</Line>
          <Line>diff again between SWT and your latest patched SWT, last I made is a few months old.</Line>
          <Line />
          <Line>Just adding a quick note for everybody's understanding is that all Billy told me</Line>
          <Line>about this bug in our chat was it was down to the Mac menu issues. ;-)</Line>
          <Line>Steve Northover  2005-05-11 08:03  [reply] -------</Line>
          <Line>&gt;&gt;&gt; Please stop ranting at me. I am doing all I can and it doesn't</Line>
          <Line>&gt;&gt;&gt; help.</Line>
          <Line />
          <Line>Not ranting, just explaining, since the rationale for getBounds() (vs</Line>
          <Line>getBounds(...), yourAPIhere(...), etc) doesn't seem to take.</Line>
          <Line />
          <Line>Steve Northover  2005-05-11 16:15  [reply] -------</Line>
          <Line>&gt;&gt; If you are looking for the code that does Menu.getBounds() and</Line>
          <Line>&gt;&gt; MenuItem.getBounds(), it is also released as /*public*/ but doesn't</Line>
          <Line>&gt;&gt; work on the Mac.</Line>
          <Line />
          <Line>The code in org.eclipse.swt.widgets.MenuItem.getBounds() in 3.1-M6</Line>
          <Line>also works incorrectly on win32 when used to exercise a workbench:</Line>
          <Line>will post separately regarding that.</Line>
          <Line />
          <Line>&gt;&gt; NOTE: Since many operating systems don't compute the menu bounds</Line>
          <Line>&gt;&gt; until the menu is about to be shown, the bounds are zero when the</Line>
          <Line>&gt;&gt; menu is not displayed. Also, this the coordinate systems are</Line>
          <Line>&gt;&gt; consistent but might not be the same when the code is finally</Line>
          <Line>&gt;&gt; released (sometime in the year 3000).</Line>
          <Line />
          <Line>&gt;&gt; It should be easy enough to do the same thing that Tom is doing</Line>
          <Line>&gt;&gt; (ie. copy the code to a platform specific utility class) and call</Line>
          <Line>&gt;&gt; it. Maybe Tom could provide his utility class as a patch in this</Line>
          <Line>&gt;&gt; bug report?</Line>
          <Line />
          <Line>Philippe Ombredanne 2005-05-11 16:31 [reply] -------</Line>
          <Line>&gt; Steve, since Menu.getBounds() and MenuItem.getBounds() are</Line>
          <Line>&gt; /*public*/, I can work around that with reflection, as long I am not</Line>
          <Line>&gt; under the control of a restrictive security manager. A bit awkward,</Line>
          <Line>&gt; but the hack will do the trick for me, together with some platform</Line>
          <Line>&gt; specific conditions for macs or platforms where it returns odd or</Line>
          <Line>&gt; (0,0,0,0) values</Line>
          <Line />
          <Line>&gt;&gt; NOTE: Since many operating systems don't compute the menu bounds</Line>
          <Line>&gt;&gt; until the menu is about to be shown, the bounds are zero when the</Line>
          <Line>&gt;&gt; menu is not displayed.</Line>
          <Line />
          <Line>&gt; In my case that would not be a problem. I really only need to</Line>
          <Line>&gt; compute the menu bounds just right after they have been displayed,</Line>
          <Line>&gt; not before.</Line>
          <Line />
          <Line>&gt;&gt; It should be easy enough to do the same thing that Tom is doing</Line>
          <Line>&gt;&gt; (ie. copy the code to a platform specific utility class) and call</Line>
          <Line>&gt;&gt; it.</Line>
          <Line />
          <Line>&gt; Does not this require a patched SWT and therefore a modified core</Line>
          <Line>&gt; eclispe?</Line>
          <Line />
          <Line>No longer.</Line>
          <Line />
          <Line>&gt; Tom your patch would be welcomed or is it already in abbot?</Line>
          <Line />
          <Line>It is: the patches are in</Line>
          <Line />
          <Line>abbot.swt.SWTWorkarounds</Line>
          <Line>http://cvs.sourceforge.net/viewcvs.py/*checkout*/abbot/abbot.swt/src/abbot/swt/SWTWorkarounds.java?rev=HEAD</Line>
          <Line />
          <Line>but they are transparent to the user: just use your Matcher's,</Line>
          <Line>Finder's, and Tester's and they will call the correct code for</Line>
          <Line>location.</Line>
          <Line />
          <Line>&gt; If so, I will do a diff again between SWT and your latest patched</Line>
          <Line>&gt; SWT, last I made is a few months old.</Line>
          <Line />
          <Line>Quit patching !-) See</Line>
          <Line />
          <Line>http://sourceforge.net/mailarchive/message.php?msg_id=11730297</Line>
          <Line>Steve Northover  2005-05-11 16:15</Line>
          <Line>&gt;&gt; If you are looking for the code that does Menu.getBounds() and</Line>
          <Line>&gt;&gt; MenuItem.getBounds(), it is also released as /*public*/ but doesn't</Line>
          <Line>&gt;&gt; work on the Mac.</Line>
          <Line />
          <Line>Tom Roche  2005-05-12 13:46</Line>
          <Line>&gt; The code in org.eclipse.swt.widgets.MenuItem.getBounds() in 3.1-M6</Line>
          <Line>&gt; also works incorrectly on win32 when used to exercise a workbench:</Line>
          <Line>&gt; will post separately regarding that.</Line>
          <Line />
          <Line>When exercising a workbench, the code in 3.1-M6/</Line>
          <Line>org.eclipse.swt.widgets.MenuItem.getBounds(), massaged slightly to run</Line>
          <Line>from our different package, clicks below the menubar, activating the</Line>
          <Line>toolbar button immediately below the targeted menu item. I suspect it</Line>
          <Line>returns a y value that is too large. This behavior was originally</Line>
          <Line>reported by other members of the abbot-users list.</Line>
          <Line />
          <Line>How to reproduce (in a 3.1-M6 workbench, untested with other versions,</Line>
          <Line>on win32, untested with other WSs):</Line>
          <Line />
          <Line>0 Create a clean devspace folder, and start a workbench pointing to it.</Line>
          <Line />
          <Line>1 Checkout/install/build the abbot, abbot.swt, and abbot.swt.eclipse</Line>
          <Line>modules from SourceForge CVS as described in</Line>
          <Line />
          <Line>http://cvs.sourceforge.net/viewcvs.py/*checkout*/abbot/abbot.swt/doc/swt/building.html#sourceAbbot</Line>
          <Line />
          <Line>Note that the abbot.swt.* modules are both eclipse plugins "out of</Line>
          <Line>the box," and so build "normally" in eclipse (e.g. with C-b), but</Line>
          <Line>that the abbot module is not--it's IDE-agnostic and requires an ant</Line>
          <Line>build (target=eclipse.setup) to attain plugin-hood in your workspace.</Line>
          <Line>(Hence turning off autobuild is advised before you start checkout.)</Line>
          <Line />
          <Line>2 Create a JUnit Plugin Test with test class=</Line>
          <Line>abbot.swt.eclipse.tests.MenuItemGetBoundsTest running in a blank</Line>
          <Line>runspace (check Clear workspace data before launching) using the</Line>
          <Line>workbench's JRE (Runtime JRE=eclipse). Run it:</Line>
          <Line />
          <Line>A Java project will be created (headlessly), then 2 tests will run</Line>
          <Line>(it's {pretty fast, hard to see} but you can see the mouse move):</Line>
          <Line>the first clicks Run&gt;ExternalTools&gt;ExternalTools to launch that</Line>
          <Line>wizard, and the second clicks File&gt;New&gt;Other to launch the New</Line>
          <Line>wizard. (The JUnit view will green bar, but will report 4/4 due to</Line>
          <Line>inheritance.) Remove the terminated session in the Console view</Line>
          <Line>(call me anal, but pde.junit has some bugs/quirks that I try to</Line>
          <Line>accomodate ... or I may just be superstitious).</Line>
          <Line />
          <Line>3 Open abbot.swt.SWTWorkarounds in an editor and browse to getBounds</Line>
          <Line>(MenuItem menuItem). Note that it currently contains</Line>
          <Line />
          <Line />
          <Line />
          <Line>The first section is minimally adapted from 3.1-M6/</Line>
          <Line>org.eclipse.swt.widgets.MenuItem.getBounds(), the latter is from</Line>
          <Line>Abbot's patches. Note that the latter section is what you just ran</Line>
          <Line>successfully. Comment out that latter section, and uncomment the</Line>
          <Line>first section, to produce</Line>
          <Line />
          <Line />
          <Line />
          <Line>Save and build.</Line>
          <Line />
          <Line>4 Rerun abbot.swt.eclipse.tests.MenuItemGetBoundsTest (e.g. with</Line>
          <Line>C-F11). Note that, instead of clicking the menu, the mouse clicks</Line>
          <Line>the Search button on the toolbar, and the Search wizard launches</Line>
          <Line>instead of External Tools. (Note that the button and mouse are</Line>
          <Line>positioned just below the Run item in the menu bar, hence my</Line>
          <Line>hypothesis.) This hoses that and subsequent tests with</Line>
          <Line />
          <Line />
          <Line />
          <Line>in the Console.</Line>
          <Line />
          <Line>5 If desired, whack the session, undo the changes to SWTWorkarounds,</Line>
          <Line>save, C-b, C-F11: the tests again run successfully to completion by</Line>
          <Line>correctly clicking the menu items.</Line>
          <Line />
          <Line>All: please let me know if you are able to reproduce or not,</Line>
          <Line>especially if the directions are unclear.</Line>
          <Line />
          <Line>The part that is unclear is whether you know what the bug is already and have</Line>
          <Line>a fix.  If this is the case, can you please post the patch?  Thanks.</Line>
          <Line>Created attachment 21077</Line>
          <Line>adaption of code that fixes bad menu-picking as demonstrated in https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c102</Line>
          <Line />
          <Line>See</Line>
          <Line />
          <Line>https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c102</Line>
          <Line />
          <Line>https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c104</Line>
          <Line>Steve Northover  2005-05-12 18:34</Line>
          <Line>&gt; The part that is unclear is whether you know what the bug is already</Line>
          <Line />
          <Line>Umm ... it seems pretty clear that the bug is in the code adapted from</Line>
          <Line>3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds(), since the test</Line>
          <Line>fails when using that code, no?</Line>
          <Line />
          <Line>&gt; and have a fix. If this is the case, can you please post the patch?</Line>
          <Line />
          <Line>https://bugs.eclipse.org/bugs/attachment.cgi?id=21077</Line>
          <Line />
          <Line>but note that I can't verify the patched code directly ... because I</Line>
          <Line>hafta workaround the non-public-ness of MenuItem.getBounds().</Line>
          <Line />
          <Line>Tom, the more you help me, the more I can help you.  A single sentence</Line>
          <Line>like "The problem is that the coordinates are wrong because ... or mirroring</Line>
          <Line>is not taken into account ..." would be most appreciated (unless you really</Line>
          <Line>have no idea what is wrong, in which case saying so helps too, but you have a</Line>
          <Line>patch so that implies you do know what's going on).  It's just easier not to</Line>
          <Line>have to guess from the code but I can do that if you want.  It'll just take</Line>
          <Line>longer.</Line>
          <Line />
          <Line>Also, a small stand alone test case that uses the API is really helpful rather</Line>
          <Line>than downloading and installing Abbot.  If you don't have the code, then</Line>
          <Line>that's fine too.</Line>
          <Line />
          <Line>Billy, can you verify that the patch doesn't compile?</Line>
          <Line>Tom Roche  2005-05-12 18:07</Line>
          <Line>&gt;&gt;&gt; When exercising a workbench, the code in 3.1-M6/</Line>
          <Line>&gt;&gt;&gt; org.eclipse.swt.widgets.MenuItem.getBounds(), massaged slightly to</Line>
          <Line>&gt;&gt;&gt; run from our different package, clicks below the menubar,</Line>
          <Line>&gt;&gt;&gt; activating the toolbar button immediately below the targeted menu</Line>
          <Line>&gt;&gt;&gt; item. I suspect it returns a y value that is too large.</Line>
          <Line />
          <Line>steve_northover@ca.ibm.com  2005-05-13 08:50</Line>
          <Line>&gt;&gt; A single sentence like "The problem is that the coordinates are</Line>
          <Line>&gt;&gt; wrong because ... or mirroring is not taken into account ..." would</Line>
          <Line>&gt;&gt; be most appreciated</Line>
          <Line />
          <Line>Steve: what part of "returns a y value that is too large" is unclear?</Line>
          <Line />
          <Line>&gt;&gt; (unless you really have no idea what is wrong, in which case saying</Line>
          <Line>&gt;&gt; so helps too, but you have a patch so that implies you do know</Line>
          <Line>&gt;&gt; what's going on).</Line>
          <Line />
          <Line>(The more helpful you claim to be, the more your language betrays you.)</Line>
          <Line>Not only have I an "idea what is wrong," I have given you a test case</Line>
          <Line>that clearly displays it! I even walk you through reproduction of the</Line>
          <Line>test case's behavior:</Line>
          <Line />
          <Line>&gt;&gt;&gt; 2 Create a JUnit Plugin Test with test class=</Line>
          <Line>&gt;&gt;&gt;   abbot.swt.eclipse.tests.MenuItemGetBoundsTest[....] 2 tests will</Line>
          <Line>&gt;&gt;&gt;   run (it's {pretty fast, hard to see} but you can see the mouse</Line>
          <Line>&gt;&gt;&gt;   move): the first clicks Run&gt;ExternalTools&gt;ExternalTools to</Line>
          <Line>&gt;&gt;&gt;   launch that wizard, and the second clicks File&gt;New&gt;Other to</Line>
          <Line>&gt;&gt;&gt;   launch the New wizard.</Line>
          <Line />
          <Line>&lt;snip&gt;</Line>
          <Line />
          <Line>&gt;&gt;&gt; 3 Open abbot.swt.SWTWorkarounds in an editor and browse to</Line>
          <Line>&gt;&gt;&gt; getBounds (MenuItem menuItem)[....] Comment out that latter</Line>
          <Line>&gt;&gt;&gt; section, and uncomment the first section</Line>
          <Line />
          <Line>&lt;snip&gt;</Line>
          <Line />
          <Line>&gt;&gt;&gt; 4 Rerun abbot.swt.eclipse.tests.MenuItemGetBoundsTest (e.g. with</Line>
          <Line>&gt;&gt;&gt;   C-F11). Note that, instead of clicking the menu, the mouse clicks</Line>
          <Line>&gt;&gt;&gt;   the Search button on the toolbar, and the Search wizard launches</Line>
          <Line>&gt;&gt;&gt;   instead of External Tools.</Line>
          <Line />
          <Line>&gt;&gt; It's just easier not to have to guess from the code but I can do</Line>
          <Line>&gt;&gt; that if you want. It'll just take longer.</Line>
          <Line />
          <Line>You know I don't want that, Steve: that's why I show you how to actually</Line>
          <Line>reproduce the problem. Why "guess from the code" when you can *observe*</Line>
          <Line>the behavior?</Line>
          <Line />
          <Line>&gt;&gt; Also, a small stand alone test case that uses the API is really</Line>
          <Line>&gt;&gt; helpful rather than downloading and installing Abbot.</Line>
          <Line />
          <Line>Keep in mind here that the code in question (MenuItem.getBounds()) is</Line>
          <Line>required for automation. In order to empirically assess the</Line>
          <Line>correctness of the code, you're gonna hafta have some automation</Line>
          <Line>framework. I note</Line>
          <Line />
          <Line>http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-home/test_plan.html</Line>
          <Line>&gt; 1. Ensure all public API is exercised through a JUnit test</Line>
          <Line />
          <Line>&gt; - we have an automated tool to do this but we have not made it</Line>
          <Line>&gt;   publicly accessible yet</Line>
          <Line />
          <Line>but it seems to have been that way for a while :-) Unfortunately</Line>
          <Line>automation seems to require a fair amount of infrastructure.</Line>
          <Line>Fortunately, in this case the infrastructure amounts to all of 3</Line>
          <Line>plugins. Is that so onerous? (Perhaps your non-public automation tool</Line>
          <Line>is more svelte? We'd love to see it !-) You can get/install it, and</Line>
          <Line>reproduce the problem, in all of 15 minutes (on LAN). If you'd like, I</Line>
          <Line>can build binary plugin zips for abbot and abbot.swt for you:</Line>
          <Line>unfortunately pde.junit currently can't run tests outside the</Line>
          <Line>workbench, so you'd still hafta get that as source.</Line>
          <Line />
          <Line>Note that I'm putting my automation framework out there for you and</Line>
          <Line>everyone to use, and to reproduce this problem, because ya gotta test,</Line>
          <Line>Steve, not just eyeball the code. We even expose our tests as JUnit</Line>
          <Line>testcases that are easily run via Eclipse's builtin tooling! (Never</Line>
          <Line>let it be said that I don't try to help you help me :-)</Line>
          <Line />
          <Line>So until you put *your* automation tool out there for folks to use, I</Line>
          <Line>don't see a feasible alternative to the following for testing this</Line>
          <Line>bug:</Line>
          <Line />
          <Line>0 Reproduce the problem as detailed in</Line>
          <Line />
          <Line>https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c102</Line>
          <Line />
          <Line>1 Twiddle the code in abbot.swt.SWTWorkarounds.getBounds(MenuItem) as</Line>
          <Line>desired, then test using abbot.swt.eclipse.tests.MenuItemGetBoundsTest</Line>
          <Line />
          <Line>2 Repeat step 1 until you get the code the way you want it, and it</Line>
          <Line>passes the test. For extra credit, run</Line>
          <Line>abbot.swt.examples.CelsiusConverterFindingTest and</Line>
          <Line>abbot.swt.examples.CelsiusConverterTest as JUnit tests (i.e.</Line>
          <Line>Run&gt;Run&gt;JUnit, not Run&gt;Run&gt;JUnit Plugin Test)--they also pass with</Line>
          <Line>the HEAD of abbot.swt.SWTWorkarounds.getBounds(MenuItem).</Line>
          <Line />
          <Line>3 Copy/mod your code from abbot.swt.SWTWorkarounds.getBounds(MenuItem)</Line>
          <Line>back into org.eclipse.swt.widgets.MenuItem.getBounds(). (Then, make</Line>
          <Line>it public !-)</Line>
          <Line>&gt; Keep in mind here that the code in question (MenuItem.getBounds()) is</Line>
          <Line>&gt; required for automation. In order to empirically assess the</Line>
          <Line>&gt; correctness of the code, you're gonna hafta have some automation</Line>
          <Line>&gt; framework. I note</Line>
          <Line>&gt; http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-</Line>
          <Line>home/test_plan.html</Line>
          <Line>&gt; &gt; 1. Ensure all public API is exercised through a JUnit test</Line>
          <Line>&gt; &gt; - we have an automated tool to do this but we have not made it</Line>
          <Line>&gt; &gt;   publicly accessible yet</Line>
          <Line>&gt; but it seems to have been that way for a while :-) Unfortunately</Line>
          <Line>&gt; automation seems to require a fair amount of infrastructure.</Line>
          <Line>&gt; Fortunately, in this case the infrastructure amounts to all of 3</Line>
          <Line>&gt; plugins.</Line>
          <Line />
          <Line>You won't know if a snippet will reproduce the problem until you've actually</Line>
          <Line>tried it. I don't see why querying menu location would require some sort of</Line>
          <Line>complex setup or series of events to reproduce the problem. Just create a</Line>
          <Line>Shell, slap a menubar on it, call the package protected API, and place a</Line>
          <Line>tracker over that rectangle highlighting the bogus bounds. Not only is this</Line>
          <Line>easier for Steve, but it removes the however small chance that Abbot is doing</Line>
          <Line>something wrong.</Line>
          <Line>Please Tom, just stop.  I'm not trying to imply anything or do anything other</Line>
          <Line>that find out what is wrong and fix it.</Line>
          <Line>Randy: if you can, please contribute a snippet that launches a</Line>
          <Line>workbench and tests MenuItem.getBounds() against it. If you can't,</Line>
          <Line>please *try* to reproduce the bug as described, and ask where the</Line>
          <Line>descriptions are unclear. I suspect you'll find that installing the</Line>
          <Line>code and running the tests is not so nearly so onerous as you suspect</Line>
          <Line>(and probably a helluva lot less onerous than writing the snippet :-)</Line>
          <Line />
          <Line>Randy Hudson  2005-05-13 11:34</Line>
          <Line>&gt; You won't know if a snippet will reproduce the problem until you've</Line>
          <Line>&gt; actually tried it.</Line>
          <Line />
          <Line>True, but I suspect you're overlooking 2 problems:</Line>
          <Line />
          <Line>0 Testcases show the problem occurring with SUT=workbench, not SUT=a</Line>
          <Line>standalone app (more below)</Line>
          <Line />
          <Line>1 I don't know how to do a snippet that would</Line>
          <Line />
          <Line>(adapted for what actually needs done)</Line>
          <Line>&gt; Just [launch a workbench, find one of its MenuItem's], and place a</Line>
          <Line>&gt; tracker over that rectangle highlighting the bogus bounds.</Line>
          <Line />
          <Line>First, please note:</Line>
          <Line />
          <Line>Tom Roche  2005-05-12 18:07</Line>
          <Line>&gt;&gt;&gt; When exercising a workbench,</Line>
          <Line />
          <Line>That's the important part: exercising a workbench.</Line>
          <Line />
          <Line>&gt;&gt;&gt; the code in 3.1-M6/ org.eclipse.swt.widgets.MenuItem.getBounds(),</Line>
          <Line>&gt;&gt;&gt; massaged slightly to run from our different package, clicks below</Line>
          <Line>&gt;&gt;&gt; the menubar, activating the toolbar button immediately below the</Line>
          <Line>&gt;&gt;&gt; targeted menu item. I suspect it returns a y value that is too</Line>
          <Line>&gt;&gt;&gt; large.</Line>
          <Line />
          <Line>Second, note that Abbot also works against standalone SWT: in fact we</Line>
          <Line>have an example standalone SWT app and publically-available tests that</Line>
          <Line>run against it:</Line>
          <Line />
          <Line>&gt;&gt;   For extra credit, run</Line>
          <Line>&gt;&gt;   abbot.swt.examples.CelsiusConverterFindingTest and</Line>
          <Line>&gt;&gt;   abbot.swt.examples.CelsiusConverterTest as JUnit tests (i.e.</Line>
          <Line>&gt;&gt;   Run&gt;Run&gt;JUnit, not Run&gt;Run&gt;JUnit Plugin Test)--they also pass</Line>
          <Line>&gt;&gt;   with the HEAD of abbot.swt.SWTWorkarounds.getBounds(MenuItem).</Line>
          <Line />
          <Line>Third, I know, from running those Celsius*Test's, that both code</Line>
          <Line>sections in abbot.swt.SWTWorkarounds.getBounds(MenuItem)</Line>
          <Line />
          <Line>&gt;&gt;&gt;   The first section is minimally adapted from 3.1-M6/</Line>
          <Line>&gt;&gt;&gt;   org.eclipse.swt.widgets.MenuItem.getBounds(), the latter is from</Line>
          <Line>&gt;&gt;&gt;   Abbot's patches. Note that the latter section is what you just</Line>
          <Line>&gt;&gt;&gt;   ran successfully. Comment out that latter section, and uncomment</Line>
          <Line>&gt;&gt;&gt;   the first section</Line>
          <Line />
          <Line>work in the standalone case. The difference is the workbench case as</Line>
          <Line>described in</Line>
          <Line />
          <Line>https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c102</Line>
          <Line />
          <Line>In that case, our code STILL works, but the code derived from</Line>
          <Line>org.eclipse.swt.widgets.MenuItem.getBounds() fails.</Line>
          <Line />
          <Line>Finally, please note that the *only* reason why abbot.swt resorts to</Line>
          <Line>adapting org.eclipse.swt.widgets.MenuItem.getBounds() is because Steve</Line>
          <Line>has made it non-public. Were it public, we could call it directly,</Line>
          <Line>without resorting to abbot.swt.SWTWorkarounds.</Line>
          <Line />
          <Line>So if you can do a snippet that launches a workbench, finds one of its</Line>
          <Line>mainmenu items and highlights the bounds, please do, because you are</Line>
          <Line>certainly correct that</Line>
          <Line />
          <Line>&gt; it [would remove] the however small chance that Abbot is doing</Line>
          <Line>&gt; something wrong.</Line>
          <Line />
          <Line>I am certainly not claiming that Abbot or abbot.swt is without fault:</Line>
          <Line>we're trying to get an RC1 out and our users are making very clear</Line>
          <Line>where our faults and function gaps are :-) What I am doing is making</Line>
          <Line>an SWT automation framework publically available (IIRC the *only*</Line>
          <Line>publically available SWT automation framework, which is why so many</Line>
          <Line>folks want this fixed), making testcases publically available,</Line>
          <Line>publically demonstrating how to reproduce a problem--and even</Line>
          <Line>publically demonstrating code that FIXES the problem! (Feel free to</Line>
          <Line>demonstrate where *that* is at fault. Til then, honi soit qui mal y</Line>
          <Line>pense.)</Line>
          <Line />
          <Line>SN, here's the snippet:</Line>
          <Line />
          <Line />
          <Line />
          <Line />
          <Line>BTW, if setAccelerator is not called, an exception gets thrown.</Line>
          <Line>The problem is that MenuItem.getBounds() returns the coordinates in terms of</Line>
          <Line>the parent, which is a Menu.  Menus are like Shells and use the coordinate</Line>
          <Line>system of the display, rather than their parent.  So some coordinate math is</Line>
          <Line>necessary which is a bit bad but the best I can do right now.</Line>
          <Line />
          <Line>There was also a bug in MenuItem.getBounds() where the wrong width was</Line>
          <Line>returned on Windows.  That bug has been fixed and released.</Line>
          <Line />
          <Line>Here is a better snippet:</Line>
          <Line />
          <Line />
          <Line />
          <Line />
          <Line />
          <Line />
          <Line />
          <Line />
          <Line>I have run MenuItemGetBoundsTest.  As SN described, the problem seems to be</Line>
          <Line>that Menu.getBounds() is returning its result in display coordinates and the</Line>
          <Line>code in WidgetLocator is translating these display relative coordinates using</Line>
          <Line>item.getParent().getParent().toDisplay(bounds.x,bounds.y); and this is not</Line>
          <Line>neccessary.  The following works for me on Windows:</Line>
          <Line />
          <Line>In SWTWorkaround:</Line>
          <Line />
          <Line />
          <Line />
          <Line />
          <Line>In WidgetLocator.getBounds(Widget, boolean):</Line>
          <Line />
          <Line />
          <Line>Veronika Irvine 05/16/2005 04:58:02 PM:</Line>
          <Line>&gt;&gt; I have reproduced the problem and seen that the code from M6 and</Line>
          <Line>&gt;&gt; from 38436#c112 both fail whereas "code adapted from o.e.swt.</Line>
          <Line>&gt;&gt; patched.MenuItem.getBounds()" works. Will investigate with Steve.</Line>
          <Line />
          <Line>Veronika Irvine  2005-05-16 17:55</Line>
          <Line>&gt; I have run MenuItemGetBoundsTest. As SN described, the problem seems</Line>
          <Line>&gt; to be that Menu.getBounds() is returning its result in display</Line>
          <Line>&gt; coordinates and the code in WidgetLocator is translating these</Line>
          <Line>&gt; display relative coordinates using</Line>
          <Line>&gt; item.getParent().getParent().toDisplay(bounds.x,bounds.y); and this</Line>
          <Line>&gt; is not neccessary.</Line>
          <Line />
          <Line>Doh! I still don't understand why the translation only failed in-</Line>
          <Line>workbench and not standalone, but the tests now pass, which is what</Line>
          <Line>counts. Thanks so much!</Line>
          <Line>For future consideration, I think the problem would be simplified if Menu</Line>
          <Line>supported toControl() and toDisplay().  That way you would not have to do the</Line>
          <Line>following math:</Line>
          <Line />
          <Line />
          <Line />
          <Line />
          <Line>Instead, you would just get the bounds of the MenuItem (itemRect in the code</Line>
          <Line>above) and call menuItem.getParent().toDisplay(itemRect.x, itemRect.y).</Line>
          <Line>Yes, but more importantly, Display.map() needs to take more than just</Line>
          <Line>controls.  Display.map() is the API that maps whole rectangles from RTL and</Line>
          <Line>LTR coordinate systems which is the right way to do coordinate transformations</Line>
          <Line>in a mirrored world.</Line>
          <Line>org.eclipse.swt.custom.CTabFolder class do not expose any methods to get the</Line>
          <Line>Rectangle bounds of :</Line>
          <Line>1) Chevron &gt;&gt;&gt; button</Line>
          <Line>2) Minimize/Maximize button</Line>
          <Line>3) Close button</Line>
          <Line />
          <Line>In Eclipse 3.0 milestones releases, methods exists to get those bounds but they</Line>
          <Line>were removed. The implications for GUI Test Automation tool(IBM Rational</Line>
          <Line>Functional Tester) is that they CANNOT click on the chevron, min/max or close</Line>
          <Line>buttons and so cannot test complex cases where more views are stacked at a</Line>
          <Line>CTabFolder.</Line>
          <Line>Created attachment 23906</Line>
          <Line>abbot.swt.SWTWorkarounds shelters users from Widget.getBounds()-related problems: cases where either Whatever.getBounds() is unavailable, not public, or has unwelcome behavior.</Line>
          <Line />
          <Line>Most up-to-date code, as well as code for users of abbot.swt.SWTWorkarounds</Line>
          <Line>(currently</Line>
          <Line />
          <Line>abbot.tester.swt.WidgetLocator</Line>
          <Line>abbot.tester.swt.MenuItemTester</Line>
          <Line>abbot.tester.swt.ScrollBarTester</Line>
          <Line>abbot.tester.swt.TableTester</Line>
          <Line>abbot.tester.swt.TreeItemTester</Line>
          <Line />
          <Line>) is available (with null password) from</Line>
          <Line />
          <Line>cvs -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/abbot co abbot.swt</Line>
          <Line>Tao Weng 05/26/2005 11:43 AM</Line>
          <Line>&gt;&gt;&gt; Currently, Abbot.swt solution is not platform independent due to</Line>
          <Line>&gt;&gt;&gt; bugzilla defect number 38436.</Line>
          <Line />
          <Line>&lt;snip&gt;</Line>
          <Line />
          <Line>&gt;&gt;&gt; 1) Is the defect going to be fixed within the next 6 months or so?</Line>
          <Line>&gt;&gt;&gt; If not, when is it going to be available. Just roughly....</Line>
          <Line />
          <Line>&gt;&gt;&gt; 2) Is it possible to release a patched version of swt for linux</Line>
          <Line>&gt;&gt;&gt; environment in the next 6 months. Just like what we did for windows?</Line>
          <Line />
          <Line>Steve Northover 05/26/2005 12:19:43 PM:</Line>
          <Line>&gt;&gt; Yes. Either the bug will be fixed or I will work with Tom to ensure</Line>
          <Line>&gt;&gt; that Abbot is patched to support Linux.</Line>
          <Line />
          <Line>Tom Roche 05/26/2005 10:15 PM</Line>
          <Line>&gt; Thanks!</Line>
          <Line />
          <Line>&gt;&gt; Tom, if you contribute the [SWTWorkarounds] class from Abbot to</Line>
          <Line>&gt;&gt; the bug report, we will look at providing implementations for the</Line>
          <Line>&gt;&gt; other plaforms.</Line>
          <Line />
          <Line>&gt; Will do soonest, just verifying a (candidate) fix for 3.0 first.</Line>
          <Line />
          <Line>Unfortunately soonest was much less soon than I had hoped :-( but I</Line>
          <Line>have refactored such that (IIUC) all abbot.swt's SWT workarounds are</Line>
          <Line>in abbot.swt.SWTWorkarounds, which is now attached. Apologies for the</Line>
          <Line>delay, your assistance is appreciated.</Line>
          <Line />
          <Line>I am working on a version of SWTWorkarounds that can be used for 3.1.  Hold</Line>
          <Line>the phone.</Line>
          <Line />
          <Line>Thomas, the implementation of swt2Awt() can't work anywhere else but Windows.</Line>
          <Line>The format of the KeyTable is platforms specific.  Is this method critical to</Line>
          <Line>Abbot? (seems like it might be).  Can you please recode this method either as</Line>
          <Line>a horrible huge case statement or a hash table and post the code here?  Thanks!</Line>
          <Line>We have the code ready but need an implementation of swt2Awt() before we can</Line>
          <Line>proceed.</Line>
          <Line>Comment #120 From Steve Northover  2005-07-11 11:53</Line>
          <Line>&gt; I am working on a version of SWTWorkarounds that can be used for</Line>
          <Line>&gt; 3.1.</Line>
          <Line />
          <Line>Great! Thanks for your cooperation!</Line>
          <Line />
          <Line>&gt; Thomas, the implementation of swt2Awt() can't work anywhere else</Line>
          <Line>&gt; but Windows. The format of the KeyTable is platforms specific.</Line>
          <Line />
          <Line>Steve, SWTWorkarounds.keyTable exists to enable</Line>
          <Line>SWTWorkarounds.swt2Awt(int swtKeyValue), and both are in</Line>
          <Line>SWTWorkarounds because ... they're more &lt;bleep&gt;ing workarounds for</Line>
          <Line>SWT. As the latter's javadoc states:</Line>
          <Line />
          <Line />
          <Line>So ... could you please just make Display.untranslateKey(int) public?</Line>
          <Line>instead of requiring Yet Another Workaround</Line>
          <Line />
          <Line>&gt; Can you please recode this method either as a horrible huge case</Line>
          <Line>&gt; statement or a hash table</Line>
          <Line />
          <Line>from your users?</Line>
          <Line />
          <Line>Tom, I'm going to appeal one last time to please skip the editorial comments</Line>
          <Line>like "bleep" or "Yet Another WorkAround".  They are offsensive, cloud the</Line>
          <Line>issue, waste time and make me wonder why on earth I would want to help someone</Line>
          <Line>who continually insults me and the work I do.</Line>
          <Line />
          <Line>Please read the rest of this comment and respond only to the technical issues.</Line>
          <Line />
          <Line>&gt;Thomas, the implementation of swt2Awt() can't work anywhere else but</Line>
          <Line>&gt;Windows.  The format of the KeyTable is platforms specific.</Line>
          <Line />
          <Line>The package variable KeyTable maps SWT key constants to platform specific key</Line>
          <Line>constants.  On Windows, keys like SWT.HOME are mapped to the Windows constant</Line>
          <Line>VK_HOME.  On GTK, SWT.HOME is mapped to GDK_HOME.  It does not map SWT key</Line>
          <Line>constants to AWT key constants and therefore cannot be made to do this.  In</Line>
          <Line>addition, it does not make sense for SWT to provide a mechanism to map SWT</Line>
          <Line>constants to AWT constants.  For one, AWT doesn't exist on all the platforms</Line>
          <Line>where SWT runs.  So, if Abbot needs to make AWT constants to SWT constants for</Line>
          <Line>some reason, Abbot will need code to do this.  Since I have no idea what this</Line>
          <Line>mapping is used for and cannot know from the source code in SWTWorkarounds,</Line>
          <Line>you are the most logical person to write the code and contribute it.</Line>
          <Line />
          <Line>Other than the mapping table, we are ready to go.</Line>
          <Line />
          <Line>Comment #123 From Steve Northover 2005-07-12 13:20</Line>
          <Line>&gt; Tom, I'm going to appeal one last time to please skip the editorial</Line>
          <Line>&gt; comments like "bleep" or "Yet Another WorkAround".</Line>
          <Line />
          <Line>Steve, lighten up, then</Line>
          <Line />
          <Line>&gt; respond only to the technical issues.</Line>
          <Line />
          <Line>e.g.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="1">
        <Lines>
          <Line>1-on-1 first.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>1) Chevron &gt;&gt;&gt; button</Line>
          <Line>2) Minimize/Maximize button</Line>
          <Line>3) Close button</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- TableColumn.getBounds()</Line>
          <Line>- TabItem.getBounds()</Line>
          <Line>- MenuItem.getBounds()</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- getting API so that SWT can implement Menubaritem.getBounds(), or</Line>
          <Line>- driving the Mac UI from another process?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>While SWT is superior to AWT in many ways, SWT currently falls short of its 
counterpart in the realm of automated whitebox GUI testing.  We are currently 
working on extending Abbot, a Java GUI testing framework originally intended 
for AWT, for use with SWT to allow for whitebox testing of SWT GUIs.  To 
accomplish this, we need the capability to programmatically manipulate SWT 
Widgets in a manner that mimics the user.  To this end, we need to be able to 
locate ANY Widget in display-coordinates. 

Currently, only Controls have a getLocation() method that provides this 
functionality (by calling parent.toDisplay(control.getLocation()).   Other 
specific subclasses of Widget have a getBounds() method- Caret, CoolItem, 
Decorations, TableItem, ToolItem, and TreeItem- that allow us to find instances 
of these classes in display coordinates.  And Menu has a public handle that 
allows for a platform-specific means of locating the Menu in display 
coordinates.  This leaves MenuItem, TabItem,  TableColumn, and Tracker, at 
least right now, unfindable.

The problem, then, lies in both the non-uniformity of these strategies to 
obtain something as simple as display coordinates and the lack thereof for 
Widgets of type MenuItem, TabItem, TableColumn, and Tracker.  We would like to 
request the addition of method(s) that, given an instance of a Widget, would 
return an org.eclipse.swt.graphics.Rectangle representing the bounding box for 
the Widget in Display coordinates.

And a final note.  Methods like getLocation, getBounds, and set/getFocus are 
only available to particular sub-classes of Widget, but these methods are 
applicable to ALL (or nearly all) Widget subclasses.  It would be worthwhile, 
then, to include these methods in the abstract class Widget and handle special 
cases by overriding these methods in Widget sub-classes.  I am aware that these 
operations- particularly set/getFocus- may not be applicable to particular 
Widget sub-types.  In these cases, however, it would be logical to execute the 
parent's appropriate method instead.  For example, we would give focus to the 
Widget's parent, or return the bounding box for the parent, if it were not 
possible to do so for a particular Widget sub-type itself.
Check the map API in Display:
public Rectangle map (Control from, Control to, Rectangle rectangle) 

You should call this API to map the coordinates from a Control to the Display, 
you should also give a rectangle (getBounds) and not a point (getLocation) to 
do this kind of operation. It's important if you are running on a Mirrored 
coordinates system (arabic/hebrew).

Still, this does not solve all your problems...

SN to advise.

Could you please provide getBounds() for all Widget's? Why I ask:

In order for an SWT automation tool to programmatically interact with
a target, it must be able to

0 use information provided by the coder to identify the target

1 get the size or position of the target

2 generate native events using those coordinates

Fortunately

* task 0 is done by navigating the graphical hierarchy

* task 1 is easy if your target is a Control

* there are at least two ways to do task 2 (using abbot.swt.Robot, in

http://sourceforge.net/projects/abbot

  or Sebastian Peleato's API)

The problem is that not all targets are Control's, especially if one
wishes to automate menu picking/navigation. We have workarounds, but
they are platform-specific (which complicates tool building and
deployment), underperformant (which degrades the user's experience),
and just plain kludgey.

Can you please provide getBounds(), or as similar API as possible, for
all Widget's, not just Control's? In 3.0?

As a member of the WSAD performance team, I strongly support Tom / Kevin's 
request.  Today we are using XDE Tester, which only supports a "black box" 
approach.  It requires training and finessing to keep the scripts running; the 
support for Eclipse 3.0 is pending.  I believe that Abbot / Costello for SWT 
would be a better fit for our needs and those who hope to systematically track 
performance regressions.

Background: Gary Karasiuk, Sonia Dimitrov, and myself recently finished some 
work to integrate our performance plug-in, ptracker, into the Eclipse build.  
The goal is to supplement the JUnit launcher used today with one that captures 
key performance metrics with each build.  This will allow the Eclipse team to 
find performance regressions the day after they occur (not weeks!), saving 
countless hours of post-build detective work.

Abbot / Costello is a natural extension of this effort.  Today our performance 
testcases are limited to what can be executed in JUnit.  These testcases, 
while very good at detecting regressions in functionality, only approximate 
the true user experience.  If the underlying support for Abbot is completed, 
myself and others on our team will provide high-level **real** user scenarios 
to the Eclipse build team to fill out the incomplete performance regression 
capability.  This obviously won't occur if we are reliant exclusively on XDE 
Tester as we are today.

SWT's use of native widget makes 80% of Abbot's job easy.  However, the last 
20% that is missing makes its usage klunky, awkward, slow, and unreliable.  We 
would really like to see SWT supported as a first-class citizen among 
automated testing tools, and Abbot / Costello seems to be the obvious choice.
We have attempted various workarounds to this problem (the lack of getBounds() 
for non-Control widgets)- for example, making an SWT API call to setSelection
(boolean) in a testcase instead of actually generating a mouse-click input 
event.  This, however, is unacceptable, as it makes for testcases that do not 
accurately reflect a realistic user scenario.  We've also tried making 
approximations of a widget's size and location based on its text/image content, 
but this incomplete approach is not a final solution either.

The lack of getBounds() for MenuItems is particularly debilitating.  Currently, 
the only way to automate MenuItem selection is to do so via accelerators and 
keystrokes.  However as Tom mentioned above, this method cannot consistently 
work across platforms and applications and is flimsy at best.

I'm beginning work on a patch for MenuItem.getBounds(), starting with win32.  
It appears that wrapping the native win32 method GetMenuItemRect(HWND, HMENU, 
UINT, LPRECT) should (essentially) provide the functionality we need.  And 
hopefully a similar approach will work with the other supported windowing 
systems.

The patch should allow Abbot to deal with MenuItems in much the same way as it 
does Controls, and the added consistency in implementation will result in a 
more reliable and capable testing tool.  In particular, testcases will be able 
to include menu navigation via mouse clicks.  This method is certainly more 
representative of real user interaction than what Abbot's current capabilities 
allow.   

HOWEVER, there will still be important non-Control widgets that lack a getBounds
() method- TableItem, TreeItem, CoolItem, ToolItem, and Scrollbar- basically 
any widget that a user can click that does not already provide a getBounds() 
method.  
Disregard the last paragraph of my most previous post- it doesn't reflect the 
most recent SWT API.  The amended list of widgets that lack a getBounds() 
method should be- MenuItem, TableColumn, Tab, and ToolItem.  I'll be working on 
a patch for all of these in the coming week.
Created attachment 10629
Initial patch for various getBounds() methods

On Windows, I've implemented the following:

	- TableColumn.getBounds()
	- TabItem.getBounds()
	- MenuItem.getBounds()

The first two have no restrictions; MenuItem.getBounds(), however, currently
only works for items in bar menus, as I am only able to obtain the size of a
given MenuItem in a cascade or popup menu but not its location.  In particular,
GetMenuItemRect doesn't appear to work as advertised in the win32
documentation, and I'm not sure where to go from here.	Any help with this
particular problem would be greatly appreciated.

The attached zip file contains fixes bound by "//TODO: Begin patch" and
"//TODO: End patch".  Changes were made in org.eclipse.swt.internal.win32.OS
and org.eclipse.swt.widgets.{MenuItem,TableColumn,TabItem}.  I will also be
passing along an Abbot-driven JUnit test case that demonstrates the new
functionality to Dan Kehn.
Created attachment 10676
MenuItem.getBounds() fix

Includes everything in the previous patch(10629), plus a new-and-improved
MenuItem.getBounds() for win32 with no restrictions.  It now works on items in
bar, cascading, and popup style menus.
*** Bug 39184 has been marked as a duplicate of this bug. ***
Can provided Widget-location patches be rolled into SWT 3.0?
(Not M9, but 3.0 final.) Why I ask:

Automation is important. SWT's failure to provide the ability to
locate (and therefore drive) all Widget's presents a competitive
disadvantage, given that AWT/Swing allows one to find all its
Component's.

If SWT (the organization) fails to provide this, automators will need
to patch SWT (the code), minimally for menuing. An automation tool has
gotta have menuing: there's just too much tooling that's inaccessible
without it. (E.g. a friend in another IBM group wants to start testing
a GEF-based component, but can't because the component allows a user
to interact with its figures only through context menus.) We will
eventually need the other non-Control Widget's, but we need menuing
now.

So I'm wondering, how can we get this into 3.0? Note that

* academic summer being upon us, my group has some more resources
  available, so we can assist with this task.

* I'm frankly skeptical regarding the claim made in

https://bugs.eclipse.org/bugs/show_bug.cgi?id=39184

  that this can't

&gt; happen for 3.0 because we are API frozen (unless mountains are moved
&gt; with the PMC).

  for 2 reasons:

· This is new API. Since no one's currently using it, how can it
  break anyone? Feel free to deprecate the API, "label as hazardous,"
  whatever, to protect the innocent.

· Is there now, or has there ever been, any positive argument for
  not implementing getBounds() for {MenuItem, TableItem, TreeItem,
  CoolItem, ToolItem}? I.e. "we should not implement getBounds() for
  these classes, because &lt;your positive argument here/&gt;"? I suspect
  not, but I could be wrong.

Note also that we will cheerfully kiss rings, move mountains, etc with
the PMC as required--but I frankly don't see that as a valid objection
to enabling this API, which folks need ... given that an (admittedly
partial) implementation is being handed to SWT. So ... how best to get
this into 3.0 final?


*** Bug 48341 has been marked as a duplicate of this bug. ***
Created attachment 11493
SWT patch for MenuItem.getBounds() that returns an empty rectangle for invisible items
Created attachment 11498
Test case showing getBounds() for visible and nonvisible menu items
The patch I just posted (SWT patch for MenuItem.getBounds() that returns an
empty rectangle for invisible items) is the same as the earlier patch that Kevin
wrote, except for an update to MenuItem.getBounds() that causes it to return an
empty rectangle instead of garbage in the case when the menu item is not
visible.  This is done by checking the return value of GetMenuItemRect, which
indicates whether menu item bounds were able to be calculated.

getBounds() returns coordinates that are relative to the client area of the
Decorations that is the parent of the Menu that the MenuItem belongs to.  This
means that getBounds() can return a rectangle that has negative coordinates. 
This is seen on Windows: the y-coordinate returned will be negative for menu
items on the menu bar since these items lie above the client area.  This does
not pose a problem, however, since these relative coordinates can easily be
turned into screen coordinates through Control.toDisplay().  Therefore in all
cases that we have tested this patch returns correct bounds in a manner that is
consistent with getBounds() on other widgets that implement getBounds().

I have also posted a test case that dynamically displays the result of getBounds
for several MenuItems.  In running the test it is possible to see how the
bounding rectangle changes from empty to nonempty as menu items are revealed and
hidden.

I have been thinking more about MenuItem.getBounds() and I'm coming to the 
conclusion that we shouldn't implement it (instead we should add a new API 
that returns widget bounds in Display coordinates).  The problem is that on 
the Macintosh, the menu bar is not in the shell.  We can fake this but it 
won't match the operating system and will have the amazing property that the 
coordinates will be wrong when the shell is moved.  This will happen because 
when the shell is moved but on the Macintosh, the menu bar stays in the same 
location instead of moving with the shell like the other platforms.  I'm stuck 
on an API name that means "get the bounds in the display coordinate system".  
At any rate, the API would be exactly what you need, no coordinate mapping.
Re: Comment #14

Under the Monty Python category, "And now for something completely 
different..."

I believe you're correct Steve.  Thinking about it a bit further, two viable 
approaches come to mind: (a) a new method "getBoundsRoot" (borrowed from 
similar name in VA/ST, where "root" means screen) as you suggest, or (b) an 
adapter.  The advantage of (b) is that it gets SWT out of the loop entirely, 
since any framework could provide a set of adapters to the APIs we desire.  
One method in Widget does it all:

  public Object getAdapter(Class adapter) {
    return Platform.getAdapterManager().
      getAdapter(this, adapter);  // note Platform reference... see PS below
  }

Now that core implements the extension 
point "org.eclipse.core.runtime.adapters" (it's new and yes, I've tested this 
in other code and it works as advertised), this is a cost-free alternative 
from a performance perspective (i.e., before there was no means of registering 
an adapter except through code, forcing your plug-in's activation).  Then 
Abbot for SWT can handle this little problem on its own in a nice, clean, 
architected way.  If you want to move it later into the SWT layer, great, but 
there's certainly no urgent need.

Since this extension point is relatively new, I'll provide an example of what 
it would look like in the Abbot4SWT implementation:

  &lt;extension point="org.eclipse.core.runtime.adapters"&gt;
    &lt;factory 
        adaptableType="org.eclipse.swt.widgets.Widget"
        class="org.abbot4swt.WidgetAdapterFactory"&gt;
      &lt;adapter type="org.abbot4swt.WidgetCoordinateMapper"/&gt;
    &lt;/factory&gt;
  &lt;/extension&gt;

The Abbot for SWT folks provide WidgetCoordinateMapper and 
WidgetAdapterFactory.  If there are exception cases (e.g., MenuItem), they 
either (a) handle it in their WidgetCoordinateMapper with instanceof, or (b) 
provide a widget-specific adapter (e.g., MenuItemCoordinateMapper).

It also opens the door to future adaptation should we discover "SWT 
shortcomings" later.  So how about it, one little method?  Tempted?  :-)  

PS: Of course, one gotcha of this approach is the reference to Platform... 
which presupposes the Eclipse platform runtime is present.  That would mean 
either reflection (returning null if not found) or a fragment.  Not perfect, 
but extensible and gets SWT out of the discussion, now and in the future.
Steve Northover  2004-06-03 09:43 -------
&gt; I have been thinking more about MenuItem.getBounds() and I'm coming
&gt; to the conclusion that we shouldn't implement it (instead we should
&gt; add a new API that returns widget bounds in Display coordinates).

That would be great! I continue to believe that API should be
available to 

* get the bounds of any Widget, just as one can get the bounds of any
  JComponent. 

* return consistent co-ordinates for any Widget

It's the inconsistency of the present situation

Thomas L Roche/Raleigh/IBM@IBMUS 05/28/2004 08:38 PM
&gt;&gt; Widget child  has getBounds()?
&gt;&gt; ------------  ----------------
&gt;&gt; Caret         yes,
&gt;&gt;               parent == null ? relative to display : relative to parent

&gt;&gt; Control       yes,
&gt;&gt;               parent == null ? relative to display : relative to parent

&gt;&gt; DragSource    no, but has getControl()

&gt;&gt; DropTarget    no, but has getControl()

&gt;&gt; Item          no

&gt;&gt; Menu          no, we workaround with getParent().getBounds()

&gt;&gt; ScrollBar     yes, no javadoc but looks relative to its parent

&gt;&gt; Tracker       no, but has computeBounds()

&gt;&gt; Tray          no

that most annoys.

&gt; The problem is that on the Macintosh, the menu bar is not in the
&gt; shell. We can fake this but it won't match the operating system and
&gt; will have the amazing property that the coordinates will be wrong
&gt; when the shell is moved. This will happen because when the shell is
&gt; moved but on the Macintosh, the menu bar stays in the same location
&gt; instead of moving with the shell like the other platforms.

I believe we can live with this. We have never asked for completeness
on all platforms (much less API contracts engraved on tablets)--we
understand that some platforms will do things differently. However it
is difficult to imagine a platform that did not know the bounds of a
thing it was drawing, hence providing bounds-getting API (by whatever
name) on Widget makes sense.

Dan Kehn 2004-06-03 11:28 -------
&gt; Thinking about it a bit further, two viable approaches come to mind:
&gt; (a) a new method "getBoundsRoot" (borrowed from similar name in
&gt; VA/ST, where "root" means screen) as you suggest, or (b) an adapter.

or (c) both.

&gt; The advantage of (b) is that it gets SWT out of the loop entirely,
&gt; since any framework could provide a set of adapters to the APIs we
&gt; desire.

True, but this is a case where the existing SWT API is noticeably
fragmented. (c) is best, but (a) is preferable to (b).

&gt; PS: Of course, one gotcha of this approach is the reference to
&gt; Platform... which presupposes the Eclipse platform runtime is
&gt; present.

Which is gonna hose testing standalone (non-platform-resident) SWT
UIs, no? (b) alone is likely to be insufficient.

Along the same line of implementing getBounds() in various widgets, there are
other widgets that implement getBounds() in ways that are less than ideal for
automated testing.  One of these is TableItem.getBounds(int).  This returns a
bounding box for the entire item, which for purposes of consistency is probably
what should happen.  However, selecting an item by clicking on it can only be
done by clicking on the table item's text or image.  There is no way to get the
bounds of the area that can be clicked (presumably the union of the image and
text bounds).  Are there issues that would make providing this in the API
(something like TableItem.getClickableBounds(int)) undesirable?  The only
workaround that I can foresee for testing is to check the style of the column
the text is in and give a default location to click on based on whether it is
left, right, or center.

Some platforms allow you to click anywhere on the same line.  In general, it's 
unspecified where you click and with which button.
Steve N., Is there a chance to make progress on this for test tool enablement 
in 3.0.1?  Could you set the target milestone for 3.0.1 or 3.1 as appropriate?

I will mark it when I we have finished assessing the rest of the items.
Steven Wasleski  2004-07-20 14:32 -------
&gt; Could you set the target milestone for 3.0.1 or 3.1 as appropriate?

Extra points for 3.0.1! Patching is a drag :-(

This item is still under investigation and will not be added to 3.0.1.
Steven Wasleski  2004-07-20 14:32 -------
&gt;&gt; Could you set the target milestone for 3.0.1 or 3.1 as appropriate?

Veronika Irvine 2004-08-25 12:16 -------
&gt; This item is still under investigation and will not be added to
&gt; 3.0.1.

Could you set the target milestone?

I committed a description of our current patches to the abbot.swt documentation

http://cvs.sourceforge.net/viewcvs.py/*checkout*/abbot/abbot.swt/doc/swt/patchingSWT.txt?rev=1.7

Same content is available in slightly different form from

http://sourceforge.net/mailarchive/message.php?msg_id=9665074

Thanks.  I was actually working on the menu part of this last week but could 
find no way for the Mac to give back the coordinates of items in the menu 
bar.  It seems that owner draw isn't honoured for Mac menu bars.  I tried 
reaching and getting the MenuBarHandle and looking at the "lastRight" 
and "menuLeft" fields of the substructures.  The documentation says that they 
aren't when SetRootMenu() is used but I was desparate.  I tried every 
kEventMenu that there was including the amazing kEventMenuGetFrameBounds but 
this is only called when the user has clicked on a menu bar item.

How do automated testing applications move the mouse into the Mac menu bar and 
hittest the items there?  I googled for CGPostMouseEvent() hoping to find 
example code that did this.  Even MenuSelect(), the Mac call that runs the 
menu bar for the user takes a mouse location.

Andre?
If it turns out to be impossible to get the actual bounds for a component, you may have to rely on 
programmatically activating the component given a proper specification of the final target.  This 
unfortunately leaves out actual display operation of the UI component, which sometimes needs to be 
tested, but probably the more common case is needing to be able to activate a given menu item.

Mac OSX uses AWT components as proxies for the equivalent Swing menu bits when the 
useScreenMenuBar property is set (which it should be for any OSX java app).  The AWT menu items 
provide no location information (actually rendering the location information of the original Swing 
components invalid), so they have to be driven programmatically.

Unfortunately, I don't know enough about native Mac OS programming to indicate whether the location 
info is available or not...
Hi Tom, I checked out your patches.  It seems to me that none of them need to 
be in SWT classes.  For example, consider the hypothetical method 
SWT_PATCH.TabItem_getBounds():

public Rectangle TabItem_getBounds(TabFolder parent){
   int index = parent.indexOf(this);
   if (index == -1) return new Rectangle (0, 0, 0, 0);
   RECT rect = new RECT();
   OS.SendMessage( parent.handle,
           OS.HDM_FIRST + 7 /*OS.TCM_GETITEMRECT*/,
           index,
           rect);
   int width = rect.right - rect.left;
   int height = rect.bottom - rect.top;
   return new Rectangle(rect.left,rect.top,width,height); 
}

The advantage of this is that you don't need to patch SWT with your changes 
and the work needed to port them to other platforms is isolated in one class.  
The disadvantage is that it is ugly as hell.

Hopefully we can implement what you need and the issue becomes moot.
Comments From steve_northover@ca.ibm.com  2004-11-23 10:52 -------
&gt; It seems to me that [none of the abbot.swt patches] need to be in
&gt; SWT classes. For example, consider the hypothetical method
&gt; SWT_PATCH.TabItem_getBounds():

&gt; public Rectangle TabItem_getBounds(TabFolder parent){
&gt;    int index = parent.indexOf(this);
&gt;    if (index == -1) return new Rectangle (0, 0, 0, 0);
&gt;    RECT rect = new RECT();
&gt;    OS.SendMessage( parent.handle,
&gt;            OS.HDM_FIRST + 7 /*OS.TCM_GETITEMRECT*/,
&gt;            index,
&gt;            rect);
&gt;    int width = rect.right - rect.left;
&gt;    int height = rect.bottom - rect.top;
&gt;    return new Rectangle(rect.left,rect.top,width,height); 
&gt; }

&gt; The advantage of this is that you don't need to patch SWT with your
&gt; changes

which would be nice, but ...

&gt; and the work needed to port them to other platforms is isolated in
&gt; one class.

... that keeps the platform port effort isolated onto the shoulders of
our zero-FTE-headcount OSS project. Would it not be so much more
securely borne by you SWT professionals ?-) After all, the Sun folks
don't make us support AWT/Swing API ...

Plus, it's s/one class/one class per patched widget/, and rewriting the
*Finder and *Tester classes that use them, but those are minor concerns
relative to maintaining the proper (IMHO, YMMV) separation of concerns/
effort.

&gt; Hopefully we can implement what you need and the issue becomes moot.

That's what _I'm_ hoping :-)

Given that you are forced into patching, why not patch in the most optimal 
way?  Put all the work arounds in a single (ugly) class that is outside of the 
library rather than adding them as methods to the classes where they belong.  
That way, no one changes anything and odds are good that your code will 
continue to work when the next release of the library ships.  There are more 
good reasons for this.  Suppose that when the methods are added, they return 
something different or use a different coordinate system.  You can isolate 
those changes in the ugly class.  Also, suppose that when the bug is fixed or 
the feature implemented, someone applies your patches over the fix by 
mistake.  That seems wrong.  You should be testing the fixed code, not the 
patch.  Imagine that the bug never gets fixed.  You are no worse off and 
nobody needs to patch anything.

This just seems like good software engineering to me.
Additional Comment #27 From Steve Northover  2004-11-23 10:52 -------
&gt;&gt;&gt; consider the hypothetical method SWT_PATCH.TabItem_getBounds():

&gt;&gt;&gt; public Rectangle TabItem_getBounds(TabFolder parent){
&gt;&gt;&gt;    int index = parent.indexOf(this);
&gt;&gt;&gt;    if (index == -1) return new Rectangle (0, 0, 0, 0);
&gt;&gt;&gt;    RECT rect = new RECT();
&gt;&gt;&gt;    OS.SendMessage( parent.handle,
&gt;&gt;&gt;            OS.HDM_FIRST + 7 /*OS.TCM_GETITEMRECT*/,
&gt;&gt;&gt;            index,
&gt;&gt;&gt;            rect);
&gt;&gt;&gt;    int width = rect.right - rect.left;
&gt;&gt;&gt;    int height = rect.bottom - rect.top;
&gt;&gt;&gt;    return new Rectangle(rect.left,rect.top,width,height); 
&gt;&gt;&gt; }

&gt;&gt;&gt; The advantage of this is that you don't need to patch SWT with
&gt;&gt;&gt; your changes

Additional Comment #28 From Tom Roche  2004-11-23 12:28 -------
&gt;&gt; which would be nice, but ...

&gt; and the work needed to port them to other platforms is isolated in
&gt; one class.

&gt;&gt; ... that keeps the platform port effort isolated onto the shoulders
&gt;&gt; of our zero-FTE-headcount OSS project. Would it not be so much more
&gt;&gt; securely borne by you SWT professionals ?-) After all, the Sun
&gt;&gt; folks don't make us support AWT/Swing API ...

Comments From steve_northover@ca.ibm.com  2004-11-23 12:58 (rearranged)
&gt; Given that you are forced into patching, why not patch in the most
&gt; optimal way?

Your rhetorical question is correct (not so sure about this sentence,
though :-). But I keep wondering {why I am, how long I will continue
to be} forced into patching this.

&gt; Put all the work arounds in a single (ugly) class that is outside of
&gt; the library rather than adding them as methods to the classes where
&gt; they belong. 

OK, in order to patch this way, what's the best locus for that class?
IIUC the patches are minimally platform-dependent, and maximally
SWT-version dependent. Remember, I'm trying to isolate abbot.swt (and
abbot.swt.gef, etc) users from "raw" SWT--how best to isolate
abbot.swt.* from these dependencies? A separate plugin?

&gt; That way, no one changes anything and odds are good that your code
&gt; will continue to work when the next release of the library ships.
&gt; There are more good reasons for this. Suppose that when the methods
&gt; are added, they return something different or use a different
&gt; coordinate system. You can isolate those changes in the ugly class.

Yes, I understand the goodness of Adapter and Decorator ...

&gt; Also, suppose that when the bug is fixed or the feature implemented,
&gt; someone applies your patches over the fix by mistake. That seems
&gt; wrong.

Oh, it will be--once you fix SWT, I'm gonna pull the patches off
SourceForge so fast the servers will spin :-)

&gt; This just seems like good software engineering to me.

... and work for me. FWIW I'd much rather be working on enabling users
to write (and hopefully TDD) SWT tests, and getting more coverage for
my own tests, than adapting SWT to work with j.a.Robot as AWT does
already. That being said, if it'll save me from patching again, I'll
do it. Note that my assumption was that, having patched once, the
concept would be proven, and I wouldn't hafta patch again ...

Ok, I give up.  I was trying to help you in case we don't get to this for 3.1. 
There is an art to ugly things.  If you can't see it, then you never will.
Created attachment 16239
swt_patch3.zip for eclipse 3.1.M3

This is an EXACT port of the changes made to swt-3.0.1 in swt-3.1.M3.

Having this, or a similar fix, in the eclipse 3.1 line would be VERY
helpful. Thank you to everyone who has already done all the work on
this issue.

If you download this patch, please, post a note showing your interest
in the fix.
I'm still stuck on the Mac.  If there is no possible way to get the bounds of 
a menu item in a Mac menu bar, then MenuItem.getBounds() can never be SWT API.

Andre?  Where are you?
&lt;&lt; If there is no possible way to get the bounds of a menu item in a Mac menu 
bar, then MenuItem.getBounds() can never be SWT API. &gt;&gt;

It's not unprecedented that GUI whitebox testers have platform-specific 
limitations. So although it's not ideal, you could throw 
UnsupportedOperationException. 
The thinking is as follows:  There are automated GUI testing tools on the 
Mac.  I can't believe that they don't test menus in the menu bar.  What do 
they do?  Whatever they do, we should do the same thing rather than offering 
API that can't be implemented.  I'm hoping that there's something I'm missing 
and that we will be able to make MenuItem.getBounds() work on a Mac.
A quick search on developer.apple.com shows that the MacOS has native calls to determine the bounds 
of a menu item.

The comments I made previously about the bounds being unavailable applies only to the AWT menus 
providing no API to determine their location (this applies to *all* platforms).  When OSX uses AWT 
menus as proxies for Swing menus, the Swing items' bounds information becomes invalid.
Timothy, can you post the URL to the Mac native calls?
Sorry Steve, I forgot about this PR after some unsuccessful investigation.
I'll spend a "Support Incident" with ADC if nothing useful shows up until tomorrow.
I couldn't find any API to calculate the bounds of a menu item directly, but I think it should be possibIe 
to use the menu definition function for this.
I haven't tried this, but you could send a "kMenuCalcItemMsg" to the menuProc where you pass in the 
menuItem. The parameter menuRect will contain the item bounds on return.

Another (ugly) approach could be probing:
you could generate screen coordinates that run from the left to the right screen bound and an 
increment of about 10 with a vertical position of menuBar.height/2 and map these coordinates to menu 
items with available API.
I already had a go at probing (yetch) and failed.  It seems that the only time 
you can ask this information is when a drop down menu is pulled down.  Then, 
inside the "cascade callback", you can get the bounds of the item that was 
selected.  This (of course), is too late.  I have workspace full of unreleased 
hack that I am sitting on that I can make available for you to try,

Do you know how the menu definition function differs from carbon events?  I 
saw kMenuCalcItemMsg but thought that because we didn't use a custom menu 
definition that it didn't apply.  Also I had no clue how to send a fake menu 
definition function event like kMenuCalcItemMsg.  Also it seemed that this 
event applied to MenuRefs, not MenuBarHandles (or the various things inside 
them that represent the menu bar).

Please spend a support incident with ADC on this as it is holding up the API.
OK, will do.
(Shouldn't we create a new bug report for this? Whenever we add a new comment, most likely we are 
spamming a lot of people probably not too interested in the Mac...)
I don't think so.  If people are uninterested in the progress on this bug 
report, they can remove themselves.
The trick is to use the Accessibility API.

After some hacking I came up with the following piece of code
which does what you are looking for (I passed in the SWT menubar handle):

void dumpMenubarItemBounds(MenuRef menu) {
	AXUIElementRef ref= AXUIElementCreateWithHIObjectAndIdentifier((HIObjectRef)menu, (UInt64)0);
	if (ref != NULL) {
		int i= 0;
		CFArrayRef children;
		fprintf(stderr, "menubar item bounds:\n");
		AXUIElementCopyAttributeValue(ref, kAXChildrenAttribute, (CFTypeRef*) &amp;children);
		
		CFIndex count= CFArrayGetCount(children);
		for (i= 0; i &lt; count; i++) {
			CFTypeRef valueRef;
			CGPoint position;
			CGSize size;
			CFStringRef title;
 			
			AXUIElementRef menuItem= (AXUIElementRef) CFArrayGetValueAtIndex(children, i);

			AXUIElementCopyAttributeValue(menuItem, kAXTitleAttribute, (CFTypeRef*) &amp;title);
			const char *t= CFStringGetCStringPtr(title, kCFStringEncodingMacRoman);
		
			AXUIElementCopyAttributeValue(menuItem, kAXPositionAttribute, &amp;valueRef);
			AXValueGetValue(valueRef, kAXValueCGPointType, &amp;position);
 
			AXUIElementCopyAttributeValue(menuItem, kAXSizeAttribute, &amp;valueRef);
			AXValueGetValue(valueRef, kAXValueCGSizeType, &amp;size);
            	            	
			fprintf(stderr, "  %d %s: x:%d y:%d w:%d h:%d\n", i, t, 
				(int)position.x, (int)position.y, (int)size.width, (int)size.height);
            	
			CFRelease(valueRef);
			CFRelease(title);
		}
	 	CFRelease(children);
		CFRelease(ref);
	}
}

Thanks!
Andre, I added the following code in Menu.java (plus the natives to OS):

public Rectangle[] getItemBounds () {
	if ((style &amp; SWT.BAR) != 0) return null;	
	int menuRef = handle;
	int ref = OS.AXUIElementCreateWithHIObjectAndIdentifier (menuRef, (long)0);
	if (ref != 0) {
		int [] children = new int [1];
		System.out.println("XAERROR: " + OS.AXUIElementCopyAttributeValue (ref, 
OS.kAXChildrenAttribute (), children));
		int count = OS.CFArrayGetCount (children [0]);
		Rectangle [] result = new Rectangle [count];
		int [] valueRef = new int [1];
        CGPoint position = new CGPoint ();
        CGSize size = new CGSize ();
		for (int i = 0; i &lt; count; i++) {
			int menuItem = OS.CFArrayGetValueAtIndex (children [0], i);
            OS.AXUIElementCopyAttributeValue (menuItem, OS.kAXPositionAttribute(), valueRef);
            OS.AXValueGetValue (valueRef [0], OS.kAXValueCGPointType, position);
            OS.CFRelease (valueRef [0]);
            OS.AXUIElementCopyAttributeValue (menuItem, OS.kAXSizeAttribute(), valueRef);
            OS.AXValueGetValue (valueRef [0], OS.kAXValueCGSizeType, size);
            OS.CFRelease (valueRef [0]);
            result [i] = new Rectangle ((int)position.x, (int)position.y, (int)size.width, (int)size.height);
		}
		return result;
	}
	return null;
}

But when I execute it I get an AXERROR equals to -25211 (kAXErrorAPIDisabled), do you know how to 
fix this ?
Interesting, for security reasons Apple disables the Accessibility API if the user hasen't enabled
the "Enable access for assistive devices"  option in System Preferences (I always have this option on to 
see focus borders everywhere).
You can turn it on via the "System Preferences &gt; Universal Access &gt; Enable access for assistive devices"

Sorry, I didn't know that and had to Google for it...
it looks like we can't use this API then :-(

Why? The API is for whitebox testing.
I don't see a problem to require that the option is turned on.

Some call it a "platform reality" :-)
Felipe Heidrich 2004-12-03 16:20 -------
&gt;&gt;&gt;&gt;&gt; Andre, I added [Menu.getItemBounds()] (plus the natives to OS):

&lt;snip&gt;

&gt;&gt;&gt;&gt;&gt; But when I execute it I get an AXERROR equals to -25211
&gt;&gt;&gt;&gt;&gt; (kAXErrorAPIDisabled), do you know how to fix this ?

Andre Weinand 2004-12-03 17:00 -------
&gt;&gt;&gt;&gt; Interesting, for security reasons Apple disables the
&gt;&gt;&gt;&gt; Accessibility API if the user hasen't enabled the "Enable access
&gt;&gt;&gt;&gt; for assistive devices" option in System Preferences (I always
&gt;&gt;&gt;&gt; have this option on to see focus borders everywhere). You can
&gt;&gt;&gt;&gt; turn it on via the "System Preferences &gt; Universal Access &gt;
&gt;&gt;&gt;&gt; Enable access for assistive devices"

&gt;&gt;&gt;&gt; Sorry, I didn't know that and had to Google for it...

Felipe Heidrich 2004-12-03 17:14 -------
&gt;&gt;&gt; it looks like we can't use this API then :-(

Andre Weinand 2004-12-03 17:27 -------
&gt;&gt; Why? The API is for whitebox testing.
&gt;&gt; I don't see a problem to require that the option is turned on.

Andre Weinand 2004-12-03 17:40 -------
&gt; Some call it a "platform reality" :-)

Agreed: it's realistic to assume the user will need to do other things
to "instrument," or enable testability for, any given platform @
runtime. As long as it compiles, and doesn't break other function, I
don't see a problem with, e.g., javadoc'ing or FAQ'ing similar
requirements--"call at your own risk." It Would Be Nice if s/he didn't
hafta, but that may be the price to pay for automation.

Display.setCursorLocation(point) does nothing on some platforms, so maybe this 
method could nothing, or return an empty rectangle when accessibility is 
disabled.
An empty rectangle isn't an option when the option is disabled.  How about 
trying Apple again for another approach?
Yes, I've contacted DTS and for security reasons there is no other approach.
The Mac has been around since 1984.  It is 2004 (almost 2005).  HIObject is 
new to OS 10.x.  In all those years nobody has written a GUI testing tool that 
pulls down a menu bar menu and selects an item?  Andre, can you please ask 
again how GUI testing tools perform this action?  The issue here is that 
having an API that fails and requires the user to change something on the 
control panel is not a good solution.

Thanks.
Steve, so what is the issue now?
- getting API so that SWT can implement Menubaritem.getBounds(), or
- driving the Mac UI from another process?

Whether GUI testing tools existed before MacOS X (1984-2001) doesn't really matter since they could 
easily patch the OS and wouldn't run anyway on MacOS X.

The first hope is that we could get API to implement MenuItem.getBounds() that 
doesn't require the user to set something in the control panel.  If that can't 
be done, then the next thing is to investigate how this kind of action is 
normally done on the Mac.  Assuming we found something, we would then consider 
portable SWT API that exposed this capability (we would need to ensure that it 
could be implemented on the other platforms).  It's not great, be we'd be 
portable and could move on.

Again, my first choice would be MenuItem.getBounds().  It's very frustrating 
because I have an implementation for everything but the menu bar.
Comment #55 From Steve Northover  2004-12-06 10:49 -------
&gt;&gt;&gt; In all those years nobody has written a GUI testing tool that pulls
&gt;&gt;&gt; down a menu bar menu and selects an item?

Comment #56 From Andre Weinand 2004-12-06 11:15 -------
&gt;&gt; Whether GUI testing tools existed before MacOS X (1984-2001) doesn't
&gt;&gt; really matter

True. How far back do we hafta support? Note

http://www.apple.com/applescript/uiscripting/
&gt; Mac OS X v10.3 includes support for the control of the computer's
&gt; graphic user interface via AppleScript.

&gt; Graphic user interface control is performed by an updated version of
&gt; the System Events application. By addressing the System Events
&gt; application, AppleScript scripts can select menu items, push
&gt; buttons, enter text into text fields, and generally control the
&gt; interfaces of most non-Classic applications.

&gt; The following pages detail the process of enabling and using the GUI
&gt; Scripting architecture.

... but, as Andre mentioned

http://www.apple.com/applescript/uiscripting/01.html
&gt; The GUI Scripting architecture is based upon the Mac OS X
&gt; accessibility frameworks that provide alternative methods of
&gt; querying and controlling the interfaces of the OS and applications.

&gt; By default, the accessibility frameworks are disabled. An
&gt; administrative user can enable them by clicking the checkbox labeled
&gt; "Enable access for assistive devices" in the Universal Access System
&gt; Preference pane and entering their password in the [subsequent]
&gt; authentication dialog.

&gt; Once the accessibility frameworks have been activated, AppleScript
&gt; can be used to query and control the user interface of most
&gt; applications. Scripted actions are performed by addressing the
&gt; System Events application which has a special script suite for
&gt; communicating with the GUI Scripting architecture.

Is there API to query or set the Universal Access System?

Comment #55 From Steve Northover  2004-12-06 10:49 -------
&gt;&gt;&gt; In all those years nobody has written a GUI testing tool that pulls
&gt;&gt;&gt; down a menu bar menu and selects an item?

Comment #56 From Andre Weinand 2004-12-06 11:15 -------
&gt;&gt; Whether GUI testing tools existed before MacOS X (1984-2001) doesn't
&gt;&gt; really matter

&gt;&gt; True. How far back do we hafta support? Note

The Mac menu bar is not new to 10.x.  Can anyone tell me what API pre-10.x GUI 
testing applications did?  Mac API is backwards compatible.
Re: comment #55:
I've sent your request to DTS.

Re: comment #59:
&gt; Is there API to query or set the Universal Access System?
Yes, and the example application
   http://developer.apple.com/samplecode/UIElementInspector/UIElementInspector.html
uses it to make the user enable the Universal Access option.

Re: comment #60:
&gt; Mac API is backwards compatible.
Yes, if you run your pre-Carbon apps in Classic mode (MacOS 9 running inside MacOS X).
Native MacOS X apps must only use Carbon which is a smaller subset of the original Mac Toolbox.
comment #59:
&gt;&gt; Is there API to query or set the Universal Access System?

comment #61
&gt; Yes, and the example application

&gt; http://developer.apple.com/samplecode/UIElementInspector/UIElementInspector.html

&gt; uses it to make the user enable the Universal Access option.

&lt;Do I need XCode to read
UIElementInspector/UIElementInspector.app/Contents/MacOS/UIElementInspector
?/&gt;

Hopefully "DTS" will come up with a cleaner solution, but {if not, for
the nonce} why not support Carbon (do we even support Classic or
Cocoa?) like

if (Universal Access not set) {
  if (user not administrative)
    throw SWTException // ERROR_USER_LACKS_PERMISSION
  set it
}
return bounds

?

Re comment #62:
You can find the source in the files ending in .h and .m
UIElementInspector/UIElementInspector.app/Contents/MacOS/UIElementInspector
is the executable. You don't want to read it :-)
One more thing to patch: could SWT make ScrollBar.getBounds() public?
I notice, thanks to

http://sourceforge.net/tracker/index.php?func=detail&amp;aid=1080952&amp;group_id=50939&amp;atid=461490

that if I do

export WS="win32"
export PLATFORM="x86"
export DEVSPACE="/d/eclipse/devspaces/scratch"
# outside of eclipse? (automate this) copy the patchfiles here
export PATCHESPATH="$DEVSPACE/patchfiles"
export INPUT="eclipse-SDK-3.1M3-$WS.zip"
export ZIPHOME="ftp://fullmoon.rtp.raleigh.ibm.com/S-3.1M3-200411050810/$INPUT"
export ZIPSPACE="/d/eclipse/zips"
export ZIPVER="3.1.0"
export PROJECTPATH="$DEVSPACE/org.eclipse.swt"
# !forget to backslash underscores between vars!
export
SOURCEZIP="eclipse/plugins/org.eclipse.platform.source.$WS.$WS.$PLATFORM\_$ZIPVER/src/org.eclipse.swt.$WS\_$ZIPVER/ws/$WS/swtsrc.zip"
export ZIPFILES="$SOURCEZIP \
  eclipse/plugins/org.eclipse.swt.$WS\_$ZIPVER/os/$WS/$PLATFORM/swt-*.dll \
  eclipse/plugins/org.eclipse.swt_$ZIPVER/plugin.properties \
  eclipse/plugins/org.eclipse.swt_$ZIPVER/META-INF/MANIFEST.MF \
  eclipse/plugins/org.eclipse.swt_$ZIPVER/plugin.xml \
  eclipse/plugins/org.eclipse.swt_$ZIPVER/about.html"
wget -O $ZIPSPACE/$INPUT $ZIPHOME
cd $DEVSPACE
mkdir -p $PROJECTPATH
# clean this up! e.g. should move to META-INF/MANIFEST.MF
unzip -j $ZIPSPACE/$INPUT $ZIPFILES -d $PROJECTPATH
mkdir -p $PROJECTPATH/src
unzip $PROJECTPATH/swtsrc.zip -d $PROJECTPATH/src
find $PROJECTPATH/src -type f -name '*.java' | \
xargs fgrep -ne 'Rectangle getBounds' | \
fgrep -e '{' | fgrep -v 'public'

I get only one line output:

&gt;
/d/eclipse/devspaces/scratch/org.eclipse.swt/src/org/eclipse/swt/widgets/ScrollBar.java:202:Rectangle
getBounds () {

Dunno why it should be singled out.

This work won't make it into M4.  We are waiting on Apple.
Still waiting on Apple.
Tom, how does the scrollbar bounds help you? There are still magic regions on a 
scrollbar which don't have API.

Have you tried using the client area API?  The sides with the larger amount of 
insets would contain a scrollbar probably.
Comment #67 From Randy Hudson  2005-01-10 17:35 -------
&gt;&gt; Tom, how does the scrollbar bounds help you? 

Umm ... in order to automate moving a scrollbar we need to know where
to tell java.awt.Robot to mouseDown. (I'm suspecting I don't fully
understand the question.)

&gt;&gt; There are still magic regions on a scrollbar which don't have API.

See future FRs :-) Note that I'm only interested in automating and
testing common behaviors: something very WS-specific might require
native automation.

&gt;&gt; Have you tried using the client area API? 

I'm not sure what you mean: could you show p/code?

&gt;&gt; The sides with the larger amount of insets would contain a
&gt;&gt; scrollbar probably.

In any case, while there may be a workaround in this specific case,
Widget.getBounds() is still greatly to be desired. Not only does it
greatly simplify simple automation code (I can let the runtime call
the appropriate method), but it facilitates higher-level abstractions,
which makes it easier for coders to write automated test cases for
their targets (which is what my effort is all about). E.g. Abbot has
ComponentLocation, which

ComponentLocation javadoc
&gt; Provides encapsulation of a visible Component-relative location.
&gt; Hides the location specifics so that ComponentTester primitives
&gt; (actionClick, actionShowPopup, etc) may be directed to specific
&gt; elements of substructure on a Component (list rows, tree paths,
&gt; table cells, substructure values, etc).

with subclasses JListLocation, JTreeLocation, JTableLocation,
JTabbedPaneLocation, etc. This relies at base on
Component.getBounds(). AFAICS I will need Widget.getBounds() to
provide WidgetLocation and subclasses, so that folks can more
easily/quickly write tests on JFace thingies. (So far we've been able
to automate WDE without WidgetLocation, but I dunno what diabolical
graphics those devious GEF folks might devise in future :-)

What I meant was that once you have the scrollbar's bounds, you still have no 
idea where the down up button are, the thumb, or the areas in between.  These 
areas might depend on the WS skin or certain preferences (e.g. Mac OS).

See Scrollable.computeTrim(int,int,int,int) for a possible workaround to 
obtaining the scrollbar's bounds.
Comment #65 From Steve Northover  2004-12-10 18:06 -------
&gt;&gt; This work won't make it into M4.  We are waiting on Apple.

Comment #66 From Steve Northover 2005-01-10 17:10 -------
&gt; Still waiting on Apple.

While we're waiting, could you make what functionality you have
available for use?

Abbot has win32 users and folks who are interested in using it with
GTK and winCE. We would much rather use your release-quality win32
getBounds()'s than our hacks, and would like to enable folks on
non-win32 platforms to make progress. In return, we would provide
real-world feedback on their use.

I won't release API that can't be implemented on all platforms.  I am working 
with Apple on another solution but they are slow.
I don't really understand the rationale here Steve N. M4 is a milestone build,  
and if some obscure feature like this one isn't available for all platforms I  
don't see the problem.   
  
If I remember correctly, the whole Browser widget didn't get released on all  
platforms at the same time either in 3.0 milestones. The Browser API changed a 
lot between Milestones as well; its not like it needs to be stabile at this 
point. And there are even APIs that doesn't work on all platforms in GA 
builds. Why is this obscure UI-testing-tool feature so different? If Apple 
responds in M5 or M6 thats great, but are you saying we can never support this 
(from SWT, I agree there are workarounds) if we cannot have it on OSX and 
Apple tells us how?  
 
I guess my question is why you are so afraid to put it in now? Milestones APIs 
have changed in the past.. Afraid it cannot ever be supported on all [major] 
platforms? That the API will radically change when you get info from Apple?  
 
Well, just my .0002$ 
 
I don't want to put out temporary API that I may need to retract later.
Any word from Apple?
Sigh.  Hopefully something at EclipseCon.
Hi Steve, any news on Apple's side? 
I talked to them and they made hopeful noises about new API but I was on 
vacation for the last 3 weeks.  I will follow up now.  However, M6 is the API 
freeze.  I'm actually pretty mad about this (madder than Tom Roche must be!).
Steve, aren't you Mr. SWT?
So I guess you could carry the clout with the PMC to bend the API freeze rules a
bit.

Alternatively, those changes could be made in time to make it to 3.1 M7, but not
made part of the API...
Like that you respect the API freeze, and the deal could be that the new
features/methods/visibility of methods -while public- would be unsupported in
the API, with a common agreement that the best effort will be made that make
them public &amp; official API in a 3.1.1 or something like that.

That would really make those ugly patches go away.

As a last resort, what about aspect enabling SWT -or something similar- to allow
for external hooks/mods without API changes?
I was quite impressed with Martin Lippert AJEER at EclipseCon.
I'm not mad about the API freeze but rather that we have been waiting on Apple 
for so long that the API freeze happened, causing this feature to probably not 
happen for 3.1, after I promised to do something about it for 3.1.  I'm still 
working on it.  API's can change after M6 but it's way harder to make it 
happen ... and that's a good thing at this stage in the game.
Sounds like getBounds() for Menu and MenuItem are in the pipeline.  I'd like to
request public implementations for ScrollBar, TabItem and TableColumn as well. 
For completeness, perhaps DragSource, DropTarget, TrayItem, Tracker, Tray should
probably be supported as well.
Comment #80 From Gary Johnston  2005-04-08 14:21
&gt; Sounds like getBounds() for Menu and MenuItem are in the pipeline.
&gt; I'd like to request public implementations for ScrollBar, TabItem
&gt; and TableColumn as well. For completeness, perhaps DragSource,
&gt; DropTarget, TrayItem, Tracker, Tray should probably be supported as
&gt; well.

"Probably"? For completeness they should definitely be supported.

For functionality, i.e. enabling folks to write their tests,
DragSource and DropTarget are higher priority. I know at least one
person who is trying to test drag'n'drop onto R*D's Page Data View.
We have too much functionality that is only provided by context
menuing or DnD, so we really need to be able to test both of those.

All Widgets (i.e., including non-Control Widgets) should also implement
toDisplay(Point) &amp; toDisplay(int, int).
I have 3.1-M6 (Eclipse Platform Version: 3.1.0 Build id:
I20050401-1645) and I'm seeing

org.eclipse.swt.widgets.TableItem
&gt; /*public*/ Rectangle getBounds () {

Can this be restored to public-ness? Alternatively, is there another
way to get the bounds of a TableItem that one has found without
knowing its row and column (e.g. by matching its getText() or some
setData()'ed key/value)?

Is there some reason that TableItem.getBounds(int) won't work for you?
Tao Weng 04/25/2005 10:39:05 AM:
&gt;&gt;&gt;&gt; I got my UML2 regression test script fully automated with
&gt;&gt;&gt;&gt; Abbot.swt. I have to say that Abbot.swt is a great product.

&lt;more shameless plug snipped :-&gt;

&gt;&gt;&gt;&gt; By the way, I have changed a little bit of Abbot.swt in order to
&gt;&gt;&gt;&gt; make my UML2 regression test script run. I do not know whether
&gt;&gt;&gt;&gt; those changes are valid or not, so I don't want to do any check
&gt;&gt;&gt;&gt; in. I would like to let you know.

&lt;big snip&gt;

&gt;&gt;&gt;&gt; 3) In abbot.tester.swt.WidgetLocator, I have to add the following 
&gt;&gt;&gt;&gt; piece of code in  "getBounds" function.

&gt;&gt;&gt;&gt; if(w instanceof TableItem){
&gt;&gt;&gt;&gt;    TableItem item = (TableItem)w;
&gt;&gt;&gt;&gt;    Rectangle bounds = item.getBounds();
&gt;&gt;&gt;&gt;    Point p = item.getParent().toDisplay(bounds.x,bounds.y);
&gt;&gt;&gt;&gt;    return new Rectangle(p.x,p.y,bounds.width,bounds.height);
&gt;&gt;&gt;&gt;  }

Tom Roche  2005-05-09 21:58
&gt;&gt;&gt; I have 3.1-M6 (Eclipse Platform Version: 3.1.0 Build id:
&gt;&gt;&gt; I20050401-1645) and I'm seeing

&gt;&gt;&gt; org.eclipse.swt.widgets.TableItem
&gt;&gt;&gt; &gt; /*public*/ Rectangle getBounds () {

&gt;&gt;&gt; Can this be restored to public-ness? Alternatively, is there
&gt;&gt;&gt; another way to get the bounds of a TableItem that one has found
&gt;&gt;&gt; without knowing its row and column (e.g. by matching its getText()
&gt;&gt;&gt; or some setData()'ed key/value)?

steve_northover@ca.ibm.com  2005-05-10 08:31
&gt;&gt; Is there some reason that TableItem.getBounds(int) won't work for
&gt;&gt; you?

As stated above, tests need to be able to get the bounds for a
TableItem of which the column index is unknown. Is there API to get
the column index for a TableItem? If not:

org.eclipse.swt.widgets.TableItem.getBounds(int)
&gt; /**
&gt;  * Returns a rectangle describing the receiver's size and location
&gt;  * relative to its parent at a column in the table.
&gt;  *
&gt;  * @param index the index that specifies the column
&gt;  * @return the receiver's bounding column rectangle

seems to require the user to know the TableItem's column index. Am I
missing something?
Use getBounds(0).
Steve Northover  2005-05-10 12:38
&gt; Use getBounds(0).

If TableItem.getBounds(0) == TableItem.getBounds(),
why not instead

public Rectangle getBounds () {
  return getBounds (0);
}

and refactor the current code

/*public*/ Rectangle getBounds () {
  checkWidget();
  if (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);
  int itemIndex = parent.indexOf (this);
  if (itemIndex == -1) return new Rectangle (0, 0, 0, 0);
  RECT rect = getBounds (itemIndex, 0, true, false);
  int width = rect.right - rect.left, height = rect.bottom - rect.top;
  return new Rectangle (rect.left, rect.top, width, height);
}

into some other private API? What purpose is served by
not providing the same signature for TableItem?

TableItem.getBounds() was intended to return the same thing as Tree.getBounds
() now that Tree's have columns.  To be exact, the bounds of the text not 
including the item but the code didn't get implemented on all platforms.  This 
would make Tree and Table API consistent (right now Table is missing the 
method).

Would you like me to delete it?  I can't make it public because we are API 
frozen.
steve_northover@ca.ibm.com  2005-05-10 13:55 -------
&gt; TableItem.getBounds() was intended to return the same thing as
&gt; Tree.getBounds () now that Tree's have columns. To be exact, the
&gt; bounds of the text not including the item but the code didn't get
&gt; implemented on all platforms. This would make Tree and Table API
&gt; consistent (right now Table is missing the method).

&gt; Would you like me to delete it? I can't make it public because we
&gt; are API frozen.

&lt;sigh/&gt; No, we'll just wait for a thaw. abbot.swt has plenty other
SWT workarounds right now, what's one more ...

I meant to say "To be exact, the bounds of the text not including the image".  
I'm not sure exactly how not having this API is holding you back.

I'm also really sorry for missing the 3.1 release for this bug report.
Steve Northover 2005-05-10 14:33 -------
&gt; I'm not sure exactly how not having this API is holding you back.

We continue to need Widget.getBounds(). Everything that holds that
back requires workarounds. We have done workarounds for this issue
(TableItem.getBounds()) and others on win32, but we don't have the
resources to workaround for Carbon, GTK, etc.

Lots of folks want programmatic automation, mostly for developer
testing. (Some for other purposes--Larry Bergman is doing really cool
extensions for demo/doc/pedagogy, maybe even TVT.) All we ask is for
SWT to provide a firm foundation for programmatic automation (as Swing
does).

&gt; I'm also really sorry for missing the 3.1 release for this bug
&gt; report.

Me too--I would love for Abbot 1.0 to have multiplatform support.

Todd Brackett: we're told that SWT's fix for this bug is just waiting
for Apple to enable MenuItem.getBounds() for Carbon. If correct, can
you give us an ETA?

You can get the information you need already for the TableItem on all 
platforms so I'm not sure what you are working around in this particular case.
Steve Northover  2005-05-10 14:33   -------
&gt;&gt;&gt; I'm not sure exactly how not having this API is holding you back.

Tom Roche  2005-05-10 15:55   -------
&gt;&gt; We continue to need Widget.getBounds(). 

I.e. getBounds() for each child of Widget.

&gt;&gt; Everything that holds that back requires workarounds.

Steve Northover 2005-05-10 16:11 -------
&gt; You can get the information you need already for the TableItem on
&gt; all platforms so I'm not sure what you are working around in this
&gt; particular case.

The non-public-ness of TableItem.getBounds(). As previously mentioned.
I'm not sure what isn't clear here.

We need getBounds() to find things. We have Component.getBounds(), we
need Widget.getBounds(). Forgive the repetition, but "Everything that
holds [Widget.getBounds()] back requires workarounds." (E.g. Abbot
works around AWT MenuComponent's, but fortunately JMenuItem has mostly
superceded that, and JMenuItem isa Component.)

What we can find, we can automate--knock wood, but it's been true so
far, threading be damned. Automation is good. Automation allows your
users to create more/better tests--which means we develop better UIs
faster--and automation allows your users to drive their code for
demos, TVT, etc. Code-centric automation is better: it enhances
developer-time testing and supports TDD. Multi-platform code-centric
automation is better yet.

Automation requires coordinate finding. Swing supports automation via
a single API, Component.getBounds(), the sufficiency of which is
evinced by the number of code-centric tools that build on that simple
foundation, the functionality those tools provide, the number of their
users, and the goodness of the UIs their users develop. That's good.
That's important.

If you can give SWT automation a similar foundation,
Eclipse+JUnit+Abbot can deliver similar goodness a lot more/faster.
Otherwise we hafta workaround you.

I do second Tom on that one.
&gt; "Everything that holds [Widget.getBounds()] back requires workarounds."
I am faced with the exact same issues for the plug-in I am working on.
Shall I continue to leave in the underworld of patched SWT?
And I am dying to use abbot for my tests.

Steve, in comment #79 you replied to me:
&gt; API's can change after M6 but it's way harder to make it 
&gt; happen ... and that's a good thing at this stage in the game.
I guess that this bugzilla has enough votes and followers to carry some weight
and do some thing about it.
You can make API change happen, you said it. 
I feel kind of let down here.

Now, over 42 unique individuals, including 23 positives votes, the rest as CC
are following this bug! I wish all bugs were so popular!

Just some of the folks and companies which are represented in the CC on this
bug, based on the voters and CCed emails:
(excluding all the IBM folks in the US, Canada, and Switzerland ;-) )

*Eclipse board and strategic members: 
SAP
Intel

*Add-in provider members like:
Agitar
Instantiations

*Companies like:
Apple
RIM (the blackberry guys)
Orbeon
Worldpac
Trigeo

*Open source projects: empproject, abbot, orbeon, oxf studio, vence,
easyeclipse, eclipse-ccase, harbour-ide

*Eclipse advocates and bloggers like Luis de la Rosa, and Gunnar Wagenknecht

*Plus at least two academic institutions....

I think it is enough justification to give a push and make it so that it goes
into 3.1 !
The original discussion was about TableItem.getBounds(), which you do not need 
today in order to make Abbot work.  I agree that you need the general 
capability to get widget coordinates.  You are free to contribute the code 
that does this at any time.

In the case of MenuItem.getBounds() and Menu.getBounds(), we are stuck on 
Apple and have been for a while.  There is nothing I can do about this.  So, 
the right thing for you to do in the short term is to include platform 
specific code in Abbot and not to support Abbot on the Mac.  This is sad, but 
it is the right software engineering thing to do.

Please stop ranting at me.  I am doing all I can and it doesn't help.
Philippe, the bug is important and we are doing all we can.  The implications 
of adding an API like Widget.getBounds() (or solving this problem in another 
way) are big.  We cannot propose API that is no-portable.  We realize this bug 
is important and have been trying to get to it for a while.
Steve,

First I would like you to kindly accept my public apologies if I came out hard
and harsh.

This may be my French way of loving heated arguments and debates resurfacing now
and then ;-) I want you to be my best buddy, and I have serious respect for the
work you guys are doing.Being the API guardians of the essential SWT must be a
tough job, with trolls like me ruining your day!

In all fairness, if some irresponsible person had given me your job, SWT would
have been a half-baked, ugly, buggy, non-portable piece of crap, instead of the
elegant work it is today and Eclipse would be dying from my incompetence :-) 

Be assured that if I need to vent my SWT frustration in the future, I will do it
1-on-1 first.

Now, right after posting that unruly comment yesterday, I was hanging @ #eclipse
and chatted with Billy B. who gave me some valuable insights.

Also I did not really understand until now that the menu problem on Mac is real
hard, and may not be solvable in a portable way because the way carbon handles
menu bars.

As far as I am concerned, I need the menu and menu items coordinates
(MenuItem.getBounds() and Menu.getBounds() ), but I can live without
portability, and Billy told me there could be a way to do it in my plug-in,
probably without having to resort to SWT patching, or weird aspects, reflection
or byte code hacks, as long as portability was not the major concern. And for me
it is not.

I care about making my own little plugin run nicely on top of a vanilla Eclipse
build, with decent support for at least Windows, Mac and Linux/GTK. And if some
features are NOT available on Mac, then so be it. I can live with that, and I
can inform my users properly about the capabilities of that plugin on each
platforms, both in the documentation and at run-time.
I also care about SWT staying homogenous, elegant and portable on all Eclipse's
platforms, and do not want to be an architect of its demise.

If there is a way to get some code examples for Win and GTK posted somewhere to
get me started, that would be great. 
And as far as I am concerned, that would close that bug!

Cordially
Ok, thanks Philippe, I wouldn't go quite that far.

If you are looking for the code that does Menu.getBounds() and 
MenuItem.getBounds(), it is also released as /*public*/ but doesn't work on 
the Mac.  NOTE:  Since many operating systems don't compute the menu bounds 
until the menu is about to be shown, the bounds are zero when the menu is not 
displayed.  Also, this the coordinate systems are consistent but might not be 
the same when the code is finally released (sometime in the year 3000).  It 
should be easy enough to do the same thing that Tom is doing (ie. copy the 
code to a platform specific utility class) and call it.  Maybe Tom could 
provide his utility class as a patch in this bug report?

Also, BB should be commenting in the bug report rather than chatting privately!
Steve,
since Menu.getBounds() and  MenuItem.getBounds() are /*public*/, I can work
around that with reflection, as long I am not under the control of a restrictive
security manager. A bit awkward, but the hack will do the trick for me, together
with some platform specific conditions for macs or platforms where it returns
odd or (0,0,0,0) values

&gt;NOTE:  Since many operating systems don't compute the menu bounds 
&gt;until the menu is about to be shown, the bounds are zero when the menu is not 
displayed.  
In my case that would not be a problem. I really only need to compute the menu
bounds just right after they have been displayed, not before.

&gt;It should be easy enough to do the same thing that Tom is doing 
&gt; (ie. copy the code to a platform specific utility class) and call it.  
Does not this require a patched SWT and therefore a modified core eclispe?
I am trying to avoid that. 

Tom your patch would be welcomed or is it already in abbot? If so, I will do a
diff again between SWT and your latest patched SWT, last I made is a few months old.

Just adding a quick note for everybody's understanding is that all Billy told me
about this bug in our chat was it was down to the Mac menu issues. ;-)
Steve Northover  2005-05-11 08:03  [reply] -------
&gt;&gt;&gt; Please stop ranting at me. I am doing all I can and it doesn't
&gt;&gt;&gt; help.

Not ranting, just explaining, since the rationale for getBounds() (vs
getBounds(...), yourAPIhere(...), etc) doesn't seem to take.

Steve Northover  2005-05-11 16:15  [reply] -------
&gt;&gt; If you are looking for the code that does Menu.getBounds() and
&gt;&gt; MenuItem.getBounds(), it is also released as /*public*/ but doesn't
&gt;&gt; work on the Mac.

The code in org.eclipse.swt.widgets.MenuItem.getBounds() in 3.1-M6
also works incorrectly on win32 when used to exercise a workbench:
will post separately regarding that.

&gt;&gt; NOTE: Since many operating systems don't compute the menu bounds
&gt;&gt; until the menu is about to be shown, the bounds are zero when the
&gt;&gt; menu is not displayed. Also, this the coordinate systems are
&gt;&gt; consistent but might not be the same when the code is finally
&gt;&gt; released (sometime in the year 3000).

&gt;&gt; It should be easy enough to do the same thing that Tom is doing
&gt;&gt; (ie. copy the code to a platform specific utility class) and call
&gt;&gt; it. Maybe Tom could provide his utility class as a patch in this
&gt;&gt; bug report?

Philippe Ombredanne 2005-05-11 16:31 [reply] -------
&gt; Steve, since Menu.getBounds() and MenuItem.getBounds() are
&gt; /*public*/, I can work around that with reflection, as long I am not
&gt; under the control of a restrictive security manager. A bit awkward,
&gt; but the hack will do the trick for me, together with some platform
&gt; specific conditions for macs or platforms where it returns odd or
&gt; (0,0,0,0) values

&gt;&gt; NOTE: Since many operating systems don't compute the menu bounds
&gt;&gt; until the menu is about to be shown, the bounds are zero when the
&gt;&gt; menu is not displayed.

&gt; In my case that would not be a problem. I really only need to
&gt; compute the menu bounds just right after they have been displayed,
&gt; not before.

&gt;&gt; It should be easy enough to do the same thing that Tom is doing
&gt;&gt; (ie. copy the code to a platform specific utility class) and call
&gt;&gt; it.

&gt; Does not this require a patched SWT and therefore a modified core
&gt; eclispe? 

No longer.

&gt; Tom your patch would be welcomed or is it already in abbot? 

It is: the patches are in

abbot.swt.SWTWorkarounds
http://cvs.sourceforge.net/viewcvs.py/*checkout*/abbot/abbot.swt/src/abbot/swt/SWTWorkarounds.java?rev=HEAD

but they are transparent to the user: just use your Matcher's,
Finder's, and Tester's and they will call the correct code for
location.

&gt; If so, I will do a diff again between SWT and your latest patched
&gt; SWT, last I made is a few months old.

Quit patching !-) See

http://sourceforge.net/mailarchive/message.php?msg_id=11730297
Steve Northover  2005-05-11 16:15
&gt;&gt; If you are looking for the code that does Menu.getBounds() and
&gt;&gt; MenuItem.getBounds(), it is also released as /*public*/ but doesn't
&gt;&gt; work on the Mac.

Tom Roche  2005-05-12 13:46
&gt; The code in org.eclipse.swt.widgets.MenuItem.getBounds() in 3.1-M6
&gt; also works incorrectly on win32 when used to exercise a workbench:
&gt; will post separately regarding that.

When exercising a workbench, the code in 3.1-M6/
org.eclipse.swt.widgets.MenuItem.getBounds(), massaged slightly to run
from our different package, clicks below the menubar, activating the
toolbar button immediately below the targeted menu item. I suspect it
returns a y value that is too large. This behavior was originally
reported by other members of the abbot-users list.

How to reproduce (in a 3.1-M6 workbench, untested with other versions,
on win32, untested with other WSs):

0 Create a clean devspace folder, and start a workbench pointing to it.

1 Checkout/install/build the abbot, abbot.swt, and abbot.swt.eclipse
  modules from SourceForge CVS as described in

http://cvs.sourceforge.net/viewcvs.py/*checkout*/abbot/abbot.swt/doc/swt/building.html#sourceAbbot

  Note that the abbot.swt.* modules are both eclipse plugins "out of
  the box," and so build "normally" in eclipse (e.g. with C-b), but
  that the abbot module is not--it's IDE-agnostic and requires an ant
  build (target=eclipse.setup) to attain plugin-hood in your workspace.
 (Hence turning off autobuild is advised before you start checkout.)

2 Create a JUnit Plugin Test with test class=
  abbot.swt.eclipse.tests.MenuItemGetBoundsTest running in a blank
  runspace (check Clear workspace data before launching) using the
  workbench's JRE (Runtime JRE=eclipse). Run it:

  A Java project will be created (headlessly), then 2 tests will run
  (it's {pretty fast, hard to see} but you can see the mouse move):
  the first clicks Run&gt;ExternalTools&gt;ExternalTools to launch that
  wizard, and the second clicks File&gt;New&gt;Other to launch the New
  wizard. (The JUnit view will green bar, but will report 4/4 due to
  inheritance.) Remove the terminated session in the Console view
  (call me anal, but pde.junit has some bugs/quirks that I try to
  accomodate ... or I may just be superstitious).

3 Open abbot.swt.SWTWorkarounds in an editor and browse to getBounds
  (MenuItem menuItem). Note that it currently contains

+   public static Rectangle getBounds (MenuItem menuItem) {
+ // start code from 3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds()    
+ //  checkWidget ();
+ // not visible, but menuItem.getParent() will call it
+ //  Menu parent = menuItem.getParent();
+ //  if (OS.IsWinCE) return new Rectangle (0, 0, 0, 0);
+ //  int index = parent.indexOf (menuItem);
+ //  if (index == -1) return new Rectangle (0, 0, 0, 0);
+ //  if ((parent.getStyle() &amp; SWT.BAR) != 0) {
+ //    Decorations shell = parent.getParent();
+ //    if (shell.getMenuBar() != parent) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    int hwndShell = shell.handle;
+ //    MENUBARINFO info1 = new MENUBARINFO ();
+ //    info1.cbSize = MENUBARINFO.sizeof;
+ //    if (!OS.GetMenuBarInfo (hwndShell, OS.OBJID_MENU, 1, info1)) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    MENUBARINFO info2 = new MENUBARINFO ();
+ //    info2.cbSize = MENUBARINFO.sizeof;
+ //    if (!OS.GetMenuBarInfo (hwndShell, OS.OBJID_MENU, index + 1, info2)) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    int x = info2.left - info1.left;
+ //    int y = info2.top - info1.top;
+ //    int width = info1.right - info1.left;
+ //    int height = info1.bottom - info1.top;
+ //    return new Rectangle (x, y, width, height);
+ //  } else {
+ //    int hMenu = parent.handle;
+ //    RECT rect1 = new RECT ();
+ //    if (!OS.GetMenuItemRect (0, hMenu, 0, rect1)) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    RECT rect2 = new RECT ();
+ //    if (!OS.GetMenuItemRect (0, hMenu, index, rect2)) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    int x = rect2.left - rect1.left + 2;
+ //    int y = rect2.top - rect1.top + 2;
+ //    int width = rect2.right - rect2.left;
+ //    int height = rect2.bottom - rect2.top;
+ //    return new Rectangle (x, y, width, height);
+ //  }
+ // end code from 3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds()
+ // start code adapted from o.e.swt.patched.MenuItem.getBounds()
+     Menu parent = menuItem.getParent();
+     Decorations parentControl = parent.getParent();
+     if (OS.IsWinCE) return new Rectangle (0, 0, 0, 0);
+     int index = parent.indexOf (menuItem);
+     if (index == -1) return new Rectangle (0, 0, 0, 0);
+     RECT rect = new RECT();
+     boolean success =
OS.GetMenuItemRect(((parent.getStyle()&amp;SWT.BAR)==SWT.BAR)?parentControl.handle:0,
+               parent.handle,
+               index,
+               rect);
+     if (!success) {
+       /* the OS API call couldn't get the MenuItem bounds, so return an empty
rectangle */
+       return new Rectangle(0, 0, 0, 0);   
+     }
+     if ((parentControl.getStyle() &amp; SWT.MIRRORED) == 0) {
+       /* coordinates are not mirrored */
+       Point p = parentControl.toControl(rect.left,rect.top);
+       int width = rect.right - rect.left;
+       int height = rect.bottom - rect.top;
+       return new Rectangle(p.x,p.y,width,height);   
+     } else {
+       /* coordinates are mirrored */
+       /* TODO: this has not been tested */
+       Point p = parentControl.toControl(rect.left,rect.top);
+       int width = rect.left - rect.right;
+       int height = rect.bottom - rect.top;
+       return new Rectangle(p.x,p.y,width,height);       
+     }
+ // end code adapted from o.e.swt.patched.MenuItem.getBounds()
+   }

  The first section is minimally adapted from 3.1-M6/
  org.eclipse.swt.widgets.MenuItem.getBounds(), the latter is from
  Abbot's patches. Note that the latter section is what you just ran
  successfully. Comment out that latter section, and uncomment the
  first section, to produce

-   public static Rectangle getBounds (MenuItem menuItem) {
- // start code from 3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds()    
- //  checkWidget ();
- // not visible, but menuItem.getParent() will call it
-   Menu parent = menuItem.getParent();
-   if (OS.IsWinCE) return new Rectangle (0, 0, 0, 0);
-   int index = parent.indexOf (menuItem);
-   if (index == -1) return new Rectangle (0, 0, 0, 0);
-   if ((parent.getStyle() &amp; SWT.BAR) != 0) {
-     Decorations shell = parent.getParent();
-     if (shell.getMenuBar() != parent) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     int hwndShell = shell.handle;
-     MENUBARINFO info1 = new MENUBARINFO ();
-     info1.cbSize = MENUBARINFO.sizeof;
-     if (!OS.GetMenuBarInfo (hwndShell, OS.OBJID_MENU, 1, info1)) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     MENUBARINFO info2 = new MENUBARINFO ();
-     info2.cbSize = MENUBARINFO.sizeof;
-     if (!OS.GetMenuBarInfo (hwndShell, OS.OBJID_MENU, index + 1, info2)) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     int x = info2.left - info1.left;
-     int y = info2.top - info1.top;
-     int width = info1.right - info1.left;
-     int height = info1.bottom - info1.top;
-     return new Rectangle (x, y, width, height);
-   } else {
-     int hMenu = parent.handle;
-     RECT rect1 = new RECT ();
-     if (!OS.GetMenuItemRect (0, hMenu, 0, rect1)) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     RECT rect2 = new RECT ();
-     if (!OS.GetMenuItemRect (0, hMenu, index, rect2)) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     int x = rect2.left - rect1.left + 2;
-     int y = rect2.top - rect1.top + 2;
-     int width = rect2.right - rect2.left;
-     int height = rect2.bottom - rect2.top;
-     return new Rectangle (x, y, width, height);
-   }
- // end code from 3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds()
- // start code adapted from o.e.swt.patched.MenuItem.getBounds()
- //    Menu parent = menuItem.getParent();
- //    Decorations parentControl = parent.getParent();
- //    if (OS.IsWinCE) return new Rectangle (0, 0, 0, 0);
- //    int index = parent.indexOf (menuItem);
- //    if (index == -1) return new Rectangle (0, 0, 0, 0);
- //    RECT rect = new RECT();
- //    boolean success =
OS.GetMenuItemRect(((parent.getStyle()&amp;SWT.BAR)==SWT.BAR)?parentControl.handle:0,
- //              parent.handle,
- //              index,
- //              rect);
- //    if (!success) {
- //      /* the OS API call couldn't get the MenuItem bounds, so return an
empty rectangle */
- //      return new Rectangle(0, 0, 0, 0);   
- //    }
- //    if ((parentControl.getStyle() &amp; SWT.MIRRORED) == 0) {
- //      /* coordinates are not mirrored */
- //      Point p = parentControl.toControl(rect.left,rect.top);
- //      int width = rect.right - rect.left;
- //      int height = rect.bottom - rect.top;
- //      return new Rectangle(p.x,p.y,width,height);   
- //    } else {
- //      /* coordinates are mirrored */
- //      /* TODO: this has not been tested */
- //      Point p = parentControl.toControl(rect.left,rect.top);
- //      int width = rect.left - rect.right;
- //      int height = rect.bottom - rect.top;
- //      return new Rectangle(p.x,p.y,width,height);       
- //    }
- // end code adapted from o.e.swt.patched.MenuItem.getBounds()
-   }

  Save and build.

4 Rerun abbot.swt.eclipse.tests.MenuItemGetBoundsTest (e.g. with
  C-F11). Note that, instead of clicking the menu, the mouse clicks
  the Search button on the toolbar, and the Search wizard launches
  instead of External Tools. (Note that the button and mouse are
  positioned just below the Run item in the menu bar, hence my
  hypothesis.) This hoses that and subsequent tests with

abbot.WaitTimedOutError: Timed out waiting for External Tools to show
  at abbot.tester.swt.Robot.wait(Robot.java:1454)
  at abbot.tester.swt.Robot.wait(Robot.java:1442)
  at abbot.tester.swt.WidgetTester.waitForShellShowing(WidgetTester.java:897)
  at
abbot.swt.eclipse.tests.MenuItemGetBoundsTest$1.run(MenuItemGetBoundsTest.java:82)

  in the Console.

5 If desired, whack the session, undo the changes to SWTWorkarounds,
  save, C-b, C-F11: the tests again run successfully to completion by
  correctly clicking the menu items.

All: please let me know if you are able to reproduce or not,
especially if the directions are unclear.

The part that is unclear is whether you know what the bug is already and have 
a fix.  If this is the case, can you please post the patch?  Thanks.
Created attachment 21077
adaption of code that fixes bad menu-picking as demonstrated in https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c102

See

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c102

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c104
Steve Northover  2005-05-12 18:34
&gt; The part that is unclear is whether you know what the bug is already

Umm ... it seems pretty clear that the bug is in the code adapted from 
3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds(), since the test
fails when using that code, no?

&gt; and have a fix. If this is the case, can you please post the patch?

https://bugs.eclipse.org/bugs/attachment.cgi?id=21077

but note that I can't verify the patched code directly ... because I
hafta workaround the non-public-ness of MenuItem.getBounds().

Tom, the more you help me, the more I can help you.  A single sentence 
like "The problem is that the coordinates are wrong because ... or mirroring 
is not taken into account ..." would be most appreciated (unless you really 
have no idea what is wrong, in which case saying so helps too, but you have a 
patch so that implies you do know what's going on).  It's just easier not to 
have to guess from the code but I can do that if you want.  It'll just take 
longer.

Also, a small stand alone test case that uses the API is really helpful rather 
than downloading and installing Abbot.  If you don't have the code, then 
that's fine too.

Billy, can you verify that the patch doesn't compile?
Tom Roche  2005-05-12 18:07
&gt;&gt;&gt; When exercising a workbench, the code in 3.1-M6/
&gt;&gt;&gt; org.eclipse.swt.widgets.MenuItem.getBounds(), massaged slightly to
&gt;&gt;&gt; run from our different package, clicks below the menubar,
&gt;&gt;&gt; activating the toolbar button immediately below the targeted menu
&gt;&gt;&gt; item. I suspect it returns a y value that is too large. 

steve_northover@ca.ibm.com  2005-05-13 08:50
&gt;&gt; A single sentence like "The problem is that the coordinates are
&gt;&gt; wrong because ... or mirroring is not taken into account ..." would
&gt;&gt; be most appreciated

Steve: what part of "returns a y value that is too large" is unclear?

&gt;&gt; (unless you really have no idea what is wrong, in which case saying
&gt;&gt; so helps too, but you have a patch so that implies you do know
&gt;&gt; what's going on). 

(The more helpful you claim to be, the more your language betrays you.)
Not only have I an "idea what is wrong," I have given you a test case
that clearly displays it! I even walk you through reproduction of the
test case's behavior:

&gt;&gt;&gt; 2 Create a JUnit Plugin Test with test class=
&gt;&gt;&gt;   abbot.swt.eclipse.tests.MenuItemGetBoundsTest[....] 2 tests will
&gt;&gt;&gt;   run (it's {pretty fast, hard to see} but you can see the mouse
&gt;&gt;&gt;   move): the first clicks Run&gt;ExternalTools&gt;ExternalTools to
&gt;&gt;&gt;   launch that wizard, and the second clicks File&gt;New&gt;Other to
&gt;&gt;&gt;   launch the New wizard.

&lt;snip&gt;

&gt;&gt;&gt; 3 Open abbot.swt.SWTWorkarounds in an editor and browse to
&gt;&gt;&gt; getBounds (MenuItem menuItem)[....] Comment out that latter
&gt;&gt;&gt; section, and uncomment the first section

&lt;snip&gt;

&gt;&gt;&gt; 4 Rerun abbot.swt.eclipse.tests.MenuItemGetBoundsTest (e.g. with
&gt;&gt;&gt;   C-F11). Note that, instead of clicking the menu, the mouse clicks
&gt;&gt;&gt;   the Search button on the toolbar, and the Search wizard launches
&gt;&gt;&gt;   instead of External Tools. 

&gt;&gt; It's just easier not to have to guess from the code but I can do
&gt;&gt; that if you want. It'll just take longer.

You know I don't want that, Steve: that's why I show you how to actually
reproduce the problem. Why "guess from the code" when you can *observe*
the behavior?

&gt;&gt; Also, a small stand alone test case that uses the API is really
&gt;&gt; helpful rather than downloading and installing Abbot.

Keep in mind here that the code in question (MenuItem.getBounds()) is
required for automation. In order to empirically assess the
correctness of the code, you're gonna hafta have some automation
framework. I note

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-home/test_plan.html
&gt; 1. Ensure all public API is exercised through a JUnit test

&gt; - we have an automated tool to do this but we have not made it
&gt;   publicly accessible yet

but it seems to have been that way for a while :-) Unfortunately
automation seems to require a fair amount of infrastructure.
Fortunately, in this case the infrastructure amounts to all of 3
plugins. Is that so onerous? (Perhaps your non-public automation tool
is more svelte? We'd love to see it !-) You can get/install it, and
reproduce the problem, in all of 15 minutes (on LAN). If you'd like, I
can build binary plugin zips for abbot and abbot.swt for you:
unfortunately pde.junit currently can't run tests outside the
workbench, so you'd still hafta get that as source.

Note that I'm putting my automation framework out there for you and
everyone to use, and to reproduce this problem, because ya gotta test,
Steve, not just eyeball the code. We even expose our tests as JUnit
testcases that are easily run via Eclipse's builtin tooling! (Never
let it be said that I don't try to help you help me :-)

So until you put *your* automation tool out there for folks to use, I
don't see a feasible alternative to the following for testing this
bug:

0 Reproduce the problem as detailed in

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c102

1 Twiddle the code in abbot.swt.SWTWorkarounds.getBounds(MenuItem) as
  desired, then test using abbot.swt.eclipse.tests.MenuItemGetBoundsTest

2 Repeat step 1 until you get the code the way you want it, and it
  passes the test. For extra credit, run
  abbot.swt.examples.CelsiusConverterFindingTest and
  abbot.swt.examples.CelsiusConverterTest as JUnit tests (i.e.
  Run&gt;Run&gt;JUnit, not Run&gt;Run&gt;JUnit Plugin Test)--they also pass with
  the HEAD of abbot.swt.SWTWorkarounds.getBounds(MenuItem).

3 Copy/mod your code from abbot.swt.SWTWorkarounds.getBounds(MenuItem)
  back into org.eclipse.swt.widgets.MenuItem.getBounds(). (Then, make
  it public !-)
&gt; Keep in mind here that the code in question (MenuItem.getBounds()) is
&gt; required for automation. In order to empirically assess the
&gt; correctness of the code, you're gonna hafta have some automation
&gt; framework. I note
&gt; http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/test_plan.html
&gt; &gt; 1. Ensure all public API is exercised through a JUnit test
&gt; &gt; - we have an automated tool to do this but we have not made it
&gt; &gt;   publicly accessible yet
&gt; but it seems to have been that way for a while :-) Unfortunately
&gt; automation seems to require a fair amount of infrastructure.
&gt; Fortunately, in this case the infrastructure amounts to all of 3
&gt; plugins.

You won't know if a snippet will reproduce the problem until you've actually 
tried it. I don't see why querying menu location would require some sort of 
complex setup or series of events to reproduce the problem. Just create a 
Shell, slap a menubar on it, call the package protected API, and place a 
tracker over that rectangle highlighting the bogus bounds. Not only is this 
easier for Steve, but it removes the however small chance that Abbot is doing 
something wrong.
Please Tom, just stop.  I'm not trying to imply anything or do anything other 
that find out what is wrong and fix it.
Randy: if you can, please contribute a snippet that launches a
workbench and tests MenuItem.getBounds() against it. If you can't,
please *try* to reproduce the bug as described, and ask where the
descriptions are unclear. I suspect you'll find that installing the
code and running the tests is not so nearly so onerous as you suspect
(and probably a helluva lot less onerous than writing the snippet :-)

Randy Hudson  2005-05-13 11:34
&gt; You won't know if a snippet will reproduce the problem until you've
&gt; actually tried it.

True, but I suspect you're overlooking 2 problems:

0 Testcases show the problem occurring with SUT=workbench, not SUT=a
  standalone app (more below)

1 I don't know how to do a snippet that would

(adapted for what actually needs done)
&gt; Just [launch a workbench, find one of its MenuItem's], and place a
&gt; tracker over that rectangle highlighting the bogus bounds.

First, please note:

Tom Roche  2005-05-12 18:07
&gt;&gt;&gt; When exercising a workbench, 

That's the important part: exercising a workbench.

&gt;&gt;&gt; the code in 3.1-M6/ org.eclipse.swt.widgets.MenuItem.getBounds(),
&gt;&gt;&gt; massaged slightly to run from our different package, clicks below
&gt;&gt;&gt; the menubar, activating the toolbar button immediately below the
&gt;&gt;&gt; targeted menu item. I suspect it returns a y value that is too
&gt;&gt;&gt; large.

Second, note that Abbot also works against standalone SWT: in fact we
have an example standalone SWT app and publically-available tests that
run against it:

&gt;&gt;   For extra credit, run
&gt;&gt;   abbot.swt.examples.CelsiusConverterFindingTest and
&gt;&gt;   abbot.swt.examples.CelsiusConverterTest as JUnit tests (i.e.
&gt;&gt;   Run&gt;Run&gt;JUnit, not Run&gt;Run&gt;JUnit Plugin Test)--they also pass
&gt;&gt;   with the HEAD of abbot.swt.SWTWorkarounds.getBounds(MenuItem).

Third, I know, from running those Celsius*Test's, that both code
sections in abbot.swt.SWTWorkarounds.getBounds(MenuItem)

&gt;&gt;&gt;   The first section is minimally adapted from 3.1-M6/
&gt;&gt;&gt;   org.eclipse.swt.widgets.MenuItem.getBounds(), the latter is from
&gt;&gt;&gt;   Abbot's patches. Note that the latter section is what you just
&gt;&gt;&gt;   ran successfully. Comment out that latter section, and uncomment
&gt;&gt;&gt;   the first section

work in the standalone case. The difference is the workbench case as
described in

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c102

In that case, our code STILL works, but the code derived from
org.eclipse.swt.widgets.MenuItem.getBounds() fails.

Finally, please note that the *only* reason why abbot.swt resorts to
adapting org.eclipse.swt.widgets.MenuItem.getBounds() is because Steve
has made it non-public. Were it public, we could call it directly,
without resorting to abbot.swt.SWTWorkarounds.

So if you can do a snippet that launches a workbench, finds one of its
mainmenu items and highlights the bounds, please do, because you are
certainly correct that

&gt; it [would remove] the however small chance that Abbot is doing
&gt; something wrong.

I am certainly not claiming that Abbot or abbot.swt is without fault:
we're trying to get an RC1 out and our users are making very clear
where our faults and function gaps are :-) What I am doing is making
an SWT automation framework publically available (IIRC the *only*
publically available SWT automation framework, which is why so many
folks want this fixed), making testcases publically available,
publically demonstrating how to reproduce a problem--and even
publically demonstrating code that FIXES the problem! (Feel free to
demonstrate where *that* is at fault. Til then, honi soit qui mal y
pense.)

SN, here's the snippet:

public static void main(String[] args) {
	Display display = new Display ();
	Shell shell = new Shell (display);
	Menu bar = new Menu (shell, SWT.BAR);
	shell.setMenuBar (bar);
	MenuItem fileItem = new MenuItem (bar, SWT.CASCADE);
	fileItem.setText ("File");
	Menu submenu = new Menu (shell, SWT.DROP_DOWN);
	fileItem.setMenu (submenu);
	MenuItem item = new MenuItem (submenu, SWT.PUSH);
	item.setText ("Select &amp;All\tCtrl+A");
	item.setAccelerator (SWT.CTRL + 'A');
	shell.setSize (200, 200);
	shell.open ();
	
	try {
		Method m = fileItem.getClass().getDeclaredMethods()[8];
		System.out.println(m.toString());
		m.setAccessible(true);
		Rectangle rect = (Rectangle)m.invoke(fileItem, null);
		Point where = new Point(rect.x, rect.y);
		where = shell.toDisplay(where);
		Shell highlight = new Shell(display, SWT.NO_TRIM | 
SWT.PRIMARY_MODAL);
		highlight.setBounds(where.x, where.y, rect.width, rect.height);
		highlight.setBackground(display.getSystemColor
(SWT.COLOR_INFO_BACKGROUND));
		highlight.open();
	} catch (Exception e) {
		e.printStackTrace();
	}
	
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch ()) display.sleep ();
	}
	display.dispose ();
}


BTW, if setAccelerator is not called, an exception gets thrown.
The problem is that MenuItem.getBounds() returns the coordinates in terms of 
the parent, which is a Menu.  Menus are like Shells and use the coordinate 
system of the display, rather than their parent.  So some coordinate math is 
necessary which is a bit bad but the best I can do right now.

There was also a bug in MenuItem.getBounds() where the wrong width was 
returned on Windows.  That bug has been fixed and released.

Here is a better snippet:

import java.lang.reflect.*;

import org.eclipse.swt.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.widgets.*;

public class PR_38436 {
public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	Menu bar = new Menu(shell, SWT.BAR);
	shell.setMenuBar(bar);
	MenuItem fileItem = new MenuItem(bar, SWT.CASCADE);
	fileItem.setText("File");
	Menu submenu = new Menu(shell, SWT.DROP_DOWN);
	fileItem.setMenu(submenu);
	MenuItem item = new MenuItem(submenu, SWT.PUSH);
	item.setText("Select &amp;All\tCtrl+A");
	item.setAccelerator(SWT.CTRL + 'A');
	shell.setSize(200, 200);
	shell.open();
	try {
		Method m1 = bar.getClass().getDeclaredMethod("getBounds", 
null);
		m1.setAccessible(true);
		Rectangle menuRect = (Rectangle) m1.invoke(bar, null);
		Method m2 = fileItem.getClass().getDeclaredMethod("getBounds", 
null);
		m2.setAccessible(true);
		Rectangle itemRect = (Rectangle) m2.invoke(fileItem, null);
		if ((bar.getStyle() &amp; SWT.RIGHT_TO_LEFT) != 0) {
			itemRect.x = menuRect.x + menuRect.width - 
itemRect.width - itemRect.x;
		} else {
			itemRect.x += menuRect.x;
		}
		itemRect.y += menuRect.y;
		Shell highlight = new Shell(display, SWT.NO_TRIM | 
SWT.PRIMARY_MODAL);
		highlight.setBounds(itemRect.x, itemRect.y, itemRect.width, 
itemRect.height);
		highlight.setBackground(display.getSystemColor
(SWT.COLOR_INFO_BACKGROUND));
		highlight.open();
	} catch (Exception e) {
		e.printStackTrace();
	}
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}
}


I have run MenuItemGetBoundsTest.  As SN described, the problem seems to be 
that Menu.getBounds() is returning its result in display coordinates and the 
code in WidgetLocator is translating these display relative coordinates using 
item.getParent().getParent().toDisplay(bounds.x,bounds.y); and this is not 
neccessary.  The following works for me on Windows:

In SWTWorkaround:

	public static Rectangle getBounds(MenuItem menuItem) {
//		 start code adapted from 
&lt;url&gt;https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c112&lt;/url&gt;
		Menu parent = menuItem.getParent();
		Method m1 = null;
		try {
			m1 = parent.getClass().getDeclaredMethod("getBounds", 
null);
		} catch (SecurityException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (NoSuchMethodException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		}
		m1.setAccessible(true);
		Rectangle menuRect = null;
		try {
			menuRect = (Rectangle) m1.invoke(parent, null);
		} catch (IllegalArgumentException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		}
		Method m2 = null;
		try {
			m2 = menuItem.getClass().getDeclaredMethod
("getBounds", null);
		} catch (SecurityException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (NoSuchMethodException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		}
		m2.setAccessible(true);
		Rectangle itemRect = null;
		try {
			itemRect = (Rectangle) m2.invoke(menuItem, null);
		} catch (IllegalArgumentException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		}
		if ((parent.getStyle() &amp; SWT.RIGHT_TO_LEFT) != 0) {
			itemRect.x = menuRect.x + menuRect.width - 
itemRect.width - itemRect.x;
		} else {
			itemRect.x += menuRect.x;
		}
		itemRect.y += menuRect.y;
		return itemRect;
//		 end code adapted from 
&lt;url&gt;https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c112&lt;/url&gt;	
	
	}


In WidgetLocator.getBounds(Widget, boolean):

if(w instanceof MenuItem){
	MenuItem item = (MenuItem)w;
	return SWTWorkarounds.getBounds(item);
}
Veronika Irvine 05/16/2005 04:58:02 PM:
&gt;&gt; I have reproduced the problem and seen that the code from M6 and
&gt;&gt; from 38436#c112 both fail whereas "code adapted from o.e.swt.
&gt;&gt; patched.MenuItem.getBounds()" works. Will investigate with Steve.

Veronika Irvine  2005-05-16 17:55
&gt; I have run MenuItemGetBoundsTest. As SN described, the problem seems
&gt; to be that Menu.getBounds() is returning its result in display
&gt; coordinates and the code in WidgetLocator is translating these
&gt; display relative coordinates using
&gt; item.getParent().getParent().toDisplay(bounds.x,bounds.y); and this
&gt; is not neccessary.

Doh! I still don't understand why the translation only failed in-
workbench and not standalone, but the tests now pass, which is what
counts. Thanks so much!
For future consideration, I think the problem would be simplified if Menu 
supported toControl() and toDisplay().  That way you would not have to do the 
following math:

if ((parent.getStyle() &amp; SWT.RIGHT_TO_LEFT) != 0) {
	itemRect.x = menuRect.x + menuRect.width - itemRect.width - itemRect.x;
} else {
	itemRect.x += menuRect.x;
}
itemRect.y += menuRect.y;

Instead, you would just get the bounds of the MenuItem (itemRect in the code 
above) and call menuItem.getParent().toDisplay(itemRect.x, itemRect.y).
Yes, but more importantly, Display.map() needs to take more than just 
controls.  Display.map() is the API that maps whole rectangles from RTL and 
LTR coordinate systems which is the right way to do coordinate transformations 
in a mirrored world.
org.eclipse.swt.custom.CTabFolder class do not expose any methods to get the
Rectangle bounds of :
          1) Chevron &gt;&gt;&gt; button
          2) Minimize/Maximize button
          3) Close button

In Eclipse 3.0 milestones releases, methods exists to get those bounds but they 
were removed. The implications for GUI Test Automation tool(IBM Rational 
Functional Tester) is that they CANNOT click on the chevron, min/max or close 
buttons and so cannot test complex cases where more views are stacked at a 
CTabFolder.
Created attachment 23906
abbot.swt.SWTWorkarounds shelters users from Widget.getBounds()-related problems: cases where either Whatever.getBounds() is unavailable, not public, or has unwelcome behavior.

Most up-to-date code, as well as code for users of abbot.swt.SWTWorkarounds
(currently

abbot.tester.swt.WidgetLocator
abbot.tester.swt.MenuItemTester
abbot.tester.swt.ScrollBarTester
abbot.tester.swt.TableTester
abbot.tester.swt.TreeItemTester

) is available (with null password) from

cvs -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/abbot co abbot.swt
Tao Weng 05/26/2005 11:43 AM
&gt;&gt;&gt; Currently, Abbot.swt solution is not platform independent due to
&gt;&gt;&gt; bugzilla defect number 38436.

&lt;snip&gt;

&gt;&gt;&gt; 1) Is the defect going to be fixed within the next 6 months or so? 
&gt;&gt;&gt; If not, when is it going to be available. Just roughly....

&gt;&gt;&gt; 2) Is it possible to release a patched version of swt for linux 
&gt;&gt;&gt; environment in the next 6 months. Just like what we did for windows? 

Steve Northover 05/26/2005 12:19:43 PM:
&gt;&gt; Yes. Either the bug will be fixed or I will work with Tom to ensure
&gt;&gt; that Abbot is patched to support Linux. 

Tom Roche 05/26/2005 10:15 PM
&gt; Thanks!

&gt;&gt; Tom, if you contribute the [SWTWorkarounds] class from Abbot to
&gt;&gt; the bug report, we will look at providing implementations for the
&gt;&gt; other plaforms.

&gt; Will do soonest, just verifying a (candidate) fix for 3.0 first.

Unfortunately soonest was much less soon than I had hoped :-( but I
have refactored such that (IIUC) all abbot.swt's SWT workarounds are
in abbot.swt.SWTWorkarounds, which is now attached. Apologies for the
delay, your assistance is appreciated.

I am working on a version of SWTWorkarounds that can be used for 3.1.  Hold 
the phone.

Thomas, the implementation of swt2Awt() can't work anywhere else but Windows.  
The format of the KeyTable is platforms specific.  Is this method critical to 
Abbot? (seems like it might be).  Can you please recode this method either as 
a horrible huge case statement or a hash table and post the code here?  Thanks!
We have the code ready but need an implementation of swt2Awt() before we can 
proceed.
Comment #120 From Steve Northover  2005-07-11 11:53
&gt; I am working on a version of SWTWorkarounds that can be used for
&gt; 3.1.

Great! Thanks for your cooperation!

&gt; Thomas, the implementation of swt2Awt() can't work anywhere else
&gt; but Windows. The format of the KeyTable is platforms specific.

Steve, SWTWorkarounds.keyTable exists to enable
SWTWorkarounds.swt2Awt(int swtKeyValue), and both are in
SWTWorkarounds because ... they're more &lt;bleep&gt;ing workarounds for
SWT. As the latter's javadoc states:

  /**
   * Translates from SWT keys values to AWT ones, e.g.
   * from &lt;code&gt;SWT.ESC&lt;/code&gt; to &lt;code&gt;VK_ESCAPE&lt;/code&gt;.
   * For details see
   * {@link org.eclipse.swt.widgets.Display#KeyTable}
   * Workaround for package scope of
   * {@link org.eclipse.swt.widgets.Display#untranslateKey(int)}
   */

So ... could you please just make Display.untranslateKey(int) public?
instead of requiring Yet Another Workaround

&gt; Can you please recode this method either as a horrible huge case
&gt; statement or a hash table

from your users? 

Tom, I'm going to appeal one last time to please skip the editorial comments 
like "bleep" or "Yet Another WorkAround".  They are offsensive, cloud the 
issue, waste time and make me wonder why on earth I would want to help someone 
who continually insults me and the work I do.

Please read the rest of this comment and respond only to the technical issues.

&gt;Thomas, the implementation of swt2Awt() can't work anywhere else but
&gt;Windows.  The format of the KeyTable is platforms specific.

The package variable KeyTable maps SWT key constants to platform specific key 
constants.  On Windows, keys like SWT.HOME are mapped to the Windows constant 
VK_HOME.  On GTK, SWT.HOME is mapped to GDK_HOME.  It does not map SWT key 
constants to AWT key constants and therefore cannot be made to do this.  In 
addition, it does not make sense for SWT to provide a mechanism to map SWT 
constants to AWT constants.  For one, AWT doesn't exist on all the platforms 
where SWT runs.  So, if Abbot needs to make AWT constants to SWT constants for 
some reason, Abbot will need code to do this.  Since I have no idea what this 
mapping is used for and cannot know from the source code in SWTWorkarounds, 
you are the most logical person to write the code and contribute it.

Other than the mapping table, we are ready to go.

Comment #123 From Steve Northover 2005-07-12 13:20
&gt; Tom, I'm going to appeal one last time to please skip the editorial
&gt; comments like "bleep" or "Yet Another WorkAround".

Steve, lighten up, then

&gt; respond only to the technical issues.

e.g. 

Comment #122 From Tom Roche  2005-07-12 12:06
&gt;&gt; could you please just make Display.untranslateKey(int) public?

If not I'll try reflecting on it, which would presumably obviate the
need for the local copy of org.eclipse.swt.widgets.Display.KeyTable
(or am I missing something?)

The mapping table in Display is different on every platform.  It maps SWT keys 
to platform specific keys, not AWT keys.  Therefore it cannot be used.  You 
will need to provide an implementation that maps SWT keys to AWT keys.  Once 
we have that code, the 3.1 SWTWorkarounds patch will be complete.
To be even more precise, the mapping table will be portable and will live 
inside SWTWorkarounds.
Comment #125 From Steve Northover  2005-07-12 17:54
&gt; The mapping table in Display is different on every platform. It maps
&gt; SWT keys to platform specific keys, not AWT keys. Therefore it
&gt; cannot be used. You will need to provide an implementation that maps
&gt; SWT keys to AWT keys.

OK, will do. If you know of any tables with this information, please
point.

I know of none.
Created attachment 25375
org.eclipse.swt.widgets.SWTWorkarounds lives in Abbot, exposing needed package-privates to users

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c122
From Tom Roche  2005-07-12 12:06
&gt;&gt; could you please just make Display.untranslateKey(int) public?

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c125
From Steve Northover 2005-07-12 17:54
&gt; The mapping table in Display is different on every platform. It
&gt; maps SWT keys to platform specific keys, not AWT keys. Therefore it
&gt; cannot be used.

Apologies for the delay. Turns out that SWTWorkarounds.swt2Awt was a
red herring:

* it did _not_ translate from SWT to AWT key values

* its caller needed translation from SWT to native, hence the local
  copy of Display.KeyTable.

Please find

https://bugs.eclipse.org/bugs/attachment.cgi?id=25375

attached. In addition to renaming the method, I also changed
SWTWorkarounds' package to workaround the package-visibility issues:
this allows SWTWorkarounds.swt2OS to call Display.untranslateKey(int)
directly. I'll also try eliminate the reflection in
getBounds(MenuItem) after we branch for 3.1. Meanwhile,

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c120
From Steve Northover  2005-07-11 11:53
&gt;&gt;&gt; I am working on a version of SWTWorkarounds that can be used for
&gt;&gt;&gt; 3.1.

Please lemme know if you find any other obstacles.

&gt;Other than the mapping table, we are ready to go.

1) Please don't write any code or change anything in the SWTWorkarounds class 
(other than the mapping table).  We are have been ready to go with the code 
for a while.  No other work is necessary and changing anything else in the 
file may actually cause work.

2) Are you telling me that Abbot really needs to translate SWT keys to 
operating system keys in order to work?  There is no API in SWT that will 
accept operating system key values and do anything sensible with them.  Is 
there an API in AWT or Abbot that takes operating system key values?  If so, 
how is Abbot for AWT getting these values?  Is there AWT API that translates 
AWT key values to operating system key values?



https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c131
From Steve Northover  2005-07-27 18:57 (rearranged)
&gt; 2) Are you telling me that Abbot really needs to translate SWT keys
&gt; to operating system keys in order to work?

If you define "really" as in "SWT really needs to have a package-
private Display.untranslateKey(int)," then yes: at the moment, in one
place, it does.

&gt; 1) Please don't write any code or change anything in the
&gt; SWTWorkarounds class (other than the mapping table). We are have
&gt; been ready to go with the code for a while. No other work is
&gt; necessary and changing anything else in the file may actually cause
&gt; work.

What has changed:

* the package, allowing ...

* ... keyTable (and initKeyTable(...)) to disappear, per your request

* swt2Awt(...) -&gt; swt2OS(...)

* swt2OS(...) calls Display.untranslateKey(int) directly

Since presumably none of your code used the local keyTable or called
initKeyTable(...) or swt2Awt(...), you should have no problems.

Billy to go and get the Abbot source and find out what Abbot is doing with 
operating system key values to determine whether the API is needed or not and 
post the results in this bug report.
The only code I found that used swt2OS() was in TreeItemTester:

  new Robot().keyPress(SWTWorkarounds.swt2OS(SWT.ESC));

The method swt2OS(SWT.ESC) returns GDK_Escape (0xff1b) under GTK+.  I cannot
find any code path in Robot().keyPress() which expects a GDK key value, and
sending 0xff1b to an AWT robot under GTK+ results in an invalid key code
exception.  I assume this works on Windows because SWT.ESC maps to Windows'
VK_ESCAPE (0x1b) which I guess happens to have the same value as the AWT VK_ESCAPE.

I don't think this function is actually useful to you.  Is there somewhere else
you intended to use this?
https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c131
From Steve Northover  2005-07-27 18:57
&gt;&gt;&gt; 2) Are you telling me that Abbot really needs to translate SWT
&gt;&gt;&gt; keys to operating system keys in order to work?

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c132
From Tom Roche  2005-07-27 19:27
&gt;&gt; If you define "really" as in "SWT really needs to have a package-
&gt;&gt; private Display.untranslateKey(int)," then yes: at the moment, in
&gt;&gt; one place, it does.

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c134
From Billy Biggs  2005-07-28 10:59
&gt; The only code I found that used swt2OS() was in TreeItemTester:

&gt;   new Robot().keyPress(SWTWorkarounds.swt2OS(SWT.ESC));

Correct.

&gt; The method swt2OS(SWT.ESC) returns GDK_Escape (0xff1b) under GTK+. I
&gt; cannot find any code path in Robot().keyPress() which expects a GDK
&gt; key value, and sending 0xff1b to an AWT robot under GTK+ results in
&gt; an invalid key code exception. I assume this works on Windows
&gt; because SWT.ESC maps to Windows' VK_ESCAPE (0x1b) which I guess
&gt; happens to have the same value as the AWT VK_ESCAPE.

Doh! hafta do an swt2Awt after all ...

&gt; I don't think this function is actually useful to you. Is there
&gt; somewhere else you intended to use this?

As stated above, just this one place. Doesn't mean it won't be useful
in the future, but if you really can't tolerate its existence, feel
free to remove: we can always add it back if needed.


&gt; 
&gt; As stated above, just this one place. Doesn't mean it won't be useful
&gt; in the future, but if you really can't tolerate its existence, feel
&gt; free to remove: we can always add it back if needed.
&gt; 

YAGNI

What Billy is trying to tell you is that this method is not only useless, it 
is also broken.  It does not work on GTK.

After examining the Abbot source code, we have determined that the intent of 
the method is to map SWT key values to AWT key values (not operating system 
key values as was previously claimed).  Since Abbot calls swt2OS() in exactly 
one place, always with SWT.ESC and SWT.ESC maps to AWT's VK_ESCAPE, I suggest 
you change Abbot to simply inline AWT's VK_ESCAPE.  To be more precise, change 
the line to TreeItemTester to be:

  new Robot().keyPress(KeyEvent.VK_ESCAPE));

Once this is done, we can release the patch.
https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c137
From Steve Northover  2005-07-28 13:39
&gt; new Robot().keyPress(KeyEvent.VK_ESCAPE));

Done!
Created attachment 25431
SWTWorkarounds for Abbot (SWT 3.1, Windows, GTK and Motif)

Here is the SWTWorkarounds class for Abbot (SWT 3.1, Windows, GTK and Motif).  


NOTE: There is no work around code for the Mac due to missing operating system
features for that platform and lack of support from Apple.  Too bad!
should getBounds(Menu) call itself or getBounds((Object)menu);?
&gt; should getBounds(Menu) call itself or getBounds((Object)menu);?

ditto getBounds(MenuItem) ... that first stack overflow was attention-grabbing :-)
Oops, we didn't do a final test pass on everything (but the code should be 
close).  Please attach a new class with your fixes when you have finished 
testing it.  If you have any problems, let us know.
&gt; Created an attachment (id=25431) [edit]
&gt; SWTWorkarounds for Abbot (SWT 3.1, Windows, GTK and Motif)
&gt; 
&gt; Here is the SWTWorkarounds class for Abbot (SWT 3.1, Windows, GTK and Motif).  

This does not work properly for menu(item)s (I already added the cast to
Object). The coordinates do not get mapped to display space coords. As I am not
involved into abbot at all, I don't know whether this should happen in
SWTWorkarounds or in WidgetLocator.getBounds(). However,
SWTWorkarounds.getBounds(Menu menu) already answers display space coords for me
(Linux/GTK). So, I added a  

itemRect.y += menuRect.y;

in getBounds(MenuItem menuItem) and it seems to work fine for me. Here is the
whole method:

public static Rectangle getBounds(MenuItem menuItem) {
        Rectangle itemRect = getBounds ((Object)menuItem);
        Rectangle menuRect = getBounds (menuItem.getParent ());
        if ((menuItem.getParent ().getStyle() &amp; SWT.RIGHT_TO_LEFT) != 0) {
            itemRect.x = menuRect.x + menuRect.width - itemRect.width - itemRect.x;
        } else {
            itemRect.x += menuRect.x;
        }
        itemRect.y += menuRect.y;
        return itemRect;
}
Created attachment 25499
SWTWorkarounds for Abbot (SWT 3.1: Windows, GTK, Motif)

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c143
From i.maier@tu-bs.de  2005-08-01 06:08
&gt; I added a  

&gt; itemRect.y += menuRect.y;

&gt; in getBounds(MenuItem menuItem) and it seems to work fine for me.

Thanks, Ingo Maier! Attachment also fixes the stack overflows.
Remaining known issues:

* tree item finding (e.g. in New Wizard dialog) requires "training": a
  test will fail the first time, but succeeds after first manual
  iteration. E.g. I observe the sequence [Run&gt;Run&gt;&lt;test&gt;: fails, run
  the same scenario manually, Run&gt;Run&gt;&lt;test&gt;: succeeds] with several
  tests (JavaProjectTester, WTPSimpleWebProjectTest, WTPWizardTest).

* need to handle cases when method is unavailable

* incomplete Carbon support
https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c144
&gt; Remaining known issues:

on win32: need reports from other platforms

Created attachment 25568
SWTWorkarounds for Abbot (SWT 3.1: Windows, GTK, Motif)

OK, here is the latest class.  I tested the code on Windows, GTK and Motif.

TOM:  Do not put this class in org.eclipse.swt.widgets.  It is temporary work
around code specifically for Abbot.  I put it in the package abbot.swt which
was the original place you had the workaround.
&gt;* tree item finding (e.g. in New Wizard dialog) requires "training": a
&gt;  test will fail the first time, but succeeds after first manual

Enter a new bug report for this.  It has nothing to do with this bug report.
As I see, this topic is dead for a half year, and still not solved. From what I understood here, MenuItem on MacOS is stuck, but other widgets, which have fixed place (like TabItem) didn't run into this problem and could be implemented on all platforms. Couldn't this be done at least for widgets for which it is possible? Cause I see the need not only for automatic testing, but for general use (such as creating context menus for TabItem's).
I agree with you, however, we cannot offer API on one platform that cannot be implemented on another or SWT will cease to be portable.
That's really true, but I'm talking only about widgets, for which such functionality can be implemented on all platforms. This wouldn't break portability.
Steve, per our recent email exchange, would you please provide a workaround/patch implementation of getBounds() for TreeColumn (analogous to what we're using for some of the other non-Control Widgets in our SWTWorkarounds class in abbot.swt (on SourceForge)?  Thanks.
NOTE:  Our email exchange consisted of me asking Gary to ask for this new feature in the bug report.
Created attachment 56919
SWTWorkarounds for Abbot (SWT 3.2: Windows, GTK, Motif) 

New versions of the code for 3.2.
Created attachment 74636
extends SWT to add a getBounds method for MenuItem, and for TabItem, on OSX

The enclosed code extends SWT to add a getBounds method for MenuItem, and for TabItem, on OSX.

The way it does this is to use the Accessibility API. You must first have checked the item
	'System Preferences/Universal Access/Enable access for assistive devices' 
This is unfortunate, but this seems like an acceptable cost for a test framework.
Comment on attachment 74636
extends SWT to add a getBounds method for MenuItem, and for TabItem, on OSX</WithStack>
    <WithOutStack>While SWT is superior to AWT in many ways, SWT currently falls short of its 
counterpart in the realm of automated whitebox GUI testing.  We are currently 
working on extending Abbot, a Java GUI testing framework originally intended 
for AWT, for use with SWT to allow for whitebox testing of SWT GUIs.  To 
accomplish this, we need the capability to programmatically manipulate SWT 
Widgets in a manner that mimics the user.  To this end, we need to be able to 
locate ANY Widget in display-coordinates. 

Currently, only Controls have a getLocation() method that provides this 
functionality (by calling parent.toDisplay(control.getLocation()).   Other 
specific subclasses of Widget have a getBounds() method- Caret, CoolItem, 
Decorations, TableItem, ToolItem, and TreeItem- that allow us to find instances 
of these classes in display coordinates.  And Menu has a public handle that 
allows for a platform-specific means of locating the Menu in display 
coordinates.  This leaves MenuItem, TabItem,  TableColumn, and Tracker, at 
least right now, unfindable.

The problem, then, lies in both the non-uniformity of these strategies to 
obtain something as simple as display coordinates and the lack thereof for 
Widgets of type MenuItem, TabItem, TableColumn, and Tracker.  We would like to 
request the addition of method(s) that, given an instance of a Widget, would 
return an org.eclipse.swt.graphics.Rectangle representing the bounding box for 
the Widget in Display coordinates.

And a final note.  Methods like getLocation, getBounds, and set/getFocus are 
only available to particular sub-classes of Widget, but these methods are 
applicable to ALL (or nearly all) Widget subclasses.  It would be worthwhile, 
then, to include these methods in the abstract class Widget and handle special 
cases by overriding these methods in Widget sub-classes.  I am aware that these 
operations- particularly set/getFocus- may not be applicable to particular 
Widget sub-types.  In these cases, however, it would be logical to execute the 
parent's appropriate method instead.  For example, we would give focus to the 
Widget's parent, or return the bounding box for the parent, if it were not 
possible to do so for a particular Widget sub-type itself.
Check the map API in Display:
public Rectangle map (Control from, Control to, Rectangle rectangle) 

You should call this API to map the coordinates from a Control to the Display, 
you should also give a rectangle (getBounds) and not a point (getLocation) to 
do this kind of operation. It's important if you are running on a Mirrored 
coordinates system (arabic/hebrew).

Still, this does not solve all your problems...

SN to advise.

Could you please provide getBounds() for all Widget's? Why I ask:

In order for an SWT automation tool to programmatically interact with
a target, it must be able to

0 use information provided by the coder to identify the target

1 get the size or position of the target

2 generate native events using those coordinates

Fortunately

* task 0 is done by navigating the graphical hierarchy

* task 1 is easy if your target is a Control

* there are at least two ways to do task 2 (using abbot.swt.Robot, in

http://sourceforge.net/projects/abbot

  or Sebastian Peleato's API)

The problem is that not all targets are Control's, especially if one
wishes to automate menu picking/navigation. We have workarounds, but
they are platform-specific (which complicates tool building and
deployment), underperformant (which degrades the user's experience),
and just plain kludgey.

Can you please provide getBounds(), or as similar API as possible, for
all Widget's, not just Control's? In 3.0?

As a member of the WSAD performance team, I strongly support Tom / Kevin's 
request.  Today we are using XDE Tester, which only supports a "black box" 
approach.  It requires training and finessing to keep the scripts running; the 
support for Eclipse 3.0 is pending.  I believe that Abbot / Costello for SWT 
would be a better fit for our needs and those who hope to systematically track 
performance regressions.

Background: Gary Karasiuk, Sonia Dimitrov, and myself recently finished some 
work to integrate our performance plug-in, ptracker, into the Eclipse build.  
The goal is to supplement the JUnit launcher used today with one that captures 
key performance metrics with each build.  This will allow the Eclipse team to 
find performance regressions the day after they occur (not weeks!), saving 
countless hours of post-build detective work.

Abbot / Costello is a natural extension of this effort.  Today our performance 
testcases are limited to what can be executed in JUnit.  These testcases, 
while very good at detecting regressions in functionality, only approximate 
the true user experience.  If the underlying support for Abbot is completed, 
myself and others on our team will provide high-level **real** user scenarios 
to the Eclipse build team to fill out the incomplete performance regression 
capability.  This obviously won't occur if we are reliant exclusively on XDE 
Tester as we are today.

SWT's use of native widget makes 80% of Abbot's job easy.  However, the last 
20% that is missing makes its usage klunky, awkward, slow, and unreliable.  We 
would really like to see SWT supported as a first-class citizen among 
automated testing tools, and Abbot / Costello seems to be the obvious choice.
We have attempted various workarounds to this problem (the lack of getBounds() 
for non-Control widgets)- for example, making an SWT API call to setSelection
(boolean) in a testcase instead of actually generating a mouse-click input 
event.  This, however, is unacceptable, as it makes for testcases that do not 
accurately reflect a realistic user scenario.  We've also tried making 
approximations of a widget's size and location based on its text/image content, 
but this incomplete approach is not a final solution either.

The lack of getBounds() for MenuItems is particularly debilitating.  Currently, 
the only way to automate MenuItem selection is to do so via accelerators and 
keystrokes.  However as Tom mentioned above, this method cannot consistently 
work across platforms and applications and is flimsy at best.

I'm beginning work on a patch for MenuItem.getBounds(), starting with win32.  
It appears that wrapping the native win32 method GetMenuItemRect(HWND, HMENU, 
UINT, LPRECT) should (essentially) provide the functionality we need.  And 
hopefully a similar approach will work with the other supported windowing 
systems.

The patch should allow Abbot to deal with MenuItems in much the same way as it 
does Controls, and the added consistency in implementation will result in a 
more reliable and capable testing tool.  In particular, testcases will be able 
to include menu navigation via mouse clicks.  This method is certainly more 
representative of real user interaction than what Abbot's current capabilities 
allow.   

HOWEVER, there will still be important non-Control widgets that lack a getBounds
() method- TableItem, TreeItem, CoolItem, ToolItem, and Scrollbar- basically 
any widget that a user can click that does not already provide a getBounds() 
method.  
Disregard the last paragraph of my most previous post- it doesn't reflect the 
most recent SWT API.  The amended list of widgets that lack a getBounds() 
method should be- MenuItem, TableColumn, Tab, and ToolItem.  I'll be working on 
a patch for all of these in the coming week.
Created attachment 10629
Initial patch for various getBounds() methods

On Windows, I've implemented the following:

	- TableColumn.getBounds()
	- TabItem.getBounds()
	- MenuItem.getBounds()

The first two have no restrictions; MenuItem.getBounds(), however, currently
only works for items in bar menus, as I am only able to obtain the size of a
given MenuItem in a cascade or popup menu but not its location.  In particular,
GetMenuItemRect doesn't appear to work as advertised in the win32
documentation, and I'm not sure where to go from here.	Any help with this
particular problem would be greatly appreciated.

The attached zip file contains fixes bound by "//TODO: Begin patch" and
"//TODO: End patch".  Changes were made in org.eclipse.swt.internal.win32.OS
and org.eclipse.swt.widgets.{MenuItem,TableColumn,TabItem}.  I will also be
passing along an Abbot-driven JUnit test case that demonstrates the new
functionality to Dan Kehn.
Created attachment 10676
MenuItem.getBounds() fix

Includes everything in the previous patch(10629), plus a new-and-improved
MenuItem.getBounds() for win32 with no restrictions.  It now works on items in
bar, cascading, and popup style menus.
*** Bug 39184 has been marked as a duplicate of this bug. ***
Can provided Widget-location patches be rolled into SWT 3.0?
(Not M9, but 3.0 final.) Why I ask:

Automation is important. SWT's failure to provide the ability to
locate (and therefore drive) all Widget's presents a competitive
disadvantage, given that AWT/Swing allows one to find all its
Component's.

If SWT (the organization) fails to provide this, automators will need
to patch SWT (the code), minimally for menuing. An automation tool has
gotta have menuing: there's just too much tooling that's inaccessible
without it. (E.g. a friend in another IBM group wants to start testing
a GEF-based component, but can't because the component allows a user
to interact with its figures only through context menus.) We will
eventually need the other non-Control Widget's, but we need menuing
now.

So I'm wondering, how can we get this into 3.0? Note that

* academic summer being upon us, my group has some more resources
  available, so we can assist with this task.

* I'm frankly skeptical regarding the claim made in

https://bugs.eclipse.org/bugs/show_bug.cgi?id=39184

  that this can't

&gt; happen for 3.0 because we are API frozen (unless mountains are moved
&gt; with the PMC).

  for 2 reasons:

· This is new API. Since no one's currently using it, how can it
  break anyone? Feel free to deprecate the API, "label as hazardous,"
  whatever, to protect the innocent.

· Is there now, or has there ever been, any positive argument for
  not implementing getBounds() for {MenuItem, TableItem, TreeItem,
  CoolItem, ToolItem}? I.e. "we should not implement getBounds() for
  these classes, because &lt;your positive argument here/&gt;"? I suspect
  not, but I could be wrong.

Note also that we will cheerfully kiss rings, move mountains, etc with
the PMC as required--but I frankly don't see that as a valid objection
to enabling this API, which folks need ... given that an (admittedly
partial) implementation is being handed to SWT. So ... how best to get
this into 3.0 final?


*** Bug 48341 has been marked as a duplicate of this bug. ***
Created attachment 11493
SWT patch for MenuItem.getBounds() that returns an empty rectangle for invisible items
Created attachment 11498
Test case showing getBounds() for visible and nonvisible menu items
The patch I just posted (SWT patch for MenuItem.getBounds() that returns an
empty rectangle for invisible items) is the same as the earlier patch that Kevin
wrote, except for an update to MenuItem.getBounds() that causes it to return an
empty rectangle instead of garbage in the case when the menu item is not
visible.  This is done by checking the return value of GetMenuItemRect, which
indicates whether menu item bounds were able to be calculated.

getBounds() returns coordinates that are relative to the client area of the
Decorations that is the parent of the Menu that the MenuItem belongs to.  This
means that getBounds() can return a rectangle that has negative coordinates. 
This is seen on Windows: the y-coordinate returned will be negative for menu
items on the menu bar since these items lie above the client area.  This does
not pose a problem, however, since these relative coordinates can easily be
turned into screen coordinates through Control.toDisplay().  Therefore in all
cases that we have tested this patch returns correct bounds in a manner that is
consistent with getBounds() on other widgets that implement getBounds().

I have also posted a test case that dynamically displays the result of getBounds
for several MenuItems.  In running the test it is possible to see how the
bounding rectangle changes from empty to nonempty as menu items are revealed and
hidden.

I have been thinking more about MenuItem.getBounds() and I'm coming to the 
conclusion that we shouldn't implement it (instead we should add a new API 
that returns widget bounds in Display coordinates).  The problem is that on 
the Macintosh, the menu bar is not in the shell.  We can fake this but it 
won't match the operating system and will have the amazing property that the 
coordinates will be wrong when the shell is moved.  This will happen because 
when the shell is moved but on the Macintosh, the menu bar stays in the same 
location instead of moving with the shell like the other platforms.  I'm stuck 
on an API name that means "get the bounds in the display coordinate system".  
At any rate, the API would be exactly what you need, no coordinate mapping.
Re: Comment #14

Under the Monty Python category, "And now for something completely 
different..."

I believe you're correct Steve.  Thinking about it a bit further, two viable 
approaches come to mind: (a) a new method "getBoundsRoot" (borrowed from 
similar name in VA/ST, where "root" means screen) as you suggest, or (b) an 
adapter.  The advantage of (b) is that it gets SWT out of the loop entirely, 
since any framework could provide a set of adapters to the APIs we desire.  
One method in Widget does it all:

  public Object getAdapter(Class adapter) {
    return Platform.getAdapterManager().
      getAdapter(this, adapter);  // note Platform reference... see PS below
  }

Now that core implements the extension 
point "org.eclipse.core.runtime.adapters" (it's new and yes, I've tested this 
in other code and it works as advertised), this is a cost-free alternative 
from a performance perspective (i.e., before there was no means of registering 
an adapter except through code, forcing your plug-in's activation).  Then 
Abbot for SWT can handle this little problem on its own in a nice, clean, 
architected way.  If you want to move it later into the SWT layer, great, but 
there's certainly no urgent need.

Since this extension point is relatively new, I'll provide an example of what 
it would look like in the Abbot4SWT implementation:

  &lt;extension point="org.eclipse.core.runtime.adapters"&gt;
    &lt;factory 
        adaptableType="org.eclipse.swt.widgets.Widget"
        class="org.abbot4swt.WidgetAdapterFactory"&gt;
      &lt;adapter type="org.abbot4swt.WidgetCoordinateMapper"/&gt;
    &lt;/factory&gt;
  &lt;/extension&gt;

The Abbot for SWT folks provide WidgetCoordinateMapper and 
WidgetAdapterFactory.  If there are exception cases (e.g., MenuItem), they 
either (a) handle it in their WidgetCoordinateMapper with instanceof, or (b) 
provide a widget-specific adapter (e.g., MenuItemCoordinateMapper).

It also opens the door to future adaptation should we discover "SWT 
shortcomings" later.  So how about it, one little method?  Tempted?  :-)  

PS: Of course, one gotcha of this approach is the reference to Platform... 
which presupposes the Eclipse platform runtime is present.  That would mean 
either reflection (returning null if not found) or a fragment.  Not perfect, 
but extensible and gets SWT out of the discussion, now and in the future.
Steve Northover  2004-06-03 09:43 -------
&gt; I have been thinking more about MenuItem.getBounds() and I'm coming
&gt; to the conclusion that we shouldn't implement it (instead we should
&gt; add a new API that returns widget bounds in Display coordinates).

That would be great! I continue to believe that API should be
available to 

* get the bounds of any Widget, just as one can get the bounds of any
  JComponent. 

* return consistent co-ordinates for any Widget

It's the inconsistency of the present situation

Thomas L Roche/Raleigh/IBM@IBMUS 05/28/2004 08:38 PM
&gt;&gt; Widget child  has getBounds()?
&gt;&gt; ------------  ----------------
&gt;&gt; Caret         yes,
&gt;&gt;               parent == null ? relative to display : relative to parent

&gt;&gt; Control       yes,
&gt;&gt;               parent == null ? relative to display : relative to parent

&gt;&gt; DragSource    no, but has getControl()

&gt;&gt; DropTarget    no, but has getControl()

&gt;&gt; Item          no

&gt;&gt; Menu          no, we workaround with getParent().getBounds()

&gt;&gt; ScrollBar     yes, no javadoc but looks relative to its parent

&gt;&gt; Tracker       no, but has computeBounds()

&gt;&gt; Tray          no

that most annoys.

&gt; The problem is that on the Macintosh, the menu bar is not in the
&gt; shell. We can fake this but it won't match the operating system and
&gt; will have the amazing property that the coordinates will be wrong
&gt; when the shell is moved. This will happen because when the shell is
&gt; moved but on the Macintosh, the menu bar stays in the same location
&gt; instead of moving with the shell like the other platforms.

I believe we can live with this. We have never asked for completeness
on all platforms (much less API contracts engraved on tablets)--we
understand that some platforms will do things differently. However it
is difficult to imagine a platform that did not know the bounds of a
thing it was drawing, hence providing bounds-getting API (by whatever
name) on Widget makes sense.

Dan Kehn 2004-06-03 11:28 -------
&gt; Thinking about it a bit further, two viable approaches come to mind:
&gt; (a) a new method "getBoundsRoot" (borrowed from similar name in
&gt; VA/ST, where "root" means screen) as you suggest, or (b) an adapter.

or (c) both.

&gt; The advantage of (b) is that it gets SWT out of the loop entirely,
&gt; since any framework could provide a set of adapters to the APIs we
&gt; desire.

True, but this is a case where the existing SWT API is noticeably
fragmented. (c) is best, but (a) is preferable to (b).

&gt; PS: Of course, one gotcha of this approach is the reference to
&gt; Platform... which presupposes the Eclipse platform runtime is
&gt; present.

Which is gonna hose testing standalone (non-platform-resident) SWT
UIs, no? (b) alone is likely to be insufficient.

Along the same line of implementing getBounds() in various widgets, there are
other widgets that implement getBounds() in ways that are less than ideal for
automated testing.  One of these is TableItem.getBounds(int).  This returns a
bounding box for the entire item, which for purposes of consistency is probably
what should happen.  However, selecting an item by clicking on it can only be
done by clicking on the table item's text or image.  There is no way to get the
bounds of the area that can be clicked (presumably the union of the image and
text bounds).  Are there issues that would make providing this in the API
(something like TableItem.getClickableBounds(int)) undesirable?  The only
workaround that I can foresee for testing is to check the style of the column
the text is in and give a default location to click on based on whether it is
left, right, or center.

Some platforms allow you to click anywhere on the same line.  In general, it's 
unspecified where you click and with which button.
Steve N., Is there a chance to make progress on this for test tool enablement 
in 3.0.1?  Could you set the target milestone for 3.0.1 or 3.1 as appropriate?

I will mark it when I we have finished assessing the rest of the items.
Steven Wasleski  2004-07-20 14:32 -------
&gt; Could you set the target milestone for 3.0.1 or 3.1 as appropriate?

Extra points for 3.0.1! Patching is a drag :-(

This item is still under investigation and will not be added to 3.0.1.
Steven Wasleski  2004-07-20 14:32 -------
&gt;&gt; Could you set the target milestone for 3.0.1 or 3.1 as appropriate?

Veronika Irvine 2004-08-25 12:16 -------
&gt; This item is still under investigation and will not be added to
&gt; 3.0.1.

Could you set the target milestone?

I committed a description of our current patches to the abbot.swt documentation

http://cvs.sourceforge.net/viewcvs.py/*checkout*/abbot/abbot.swt/doc/swt/patchingSWT.txt?rev=1.7

Same content is available in slightly different form from

http://sourceforge.net/mailarchive/message.php?msg_id=9665074

Thanks.  I was actually working on the menu part of this last week but could 
find no way for the Mac to give back the coordinates of items in the menu 
bar.  It seems that owner draw isn't honoured for Mac menu bars.  I tried 
reaching and getting the MenuBarHandle and looking at the "lastRight" 
and "menuLeft" fields of the substructures.  The documentation says that they 
aren't when SetRootMenu() is used but I was desparate.  I tried every 
kEventMenu that there was including the amazing kEventMenuGetFrameBounds but 
this is only called when the user has clicked on a menu bar item.

How do automated testing applications move the mouse into the Mac menu bar and 
hittest the items there?  I googled for CGPostMouseEvent() hoping to find 
example code that did this.  Even MenuSelect(), the Mac call that runs the 
menu bar for the user takes a mouse location.

Andre?
If it turns out to be impossible to get the actual bounds for a component, you may have to rely on 
programmatically activating the component given a proper specification of the final target.  This 
unfortunately leaves out actual display operation of the UI component, which sometimes needs to be 
tested, but probably the more common case is needing to be able to activate a given menu item.

Mac OSX uses AWT components as proxies for the equivalent Swing menu bits when the 
useScreenMenuBar property is set (which it should be for any OSX java app).  The AWT menu items 
provide no location information (actually rendering the location information of the original Swing 
components invalid), so they have to be driven programmatically.

Unfortunately, I don't know enough about native Mac OS programming to indicate whether the location 
info is available or not...
Hi Tom, I checked out your patches.  It seems to me that none of them need to 
be in SWT classes.  For example, consider the hypothetical method 
SWT_PATCH.TabItem_getBounds():

public Rectangle TabItem_getBounds(TabFolder parent){
   int index = parent.indexOf(this);
   if (index == -1) return new Rectangle (0, 0, 0, 0);
   RECT rect = new RECT();
   OS.SendMessage( parent.handle,
           OS.HDM_FIRST + 7 /*OS.TCM_GETITEMRECT*/,
           index,
           rect);
   int width = rect.right - rect.left;
   int height = rect.bottom - rect.top;
   return new Rectangle(rect.left,rect.top,width,height); 
}

The advantage of this is that you don't need to patch SWT with your changes 
and the work needed to port them to other platforms is isolated in one class.  
The disadvantage is that it is ugly as hell.

Hopefully we can implement what you need and the issue becomes moot.
Comments From steve_northover@ca.ibm.com  2004-11-23 10:52 -------
&gt; It seems to me that [none of the abbot.swt patches] need to be in
&gt; SWT classes. For example, consider the hypothetical method
&gt; SWT_PATCH.TabItem_getBounds():

&gt; public Rectangle TabItem_getBounds(TabFolder parent){
&gt;    int index = parent.indexOf(this);
&gt;    if (index == -1) return new Rectangle (0, 0, 0, 0);
&gt;    RECT rect = new RECT();
&gt;    OS.SendMessage( parent.handle,
&gt;            OS.HDM_FIRST + 7 /*OS.TCM_GETITEMRECT*/,
&gt;            index,
&gt;            rect);
&gt;    int width = rect.right - rect.left;
&gt;    int height = rect.bottom - rect.top;
&gt;    return new Rectangle(rect.left,rect.top,width,height); 
&gt; }

&gt; The advantage of this is that you don't need to patch SWT with your
&gt; changes

which would be nice, but ...

&gt; and the work needed to port them to other platforms is isolated in
&gt; one class.

... that keeps the platform port effort isolated onto the shoulders of
our zero-FTE-headcount OSS project. Would it not be so much more
securely borne by you SWT professionals ?-) After all, the Sun folks
don't make us support AWT/Swing API ...

Plus, it's s/one class/one class per patched widget/, and rewriting the
*Finder and *Tester classes that use them, but those are minor concerns
relative to maintaining the proper (IMHO, YMMV) separation of concerns/
effort.

&gt; Hopefully we can implement what you need and the issue becomes moot.

That's what _I'm_ hoping :-)

Given that you are forced into patching, why not patch in the most optimal 
way?  Put all the work arounds in a single (ugly) class that is outside of the 
library rather than adding them as methods to the classes where they belong.  
That way, no one changes anything and odds are good that your code will 
continue to work when the next release of the library ships.  There are more 
good reasons for this.  Suppose that when the methods are added, they return 
something different or use a different coordinate system.  You can isolate 
those changes in the ugly class.  Also, suppose that when the bug is fixed or 
the feature implemented, someone applies your patches over the fix by 
mistake.  That seems wrong.  You should be testing the fixed code, not the 
patch.  Imagine that the bug never gets fixed.  You are no worse off and 
nobody needs to patch anything.

This just seems like good software engineering to me.
Additional Comment #27 From Steve Northover  2004-11-23 10:52 -------
&gt;&gt;&gt; consider the hypothetical method SWT_PATCH.TabItem_getBounds():

&gt;&gt;&gt; public Rectangle TabItem_getBounds(TabFolder parent){
&gt;&gt;&gt;    int index = parent.indexOf(this);
&gt;&gt;&gt;    if (index == -1) return new Rectangle (0, 0, 0, 0);
&gt;&gt;&gt;    RECT rect = new RECT();
&gt;&gt;&gt;    OS.SendMessage( parent.handle,
&gt;&gt;&gt;            OS.HDM_FIRST + 7 /*OS.TCM_GETITEMRECT*/,
&gt;&gt;&gt;            index,
&gt;&gt;&gt;            rect);
&gt;&gt;&gt;    int width = rect.right - rect.left;
&gt;&gt;&gt;    int height = rect.bottom - rect.top;
&gt;&gt;&gt;    return new Rectangle(rect.left,rect.top,width,height); 
&gt;&gt;&gt; }

&gt;&gt;&gt; The advantage of this is that you don't need to patch SWT with
&gt;&gt;&gt; your changes

Additional Comment #28 From Tom Roche  2004-11-23 12:28 -------
&gt;&gt; which would be nice, but ...

&gt; and the work needed to port them to other platforms is isolated in
&gt; one class.

&gt;&gt; ... that keeps the platform port effort isolated onto the shoulders
&gt;&gt; of our zero-FTE-headcount OSS project. Would it not be so much more
&gt;&gt; securely borne by you SWT professionals ?-) After all, the Sun
&gt;&gt; folks don't make us support AWT/Swing API ...

Comments From steve_northover@ca.ibm.com  2004-11-23 12:58 (rearranged)
&gt; Given that you are forced into patching, why not patch in the most
&gt; optimal way?

Your rhetorical question is correct (not so sure about this sentence,
though :-). But I keep wondering {why I am, how long I will continue
to be} forced into patching this.

&gt; Put all the work arounds in a single (ugly) class that is outside of
&gt; the library rather than adding them as methods to the classes where
&gt; they belong. 

OK, in order to patch this way, what's the best locus for that class?
IIUC the patches are minimally platform-dependent, and maximally
SWT-version dependent. Remember, I'm trying to isolate abbot.swt (and
abbot.swt.gef, etc) users from "raw" SWT--how best to isolate
abbot.swt.* from these dependencies? A separate plugin?

&gt; That way, no one changes anything and odds are good that your code
&gt; will continue to work when the next release of the library ships.
&gt; There are more good reasons for this. Suppose that when the methods
&gt; are added, they return something different or use a different
&gt; coordinate system. You can isolate those changes in the ugly class.

Yes, I understand the goodness of Adapter and Decorator ...

&gt; Also, suppose that when the bug is fixed or the feature implemented,
&gt; someone applies your patches over the fix by mistake. That seems
&gt; wrong.

Oh, it will be--once you fix SWT, I'm gonna pull the patches off
SourceForge so fast the servers will spin :-)

&gt; This just seems like good software engineering to me.

... and work for me. FWIW I'd much rather be working on enabling users
to write (and hopefully TDD) SWT tests, and getting more coverage for
my own tests, than adapting SWT to work with j.a.Robot as AWT does
already. That being said, if it'll save me from patching again, I'll
do it. Note that my assumption was that, having patched once, the
concept would be proven, and I wouldn't hafta patch again ...

Ok, I give up.  I was trying to help you in case we don't get to this for 3.1. 
There is an art to ugly things.  If you can't see it, then you never will.
Created attachment 16239
swt_patch3.zip for eclipse 3.1.M3

This is an EXACT port of the changes made to swt-3.0.1 in swt-3.1.M3.

Having this, or a similar fix, in the eclipse 3.1 line would be VERY
helpful. Thank you to everyone who has already done all the work on
this issue.

If you download this patch, please, post a note showing your interest
in the fix.
I'm still stuck on the Mac.  If there is no possible way to get the bounds of 
a menu item in a Mac menu bar, then MenuItem.getBounds() can never be SWT API.

Andre?  Where are you?
&lt;&lt; If there is no possible way to get the bounds of a menu item in a Mac menu 
bar, then MenuItem.getBounds() can never be SWT API. &gt;&gt;

It's not unprecedented that GUI whitebox testers have platform-specific 
limitations. So although it's not ideal, you could throw 
UnsupportedOperationException. 
The thinking is as follows:  There are automated GUI testing tools on the 
Mac.  I can't believe that they don't test menus in the menu bar.  What do 
they do?  Whatever they do, we should do the same thing rather than offering 
API that can't be implemented.  I'm hoping that there's something I'm missing 
and that we will be able to make MenuItem.getBounds() work on a Mac.
A quick search on developer.apple.com shows that the MacOS has native calls to determine the bounds 
of a menu item.

The comments I made previously about the bounds being unavailable applies only to the AWT menus 
providing no API to determine their location (this applies to *all* platforms).  When OSX uses AWT 
menus as proxies for Swing menus, the Swing items' bounds information becomes invalid.
Timothy, can you post the URL to the Mac native calls?
Sorry Steve, I forgot about this PR after some unsuccessful investigation.
I'll spend a "Support Incident" with ADC if nothing useful shows up until tomorrow.
I couldn't find any API to calculate the bounds of a menu item directly, but I think it should be possibIe 
to use the menu definition function for this.
I haven't tried this, but you could send a "kMenuCalcItemMsg" to the menuProc where you pass in the 
menuItem. The parameter menuRect will contain the item bounds on return.

Another (ugly) approach could be probing:
you could generate screen coordinates that run from the left to the right screen bound and an 
increment of about 10 with a vertical position of menuBar.height/2 and map these coordinates to menu 
items with available API.
I already had a go at probing (yetch) and failed.  It seems that the only time 
you can ask this information is when a drop down menu is pulled down.  Then, 
inside the "cascade callback", you can get the bounds of the item that was 
selected.  This (of course), is too late.  I have workspace full of unreleased 
hack that I am sitting on that I can make available for you to try,

Do you know how the menu definition function differs from carbon events?  I 
saw kMenuCalcItemMsg but thought that because we didn't use a custom menu 
definition that it didn't apply.  Also I had no clue how to send a fake menu 
definition function event like kMenuCalcItemMsg.  Also it seemed that this 
event applied to MenuRefs, not MenuBarHandles (or the various things inside 
them that represent the menu bar).

Please spend a support incident with ADC on this as it is holding up the API.
OK, will do.
(Shouldn't we create a new bug report for this? Whenever we add a new comment, most likely we are 
spamming a lot of people probably not too interested in the Mac...)
I don't think so.  If people are uninterested in the progress on this bug 
report, they can remove themselves.
The trick is to use the Accessibility API.

After some hacking I came up with the following piece of code
which does what you are looking for (I passed in the SWT menubar handle):

void dumpMenubarItemBounds(MenuRef menu) {
	AXUIElementRef ref= AXUIElementCreateWithHIObjectAndIdentifier((HIObjectRef)menu, (UInt64)0);
	if (ref != NULL) {
		int i= 0;
		CFArrayRef children;
		fprintf(stderr, "menubar item bounds:\n");
		AXUIElementCopyAttributeValue(ref, kAXChildrenAttribute, (CFTypeRef*) &amp;children);
		
		CFIndex count= CFArrayGetCount(children);
		for (i= 0; i &lt; count; i++) {
			CFTypeRef valueRef;
			CGPoint position;
			CGSize size;
			CFStringRef title;
 			
			AXUIElementRef menuItem= (AXUIElementRef) CFArrayGetValueAtIndex(children, i);

			AXUIElementCopyAttributeValue(menuItem, kAXTitleAttribute, (CFTypeRef*) &amp;title);
			const char *t= CFStringGetCStringPtr(title, kCFStringEncodingMacRoman);
		
			AXUIElementCopyAttributeValue(menuItem, kAXPositionAttribute, &amp;valueRef);
			AXValueGetValue(valueRef, kAXValueCGPointType, &amp;position);
 
			AXUIElementCopyAttributeValue(menuItem, kAXSizeAttribute, &amp;valueRef);
			AXValueGetValue(valueRef, kAXValueCGSizeType, &amp;size);
            	            	
			fprintf(stderr, "  %d %s: x:%d y:%d w:%d h:%d\n", i, t, 
				(int)position.x, (int)position.y, (int)size.width, (int)size.height);
            	
			CFRelease(valueRef);
			CFRelease(title);
		}
	 	CFRelease(children);
		CFRelease(ref);
	}
}

Thanks!
Andre, I added the following code in Menu.java (plus the natives to OS):

public Rectangle[] getItemBounds () {
	if ((style &amp; SWT.BAR) != 0) return null;	
	int menuRef = handle;
	int ref = OS.AXUIElementCreateWithHIObjectAndIdentifier (menuRef, (long)0);
	if (ref != 0) {
		int [] children = new int [1];
		System.out.println("XAERROR: " + OS.AXUIElementCopyAttributeValue (ref, 
OS.kAXChildrenAttribute (), children));
		int count = OS.CFArrayGetCount (children [0]);
		Rectangle [] result = new Rectangle [count];
		int [] valueRef = new int [1];
        CGPoint position = new CGPoint ();
        CGSize size = new CGSize ();
		for (int i = 0; i &lt; count; i++) {
			int menuItem = OS.CFArrayGetValueAtIndex (children [0], i);
            OS.AXUIElementCopyAttributeValue (menuItem, OS.kAXPositionAttribute(), valueRef);
            OS.AXValueGetValue (valueRef [0], OS.kAXValueCGPointType, position);
            OS.CFRelease (valueRef [0]);
            OS.AXUIElementCopyAttributeValue (menuItem, OS.kAXSizeAttribute(), valueRef);
            OS.AXValueGetValue (valueRef [0], OS.kAXValueCGSizeType, size);
            OS.CFRelease (valueRef [0]);
            result [i] = new Rectangle ((int)position.x, (int)position.y, (int)size.width, (int)size.height);
		}
		return result;
	}
	return null;
}

But when I execute it I get an AXERROR equals to -25211 (kAXErrorAPIDisabled), do you know how to 
fix this ?
Interesting, for security reasons Apple disables the Accessibility API if the user hasen't enabled
the "Enable access for assistive devices"  option in System Preferences (I always have this option on to 
see focus borders everywhere).
You can turn it on via the "System Preferences &gt; Universal Access &gt; Enable access for assistive devices"

Sorry, I didn't know that and had to Google for it...
it looks like we can't use this API then :-(

Why? The API is for whitebox testing.
I don't see a problem to require that the option is turned on.

Some call it a "platform reality" :-)
Felipe Heidrich 2004-12-03 16:20 -------
&gt;&gt;&gt;&gt;&gt; Andre, I added [Menu.getItemBounds()] (plus the natives to OS):

&lt;snip&gt;

&gt;&gt;&gt;&gt;&gt; But when I execute it I get an AXERROR equals to -25211
&gt;&gt;&gt;&gt;&gt; (kAXErrorAPIDisabled), do you know how to fix this ?

Andre Weinand 2004-12-03 17:00 -------
&gt;&gt;&gt;&gt; Interesting, for security reasons Apple disables the
&gt;&gt;&gt;&gt; Accessibility API if the user hasen't enabled the "Enable access
&gt;&gt;&gt;&gt; for assistive devices" option in System Preferences (I always
&gt;&gt;&gt;&gt; have this option on to see focus borders everywhere). You can
&gt;&gt;&gt;&gt; turn it on via the "System Preferences &gt; Universal Access &gt;
&gt;&gt;&gt;&gt; Enable access for assistive devices"

&gt;&gt;&gt;&gt; Sorry, I didn't know that and had to Google for it...

Felipe Heidrich 2004-12-03 17:14 -------
&gt;&gt;&gt; it looks like we can't use this API then :-(

Andre Weinand 2004-12-03 17:27 -------
&gt;&gt; Why? The API is for whitebox testing.
&gt;&gt; I don't see a problem to require that the option is turned on.

Andre Weinand 2004-12-03 17:40 -------
&gt; Some call it a "platform reality" :-)

Agreed: it's realistic to assume the user will need to do other things
to "instrument," or enable testability for, any given platform @
runtime. As long as it compiles, and doesn't break other function, I
don't see a problem with, e.g., javadoc'ing or FAQ'ing similar
requirements--"call at your own risk." It Would Be Nice if s/he didn't
hafta, but that may be the price to pay for automation.

Display.setCursorLocation(point) does nothing on some platforms, so maybe this 
method could nothing, or return an empty rectangle when accessibility is 
disabled.
An empty rectangle isn't an option when the option is disabled.  How about 
trying Apple again for another approach?
Yes, I've contacted DTS and for security reasons there is no other approach.
The Mac has been around since 1984.  It is 2004 (almost 2005).  HIObject is 
new to OS 10.x.  In all those years nobody has written a GUI testing tool that 
pulls down a menu bar menu and selects an item?  Andre, can you please ask 
again how GUI testing tools perform this action?  The issue here is that 
having an API that fails and requires the user to change something on the 
control panel is not a good solution.

Thanks.
Steve, so what is the issue now?
- getting API so that SWT can implement Menubaritem.getBounds(), or
- driving the Mac UI from another process?

Whether GUI testing tools existed before MacOS X (1984-2001) doesn't really matter since they could 
easily patch the OS and wouldn't run anyway on MacOS X.

The first hope is that we could get API to implement MenuItem.getBounds() that 
doesn't require the user to set something in the control panel.  If that can't 
be done, then the next thing is to investigate how this kind of action is 
normally done on the Mac.  Assuming we found something, we would then consider 
portable SWT API that exposed this capability (we would need to ensure that it 
could be implemented on the other platforms).  It's not great, be we'd be 
portable and could move on.

Again, my first choice would be MenuItem.getBounds().  It's very frustrating 
because I have an implementation for everything but the menu bar.
Comment #55 From Steve Northover  2004-12-06 10:49 -------
&gt;&gt;&gt; In all those years nobody has written a GUI testing tool that pulls
&gt;&gt;&gt; down a menu bar menu and selects an item?

Comment #56 From Andre Weinand 2004-12-06 11:15 -------
&gt;&gt; Whether GUI testing tools existed before MacOS X (1984-2001) doesn't
&gt;&gt; really matter

True. How far back do we hafta support? Note

http://www.apple.com/applescript/uiscripting/
&gt; Mac OS X v10.3 includes support for the control of the computer's
&gt; graphic user interface via AppleScript.

&gt; Graphic user interface control is performed by an updated version of
&gt; the System Events application. By addressing the System Events
&gt; application, AppleScript scripts can select menu items, push
&gt; buttons, enter text into text fields, and generally control the
&gt; interfaces of most non-Classic applications.

&gt; The following pages detail the process of enabling and using the GUI
&gt; Scripting architecture.

... but, as Andre mentioned

http://www.apple.com/applescript/uiscripting/01.html
&gt; The GUI Scripting architecture is based upon the Mac OS X
&gt; accessibility frameworks that provide alternative methods of
&gt; querying and controlling the interfaces of the OS and applications.

&gt; By default, the accessibility frameworks are disabled. An
&gt; administrative user can enable them by clicking the checkbox labeled
&gt; "Enable access for assistive devices" in the Universal Access System
&gt; Preference pane and entering their password in the [subsequent]
&gt; authentication dialog.

&gt; Once the accessibility frameworks have been activated, AppleScript
&gt; can be used to query and control the user interface of most
&gt; applications. Scripted actions are performed by addressing the
&gt; System Events application which has a special script suite for
&gt; communicating with the GUI Scripting architecture.

Is there API to query or set the Universal Access System?

Comment #55 From Steve Northover  2004-12-06 10:49 -------
&gt;&gt;&gt; In all those years nobody has written a GUI testing tool that pulls
&gt;&gt;&gt; down a menu bar menu and selects an item?

Comment #56 From Andre Weinand 2004-12-06 11:15 -------
&gt;&gt; Whether GUI testing tools existed before MacOS X (1984-2001) doesn't
&gt;&gt; really matter

&gt;&gt; True. How far back do we hafta support? Note

The Mac menu bar is not new to 10.x.  Can anyone tell me what API pre-10.x GUI 
testing applications did?  Mac API is backwards compatible.
Re: comment #55:
I've sent your request to DTS.

Re: comment #59:
&gt; Is there API to query or set the Universal Access System?
Yes, and the example application
   http://developer.apple.com/samplecode/UIElementInspector/UIElementInspector.html
uses it to make the user enable the Universal Access option.

Re: comment #60:
&gt; Mac API is backwards compatible.
Yes, if you run your pre-Carbon apps in Classic mode (MacOS 9 running inside MacOS X).
Native MacOS X apps must only use Carbon which is a smaller subset of the original Mac Toolbox.
comment #59:
&gt;&gt; Is there API to query or set the Universal Access System?

comment #61
&gt; Yes, and the example application

&gt; http://developer.apple.com/samplecode/UIElementInspector/UIElementInspector.html

&gt; uses it to make the user enable the Universal Access option.

&lt;Do I need XCode to read
UIElementInspector/UIElementInspector.app/Contents/MacOS/UIElementInspector
?/&gt;

Hopefully "DTS" will come up with a cleaner solution, but {if not, for
the nonce} why not support Carbon (do we even support Classic or
Cocoa?) like

if (Universal Access not set) {
  if (user not administrative)
    throw SWTException // ERROR_USER_LACKS_PERMISSION
  set it
}
return bounds

?

Re comment #62:
You can find the source in the files ending in .h and .m
UIElementInspector/UIElementInspector.app/Contents/MacOS/UIElementInspector
is the executable. You don't want to read it :-)
One more thing to patch: could SWT make ScrollBar.getBounds() public?
I notice, thanks to

http://sourceforge.net/tracker/index.php?func=detail&amp;aid=1080952&amp;group_id=50939&amp;atid=461490

that if I do

export WS="win32"
export PLATFORM="x86"
export DEVSPACE="/d/eclipse/devspaces/scratch"
# outside of eclipse? (automate this) copy the patchfiles here
export PATCHESPATH="$DEVSPACE/patchfiles"
export INPUT="eclipse-SDK-3.1M3-$WS.zip"
export ZIPHOME="ftp://fullmoon.rtp.raleigh.ibm.com/S-3.1M3-200411050810/$INPUT"
export ZIPSPACE="/d/eclipse/zips"
export ZIPVER="3.1.0"
export PROJECTPATH="$DEVSPACE/org.eclipse.swt"
# !forget to backslash underscores between vars!
export
SOURCEZIP="eclipse/plugins/org.eclipse.platform.source.$WS.$WS.$PLATFORM\_$ZIPVER/src/org.eclipse.swt.$WS\_$ZIPVER/ws/$WS/swtsrc.zip"
export ZIPFILES="$SOURCEZIP \
  eclipse/plugins/org.eclipse.swt.$WS\_$ZIPVER/os/$WS/$PLATFORM/swt-*.dll \
  eclipse/plugins/org.eclipse.swt_$ZIPVER/plugin.properties \
  eclipse/plugins/org.eclipse.swt_$ZIPVER/META-INF/MANIFEST.MF \
  eclipse/plugins/org.eclipse.swt_$ZIPVER/plugin.xml \
  eclipse/plugins/org.eclipse.swt_$ZIPVER/about.html"
wget -O $ZIPSPACE/$INPUT $ZIPHOME
cd $DEVSPACE
mkdir -p $PROJECTPATH
# clean this up! e.g. should move to META-INF/MANIFEST.MF
unzip -j $ZIPSPACE/$INPUT $ZIPFILES -d $PROJECTPATH
mkdir -p $PROJECTPATH/src
unzip $PROJECTPATH/swtsrc.zip -d $PROJECTPATH/src
find $PROJECTPATH/src -type f -name '*.java' | \
xargs fgrep -ne 'Rectangle getBounds' | \
fgrep -e '{' | fgrep -v 'public'

I get only one line output:

&gt;
/d/eclipse/devspaces/scratch/org.eclipse.swt/src/org/eclipse/swt/widgets/ScrollBar.java:202:Rectangle
getBounds () {

Dunno why it should be singled out.

This work won't make it into M4.  We are waiting on Apple.
Still waiting on Apple.
Tom, how does the scrollbar bounds help you? There are still magic regions on a 
scrollbar which don't have API.

Have you tried using the client area API?  The sides with the larger amount of 
insets would contain a scrollbar probably.
Comment #67 From Randy Hudson  2005-01-10 17:35 -------
&gt;&gt; Tom, how does the scrollbar bounds help you? 

Umm ... in order to automate moving a scrollbar we need to know where
to tell java.awt.Robot to mouseDown. (I'm suspecting I don't fully
understand the question.)

&gt;&gt; There are still magic regions on a scrollbar which don't have API.

See future FRs :-) Note that I'm only interested in automating and
testing common behaviors: something very WS-specific might require
native automation.

&gt;&gt; Have you tried using the client area API? 

I'm not sure what you mean: could you show p/code?

&gt;&gt; The sides with the larger amount of insets would contain a
&gt;&gt; scrollbar probably.

In any case, while there may be a workaround in this specific case,
Widget.getBounds() is still greatly to be desired. Not only does it
greatly simplify simple automation code (I can let the runtime call
the appropriate method), but it facilitates higher-level abstractions,
which makes it easier for coders to write automated test cases for
their targets (which is what my effort is all about). E.g. Abbot has
ComponentLocation, which

ComponentLocation javadoc
&gt; Provides encapsulation of a visible Component-relative location.
&gt; Hides the location specifics so that ComponentTester primitives
&gt; (actionClick, actionShowPopup, etc) may be directed to specific
&gt; elements of substructure on a Component (list rows, tree paths,
&gt; table cells, substructure values, etc).

with subclasses JListLocation, JTreeLocation, JTableLocation,
JTabbedPaneLocation, etc. This relies at base on
Component.getBounds(). AFAICS I will need Widget.getBounds() to
provide WidgetLocation and subclasses, so that folks can more
easily/quickly write tests on JFace thingies. (So far we've been able
to automate WDE without WidgetLocation, but I dunno what diabolical
graphics those devious GEF folks might devise in future :-)

What I meant was that once you have the scrollbar's bounds, you still have no 
idea where the down up button are, the thumb, or the areas in between.  These 
areas might depend on the WS skin or certain preferences (e.g. Mac OS).

See Scrollable.computeTrim(int,int,int,int) for a possible workaround to 
obtaining the scrollbar's bounds.
Comment #65 From Steve Northover  2004-12-10 18:06 -------
&gt;&gt; This work won't make it into M4.  We are waiting on Apple.

Comment #66 From Steve Northover 2005-01-10 17:10 -------
&gt; Still waiting on Apple.

While we're waiting, could you make what functionality you have
available for use?

Abbot has win32 users and folks who are interested in using it with
GTK and winCE. We would much rather use your release-quality win32
getBounds()'s than our hacks, and would like to enable folks on
non-win32 platforms to make progress. In return, we would provide
real-world feedback on their use.

I won't release API that can't be implemented on all platforms.  I am working 
with Apple on another solution but they are slow.
I don't really understand the rationale here Steve N. M4 is a milestone build,  
and if some obscure feature like this one isn't available for all platforms I  
don't see the problem.   
  
If I remember correctly, the whole Browser widget didn't get released on all  
platforms at the same time either in 3.0 milestones. The Browser API changed a 
lot between Milestones as well; its not like it needs to be stabile at this 
point. And there are even APIs that doesn't work on all platforms in GA 
builds. Why is this obscure UI-testing-tool feature so different? If Apple 
responds in M5 or M6 thats great, but are you saying we can never support this 
(from SWT, I agree there are workarounds) if we cannot have it on OSX and 
Apple tells us how?  
 
I guess my question is why you are so afraid to put it in now? Milestones APIs 
have changed in the past.. Afraid it cannot ever be supported on all [major] 
platforms? That the API will radically change when you get info from Apple?  
 
Well, just my .0002$ 
 
I don't want to put out temporary API that I may need to retract later.
Any word from Apple?
Sigh.  Hopefully something at EclipseCon.
Hi Steve, any news on Apple's side? 
I talked to them and they made hopeful noises about new API but I was on 
vacation for the last 3 weeks.  I will follow up now.  However, M6 is the API 
freeze.  I'm actually pretty mad about this (madder than Tom Roche must be!).
Steve, aren't you Mr. SWT?
So I guess you could carry the clout with the PMC to bend the API freeze rules a
bit.

Alternatively, those changes could be made in time to make it to 3.1 M7, but not
made part of the API...
Like that you respect the API freeze, and the deal could be that the new
features/methods/visibility of methods -while public- would be unsupported in
the API, with a common agreement that the best effort will be made that make
them public &amp; official API in a 3.1.1 or something like that.

That would really make those ugly patches go away.

As a last resort, what about aspect enabling SWT -or something similar- to allow
for external hooks/mods without API changes?
I was quite impressed with Martin Lippert AJEER at EclipseCon.
I'm not mad about the API freeze but rather that we have been waiting on Apple 
for so long that the API freeze happened, causing this feature to probably not 
happen for 3.1, after I promised to do something about it for 3.1.  I'm still 
working on it.  API's can change after M6 but it's way harder to make it 
happen ... and that's a good thing at this stage in the game.
Sounds like getBounds() for Menu and MenuItem are in the pipeline.  I'd like to
request public implementations for ScrollBar, TabItem and TableColumn as well. 
For completeness, perhaps DragSource, DropTarget, TrayItem, Tracker, Tray should
probably be supported as well.
Comment #80 From Gary Johnston  2005-04-08 14:21
&gt; Sounds like getBounds() for Menu and MenuItem are in the pipeline.
&gt; I'd like to request public implementations for ScrollBar, TabItem
&gt; and TableColumn as well. For completeness, perhaps DragSource,
&gt; DropTarget, TrayItem, Tracker, Tray should probably be supported as
&gt; well.

"Probably"? For completeness they should definitely be supported.

For functionality, i.e. enabling folks to write their tests,
DragSource and DropTarget are higher priority. I know at least one
person who is trying to test drag'n'drop onto R*D's Page Data View.
We have too much functionality that is only provided by context
menuing or DnD, so we really need to be able to test both of those.

All Widgets (i.e., including non-Control Widgets) should also implement
toDisplay(Point) &amp; toDisplay(int, int).
I have 3.1-M6 (Eclipse Platform Version: 3.1.0 Build id:
I20050401-1645) and I'm seeing

org.eclipse.swt.widgets.TableItem
&gt; /*public*/ Rectangle getBounds () {

Can this be restored to public-ness? Alternatively, is there another
way to get the bounds of a TableItem that one has found without
knowing its row and column (e.g. by matching its getText() or some
setData()'ed key/value)?

Is there some reason that TableItem.getBounds(int) won't work for you?
Tao Weng 04/25/2005 10:39:05 AM:
&gt;&gt;&gt;&gt; I got my UML2 regression test script fully automated with
&gt;&gt;&gt;&gt; Abbot.swt. I have to say that Abbot.swt is a great product.

&lt;more shameless plug snipped :-&gt;

&gt;&gt;&gt;&gt; By the way, I have changed a little bit of Abbot.swt in order to
&gt;&gt;&gt;&gt; make my UML2 regression test script run. I do not know whether
&gt;&gt;&gt;&gt; those changes are valid or not, so I don't want to do any check
&gt;&gt;&gt;&gt; in. I would like to let you know.

&lt;big snip&gt;

&gt;&gt;&gt;&gt; 3) In abbot.tester.swt.WidgetLocator, I have to add the following 
&gt;&gt;&gt;&gt; piece of code in  "getBounds" function.

&gt;&gt;&gt;&gt; if(w instanceof TableItem){
&gt;&gt;&gt;&gt;    TableItem item = (TableItem)w;
&gt;&gt;&gt;&gt;    Rectangle bounds = item.getBounds();
&gt;&gt;&gt;&gt;    Point p = item.getParent().toDisplay(bounds.x,bounds.y);
&gt;&gt;&gt;&gt;    return new Rectangle(p.x,p.y,bounds.width,bounds.height);
&gt;&gt;&gt;&gt;  }

Tom Roche  2005-05-09 21:58
&gt;&gt;&gt; I have 3.1-M6 (Eclipse Platform Version: 3.1.0 Build id:
&gt;&gt;&gt; I20050401-1645) and I'm seeing

&gt;&gt;&gt; org.eclipse.swt.widgets.TableItem
&gt;&gt;&gt; &gt; /*public*/ Rectangle getBounds () {

&gt;&gt;&gt; Can this be restored to public-ness? Alternatively, is there
&gt;&gt;&gt; another way to get the bounds of a TableItem that one has found
&gt;&gt;&gt; without knowing its row and column (e.g. by matching its getText()
&gt;&gt;&gt; or some setData()'ed key/value)?

steve_northover@ca.ibm.com  2005-05-10 08:31
&gt;&gt; Is there some reason that TableItem.getBounds(int) won't work for
&gt;&gt; you?

As stated above, tests need to be able to get the bounds for a
TableItem of which the column index is unknown. Is there API to get
the column index for a TableItem? If not:

org.eclipse.swt.widgets.TableItem.getBounds(int)
&gt; /**
&gt;  * Returns a rectangle describing the receiver's size and location
&gt;  * relative to its parent at a column in the table.
&gt;  *
&gt;  * @param index the index that specifies the column
&gt;  * @return the receiver's bounding column rectangle

seems to require the user to know the TableItem's column index. Am I
missing something?
Use getBounds(0).
Steve Northover  2005-05-10 12:38
&gt; Use getBounds(0).

If TableItem.getBounds(0) == TableItem.getBounds(),
why not instead

public Rectangle getBounds () {
  return getBounds (0);
}

and refactor the current code

/*public*/ Rectangle getBounds () {
  checkWidget();
  if (!parent.checkData (this, true)) error (SWT.ERROR_WIDGET_DISPOSED);
  int itemIndex = parent.indexOf (this);
  if (itemIndex == -1) return new Rectangle (0, 0, 0, 0);
  RECT rect = getBounds (itemIndex, 0, true, false);
  int width = rect.right - rect.left, height = rect.bottom - rect.top;
  return new Rectangle (rect.left, rect.top, width, height);
}

into some other private API? What purpose is served by
not providing the same signature for TableItem?

TableItem.getBounds() was intended to return the same thing as Tree.getBounds
() now that Tree's have columns.  To be exact, the bounds of the text not 
including the item but the code didn't get implemented on all platforms.  This 
would make Tree and Table API consistent (right now Table is missing the 
method).

Would you like me to delete it?  I can't make it public because we are API 
frozen.
steve_northover@ca.ibm.com  2005-05-10 13:55 -------
&gt; TableItem.getBounds() was intended to return the same thing as
&gt; Tree.getBounds () now that Tree's have columns. To be exact, the
&gt; bounds of the text not including the item but the code didn't get
&gt; implemented on all platforms. This would make Tree and Table API
&gt; consistent (right now Table is missing the method).

&gt; Would you like me to delete it? I can't make it public because we
&gt; are API frozen.

&lt;sigh/&gt; No, we'll just wait for a thaw. abbot.swt has plenty other
SWT workarounds right now, what's one more ...

I meant to say "To be exact, the bounds of the text not including the image".  
I'm not sure exactly how not having this API is holding you back.

I'm also really sorry for missing the 3.1 release for this bug report.
Steve Northover 2005-05-10 14:33 -------
&gt; I'm not sure exactly how not having this API is holding you back.

We continue to need Widget.getBounds(). Everything that holds that
back requires workarounds. We have done workarounds for this issue
(TableItem.getBounds()) and others on win32, but we don't have the
resources to workaround for Carbon, GTK, etc.

Lots of folks want programmatic automation, mostly for developer
testing. (Some for other purposes--Larry Bergman is doing really cool
extensions for demo/doc/pedagogy, maybe even TVT.) All we ask is for
SWT to provide a firm foundation for programmatic automation (as Swing
does).

&gt; I'm also really sorry for missing the 3.1 release for this bug
&gt; report.

Me too--I would love for Abbot 1.0 to have multiplatform support.

Todd Brackett: we're told that SWT's fix for this bug is just waiting
for Apple to enable MenuItem.getBounds() for Carbon. If correct, can
you give us an ETA?

You can get the information you need already for the TableItem on all 
platforms so I'm not sure what you are working around in this particular case.
Steve Northover  2005-05-10 14:33   -------
&gt;&gt;&gt; I'm not sure exactly how not having this API is holding you back.

Tom Roche  2005-05-10 15:55   -------
&gt;&gt; We continue to need Widget.getBounds(). 

I.e. getBounds() for each child of Widget.

&gt;&gt; Everything that holds that back requires workarounds.

Steve Northover 2005-05-10 16:11 -------
&gt; You can get the information you need already for the TableItem on
&gt; all platforms so I'm not sure what you are working around in this
&gt; particular case.

The non-public-ness of TableItem.getBounds(). As previously mentioned.
I'm not sure what isn't clear here.

We need getBounds() to find things. We have Component.getBounds(), we
need Widget.getBounds(). Forgive the repetition, but "Everything that
holds [Widget.getBounds()] back requires workarounds." (E.g. Abbot
works around AWT MenuComponent's, but fortunately JMenuItem has mostly
superceded that, and JMenuItem isa Component.)

What we can find, we can automate--knock wood, but it's been true so
far, threading be damned. Automation is good. Automation allows your
users to create more/better tests--which means we develop better UIs
faster--and automation allows your users to drive their code for
demos, TVT, etc. Code-centric automation is better: it enhances
developer-time testing and supports TDD. Multi-platform code-centric
automation is better yet.

Automation requires coordinate finding. Swing supports automation via
a single API, Component.getBounds(), the sufficiency of which is
evinced by the number of code-centric tools that build on that simple
foundation, the functionality those tools provide, the number of their
users, and the goodness of the UIs their users develop. That's good.
That's important.

If you can give SWT automation a similar foundation,
Eclipse+JUnit+Abbot can deliver similar goodness a lot more/faster.
Otherwise we hafta workaround you.

I do second Tom on that one.
&gt; "Everything that holds [Widget.getBounds()] back requires workarounds."
I am faced with the exact same issues for the plug-in I am working on.
Shall I continue to leave in the underworld of patched SWT?
And I am dying to use abbot for my tests.

Steve, in comment #79 you replied to me:
&gt; API's can change after M6 but it's way harder to make it 
&gt; happen ... and that's a good thing at this stage in the game.
I guess that this bugzilla has enough votes and followers to carry some weight
and do some thing about it.
You can make API change happen, you said it. 
I feel kind of let down here.

Now, over 42 unique individuals, including 23 positives votes, the rest as CC
are following this bug! I wish all bugs were so popular!

Just some of the folks and companies which are represented in the CC on this
bug, based on the voters and CCed emails:
(excluding all the IBM folks in the US, Canada, and Switzerland ;-) )

*Eclipse board and strategic members: 
SAP
Intel

*Add-in provider members like:
Agitar
Instantiations

*Companies like:
Apple
RIM (the blackberry guys)
Orbeon
Worldpac
Trigeo

*Open source projects: empproject, abbot, orbeon, oxf studio, vence,
easyeclipse, eclipse-ccase, harbour-ide

*Eclipse advocates and bloggers like Luis de la Rosa, and Gunnar Wagenknecht

*Plus at least two academic institutions....

I think it is enough justification to give a push and make it so that it goes
into 3.1 !
The original discussion was about TableItem.getBounds(), which you do not need 
today in order to make Abbot work.  I agree that you need the general 
capability to get widget coordinates.  You are free to contribute the code 
that does this at any time.

In the case of MenuItem.getBounds() and Menu.getBounds(), we are stuck on 
Apple and have been for a while.  There is nothing I can do about this.  So, 
the right thing for you to do in the short term is to include platform 
specific code in Abbot and not to support Abbot on the Mac.  This is sad, but 
it is the right software engineering thing to do.

Please stop ranting at me.  I am doing all I can and it doesn't help.
Philippe, the bug is important and we are doing all we can.  The implications 
of adding an API like Widget.getBounds() (or solving this problem in another 
way) are big.  We cannot propose API that is no-portable.  We realize this bug 
is important and have been trying to get to it for a while.
Steve,

First I would like you to kindly accept my public apologies if I came out hard
and harsh.

This may be my French way of loving heated arguments and debates resurfacing now
and then ;-) I want you to be my best buddy, and I have serious respect for the
work you guys are doing.Being the API guardians of the essential SWT must be a
tough job, with trolls like me ruining your day!

In all fairness, if some irresponsible person had given me your job, SWT would
have been a half-baked, ugly, buggy, non-portable piece of crap, instead of the
elegant work it is today and Eclipse would be dying from my incompetence :-) 

Be assured that if I need to vent my SWT frustration in the future, I will do it
1-on-1 first.

Now, right after posting that unruly comment yesterday, I was hanging @ #eclipse
and chatted with Billy B. who gave me some valuable insights.

Also I did not really understand until now that the menu problem on Mac is real
hard, and may not be solvable in a portable way because the way carbon handles
menu bars.

As far as I am concerned, I need the menu and menu items coordinates
(MenuItem.getBounds() and Menu.getBounds() ), but I can live without
portability, and Billy told me there could be a way to do it in my plug-in,
probably without having to resort to SWT patching, or weird aspects, reflection
or byte code hacks, as long as portability was not the major concern. And for me
it is not.

I care about making my own little plugin run nicely on top of a vanilla Eclipse
build, with decent support for at least Windows, Mac and Linux/GTK. And if some
features are NOT available on Mac, then so be it. I can live with that, and I
can inform my users properly about the capabilities of that plugin on each
platforms, both in the documentation and at run-time.
I also care about SWT staying homogenous, elegant and portable on all Eclipse's
platforms, and do not want to be an architect of its demise.

If there is a way to get some code examples for Win and GTK posted somewhere to
get me started, that would be great. 
And as far as I am concerned, that would close that bug!

Cordially
Ok, thanks Philippe, I wouldn't go quite that far.

If you are looking for the code that does Menu.getBounds() and 
MenuItem.getBounds(), it is also released as /*public*/ but doesn't work on 
the Mac.  NOTE:  Since many operating systems don't compute the menu bounds 
until the menu is about to be shown, the bounds are zero when the menu is not 
displayed.  Also, this the coordinate systems are consistent but might not be 
the same when the code is finally released (sometime in the year 3000).  It 
should be easy enough to do the same thing that Tom is doing (ie. copy the 
code to a platform specific utility class) and call it.  Maybe Tom could 
provide his utility class as a patch in this bug report?

Also, BB should be commenting in the bug report rather than chatting privately!
Steve,
since Menu.getBounds() and  MenuItem.getBounds() are /*public*/, I can work
around that with reflection, as long I am not under the control of a restrictive
security manager. A bit awkward, but the hack will do the trick for me, together
with some platform specific conditions for macs or platforms where it returns
odd or (0,0,0,0) values

&gt;NOTE:  Since many operating systems don't compute the menu bounds 
&gt;until the menu is about to be shown, the bounds are zero when the menu is not 
displayed.  
In my case that would not be a problem. I really only need to compute the menu
bounds just right after they have been displayed, not before.

&gt;It should be easy enough to do the same thing that Tom is doing 
&gt; (ie. copy the code to a platform specific utility class) and call it.  
Does not this require a patched SWT and therefore a modified core eclispe?
I am trying to avoid that. 

Tom your patch would be welcomed or is it already in abbot? If so, I will do a
diff again between SWT and your latest patched SWT, last I made is a few months old.

Just adding a quick note for everybody's understanding is that all Billy told me
about this bug in our chat was it was down to the Mac menu issues. ;-)
Steve Northover  2005-05-11 08:03  [reply] -------
&gt;&gt;&gt; Please stop ranting at me. I am doing all I can and it doesn't
&gt;&gt;&gt; help.

Not ranting, just explaining, since the rationale for getBounds() (vs
getBounds(...), yourAPIhere(...), etc) doesn't seem to take.

Steve Northover  2005-05-11 16:15  [reply] -------
&gt;&gt; If you are looking for the code that does Menu.getBounds() and
&gt;&gt; MenuItem.getBounds(), it is also released as /*public*/ but doesn't
&gt;&gt; work on the Mac.

The code in org.eclipse.swt.widgets.MenuItem.getBounds() in 3.1-M6
also works incorrectly on win32 when used to exercise a workbench:
will post separately regarding that.

&gt;&gt; NOTE: Since many operating systems don't compute the menu bounds
&gt;&gt; until the menu is about to be shown, the bounds are zero when the
&gt;&gt; menu is not displayed. Also, this the coordinate systems are
&gt;&gt; consistent but might not be the same when the code is finally
&gt;&gt; released (sometime in the year 3000).

&gt;&gt; It should be easy enough to do the same thing that Tom is doing
&gt;&gt; (ie. copy the code to a platform specific utility class) and call
&gt;&gt; it. Maybe Tom could provide his utility class as a patch in this
&gt;&gt; bug report?

Philippe Ombredanne 2005-05-11 16:31 [reply] -------
&gt; Steve, since Menu.getBounds() and MenuItem.getBounds() are
&gt; /*public*/, I can work around that with reflection, as long I am not
&gt; under the control of a restrictive security manager. A bit awkward,
&gt; but the hack will do the trick for me, together with some platform
&gt; specific conditions for macs or platforms where it returns odd or
&gt; (0,0,0,0) values

&gt;&gt; NOTE: Since many operating systems don't compute the menu bounds
&gt;&gt; until the menu is about to be shown, the bounds are zero when the
&gt;&gt; menu is not displayed.

&gt; In my case that would not be a problem. I really only need to
&gt; compute the menu bounds just right after they have been displayed,
&gt; not before.

&gt;&gt; It should be easy enough to do the same thing that Tom is doing
&gt;&gt; (ie. copy the code to a platform specific utility class) and call
&gt;&gt; it.

&gt; Does not this require a patched SWT and therefore a modified core
&gt; eclispe? 

No longer.

&gt; Tom your patch would be welcomed or is it already in abbot? 

It is: the patches are in

abbot.swt.SWTWorkarounds
http://cvs.sourceforge.net/viewcvs.py/*checkout*/abbot/abbot.swt/src/abbot/swt/SWTWorkarounds.java?rev=HEAD

but they are transparent to the user: just use your Matcher's,
Finder's, and Tester's and they will call the correct code for
location.

&gt; If so, I will do a diff again between SWT and your latest patched
&gt; SWT, last I made is a few months old.

Quit patching !-) See

http://sourceforge.net/mailarchive/message.php?msg_id=11730297
Steve Northover  2005-05-11 16:15
&gt;&gt; If you are looking for the code that does Menu.getBounds() and
&gt;&gt; MenuItem.getBounds(), it is also released as /*public*/ but doesn't
&gt;&gt; work on the Mac.

Tom Roche  2005-05-12 13:46
&gt; The code in org.eclipse.swt.widgets.MenuItem.getBounds() in 3.1-M6
&gt; also works incorrectly on win32 when used to exercise a workbench:
&gt; will post separately regarding that.

When exercising a workbench, the code in 3.1-M6/
org.eclipse.swt.widgets.MenuItem.getBounds(), massaged slightly to run
from our different package, clicks below the menubar, activating the
toolbar button immediately below the targeted menu item. I suspect it
returns a y value that is too large. This behavior was originally
reported by other members of the abbot-users list.

How to reproduce (in a 3.1-M6 workbench, untested with other versions,
on win32, untested with other WSs):

0 Create a clean devspace folder, and start a workbench pointing to it.

1 Checkout/install/build the abbot, abbot.swt, and abbot.swt.eclipse
  modules from SourceForge CVS as described in

http://cvs.sourceforge.net/viewcvs.py/*checkout*/abbot/abbot.swt/doc/swt/building.html#sourceAbbot

  Note that the abbot.swt.* modules are both eclipse plugins "out of
  the box," and so build "normally" in eclipse (e.g. with C-b), but
  that the abbot module is not--it's IDE-agnostic and requires an ant
  build (target=eclipse.setup) to attain plugin-hood in your workspace.
 (Hence turning off autobuild is advised before you start checkout.)

2 Create a JUnit Plugin Test with test class=
  abbot.swt.eclipse.tests.MenuItemGetBoundsTest running in a blank
  runspace (check Clear workspace data before launching) using the
  workbench's JRE (Runtime JRE=eclipse). Run it:

  A Java project will be created (headlessly), then 2 tests will run
  (it's {pretty fast, hard to see} but you can see the mouse move):
  the first clicks Run&gt;ExternalTools&gt;ExternalTools to launch that
  wizard, and the second clicks File&gt;New&gt;Other to launch the New
  wizard. (The JUnit view will green bar, but will report 4/4 due to
  inheritance.) Remove the terminated session in the Console view
  (call me anal, but pde.junit has some bugs/quirks that I try to
  accomodate ... or I may just be superstitious).

3 Open abbot.swt.SWTWorkarounds in an editor and browse to getBounds
  (MenuItem menuItem). Note that it currently contains

+   public static Rectangle getBounds (MenuItem menuItem) {
+ // start code from 3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds()    
+ //  checkWidget ();
+ // not visible, but menuItem.getParent() will call it
+ //  Menu parent = menuItem.getParent();
+ //  if (OS.IsWinCE) return new Rectangle (0, 0, 0, 0);
+ //  int index = parent.indexOf (menuItem);
+ //  if (index == -1) return new Rectangle (0, 0, 0, 0);
+ //  if ((parent.getStyle() &amp; SWT.BAR) != 0) {
+ //    Decorations shell = parent.getParent();
+ //    if (shell.getMenuBar() != parent) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    int hwndShell = shell.handle;
+ //    MENUBARINFO info1 = new MENUBARINFO ();
+ //    info1.cbSize = MENUBARINFO.sizeof;
+ //    if (!OS.GetMenuBarInfo (hwndShell, OS.OBJID_MENU, 1, info1)) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    MENUBARINFO info2 = new MENUBARINFO ();
+ //    info2.cbSize = MENUBARINFO.sizeof;
+ //    if (!OS.GetMenuBarInfo (hwndShell, OS.OBJID_MENU, index + 1, info2)) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    int x = info2.left - info1.left;
+ //    int y = info2.top - info1.top;
+ //    int width = info1.right - info1.left;
+ //    int height = info1.bottom - info1.top;
+ //    return new Rectangle (x, y, width, height);
+ //  } else {
+ //    int hMenu = parent.handle;
+ //    RECT rect1 = new RECT ();
+ //    if (!OS.GetMenuItemRect (0, hMenu, 0, rect1)) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    RECT rect2 = new RECT ();
+ //    if (!OS.GetMenuItemRect (0, hMenu, index, rect2)) {
+ //      return new Rectangle (0, 0, 0, 0);
+ //    }
+ //    int x = rect2.left - rect1.left + 2;
+ //    int y = rect2.top - rect1.top + 2;
+ //    int width = rect2.right - rect2.left;
+ //    int height = rect2.bottom - rect2.top;
+ //    return new Rectangle (x, y, width, height);
+ //  }
+ // end code from 3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds()
+ // start code adapted from o.e.swt.patched.MenuItem.getBounds()
+     Menu parent = menuItem.getParent();
+     Decorations parentControl = parent.getParent();
+     if (OS.IsWinCE) return new Rectangle (0, 0, 0, 0);
+     int index = parent.indexOf (menuItem);
+     if (index == -1) return new Rectangle (0, 0, 0, 0);
+     RECT rect = new RECT();
+     boolean success =
OS.GetMenuItemRect(((parent.getStyle()&amp;SWT.BAR)==SWT.BAR)?parentControl.handle:0,
+               parent.handle,
+               index,
+               rect);
+     if (!success) {
+       /* the OS API call couldn't get the MenuItem bounds, so return an empty
rectangle */
+       return new Rectangle(0, 0, 0, 0);   
+     }
+     if ((parentControl.getStyle() &amp; SWT.MIRRORED) == 0) {
+       /* coordinates are not mirrored */
+       Point p = parentControl.toControl(rect.left,rect.top);
+       int width = rect.right - rect.left;
+       int height = rect.bottom - rect.top;
+       return new Rectangle(p.x,p.y,width,height);   
+     } else {
+       /* coordinates are mirrored */
+       /* TODO: this has not been tested */
+       Point p = parentControl.toControl(rect.left,rect.top);
+       int width = rect.left - rect.right;
+       int height = rect.bottom - rect.top;
+       return new Rectangle(p.x,p.y,width,height);       
+     }
+ // end code adapted from o.e.swt.patched.MenuItem.getBounds()
+   }

  The first section is minimally adapted from 3.1-M6/
  org.eclipse.swt.widgets.MenuItem.getBounds(), the latter is from
  Abbot's patches. Note that the latter section is what you just ran
  successfully. Comment out that latter section, and uncomment the
  first section, to produce

-   public static Rectangle getBounds (MenuItem menuItem) {
- // start code from 3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds()    
- //  checkWidget ();
- // not visible, but menuItem.getParent() will call it
-   Menu parent = menuItem.getParent();
-   if (OS.IsWinCE) return new Rectangle (0, 0, 0, 0);
-   int index = parent.indexOf (menuItem);
-   if (index == -1) return new Rectangle (0, 0, 0, 0);
-   if ((parent.getStyle() &amp; SWT.BAR) != 0) {
-     Decorations shell = parent.getParent();
-     if (shell.getMenuBar() != parent) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     int hwndShell = shell.handle;
-     MENUBARINFO info1 = new MENUBARINFO ();
-     info1.cbSize = MENUBARINFO.sizeof;
-     if (!OS.GetMenuBarInfo (hwndShell, OS.OBJID_MENU, 1, info1)) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     MENUBARINFO info2 = new MENUBARINFO ();
-     info2.cbSize = MENUBARINFO.sizeof;
-     if (!OS.GetMenuBarInfo (hwndShell, OS.OBJID_MENU, index + 1, info2)) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     int x = info2.left - info1.left;
-     int y = info2.top - info1.top;
-     int width = info1.right - info1.left;
-     int height = info1.bottom - info1.top;
-     return new Rectangle (x, y, width, height);
-   } else {
-     int hMenu = parent.handle;
-     RECT rect1 = new RECT ();
-     if (!OS.GetMenuItemRect (0, hMenu, 0, rect1)) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     RECT rect2 = new RECT ();
-     if (!OS.GetMenuItemRect (0, hMenu, index, rect2)) {
-       return new Rectangle (0, 0, 0, 0);
-     }
-     int x = rect2.left - rect1.left + 2;
-     int y = rect2.top - rect1.top + 2;
-     int width = rect2.right - rect2.left;
-     int height = rect2.bottom - rect2.top;
-     return new Rectangle (x, y, width, height);
-   }
- // end code from 3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds()
- // start code adapted from o.e.swt.patched.MenuItem.getBounds()
- //    Menu parent = menuItem.getParent();
- //    Decorations parentControl = parent.getParent();
- //    if (OS.IsWinCE) return new Rectangle (0, 0, 0, 0);
- //    int index = parent.indexOf (menuItem);
- //    if (index == -1) return new Rectangle (0, 0, 0, 0);
- //    RECT rect = new RECT();
- //    boolean success =
OS.GetMenuItemRect(((parent.getStyle()&amp;SWT.BAR)==SWT.BAR)?parentControl.handle:0,
- //              parent.handle,
- //              index,
- //              rect);
- //    if (!success) {
- //      /* the OS API call couldn't get the MenuItem bounds, so return an
empty rectangle */
- //      return new Rectangle(0, 0, 0, 0);   
- //    }
- //    if ((parentControl.getStyle() &amp; SWT.MIRRORED) == 0) {
- //      /* coordinates are not mirrored */
- //      Point p = parentControl.toControl(rect.left,rect.top);
- //      int width = rect.right - rect.left;
- //      int height = rect.bottom - rect.top;
- //      return new Rectangle(p.x,p.y,width,height);   
- //    } else {
- //      /* coordinates are mirrored */
- //      /* TODO: this has not been tested */
- //      Point p = parentControl.toControl(rect.left,rect.top);
- //      int width = rect.left - rect.right;
- //      int height = rect.bottom - rect.top;
- //      return new Rectangle(p.x,p.y,width,height);       
- //    }
- // end code adapted from o.e.swt.patched.MenuItem.getBounds()
-   }

  Save and build.

4 Rerun abbot.swt.eclipse.tests.MenuItemGetBoundsTest (e.g. with
  C-F11). Note that, instead of clicking the menu, the mouse clicks
  the Search button on the toolbar, and the Search wizard launches
  instead of External Tools. (Note that the button and mouse are
  positioned just below the Run item in the menu bar, hence my
  hypothesis.) This hoses that and subsequent tests with



  in the Console.

5 If desired, whack the session, undo the changes to SWTWorkarounds,
  save, C-b, C-F11: the tests again run successfully to completion by
  correctly clicking the menu items.

All: please let me know if you are able to reproduce or not,
especially if the directions are unclear.

The part that is unclear is whether you know what the bug is already and have 
a fix.  If this is the case, can you please post the patch?  Thanks.
Created attachment 21077
adaption of code that fixes bad menu-picking as demonstrated in https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c102

See

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c102

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c104
Steve Northover  2005-05-12 18:34
&gt; The part that is unclear is whether you know what the bug is already

Umm ... it seems pretty clear that the bug is in the code adapted from 
3.1-M6 org.eclipse.swt.widgets.MenuItem.getBounds(), since the test
fails when using that code, no?

&gt; and have a fix. If this is the case, can you please post the patch?

https://bugs.eclipse.org/bugs/attachment.cgi?id=21077

but note that I can't verify the patched code directly ... because I
hafta workaround the non-public-ness of MenuItem.getBounds().

Tom, the more you help me, the more I can help you.  A single sentence 
like "The problem is that the coordinates are wrong because ... or mirroring 
is not taken into account ..." would be most appreciated (unless you really 
have no idea what is wrong, in which case saying so helps too, but you have a 
patch so that implies you do know what's going on).  It's just easier not to 
have to guess from the code but I can do that if you want.  It'll just take 
longer.

Also, a small stand alone test case that uses the API is really helpful rather 
than downloading and installing Abbot.  If you don't have the code, then 
that's fine too.

Billy, can you verify that the patch doesn't compile?
Tom Roche  2005-05-12 18:07
&gt;&gt;&gt; When exercising a workbench, the code in 3.1-M6/
&gt;&gt;&gt; org.eclipse.swt.widgets.MenuItem.getBounds(), massaged slightly to
&gt;&gt;&gt; run from our different package, clicks below the menubar,
&gt;&gt;&gt; activating the toolbar button immediately below the targeted menu
&gt;&gt;&gt; item. I suspect it returns a y value that is too large. 

steve_northover@ca.ibm.com  2005-05-13 08:50
&gt;&gt; A single sentence like "The problem is that the coordinates are
&gt;&gt; wrong because ... or mirroring is not taken into account ..." would
&gt;&gt; be most appreciated

Steve: what part of "returns a y value that is too large" is unclear?

&gt;&gt; (unless you really have no idea what is wrong, in which case saying
&gt;&gt; so helps too, but you have a patch so that implies you do know
&gt;&gt; what's going on). 

(The more helpful you claim to be, the more your language betrays you.)
Not only have I an "idea what is wrong," I have given you a test case
that clearly displays it! I even walk you through reproduction of the
test case's behavior:

&gt;&gt;&gt; 2 Create a JUnit Plugin Test with test class=
&gt;&gt;&gt;   abbot.swt.eclipse.tests.MenuItemGetBoundsTest[....] 2 tests will
&gt;&gt;&gt;   run (it's {pretty fast, hard to see} but you can see the mouse
&gt;&gt;&gt;   move): the first clicks Run&gt;ExternalTools&gt;ExternalTools to
&gt;&gt;&gt;   launch that wizard, and the second clicks File&gt;New&gt;Other to
&gt;&gt;&gt;   launch the New wizard.

&lt;snip&gt;

&gt;&gt;&gt; 3 Open abbot.swt.SWTWorkarounds in an editor and browse to
&gt;&gt;&gt; getBounds (MenuItem menuItem)[....] Comment out that latter
&gt;&gt;&gt; section, and uncomment the first section

&lt;snip&gt;

&gt;&gt;&gt; 4 Rerun abbot.swt.eclipse.tests.MenuItemGetBoundsTest (e.g. with
&gt;&gt;&gt;   C-F11). Note that, instead of clicking the menu, the mouse clicks
&gt;&gt;&gt;   the Search button on the toolbar, and the Search wizard launches
&gt;&gt;&gt;   instead of External Tools. 

&gt;&gt; It's just easier not to have to guess from the code but I can do
&gt;&gt; that if you want. It'll just take longer.

You know I don't want that, Steve: that's why I show you how to actually
reproduce the problem. Why "guess from the code" when you can *observe*
the behavior?

&gt;&gt; Also, a small stand alone test case that uses the API is really
&gt;&gt; helpful rather than downloading and installing Abbot.

Keep in mind here that the code in question (MenuItem.getBounds()) is
required for automation. In order to empirically assess the
correctness of the code, you're gonna hafta have some automation
framework. I note

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-home/test_plan.html
&gt; 1. Ensure all public API is exercised through a JUnit test

&gt; - we have an automated tool to do this but we have not made it
&gt;   publicly accessible yet

but it seems to have been that way for a while :-) Unfortunately
automation seems to require a fair amount of infrastructure.
Fortunately, in this case the infrastructure amounts to all of 3
plugins. Is that so onerous? (Perhaps your non-public automation tool
is more svelte? We'd love to see it !-) You can get/install it, and
reproduce the problem, in all of 15 minutes (on LAN). If you'd like, I
can build binary plugin zips for abbot and abbot.swt for you:
unfortunately pde.junit currently can't run tests outside the
workbench, so you'd still hafta get that as source.

Note that I'm putting my automation framework out there for you and
everyone to use, and to reproduce this problem, because ya gotta test,
Steve, not just eyeball the code. We even expose our tests as JUnit
testcases that are easily run via Eclipse's builtin tooling! (Never
let it be said that I don't try to help you help me :-)

So until you put *your* automation tool out there for folks to use, I
don't see a feasible alternative to the following for testing this
bug:

0 Reproduce the problem as detailed in

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c102

1 Twiddle the code in abbot.swt.SWTWorkarounds.getBounds(MenuItem) as
  desired, then test using abbot.swt.eclipse.tests.MenuItemGetBoundsTest

2 Repeat step 1 until you get the code the way you want it, and it
  passes the test. For extra credit, run
  abbot.swt.examples.CelsiusConverterFindingTest and
  abbot.swt.examples.CelsiusConverterTest as JUnit tests (i.e.
  Run&gt;Run&gt;JUnit, not Run&gt;Run&gt;JUnit Plugin Test)--they also pass with
  the HEAD of abbot.swt.SWTWorkarounds.getBounds(MenuItem).

3 Copy/mod your code from abbot.swt.SWTWorkarounds.getBounds(MenuItem)
  back into org.eclipse.swt.widgets.MenuItem.getBounds(). (Then, make
  it public !-)
&gt; Keep in mind here that the code in question (MenuItem.getBounds()) is
&gt; required for automation. In order to empirically assess the
&gt; correctness of the code, you're gonna hafta have some automation
&gt; framework. I note
&gt; http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/test_plan.html
&gt; &gt; 1. Ensure all public API is exercised through a JUnit test
&gt; &gt; - we have an automated tool to do this but we have not made it
&gt; &gt;   publicly accessible yet
&gt; but it seems to have been that way for a while :-) Unfortunately
&gt; automation seems to require a fair amount of infrastructure.
&gt; Fortunately, in this case the infrastructure amounts to all of 3
&gt; plugins.

You won't know if a snippet will reproduce the problem until you've actually 
tried it. I don't see why querying menu location would require some sort of 
complex setup or series of events to reproduce the problem. Just create a 
Shell, slap a menubar on it, call the package protected API, and place a 
tracker over that rectangle highlighting the bogus bounds. Not only is this 
easier for Steve, but it removes the however small chance that Abbot is doing 
something wrong.
Please Tom, just stop.  I'm not trying to imply anything or do anything other 
that find out what is wrong and fix it.
Randy: if you can, please contribute a snippet that launches a
workbench and tests MenuItem.getBounds() against it. If you can't,
please *try* to reproduce the bug as described, and ask where the
descriptions are unclear. I suspect you'll find that installing the
code and running the tests is not so nearly so onerous as you suspect
(and probably a helluva lot less onerous than writing the snippet :-)

Randy Hudson  2005-05-13 11:34
&gt; You won't know if a snippet will reproduce the problem until you've
&gt; actually tried it.

True, but I suspect you're overlooking 2 problems:

0 Testcases show the problem occurring with SUT=workbench, not SUT=a
  standalone app (more below)

1 I don't know how to do a snippet that would

(adapted for what actually needs done)
&gt; Just [launch a workbench, find one of its MenuItem's], and place a
&gt; tracker over that rectangle highlighting the bogus bounds.

First, please note:

Tom Roche  2005-05-12 18:07
&gt;&gt;&gt; When exercising a workbench, 

That's the important part: exercising a workbench.

&gt;&gt;&gt; the code in 3.1-M6/ org.eclipse.swt.widgets.MenuItem.getBounds(),
&gt;&gt;&gt; massaged slightly to run from our different package, clicks below
&gt;&gt;&gt; the menubar, activating the toolbar button immediately below the
&gt;&gt;&gt; targeted menu item. I suspect it returns a y value that is too
&gt;&gt;&gt; large.

Second, note that Abbot also works against standalone SWT: in fact we
have an example standalone SWT app and publically-available tests that
run against it:

&gt;&gt;   For extra credit, run
&gt;&gt;   abbot.swt.examples.CelsiusConverterFindingTest and
&gt;&gt;   abbot.swt.examples.CelsiusConverterTest as JUnit tests (i.e.
&gt;&gt;   Run&gt;Run&gt;JUnit, not Run&gt;Run&gt;JUnit Plugin Test)--they also pass
&gt;&gt;   with the HEAD of abbot.swt.SWTWorkarounds.getBounds(MenuItem).

Third, I know, from running those Celsius*Test's, that both code
sections in abbot.swt.SWTWorkarounds.getBounds(MenuItem)

&gt;&gt;&gt;   The first section is minimally adapted from 3.1-M6/
&gt;&gt;&gt;   org.eclipse.swt.widgets.MenuItem.getBounds(), the latter is from
&gt;&gt;&gt;   Abbot's patches. Note that the latter section is what you just
&gt;&gt;&gt;   ran successfully. Comment out that latter section, and uncomment
&gt;&gt;&gt;   the first section

work in the standalone case. The difference is the workbench case as
described in

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c102

In that case, our code STILL works, but the code derived from
org.eclipse.swt.widgets.MenuItem.getBounds() fails.

Finally, please note that the *only* reason why abbot.swt resorts to
adapting org.eclipse.swt.widgets.MenuItem.getBounds() is because Steve
has made it non-public. Were it public, we could call it directly,
without resorting to abbot.swt.SWTWorkarounds.

So if you can do a snippet that launches a workbench, finds one of its
mainmenu items and highlights the bounds, please do, because you are
certainly correct that

&gt; it [would remove] the however small chance that Abbot is doing
&gt; something wrong.

I am certainly not claiming that Abbot or abbot.swt is without fault:
we're trying to get an RC1 out and our users are making very clear
where our faults and function gaps are :-) What I am doing is making
an SWT automation framework publically available (IIRC the *only*
publically available SWT automation framework, which is why so many
folks want this fixed), making testcases publically available,
publically demonstrating how to reproduce a problem--and even
publically demonstrating code that FIXES the problem! (Feel free to
demonstrate where *that* is at fault. Til then, honi soit qui mal y
pense.)

SN, here's the snippet:

public static void main(String[] args) {
	Display display = new Display ();
	Shell shell = new Shell (display);
	Menu bar = new Menu (shell, SWT.BAR);
	shell.setMenuBar (bar);
	MenuItem fileItem = new MenuItem (bar, SWT.CASCADE);
	fileItem.setText ("File");
	Menu submenu = new Menu (shell, SWT.DROP_DOWN);
	fileItem.setMenu (submenu);
	MenuItem item = new MenuItem (submenu, SWT.PUSH);
	item.setText ("Select &amp;All\tCtrl+A");
	item.setAccelerator (SWT.CTRL + 'A');
	shell.setSize (200, 200);
	shell.open ();
	
	try {
		Method m = fileItem.getClass().getDeclaredMethods()[8];
		System.out.println(m.toString());
		m.setAccessible(true);
		Rectangle rect = (Rectangle)m.invoke(fileItem, null);
		Point where = new Point(rect.x, rect.y);
		where = shell.toDisplay(where);
		Shell highlight = new Shell(display, SWT.NO_TRIM | 
SWT.PRIMARY_MODAL);
		highlight.setBounds(where.x, where.y, rect.width, rect.height);
		highlight.setBackground(display.getSystemColor
(SWT.COLOR_INFO_BACKGROUND));
		highlight.open();
	} catch (Exception e) {
		e.printStackTrace();
	}
	
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch ()) display.sleep ();
	}
	display.dispose ();
}


BTW, if setAccelerator is not called, an exception gets thrown.
The problem is that MenuItem.getBounds() returns the coordinates in terms of 
the parent, which is a Menu.  Menus are like Shells and use the coordinate 
system of the display, rather than their parent.  So some coordinate math is 
necessary which is a bit bad but the best I can do right now.

There was also a bug in MenuItem.getBounds() where the wrong width was 
returned on Windows.  That bug has been fixed and released.

Here is a better snippet:

import java.lang.reflect.*;

import org.eclipse.swt.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.widgets.*;

public class PR_38436 {
public static void main(String[] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	Menu bar = new Menu(shell, SWT.BAR);
	shell.setMenuBar(bar);
	MenuItem fileItem = new MenuItem(bar, SWT.CASCADE);
	fileItem.setText("File");
	Menu submenu = new Menu(shell, SWT.DROP_DOWN);
	fileItem.setMenu(submenu);
	MenuItem item = new MenuItem(submenu, SWT.PUSH);
	item.setText("Select &amp;All\tCtrl+A");
	item.setAccelerator(SWT.CTRL + 'A');
	shell.setSize(200, 200);
	shell.open();
	try {
		Method m1 = bar.getClass().getDeclaredMethod("getBounds", 
null);
		m1.setAccessible(true);
		Rectangle menuRect = (Rectangle) m1.invoke(bar, null);
		Method m2 = fileItem.getClass().getDeclaredMethod("getBounds", 
null);
		m2.setAccessible(true);
		Rectangle itemRect = (Rectangle) m2.invoke(fileItem, null);
		if ((bar.getStyle() &amp; SWT.RIGHT_TO_LEFT) != 0) {
			itemRect.x = menuRect.x + menuRect.width - 
itemRect.width - itemRect.x;
		} else {
			itemRect.x += menuRect.x;
		}
		itemRect.y += menuRect.y;
		Shell highlight = new Shell(display, SWT.NO_TRIM | 
SWT.PRIMARY_MODAL);
		highlight.setBounds(itemRect.x, itemRect.y, itemRect.width, 
itemRect.height);
		highlight.setBackground(display.getSystemColor
(SWT.COLOR_INFO_BACKGROUND));
		highlight.open();
	} catch (Exception e) {
		e.printStackTrace();
	}
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch())
			display.sleep();
	}
	display.dispose();
}
}


I have run MenuItemGetBoundsTest.  As SN described, the problem seems to be 
that Menu.getBounds() is returning its result in display coordinates and the 
code in WidgetLocator is translating these display relative coordinates using 
item.getParent().getParent().toDisplay(bounds.x,bounds.y); and this is not 
neccessary.  The following works for me on Windows:

In SWTWorkaround:

	public static Rectangle getBounds(MenuItem menuItem) {
//		 start code adapted from 
&lt;url&gt;https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c112&lt;/url&gt;
		Menu parent = menuItem.getParent();
		Method m1 = null;
		try {
			m1 = parent.getClass().getDeclaredMethod("getBounds", 
null);
		} catch (SecurityException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (NoSuchMethodException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		}
		m1.setAccessible(true);
		Rectangle menuRect = null;
		try {
			menuRect = (Rectangle) m1.invoke(parent, null);
		} catch (IllegalArgumentException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		}
		Method m2 = null;
		try {
			m2 = menuItem.getClass().getDeclaredMethod
("getBounds", null);
		} catch (SecurityException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (NoSuchMethodException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		}
		m2.setAccessible(true);
		Rectangle itemRect = null;
		try {
			itemRect = (Rectangle) m2.invoke(menuItem, null);
		} catch (IllegalArgumentException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			// TODO_Tom Auto-generated catch block
			e.printStackTrace();
		}
		if ((parent.getStyle() &amp; SWT.RIGHT_TO_LEFT) != 0) {
			itemRect.x = menuRect.x + menuRect.width - 
itemRect.width - itemRect.x;
		} else {
			itemRect.x += menuRect.x;
		}
		itemRect.y += menuRect.y;
		return itemRect;
//		 end code adapted from 
&lt;url&gt;https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c112&lt;/url&gt;	
	
	}


In WidgetLocator.getBounds(Widget, boolean):

if(w instanceof MenuItem){
	MenuItem item = (MenuItem)w;
	return SWTWorkarounds.getBounds(item);
}
Veronika Irvine 05/16/2005 04:58:02 PM:
&gt;&gt; I have reproduced the problem and seen that the code from M6 and
&gt;&gt; from 38436#c112 both fail whereas "code adapted from o.e.swt.
&gt;&gt; patched.MenuItem.getBounds()" works. Will investigate with Steve.

Veronika Irvine  2005-05-16 17:55
&gt; I have run MenuItemGetBoundsTest. As SN described, the problem seems
&gt; to be that Menu.getBounds() is returning its result in display
&gt; coordinates and the code in WidgetLocator is translating these
&gt; display relative coordinates using
&gt; item.getParent().getParent().toDisplay(bounds.x,bounds.y); and this
&gt; is not neccessary.

Doh! I still don't understand why the translation only failed in-
workbench and not standalone, but the tests now pass, which is what
counts. Thanks so much!
For future consideration, I think the problem would be simplified if Menu 
supported toControl() and toDisplay().  That way you would not have to do the 
following math:

if ((parent.getStyle() &amp; SWT.RIGHT_TO_LEFT) != 0) {
	itemRect.x = menuRect.x + menuRect.width - itemRect.width - itemRect.x;
} else {
	itemRect.x += menuRect.x;
}
itemRect.y += menuRect.y;

Instead, you would just get the bounds of the MenuItem (itemRect in the code 
above) and call menuItem.getParent().toDisplay(itemRect.x, itemRect.y).
Yes, but more importantly, Display.map() needs to take more than just 
controls.  Display.map() is the API that maps whole rectangles from RTL and 
LTR coordinate systems which is the right way to do coordinate transformations 
in a mirrored world.
org.eclipse.swt.custom.CTabFolder class do not expose any methods to get the
Rectangle bounds of :
          1) Chevron &gt;&gt;&gt; button
          2) Minimize/Maximize button
          3) Close button

In Eclipse 3.0 milestones releases, methods exists to get those bounds but they 
were removed. The implications for GUI Test Automation tool(IBM Rational 
Functional Tester) is that they CANNOT click on the chevron, min/max or close 
buttons and so cannot test complex cases where more views are stacked at a 
CTabFolder.
Created attachment 23906
abbot.swt.SWTWorkarounds shelters users from Widget.getBounds()-related problems: cases where either Whatever.getBounds() is unavailable, not public, or has unwelcome behavior.

Most up-to-date code, as well as code for users of abbot.swt.SWTWorkarounds
(currently

abbot.tester.swt.WidgetLocator
abbot.tester.swt.MenuItemTester
abbot.tester.swt.ScrollBarTester
abbot.tester.swt.TableTester
abbot.tester.swt.TreeItemTester

) is available (with null password) from

cvs -d:pserver:anonymous@cvs.sourceforge.net:/cvsroot/abbot co abbot.swt
Tao Weng 05/26/2005 11:43 AM
&gt;&gt;&gt; Currently, Abbot.swt solution is not platform independent due to
&gt;&gt;&gt; bugzilla defect number 38436.

&lt;snip&gt;

&gt;&gt;&gt; 1) Is the defect going to be fixed within the next 6 months or so? 
&gt;&gt;&gt; If not, when is it going to be available. Just roughly....

&gt;&gt;&gt; 2) Is it possible to release a patched version of swt for linux 
&gt;&gt;&gt; environment in the next 6 months. Just like what we did for windows? 

Steve Northover 05/26/2005 12:19:43 PM:
&gt;&gt; Yes. Either the bug will be fixed or I will work with Tom to ensure
&gt;&gt; that Abbot is patched to support Linux. 

Tom Roche 05/26/2005 10:15 PM
&gt; Thanks!

&gt;&gt; Tom, if you contribute the [SWTWorkarounds] class from Abbot to
&gt;&gt; the bug report, we will look at providing implementations for the
&gt;&gt; other plaforms.

&gt; Will do soonest, just verifying a (candidate) fix for 3.0 first.

Unfortunately soonest was much less soon than I had hoped :-( but I
have refactored such that (IIUC) all abbot.swt's SWT workarounds are
in abbot.swt.SWTWorkarounds, which is now attached. Apologies for the
delay, your assistance is appreciated.

I am working on a version of SWTWorkarounds that can be used for 3.1.  Hold 
the phone.

Thomas, the implementation of swt2Awt() can't work anywhere else but Windows.  
The format of the KeyTable is platforms specific.  Is this method critical to 
Abbot? (seems like it might be).  Can you please recode this method either as 
a horrible huge case statement or a hash table and post the code here?  Thanks!
We have the code ready but need an implementation of swt2Awt() before we can 
proceed.
Comment #120 From Steve Northover  2005-07-11 11:53
&gt; I am working on a version of SWTWorkarounds that can be used for
&gt; 3.1.

Great! Thanks for your cooperation!

&gt; Thomas, the implementation of swt2Awt() can't work anywhere else
&gt; but Windows. The format of the KeyTable is platforms specific.

Steve, SWTWorkarounds.keyTable exists to enable
SWTWorkarounds.swt2Awt(int swtKeyValue), and both are in
SWTWorkarounds because ... they're more &lt;bleep&gt;ing workarounds for
SWT. As the latter's javadoc states:

  /**
   * Translates from SWT keys values to AWT ones, e.g.
   * from &lt;code&gt;SWT.ESC&lt;/code&gt; to &lt;code&gt;VK_ESCAPE&lt;/code&gt;.
   * For details see
   * {@link org.eclipse.swt.widgets.Display#KeyTable}
   * Workaround for package scope of
   * {@link org.eclipse.swt.widgets.Display#untranslateKey(int)}
   */

So ... could you please just make Display.untranslateKey(int) public?
instead of requiring Yet Another Workaround

&gt; Can you please recode this method either as a horrible huge case
&gt; statement or a hash table

from your users? 

Tom, I'm going to appeal one last time to please skip the editorial comments 
like "bleep" or "Yet Another WorkAround".  They are offsensive, cloud the 
issue, waste time and make me wonder why on earth I would want to help someone 
who continually insults me and the work I do.

Please read the rest of this comment and respond only to the technical issues.

&gt;Thomas, the implementation of swt2Awt() can't work anywhere else but
&gt;Windows.  The format of the KeyTable is platforms specific.

The package variable KeyTable maps SWT key constants to platform specific key 
constants.  On Windows, keys like SWT.HOME are mapped to the Windows constant 
VK_HOME.  On GTK, SWT.HOME is mapped to GDK_HOME.  It does not map SWT key 
constants to AWT key constants and therefore cannot be made to do this.  In 
addition, it does not make sense for SWT to provide a mechanism to map SWT 
constants to AWT constants.  For one, AWT doesn't exist on all the platforms 
where SWT runs.  So, if Abbot needs to make AWT constants to SWT constants for 
some reason, Abbot will need code to do this.  Since I have no idea what this 
mapping is used for and cannot know from the source code in SWTWorkarounds, 
you are the most logical person to write the code and contribute it.

Other than the mapping table, we are ready to go.

Comment #123 From Steve Northover 2005-07-12 13:20
&gt; Tom, I'm going to appeal one last time to please skip the editorial
&gt; comments like "bleep" or "Yet Another WorkAround".

Steve, lighten up, then

&gt; respond only to the technical issues.

e.g. 

Comment #122 From Tom Roche  2005-07-12 12:06
&gt;&gt; could you please just make Display.untranslateKey(int) public?

If not I'll try reflecting on it, which would presumably obviate the
need for the local copy of org.eclipse.swt.widgets.Display.KeyTable
(or am I missing something?)

The mapping table in Display is different on every platform.  It maps SWT keys 
to platform specific keys, not AWT keys.  Therefore it cannot be used.  You 
will need to provide an implementation that maps SWT keys to AWT keys.  Once 
we have that code, the 3.1 SWTWorkarounds patch will be complete.
To be even more precise, the mapping table will be portable and will live 
inside SWTWorkarounds.
Comment #125 From Steve Northover  2005-07-12 17:54
&gt; The mapping table in Display is different on every platform. It maps
&gt; SWT keys to platform specific keys, not AWT keys. Therefore it
&gt; cannot be used. You will need to provide an implementation that maps
&gt; SWT keys to AWT keys.

OK, will do. If you know of any tables with this information, please
point.

I know of none.
Created attachment 25375
org.eclipse.swt.widgets.SWTWorkarounds lives in Abbot, exposing needed package-privates to users

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c122
From Tom Roche  2005-07-12 12:06
&gt;&gt; could you please just make Display.untranslateKey(int) public?

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c125
From Steve Northover 2005-07-12 17:54
&gt; The mapping table in Display is different on every platform. It
&gt; maps SWT keys to platform specific keys, not AWT keys. Therefore it
&gt; cannot be used.

Apologies for the delay. Turns out that SWTWorkarounds.swt2Awt was a
red herring:

* it did _not_ translate from SWT to AWT key values

* its caller needed translation from SWT to native, hence the local
  copy of Display.KeyTable.

Please find

https://bugs.eclipse.org/bugs/attachment.cgi?id=25375

attached. In addition to renaming the method, I also changed
SWTWorkarounds' package to workaround the package-visibility issues:
this allows SWTWorkarounds.swt2OS to call Display.untranslateKey(int)
directly. I'll also try eliminate the reflection in
getBounds(MenuItem) after we branch for 3.1. Meanwhile,

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c120
From Steve Northover  2005-07-11 11:53
&gt;&gt;&gt; I am working on a version of SWTWorkarounds that can be used for
&gt;&gt;&gt; 3.1.

Please lemme know if you find any other obstacles.

&gt;Other than the mapping table, we are ready to go.

1) Please don't write any code or change anything in the SWTWorkarounds class 
(other than the mapping table).  We are have been ready to go with the code 
for a while.  No other work is necessary and changing anything else in the 
file may actually cause work.

2) Are you telling me that Abbot really needs to translate SWT keys to 
operating system keys in order to work?  There is no API in SWT that will 
accept operating system key values and do anything sensible with them.  Is 
there an API in AWT or Abbot that takes operating system key values?  If so, 
how is Abbot for AWT getting these values?  Is there AWT API that translates 
AWT key values to operating system key values?



https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c131
From Steve Northover  2005-07-27 18:57 (rearranged)
&gt; 2) Are you telling me that Abbot really needs to translate SWT keys
&gt; to operating system keys in order to work?

If you define "really" as in "SWT really needs to have a package-
private Display.untranslateKey(int)," then yes: at the moment, in one
place, it does.

&gt; 1) Please don't write any code or change anything in the
&gt; SWTWorkarounds class (other than the mapping table). We are have
&gt; been ready to go with the code for a while. No other work is
&gt; necessary and changing anything else in the file may actually cause
&gt; work.

What has changed:

* the package, allowing ...

* ... keyTable (and initKeyTable(...)) to disappear, per your request

* swt2Awt(...) -&gt; swt2OS(...)

* swt2OS(...) calls Display.untranslateKey(int) directly

Since presumably none of your code used the local keyTable or called
initKeyTable(...) or swt2Awt(...), you should have no problems.

Billy to go and get the Abbot source and find out what Abbot is doing with 
operating system key values to determine whether the API is needed or not and 
post the results in this bug report.
The only code I found that used swt2OS() was in TreeItemTester:

  new Robot().keyPress(SWTWorkarounds.swt2OS(SWT.ESC));

The method swt2OS(SWT.ESC) returns GDK_Escape (0xff1b) under GTK+.  I cannot
find any code path in Robot().keyPress() which expects a GDK key value, and
sending 0xff1b to an AWT robot under GTK+ results in an invalid key code
exception.  I assume this works on Windows because SWT.ESC maps to Windows'
VK_ESCAPE (0x1b) which I guess happens to have the same value as the AWT VK_ESCAPE.

I don't think this function is actually useful to you.  Is there somewhere else
you intended to use this?
https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c131
From Steve Northover  2005-07-27 18:57
&gt;&gt;&gt; 2) Are you telling me that Abbot really needs to translate SWT
&gt;&gt;&gt; keys to operating system keys in order to work?

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c132
From Tom Roche  2005-07-27 19:27
&gt;&gt; If you define "really" as in "SWT really needs to have a package-
&gt;&gt; private Display.untranslateKey(int)," then yes: at the moment, in
&gt;&gt; one place, it does.

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c134
From Billy Biggs  2005-07-28 10:59
&gt; The only code I found that used swt2OS() was in TreeItemTester:

&gt;   new Robot().keyPress(SWTWorkarounds.swt2OS(SWT.ESC));

Correct.

&gt; The method swt2OS(SWT.ESC) returns GDK_Escape (0xff1b) under GTK+. I
&gt; cannot find any code path in Robot().keyPress() which expects a GDK
&gt; key value, and sending 0xff1b to an AWT robot under GTK+ results in
&gt; an invalid key code exception. I assume this works on Windows
&gt; because SWT.ESC maps to Windows' VK_ESCAPE (0x1b) which I guess
&gt; happens to have the same value as the AWT VK_ESCAPE.

Doh! hafta do an swt2Awt after all ...

&gt; I don't think this function is actually useful to you. Is there
&gt; somewhere else you intended to use this?

As stated above, just this one place. Doesn't mean it won't be useful
in the future, but if you really can't tolerate its existence, feel
free to remove: we can always add it back if needed.


&gt; 
&gt; As stated above, just this one place. Doesn't mean it won't be useful
&gt; in the future, but if you really can't tolerate its existence, feel
&gt; free to remove: we can always add it back if needed.
&gt; 

YAGNI

What Billy is trying to tell you is that this method is not only useless, it 
is also broken.  It does not work on GTK.

After examining the Abbot source code, we have determined that the intent of 
the method is to map SWT key values to AWT key values (not operating system 
key values as was previously claimed).  Since Abbot calls swt2OS() in exactly 
one place, always with SWT.ESC and SWT.ESC maps to AWT's VK_ESCAPE, I suggest 
you change Abbot to simply inline AWT's VK_ESCAPE.  To be more precise, change 
the line to TreeItemTester to be:

  new Robot().keyPress(KeyEvent.VK_ESCAPE));

Once this is done, we can release the patch.
https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c137
From Steve Northover  2005-07-28 13:39
&gt; new Robot().keyPress(KeyEvent.VK_ESCAPE));

Done!
Created attachment 25431
SWTWorkarounds for Abbot (SWT 3.1, Windows, GTK and Motif)

Here is the SWTWorkarounds class for Abbot (SWT 3.1, Windows, GTK and Motif).  


NOTE: There is no work around code for the Mac due to missing operating system
features for that platform and lack of support from Apple.  Too bad!
should getBounds(Menu) call itself or getBounds((Object)menu);?
&gt; should getBounds(Menu) call itself or getBounds((Object)menu);?

ditto getBounds(MenuItem) ... that first stack overflow was attention-grabbing :-)
Oops, we didn't do a final test pass on everything (but the code should be 
close).  Please attach a new class with your fixes when you have finished 
testing it.  If you have any problems, let us know.
&gt; Created an attachment (id=25431) [edit]
&gt; SWTWorkarounds for Abbot (SWT 3.1, Windows, GTK and Motif)
&gt; 
&gt; Here is the SWTWorkarounds class for Abbot (SWT 3.1, Windows, GTK and Motif).  

This does not work properly for menu(item)s (I already added the cast to
Object). The coordinates do not get mapped to display space coords. As I am not
involved into abbot at all, I don't know whether this should happen in
SWTWorkarounds or in WidgetLocator.getBounds(). However,
SWTWorkarounds.getBounds(Menu menu) already answers display space coords for me
(Linux/GTK). So, I added a  

itemRect.y += menuRect.y;

in getBounds(MenuItem menuItem) and it seems to work fine for me. Here is the
whole method:

public static Rectangle getBounds(MenuItem menuItem) {
        Rectangle itemRect = getBounds ((Object)menuItem);
        Rectangle menuRect = getBounds (menuItem.getParent ());
        if ((menuItem.getParent ().getStyle() &amp; SWT.RIGHT_TO_LEFT) != 0) {
            itemRect.x = menuRect.x + menuRect.width - itemRect.width - itemRect.x;
        } else {
            itemRect.x += menuRect.x;
        }
        itemRect.y += menuRect.y;
        return itemRect;
}
Created attachment 25499
SWTWorkarounds for Abbot (SWT 3.1: Windows, GTK, Motif)

https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c143
From i.maier@tu-bs.de  2005-08-01 06:08
&gt; I added a  

&gt; itemRect.y += menuRect.y;

&gt; in getBounds(MenuItem menuItem) and it seems to work fine for me.

Thanks, Ingo Maier! Attachment also fixes the stack overflows.
Remaining known issues:

* tree item finding (e.g. in New Wizard dialog) requires "training": a
  test will fail the first time, but succeeds after first manual
  iteration. E.g. I observe the sequence [Run&gt;Run&gt;&lt;test&gt;: fails, run
  the same scenario manually, Run&gt;Run&gt;&lt;test&gt;: succeeds] with several
  tests (JavaProjectTester, WTPSimpleWebProjectTest, WTPWizardTest).

* need to handle cases when method is unavailable

* incomplete Carbon support
https://bugs.eclipse.org/bugs/show_bug.cgi?id=38436#c144
&gt; Remaining known issues:

on win32: need reports from other platforms

Created attachment 25568
SWTWorkarounds for Abbot (SWT 3.1: Windows, GTK, Motif)

OK, here is the latest class.  I tested the code on Windows, GTK and Motif.

TOM:  Do not put this class in org.eclipse.swt.widgets.  It is temporary work
around code specifically for Abbot.  I put it in the package abbot.swt which
was the original place you had the workaround.
&gt;* tree item finding (e.g. in New Wizard dialog) requires "training": a
&gt;  test will fail the first time, but succeeds after first manual

Enter a new bug report for this.  It has nothing to do with this bug report.
As I see, this topic is dead for a half year, and still not solved. From what I understood here, MenuItem on MacOS is stuck, but other widgets, which have fixed place (like TabItem) didn't run into this problem and could be implemented on all platforms. Couldn't this be done at least for widgets for which it is possible? Cause I see the need not only for automatic testing, but for general use (such as creating context menus for TabItem's).
I agree with you, however, we cannot offer API on one platform that cannot be implemented on another or SWT will cease to be portable.
That's really true, but I'm talking only about widgets, for which such functionality can be implemented on all platforms. This wouldn't break portability.
Steve, per our recent email exchange, would you please provide a workaround/patch implementation of getBounds() for TreeColumn (analogous to what we're using for some of the other non-Control Widgets in our SWTWorkarounds class in abbot.swt (on SourceForge)?  Thanks.
NOTE:  Our email exchange consisted of me asking Gary to ask for this new feature in the bug report.
Created attachment 56919
SWTWorkarounds for Abbot (SWT 3.2: Windows, GTK, Motif) 

New versions of the code for 3.2.
Created attachment 74636
extends SWT to add a getBounds method for MenuItem, and for TabItem, on OSX

The enclosed code extends SWT to add a getBounds method for MenuItem, and for TabItem, on OSX.

The way it does this is to use the Accessibility API. You must first have checked the item
	'System Preferences/Universal Access/Enable access for assistive devices' 
This is unfortunate, but this seems like an acceptable cost for a test framework.
Comment on attachment 74636
extends SWT to add a getBounds method for MenuItem, and for TabItem, on OSX</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38437" />
    <CreationDate amount="2003-06-04 16:24:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[EditorMgmt] associations: adding menuitem to the "Open With" sub menu in Popup Menu</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Need to add a menu item to the "open with"  sub menu of the pop up
menu that arise when we right click in the resource navigator view.
I don't want to do it programatically.
I want to set it through plugin.xml.
I hope one way to do it is to use the editor extension point and associate
the particular extension with our editor.
But I have problem in doing so, I want my editor to come for all files
irrespective of extension, further my editor should not be the default
editor for the files that has already  been associated with some other
editor.
A good example I can give is text editor.We can open any file with the text
editor using "open with" options in the popup menu but the text editor won't
be the default editor for the files that has some other editor assigned as
default editor.
I need to know how the text editor plug-in is able to act as default editor for 
the file that has no editor associated with it. What is the technical procedure 
that goes with text editor. If text editor plug-in is able to it then what is 
the secret formula that they are following to do this. 
Please explain in details 

MorPheus


As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.</WithStack>
    <WithOutStack>Need to add a menu item to the "open with"  sub menu of the pop up
menu that arise when we right click in the resource navigator view.
I don't want to do it programatically.
I want to set it through plugin.xml.
I hope one way to do it is to use the editor extension point and associate
the particular extension with our editor.
But I have problem in doing so, I want my editor to come for all files
irrespective of extension, further my editor should not be the default
editor for the files that has already  been associated with some other
editor.
A good example I can give is text editor.We can open any file with the text
editor using "open with" options in the popup menu but the text editor won't
be the default editor for the files that has some other editor assigned as
default editor.
I need to know how the text editor plug-in is able to act as default editor for 
the file that has no editor associated with it. What is the technical procedure 
that goes with text editor. If text editor plug-in is able to it then what is 
the secret formula that they are following to do this. 
Please explain in details 

MorPheus


As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38438" />
    <CreationDate amount="2003-06-04 16:24:00 -0400" />
    <DupId amount="15025" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Programmatically clicking on, typing in, and focusing on Widgets</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1) click on the Widget;</Line>
          <Line>2) type in the Widget;</Line>
          <Line>2) give focus to the Widget;</Line>
          <Line>and, in general, generate any basic action to which a generic Widget can</Line>
          <Line>respond.  Then, complex test simulations can be created from combinations of</Line>
          <Line>these basic actions and those already provided by the SWT API, to allow for the</Line>
          <Line>sort of automated testing that we're looking for.</Line>
          <Line>Can you use the AWT robot API to generate events in the operating system?</Line>
          <Line>This item is not on the Eclipse 3.0 plan.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>We are currently working on integrating Abbot, a Java GUI testing framework 
originally intended for AWT, for use with SWT to allow for whitebox testing of 
SWT GUIs.  There currently exist a number of such tools for AWT, but SWT can 
claim none (as far as I know).  And although SWT is superior to AWT in many 
respects, it clearly falls short of its competitor in this arena.  To even the 
field and extend Abbot to SWT, we need the capability to programmatically 
manipulate SWT Widgets in a manner that mimics the user.      

Specifically, we would like to request a set of methods, that, when given an 
instance of an SWT Widget, can:  
	1) click on the Widget;
	2) type in the Widget;
	2) give focus to the Widget;
and, in general, generate any basic action to which a generic Widget can 
respond.  Then, complex test simulations can be created from combinations of 
these basic actions and those already provided by the SWT API, to allow for the 
sort of automated testing that we're looking for.
Can you use the AWT robot API to generate events in the operating system?  
This item is not on the Eclipse 3.0 plan.


*** This bug has been marked as a duplicate of 15025 ***
Steve Northover  2003-06-17 17:40
&gt; Can you use the AWT robot API to generate events in the operating
&gt; system? This item is not on the Eclipse 3.0 plan.

&lt;sigh/&gt; I guess we'll hafta try ...</WithStack>
    <WithOutStack>We are currently working on integrating Abbot, a Java GUI testing framework 
originally intended for AWT, for use with SWT to allow for whitebox testing of 
SWT GUIs.  There currently exist a number of such tools for AWT, but SWT can 
claim none (as far as I know).  And although SWT is superior to AWT in many 
respects, it clearly falls short of its competitor in this arena.  To even the 
field and extend Abbot to SWT, we need the capability to programmatically 
manipulate SWT Widgets in a manner that mimics the user.      

Specifically, we would like to request a set of methods, that, when given an 
instance of an SWT Widget, can:  
	1) click on the Widget;
	2) type in the Widget;
	2) give focus to the Widget;
and, in general, generate any basic action to which a generic Widget can 
respond.  Then, complex test simulations can be created from combinations of 
these basic actions and those already provided by the SWT API, to allow for the 
sort of automated testing that we're looking for.
Can you use the AWT robot API to generate events in the operating system?  
This item is not on the Eclipse 3.0 plan.


*** This bug has been marked as a duplicate of 15025 ***
Steve Northover  2003-06-17 17:40
&gt; Can you use the AWT robot API to generate events in the operating
&gt; system? This item is not on the Eclipse 3.0 plan.

&lt;sigh/&gt; I guess we'll hafta try ...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38439" />
    <CreationDate amount="2003-06-04 16:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[About] Help--&gt;About is missing in 20030604?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The top-level Help menu shows a trailing Separator, and does not show Tips &amp; 
Tricks or the About option.  This appears to happen on all platforms.
*** Bug 38460 has been marked as a duplicate of this bug. ***
This is caused by the Update UI plug-in - when we add this plug-in in self 
hosted mode we lose the About entry, without Update UI we get it.

Reassigning
Chris, could this be caused by the recent changes to the hidden accelerators 
submenu?

i'll have a look as well, but i think it might be a coincidence.
How can a plug-in cause an action to dissapear from the menu by adding its own 
contribution?
If you close all perspectives, the Help menu shows:
Welcome...
Tips &amp; Tricks...
---
About Eclipse Platform

If you the open the resource perspective, it shows:
Help Contents
Software Updates &gt;
---

If you turn off the Help and Software Updates action sets in Customize 
Perspective, the built in actions reappear.  If you turn on either one, the 
built in actions disappear.

Looks like a problem with the workbench's action set management, although it 
only seems to be a problem in the Help menu.


the error is also M20030604-1431. it may be related to my change. will 
investigate.
The problem is related to the code added to avoid disposing the accelerator 
menu item. The menu manager is optimized to avoid creating/disposing menu 
items. It expects all menu items has a contribution item behind it. Not having 
one throws the whole optimizations off.
Interestingly, the problem does not occur in M20030602, but both streams have 
the fix for bug 35750.
I checked the code between 0602 and 0604. The fix was changed during that time.
fixed. changes in 2.1.1 branch and HEAD.</WithStack>
    <WithOutStack>The top-level Help menu shows a trailing Separator, and does not show Tips &amp; 
Tricks or the About option.  This appears to happen on all platforms.
*** Bug 38460 has been marked as a duplicate of this bug. ***
This is caused by the Update UI plug-in - when we add this plug-in in self 
hosted mode we lose the About entry, without Update UI we get it.

Reassigning
Chris, could this be caused by the recent changes to the hidden accelerators 
submenu?

i'll have a look as well, but i think it might be a coincidence.
How can a plug-in cause an action to dissapear from the menu by adding its own 
contribution?
If you close all perspectives, the Help menu shows:
Welcome...
Tips &amp; Tricks...
---
About Eclipse Platform

If you the open the resource perspective, it shows:
Help Contents
Software Updates &gt;
---

If you turn off the Help and Software Updates action sets in Customize 
Perspective, the built in actions reappear.  If you turn on either one, the 
built in actions disappear.

Looks like a problem with the workbench's action set management, although it 
only seems to be a problem in the Help menu.


the error is also M20030604-1431. it may be related to my change. will 
investigate.
The problem is related to the code added to avoid disposing the accelerator 
menu item. The menu manager is optimized to avoid creating/disposing menu 
items. It expects all menu items has a contribution item behind it. Not having 
one throws the whole optimizations off.
Interestingly, the problem does not occur in M20030602, but both streams have 
the fix for bug 35750.
I checked the code between 0602 and 0604. The fix was changed during that time.
fixed. changes in 2.1.1 branch and HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38440" />
    <CreationDate amount="2003-06-04 17:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Navigator does not synch when moving through search results.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When I do a search for say "catch" on my source tree and then use the down arrow
to proceed through the set of search results the navigator does not synch as I
move from a search result in one file to a search result in another file.
You have to enable link with editor in the Navigator (the toolbar button with 
the two arrows).
I tried both with it enabled and disabled same result.  

I am navigating through the search results using the down arrow.  
Daniel,

can you please investigate.
The Eclipse link behavior is focus based i.e. if the editor gets active the
Navigator is synchronized. In order to let you browse trought the results the
Search view is always active. Also, Search as fast view would not work if the
editor would get the focus.

As soon as you activate an editor the Navigator will synchronize.</WithStack>
    <WithOutStack>When I do a search for say "catch" on my source tree and then use the down arrow
to proceed through the set of search results the navigator does not synch as I
move from a search result in one file to a search result in another file.
You have to enable link with editor in the Navigator (the toolbar button with 
the two arrows).
I tried both with it enabled and disabled same result.  

I am navigating through the search results using the down arrow.  
Daniel,

can you please investigate.
The Eclipse link behavior is focus based i.e. if the editor gets active the
Navigator is synchronized. In order to let you browse trought the results the
Search view is always active. Also, Search as fast view would not work if the
editor would get the focus.

As soon as you activate an editor the Navigator will synchronize.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38441" />
    <CreationDate amount="2003-06-04 18:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Allow src folder exclusion filters with no path that exclude all files of a certain type</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>It is common to want to exclude all files of a certain type from a source 
folder's output folder, e.g., all *.html files, regardless of where in the 
source tree the *.html file exists. Right now, it seems the best one can do is 
build an exclusion filter for each level of a source tree. 
e.g., /packagename/*.html, /packagename/*/*.html, /packagename/*/*/*.html ...

Why not allow simply *.html and have exclude all *.html files regardless of 
where they are in the source folder. Or, as an alternative, */*.html with no 
leading slash could represent any number of levels in the source tree.
It should work using "**/*.html" as an exclusion pattern, but I agree with you 
this should be equivalent to "*.html".

Currently, we transform the relative exclusion pattern into a workspace 
relative exclusion pattern: "*.html" --&gt; "/Proj/src/*.html". If the exclusion 
pattern isn't absolute, we should rather append "**/*.html".
Need to investigate.


Actually, originally we had implemented the exclusion patterns to be exactly 
doing so, and we switched to the current story. Cannot remember why we did so.
I take my previous comments back. Also see bug 29761 which explains why we did 
change our original (wrong) behavior.


Ant patternset rules are not treating 'a' as '**/a' by default. Only trailing 
separator is special ('a/' is equivalent to 'a/**').

Thus you should explicitly qualify your exclusion pattern with a leading '**/'.
When I submitted the enhancement request, I was not aware of the **/... 
option.Maybe this should be closed as the functionality is already available. I 
see now that the option is described in the field help, but that was not read 
by my screen reader. The 5/28 build allows field help and error messages to be 
tabbed to, making them accessible to a screen reader. but for some reason that 
feature does not work in the exclusion filter dialog. I will report that in 
that feature's record.</WithStack>
    <WithOutStack>It is common to want to exclude all files of a certain type from a source 
folder's output folder, e.g., all *.html files, regardless of where in the 
source tree the *.html file exists. Right now, it seems the best one can do is 
build an exclusion filter for each level of a source tree. 
e.g., /packagename/*.html, /packagename/*/*.html, /packagename/*/*/*.html ...

Why not allow simply *.html and have exclude all *.html files regardless of 
where they are in the source folder. Or, as an alternative, */*.html with no 
leading slash could represent any number of levels in the source tree.
It should work using "**/*.html" as an exclusion pattern, but I agree with you 
this should be equivalent to "*.html".

Currently, we transform the relative exclusion pattern into a workspace 
relative exclusion pattern: "*.html" --&gt; "/Proj/src/*.html". If the exclusion 
pattern isn't absolute, we should rather append "**/*.html".
Need to investigate.


Actually, originally we had implemented the exclusion patterns to be exactly 
doing so, and we switched to the current story. Cannot remember why we did so.
I take my previous comments back. Also see bug 29761 which explains why we did 
change our original (wrong) behavior.


Ant patternset rules are not treating 'a' as '**/a' by default. Only trailing 
separator is special ('a/' is equivalent to 'a/**').

Thus you should explicitly qualify your exclusion pattern with a leading '**/'.
When I submitted the enhancement request, I was not aware of the **/... 
option.Maybe this should be closed as the functionality is already available. I 
see now that the option is described in the field help, but that was not read 
by my screen reader. The 5/28 build allows field help and error messages to be 
tabbed to, making them accessible to a screen reader. but for some reason that 
feature does not work in the exclusion filter dialog. I will report that in 
that feature's record.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38442" />
    <CreationDate amount="2003-06-04 18:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TVT21: English strings in plugin project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. Windows-&gt; Open Perspective -&gt; Other -&gt; Java</Line>
          <Line>2. In package Explorer expand tvtpluginproject (a plugin project)</Line>
          <Line>3. expand src, expand tvtpluginproject</Line>
          <Line>4. expand tvtpluginprojectPlugin.Java</Line>
          <Line>5. expand TvtpluginprojectPlugin and GetResourceString(Strings)</Line>
          <Line>6. Right click this last one, and select Refactor-&gt; Change Method Signature...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Language: Brazilian Portuguese 

Build driver: 20030602 
Reporter: Ricardo Mandl 
OS: RedHat 8.0 with GTK2.2, and SuSe 8.1 with GTK 2.0.6
Testcase: 08.00200 

Summary: English Strings 

Description: 
The strings "public","protected" and "private" are being displayed in English. 

Steps to recreate: 
1. Windows-&gt; Open Perspective -&gt; Other -&gt; Java 
2. In package Explorer expand tvtpluginproject (a plugin project)
3. expand src, expand tvtpluginproject 
4. expand tvtpluginprojectPlugin.Java 
5. expand TvtpluginprojectPlugin and GetResourceString(Strings) 
6. Right click this last one, and select Refactor-&gt; Change Method Signature... 

The panel is displayed, see attached image for reference
Created attachment 5064
Screenshot from portuguese
I don't know what "padrao" means but it is not a Java keyword.  Public, private 
and protected are keywords and should not be translated.
padrao is portuguese for default.  The translators say they have these words 
all these keywords in their translation memory.  How is default being 
displayed, and not others?
The terms public, protected and private are keywords and should not be 
translated.  "default" is more interesting.  In a brief survey of 3 native 
Portuguese speakers, the conclusion was pretty much split on whether or not it 
should be translated.  Since it is a technical language concept, they did not 
feel strongly that it should be translated.  In fact, some said they 
use "default" (rather than the translation) in common technical communication.

Of course, this may be different in other locales.

I suggest we leave the UI as it is.

Closing.

Some countries feel that it is necessary to translate these strings due to the 
context that they are used in and the requirement of their country.  They would 
like to know if you could externalize these strings.  Please advise.
Please identify the locales where they want such keywords translated.  In 
general, this does not make sense as all words that appear in dialogs/wizards 
(e.g., final, default, abstract, public, ...) would have to be translated for 
consistency.  Consultation with native German, French, Japanese and Portugese 
programmers found none who were interested in have such translations.  

In any event, at this point it is not possible to change all places where such 
keywords appear in all wizards/dialogs in JDT.  That is a huge effort.  

Closing this bug report as no action will be taken in 2.l.1.  If this is a hard 
NL requirement then please log a separate bug report with details of the 
locales and reasoning for translating keywords in JDT for fixing in 3.0.
I agree with Jeff that keywords should not be translated. If we translate 
public, protected,... then we have to think about translating final 
synchronized, static, int, float, if, ... as well.
Have thought a bit about that problem, and actually, being a french developper 
there's no need to translate that string. But, from a linguistic point of view, 
this string should be translated.

In that case it's like asking a question to the user, "is this method 
private ?" and that question (private included) is to be translated in french.

What is displayed is not the value, it's just the label. And you can ask the 
french developper you've asked already and he will not be able to tell you that 
he never heard about "classe privée" which is the translation of "private 
class".

Yes, we translate that in french, and as far as i know we also translate the 
if, then, else for algorithm purpose.

So what i want to say is that from a linguistic point of view, we don't 
translate keywords in french but we just use these keywords in the code. Most 
of the strings that appears in the panels are just labels, and should be 
translated.

Nathanaël
I still don't agree that we should translate Java keywords, but I am a 
developer as well. The reason is that we don't asked questions in these case. 
The UI is

Access modifiers:
 o public o protected o default o private

It would be different if there is a message box asking:

"Is it ok to change the visibility of the method from protected to private."

In this case "protected" and "private" should be translated as well.

Discussed with other product teams and key words are not translated.</WithStack>
    <WithOutStack>Language: Brazilian Portuguese 

Build driver: 20030602 
Reporter: Ricardo Mandl 
OS: RedHat 8.0 with GTK2.2, and SuSe 8.1 with GTK 2.0.6
Testcase: 08.00200 

Summary: English Strings 

Description: 
The strings "public","protected" and "private" are being displayed in English. 

Steps to recreate: 
1. Windows-&gt; Open Perspective -&gt; Other -&gt; Java 
2. In package Explorer expand tvtpluginproject (a plugin project)
3. expand src, expand tvtpluginproject 
4. expand tvtpluginprojectPlugin.Java 
5. expand TvtpluginprojectPlugin and GetResourceString(Strings) 
6. Right click this last one, and select Refactor-&gt; Change Method Signature... 

The panel is displayed, see attached image for reference
Created attachment 5064
Screenshot from portuguese
I don't know what "padrao" means but it is not a Java keyword.  Public, private 
and protected are keywords and should not be translated.
padrao is portuguese for default.  The translators say they have these words 
all these keywords in their translation memory.  How is default being 
displayed, and not others?
The terms public, protected and private are keywords and should not be 
translated.  "default" is more interesting.  In a brief survey of 3 native 
Portuguese speakers, the conclusion was pretty much split on whether or not it 
should be translated.  Since it is a technical language concept, they did not 
feel strongly that it should be translated.  In fact, some said they 
use "default" (rather than the translation) in common technical communication.

Of course, this may be different in other locales.

I suggest we leave the UI as it is.

Closing.

Some countries feel that it is necessary to translate these strings due to the 
context that they are used in and the requirement of their country.  They would 
like to know if you could externalize these strings.  Please advise.
Please identify the locales where they want such keywords translated.  In 
general, this does not make sense as all words that appear in dialogs/wizards 
(e.g., final, default, abstract, public, ...) would have to be translated for 
consistency.  Consultation with native German, French, Japanese and Portugese 
programmers found none who were interested in have such translations.  

In any event, at this point it is not possible to change all places where such 
keywords appear in all wizards/dialogs in JDT.  That is a huge effort.  

Closing this bug report as no action will be taken in 2.l.1.  If this is a hard 
NL requirement then please log a separate bug report with details of the 
locales and reasoning for translating keywords in JDT for fixing in 3.0.
I agree with Jeff that keywords should not be translated. If we translate 
public, protected,... then we have to think about translating final 
synchronized, static, int, float, if, ... as well.
Have thought a bit about that problem, and actually, being a french developper 
there's no need to translate that string. But, from a linguistic point of view, 
this string should be translated.

In that case it's like asking a question to the user, "is this method 
private ?" and that question (private included) is to be translated in french.

What is displayed is not the value, it's just the label. And you can ask the 
french developper you've asked already and he will not be able to tell you that 
he never heard about "classe privée" which is the translation of "private 
class".

Yes, we translate that in french, and as far as i know we also translate the 
if, then, else for algorithm purpose.

So what i want to say is that from a linguistic point of view, we don't 
translate keywords in french but we just use these keywords in the code. Most 
of the strings that appears in the panels are just labels, and should be 
translated.

Nathanaël
I still don't agree that we should translate Java keywords, but I am a 
developer as well. The reason is that we don't asked questions in these case. 
The UI is

Access modifiers:
 o public o protected o default o private

It would be different if there is a message box asking:

"Is it ok to change the visibility of the method from protected to private."

In this case "protected" and "private" should be translated as well.

Discussed with other product teams and key words are not translated.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38443" />
    <CreationDate amount="2003-06-04 20:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="Sun" />
    <op_sys amount="Solaris" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Support GTK on Sparc Solaris</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I'm running GNOME on Solaris. Are there any plans to support SPARC/GTK on the 
Solaris platform in addition to MOTIF?
The plans for 3.0 (next year) are to support GTK on Linux and Motif on
Solaris/AIX/HPUX.

Moving to SWT.
We should just work but probably don't because nobody has tried it.  GG to 
keep an eye on this and test SWT on a GTK Sparc when one becomes available.
*** Bug 49311 has been marked as a duplicate of this bug. ***
As part of the work to reslove this bug, I have added a jface solaris GTK font
properties file to allow support for GTK on Solaris
/org.eclipse.jface/src/org/eclipse/jface/resource/jfacefonts_sunos_gtk.properties

fixed &gt; 1118, solaris-gtk has joined the build lineup.

It has been sniff-tested successfully, but probably contains some less-obvious
problems, so extra initial testing could be beneficial.  Any problems found
should be logged as separate reports; I've requested that Bugzilla's OS field
offer new Gtk-Solaris and Gtk-Motif values.

The eventual eclipse 3.0.2 release should also be available in this flavour.</WithStack>
    <WithOutStack>I'm running GNOME on Solaris. Are there any plans to support SPARC/GTK on the 
Solaris platform in addition to MOTIF?
The plans for 3.0 (next year) are to support GTK on Linux and Motif on
Solaris/AIX/HPUX.

Moving to SWT.
We should just work but probably don't because nobody has tried it.  GG to 
keep an eye on this and test SWT on a GTK Sparc when one becomes available.
*** Bug 49311 has been marked as a duplicate of this bug. ***
As part of the work to reslove this bug, I have added a jface solaris GTK font
properties file to allow support for GTK on Solaris
/org.eclipse.jface/src/org/eclipse/jface/resource/jfacefonts_sunos_gtk.properties

fixed &gt; 1118, solaris-gtk has joined the build lineup.

It has been sniff-tested successfully, but probably contains some less-obvious
problems, so extra initial testing could be beneficial.  Any problems found
should be logged as separate reports; I've requested that Bugzilla's OS field
offer new Gtk-Solaris and Gtk-Motif values.

The eventual eclipse 3.0.2 release should also be available in this flavour.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38444" />
    <CreationDate amount="2003-06-04 20:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>new project, cancel deletes existing files [code manipulation]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. Begin to create a project. Get past the step where it creates an actual</Line>
          <Line>directory, say /workspace/foo.</Line>
          <Line />
          <Line>2. Move some files into /workspace/foo.</Line>
          <Line />
          <Line>3. Cancel the new project creation.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>1. Begin to create a project. Get past the step where it creates an actual
directory, say /workspace/foo.

2. Move some files into /workspace/foo.

3. Cancel the new project creation.

Result: /workspace/foo is gone, including the files moved in there outside
Eclipse (this is not just class files -- source code is gone as well).

Expected result: /workspace/foo is only deleted if no user-created files are in
that directory; i.e., it may only be deleted if the files it contains were
explicitly created during interaction with Eclipse.

A real solution to this bug might also solve bug 20042.
Jack,

I assume that you have done step 2 outside Eclipse since you shouldn't be able 
to do this inside.

Anyway, we should check that the project is empty before deleting it.
you think this is a user error: You shouldn't move copy files in the background.
It's quite hard to detect that new files have been added as the project wizard
doesn't want to know about the standard set of files in an empty project
(project, .classpath...)

How's this user error?! It's presumptuous of an IDE to think that it completely
owns a directory, and can delete it and everything in it at will. As an example,
on Windows, take program Blah installed and then uninstalled. If the uninstaller
is well-behaved, it will not delete any files added to c:\program files\blah by
the user.

Disk is cheap. There's no need to get overzealous about having to delete every
last file.

This WONTFIX is really bad UI, it results in data loss.
If I undestood you right, you were in the middle of the new project wizard.
Why not pressing 'finish' and then add the files?

To be quite honest, I don't remember exactly what was going through my mind on
2003-06-04 at 20:46. :P But I think I was trying out Eclipse for the first time,
 and I wasn't sure how projects worked in Eclipse. Regardless, "Cancel" during
the new project wizard just means "I changed my mind." You'd expect a user to be
able to say "I changed my mind" without incurring data loss.

Here's a kludgey fix. If the wizard doesn't want to know what files are
standard, it could create the new project in some other hidden place, and only
move it to where the user asked for it after "Finish" has been pressed. Then the
user can't move files to a non-existent directory, and the wizard has the chance
to make sure that nothing exists where the files will get moved.
I realized that the fix is quite trivial. i can check for non-synchronized 
resources before deleting.


fixed &gt; 20040321
Taking bug for M8 testing.
Finished M8 testing.</WithStack>
    <WithOutStack>1. Begin to create a project. Get past the step where it creates an actual
directory, say /workspace/foo.

2. Move some files into /workspace/foo.

3. Cancel the new project creation.

Result: /workspace/foo is gone, including the files moved in there outside
Eclipse (this is not just class files -- source code is gone as well).

Expected result: /workspace/foo is only deleted if no user-created files are in
that directory; i.e., it may only be deleted if the files it contains were
explicitly created during interaction with Eclipse.

A real solution to this bug might also solve bug 20042.
Jack,

I assume that you have done step 2 outside Eclipse since you shouldn't be able 
to do this inside.

Anyway, we should check that the project is empty before deleting it.
you think this is a user error: You shouldn't move copy files in the background.
It's quite hard to detect that new files have been added as the project wizard
doesn't want to know about the standard set of files in an empty project
(project, .classpath...)

How's this user error?! It's presumptuous of an IDE to think that it completely
owns a directory, and can delete it and everything in it at will. As an example,
on Windows, take program Blah installed and then uninstalled. If the uninstaller
is well-behaved, it will not delete any files added to c:\program files\blah by
the user.

Disk is cheap. There's no need to get overzealous about having to delete every
last file.

This WONTFIX is really bad UI, it results in data loss.
If I undestood you right, you were in the middle of the new project wizard.
Why not pressing 'finish' and then add the files?

To be quite honest, I don't remember exactly what was going through my mind on
2003-06-04 at 20:46. :P But I think I was trying out Eclipse for the first time,
 and I wasn't sure how projects worked in Eclipse. Regardless, "Cancel" during
the new project wizard just means "I changed my mind." You'd expect a user to be
able to say "I changed my mind" without incurring data loss.

Here's a kludgey fix. If the wizard doesn't want to know what files are
standard, it could create the new project in some other hidden place, and only
move it to where the user asked for it after "Finish" has been pressed. Then the
user can't move files to a non-existent directory, and the wizard has the chance
to make sure that nothing exists where the files will get moved.
I realized that the fix is quite trivial. i can check for non-synchronized 
resources before deleting.


fixed &gt; 20040321
Taking bug for M8 testing.
Finished M8 testing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38445" />
    <CreationDate amount="2003-06-04 21:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="minor" />
    <Summery>[hovering] Java Editor Example: error in JavaTextHover.java</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="multicomment">
        <location start="0" end="294" />
        <code>/****
 
1.The following code incorrect treat Point.x and Point.y
  as Region.offset and Region.length.

2.There is potential source of errors in the method:
  ---  Point Viewer.getSelectedRange();
  where Point substitutes the Range.

3.And what is the history of naming the Range Region?
****/</code>
      </source_code>
      <source_code type="assignment">
        <location start="363" end="415" />
        <code>Point selection = textViewer.getSelectedRange();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="485" end="535" />
        <code>return new Region(selection.x, selection.y);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="536" end="569" />
        <code>return new Region(offset, 0);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>/****
 
1.The following code incorrect treat Point.x and Point.y
  as Region.offset and Region.length.

2.There is potential source of errors in the method:
  ---  Point Viewer.getSelectedRange();
  where Point substitutes the Range.

3.And what is the history of naming the Range Region?
****/
  public IRegion getHoverRegion(ITextViewer viewer, int offset)
  {
    Point selection = textViewer.getSelectedRange();
    if (selection.x &lt;= offset &amp;&amp; offset &lt; selection.x + selection.y)
      return new Region(selection.x, selection.y);
    return new Region(offset, 0);
  }
&gt;And what is the history of naming the Range Region?
'range' in the viewer is "inherited" from the StyledText widget while in
Platform Text we normally use region.

Can you explain what you think is not OK. Can you provide an example where this
is not working?
I mapped Point to Range as (Point.x, Point.y) -&gt; (Range.start, Range.end), not
as code does - (Point.x, Point.y) -&gt; (Range.offset, Range.length). With such
mapping the above code works.

Hope, this was only *potential* source of errors and this bug could be closed. :)</WithStack>
    <WithOutStack>/****
 
1.The following code incorrect treat Point.x and Point.y
  as Region.offset and Region.length.

2.There is potential source of errors in the method:
  ---  Point Viewer.getSelectedRange();
  where Point substitutes the Range.

3.And what is the history of naming the Range Region?
****/
  public IRegion getHoverRegion(ITextViewer viewer, int offset)
  {
    Point selection = textViewer.getSelectedRange();
    if (selection.x &lt;= offset &amp;&amp; offset &lt; selection.x + selection.y)
      return new Region(selection.x, selection.y);
    return new Region(offset, 0);
  }
&gt;And what is the history of naming the Range Region?
'range' in the viewer is "inherited" from the StyledText widget while in
Platform Text we normally use region.

Can you explain what you think is not OK. Can you provide an example where this
is not working?
I mapped Point to Range as (Point.x, Point.y) -&gt; (Range.start, Range.end), not
as code does - (Point.x, Point.y) -&gt; (Range.offset, Range.length). With such
mapping the above code works.

Hope, this was only *potential* source of errors and this bug could be closed. :)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38446" />
    <CreationDate amount="2003-06-05 03:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Delete: Dialog too big</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. select a Java file</Line>
          <Line>2. press delete</Line>
          <Line>3. the dialog showing up seemsto have a heigth that is too big. when resizing</Line>
          <Line>you it looks like there is an invisible widget taking space</Line>
          <Line>The message also seems to be longer than needed:</Line>
          <Line>'Are you sure you want to delete compilation unit 'A.java'?'</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>20030604

1. select a Java file
2. press delete
3. the dialog showing up seemsto have a heigth that is too big. when resizing
you it looks like there is an invisible widget taking space
The message also seems to be longer than needed:
'Are you sure you want to delete compilation unit 'A.java'?'

Are we using 'compilation unit' in the UI? Maybe it would be better to simply say
'Are you sure you want to delete 'A.java'?'

Also note that for long file names the label is not wrapped and the dialog get's
very big.
The terms 'package fragment' and 'package fragment root' should also not be used.

-&gt; package, source folder, JAR, class folder...
Adam,

can you please take care of the wording (package fragment and package fragment 
root) and then move it to me so I can look into the dialog size.
*** Bug 38680 has been marked as a duplicate of this bug. ***
done
Dirk - i think you had an idea for a double-layout trick that would make the 
dialog smaller
Since we don't know how the "Responsive UI task" affects progress reporting I 
postpone this one until M3.

I can make the dialog smaller for refactoring that don't show progress and a 
status even if we keep progress reporting in the dialog. 
I postpone this again. If we convert autobuild to background build the dialog 
only needs progress when deleting "lots of files". Hope that during M4 we see 
how background builds work
*** Bug 42101 has been marked as a duplicate of this bug. ***
The progress reporting story is still not addressed in eclipse.ui. Tod is 
working on it and we should wait until this has finished
Didn't change this for 3.0. 
Closing. No further action planned.</WithStack>
    <WithOutStack>20030604

1. select a Java file
2. press delete
3. the dialog showing up seemsto have a heigth that is too big. when resizing
you it looks like there is an invisible widget taking space
The message also seems to be longer than needed:
'Are you sure you want to delete compilation unit 'A.java'?'

Are we using 'compilation unit' in the UI? Maybe it would be better to simply say
'Are you sure you want to delete 'A.java'?'

Also note that for long file names the label is not wrapped and the dialog get's
very big.
The terms 'package fragment' and 'package fragment root' should also not be used.

-&gt; package, source folder, JAR, class folder...
Adam,

can you please take care of the wording (package fragment and package fragment 
root) and then move it to me so I can look into the dialog size.
*** Bug 38680 has been marked as a duplicate of this bug. ***
done
Dirk - i think you had an idea for a double-layout trick that would make the 
dialog smaller
Since we don't know how the "Responsive UI task" affects progress reporting I 
postpone this one until M3.

I can make the dialog smaller for refactoring that don't show progress and a 
status even if we keep progress reporting in the dialog. 
I postpone this again. If we convert autobuild to background build the dialog 
only needs progress when deleting "lots of files". Hope that during M4 we see 
how background builds work
*** Bug 42101 has been marked as a duplicate of this bug. ***
The progress reporting story is still not addressed in eclipse.ui. Tod is 
working on it and we should wait until this has finished
Didn't change this for 3.0. 
Closing. No further action planned.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38447" />
    <CreationDate amount="2003-06-05 04:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>AST: Source ranges with missing bracket</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Create a project with the JUnit source</Line>
          <Line>2. In 'ResultPrinter' remove the closing bracket of the constructor. Note: The</Line>
          <Line>outliner still shows to structure of the CU</Line>
          <Line>3. Select the constructor in the outliner</Line>
          <Line>4. press delete: This removes almost the whole CU</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20030604

1. Create a project with the JUnit source
2. In 'ResultPrinter' remove the closing bracket of the constructor. Note: The
outliner still shows to structure of the CU
3. Select the constructor in the outliner
4. press delete: This removes almost the whole CU

Either the AST get's as good as the reconciler in recovering or we could update
the AST positions with the JAVAElement position when we detect errors in the AST
The AST contains all elements even the bracket is missing!
Unfortunatly the length of the constructor node is too large.

Moving to JCore to ask if it would be possible to get more valid ranges (e.g.
like the Java elements). Currently the ranges are overlapping.
Could you please provide the exact test case? What I tried works fine.
added ASTRewritingMethodDeclTest.testBUG_38447
I looked at your test case. You cannot expect the comments to be part of the
foo1 declaration. If the last comment is a javadoc comment instead of a block
comment, then it will be included in the foo1 declaration. Otherwise these
comments are not attached to a particular node.
I fixed the code to stop the declaration of foo on the opening brace '{'. In
case of a syntax error, it is much more difficult to get the right positions. I
don't remember that we ever garantee any "reliable" positions in case of a
syntax error.
Don't care about the comment. The problem reported is that the range of foo is 
covering the other methods. If the range now ends on { that's great.

Fixed and released in HEAD contents.
Regression tests added.
Verified.</WithStack>
    <WithOutStack>20030604

1. Create a project with the JUnit source
2. In 'ResultPrinter' remove the closing bracket of the constructor. Note: The
outliner still shows to structure of the CU
3. Select the constructor in the outliner
4. press delete: This removes almost the whole CU

Either the AST get's as good as the reconciler in recovering or we could update
the AST positions with the JAVAElement position when we detect errors in the AST
The AST contains all elements even the bracket is missing!
Unfortunatly the length of the constructor node is too large.

Moving to JCore to ask if it would be possible to get more valid ranges (e.g.
like the Java elements). Currently the ranges are overlapping.
Could you please provide the exact test case? What I tried works fine.
added ASTRewritingMethodDeclTest.testBUG_38447
I looked at your test case. You cannot expect the comments to be part of the
foo1 declaration. If the last comment is a javadoc comment instead of a block
comment, then it will be included in the foo1 declaration. Otherwise these
comments are not attached to a particular node.
I fixed the code to stop the declaration of foo on the opening brace '{'. In
case of a syntax error, it is much more difficult to get the right positions. I
don't remember that we ever garantee any "reliable" positions in case of a
syntax error.
Don't care about the comment. The problem reported is that the range of foo is 
covering the other methods. If the range now ends on { that's great.

Fixed and released in HEAD contents.
Regression tests added.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38448" />
    <CreationDate amount="2003-06-05 04:29:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Delete: Dialog wording for constructors [ccp]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>1. Select a constructor in the outliner and press delete.</Line>
          <Line>2. The dialog says 'Are you sure you want to delete method 'ResultPrinter'?'</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604

1. Select a constructor in the outliner and press delete.
2. The dialog says 'Are you sure you want to delete method 'ResultPrinter'?'

Should say constructor, not method.
fixed</WithStack>
    <WithOutStack>20030604

1. Select a constructor in the outliner and press delete.
2. The dialog says 'Are you sure you want to delete method 'ResultPrinter'?'

Should say constructor, not method.
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38449" />
    <CreationDate amount="2003-06-05 04:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Delete: removing default package seems to be a no-op</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. create new Java project, create a file A.java in the new project</Line>
          <Line>2. In the package explorer select the default package, press delete</Line>
          <Line>3. Press 'yes' in the confirmation dialog</Line>
          <Line>4. Nothing happens. Package and its file still there, no log</Line>
          <Line>Adam,</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>20030604

1. create new Java project, create a file A.java in the new project
2. In the package explorer select the default package, press delete
3. Press 'yes' in the confirmation dialog
4. Nothing happens. Package and its file still there, no log
Adam,

please comment.
this is disabled now (see bug 38450)</WithStack>
    <WithOutStack>20030604

1. create new Java project, create a file A.java in the new project
2. In the package explorer select the default package, press delete
3. Press 'yes' in the confirmation dialog
4. Nothing happens. Package and its file still there, no log
Adam,

please comment.
this is disabled now (see bug 38450)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38450" />
    <CreationDate amount="2003-06-05 04:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Delete: Removing default package removes source folder</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Create new Java project, add source folder 'src' with a file 'A.java'</Line>
          <Line>2. In the package explorer select the 'default package' in 'src'</Line>
          <Line>2. press delete</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20020604

1. Create new Java project, add source folder 'src' with a file 'A.java'
2. In the package explorer select the 'default package' in 'src'
2. press delete

Note that the source folder is removed as well. But looking at the project's
build path you see that the folder is still on the class path (but not existing)

I'd expect that removing the default package does not remove the source folder
(only the package's content)
jcore bug - it deletes the source folder when i call ISourceManipulation:delete 
on the package

i'll disable the action for M1

in the old world we lived with the workaround of deleting the cus ourselves
we think this workaround should be possible to remove

moving to jcore for further action
DeleteResourceElementsOperation.deletePackageFragment(...) didn't check for the 
default package case.

Fixed and added regression test DeleteTests.testDeletePackageFragment2()
i don't see it in 0710 - should it be there?
See build notes for I20030710:
http://fullmoon.torolab.ibm.com/downloads/drops/I-I20030710-
200307100800/buildnotes/buildnotes_jdt-core.html
Verified.</WithStack>
    <WithOutStack>20020604

1. Create new Java project, add source folder 'src' with a file 'A.java'
2. In the package explorer select the 'default package' in 'src'
2. press delete

Note that the source folder is removed as well. But looking at the project's
build path you see that the folder is still on the class path (but not existing)

I'd expect that removing the default package does not remove the source folder
(only the package's content)
jcore bug - it deletes the source folder when i call ISourceManipulation:delete 
on the package

i'll disable the action for M1

in the old world we lived with the workaround of deleting the cus ourselves
we think this workaround should be possible to remove

moving to jcore for further action
DeleteResourceElementsOperation.deletePackageFragment(...) didn't check for the 
default package case.

Fixed and added regression test DeleteTests.testDeletePackageFragment2()
i don't see it in 0710 - should it be there?
See build notes for I20030710:
http://fullmoon.torolab.ibm.com/downloads/drops/I-I20030710-
200307100800/buildnotes/buildnotes_jdt-core.html
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38451" />
    <CreationDate amount="2003-06-05 04:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add or remove to Exclusion Filter via context menue [build path]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>it should be possible to add or remove resources (packages, classes, ...) to 
the source folders exclusion list using the context menue instead of having to 
go through the projects properties-&gt;java build path
Martin,

please comment.
seems to be a good idea
sounds the same as bug 38320
see also bug 30593

not for 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>it should be possible to add or remove resources (packages, classes, ...) to 
the source folders exclusion list using the context menue instead of having to 
go through the projects properties-&gt;java build path
Martin,

please comment.
seems to be a good idea
sounds the same as bug 38320
see also bug 30593

not for 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38452" />
    <CreationDate amount="2003-06-05 05:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing count on new import dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build I20030604

It looks as if the plug-in import dialog changed. The count of plug-ins which
will be imported has gone. I always used that count to check if everything is OK
(i.e. if the number is the same as when I imported last time).
the count has now been restored.</WithStack>
    <WithOutStack>Build I20030604

It looks as if the plug-in import dialog changed. The count of plug-ins which
will be imported has gone. I always used that count to check if everything is OK
(i.e. if the number is the same as when I imported last time).
the count has now been restored.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38453" />
    <CreationDate amount="2003-06-05 05:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Delete: ClassCastException when deleting internal JAR [ccp]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437340644245">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:313)</Frame>
          <Frame depth="1">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:271)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.refactoring.PerformRefactoringUtil.performRefactoring(PerformRefactoringUtil.java:53)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:371)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.performFinish(UserInputWizardPage.java:119)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:434)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.okPressed(RefactoringWizardDialog2.java:395)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:256)</Frame>
          <Frame depth="9">org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:423)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2034)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1741)</Frame>
          <Frame depth="15">org.eclipse.jface.window.Window.runEventLoop(Window.java:583)</Frame>
          <Frame depth="16">org.eclipse.jface.window.Window.open(Window.java:563)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:55)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteAction.startRefactoring(DeleteAction.java:124)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteAction.run(DeleteAction.java:109)</Frame>
          <Frame depth="20">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:191)</Frame>
          <Frame depth="21">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:169)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleKeyEvent(PackageExplorerActionGroup.java:340)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$9.keyReleased(PackageExplorerPart.java:920)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:124)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2034)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1741)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1399)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.run(Workbench.java:1382)</Frame>
          <Frame depth="31">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="32">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="34">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="35">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="36">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437340644245">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:801)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:792)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:822)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:792)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:838)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:792)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:783)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.confirmDeletingReadOnly(DeleteRefactoring2.java:400)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.recalculateElementsToDelete(DeleteRefactoring2.java:182)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.checkInput(DeleteRefactoring2.java:149)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:65)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:100)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:138)</Frame>
          <Frame depth="13">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Create a Java project, copy a JAR file (e.g. ui.jar from org.eclipse.ui) into</Line>
          <Line>the project. Add this internal JAR to the project's class path</Line>
          <Line>2. press delete:</Line>
          <Line>Exception shows up</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604

1. Create a Java project, copy a JAR file (e.g. ui.jar from org.eclipse.ui) into
the project. Add this internal JAR to the project's class path
2. press delete:
Exception shows up

As a side note: the exception dialog wording could be improved:
'Unexpected exception while performing the refactoring. See log for a detailed
error description.
See log for more details.'





java.lang.reflect.InvocationTargetException
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:313)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
	at
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:271)
	at
org.eclipse.jdt.internal.ui.refactoring.PerformRefactoringUtil.performRefactoring(PerformRefactoringUtil.java:53)
	at
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:371)
	at
org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.performFinish(UserInputWizardPage.java:119)
	at
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:434)
	at
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.okPressed(RefactoringWizardDialog2.java:395)
	at org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:256)
	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:423)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2034)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1741)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
	at org.eclipse.jface.window.Window.open(Window.java:563)
	at
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:55)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteAction.startRefactoring(DeleteAction.java:124)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteAction.run(DeleteAction.java:109)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:191)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:169)
	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleKeyEvent(PackageExplorerActionGroup.java:340)
	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$9.keyReleased(PackageExplorerPart.java:920)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:124)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2034)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1741)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1399)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1382)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: java.lang.ClassCastException
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:801)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:792)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:822)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:792)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:838)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:792)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:783)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.confirmDeletingReadOnly(DeleteRefactoring2.java:400)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.recalculateElementsToDelete(DeleteRefactoring2.java:182)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.checkInput(DeleteRefactoring2.java:149)
	at
org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:65)
	at
org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:100)
	at
org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:138)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)
	... 39 more
fixed</WithStack>
    <WithOutStack>20030604

1. Create a Java project, copy a JAR file (e.g. ui.jar from org.eclipse.ui) into
the project. Add this internal JAR to the project's class path
2. press delete:
Exception shows up

As a side note: the exception dialog wording could be improved:
'Unexpected exception while performing the refactoring. See log for a detailed
error description.
See log for more details.'







	... 39 more
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38454" />
    <CreationDate amount="2003-06-05 05:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Can't clear list in import  dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- added 'remove all' and 'add all' buttons.</Line>
          <Line>- 'add' and 'remove' buttons do nothing if nothing is selected in the viewer.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build I20030604

Missing button to clear the list of plug-ins which get imported.
Just use the &lt;--Remove button.
It takes a little bit to get accustomed to the new UI, but this new format has 
been highly anticipated by many people.
But I first have to select all by hand/mouse. De-/Select All is standard in
Eclipse import dialogs. Ctrl+A to select all does not work either. Please note
that reducing gestures and mouse clicks is one of the goals for 3.0.

I did not say that I don't like the new format. What I say is that we lost
functionality.

I tend to reopen the PR but since people wanted it this way I probably have to
life with the lost functionality.
 
Actually, if nothing is selected in the list, the whole list can be cleared 
with the &lt;--Remove button in one shot.
Same with Add--&gt;.  The entire list can be added to the right in one shot if 
nothing is selected (which is the default).
If there is a selection, only selected items are added/removed.
That would be another bug then ;-) Or would you like Windows to remove all your
files if nothing is selected in the Explorer and you press Delete?
Dani, are you ever happy? :-)
What do you suggest I should do?
Add 'Add all', 'remove all' buttons.
Oh yeah, sometimes it happens that I am happy.

Yes, similar dialogs with two lists either have Move all right/left or have
add/remove all as you outlined.

I would not map "all" to empty selection. This is not a common UI metaphor.

Another thing I found strange on that dialog was the SWAP button. I could not
find a scenario where it would do something meaningful for me. Or do you have a
concrete one?
The Swap replaces the "Invert Selection" button in the old dialog.
People who import everything as binary except for a couple of plug-ins (that 
they are working on in the workspace) find it useful.
If you have org.eclipse.jdt.ui and org.eclipse.jdt.core as source in my 
workspace, and you want to import the rest as binary,  you would add these two 
plug-ins to the list on the right and swap.
Your scenario makes sense. Me as a lazy guy simply press "Existing binaries" :-)

Re-opening
Fixed.
- added 'remove all' and 'add all' buttons.
- 'add' and 'remove' buttons do nothing if nothing is selected in the viewer.

resolving as fixed.</WithStack>
    <WithOutStack>Build I20030604

Missing button to clear the list of plug-ins which get imported.
Just use the &lt;--Remove button.
It takes a little bit to get accustomed to the new UI, but this new format has 
been highly anticipated by many people.
But I first have to select all by hand/mouse. De-/Select All is standard in
Eclipse import dialogs. Ctrl+A to select all does not work either. Please note
that reducing gestures and mouse clicks is one of the goals for 3.0.

I did not say that I don't like the new format. What I say is that we lost
functionality.

I tend to reopen the PR but since people wanted it this way I probably have to
life with the lost functionality.
 
Actually, if nothing is selected in the list, the whole list can be cleared 
with the &lt;--Remove button in one shot.
Same with Add--&gt;.  The entire list can be added to the right in one shot if 
nothing is selected (which is the default).
If there is a selection, only selected items are added/removed.
That would be another bug then ;-) Or would you like Windows to remove all your
files if nothing is selected in the Explorer and you press Delete?
Dani, are you ever happy? :-)
What do you suggest I should do?
Add 'Add all', 'remove all' buttons.
Oh yeah, sometimes it happens that I am happy.

Yes, similar dialogs with two lists either have Move all right/left or have
add/remove all as you outlined.

I would not map "all" to empty selection. This is not a common UI metaphor.

Another thing I found strange on that dialog was the SWAP button. I could not
find a scenario where it would do something meaningful for me. Or do you have a
concrete one?
The Swap replaces the "Invert Selection" button in the old dialog.
People who import everything as binary except for a couple of plug-ins (that 
they are working on in the workspace) find it useful.
If you have org.eclipse.jdt.ui and org.eclipse.jdt.core as source in my 
workspace, and you want to import the rest as binary,  you would add these two 
plug-ins to the list on the right and swap.
Your scenario makes sense. Me as a lazy guy simply press "Existing binaries" :-)

Re-opening
Fixed.
- added 'remove all' and 'add all' buttons.
- 'add' and 'remove' buttons do nothing if nothing is selected in the viewer.

resolving as fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38455" />
    <CreationDate amount="2003-06-05 05:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Table no longer shows icons</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- open Eclipse on non-empty workspace</Line>
          <Line>- ensure that Task list is not empty</Line>
          <Line>Observe: no icons are shown for table rows, that is the first two columns are empty</Line>
          <Line>Oops, didn't realize that Eclipse now has a problem and a task viewer.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I20030604

- open Eclipse on non-empty workspace
- ensure that Task list is not empty
Observe: no icons are shown for table rows, that is the first two columns are empty
Oops, didn't realize that Eclipse now has a problem and a task viewer.</WithStack>
    <WithOutStack>I20030604

- open Eclipse on non-empty workspace
- ensure that Task list is not empty
Observe: no icons are shown for table rows, that is the first two columns are empty
Oops, didn't realize that Eclipse now has a problem and a task viewer.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38456" />
    <CreationDate amount="2003-06-05 05:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Delete: read-only confirmation dialog [ccp]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>M1

I wasn't able to find a difference between pressing No and Cancel. So we 
should remove one.
The icon used to render a compilation unit is the one for *.java files outside 
of the build path even if I select a *.java file that is on the build path.
The path of the elements should be appened to the elements name if 
a "container" gets deleted. 
User should be able to check/uncheck read-only elements to be deleted. Check 
box is only necessary if more than one read-only element gets deleted.
Regarding Cancel and No. Should cancel close both dialogs. This wouldn't be a 
standard UI interaction.
checkboxes would be an overkill, imo
fixed - agreed to show what we did in 2.0 (only info that there're some
read-only elements)
*** Bug 38473 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>M1

I wasn't able to find a difference between pressing No and Cancel. So we 
should remove one.
The icon used to render a compilation unit is the one for *.java files outside 
of the build path even if I select a *.java file that is on the build path.
The path of the elements should be appened to the elements name if 
a "container" gets deleted. 
User should be able to check/uncheck read-only elements to be deleted. Check 
box is only necessary if more than one read-only element gets deleted.
Regarding Cancel and No. Should cancel close both dialogs. This wouldn't be a 
standard UI interaction.
checkboxes would be an overkill, imo
fixed - agreed to show what we did in 2.0 (only info that there're some
read-only elements)
*** Bug 38473 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38457" />
    <CreationDate amount="2003-06-05 05:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Delete: Removed JAR still shown in package explorer [package explorer]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="15">
        <Lines>
          <Line>1. create a new Java project, add a source folder src</Line>
          <Line>2. copy a JAR inside the source folder and add this internal JAR to the projects</Line>
          <Line>class path</Line>
          <Line>2. Select the JAR in the source folder and press delete</Line>
          <Line>3. The JAR remains in the source folder.</Line>
          <Line>- In the navigator it is removed</Line>
          <Line>- closing and reopening the package explorer does not help, the file is still</Line>
          <Line>shown (but does not exist)</Line>
          <Line>-  The JAR was not removed from the class path</Line>
          <Line>not a regression - 2.1.1 has the same problem</Line>
          <Line>agreed to postpone past M1</Line>
          <Line>fixed - you're asked for confirmation now</Line>
          <Line>Still have the same behaviour in M2: JAR is not removed from the package</Line>
          <Line>explorer, refresh does not help</Line>
          <Line>i call IFile.delete on the file</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="10">
        <Lines>
          <Line>- In the navigator it is removed</Line>
          <Line>- closing and reopening the package explorer does not help, the file is still</Line>
          <Line>shown (but does not exist)</Line>
          <Line>-  The JAR was not removed from the class path</Line>
          <Line>not a regression - 2.1.1 has the same problem</Line>
          <Line>agreed to postpone past M1</Line>
          <Line>fixed - you're asked for confirmation now</Line>
          <Line>Still have the same behaviour in M2: JAR is not removed from the package</Line>
          <Line>explorer, refresh does not help</Line>
          <Line>i call IFile.delete on the file</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>20030604

1. create a new Java project, add a source folder src
2. copy a JAR inside the source folder and add this internal JAR to the projects
class path
2. Select the JAR in the source folder and press delete
3. The JAR remains in the source folder.
 - In the navigator it is removed
 - closing and reopening the package explorer does not help, the file is still
shown (but does not exist)
 -  The JAR was not removed from the class path
not a regression - 2.1.1 has the same problem
agreed to postpone past M1
fixed - you're asked for confirmation now
Still have the same behaviour in M2: JAR is not removed from the package
explorer, refresh does not help
i call IFile.delete on the file

if the file is a jar that is not on the classpath of a project you get this 
delta:
 Java Model[*]: {CHILDREN}
	sdd[*]: {CHILDREN}
		arc[*]: {CONTENT}
			ResourceDelta(/sdd/arc/a.jar)[-]

to which the package explorer reacts correctly (i.e. removes the element from 
the tree)

--------------

if you remove a jar that _is_ on the classpath of a project you get this delta:
Java Model[*]: {CHILDREN}
	sdd[*]: {CHILDREN}
		arc/a.jar[-]: {}
(note that the ResourceDelta part is missing)
which totally confuses the package explorer

asking jcore for comment on why the ResourceDelta part is not included in the 
latter case
ResourceDeltas only indicate non-Java resource changes. Since the jar is on the 
classpath it is a Java resource (i.e. an IPackageFragmentRoot). The delta 
indicates that the IPackageFragmentRoot is removed, thus the Package Explorer 
should react to this notification by removing it from the tree.
works in the latest:
deleting the JAR in the navigator will remove it from the package explorer</WithStack>
    <WithOutStack>20030604

1. create a new Java project, add a source folder src
2. copy a JAR inside the source folder and add this internal JAR to the projects
class path
2. Select the JAR in the source folder and press delete
3. The JAR remains in the source folder.
 - In the navigator it is removed
 - closing and reopening the package explorer does not help, the file is still
shown (but does not exist)
 -  The JAR was not removed from the class path
not a regression - 2.1.1 has the same problem
agreed to postpone past M1
fixed - you're asked for confirmation now
Still have the same behaviour in M2: JAR is not removed from the package
explorer, refresh does not help
i call IFile.delete on the file

if the file is a jar that is not on the classpath of a project you get this 
delta:
 Java Model[*]: {CHILDREN}
	sdd[*]: {CHILDREN}
		arc[*]: {CONTENT}
			ResourceDelta(/sdd/arc/a.jar)[-]

to which the package explorer reacts correctly (i.e. removes the element from 
the tree)

--------------

if you remove a jar that _is_ on the classpath of a project you get this delta:
Java Model[*]: {CHILDREN}
	sdd[*]: {CHILDREN}
		arc/a.jar[-]: {}
(note that the ResourceDelta part is missing)
which totally confuses the package explorer

asking jcore for comment on why the ResourceDelta part is not included in the 
latter case
ResourceDeltas only indicate non-Java resource changes. Since the jar is on the 
classpath it is a Java resource (i.e. an IPackageFragmentRoot). The delta 
indicates that the IPackageFragmentRoot is removed, thus the Package Explorer 
should react to this notification by removing it from the tree.
works in the latest:
deleting the JAR in the navigator will remove it from the package explorer</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38458" />
    <CreationDate amount="2003-06-05 05:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>enhance 'remove from classpath' [reorg] [ccp]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604

No delete offered on external JAR's: It could ask to remove them from the class path
Same for classpath containers
and for variables
i think no delete should be offered - 'remove from build path' is better
We should make remove from class path more general. Adam can you look into 
this since you wrote the initial remove from class path action.
*** Bug 38461 has been marked as a duplicate of this bug. ***
changed title from Delete: No delete offered on external JAR's
back to inbox. i cannot commit to this due to my time constraints
Markus, please investigate for M6.
Fixed in HEAD.</WithStack>
    <WithOutStack>20030604

No delete offered on external JAR's: It could ask to remove them from the class path
Same for classpath containers
and for variables
i think no delete should be offered - 'remove from build path' is better
We should make remove from class path more general. Adam can you look into 
this since you wrote the initial remove from class path action.
*** Bug 38461 has been marked as a duplicate of this bug. ***
changed title from Delete: No delete offered on external JAR's
back to inbox. i cannot commit to this due to my time constraints
Markus, please investigate for M6.
Fixed in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38459" />
    <CreationDate amount="2003-06-05 05:14:00 -0400" />
    <DupId amount="38750" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[Tasks] Task view - columns got resized on startup</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 20030604

When restarting a workspace previously opened with a 2.1.1 build, the task view 
columns got resized to an equal size for all of them (see attachment). 

The net results is quite misleading since some columns should be small.
Created attachment 5065
incorrect sizes for task view columns
Actually, I hadn't noticed the separation in between task/problem views. The 
problem rather seem that the task view column sizes are wrong, and can't be 
resized afterwards.
i see the same problem in I20030604 on Linux-GTK. The column width of the first
two of a task list is too big, and not resizeble. 
Problem is still here in 20030611
Created attachment 5209
Problem still present in 3.0 stream


*** This bug has been marked as a duplicate of 38750 ***</WithStack>
    <WithOutStack>Build 20030604

When restarting a workspace previously opened with a 2.1.1 build, the task view 
columns got resized to an equal size for all of them (see attachment). 

The net results is quite misleading since some columns should be small.
Created attachment 5065
incorrect sizes for task view columns
Actually, I hadn't noticed the separation in between task/problem views. The 
problem rather seem that the task view column sizes are wrong, and can't be 
resized afterwards.
i see the same problem in I20030604 on Linux-GTK. The column width of the first
two of a task list is too big, and not resizeble. 
Problem is still here in 20030611
Created attachment 5209
Problem still present in 3.0 stream


*** This bug has been marked as a duplicate of 38750 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38460" />
    <CreationDate amount="2003-06-05 05:17:00 -0400" />
    <DupId amount="38439" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No "About Eclipse Platform" item in help menu</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20030604
tested for MacOS X and Windows XP


*** This bug has been marked as a duplicate of 38439 ***</WithStack>
    <WithOutStack>I20030604
tested for MacOS X and Windows XP


*** This bug has been marked as a duplicate of 38439 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38461" />
    <CreationDate amount="2003-06-05 05:22:00 -0400" />
    <DupId amount="38458" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Delete: Remove source folder could ask for only remove from class path</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>20030604

The confirmation dialog to delete a source folder or an internal JAR could offer
the choise:
Remove from classpath only
The idea was to have separate action for this (add and remove from class path).
Is related to bug 38458.

Adam, may be this is a good opportunity for a Coop.
yup, it's a dup really
good coop opportunity - or external help

*** This bug has been marked as a duplicate of 38458 ***</WithStack>
    <WithOutStack>20030604

The confirmation dialog to delete a source folder or an internal JAR could offer
the choise:
Remove from classpath only
The idea was to have separate action for this (add and remove from class path).
Is related to bug 38458.

Adam, may be this is a good opportunity for a Coop.
yup, it's a dup really
good coop opportunity - or external help

*** This bug has been marked as a duplicate of 38458 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38462" />
    <CreationDate amount="2003-06-05 05:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Dialogs] Tree in Preference &amp; Properties dialog should be resizable</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>I20030604

On MacOS X the native tree isn't as compact as on other platforms.
As a result some of the tree items in the Preference and Properties dialogs are barely 
visible. Since horizontalls scrolling is cumbersome, it would be nice to have a sash 
between the tree and the dialog's content.
Remembering the dialog's size and the sash position would be helpful, too.
Fix committed to HEAD.  Previous sash weights are remembered (across all
preference dialogs) but dialog size is not.  There are issues concerning the
persistance of the preference dialog settings that I'd like to address before I
add any more remembered fields.
Verified in 200312160010.
Closed.</WithStack>
    <WithOutStack>I20030604

On MacOS X the native tree isn't as compact as on other platforms.
As a result some of the tree items in the Preference and Properties dialogs are barely 
visible. Since horizontalls scrolling is cumbersome, it would be nice to have a sash 
between the tree and the dialog's content.
Remembering the dialog's size and the sash position would be helpful, too.
Fix committed to HEAD.  Previous sash weights are remembered (across all
preference dialogs) but dialog size is not.  There are issues concerning the
persistance of the preference dialog settings that I'd like to address before I
add any more remembered fields.
Verified in 200312160010.
Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38463" />
    <CreationDate amount="2003-06-05 05:36:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Delete: Removing a project does not update requiring projects</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. create Java projects A and B, let A have B on its classpath</Line>
          <Line>2. remove B.</Line>
          <Line>3. A still contains B on the class path</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>20030604

1. create Java projects A and B, let A have B on its classpath
2. remove B.
3. A still contains B on the class path

I think the best solution would be when the confirmation dialog contains a
checkbox asking if all references in classpath should be removed as well.

Note that for source folders a remove also removes the classpath entry
Updating the project reference is a duplicate of bug 2855.
Classpath is controlled by JDT/Core.
Moving for comment.

We don't remove the project automatically as it may be triggered by a CVS 
action or a PDE import. If we did remove the prereq, then who is going to add 
it back during a replace operation ?

Same behavior when replacing package fragment roots, we do not touch the 
classpath on purpose.</WithStack>
    <WithOutStack>20030604

1. create Java projects A and B, let A have B on its classpath
2. remove B.
3. A still contains B on the class path

I think the best solution would be when the confirmation dialog contains a
checkbox asking if all references in classpath should be removed as well.

Note that for source folders a remove also removes the classpath entry
Updating the project reference is a duplicate of bug 2855.
Classpath is controlled by JDT/Core.
Moving for comment.

We don't remove the project automatically as it may be triggered by a CVS 
action or a PDE import. If we did remove the prereq, then who is going to add 
it back during a replace operation ?

Same behavior when replacing package fragment roots, we do not touch the 
classpath on purpose.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38464" />
    <CreationDate amount="2003-06-05 05:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>inline method: compile error after</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="assignment">
        <location start="33" end="64" />
        <code>return k == 3? s.hashCode():3;</code>
      </source_code>
      <source_code type="assignment">
        <location start="82" end="101" />
        <code>int u= i(null, p);</code>
      </source_code>
      <source_code type="assignment">
        <location start="114" end="155" />
        <code>you get int u= p == 3? null.hashCode():3;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604
int i(Object s, int k){
	return k == 3? s.hashCode():3;
}
void f(int p){
	int u= i(null, p);
}

inline i
you get int u= p == 3? null.hashCode():3;
which does not compile
Fixed by putting () around the conditional expression. However I left the 
null.hasCode() thing since it is better to get a compile error than having a 
NPE during runtimen ;-).</WithStack>
    <WithOutStack>20030604
int i(Object s, int k){
	return k == 3? s.hashCode():3;
}
void f(int p){
	int u= i(null, p);
}

inline i
you get int u= p == 3? null.hashCode():3;
which does not compile
Fixed by putting () around the conditional expression. However I left the 
null.hasCode() thing since it is better to get a compile error than having a 
NPE during runtimen ;-).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38465" />
    <CreationDate amount="2003-06-05 05:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Class folders: No Source attach &amp; javadoc location property page [build path]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604

Class folders have no Source attach &amp; javadoc location property page. These
settings can only be configured on the Java Build path page
fixed &gt; 20040319</WithStack>
    <WithOutStack>20030604

Class folders have no Source attach &amp; javadoc location property page. These
settings can only be configured on the Java Build path page
fixed &gt; 20040319</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38466" />
    <CreationDate amount="2003-06-05 05:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>inline method: incorrect indenting of block</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="assignment">
        <location start="24" end="35" />
        <code>int p= 9;</code>
      </source_code>
      <source_code type="assignment">
        <location start="92" end="103" />
        <code>t= y(p);</code>
      </source_code>
      <source_code type="assignment">
        <location start="111" end="118" />
        <code>t=2;</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="165" end="216" />
        <code>if (p==9)
			{
				int p1= 9;
				t= p1+p+1;
			}</code>
      </source_code>
      <source_code type="assignment">
        <location start="224" end="231" />
        <code>t=2;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604
	int y(int t){
		int p= 9;
		return p+t+1;
	}
	void f(int p){
		int t;
		if (p==9)
			t= y(p);
		else
			t=2;
	}

inline y
you get
	void f(int p){
		int t;
		if (p==9)
			{
				int p1= 9;
				t= p1+p+1;
			}
		else
			t=2;
	}

the block in the if statement is incorrectly formatted
Martin,

this is done using AST rewriting. Can you please comment on this ?
this is a known problem of the ASTRewrite. Can fix it but not trivial (will take
a day or so)
Martin, we should fix this for one of the next milestone builds.
fixed in M4</WithStack>
    <WithOutStack>20030604
	int y(int t){
		int p= 9;
		return p+t+1;
	}
	void f(int p){
		int t;
		if (p==9)
			t= y(p);
		else
			t=2;
	}

inline y
you get
	void f(int p){
		int t;
		if (p==9)
			{
				int p1= 9;
				t= p1+p+1;
			}
		else
			t=2;
	}

the block in the if statement is incorrectly formatted
Martin,

this is done using AST rewriting. Can you please comment on this ?
this is a known problem of the ASTRewrite. Can fix it but not trivial (will take
a day or so)
Martin, we should fix this for one of the next milestone builds.
fixed in M4</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38467" />
    <CreationDate amount="2003-06-05 05:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>Delete: ClassCastException when deleting from a class folder</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437340644255">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:313)</Frame>
          <Frame depth="1">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:271)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.refactoring.PerformRefactoringUtil.performRefactoring(PerformRefactoringUtil.java:53)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:371)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.performFinish(UserInputWizardPage.java:119)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:434)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.okPressed(RefactoringWizardDialog2.java:395)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:256)</Frame>
          <Frame depth="9">org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:423)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2034)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1741)</Frame>
          <Frame depth="15">org.eclipse.jface.window.Window.runEventLoop(Window.java:583)</Frame>
          <Frame depth="16">org.eclipse.jface.window.Window.open(Window.java:563)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:55)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteAction.startRefactoring(DeleteAction.java:124)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteAction.run(DeleteAction.java:109)</Frame>
          <Frame depth="20">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:191)</Frame>
          <Frame depth="21">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:169)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleKeyEvent(PackageExplorerActionGroup.java:340)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$9.keyReleased(PackageExplorerPart.java:920)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:124)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2034)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1741)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1399)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.run(Workbench.java:1382)</Frame>
          <Frame depth="31">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="32">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="34">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="35">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="36">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437340644255">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:801)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:792)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:822)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:792)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:783)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.confirmDeletingReadOnly(DeleteRefactoring2.java:400)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.recalculateElementsToDelete(DeleteRefactoring2.java:182)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.checkInput(DeleteRefactoring2.java:149)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:65)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:100)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:138)</Frame>
          <Frame depth="11">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. create Java project, add a class folder 'cf'</Line>
          <Line>2. Copy a file A.class inside the class folder</Line>
          <Line>3. delete the class file</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604

1. create Java project, add a class folder 'cf'
2. Copy a file A.class inside the class folder
3. delete the class file

Same when deleting the default package or the class folder itself


java.lang.reflect.InvocationTargetException
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:313)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
	at
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:271)
	at
org.eclipse.jdt.internal.ui.refactoring.PerformRefactoringUtil.performRefactoring(PerformRefactoringUtil.java:53)
	at
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:371)
	at
org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.performFinish(UserInputWizardPage.java:119)
	at
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:434)
	at
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.okPressed(RefactoringWizardDialog2.java:395)
	at org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:256)
	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:423)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2034)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1741)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
	at org.eclipse.jface.window.Window.open(Window.java:563)
	at
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:55)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteAction.startRefactoring(DeleteAction.java:124)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteAction.run(DeleteAction.java:109)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:191)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:169)
	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleKeyEvent(PackageExplorerActionGroup.java:340)
	at
org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$9.keyReleased(PackageExplorerPart.java:920)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:124)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2034)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1741)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1399)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1382)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: java.lang.ClassCastException
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:801)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:792)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:822)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:792)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$ReadOnlyResourceFinder.getReadOnlyResourcesAndSubResources(DeleteRefactoring2.java:783)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.confirmDeletingReadOnly(DeleteRefactoring2.java:400)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.recalculateElementsToDelete(DeleteRefactoring2.java:182)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.checkInput(DeleteRefactoring2.java:149)
	at
org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:65)
	at
org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:100)
	at
org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:138)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)
	... 39 more
fixed
i'll try to use JavaProjectHelper to test this thing</WithStack>
    <WithOutStack>20030604

1. create Java project, add a class folder 'cf'
2. Copy a file A.class inside the class folder
3. delete the class file

Same when deleting the default package or the class folder itself




	... 39 more
fixed
i'll try to use JavaProjectHelper to test this thing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38468" />
    <CreationDate amount="2003-06-05 05:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Error in files location</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>1. Did you modify the list of source locations? If so could you please describe</Line>
          <Line>what is in your list.</Line>
          <Line>2. When the debugger steps into the file 'SRC\Saexpini_main.c' which is located</Line>
          <Line>in 'D:\easi\eclipse\workspace\Philippe\local\pilote2_v01</Line>
          <Line>\PROJECT_ONE\SA\SAEX\SRC' directory everything is fine.</Line>
          <Line>But When the debugger steps into the file 'SRC\Laexpini_main.c' which is</Line>
          <Line>located in 'D:\easi\eclipse\workspace\Philippe\local\pilote2_v01</Line>
          <Line>\PROJECT_ONE\LA\LAEX\SRC' it doesn't find it.</Line>
          <Line>Is this correct?</Line>
          <Line>If you are getting the stack overflow exception it is a bug in CDT.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I have a big project with over 1800 files. When debugging with gdb, i set 
breakpoints on differents files. But when breakpoints are reached, in half 
cases, UI can't located files and ask for a source path.
I tried gdb in console mode, in this configuration, there's no problem to locate 
files.
All my files are located in the workspace subfolders with a same root set as 
source location folder. The files that are found, and those that aren't, seems 
to identicals.
Is the same problem as PR 35960 ?
You may want to mark this as duplicate, mikhail.
Do you mean that debugger doesn't find sources that belong to the project?
This bug is not the same problem as PR 35960. In this case, sources belong to 
the project, but UI don't find them : it display the empty C/C++ editor with 
"Source Attach..." button. 
Could you give an example? What is the path displayed in the "File not found" 
editor and the real path of the file in the project and file system.
Debug Executable was compiled with differents partial makefiles with GCC version 
2.95.3-5 (not 3.2).

The source path in source locations is D:\easi\eclipse\workspace\Philippe\

The source path searched and found by the UI is SRC\Saexpini_main.c and the real 
path is 
D:\easi\eclipse\workspace\Philippe\local\pilote2_v01\PROJECT_ONE\SA\SAEX\SRC\Sae
xpini_main.c. 

The source path searched and not founded by the UI is SRC\Laexpini_main.c and 
the real path is 
D:\easi\eclipse\workspace\Philippe\local\pilote2_v01\PROJECT_ONE\LA\LAEX\SRC\Lae
xpini_main.c. 

GDB in console mode found the two source files. GDB version is 2003-03-03-cvs

I tried to copy files that wasn't located at the root of the source folder. 
In this configuration, the same file is located. 
It seems that I overflow source list stack. 
Is there a configuration or limitation?
Sorry, but for some unknown reason I didn't receive a notification for your 
previous comment.
I still need some clarification. 
As far as I understand you have a project (Philippe) in your workspace. The 
location of your in the file system is 'D:\easi\eclipse\workspace\Philippe'.
1. Did you modify the list of source locations? If so could you please describe 
what is in your list.
2. When the debugger steps into the file 'SRC\Saexpini_main.c' which is located 
in 'D:\easi\eclipse\workspace\Philippe\local\pilote2_v01
\PROJECT_ONE\SA\SAEX\SRC' directory everything is fine. 
But When the debugger steps into the file 'SRC\Laexpini_main.c' which is 
located in 'D:\easi\eclipse\workspace\Philippe\local\pilote2_v01
\PROJECT_ONE\LA\LAEX\SRC' it doesn't find it.
Is this correct?
If you are getting the stack overflow exception it is a bug in CDT.

That's it. The only directory in source location list is the project root.
I don't have any exception. I suppose that there's an overflow because of my 
last manipulation described in comment #6. I suppose that in this configuration, 
the same file is parse before the rest of 1800 files.
I made a mistake in comment #6 . The manipulation doesn't work. There's was a 
delay in debug session that make me think that breakpoint was found but after a 
little time the empty editor is displayed as previously.
Ok, I'll try to reproduce it.
I created a project with two folders. Each folder contains the 'src' folder 
with a source file. The project is built to get 'src\filename' as a path for 
each source file. When I try to step into the functions of any source file the 
debugger finds it.
Is there something specific in your project?

Thanks,
Mikhail
At least, I found it !

The problem is due to a bad cass in makefile. The file is described as 
"Saexpinit.c" in Makefile but is store on disk as "saexpinit.c".
I work on Win NT 4.0 so the file is found by gcc and gdb for compile and debug 
but isn't found by CDT UI.
I don't think that it must be considered as a bug. 

Do I change bug state to FIXED or INVALID ?
Let see what mikhailk, thinks of this first, before flipping the PR.

It seems to me that is should not matter. If the file system does not care of
cases then calling the file "SaExPiNiT.c" should not matter.  But some folks
told me that Eclipse sometimes makes a difference especially if the file
was retrieve through CVS.  Was the project under CVS/Team ?
It seems we find a problem where the Eclipse/Platform IResource is
making a distinction between filename with different upper/lower case.

There is a workaroung, to use java.io.File.getCanonicalPath().
I guess the SourceLocator should do this, to fix this problem.
Meanwhile a PR was fill on bugzilla Eclipse (PR 39287)
Fixed.
Usage of 'getCanonicalPath' causes the error with links (see PR 43372).
This can be fixed only if the Eclipse framework provides a solution for case-
insennsitive paths.</WithStack>
    <WithOutStack>I have a big project with over 1800 files. When debugging with gdb, i set 
breakpoints on differents files. But when breakpoints are reached, in half 
cases, UI can't located files and ask for a source path.
I tried gdb in console mode, in this configuration, there's no problem to locate 
files.
All my files are located in the workspace subfolders with a same root set as 
source location folder. The files that are found, and those that aren't, seems 
to identicals.
Is the same problem as PR 35960 ?
You may want to mark this as duplicate, mikhail.
Do you mean that debugger doesn't find sources that belong to the project?
This bug is not the same problem as PR 35960. In this case, sources belong to 
the project, but UI don't find them : it display the empty C/C++ editor with 
"Source Attach..." button. 
Could you give an example? What is the path displayed in the "File not found" 
editor and the real path of the file in the project and file system.
Debug Executable was compiled with differents partial makefiles with GCC version 
2.95.3-5 (not 3.2).

The source path in source locations is D:\easi\eclipse\workspace\Philippe\

The source path searched and found by the UI is SRC\Saexpini_main.c and the real 
path is 
D:\easi\eclipse\workspace\Philippe\local\pilote2_v01\PROJECT_ONE\SA\SAEX\SRC\Sae
xpini_main.c. 

The source path searched and not founded by the UI is SRC\Laexpini_main.c and 
the real path is 
D:\easi\eclipse\workspace\Philippe\local\pilote2_v01\PROJECT_ONE\LA\LAEX\SRC\Lae
xpini_main.c. 

GDB in console mode found the two source files. GDB version is 2003-03-03-cvs

I tried to copy files that wasn't located at the root of the source folder. 
In this configuration, the same file is located. 
It seems that I overflow source list stack. 
Is there a configuration or limitation?
Sorry, but for some unknown reason I didn't receive a notification for your 
previous comment.
I still need some clarification. 
As far as I understand you have a project (Philippe) in your workspace. The 
location of your in the file system is 'D:\easi\eclipse\workspace\Philippe'.
1. Did you modify the list of source locations? If so could you please describe 
what is in your list.
2. When the debugger steps into the file 'SRC\Saexpini_main.c' which is located 
in 'D:\easi\eclipse\workspace\Philippe\local\pilote2_v01
\PROJECT_ONE\SA\SAEX\SRC' directory everything is fine. 
But When the debugger steps into the file 'SRC\Laexpini_main.c' which is 
located in 'D:\easi\eclipse\workspace\Philippe\local\pilote2_v01
\PROJECT_ONE\LA\LAEX\SRC' it doesn't find it.
Is this correct?
If you are getting the stack overflow exception it is a bug in CDT.

That's it. The only directory in source location list is the project root.
I don't have any exception. I suppose that there's an overflow because of my 
last manipulation described in comment #6. I suppose that in this configuration, 
the same file is parse before the rest of 1800 files.
I made a mistake in comment #6 . The manipulation doesn't work. There's was a 
delay in debug session that make me think that breakpoint was found but after a 
little time the empty editor is displayed as previously.
Ok, I'll try to reproduce it.
I created a project with two folders. Each folder contains the 'src' folder 
with a source file. The project is built to get 'src\filename' as a path for 
each source file. When I try to step into the functions of any source file the 
debugger finds it.
Is there something specific in your project?

Thanks,
Mikhail
At least, I found it !

The problem is due to a bad cass in makefile. The file is described as 
"Saexpinit.c" in Makefile but is store on disk as "saexpinit.c".
I work on Win NT 4.0 so the file is found by gcc and gdb for compile and debug 
but isn't found by CDT UI.
I don't think that it must be considered as a bug. 

Do I change bug state to FIXED or INVALID ?
Let see what mikhailk, thinks of this first, before flipping the PR.

It seems to me that is should not matter. If the file system does not care of
cases then calling the file "SaExPiNiT.c" should not matter.  But some folks
told me that Eclipse sometimes makes a difference especially if the file
was retrieve through CVS.  Was the project under CVS/Team ?
It seems we find a problem where the Eclipse/Platform IResource is
making a distinction between filename with different upper/lower case.

There is a workaroung, to use java.io.File.getCanonicalPath().
I guess the SourceLocator should do this, to fix this problem.
Meanwhile a PR was fill on bugzilla Eclipse (PR 39287)
Fixed.
Usage of 'getCanonicalPath' causes the error with links (see PR 43372).
This can be fixed only if the Eclipse framework provides a solution for case-
insennsitive paths.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38469" />
    <CreationDate amount="2003-06-05 05:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>inline method: incorrect in innerclasses [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functiondef">
        <location start="0" end="48" />
        <code>public int fred(){
		return super.hashCode();
	}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="65" end="125" />
        <code>new Ad(){
			void f(){
				int u= Ad.this.fred();
			}
		}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="270" end="310" />
        <code>public int fred(){
	return hashCode();
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>public int fred(){
		return super.hashCode();
	}
	void f(int p){
		new Ad(){
			void f(){
				int u= Ad.this.fred();
			}
		};
	}

inline fred
the temp u is now initialized to a different value - no compile error
a different hashCode method is called
Works if fred is:

public int fred(){
	return hashCode();
}

The only option I see is to not allow inlining super calls in "this." calls. 

Fixed for &gt;= I20060110.</WithStack>
    <WithOutStack>public int fred(){
		return super.hashCode();
	}
	void f(int p){
		new Ad(){
			void f(){
				int u= Ad.this.fred();
			}
		};
	}

inline fred
the temp u is now initialized to a different value - no compile error
a different hashCode method is called
Works if fred is:

public int fred(){
	return hashCode();
}

The only option I see is to not allow inlining super calls in "this." calls. 

Fixed for &gt;= I20060110.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38470" />
    <CreationDate amount="2003-06-05 05:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[JUnit] JUnit view does not respect open mode</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Build I20030604

The JUnit view insists on double-click. It should respect the workbench
preference in "Open mode".
Related to bug 26653

Failure &amp; Hieracy panes do not respect the "Open Mode".
Created attachment 5069
fix
fix provided...
Retagging.
Beware of quick solutions here ... see bug 136618.
*** Bug 26653 has been marked as a duplicate of this bug. ***
Note that bug 26653 contains a contributed patch.
Too late for 3.3.

Furthermore, I won't do anything for single-click mode without a published document that describes the expected behavior thoroughly in all the different open modes, including the sub-modes for single click (e.g. when should an editor be opened in foreground/background, when can a fast view be closed, etc.).
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Build I20030604

The JUnit view insists on double-click. It should respect the workbench
preference in "Open mode".
Related to bug 26653

Failure &amp; Hieracy panes do not respect the "Open Mode".
Created attachment 5069
fix
fix provided...
Retagging.
Beware of quick solutions here ... see bug 136618.
*** Bug 26653 has been marked as a duplicate of this bug. ***
Note that bug 26653 contains a contributed patch.
Too late for 3.3.

Furthermore, I won't do anything for single-click mode without a published document that describes the expected behavior thoroughly in all the different open modes, including the sub-modes for single click (e.g. when should an editor be opened in foreground/background, when can a fast view be closed, etc.).
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38471" />
    <CreationDate amount="2003-06-05 06:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>inline method: compile error (array related) [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functiondef">
        <location start="42" end="77" />
        <code>void yg(){
	int x= y(new int[0]);
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="88" end="117" />
        <code>you get int x= new int[0][0];</code>
      </source_code>
      <source_code type="functiondef">
        <location start="247" end="281" />
        <code>void yg(){
		i(y(new int[0]));
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604
int y(int[] p){
	return p[0]; 
}
void yg(){
	int x= y(new int[0]);
}

inline y
you get int x= new int[0][0];
which does not type check
of course, this can very easily lead to errors like the following:
	int y(int[] p){
		return p[0]; 
	}
	void yg(){
		i(y(new int[0]));
	}
	void i(int x){}
	void i(int[][] x){}

after inlining y, you get no compile error, yet the bahavior changes (different 
i method is called)
Created attachment 6202
patch and unit test for it

The fix takes inlined array creation into parentheses. This can lead to
inefficient resulting code because of multiple array allocations but I consider
the case as a rare one and easy to fix prior to the refactoring.
Dmitry,

the fix makes perfect sense to me. Release to HEAD. Thanks.</WithStack>
    <WithOutStack>20030604
int y(int[] p){
	return p[0]; 
}
void yg(){
	int x= y(new int[0]);
}

inline y
you get int x= new int[0][0];
which does not type check
of course, this can very easily lead to errors like the following:
	int y(int[] p){
		return p[0]; 
	}
	void yg(){
		i(y(new int[0]));
	}
	void i(int x){}
	void i(int[][] x){}

after inlining y, you get no compile error, yet the bahavior changes (different 
i method is called)
Created attachment 6202
patch and unit test for it

The fix takes inlined array creation into parentheses. This can lead to
inefficient resulting code because of multiple array allocations but I consider
the case as a rare one and easy to fix prior to the refactoring.
Dmitry,

the fix makes perfect sense to me. Release to HEAD. Thanks.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38472" />
    <CreationDate amount="2003-06-05 06:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>getters/setters: not fully correct wording</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604
technically speaking 'final' 'synchronized' 'native' are not access modifiers
as the dialog implies
Martin,

can you comment on this. I thought the same when I saw the dialog.
We can change it to 'Modifiers'
Created attachment 5144
proposed fix.

Changes wording to "Modifiers"
Adam, do you agree with that fix? For the refactoring 'Modifiers' is not really 
the correct term.

Adam, can you decide and release the path?
fixed with patch for bug 38400
(refactoring not touched by the change)</WithStack>
    <WithOutStack>20030604
technically speaking 'final' 'synchronized' 'native' are not access modifiers
as the dialog implies
Martin,

can you comment on this. I thought the same when I saw the dialog.
We can change it to 'Modifiers'
Created attachment 5144
proposed fix.

Changes wording to "Modifiers"
Adam, do you agree with that fix? For the refactoring 'Modifiers' is not really 
the correct term.

Adam, can you decide and release the path?
fixed with patch for bug 38400
(refactoring not touched by the change)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38473" />
    <CreationDate amount="2003-06-05 06:06:00 -0400" />
    <DupId amount="38456" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Delete: Re-confirmation dialog on read-only elements has No and Cancel</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="10">
        <Lines>
          <Line>1. create a Java project add A.java and set it to read only</Line>
          <Line>2. delete the file. After the first confimation dialog a second show up:</Line>
          <Line>The following read-only elements are removed...</Line>
          <Line>There are 3 buttons, Yes, No, Cancel.</Line>
          <Line>Both No and Cancel seems to do the same, go back to the first dialog.</Line>
          <Line>- Does it make sense to go back to the first dialog? There is nothing you can</Line>
          <Line>select differently on the first dialog.</Line>
          <Line>- Maybe it would make sense to offer a checked list dialog so I can decide if</Line>
          <Line>and which read-only element to delete</Line>
          <Line>Currently you force me to go back and redo the selection.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>- Does it make sense to go back to the first dialog? There is nothing you can</Line>
          <Line>select differently on the first dialog.</Line>
          <Line>- Maybe it would make sense to offer a checked list dialog so I can decide if</Line>
          <Line>and which read-only element to delete</Line>
          <Line>Currently you force me to go back and redo the selection.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>20030604

1. create a Java project add A.java and set it to read only
2. delete the file. After the first confimation dialog a second show up:
  The following read-only elements are removed...
  There are 3 buttons, Yes, No, Cancel.
  Both No and Cancel seems to do the same, go back to the first dialog.
- Does it make sense to go back to the first dialog? There is nothing you can
select differently on the first dialog.
- Maybe it would make sense to offer a checked list dialog so I can decide if
and which read-only element to delete
Currently you force me to go back and redo the selection.


*** This bug has been marked as a duplicate of 38456 ***</WithStack>
    <WithOutStack>20030604

1. create a Java project add A.java and set it to read only
2. delete the file. After the first confimation dialog a second show up:
  The following read-only elements are removed...
  There are 3 buttons, Yes, No, Cancel.
  Both No and Cancel seems to do the same, go back to the first dialog.
- Does it make sense to go back to the first dialog? There is nothing you can
select differently on the first dialog.
- Maybe it would make sense to offer a checked list dialog so I can decide if
and which read-only element to delete
Currently you force me to go back and redo the selection.


*** This bug has been marked as a duplicate of 38456 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38474" />
    <CreationDate amount="2003-06-05 06:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JUnit: Stepping does not work for errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build I20030604

The arrows in the JUnit view to step are only enabled if there are failures. If
the view only has errors then they are disabled.
error count wasn't considered in enable check</WithStack>
    <WithOutStack>Build I20030604

The arrows in the JUnit view to step are only enabled if there are failures. If
the view only has errors then they are disabled.
error count wasn't considered in enable check</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38475" />
    <CreationDate amount="2003-06-05 06:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>getters/setters: compile error after (native methods don't have bodies)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="68" end="111" />
        <code>public native int getFoo() {
	return foo;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604
generate a native getter for field foo

it generates this:
public native int getFoo() {
	return foo;
}

which of course does not compile
How much sense does it make to generate a native setter/getter ?
we should remove the native getter/setter option (same like abstract which we
don't offer)
Created attachment 5081
proposed fix. removes native option for getter/setter action.

We could have a special case and just not create the body for native
getter/setter creation; however this seems so specialized, that I agree that
removing the option is probably best.
released &gt; 20030616</WithStack>
    <WithOutStack>20030604
generate a native getter for field foo

it generates this:
public native int getFoo() {
	return foo;
}

which of course does not compile
How much sense does it make to generate a native setter/getter ?
we should remove the native getter/setter option (same like abstract which we
don't offer)
Created attachment 5081
proposed fix. removes native option for getter/setter action.

We could have a special case and just not create the body for native
getter/setter creation; however this seems so specialized, that I agree that
removing the option is probably best.
released &gt; 20030616</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38476" />
    <CreationDate amount="2003-06-05 06:11:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Delete: confusing message when deleting link</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="2">
        <Lines>
          <Line>- file</Line>
          <Line>- subfolder on classpath</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- folder</Line>
          <Line>- file</Line>
          <Line>- source folder</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>M1

First the dialog tells me that only the link will be deleted. Link target 
remains unchanged. But then there is a sentence that All subelements of the 
selected packages and packages fragements roots will be removed from the 
workspace as well. 

I know what happens but I think for a user this is confusing especially the 
subtle difference between delete and remove.

I would opt to remove the second sentence.
i guess we introduced the sentence because it was confusing otherwise :-)
I still opt to remove it. The dialog clearly states that only the link will be 
removed.
no problem at all :-)
even considering the scenario:
-folder
  - file
  - subfolder on classpath

in package explorer you see 
- folder
 - file
- source folder

now, deleting the folder will delete the source folder too - although it's not 
very obvious from how the package explorer shows things
(ideally, only 'folder' would be deleted and source folder retained, but ...)
This is a valid point. As a user I would expect to read a specific sentence 
telling me that deleting folder will also remove source folder "subfolder" 
since it is "child" of folder. The general sentence we display right now is 
more confusing then helpful since it doesn't point me to the problem. So is it 
possible to give a specific hint about the problem ?
in fact, we should not need this at all. jcore should support deleting of 
linked source folders and we should then give ui appropriate for the semantics.
current message is a workaround for bug 31456 (and the resulting bug 31998)

moving back to inbox to re-assignment
No further action planned here.</WithStack>
    <WithOutStack>M1

First the dialog tells me that only the link will be deleted. Link target 
remains unchanged. But then there is a sentence that All subelements of the 
selected packages and packages fragements roots will be removed from the 
workspace as well. 

I know what happens but I think for a user this is confusing especially the 
subtle difference between delete and remove.

I would opt to remove the second sentence.
i guess we introduced the sentence because it was confusing otherwise :-)
I still opt to remove it. The dialog clearly states that only the link will be 
removed.
no problem at all :-)
even considering the scenario:
-folder
  - file
  - subfolder on classpath

in package explorer you see 
- folder
 - file
- source folder

now, deleting the folder will delete the source folder too - although it's not 
very obvious from how the package explorer shows things
(ideally, only 'folder' would be deleted and source folder retained, but ...)
This is a valid point. As a user I would expect to read a specific sentence 
telling me that deleting folder will also remove source folder "subfolder" 
since it is "child" of folder. The general sentence we display right now is 
more confusing then helpful since it doesn't point me to the problem. So is it 
possible to give a specific hint about the problem ?
in fact, we should not need this at all. jcore should support deleting of 
linked source folders and we should then give ui appropriate for the semantics.
current message is a workaround for bug 31456 (and the resulting bug 31998)

moving back to inbox to re-assignment
No further action planned here.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38477" />
    <CreationDate amount="2003-06-05 06:15:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>add delegate methods: OK enabled even if nothing selected</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604
the OK button is enabled even if nothing is selected in the dialog
Created attachment 5085
proposed fix.

Ok no longer available when no elements selected.
released &gt; 20030606</WithStack>
    <WithOutStack>20030604
the OK button is enabled even if nothing is selected in the dialog
Created attachment 5085
proposed fix.

Ok no longer available when no elements selected.
released &gt; 20030606</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38478" />
    <CreationDate amount="2003-06-05 06:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>getters/setters: no warning of duplicate methods</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604
in 'add delegate method' i get an error if duplicate method are selected
in generate getter/setter i do not

try this (with 'f' set as a field prefix):
String fFoo;
String foo;
you get 2 getFoo's and no error or warning
What behavior would you like to see? Displaying a error or warning to the user 
when they press OK? Renaming the getter/setter auto-generated method choices 
so there's not a collision?
I would suggest to have a error in the status line, so you can't press OK (same
as the delegate method wizard does).
I need some advice for this one. The validate method for 
AddGetterSetterSelectionStatusValidator gets the 
SourceField/GetterSetterEntries as input. These are distinct from the labels 
generated for them, which are the names of the getter/setter methods. I guess 
the only way to do this is to regen the method names from within the validate 
method and see if there's an overlap. I can't override the input from the 
CheckBoxTreeViewer b/c the updateOK method uses a bunch of fields.
Created attachment 5274
proposed fix.

Status displays a warning for duplicate cases.
released patch &gt; 20030623</WithStack>
    <WithOutStack>20030604
in 'add delegate method' i get an error if duplicate method are selected
in generate getter/setter i do not

try this (with 'f' set as a field prefix):
String fFoo;
String foo;
you get 2 getFoo's and no error or warning
What behavior would you like to see? Displaying a error or warning to the user 
when they press OK? Renaming the getter/setter auto-generated method choices 
so there's not a collision?
I would suggest to have a error in the status line, so you can't press OK (same
as the delegate method wizard does).
I need some advice for this one. The validate method for 
AddGetterSetterSelectionStatusValidator gets the 
SourceField/GetterSetterEntries as input. These are distinct from the labels 
generated for them, which are the names of the getter/setter methods. I guess 
the only way to do this is to regen the method names from within the validate 
method and see if there's an overlap. I can't override the input from the 
CheckBoxTreeViewer b/c the updateOK method uses a bunch of fields.
Created attachment 5274
proposed fix.

Status displays a warning for duplicate cases.
released patch &gt; 20030623</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38479" />
    <CreationDate amount="2003-06-05 06:23:00 -0400" />
    <DupId amount="36352" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>JUnit: Full Report [JUnit]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. List with tests that have errors or failures</Line>
          <Line>2. Each test with its stack trace</Line>
          <Line>Erich, can you please comment.</Line>
          <Line>dup of bug 36352</Line>
          <Line>Moving back to the JDT/UI inbox</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I20030604

Currently it is possible to either copy a list with all failed tests or the
stack trace for a single failed test. It should be possible to get a full report:

1. List with tests that have errors or failures
2. Each test with its stack trace
Erich, can you please comment.
dup of bug 36352
Moving back to the JDT/UI inbox


*** This bug has been marked as a duplicate of 36352 ***</WithStack>
    <WithOutStack>I20030604

Currently it is possible to either copy a list with all failed tests or the
stack trace for a single failed test. It should be possible to get a full report:

1. List with tests that have errors or failures
2. Each test with its stack trace
Erich, can you please comment.
dup of bug 36352
Moving back to the JDT/UI inbox


*** This bug has been marked as a duplicate of 36352 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38480" />
    <CreationDate amount="2003-06-05 06:24:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Delete: AssertionFailedException when deleting field in code with errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437340644265">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:313)</Frame>
          <Frame depth="1">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:263)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.refactoring.PerformRefactoringUtil.performRefactoring(PerformRefactoringUtil.java:53)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:371)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.performFinish(UserInputWizardPage.java:119)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:434)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.okPressed(RefactoringWizardDialog2.java:395)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:256)</Frame>
          <Frame depth="9">org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:423)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2034)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1741)</Frame>
          <Frame depth="15">org.eclipse.jface.window.Window.runEventLoop(Window.java:583)</Frame>
          <Frame depth="16">org.eclipse.jface.window.Window.open(Window.java:563)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:55)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteAction.startRefactoring(DeleteAction.java:124)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteAction.run(DeleteAction.java:109)</Frame>
          <Frame depth="20">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:191)</Frame>
          <Frame depth="21">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:169)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage.handleKeyReleased(JavaOutlinePage.java:1132)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage.access$6(JavaOutlinePage.java:1121)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$5.keyPressed(JavaOutlinePage.java:959)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:120)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2034)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1741)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1399)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.run(Workbench.java:1382)</Frame>
          <Frame depth="32">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="33">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="34">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="35">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="36">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="37">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437340644265">
        <Exception>org.eclipse.jdt.internal.corext.Assert$AssertionFailedException</Exception>
        <Reason>:
assertion failed;</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.corext.Assert.isTrue(Assert.java:136)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.corext.Assert.isTrue(Assert.java:121)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.corext.textmanipulation.TextRange.&lt;init&gt;(TextRange.java:47)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.corext.textmanipulation.SimpleTextEdit.&lt;init&gt;(SimpleTextEdit.java:37)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.corext.textmanipulation.SimpleTextEdit.createDelete(SimpleTextEdit.java:33)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.doTextRemove(ASTRewriteAnalyzer.java:144)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.doTextRemoveAndVisit(ASTRewriteAnalyzer.java:153)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer$ListRewriter.rewriteList(ASTRewriteAnalyzer.java:305)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.rewriteParagraphList(ASTRewriteAnalyzer.java:496)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:926)</Frame>
          <Frame depth="10">org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:154)</Frame>
          <Frame depth="11">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:1353)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.doVisit(ASTRewriteAnalyzer.java:163)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visitList(ASTRewriteAnalyzer.java:616)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.rewriteParagraphList(ASTRewriteAnalyzer.java:486)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:846)</Frame>
          <Frame depth="16">org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:154)</Frame>
          <Frame depth="17">org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:1353)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.corext.dom.ASTRewrite.rewriteNode(ASTRewrite.java:124)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$DeleteChangeCreator.addTextEditFromRewrite(DeleteRefactoring2.java:564)</Frame>
          <Frame depth="20">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$DeleteChangeCreator.createDeleteChange(DeleteRefactoring2.java:497)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$DeleteChangeCreator.createDeleteChange(DeleteRefactoring2.java:467)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.checkInput(DeleteRefactoring2.java:152)</Frame>
          <Frame depth="23">org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:65)</Frame>
          <Frame depth="24">org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:100)</Frame>
          <Frame depth="25">org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:138)</Frame>
          <Frame depth="26">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="package">
        <location start="469" end="491" />
        <code>package junit.samples;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="545" end="590" />
        <code>public static void main (String[] args) {
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>1. Create Java project with Junit source</Line>
          <Line>2. Open 'VectorTest.java' and remove the opening bracket from the compilation unit</Line>
          <Line>3. select the first field in the outliner and press delete</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604

1. Create Java project with Junit source
2. Open 'VectorTest.java' and remove the opening bracket from the compilation unit
3. select the first field in the outliner and press delete

java.lang.reflect.InvocationTargetException
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:313)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:252)
	at
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:263)
	at
org.eclipse.jdt.internal.ui.refactoring.PerformRefactoringUtil.performRefactoring(PerformRefactoringUtil.java:53)
	at
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:371)
	at
org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.performFinish(UserInputWizardPage.java:119)
	at
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.performFinish(RefactoringWizard.java:434)
	at
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.okPressed(RefactoringWizardDialog2.java:395)
	at org.eclipse.jface.dialogs.Dialog.buttonPressed(Dialog.java:256)
	at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:423)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2034)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1741)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
	at org.eclipse.jface.window.Window.open(Window.java:563)
	at
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:55)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteAction.startRefactoring(DeleteAction.java:124)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteAction.run(DeleteAction.java:109)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:191)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:169)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage.handleKeyReleased(JavaOutlinePage.java:1132)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage.access$6(JavaOutlinePage.java:1121)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$5.keyPressed(JavaOutlinePage.java:959)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:120)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2034)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1741)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1399)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1382)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.jdt.internal.corext.Assert$AssertionFailedException:
assertion failed; 
	at org.eclipse.jdt.internal.corext.Assert.isTrue(Assert.java:136)
	at org.eclipse.jdt.internal.corext.Assert.isTrue(Assert.java:121)
	at
org.eclipse.jdt.internal.corext.textmanipulation.TextRange.&lt;init&gt;(TextRange.java:47)
	at
org.eclipse.jdt.internal.corext.textmanipulation.SimpleTextEdit.&lt;init&gt;(SimpleTextEdit.java:37)
	at
org.eclipse.jdt.internal.corext.textmanipulation.SimpleTextEdit.createDelete(SimpleTextEdit.java:33)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.doTextRemove(ASTRewriteAnalyzer.java:144)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.doTextRemoveAndVisit(ASTRewriteAnalyzer.java:153)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer$ListRewriter.rewriteList(ASTRewriteAnalyzer.java:305)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.rewriteParagraphList(ASTRewriteAnalyzer.java:496)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:926)
	at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java:154)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:1353)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.doVisit(ASTRewriteAnalyzer.java:163)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visitList(ASTRewriteAnalyzer.java:616)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.rewriteParagraphList(ASTRewriteAnalyzer.java:486)
	at
org.eclipse.jdt.internal.corext.dom.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:846)
	at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:154)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:1353)
	at org.eclipse.jdt.internal.corext.dom.ASTRewrite.rewriteNode(ASTRewrite.java:124)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$DeleteChangeCreator.addTextEditFromRewrite(DeleteRefactoring2.java:564)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$DeleteChangeCreator.createDeleteChange(DeleteRefactoring2.java:497)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2$DeleteChangeCreator.createDeleteChange(DeleteRefactoring2.java:467)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg2.DeleteRefactoring2.checkInput(DeleteRefactoring2.java:152)
	at
org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:65)
	at
org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:100)
	at
org.eclipse.jdt.internal.ui.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:138)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)
	... 40 more
The positions in the AST look pretty solid. The problem is that the ASTRewrite 
scans for the missing bracket and therefore ends up with a negative range.

Martin, anything ASTRewrite can do here.
fixed in the ASTRewriter &gt; 2000604
here's a smaller test case:
package junit.samples;

public class VectorTest 
	protected String fEmpty;

	public static void main (String[] args) {
	}
}
i added a regression test
don't we need one in ast rewriter as well? :)
I so far have no tests for AST on syntax errors.</WithStack>
    <WithOutStack>20030604

1. Create Java project with Junit source
2. Open 'VectorTest.java' and remove the opening bracket from the compilation unit
3. select the first field in the outliner and press delete



	... 40 more
The positions in the AST look pretty solid. The problem is that the ASTRewrite 
scans for the missing bracket and therefore ends up with a negative range.

Martin, anything ASTRewrite can do here.
fixed in the ASTRewriter &gt; 2000604
here's a smaller test case:
package junit.samples;

public class VectorTest 
	protected String fEmpty;

	public static void main (String[] args) {
	}
}
i added a regression test
don't we need one in ast rewriter as well? :)
I so far have no tests for AST on syntax errors.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38481" />
    <CreationDate amount="2003-06-05 06:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>getters/setters: insertion point incorrect</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="9" end="78" />
        <code>public class Ad {
	
	void f(){}
	
	int foo;	
	int foo1;
	int foo2;	
}</code>
      </source_code>
      <source_code type="class">
        <location start="190" end="319" />
        <code>public class Ad {
	
	void f(){}
	
	int foo;	
	int foo1;
	int foo2;	
        class Inner{
           //lotsa code here
        }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20020604
public class Ad {
	
	void f(){}
	
	int foo;	
	int foo1;
	int foo2;	
}

i seleced f() as the insert point and it added the getter after all the fields
this is even more brutal here:
public class Ad {
	
	void f(){}
	
	int foo;	
	int foo1;
	int foo2;	
        class Inner{
           //lotsa code here
        }
}

it adds the getter after the inner class
This seems to be a function of calling SourceType.createMethod(). 
Recommendations?
Isn't createMethod inserting the new method _before_ the given sibling?
So if you pass 'int foo;' as sibling it should work. My guess was that the code
passes the next _method_, but not the next _member_.

if not we have to file anbug against jcore.
Your guess is correct. Will modify the code so that the sibling is the next 
member, not the next method.
Created attachment 5223
proposed fix.

There may be a better way to do this, but here's a patch.
released patch &gt; 20030618</WithStack>
    <WithOutStack>20020604
public class Ad {
	
	void f(){}
	
	int foo;	
	int foo1;
	int foo2;	
}

i seleced f() as the insert point and it added the getter after all the fields
this is even more brutal here:
public class Ad {
	
	void f(){}
	
	int foo;	
	int foo1;
	int foo2;	
        class Inner{
           //lotsa code here
        }
}

it adds the getter after the inner class
This seems to be a function of calling SourceType.createMethod(). 
Recommendations?
Isn't createMethod inserting the new method _before_ the given sibling?
So if you pass 'int foo;' as sibling it should work. My guess was that the code
passes the next _method_, but not the next _member_.

if not we have to file anbug against jcore.
Your guess is correct. Will modify the code so that the sibling is the next 
member, not the next method.
Created attachment 5223
proposed fix.

There may be a better way to do this, but here's a patch.
released patch &gt; 20030618</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38482" />
    <CreationDate amount="2003-06-05 06:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Alignment problem in Java Editor pref page</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20030604

Incorrect alignment of radio buttons and color chooser button
(see attached screenshot).
Created attachment 5066
Alignment problem
available in builds &gt; 20040507</WithStack>
    <WithOutStack>I20030604

Incorrect alignment of radio buttons and color chooser button
(see attached screenshot).
Created attachment 5066
Alignment problem
available in builds &gt; 20040507</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38483" />
    <CreationDate amount="2003-06-05 06:34:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Delete: buttons on the 'Found Problems' page [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. make Java file read-only and delete a method in it</Line>
          <Line>2. On the first dialog, press ok, a 'Found Problems' dialog shows up</Line>
          <Line>3. The dialog has two buttons:</Line>
          <Line>Back and cancel</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604

1. make Java file read-only and delete a method in it
2. On the first dialog, press ok, a 'Found Problems' dialog shows up
3. The dialog has two buttons:
Back and cancel

Back is not too helpfull as you can't change anything on the first dialog
Cancel should probably be better 'Ok'
Reworking this depends on the overall refactoring story. This is planned for 
M3/M4. Postponing PR until then.
Haven't started yet to make this API. Have to postpone until then. Marking the 
PR as 3.0.
Fixed for M9.</WithStack>
    <WithOutStack>20030604

1. make Java file read-only and delete a method in it
2. On the first dialog, press ok, a 'Found Problems' dialog shows up
3. The dialog has two buttons:
Back and cancel

Back is not too helpfull as you can't change anything on the first dialog
Cancel should probably be better 'Ok'
Reworking this depends on the overall refactoring story. This is planned for 
M3/M4. Postponing PR until then.
Haven't started yet to make this API. Have to postpone until then. Marking the 
PR as 3.0.
Fixed for M9.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38484" />
    <CreationDate amount="2003-06-05 06:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>add constructors: incorrect wording</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604
dialog says 'generate method comment'
but it's the constructor comment template that will be used here, not the 
method comment
Created attachment 5087
proposed fix.

Wording is now "Generate constructor comment."
released &gt; 20030606. i changed the patch to use an instance variable for the
comment string instead of inheritance (reduce number of inner classes).</WithStack>
    <WithOutStack>20030604
dialog says 'generate method comment'
but it's the constructor comment template that will be used here, not the 
method comment
Created attachment 5087
proposed fix.

Wording is now "Generate constructor comment."
released &gt; 20030606. i changed the patch to use an instance variable for the
comment string instead of inheritance (reduce number of inner classes).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38485" />
    <CreationDate amount="2003-06-05 06:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>add constructors: incorrect text selection after [code manipulation]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="class">
        <location start="9" end="37" />
        <code>class A extedns ArrayList{
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="435" end="480" />
        <code>EditorUtility.revealInEditor(editor, res[0]);</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="771" end="864" />
        <code>if (cunit.isWorkingCopy()) {
				synchronized (cunit) {
					cunit.reconcile();
				}
			}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604
class A extedns ArrayList{
}

after adding all 3 constructors, the text selection is set to something in the 
middle of a comment not, to to something meaningful
IMO the selection should stay. 
So you want the current text highlight to be preserved no matter what it is? 
Even if it spans two methods and the constructors are inserted b/t the two 
methods?
line 261 of AddUnimplementedConstructorsAction.java makes a call to

EditorUtility.revealInEditor(editor, res[0]);

If there's a breakpt in the debugger at this call, then the highlight works as 
it should for the test case. If there's no breakpt, then the highlight is 
messed up as suggested by the bug report. 
you have to call compilationUnit.reconcile to make sure that all node ranges are
updated.

			if (cunit.isWorkingCopy()) {
				synchronized (cunit) {
					cunit.reconcile();
				}
			}

Created attachment 5201
proposed fix.

Trivial fix using previous suggestion.
released patch &gt; 20030616</WithStack>
    <WithOutStack>20030604
class A extedns ArrayList{
}

after adding all 3 constructors, the text selection is set to something in the 
middle of a comment not, to to something meaningful
IMO the selection should stay. 
So you want the current text highlight to be preserved no matter what it is? 
Even if it spans two methods and the constructors are inserted b/t the two 
methods?
line 261 of AddUnimplementedConstructorsAction.java makes a call to

EditorUtility.revealInEditor(editor, res[0]);

If there's a breakpt in the debugger at this call, then the highlight works as 
it should for the test case. If there's no breakpt, then the highlight is 
messed up as suggested by the bug report. 
you have to call compilationUnit.reconcile to make sure that all node ranges are
updated.

			if (cunit.isWorkingCopy()) {
				synchronized (cunit) {
					cunit.reconcile();
				}
			}

Created attachment 5201
proposed fix.

Trivial fix using previous suggestion.
released patch &gt; 20030616</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38486" />
    <CreationDate amount="2003-06-05 06:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Entering a semicolon into a string is too cumbersome</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In smart insert mode it is not possible to insert a semicolon into a string. 
You have to explicitly toggle the mode. This is frustrating since there is no 
affordance or clue for how to toggle the mode. This means to insert a 
semicolon when the typing preference is enabled I have to know about 
the "insert" key toggle mechanism. This needs an additional clue (e.g. in the 
preference page, when the cursor jumps inside a string etc.).

To avoid this frustration all together the semicolon should be inserted into 
the string directly. This is consistent with the way semicolon is handled in 
comments.

In addition, when using the sysout template there already is a semicolon 
inserted and the user doesn't even have to enter one. To smartness isn't 
needed.
*** Bug 38502 has been marked as a duplicate of this bug. ***
For the only client of the sysout template...
I20030605.</WithStack>
    <WithOutStack>In smart insert mode it is not possible to insert a semicolon into a string. 
You have to explicitly toggle the mode. This is frustrating since there is no 
affordance or clue for how to toggle the mode. This means to insert a 
semicolon when the typing preference is enabled I have to know about 
the "insert" key toggle mechanism. This needs an additional clue (e.g. in the 
preference page, when the cursor jumps inside a string etc.).

To avoid this frustration all together the semicolon should be inserted into 
the string directly. This is consistent with the way semicolon is handled in 
comments.

In addition, when using the sysout template there already is a semicolon 
inserted and the user doesn't even have to enter one. To smartness isn't 
needed.
*** Bug 38502 has been marked as a duplicate of this bug. ***
For the only client of the sysout template...
I20030605.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38487" />
    <CreationDate amount="2003-06-05 06:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>add constructors: does not see the default constructor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="class">
        <location start="9" end="42" />
        <code>public class Ad extends Object{
}</code>
      </source_code>
      <source_code type="class">
        <location start="43" end="64" />
        <code>class D extends Ad{
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="125" end="134" />
        <code>super();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604
public class Ad extends Object{
}
class D extends Ad{
}

it will not let me add a constructor to D even though
D(){
 super();
}
would be what i want to have generated
Would you expect this to work if in your example class Ad didn't extend Object 
explicitly? Do you always want to have the ability to generate a default 
constructor from the wizard?
I need some input on this plz.
i think the default constructor should be included whenever the superclass does 
not define an explicit one
so yes, even if Ad does not explicitly extend Object
Created attachment 5205
proposed fix.

Provides the root type constructors when applicable. Modifies StubUtility
method since it seems to be specific to this source action. It would be nice to
have a getConstructors() method for IType I think.
&gt;It would be nice to have a getConstructors() method for IType I think.

JavaElementUtil.getAllConstructors
Created attachment 5206
proposed fix. improved code.
Created attachment 5208
proposed fix. improved code.
released patch &gt; 20030617</WithStack>
    <WithOutStack>20030604
public class Ad extends Object{
}
class D extends Ad{
}

it will not let me add a constructor to D even though
D(){
 super();
}
would be what i want to have generated
Would you expect this to work if in your example class Ad didn't extend Object 
explicitly? Do you always want to have the ability to generate a default 
constructor from the wizard?
I need some input on this plz.
i think the default constructor should be included whenever the superclass does 
not define an explicit one
so yes, even if Ad does not explicitly extend Object
Created attachment 5205
proposed fix.

Provides the root type constructors when applicable. Modifies StubUtility
method since it seems to be specific to this source action. It would be nice to
have a getConstructors() method for IType I think.
&gt;It would be nice to have a getConstructors() method for IType I think.

JavaElementUtil.getAllConstructors
Created attachment 5206
proposed fix. improved code.
Created attachment 5208
proposed fix. improved code.
released patch &gt; 20030617</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38488" />
    <CreationDate amount="2003-06-05 06:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Smart semicolon jumps to semicolon in a string</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="125" end="166" />
        <code>Syst&lt;CURSOR&gt;em.out.println("dfa;sdfsdf");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Typing a ";" at the cursor position below jumps to the semicolon inside the 
string. It should jump to the end of the line.

Syst&lt;CURSOR&gt;em.out.println("dfa;sdfsdf");
fixed in 200306051737
fixed in 200306051737</WithStack>
    <WithOutStack>Typing a ";" at the cursor position below jumps to the semicolon inside the 
string. It should jump to the end of the line.

Syst&lt;CURSOR&gt;em.out.println("dfa;sdfsdf");
fixed in 200306051737
fixed in 200306051737</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38489" />
    <CreationDate amount="2003-06-05 06:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Delete: deleting link that contains read-only resource shows Read-Only confirmation dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- load JUnit</Line>
          <Line>- make file read-only inside JUnit</Line>
          <Line>- create Test</Line>
          <Line>- create source folder under test and link it to JUnit</Line>
          <Line>- delete "linked" source folder</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>M1

- load JUnit
- make file read-only inside JUnit
- create Test
- create source folder under test and link it to JUnit
- delete "linked" source folder

observe:

you get the read-only confirmation dialog although no resources are actually 
deleted.
fixed</WithStack>
    <WithOutStack>M1

- load JUnit
- make file read-only inside JUnit
- create Test
- create source folder under test and link it to JUnit
- delete "linked" source folder

observe:

you get the read-only confirmation dialog although no resources are actually 
deleted.
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38490" />
    <CreationDate amount="2003-06-05 06:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[typing] Smart semicolon and /* */ end of line comments</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In the following line type ";" at the cursor location
   System.ou&lt;CURSOR&gt;t.println("dfasdfsdf") /* */

the semicolon is inserted at the end of the line
   System.ou&lt;CURSOR&gt;t.println("dfasdfsdf") /* */&lt;;&gt;

I would have expected it appears before the "end of line comment"
Hm, this isn't really an "end of line comment"...

But we should do the right thing if there is nothing but white space in the 
default (java) partition at EOL. Have to make sure it moves to the very end in 
the following scenario:

obj.m&lt;CURSOR&gt;ethod(param1, null /* no setting */, bla)&lt;;&gt;
fixed a long time ago</WithStack>
    <WithOutStack>In the following line type ";" at the cursor location
   System.ou&lt;CURSOR&gt;t.println("dfasdfsdf") /* */

the semicolon is inserted at the end of the line
   System.ou&lt;CURSOR&gt;t.println("dfasdfsdf") /* */&lt;;&gt;

I would have expected it appears before the "end of line comment"
Hm, this isn't really an "end of line comment"...

But we should do the right thing if there is nothing but white space in the 
default (java) partition at EOL. Have to make sure it moves to the very end in 
the following scenario:

obj.m&lt;CURSOR&gt;ethod(param1, null /* no setting */, bla)&lt;;&gt;
fixed a long time ago</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38491" />
    <CreationDate amount="2003-06-05 06:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>source generation actions: should be available on most cus</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="3">
        <Lines>
          <Line>- enabled when selection is on fields from came CU and not in an interface</Line>
          <Line>- enable on a type if in a CU and not an interface</Line>
          <Line>- enabled on all CU's</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- on a interface</Line>
          <Line>- on a class with no fields</Line>
          <Line>- on a CU with no types</Line>
          <Line>Never show an empty dialog.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- 'Override' (interface rule does not apply)</Line>
          <Line>- 'Constructors'</Line>
          <Line>- 'Setter/Getter'</Line>
          <Line>Randy, can you do the 3?</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20020604
it should be available on compilation units that have 1 type or more than 1 
type if 1 of the types is the primary type

some 99% of all cus known to man belong to that category
btw it used to be - this looks like a regression
Seems to be an enablement problem. For a CU in a default package with a 
field "Object field;" there is no getter setter action. After selecting the 
type and reselecting the CU the action is in the source menu.
Martin,

can you please have a look. As discussed we should enable the action without 
checking if the type has fields.
fixed for add delegate &gt; 20030606
Action enablement (on selectionChanged)
- enabled when selection is on fields from came CU and not in an interface
- enable on a type if in a CU and not an interface
- enabled on all CU's

Run:
Bring dialog (Not applicable) when invoked
- on a interface
- on a class with no fields
- on a CU with no types
Never show an empty dialog.

Needs to be done as well for
- 'Override' (interface rule does not apply)
- 'Constructors'
- 'Setter/Getter'
Randy, can you do the 3?

I'll take these.
Created attachment 5134
dubious fix.

This doesn't really make sense to me for the "Add Constructors from superclass"
action (see attachment). Why should this action be available when a field is
selected? Also, if the CU is selected, I just throw up a generic, "operation
not applicable: message. Is this really what we want?
You're right, doesn't make sense for constructors.
Although, the action should be available on CUs and work on the primary type
when invoked. (A dialog would show up on run when there is no primary type)

(ICompilationUnit.findPrimaryType)
Ok. I will reimplement this for the "Add superclasss..." action so that the 
action is not available when selecting a field. I think this is also going to 
be true for the "Override/Implement Methods" action as well, since this is not 
really applicable to fields either.

A different problem is with the override/implement methods action. Currently, 
we will open the dialog even when there are no methods to override. We'll have 
to figure out before the dialog is opened whether or not there are methods to 
override. Rather than again calculate in the dialog what the methods are, it 
may make sense to pass the methods to the dialog so we only do this (possibly 
expensive) calculation once.
I added a method 'hasMethodsToOverride' to the OverrideMethodDialog
Created attachment 5135
proposed fix for "Add constructors..." action.

+ No "add constructor..." action available on field selection.
+ Uses primary type when action selected on a cu.
Created attachment 5138
proposed fixes.

+ No "add constructor..." action available on field selection.
+ Uses primary type when actions selected on a cu.
+ No "override methods..." action available on field selection.
+ No choices available on interface selection.
+ Checks first if methods to override availabe, and provides message that there
are none available instead of opening up dialog with blank tree.
(note that there is also a change in AddGetterSetterAction.java provided in
attachment 5081).
released patch &gt; 20030610
*** Bug 38492 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>20020604
it should be available on compilation units that have 1 type or more than 1 
type if 1 of the types is the primary type

some 99% of all cus known to man belong to that category
btw it used to be - this looks like a regression
Seems to be an enablement problem. For a CU in a default package with a 
field "Object field;" there is no getter setter action. After selecting the 
type and reselecting the CU the action is in the source menu.
Martin,

can you please have a look. As discussed we should enable the action without 
checking if the type has fields.
fixed for add delegate &gt; 20030606
Action enablement (on selectionChanged)
- enabled when selection is on fields from came CU and not in an interface
- enable on a type if in a CU and not an interface
- enabled on all CU's

Run:
Bring dialog (Not applicable) when invoked
- on a interface
- on a class with no fields
- on a CU with no types
Never show an empty dialog.

Needs to be done as well for
- 'Override' (interface rule does not apply)
- 'Constructors'
- 'Setter/Getter'
Randy, can you do the 3?

I'll take these.
Created attachment 5134
dubious fix.

This doesn't really make sense to me for the "Add Constructors from superclass"
action (see attachment). Why should this action be available when a field is
selected? Also, if the CU is selected, I just throw up a generic, "operation
not applicable: message. Is this really what we want?
You're right, doesn't make sense for constructors.
Although, the action should be available on CUs and work on the primary type
when invoked. (A dialog would show up on run when there is no primary type)

(ICompilationUnit.findPrimaryType)
Ok. I will reimplement this for the "Add superclasss..." action so that the 
action is not available when selecting a field. I think this is also going to 
be true for the "Override/Implement Methods" action as well, since this is not 
really applicable to fields either.

A different problem is with the override/implement methods action. Currently, 
we will open the dialog even when there are no methods to override. We'll have 
to figure out before the dialog is opened whether or not there are methods to 
override. Rather than again calculate in the dialog what the methods are, it 
may make sense to pass the methods to the dialog so we only do this (possibly 
expensive) calculation once.
I added a method 'hasMethodsToOverride' to the OverrideMethodDialog
Created attachment 5135
proposed fix for "Add constructors..." action.

+ No "add constructor..." action available on field selection.
+ Uses primary type when action selected on a cu.
Created attachment 5138
proposed fixes.

+ No "add constructor..." action available on field selection.
+ Uses primary type when actions selected on a cu.
+ No "override methods..." action available on field selection.
+ No choices available on interface selection.
+ Checks first if methods to override availabe, and provides message that there
are none available instead of opening up dialog with blank tree.
(note that there is also a change in AddGetterSetterAction.java provided in
attachment 5081).
released patch &gt; 20030610
*** Bug 38492 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38492" />
    <CreationDate amount="2003-06-05 06:54:00 -0400" />
    <DupId amount="38491" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>add constructors: should be available on most cus</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>20020604
it should be available on compilation units that have 1 type or more than 1 
type if 1 of the types is the primary type
Randy,

Martin already looked into this. Please coordinate with him.
Resolved by attachment 5138 of bug 38492.
Its bug 38491

*** This bug has been marked as a duplicate of 38491 ***</WithStack>
    <WithOutStack>20020604
it should be available on compilation units that have 1 type or more than 1 
type if 1 of the types is the primary type
Randy,

Martin already looked into this. Please coordinate with him.
Resolved by attachment 5138 of bug 38492.
Its bug 38491

*** This bug has been marked as a duplicate of 38491 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38493" />
    <CreationDate amount="2003-06-05 06:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>If ambiguous, all possible return statements should be proposed  [quick fix]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="12" end="147" />
        <code>public TestResult run() {
		TestResult result= createResult();
		run(result);
		TestResult result1= createResult();
		run(result1);
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20030604:

	public TestResult run() {
		TestResult result= createResult();
		run(result);
		TestResult result1= createResult();
		run(result1);
	}

Qyuickfix proposes to return result1. It should also propose to return result.
fixed in 3.0 M2</WithStack>
    <WithOutStack>I20030604:

	public TestResult run() {
		TestResult result= createResult();
		run(result);
		TestResult result1= createResult();
		run(result1);
	}

Qyuickfix proposes to return result1. It should also propose to return result.
fixed in 3.0 M2</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38494" />
    <CreationDate amount="2003-06-05 06:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>add constructors: suboptimal wording</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604
if you want to add a construcotr to a class that already has all construcotrs 
form the superclass you get a dialog that reads:

'No constructors to implement for this type.'
This is not a sentence and reads badly.
Created attachment 5075
fix.

better wording
released &gt; 20030604</WithStack>
    <WithOutStack>20030604
if you want to add a construcotr to a class that already has all construcotrs 
form the superclass you get a dialog that reads:

'No constructors to implement for this type.'
This is not a sentence and reads badly.
Created attachment 5075
fix.

better wording
released &gt; 20030604</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38495" />
    <CreationDate amount="2003-06-05 07:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Call hierarchy: OperationCanceledException when pressing stop</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340644275">
        <Exception>org.eclipse.core.runtime.OperationCanceledException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:701)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:661)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:848)</Frame>
          <Frame depth="3">org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:475)</Frame>
          <Frame depth="4">org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:401)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper.findChildren(CallerMethodWrapper.java:67)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.performSearch(MethodWrapper.java:282)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.doFindChildren(MethodWrapper.java:220)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.getCalls(MethodWrapper.java:80)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.ui.callhierarchy.CallHierarchyContentProvider$MethodWrapperRunnable.run(CallHierarchyContentProvider.java:40)</Frame>
          <Frame depth="10">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="661" end="696" />
        <code>- catch (InterruptedException e) {</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build I20030604

Call hierarchy does not handle cancel of operation (by clicking on stop in
progress bar - lower right corner).


!ENTRY org.eclipse.jdt.ui 4 10001 Jun 05, 2003 12:51:49.751
!MESSAGE Internal Error
!STACK 0
org.eclipse.core.runtime.OperationCanceledException
	at
org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:701)
	at
org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:661)
	at
org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:848)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:475)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:401)
	at
org.eclipse.jdt.internal.corext.callhierarchy.CallerMethodWrapper.findChildren(CallerMethodWrapper.java:67)
	at
org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.performSearch(MethodWrapper.java:282)
	at
org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.doFindChildren(MethodWrapper.java:220)
	at
org.eclipse.jdt.internal.corext.callhierarchy.MethodWrapper.getCalls(MethodWrapper.java:80)
	at
org.eclipse.jdt.internal.ui.callhierarchy.CallHierarchyContentProvider$MethodWrapperRunnable.run(CallHierarchyContentProvider.java:40)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)
OK, I fixed the exception in the log, but there is more to do:

CallHierarchyContentProvider.getChildren(...)
 - catch (InvocationTargetException e):
   This exception wraps all exceptions thrown in the modal context thread.
   So there is no need to catch anything in MethodWrapperRunnable.run(...).

   Should use the exception handler so that the user is prompted is prompted
   by a dialog. We should never silently log exceptions.

 - catch (InterruptedException e) {
   Is thrown when the user stops the operation by pressing the cancel button.

   Should make sure that the view is empty or that the user has some feedback 
   that the operation was canceled. May be a dummy node saying that the search
   got canceled.

Adam, can you please coordinate with the contributer  
Jesper, how does m2 sound as the target milestone? :)
Adam,

I'll try - it should be possible (the same goes for Bug 38512 and Bug 38511).

I'll be leaving for my summer vacation on June 21 (and three weeks forward), so
it has to be before that time. 
Created attachment 5193
Fix for exception handling

Patch against the org.eclipse.jdt.internal.ui.callhierarchy package.

Fixes for exception handling the way Dirk requested (ExceptionHandler popup on
InvocationTargetException and an indication that the search was interrupted on
an InterruptedException).

The InterruptedException is currently presented as a text message instead of
the search result. Let me know if this is sufficient.
released (i changed 'cancelled' to 'canceled' as we use the american spelling 
in other places)

thanks
verified using I20030716 + plug-in expot I20030716.from20030717_1019</WithStack>
    <WithOutStack>Build I20030604

Call hierarchy does not handle cancel of operation (by clicking on stop in
progress bar - lower right corner).


!ENTRY org.eclipse.jdt.ui 4 10001 Jun 05, 2003 12:51:49.751
!MESSAGE Internal Error
!STACK 0

OK, I fixed the exception in the log, but there is more to do:

CallHierarchyContentProvider.getChildren(...)
 - catch (InvocationTargetException e):
   This exception wraps all exceptions thrown in the modal context thread.
   So there is no need to catch anything in MethodWrapperRunnable.run(...).

   Should use the exception handler so that the user is prompted is prompted
   by a dialog. We should never silently log exceptions.

 - catch (InterruptedException e) {
   Is thrown when the user stops the operation by pressing the cancel button.

   Should make sure that the view is empty or that the user has some feedback 
   that the operation was canceled. May be a dummy node saying that the search
   got canceled.

Adam, can you please coordinate with the contributer  
Jesper, how does m2 sound as the target milestone? :)
Adam,

I'll try - it should be possible (the same goes for Bug 38512 and Bug 38511).

I'll be leaving for my summer vacation on June 21 (and three weeks forward), so
it has to be before that time. 
Created attachment 5193
Fix for exception handling

Patch against the org.eclipse.jdt.internal.ui.callhierarchy package.

Fixes for exception handling the way Dirk requested (ExceptionHandler popup on
InvocationTargetException and an indication that the search was interrupted on
an InterruptedException).

The InterruptedException is currently presented as a text message instead of
the search result. Let me know if this is sufficient.
released (i changed 'cancelled' to 'canceled' as we use the american spelling 
in other places)

thanks
verified using I20030716 + plug-in expot I20030716.from20030717_1019</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38496" />
    <CreationDate amount="2003-06-05 07:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>sort members: should be disabled on types with no members [code manipulation]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604
currently what you get is a no-op. not even an info dialog
Disabling the action needs to parse the compilation unit which we decided not 
to do for selection changes. The action should be enabled and a message dialog 
should pop-up in this case. Having a type without members is a rare case 
anyway.
Created attachment 5147
proposed fix.

Throws up a msg dialog if there are less than 2 elements to be sorted.
released &gt; 20030616

modified patch: if number of top level types &gt; 1, then sorting is possible even
if there are no members in the types</WithStack>
    <WithOutStack>20030604
currently what you get is a no-op. not even an info dialog
Disabling the action needs to parse the compilation unit which we decided not 
to do for selection changes. The action should be enabled and a message dialog 
should pop-up in this case. Having a type without members is a rare case 
anyway.
Created attachment 5147
proposed fix.

Throws up a msg dialog if there are less than 2 elements to be sorted.
released &gt; 20030616

modified patch: if number of top level types &gt; 1, then sorting is possible even
if there are no members in the types</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38497" />
    <CreationDate amount="2003-06-05 07:03:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missleading quickfix proposal name [quickfix]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="82" end="93" />
        <code>m(2.3, 1);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20030604:

Define the following method:
	void m(int i, float r) {}
Call it using
	m(2.3, 1);

Onw of the proposed quick fixes is "Cast argument 1 to 'int'" which is 
confusing. We should rephrase the proposal.
What's about "Cast argument '2.3' to 'int'"
To name the argument can get a extra long label
fixed &gt; 20031006

The argument string (e.g. '1.2' or 'x.toString()' is shown if its length is 
less than 18 characters, contains no line delimiters and no other argument has 
the same string.</WithStack>
    <WithOutStack>I20030604:

Define the following method:
	void m(int i, float r) {}
Call it using
	m(2.3, 1);

Onw of the proposed quick fixes is "Cast argument 1 to 'int'" which is 
confusing. We should rephrase the proposal.
What's about "Cast argument '2.3' to 'int'"
To name the argument can get a extra long label
fixed &gt; 20031006

The argument string (e.g. '1.2' or 'x.toString()' is shown if its length is 
less than 18 characters, contains no line delimiters and no other argument has 
the same string.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38498" />
    <CreationDate amount="2003-06-05 07:06:00 -0400" />
    <DupId amount="38500" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>getters/setters: compile error after (abstract methods don't have bodies)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="assignment">
        <location start="22" end="38" />
        <code>int FOOLME= 42;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="187" end="205" />
        <code>/**
 * @return
 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="206" end="248" />
        <code>public int getFOOLME() {
	return FOOLME;
}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="249" end="274" />
        <code>/**
 * @param foolme
 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="275" end="330" />
        <code>public void setFOOLME(int foolme) {
	FOOLME = foolme;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>public interface Ad {
	int FOOLME= 42;
}


add getter setter for FOOLME (note that the action is _not_ available on the 
field but it is on the type)

you get code that does not compile:
/**
 * @return
 */
public int getFOOLME() {
	return FOOLME;
}

/**
 * @param foolme
 */
public void setFOOLME(int foolme) {
	FOOLME = foolme;
}
would be solved when disabling getter/setter on interfaces

*** This bug has been marked as a duplicate of 38500 ***</WithStack>
    <WithOutStack>public interface Ad {
	int FOOLME= 42;
}


add getter setter for FOOLME (note that the action is _not_ available on the 
field but it is on the type)

you get code that does not compile:
/**
 * @return
 */
public int getFOOLME() {
	return FOOLME;
}

/**
 * @param foolme
 */
public void setFOOLME(int foolme) {
	FOOLME = foolme;
}
would be solved when disabling getter/setter on interfaces

*** This bug has been marked as a duplicate of 38500 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38499" />
    <CreationDate amount="2003-06-05 07:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Source Hover oszillates</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- in Java Editor preferences configure source hover to activate without pressing a</Line>
          <Line>modifier key</Line>
          <Line>- activate source hover and stop moving the mouse</Line>
          <Line>Observe: after two seconds the hover disappears and reappears a second later;</Line>
          <Line>this oszillates indefinitetly</Line>
          <Line>Fixed in HEAD.</Line>
          <Line>Should be fixed in M1.</Line>
          <Line>I20030605.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I20030604
MacOS 10.2.6

- in Java Editor preferences configure source hover to activate without pressing a 
modifier key
- activate source hover and stop moving the mouse
Observe: after two seconds the hover disappears and reappears a second later;
this oszillates indefinitetly
Fixed in HEAD.
Should be fixed in M1.
I20030605.</WithStack>
    <WithOutStack>I20030604
MacOS 10.2.6

- in Java Editor preferences configure source hover to activate without pressing a 
modifier key
- activate source hover and stop moving the mouse
Observe: after two seconds the hover disappears and reappears a second later;
this oszillates indefinitetly
Fixed in HEAD.
Should be fixed in M1.
I20030605.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="38500" />
    <CreationDate amount="2003-06-05 07:11:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>getters/setters: very confused by interface fields</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>- dialog says you can make them 'private/protected/default' which is incorrect</Line>
          <Line>for interface methods (default makes some sense but the others do not)</Line>
          <Line>- even if you say 'private' it still generates 'public'</Line>
          <Line>- all interface methods are always 'abstract' so 'final' makes no sense - it</Line>
          <Line>will never compile</Line>
          <Line>-'synchronized' makes no sense either</Line>
          <Line>-nor does 'native'</Line>
          <Line>in general creating setters makes no sense either because all the fields are</Line>
          <Line>final</Line>
          <Line>I guess best would be to not bring up the getter/setter dialog on interfaces.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>20030604
strange things happen when you start generating getters/setters for interface 
fields:

- dialog says you can make them 'private/protected/default' which is incorrect 
for interface methods (default makes some sense but the others do not)
- even if you say 'private' it still generates 'public'
- all interface methods are always 'abstract' so 'final' makes no sense - it 
will never compile
-'synchronized' makes no sense either
-nor does 'native'
in general creating setters makes no sense either because all the fields are 
final
I guess best would be to not bring up the getter/setter dialog on interfaces.

When the 'Add Getter/Setter' action is invoked on a invalid location (interface,
outside of a type, type without members), a information dialog should come up to
inform what is a valid selection
*** Bug 38498 has been marked as a duplicate of this bug. ***
Created attachment 5139
proposed fix.

When chosen from an interface cu, now pops up a dialog with the message, "The
Generate Getters and Setters operation is not applicable to the fields in this
type."
patch release &gt; 20030610</WithStack>
    <WithOutStack>20030604
strange things happen when you start generating getters/setters for interface 
fields:

- dialog says you can make them 'private/protected/default' which is incorrect 
for interface methods (default makes some sense but the others do not)
- even if you say 'private' it still generates 'public'
- all interface methods are always 'abstract' so 'final' makes no sense - it 
will never compile
-'synchronized' makes no sense either
-nor does 'native'
in general creating setters makes no sense either because all the fields are 
final
I guess best would be to not bring up the getter/setter dialog on interfaces.

When the 'Add Getter/Setter' action is invoked on a invalid location (interface,
outside of a type, type without members), a information dialog should come up to
inform what is a valid selection
*** Bug 38498 has been marked as a duplicate of this bug. ***
Created attachment 5139
proposed fix.

When chosen from an interface cu, now pops up a dialog with the message, "The
Generate Getters and Setters operation is not applicable to the fields in this
type."
patch release &gt; 20030610</WithOutStack>
  </Bug>
</infozilla-output>

