<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="40501" />
    <CreationDate amount="2003-07-18 15:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing Ant syntax errors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>We should be flagging the unexpected text (the extra '&gt;')
Test file:
&lt;project name="Echo" default="echo"&gt;

	&lt;property name="MixedCase" value="xx"/&gt;&gt;
&lt;/project&gt;
With the work of bug 44343 the error messaging for the Ant editor should be 
greatly improved.

Another test case that is not currently reported (missing the closing paren 
for the property):

&lt;echo message="${Myclass.present"&gt;&lt;/echo&gt;
Fixed with the work of 44343 and some more beefing up of the ProjectHelper and 
AntModel.

Note that only top level tasks (not in targets) are fully resolved and fully 
report syntax errors. That is the echo task will not report the property 
problem if it is enclosed in a target. I have previously logged bug 50302 so 
that user has a choice to fully error check the buildfile.
Please verify Jared.
Verified.</WithStack>
    <WithOutStack>We should be flagging the unexpected text (the extra '&gt;')
Test file:
&lt;project name="Echo" default="echo"&gt;

	&lt;property name="MixedCase" value="xx"/&gt;&gt;
&lt;/project&gt;
With the work of bug 44343 the error messaging for the Ant editor should be 
greatly improved.

Another test case that is not currently reported (missing the closing paren 
for the property):

&lt;echo message="${Myclass.present"&gt;&lt;/echo&gt;
Fixed with the work of 44343 and some more beefing up of the ProjectHelper and 
AntModel.

Note that only top level tasks (not in targets) are fully resolved and fully 
report syntax errors. That is the echo task will not report the property 
problem if it is enclosed in a target. I have previously logged bug 50302 so 
that user has a choice to fully error check the buildfile.
Please verify Jared.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40502" />
    <CreationDate amount="2003-07-18 15:43:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="2.1.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Provide an extension to set ant property values</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="ifstatement">
        <location start="3379" end="3690" />
        <code>if ("eclipse.home".equals(propertyName)) { //$NON-NLS-1$
    try {
	value = Platform.resolve(new URL("platform:/base/")).getPath(); //$NON-
NLS-1$
	    if (value.endsWith("/")) { //$NON-NLS-1$
		value = value.substring(0, value.length() - 1);
        }
    } catch (Exception e) {
	AntCorePlugin.log(e);
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Plugins may find it useful to be able to dynamically provide values for ant 
properties.

The org.junit plugin, for example, may want to set the ant 
variable "junit.home" to its own plugin directory, so that an ant script could 
reference the jar with ${junit.home}/junit.jar.

The attached patch based upon the 2.1.1 distribution provides a plugin 
extension that allows definition of ant properties either statically by 
providing a value in the plugin.xml or dynamically by referencing a provider 
class in plugin.xml.
Created attachment 5513
Patch as described
Thanks for the patch.
I will take a look at this today.
Thierry, I am about to release your contribution.
I have to modify the copyrights to match the Eclipse Project charter.
Do you wish to be the original contributor or your company?
Do you mind your email address showing up in the source code?

Other changes:
the extension properties are loaded via the AntCorePreferences like the other 
extension points. 
the properties show up in the Ant properties preference page (cannot be edited)
added the "headless" attribute to the extension
I have released the code with unit tests.
Thierry currently has credit and copyright for his contributions. We can 
modify if required.

eclipse.running and eclipse.home are set using the new extension point from 
org.eclipse.ant.core.

Changes to AntCorePreferences, Property, AntCorePlugin, plugin.xml, 
plugin.properties, and the schema file for the extension point.


Please verify DarinW.
In head or in a branch?
Found in head.

I suggest that rather than incorporating "eclipse.running" into the class,
you change plugin.xml to read:

       &lt;antProperty
            name="eclipse.running"
            value="true"&gt;
      &lt;/antProperty&gt;

This would provide an practical example of both usages.

It appears that by incorporating the call to IAntPropertyValueProvider within 
the Property itself, you are allowing the possibility of the value changing 
from one value reference to the next. If so, that would be providing plugins a 
capability (of redefining property values) that Ant goes out of its way to 
deny.  Since the IAntPropertyValueProvider implementation is not required to 
return the identical value between calls, and especially if the value is not 
hardcoded but retrieved from some external source such as ldap, this could 
provide an extreme "opportunity" for someone attempting to debug an ant 
script.  (An opportunity to go prematurely bald ;-)
Verified. I found both usages - specifying the property name &amp; value in the XML 
and via code are covered.
Sorry - I was not referring to documentation.  I suggest changing the last 
portion of org.eclipse.ant.core/plugin.xml to read

&lt;!-- Extra Classpath --&gt;
   &lt;extension
         point="org.eclipse.ant.core.extraClasspathEntries"&gt;
      &lt;extraClasspathEntry
            library="lib/antsupportlib.jar"&gt;
      &lt;/extraClasspathEntry&gt;
   &lt;/extension&gt;
    &lt;extension
      	 point="org.eclipse.ant.core.antProperties"&gt;
      &lt;antProperty
            name="eclipse.home"
            class="org.eclipse.ant.internal.core.AntPropertyValueProvider"&gt;
      &lt;/antProperty&gt;
       &lt;antProperty
            name="eclipse.running"
            value="true"&gt;
      &lt;/antProperty&gt;
    &lt;/extension&gt;

&lt;/plugin&gt;


and changing 
org.eclipse.ant.core/src/org/eclipse/ant/internal/core/AntPropertyValueProvider.
java to

if ("eclipse.home".equals(propertyName)) { //$NON-NLS-1$
    try {
	value = Platform.resolve(new URL("platform:/base/")).getPath(); //$NON-
NLS-1$
	    if (value.endsWith("/")) { //$NON-NLS-1$
		value = value.substring(0, value.length() - 1);
        }
    } catch (Exception e) {
	AntCorePlugin.log(e);
    }
}

as this provides a practical demonstration of both mechanisms.

Is there a reason that you want to set "eclipse.running" through code?


Adding Darin(S) as CC to see last comment.
The values provided from the IAntPropertyValueProvider are set at the start of 
each Ant build. Therefore for any given Ant build the properties cannot be 
redefined. The org.eclipse.ant.core.Property is only dereferenced once for any 
given build.  See InternalAntRunner.setProperties(Project).

Between builds the property values can change and likely plugins will want to 
exploit this.
Oh I see - Property is placed into defaultProperties, and is not required to be 
static, but at the point that defaultProperties is applied to the ant 
properties, it is not the Property that goes into the ant environment, but the 
Property.getValue() at that point in time, and ant itself does not refer to 
Property.getValue() but its snapshot.  Correct?  
Correct.</WithStack>
    <WithOutStack>Plugins may find it useful to be able to dynamically provide values for ant 
properties.

The org.junit plugin, for example, may want to set the ant 
variable "junit.home" to its own plugin directory, so that an ant script could 
reference the jar with ${junit.home}/junit.jar.

The attached patch based upon the 2.1.1 distribution provides a plugin 
extension that allows definition of ant properties either statically by 
providing a value in the plugin.xml or dynamically by referencing a provider 
class in plugin.xml.
Created attachment 5513
Patch as described
Thanks for the patch.
I will take a look at this today.
Thierry, I am about to release your contribution.
I have to modify the copyrights to match the Eclipse Project charter.
Do you wish to be the original contributor or your company?
Do you mind your email address showing up in the source code?

Other changes:
the extension properties are loaded via the AntCorePreferences like the other 
extension points. 
the properties show up in the Ant properties preference page (cannot be edited)
added the "headless" attribute to the extension
I have released the code with unit tests.
Thierry currently has credit and copyright for his contributions. We can 
modify if required.

eclipse.running and eclipse.home are set using the new extension point from 
org.eclipse.ant.core.

Changes to AntCorePreferences, Property, AntCorePlugin, plugin.xml, 
plugin.properties, and the schema file for the extension point.


Please verify DarinW.
In head or in a branch?
Found in head.

I suggest that rather than incorporating "eclipse.running" into the class,
you change plugin.xml to read:

       &lt;antProperty
            name="eclipse.running"
            value="true"&gt;
      &lt;/antProperty&gt;

This would provide an practical example of both usages.

It appears that by incorporating the call to IAntPropertyValueProvider within 
the Property itself, you are allowing the possibility of the value changing 
from one value reference to the next. If so, that would be providing plugins a 
capability (of redefining property values) that Ant goes out of its way to 
deny.  Since the IAntPropertyValueProvider implementation is not required to 
return the identical value between calls, and especially if the value is not 
hardcoded but retrieved from some external source such as ldap, this could 
provide an extreme "opportunity" for someone attempting to debug an ant 
script.  (An opportunity to go prematurely bald ;-)
Verified. I found both usages - specifying the property name &amp; value in the XML 
and via code are covered.
Sorry - I was not referring to documentation.  I suggest changing the last 
portion of org.eclipse.ant.core/plugin.xml to read

&lt;!-- Extra Classpath --&gt;
   &lt;extension
         point="org.eclipse.ant.core.extraClasspathEntries"&gt;
      &lt;extraClasspathEntry
            library="lib/antsupportlib.jar"&gt;
      &lt;/extraClasspathEntry&gt;
   &lt;/extension&gt;
    &lt;extension
      	 point="org.eclipse.ant.core.antProperties"&gt;
      &lt;antProperty
            name="eclipse.home"
            class="org.eclipse.ant.internal.core.AntPropertyValueProvider"&gt;
      &lt;/antProperty&gt;
       &lt;antProperty
            name="eclipse.running"
            value="true"&gt;
      &lt;/antProperty&gt;
    &lt;/extension&gt;

&lt;/plugin&gt;


and changing 
org.eclipse.ant.core/src/org/eclipse/ant/internal/core/AntPropertyValueProvider.
java to

if ("eclipse.home".equals(propertyName)) { //$NON-NLS-1$
    try {
	value = Platform.resolve(new URL("platform:/base/")).getPath(); //$NON-
NLS-1$
	    if (value.endsWith("/")) { //$NON-NLS-1$
		value = value.substring(0, value.length() - 1);
        }
    } catch (Exception e) {
	AntCorePlugin.log(e);
    }
}

as this provides a practical demonstration of both mechanisms.

Is there a reason that you want to set "eclipse.running" through code?


Adding Darin(S) as CC to see last comment.
The values provided from the IAntPropertyValueProvider are set at the start of 
each Ant build. Therefore for any given Ant build the properties cannot be 
redefined. The org.eclipse.ant.core.Property is only dereferenced once for any 
given build.  See InternalAntRunner.setProperties(Project).

Between builds the property values can change and likely plugins will want to 
exploit this.
Oh I see - Property is placed into defaultProperties, and is not required to be 
static, but at the point that defaultProperties is applied to the ant 
properties, it is not the Property that goes into the ant environment, but the 
Property.getValue() at that point in time, and ant itself does not refer to 
Property.getValue() but its snapshot.  Correct?  
Correct.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40503" />
    <CreationDate amount="2003-07-18 16:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="minor" />
    <Summery>[navigation] Filtering in outline prompter only works when focus is in text field</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>- was editing a CU (EditorWorkbook)</Line>
          <Line>- wanted to navigate to the createControl method</Line>
          <Line>- ctrl+O</Line>
          <Line>- down arrowed a few times to see if it was close by in the list</Line>
          <Line>- no, so typed "cr"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>build I20030717

- was editing a CU (EditorWorkbook)
- wanted to navigate to the createControl method
- ctrl+O
- down arrowed a few times to see if it was close by in the list
- no, so typed "cr"

It jumped me to the createControl method, but using the default Windows 
behaviour, not filering.  This was a little disorienting.

I think typing in the outline prompter should always filter, independent of 
focus.
I see this as a minor usability problem.
This is standard behavior in all Eclipse dialogs where there's a text field
above some tree or table widget (e.g. New wizards, Open Type,...). Would you
suggest that all those dialogs should immediately switch back to the text field
when text is typed?
I think it's less confusing in a traditional dialog, where the different 
controls are more strongly delineated.  In the outline prompter, it feels like 
it's one control.  But again, this is a minor gripe.

The thing is that there are users (count myself in) that use the native
navigation in widget e.g. if I type a letter it jumps to the first occurrence in
the widget. This would clearly be broken.

Feel free to close then.  I thought the behaviour was strange at the time, but 
I don't feel that strongly about it.

I'll leave it open and see if others might feel the same about the dialog as you do.

keeping as reminder
Reopening to dispose.
This is not considered a bug.</WithStack>
    <WithOutStack>build I20030717

- was editing a CU (EditorWorkbook)
- wanted to navigate to the createControl method
- ctrl+O
- down arrowed a few times to see if it was close by in the list
- no, so typed "cr"

It jumped me to the createControl method, but using the default Windows 
behaviour, not filering.  This was a little disorienting.

I think typing in the outline prompter should always filter, independent of 
focus.
I see this as a minor usability problem.
This is standard behavior in all Eclipse dialogs where there's a text field
above some tree or table widget (e.g. New wizards, Open Type,...). Would you
suggest that all those dialogs should immediately switch back to the text field
when text is typed?
I think it's less confusing in a traditional dialog, where the different 
controls are more strongly delineated.  In the outline prompter, it feels like 
it's one control.  But again, this is a minor gripe.

The thing is that there are users (count myself in) that use the native
navigation in widget e.g. if I type a letter it jumps to the first occurrence in
the widget. This would clearly be broken.

Feel free to close then.  I thought the behaviour was strange at the time, but 
I don't feel that strongly about it.

I'll leave it open and see if others might feel the same about the dialog as you do.

keeping as reminder
Reopening to dispose.
This is not considered a bug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40504" />
    <CreationDate amount="2003-07-18 16:26:00 -0400" />
    <DupId amount="26873" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ctrl+Click requires mouse movement first</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- in the editor, move the mouse pointer over a type or method reference</Line>
          <Line>- decide that you want to navigate to its declaration</Line>
          <Line>- without moving the mouse, Ctrl+Click</Line>
          <Line>- it has no effect</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>build I20030717

I thought I had reported this already, but can't find the PR.
Still a problem in I20030717.

- in the editor, move the mouse pointer over a type or method reference
- decide that you want to navigate to its declaration
- without moving the mouse, Ctrl+Click
- it has no effect

If you move the mouse after holding down Ctrl, the link appears and you can 
click on it.

I hit this quite frequently.  It feels unnatural to have to move the mouse 
again to show the link.  It should appear as soon as I hold down Ctrl if the 
pointer is already over where a link would appear.
&gt;I thought I had reported this already,...
correct :-)


*** This bug has been marked as a duplicate of 26873 ***</WithStack>
    <WithOutStack>build I20030717

I thought I had reported this already, but can't find the PR.
Still a problem in I20030717.

- in the editor, move the mouse pointer over a type or method reference
- decide that you want to navigate to its declaration
- without moving the mouse, Ctrl+Click
- it has no effect

If you move the mouse after holding down Ctrl, the link appears and you can 
click on it.

I hit this quite frequently.  It feels unnatural to have to move the mouse 
again to show the link.  It should appear as soon as I hold down Ctrl if the 
pointer is already over where a link would appear.
&gt;I thought I had reported this already,...
correct :-)


*** This bug has been marked as a duplicate of 26873 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40505" />
    <CreationDate amount="2003-07-18 16:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="EMF" />
    <component amount="Core" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>org.eclipse.emf.ecore.xmi throws exception for xmi:Extension and elements from other namespaces</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437340804083">
        <Exception>org.eclipse.emf.ecore.xmi.FeatureNotFoundException</Exception>
        <Reason>Feature 'Extension' not 
found. (platform:/resource/WorkflowInstanceTest/My1.workflow, 4, 19)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature(XMLHandler.java:692)</Frame>
          <Frame depth="1">org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement(XMLHandler.java:356)</Frame>
          <Frame depth="2">org.eclipse.emf.ecore.xmi.impl.XMIHandler.processElement(XMIHandler.java:62)</Frame>
          <Frame depth="3">org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement(XMLHandler.java:339)</Frame>
          <Frame depth="4">org.eclipse.emf.ecore.xmi.impl.SAXWrapper.startElement(SAXWrapper.java:71)</Frame>
          <Frame depth="5">org.apache.xerces.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:446)</Frame>
          <Frame depth="6">org.apache.xerces.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:216)</Frame>
          <Frame depth="7">org.apache.xerces.impl.XMLNamespaceBinder.emptyElement(XMLNamespaceBinder.java:594)</Frame>
          <Frame depth="8">org.apache.xerces.impl.dtd.XMLDTDValidator.emptyElement(XMLDTDValidator.java:830)</Frame>
          <Frame depth="9">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:748)</Frame>
          <Frame depth="10">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1456)</Frame>
          <Frame depth="11">org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:333)</Frame>
          <Frame depth="12">org.apache.xerces.parsers.StandardParserConfiguration.parse(StandardParserConfiguration.java:525)</Frame>
          <Frame depth="13">org.apache.xerces.parsers.StandardParserConfiguration.parse(StandardParserConfiguration.java:581)</Frame>
          <Frame depth="14">org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:147)</Frame>
          <Frame depth="15">org.apache.xerces.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1158)</Frame>
          <Frame depth="16">javax.xml.parsers.SAXParser.parse(SAXParser.java:394)</Frame>
          <Frame depth="17">org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(XMLLoadImpl.java:76)</Frame>
          <Frame depth="18">org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad(XMLResourceImpl.java:135)</Frame>
          <Frame depth="19">org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:881)</Frame>
          <Frame depth="20">org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:755)</Frame>
          <Frame depth="21">org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:220)</Frame>
          <Frame depth="22">org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:286)</Frame>
          <Frame depth="23">org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain.loadResource(AdapterFactoryEditingDomain.java:284)</Frame>
          <Frame depth="24">com.ibm.itso.sal330r.workflow.presentation.WorkflowEditor.createPages(WorkflowEditor.java:702)</Frame>
          <Frame depth="25">org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:166)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.PartPane$4.run(PartPane.java:141)</Frame>
          <Frame depth="27">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1006)</Frame>
          <Frame depth="28">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:137)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.EditorManager$7.run(EditorManager.java:921)</Frame>
          <Frame depth="31">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1006)</Frame>
          <Frame depth="32">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:864)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.EditorManager$6.run(EditorManager.java:857)</Frame>
          <Frame depth="35">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="36">org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:853)</Frame>
          <Frame depth="37">org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:1266)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.EditorManager.findEditor(EditorManager.java:257)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2006)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:2004)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:1991)</Frame>
          <Frame depth="42">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1986)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1879)</Frame>
          <Frame depth="45">org.eclipse.ui.actions.OpenWithMenu.openEditor(OpenWithMenu.java:237)</Frame>
          <Frame depth="46">org.eclipse.ui.actions.OpenWithMenu.access$0(OpenWithMenu.java:231)</Frame>
          <Frame depth="47">org.eclipse.ui.actions.OpenWithMenu$2.handleEvent(OpenWithMenu.java:155)</Frame>
          <Frame depth="48">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="52">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="53">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="54">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="55">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="56">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="57">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="58">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="59">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437340804083">
        <Exception>org.eclipse.emf.common.util.WrappedException</Exception>
        <Reason>Feature 'Extension' not found. 
(platform:/resource/WorkflowInstanceTest/My1.workflow, 4, 19)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:290)</Frame>
          <Frame depth="1">org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain.loadResource(AdapterFactoryEditingDomain.java:284)</Frame>
          <Frame depth="2">com.ibm.itso.sal330r.workflow.presentation.WorkflowEditor.createPages(WorkflowEditor.java:702)</Frame>
          <Frame depth="3">org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:166)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PartPane$4.run(PartPane.java:141)</Frame>
          <Frame depth="5">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1006)</Frame>
          <Frame depth="6">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.PartPane.createChildControl(PartPane.java:137)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.EditorManager$7.run(EditorManager.java:921)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1006)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:864)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.EditorManager$6.run(EditorManager.java:857)</Frame>
          <Frame depth="13">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:853)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.EditorManager$Editor.getEditor(EditorManager.java:1266)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.EditorManager.findEditor(EditorManager.java:257)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2006)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:2004)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:1991)</Frame>
          <Frame depth="20">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1986)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1879)</Frame>
          <Frame depth="23">org.eclipse.ui.actions.OpenWithMenu.openEditor(OpenWithMenu.java:237)</Frame>
          <Frame depth="24">org.eclipse.ui.actions.OpenWithMenu.access$0(OpenWithMenu.java:231)</Frame>
          <Frame depth="25">org.eclipse.ui.actions.OpenWithMenu$2.handleEvent(OpenWithMenu.java:155)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="32">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="33">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="34">java.lang.reflect.Method.invoke(Native Method)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When trying to open an XMI model instance to which I have added an 
xmi:Extension element, with an editor plugin generated by 
org.eclipse.emf.codegen.ecore_1.1.0, a FeatureNotFoundException is thrown. The 
same exception is thrown if the XMI contains any XML elements from a different 
XML namespace, that is, it the XMLHandler from org.eclipse.emf.ecore.xmi_1.1.0 
does not seem to be namespace aware. Such elements should be ignored rather 
than cause exceptions to be thrown.

An example stack trace is as follows:

Wrapped exception
org.eclipse.emf.ecore.xmi.FeatureNotFoundException: Feature 'Extension' not 
found. (platform:/resource/WorkflowInstanceTest/My1.workflow, 4, 19)
	at org.eclipse.emf.ecore.xmi.impl.XMLHandler.handleFeature
(XMLHandler.java:692)
	at org.eclipse.emf.ecore.xmi.impl.XMLHandler.processElement
(XMLHandler.java:356)
	at org.eclipse.emf.ecore.xmi.impl.XMIHandler.processElement
(XMIHandler.java:62)
	at org.eclipse.emf.ecore.xmi.impl.XMLHandler.startElement
(XMLHandler.java:339)
	at org.eclipse.emf.ecore.xmi.impl.SAXWrapper.startElement
(SAXWrapper.java:71)
	at org.apache.xerces.parsers.AbstractSAXParser.startElement
(AbstractSAXParser.java:446)
	at org.apache.xerces.parsers.AbstractXMLDocumentParser.emptyElement
(AbstractXMLDocumentParser.java:216)
	at org.apache.xerces.impl.XMLNamespaceBinder.emptyElement
(XMLNamespaceBinder.java:594)
	at org.apache.xerces.impl.dtd.XMLDTDValidator.emptyElement
(XMLDTDValidator.java:830)
	at 
org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement
(XMLDocumentFragmentScannerImpl.java:748)
	at 
org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.
dispatch(XMLDocumentFragmentScannerImpl.java:1456)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument
(XMLDocumentFragmentScannerImpl.java:333)
	at org.apache.xerces.parsers.StandardParserConfiguration.parse
(StandardParserConfiguration.java:525)
	at org.apache.xerces.parsers.StandardParserConfiguration.parse
(StandardParserConfiguration.java:581)
	at org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:147)
	at org.apache.xerces.parsers.AbstractSAXParser.parse
(AbstractSAXParser.java:1158)
	at javax.xml.parsers.SAXParser.parse(SAXParser.java:394)
	at org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(XMLLoadImpl.java:76)
	at org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad
(XMLResourceImpl.java:135)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load
(ResourceImpl.java:881)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load
(ResourceImpl.java:755)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad
(ResourceSetImpl.java:220)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource
(ResourceSetImpl.java:286)
	at org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain.loadResource
(AdapterFactoryEditingDomain.java:284)
	at com.ibm.itso.sal330r.workflow.presentation.WorkflowEditor.createPages
(WorkflowEditor.java:702)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl
(MultiPageEditorPart.java:166)
	at org.eclipse.ui.internal.PartPane$4.run(PartPane.java:141)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1006)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.ui.internal.PartPane.createChildControl
(PartPane.java:137)
	at org.eclipse.ui.internal.EditorManager$7.run(EditorManager.java:921)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1006)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor
(EditorManager.java:864)
	at org.eclipse.ui.internal.EditorManager$6.run(EditorManager.java:857)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor
(EditorManager.java:853)
	at org.eclipse.ui.internal.EditorManager$Editor.getEditor
(EditorManager.java:1266)
	at org.eclipse.ui.internal.EditorManager.findEditor
(EditorManager.java:257)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor
(WorkbenchPage.java:2006)
	at org.eclipse.ui.internal.WorkbenchPage.access$6
(WorkbenchPage.java:2004)
	at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:1991)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1986)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1879)
	at org.eclipse.ui.actions.OpenWithMenu.openEditor(OpenWithMenu.java:237)
	at org.eclipse.ui.actions.OpenWithMenu.access$0(OpenWithMenu.java:231)
	at org.eclipse.ui.actions.OpenWithMenu$2.handleEvent
(OpenWithMenu.java:155)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Wrapped by
org.eclipse.emf.common.util.WrappedException: Feature 'Extension' not found. 
(platform:/resource/WorkflowInstanceTest/My1.workflow, 4, 19)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource
(ResourceSetImpl.java:290)
	at org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain.loadResource
(AdapterFactoryEditingDomain.java:284)
	at com.ibm.itso.sal330r.workflow.presentation.WorkflowEditor.createPages
(WorkflowEditor.java:702)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl
(MultiPageEditorPart.java:166)
	at org.eclipse.ui.internal.PartPane$4.run(PartPane.java:141)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1006)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.ui.internal.PartPane.createChildControl
(PartPane.java:137)
	at org.eclipse.ui.internal.EditorManager$7.run(EditorManager.java:921)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1006)
	at org.eclipse.core.runtime.Platform.run(Platform.java:413)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor
(EditorManager.java:864)
	at org.eclipse.ui.internal.EditorManager$6.run(EditorManager.java:857)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.EditorManager.restoreEditor
(EditorManager.java:853)
	at org.eclipse.ui.internal.EditorManager$Editor.getEditor
(EditorManager.java:1266)
	at org.eclipse.ui.internal.EditorManager.findEditor
(EditorManager.java:257)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor
(WorkbenchPage.java:2006)
	at org.eclipse.ui.internal.WorkbenchPage.access$6
(WorkbenchPage.java:2004)
	at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:1991)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1986)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor
(WorkbenchPage.java:1879)
	at org.eclipse.ui.actions.OpenWithMenu.openEditor(OpenWithMenu.java:237)
	at org.eclipse.ui.actions.OpenWithMenu.access$0(OpenWithMenu.java:231)
	at org.eclipse.ui.actions.OpenWithMenu$2.handleEvent
(OpenWithMenu.java:155)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Changes to record extenions in XMLResource.getEObjectToExtensionMap have been 
commited to CVS.  They will be written back out again too.
The fix is available in the I200404281648 build.
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>When trying to open an XMI model instance to which I have added an 
xmi:Extension element, with an editor plugin generated by 
org.eclipse.emf.codegen.ecore_1.1.0, a FeatureNotFoundException is thrown. The 
same exception is thrown if the XMI contains any XML elements from a different 
XML namespace, that is, it the XMLHandler from org.eclipse.emf.ecore.xmi_1.1.0 
does not seem to be namespace aware. Such elements should be ignored rather 
than cause exceptions to be thrown.

An example stack trace is as follows:

Wrapped exception
Wrapped by

Changes to record extenions in XMLResource.getEObjectToExtensionMap have been 
commited to CVS.  They will be written back out again too.
The fix is available in the I200404281648 build.
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40506" />
    <CreationDate amount="2003-07-18 16:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[typing] Incorrect indentation when entering newline</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>given:
if (e.vNodes != null)
	for (int j = 0; j &lt; e.vNodes.size(); j++)
		g.nodes.remove(e.vNodes.getNode(j));&lt;&lt;CARET&gt;&gt;

Press the ENTER key where the CARET appears.  The caret should be indented so 
that it lines up with the IF statement.  Using Eclipse 2.1.0, the caret is 
indented until it is level with the last line ("g.nodes...").
fixed &gt; 20030915</WithStack>
    <WithOutStack>given:
if (e.vNodes != null)
	for (int j = 0; j &lt; e.vNodes.size(); j++)
		g.nodes.remove(e.vNodes.getNode(j));&lt;&lt;CARET&gt;&gt;

Press the ENTER key where the CARET appears.  The caret should be indented so 
that it lines up with the IF statement.  Using Eclipse 2.1.0, the caret is 
indented until it is level with the last line ("g.nodes...").
fixed &gt; 20030915</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40507" />
    <CreationDate amount="2003-07-18 17:04:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Hit count property verification is broken (can't set hit count)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Bring up the breakpoint property dialog on a breakpoint.</Line>
          <Line>2. Enable hit count.</Line>
          <Line>3. Delete the '1' and enter '2'.</Line>
          <Line>4. The dialog invalidates itself and states that the hit count must be a positive integer.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build 20030717 (build 2)

1. Bring up the breakpoint property dialog on a breakpoint.
2. Enable hit count.
3. Delete the '1' and enter '2'.
4. The dialog invalidates itself and states that the hit count must be a positive integer.

The validation is extremely flaky. By playing around, you can get it to say that valid states are 
invalid and that invalid states are valid.
I'm almost finished with Bug 10900. This problem doesn't exist in the new dialog.</WithStack>
    <WithOutStack>Build 20030717 (build 2)

1. Bring up the breakpoint property dialog on a breakpoint.
2. Enable hit count.
3. Delete the '1' and enter '2'.
4. The dialog invalidates itself and states that the hit count must be a positive integer.

The validation is extremely flaky. By playing around, you can get it to say that valid states are 
invalid and that invalid states are valid.
I'm almost finished with Bug 10900. This problem doesn't exist in the new dialog.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40508" />
    <CreationDate amount="2003-07-18 17:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Text editor scrolls sideways very slowly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. Open an editor. The text editor displays the problem too, but the Java editor seems even slower.</Line>
          <Line>2. Create a String and start typing in it. Just hold down a single key or paste some text to fill the line</Line>
          <Line>and then when the line starts scrolling to the right, start typing individual characters very quickly.</Line>
          <Line>3. Stop typing.</Line>
          <Line>4. If you typed fast enough (my normal typing speed qualifies), the editor should be far behind your</Line>
          <Line>typing by now and it will take a while to catch up.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build 20030717
Linux-GTK

1. Open an editor. The text editor displays the problem too, but the Java editor seems even slower.
2. Create a String and start typing in it. Just hold down a single key or paste some text to fill the line 
and then when the line starts scrolling to the right, start typing individual characters very quickly.
3. Stop typing.
4. If you typed fast enough (my normal typing speed qualifies), the editor should be far behind your 
typing by now and it will take a while to catch up.

It's easiest to reproduce this problem when typing a bunch of garbage, but I was easily out-typing 
the Java editor doing regular work.
do you still see this? we added code that should improve this
Performing the same test case on I20050512-1200, this problem doesn't seem to
exist anymore. Marking as WORKSFORME.</WithStack>
    <WithOutStack>Build 20030717
Linux-GTK

1. Open an editor. The text editor displays the problem too, but the Java editor seems even slower.
2. Create a String and start typing in it. Just hold down a single key or paste some text to fill the line 
and then when the line starts scrolling to the right, start typing individual characters very quickly.
3. Stop typing.
4. If you typed fast enough (my normal typing speed qualifies), the editor should be far behind your 
typing by now and it will take a while to catch up.

It's easiest to reproduce this problem when typing a bunch of garbage, but I was easily out-typing 
the Java editor doing regular work.
do you still see this? we added code that should improve this
Performing the same test case on I20050512-1200, this problem doesn't seem to
exist anymore. Marking as WORKSFORME.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40509" />
    <CreationDate amount="2003-07-18 18:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="EMF" />
    <component amount="Core" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CVS head does not compile within eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>There are a number of missing dependencies in the plugin.xml and .classpath - 
most can be resolved by adding exported="true" to the existing .classpath 
entries.  Also, org.eclipse.core.boot should be added to the dependencies and 
classpath of org.eclipse.emf.codegen.
I think things should be in better shape now and we will be actively working to 
move our development to the Eclipse CVS.  We will use the new dynamic classpath 
containers for CLASSPATH configuration.  The plugin.xml requirements are correct 
as they stand today.</WithStack>
    <WithOutStack>There are a number of missing dependencies in the plugin.xml and .classpath - 
most can be resolved by adding exported="true" to the existing .classpath 
entries.  Also, org.eclipse.core.boot should be added to the dependencies and 
classpath of org.eclipse.emf.codegen.
I think things should be in better shape now and we will be actively working to 
move our development to the Eclipse CVS.  We will use the new dynamic classpath 
containers for CLASSPATH configuration.  The plugin.xml requirements are correct 
as they stand today.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40510" />
    <CreationDate amount="2003-07-18 19:44:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JDIArrayPartitionValue contains unnecessary methods</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>org.eclipse.jdt.internal.debug.core.model.JDIArrayPartitionValue contains
unused, unimplemented, unrequested methods. does it need to implement an other
interface or is it just a bad copy/paste ?

the methods are :
evaluateToString(IJavaThread)
getArrayLength()
getValueString(boolean)
sendMessage(String, String, IJavaValue[], IJavaThread, boolean)
Sounds like leftovers that can be removed.
Fixed.
Please verify, Darin W.
Verified.</WithStack>
    <WithOutStack>org.eclipse.jdt.internal.debug.core.model.JDIArrayPartitionValue contains
unused, unimplemented, unrequested methods. does it need to implement an other
interface or is it just a bad copy/paste ?

the methods are :
evaluateToString(IJavaThread)
getArrayLength()
getValueString(boolean)
sendMessage(String, String, IJavaValue[], IJavaThread, boolean)
Sounds like leftovers that can be removed.
Fixed.
Please verify, Darin W.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40511" />
    <CreationDate amount="2003-07-18 19:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[content assist] Widget is disposed from AbstractInformationControlManager</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340804083">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Widget is disposed</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2365)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2295)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:375)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:312)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Widget.addDisposeListener(Widget.java:209)</Frame>
          <Frame depth="5">org.eclipse.jface.text.AbstractInformationControlManager.install(AbstractInformationControlManager.java:347)</Frame>
          <Frame depth="6">org.eclipse.jface.text.contentassist.AdditionalInfoController.install(AdditionalInfoController.java:96)</Frame>
          <Frame depth="7">org.eclipse.jface.text.contentassist.CompletionProposalPopup.displayProposals(CompletionProposalPopup.java:502)</Frame>
          <Frame depth="8">org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$15(CompletionProposalPopup.java:481)</Frame>
          <Frame depth="9">org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:173)</Frame>
          <Frame depth="10">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="11">org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:148)</Frame>
          <Frame depth="12">org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAssistant.java:297)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1810)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1626)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)</Frame>
          <Frame depth="19">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="20">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="21">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="22">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="23">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="24">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="25">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="26">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="27">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build 20030717 (build 2)
Linux-GTK

After working on this build all day, I noticed the following stack traced dumped to the OS console 
that I launched Eclipse from:

org.eclipse.swt.SWTException: Widget is disposed
	at org.eclipse.swt.SWT.error(SWT.java:2365)
	at org.eclipse.swt.SWT.error(SWT.java:2295)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:375)
	at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:312)
	at org.eclipse.swt.widgets.Widget.addDisposeListener(Widget.java:209)
	at org.eclipse.jface.text.AbstractInformationControlManager.
install(AbstractInformationControlManager.java:347)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController.install
(AdditionalInfoController.java:96)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.displayP
roposals(CompletionProposalPopup.java:502)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$1
5(CompletionProposalPopup.java:481)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(Co
mpletionProposalPopup.java:173)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
	at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProp
osals(CompletionProposalPopup.java:148)
	at org.eclipse.jface.text.contentassist.ContentAssistant$2.run(ContentAs
sistant.java:297)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.ja
va:102)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1810)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1626)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoa
der.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Unhandled exception caught in event loop.
Reason:
Widget is disposed
The code in this area has changed. Please reopen if you see this again using
R3.1 or newer.</WithStack>
    <WithOutStack>Build 20030717 (build 2)
Linux-GTK

After working on this build all day, I noticed the following stack traced dumped to the OS console 
that I launched Eclipse from:


Unhandled exception caught in event loop.
Reason:
Widget is disposed
The code in this area has changed. Please reopen if you see this again using
R3.1 or newer.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40512" />
    <CreationDate amount="2003-07-18 19:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>MultiStatus constructor is slow.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="10">
      <source_code type="functioncall">
        <location start="142" end="183" />
        <code>this(pluginId, code, message, exception);</code>
      </source_code>
      <source_code type="assignment">
        <location start="184" end="217" />
        <code>Assert.isLegal(children != null);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="218" end="318" />
        <code>for (int i = 0; i &lt; children.length; i++) {
Assert.isLegal(children[i] != null);
add(children[i]);
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1084" end="1125" />
        <code>this(pluginId, code, message, exception);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1126" end="1159" />
        <code>Assert.isLegal(children != null);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1160" end="1242" />
        <code>for (int i = 0; i &lt; children.length; i++) {
Assert.isLegal(children[i] != null);
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="1243" end="1288" />
        <code>this.children = new IStatus[children.length];</code>
      </source_code>
      <source_code type="assignment">
        <location start="1289" end="1314" />
        <code>this.children = children;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1315" end="1379" />
        <code>System.arrayCopy(children, 0 this.children, 0, children.length);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1380" end="1513" />
        <code>for (int i = 0; i &lt; children.length; i++) {
int newSev = status.getSeverity();
if (newSev &gt; getSeverity()) {
setSeverity(newSev);
}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Below is MultiStatus constructor:
 
public MultiStatus(String pluginId, int code, IStatus[] children, String 
message, Throwable exception) {
this(pluginId, code, message, exception);
Assert.isLegal(children != null);
for (int i = 0; i &lt; children.length; i++) {
Assert.isLegal(children[i] != null);
add(children[i]);
}
}
 
As one can see method  "add(IStatus status)" do the following - it uses "System.
arraycopy" to increase object's current array  of 
substatuses size by one, then adds new status to the end of the enlarged array. 
By mistake, I've wrote a code that creates a MultiStatus 
object with a lot number of IStatus objects passed into constructor (~10000 
objects). MultiStatus constructor above took a lot of time 
to construct an object... Though I've managed to discover this problem making a 
mistake in my code (actaully I had no need to create 
such a huge MultiStatus), but it seems that constructor could be safely 
rewritten to be more efficent, like:
 
public MultiStatus(String pluginId, int code, IStatus[] children, String 
message, Throwable exception) {
this(pluginId, code, message, exception);
Assert.isLegal(children != null);
for (int i = 0; i &lt; children.length; i++) {
Assert.isLegal(children[i] != null);
}
this.children = new IStatus[children.length];
this.children = children;
System.arrayCopy(children, 0 this.children, 0, children.length);
for (int i = 0; i &lt; children.length; i++) {
int newSev = status.getSeverity();
if (newSev &gt; getSeverity()) {
setSeverity(newSev);
}
}
}
Fixed and released.</WithStack>
    <WithOutStack>Below is MultiStatus constructor:
 
public MultiStatus(String pluginId, int code, IStatus[] children, String 
message, Throwable exception) {
this(pluginId, code, message, exception);
Assert.isLegal(children != null);
for (int i = 0; i &lt; children.length; i++) {
Assert.isLegal(children[i] != null);
add(children[i]);
}
}
 
As one can see method  "add(IStatus status)" do the following - it uses "System.
arraycopy" to increase object's current array  of 
substatuses size by one, then adds new status to the end of the enlarged array. 
By mistake, I've wrote a code that creates a MultiStatus 
object with a lot number of IStatus objects passed into constructor (~10000 
objects). MultiStatus constructor above took a lot of time 
to construct an object... Though I've managed to discover this problem making a 
mistake in my code (actaully I had no need to create 
such a huge MultiStatus), but it seems that constructor could be safely 
rewritten to be more efficent, like:
 
public MultiStatus(String pluginId, int code, IStatus[] children, String 
message, Throwable exception) {
this(pluginId, code, message, exception);
Assert.isLegal(children != null);
for (int i = 0; i &lt; children.length; i++) {
Assert.isLegal(children[i] != null);
}
this.children = new IStatus[children.length];
this.children = children;
System.arrayCopy(children, 0 this.children, 0, children.length);
for (int i = 0; i &lt; children.length; i++) {
int newSev = status.getSeverity();
if (newSev &gt; getSeverity()) {
setSeverity(newSev);
}
}
}
Fixed and released.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40513" />
    <CreationDate amount="2003-07-18 21:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[UI Guidelines] Need UI guidelines for descriptions of shortcuts, commands and command sets</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>R3.0 M2 build

The perspective customization dialog now can show descriptions for shortcut 
menu items, command sets and commands.  Current descriptions are poor, and 
often mention "action" or "action set", implementation terms which we should 
avoid in the UI (use "command" or "command set" instead).</WithStack>
    <WithOutStack>R3.0 M2 build

The perspective customization dialog now can show descriptions for shortcut 
menu items, command sets and commands.  Current descriptions are poor, and 
often mention "action" or "action set", implementation terms which we should 
avoid in the UI (use "command" or "command set" instead).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40514" />
    <CreationDate amount="2003-07-19 05:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ArrayIndexOutOfBoundsException during detection of unnecessary casts</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340804093">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>-2147483473</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForArgumentCasts(CastExpression.java:297)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType(BinaryExpression.java:1746)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:208)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.compiler.ast.Expression.resolve(Expression.java:433)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.ast.Block.resolve(Block.java:108)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve(IfStatement.java:261)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:361)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:140)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:351)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:846)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:887)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:270)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:533)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:328)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:198)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:171)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:51)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:192)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:115)</Frame>
          <Frame depth="19">org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:427)</Frame>
          <Frame depth="20">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="22">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:125)</Frame>
          <Frame depth="23">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:181)</Frame>
          <Frame depth="24">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:191)</Frame>
          <Frame depth="25">org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:151)</Frame>
          <Frame depth="26">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015)</Frame>
          <Frame depth="27">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="28">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:165)</Frame>
          <Frame depth="29">org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:243)</Frame>
          <Frame depth="30">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:212)</Frame>
          <Frame depth="31">org.eclipse.core.internal.resources.Workspace.build(Workspace.java:181)</Frame>
          <Frame depth="32">org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock$3.run(OptionsConfigurationBlock.java:354)</Frame>
          <Frame depth="33">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="418" end="514" />
        <code>public class X {
	public static void main(String[] args) {
		String s = "aaa" + (X)new X();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 3.0M2

Some user reported the following:

I turned some new 3.0.m2 compiler warnings and "Apply"'d and got a "Build all" 
error: 
 
Errors during build.
  -2147483473
 
What does that mean?
 
Thanks,
Gary

Here is a little more info:
 
Severity Description        Resource          In Folder            
Location            Creation Time
            Internal compiler error
java.lang.ArrayIndexOutOfBoundsException: -2147483473
            at 
org.eclipse.jdt.internal.compiler.ast.CastExpression.checkNeedForArgumentCasts
(CastExpression.java:297)
            at 
org.eclipse.jdt.internal.compiler.ast.BinaryExpression.resolveType
(BinaryExpression.java:1746)
            at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType
(MessageSend.java:208)
            at org.eclipse.jdt.internal.compiler.ast.Expression.resolve
(Expression.java:433)
            at org.eclipse.jdt.internal.compiler.ast.Block.resolve
(Block.java:108)
            at org.eclipse.jdt.internal.compiler.ast.IfStatement.resolve
(IfStatement.java:261)
            at 
org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatement
s(AbstractMethodDeclaration.java:361)
            at 
org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements
(MethodDeclaration.java:140)
            at 
org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve
(AbstractMethodDeclaration.java:351)
            at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve
(TypeDeclaration.java:846)
            at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve
(TypeDeclaration.java:887)
            at 
org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve
(CompilationUnitDeclaration.java:270)
            at org.eclipse.jdt.internal.compiler.Compiler.process
(Compiler.java:533)
            at org.eclipse.jdt.internal.compiler.Compiler.compile
(Compiler.java:328)
            at 
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile
(AbstractImageBuilder.java:198)
            at 
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile
(AbstractImageBuilder.java:171)
            at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build
(BatchImageBuilder.java:51)
            at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll
(JavaBuilder.java:192)
            at org.eclipse.jdt.internal.core.builder.JavaBuilder.build
(JavaBuilder.java:115)
            at org.eclipse.core.internal.events.BuildManager$2.run
(BuildManager.java:427)
            at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1015)
            at org.eclipse.core.runtime.Platform.run(Platform.java:420)
            at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:125)
            at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:181)
            at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:191)
            at org.eclipse.core.internal.events.BuildManager$1.run
(BuildManager.java:151)
            at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1015)
            at org.eclipse.core.runtime.Platform.run(Platform.java:420)
            at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:165)
            at org.eclipse.core.internal.events.BuildManager.basicBuildLoop
(BuildManager.java:243)
            at org.eclipse.core.internal.events.BuildManager.build
(BuildManager.java:212)
            at org.eclipse.core.internal.resources.Workspace.build
(Workspace.java:181)
            at 
org.eclipse.jdt.internal.ui.preferences.OptionsConfigurationBlock$3.run
(OptionsConfigurationBlock.java:354)
            at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
Reproduced with following test case:
public class X {
	public static void main(String[] args) {
		String s = "aaa" + (X)new X();
	}
}


Regression test added, fixed.
Fixed
*** Bug 40627 has been marked as a duplicate of this bug. ***
Verified.</WithStack>
    <WithOutStack>Build 3.0M2

Some user reported the following:

I turned some new 3.0.m2 compiler warnings and "Apply"'d and got a "Build all" 
error: 
 
Errors during build.
  -2147483473
 
What does that mean?
 
Thanks,
Gary

Here is a little more info:
 
Severity Description        Resource          In Folder            
Location            Creation Time
            Internal compiler error

Reproduced with following test case:
public class X {
	public static void main(String[] args) {
		String s = "aaa" + (X)new X();
	}
}


Regression test added, fixed.
Fixed
*** Bug 40627 has been marked as a duplicate of this bug. ***
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40515" />
    <CreationDate amount="2003-07-19 05:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Running multiple build.xml at the same time</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Consider two build files:
build file A ) has the Exec ant task which calls another process P 
build file B ) has some other task

After running build file A you have to wait for process P to exit only then 
build task A will exit.
Eclipse doesn't allow you to run build file B concurrently.
By  default Eclipse runs Ant in the same VM as the VM that started Eclipse. 
Since Ant makes use of system resources (System.err System.out, system 
properties) in a manner that precludes concurrent use, we disallow concurrent 
builds.
In the 3.0 Eclipse stream you can launch Ant in a separate VM (see the JRE tab 
of the Ant launch configuration). This should meet your needs.
With nothing further from the reporter, marking as worksforme with launching in 
separate VM in the 3.0 stream.</WithStack>
    <WithOutStack>Consider two build files:
build file A ) has the Exec ant task which calls another process P 
build file B ) has some other task

After running build file A you have to wait for process P to exit only then 
build task A will exit.
Eclipse doesn't allow you to run build file B concurrently.
By  default Eclipse runs Ant in the same VM as the VM that started Eclipse. 
Since Ant makes use of system resources (System.err System.out, system 
properties) in a manner that precludes concurrent use, we disallow concurrent 
builds.
In the 3.0 Eclipse stream you can launch Ant in a separate VM (see the JRE tab 
of the Ant launch configuration). This should meet your needs.
With nothing further from the reporter, marking as worksforme with launching in 
separate VM in the 3.0 stream.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40516" />
    <CreationDate amount="2003-07-19 13:25:00 -0400" />
    <DupId amount="3128" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Out of memory corrupts metadata</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I've had Eclipse run out of memory a few times when working with a large 
project. After I clicked ok on the error dialog, it then proceeded to try to 
save metadata, but because it was out of memory, this resulted in corruption. 
As a result, the only work around was to reinstall Eclipse, any plugins, and 
rebuild all the projects, saving any changed worked.
I would suggest that the Eclipse error handling for exiting when out of memory 
ensure that it does NOT save the workspace &amp; metadata, to avoid this kind of 
error. This may also affect JDT.


*** This bug has been marked as a duplicate of 3128 ***</WithStack>
    <WithOutStack>I've had Eclipse run out of memory a few times when working with a large 
project. After I clicked ok on the error dialog, it then proceeded to try to 
save metadata, but because it was out of memory, this resulted in corruption. 
As a result, the only work around was to reinstall Eclipse, any plugins, and 
rebuild all the projects, saving any changed worked.
I would suggest that the Eclipse error handling for exiting when out of memory 
ensure that it does NOT save the workspace &amp; metadata, to avoid this kind of 
error. This may also affect JDT.


*** This bug has been marked as a duplicate of 3128 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40517" />
    <CreationDate amount="2003-07-19 13:30:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="Core" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>use classpath variable for aspectjrt.jar</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When creating a new AspectJ project, it would be better if the classpath entry 
used the built in classpath variable ECLIPSE_HOME, i.e., add
ECLIPSE_HOME/plugins/ajde1.1.3/aspectjrt.jar rather than
c:/eclipse/plugins/ajde1.1.3/aspectjrt.jar

This will help with portability for project team use.
fixed in BSF... we needed it to build AJDT using AJDT :)</WithStack>
    <WithOutStack>When creating a new AspectJ project, it would be better if the classpath entry 
used the built in classpath variable ECLIPSE_HOME, i.e., add
ECLIPSE_HOME/plugins/ajde1.1.3/aspectjrt.jar rather than
c:/eclipse/plugins/ajde1.1.3/aspectjrt.jar

This will help with portability for project team use.
fixed in BSF... we needed it to build AJDT using AJDT :)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40518" />
    <CreationDate amount="2003-07-19 14:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Quick diff results vary after reloading</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 3.0M2

Writing a quick diff provider that uses a remote file as reference, it looks 
like the quick diff view is providing different results after reopening the 
file. Example:

Reference:
01: /**
02:   * First Line
03:   * Second Line
04:   */

If you delete the "second line" (03) then insert a line in front of "first 
line" (02), you get the following result:

01: /**
02:   *
03:   * First Line
04:   */

02 and 03 will now be highlighted as "Changed lines". If you close the file and 
reopen it, line 02 will be displayed as "Added line" and at the bottom of 03 
will be a "Delete line" indicator showing 02 and 03 as deleted content.
This is a known shortcoming of the incremental diff computation algorithm
currently used in quick diff. When a file is reloaded, the diff bar is
initialized with the correct diff (i.e. the shortest edit script from the
reference document to the actual one), which might differ from the one created
by multiple edits and the incremental diffing.

The reason for incremental diffing lies in the fact that a correct diff can only
be computed by comparing the entire documents, which is in O(n^2), where n is
the maximum number of lines in either of the documents, which cannot be done on
every key stroke.

I agree that the situation as it is now is not satisfying.
please move back (as ASSIGNED) to inbox if you don't have time for this.

fixed &gt; 20030930</WithStack>
    <WithOutStack>Eclipse 3.0M2

Writing a quick diff provider that uses a remote file as reference, it looks 
like the quick diff view is providing different results after reopening the 
file. Example:

Reference:
01: /**
02:   * First Line
03:   * Second Line
04:   */

If you delete the "second line" (03) then insert a line in front of "first 
line" (02), you get the following result:

01: /**
02:   *
03:   * First Line
04:   */

02 and 03 will now be highlighted as "Changed lines". If you close the file and 
reopen it, line 02 will be displayed as "Added line" and at the bottom of 03 
will be a "Delete line" indicator showing 02 and 03 as deleted content.
This is a known shortcoming of the incremental diff computation algorithm
currently used in quick diff. When a file is reloaded, the diff bar is
initialized with the correct diff (i.e. the shortest edit script from the
reference document to the actual one), which might differ from the one created
by multiple edits and the incremental diffing.

The reason for incremental diffing lies in the fact that a correct diff can only
be computed by comparing the entire documents, which is in O(n^2), where n is
the maximum number of lines in either of the documents, which cannot be done on
every key stroke.

I agree that the situation as it is now is not satisfying.
please move back (as ASSIGNED) to inbox if you don't have time for this.

fixed &gt; 20030930</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40519" />
    <CreationDate amount="2003-07-19 15:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>"Revert block" doesn't call validateEdit</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>3.0M2

Using QuickDiff's revert block feature doesn't issue a validateEdit call before 
changing the content of a resource.
fixed &gt; 20030922</WithStack>
    <WithOutStack>3.0M2

Using QuickDiff's revert block feature doesn't issue a validateEdit call before 
changing the content of a resource.
fixed &gt; 20030922</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40520" />
    <CreationDate amount="2003-07-19 15:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exceptions on Content Assist Completion since 1.2.0.13</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340804103">
        <Exception>java.lang.StringIndexOutOfBoundsException</Exception>
        <Reason>String index out of range: -1</Reason>
        <Frames>
          <Frame depth="0">java.lang.String.charAt(String.java:444)</Frame>
          <Frame depth="1">org.eclipse.cdt.ui.FunctionPrototypeSummary.&lt;init&gt;(FunctionPrototypeSummary.java:42)</Frame>
          <Frame depth="2">org.eclipse.cdt.internal.ui.text.CCompletionProcessor.addProjectCompletions(CCompletionProcessor.java:438)</Frame>
          <Frame depth="3">org.eclipse.cdt.internal.ui.text.CCompletionProcessor.addProposalsFromModel(CCompletionProcessor.java:399)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="25">
      <source_code type="ifstatement">
        <location start="363" end="457" />
        <code>if (kind == TagFlags.T_FUNCTION || kind == TagFlags.T_PROTOTYPE) {
    fname = fname + "()";
}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="458" end="485" />
        <code>// ----&gt; THIS ONE SEEMS OK</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="485" end="657" />
        <code>if(tags[i].getPattern() != null) {
    try {
        fproto = new FunctionPrototypeSummary(tags[i].getPattern());
    } catch(Exception ex) {
        fproto = null;
    }
}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="658" end="721" />
        <code>// ----&gt; HERE THE EXCEPTION WILL BE THROWN IN THE CONSTRUCTION</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="721" end="793" />
        <code>if(fproto == null) {
    fproto = new FunctionPrototypeSummary(fname);
}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="794" end="869" />
        <code>//System.out.println("tagmatch " + fname + " proto " + fproto + " type" +</code>
      </source_code>
      <source_code type="functioncall">
        <location start="869" end="888" />
        <code>tags[i].getKind());</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="889" end="1543" />
        <code>if (kind != TagFlags.T_MEMBER) {
    CCompletionProposal proposal;
    proposal = new CCompletionProposal(fname, 
                                       region.getOffset(), 
                                       region.getLength(),
                                       getTagImage(kind), 
                                       fproto.getPrototypeString(true),
                                       3);
    completions.add(proposal);
    //No summary information available yet
    String fargs = fproto.getArguments();
    if(fargs != null &amp;&amp; fargs.length() &gt; 0) {
        proposal.setContextInformation(new ContextInformation(fname, fargs));
    }
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="1977" end="2024" />
        <code>IndexModel model = IndexModel.getDefault();</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2025" end="2073" />
        <code>// Added for later use (kesselhaus@gmx.net)</code>
      </source_code>
      <source_code type="assignment">
        <location start="2073" end="2101" />
        <code>String protostring = "";</code>
      </source_code>
      <source_code type="assignment">
        <location start="2102" end="2172" />
        <code>ITagEntry[] tags = model.query(project, frag + "*", false, false);</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="2173" end="4515" />
        <code>if (tags != null &amp;&amp; tags.length &gt; 0) {
        for (int i = 0; i &lt; tags.length; i++) {
            String fname = tags[i].getTagName();
            FunctionPrototypeSummary fproto = null;
            int kind = tags[i].getKind();
            if (kind == TagFlags.T_FUNCTION || kind == TagFlags.T_PROTOTYPE) {
                fname = fname + "()";
            }
            if(tags[i].getPattern() != null) {
                try {
                    fproto = new FunctionPrototypeSummary(tags[i].getPattern());
                    protostring = fproto.getPrototypeString(true);
                } catch(Exception ex) {
                    fproto = null;
                }
            }
            /** Changed for Exception catching from FPrototypeSummary
             * when fname is no function (kesselhaus@gmx.net)
             */
            if(fproto == null) {
                try { 
                    fproto = new FunctionPrototypeSummary(fname);
                    protostring = fproto.getPrototypeString(true);
                } catch( Exception e) {
                    // fname was not a function! (kesselhaus@gmx.net)
                    protostring = fname;
                }
            }
            if (kind != TagFlags.T_MEMBER) {
                CCompletionProposal proposal = 
                        new CCompletionProposal(
                                fname, 
                                region.getOffset(), 
                                region.getLength(),
                                getTagImage(kind),
                                // changed cause of exception catch
(kesselhaus@gmx.net)  
                                // fproto.getPrototypeString(true),
                                protostring,
                                3);
                completions.add(proposal);
                //No summary information available yet
                /** changed (kesselhaus@gmx.net)
                 *  if fproto is null because it was not a function and throwed
                 *  an exception above
                 */
                String fargs = (fproto != null)?fproto.getArguments():"";
                if(fargs != null &amp;&amp; fargs.length() &gt; 0) {
                    proposal.setContextInformation(new ContextInformation(fname,
fargs));
                }
            }
        }
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="5124" end="5149" />
        <code>} catch (Exception e) {
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="5877" end="6050" />
        <code>switch(tags[i].getKind()) { 
case CLASS: ... 
case MEMBER: ... 
case FUNCTION: ... 
... protostring = new FunctionPrototypeSummary(tags[i].getPattern()).getProtostring(); 
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="7083" end="7113" />
        <code>int nameend = leftbracket - 1;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="7114" end="7168" />
        <code>while(proto.charAt(nameend) == ' ') {
    nameend--;
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="7220" end="7259" />
        <code>retval = new CCmvcCorbaSessionHandler;</code>
      </source_code>
      <source_code type="assignment">
        <location start="7311" end="7350" />
        <code>retval = new CCmvcCorbaSessionHandler;</code>
      </source_code>
      <source_code type="class">
        <location start="8016" end="8126" />
        <code>class OneMoreClass {
public:
    OneMoreClass();
    ~OneMoreClass();
    void method1();
    int method2();
}</code>
      </source_code>
      <source_code type="class">
        <location start="8129" end="8191" />
        <code>class TestClass {
public:
    TestClass();
    ~TestClass();
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="8291" end="8340" />
        <code>TestClass::TestClass() {
    On&lt;hit-CTRL+SPACE&gt;
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="8341" end="8368" />
        <code>TestClass::~TestClass() {
}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="8615" end="9017" />
        <code>if (kind == TagFlags.T_FUNCTION || kind == TagFlags.T_PROTOTYPE) {
    fname = fname + "()";
    String pattern = tags[i].getPattern(); &lt;--- THIS CAN RETURN ""
    if(pattern != null) { &lt;-- and will not be checked here
        fproto = new FunctionPrototypeSummary(pattern); &lt;-- and will throw
exceptions here
    }
    if(fproto == null) {
        fproto = new FunctionPrototypeSummary(fname);
    }
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="9248" end="9268" />
        <code>nameend = 0 - 1;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When trying to do CTRL+Space to content assist, log gets an
IndexOutOfBoundsException in FunctionPrototypeSummary. I did a little debugging
on it, though I found the following:
OECU = org.eclipse.cdt.ui
In the OECU.CCompletionProcessor Class in method
private void addProjectCompletions(IProject project, IRegion region, String
frag, ArrayList completions) 
----
if (kind == TagFlags.T_FUNCTION || kind == TagFlags.T_PROTOTYPE) {
    fname = fname + "()";
}
// ----&gt; THIS ONE SEEMS OK
if(tags[i].getPattern() != null) {
    try {
        fproto = new FunctionPrototypeSummary(tags[i].getPattern());
    } catch(Exception ex) {
        fproto = null;
    }
}
// ----&gt; HERE THE EXCEPTION WILL BE THROWN IN THE CONSTRUCTION
if(fproto == null) {
    fproto = new FunctionPrototypeSummary(fname);
}

//System.out.println("tagmatch " + fname + " proto " + fproto + " type" +
tags[i].getKind());
if (kind != TagFlags.T_MEMBER) {
    CCompletionProposal proposal;
    proposal = new CCompletionProposal(fname, 
                                       region.getOffset(), 
                                       region.getLength(),
                                       getTagImage(kind), 
                                       fproto.getPrototypeString(true),
                                       3);
    completions.add(proposal);
    //No summary information available yet
    String fargs = fproto.getArguments();
    if(fargs != null &amp;&amp; fargs.length() &gt; 0) {
        proposal.setContextInformation(new ContextInformation(fname, fargs));
    }
}
-----

Within the FunctionPrototypeSummary Constructor, there is a search of the first
index of an '(' and ')' which returns -1. This isn't catched by any method. 

Though, I think, you either make FunctionPrototypeSummary Constructor safe by
checking for -1, or you try to catch it in CCompletionProcessor. 
---- My changes 
private void addProjectCompletions(IProject project, IRegion region, String
frag, ArrayList completions) {
    IndexModel model = IndexModel.getDefault();
    // Added for later use (kesselhaus@gmx.net)
    String protostring = "";
    ITagEntry[] tags = model.query(project, frag + "*", false, false);
    if (tags != null &amp;&amp; tags.length &gt; 0) {
        for (int i = 0; i &lt; tags.length; i++) {
            String fname = tags[i].getTagName();
            FunctionPrototypeSummary fproto = null;
            int kind = tags[i].getKind();
            if (kind == TagFlags.T_FUNCTION || kind == TagFlags.T_PROTOTYPE) {
                fname = fname + "()";
            }
            if(tags[i].getPattern() != null) {
                try {
                    fproto = new FunctionPrototypeSummary(tags[i].getPattern());
                    protostring = fproto.getPrototypeString(true);
                } catch(Exception ex) {
                    fproto = null;
                }
            }
            /** Changed for Exception catching from FPrototypeSummary
             * when fname is no function (kesselhaus@gmx.net)
             */
            if(fproto == null) {
                try { 
                    fproto = new FunctionPrototypeSummary(fname);
                    protostring = fproto.getPrototypeString(true);
                } catch( Exception e) {
                    // fname was not a function! (kesselhaus@gmx.net)
                    protostring = fname;
                }
            }
            if (kind != TagFlags.T_MEMBER) {
                CCompletionProposal proposal = 
                        new CCompletionProposal(
                                fname, 
                                region.getOffset(), 
                                region.getLength(),
                                getTagImage(kind),
                                // changed cause of exception catch
(kesselhaus@gmx.net)  
                                // fproto.getPrototypeString(true),
                                protostring,
                                3);
                completions.add(proposal);
                //No summary information available yet
                /** changed (kesselhaus@gmx.net)
                 *  if fproto is null because it was not a function and throwed
                 *  an exception above
                 */
                String fargs = (fproto != null)?fproto.getArguments():"";
                if(fargs != null &amp;&amp; fargs.length() &gt; 0) {
                    proposal.setContextInformation(new ContextInformation(fname,
fargs));
                }
            }
        }
    }
}
----
This will get rid of the Exception thrown, though, I don't know what your
intentions are on this.
Thomas you've look at this can you look.
Bogdan, this also affects the information that the indexer is
providing.

Let me know if any of you can take a look, to the patch sent by kesselhaus

Thanks
Made some time to look at your bug, agree with the analysis but not on the remedy.

FunctionPrototypeSummary() is buggy and should be fix.

it could be advertising that it throws an exception or as you rightly
notice by handling the -1 return from lastIndexOf()

I'm not a fan of code like this:
try {
..
} catch (Exception e) {
}

it will hide real errors.

Do you have a test case ?
Created attachment 5555
Cleanups to constructor of FunctionPrototypeSummary and in CCompletionProcessor
I've provided an improved (IMHO) patch and submitted it to cdt-patch.

Thomas
Sorry about the late answer. 
 
Well, since I do not know the intentions of the CDT team about this code and how your guidelines 
are on such issues, I just did the Exception-catch. This could have been done also by catching the 
ArrayIndexOutOfBoundsException to be more precise, and not just catching all exceptions. 
 
I also had some idea on the FunctionPrototypeSummary, but I think as you wrote it, it could be ok 
too. I also had an thought about the CComüpletionProcessor doing an  
switch(tags[i].getKind()) { 
case CLASS: ... 
case MEMBER: ... 
case FUNCTION: ... 
... protostring = new FunctionPrototypeSummary(tags[i].getPattern()).getProtostring(); 
} 
 
or such alike. 
 
However, fixing the FunctionPrototypeSummary itself is the better solution. 
 
Something I had in mind was, that there is some kind of information maybe left. 
If the Model or whatever keeps track where you stay in the Editor, you could probably narrow the 
pattern search to something more specific, like just search for classes, or just functions. 
 
When I stay at: 
ClassA myvar; myvar.  
then there should be infos just about functions or members. 
If I write: 
Cl&lt;CTRL+Space&gt; 
there should be infos about variables, members, etc. 
Though, the list could be kept clean. Right now, you get all it finds on the pattern, making the list 
large and hard to browse through. 
 
Just my 2 cent.  
 
 
@Thomas Fletcher
I just looked into the cdt-patch-archive, but couldn't find it.
Could you point me to the patch, to take a look and test it?
@Thomas Fletcher:
Today, I found your patch and applied it. There is still one more exception
throw. Sorry to tell you that. 

FunctionPrototypeSummary.java:41 ff.
-----
int nameend = leftbracket - 1;
while(proto.charAt(nameend) == ' ') {
    nameend--;
}
-----

2 Test cases are: I have some cpp-source. 

	retval = new CCmvcCorbaSessionHandler;
	retval.&lt;hit CTRL+Space here&gt;
	return retval; 
or:
	retval = new CCmvcCorbaSessionHandler;
	CCm&lt;hit CTRL+Space here&gt;
	return retval; 

This will throw again:
!SESSION Jul 28, 2003 01:11:34.328 ---------------------------------------------
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_DE
Command-line arguments: -os win32 -ws win32 -arch x86 -install
file:D:/Programme/eclipse/
!ENTRY org.eclipse.cdt.ui 4 4 Jul 28, 2003 01:11:34.328
!MESSAGE Error
!STACK 0
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.charAt(String.java:444)
	at
org.eclipse.cdt.ui.FunctionPrototypeSummary.&lt;init&gt;(FunctionPrototypeSummary.java:42)
	at
org.eclipse.cdt.internal.ui.text.CCompletionProcessor.addProjectCompletions(CCompletionProcessor.java:438)
	at
org.eclipse.cdt.internal.ui.text.CCompletionProcessor.addProposalsFromModel(CCompletionProcessor.java:399)
...
More Info: Just debugged with the applied patch from Thomas.
Suppose I make an Standard Make C++ Project. Create with the Class Wizard or by
hand the following:
--- TestClass.h START ---
#ifndef TESTCLASS_H
#define TESTCLASS_H

class OneMoreClass {
public:
    OneMoreClass();
    ~OneMoreClass();
    void method1();
    int method2();
};

class TestClass {
public:
    TestClass();
    ~TestClass();
};
#endif // TESTCLASS_H
--- TestClass.h END ---

--- TestClass.cpp START ---
#include "TestClass.h"
TestClass::TestClass() {
    On&lt;hit-CTRL+SPACE&gt;
}
TestClass::~TestClass() {
}
--- TestClass.cpp END ---
This will generate an ITagEntry[] with 6 entries. The entry at index 1 is of
type TagFlags.T_PROTOTYPE, whatever this type means. The tags[i].getPattern() in
CCompletionProcessor.addProjectCompletions(...) at line 436:

if (kind == TagFlags.T_FUNCTION || kind == TagFlags.T_PROTOTYPE) {
    fname = fname + "()";
    String pattern = tags[i].getPattern(); &lt;--- THIS CAN RETURN ""
    if(pattern != null) { &lt;-- and will not be checked here
        fproto = new FunctionPrototypeSummary(pattern); &lt;-- and will throw
exceptions here
    }
    if(fproto == null) {
        fproto = new FunctionPrototypeSummary(fname);
    }
}

will return "", not just null! Though, the FunctionPrototypeSummary CTOR will
not find '(' or ')', and adds "()" to the empty proto-string parameter.
But then you try to look for nameend and namestart, which in fact results in:

    nameend = 0 - 1;
    while( proto.charAt(-1) == ' ') &lt;--- ERROR StringIndexOutOfBoundsException!

Sorry to tell you, that your patch doesn't fix all the bugs.

Created attachment 5560
Minor Fixes, probably the same as Thomas one

This is just prework, the main changes are in the other patch
Created attachment 5561
Main/Enhanced Patch for FunctionPrototypeSummary

This does work for me, so take a look on it please.
This one separates the proto String into

fname	   - the methods name
fcontext   - like Class Name where the method is in
fargumnets - arguments of the method
freturn    - return type _and_ eventually any modifiers like virtual, extern, 
	     static etc., this is a little more tricky to separate and maybe
	     to much time consuming for a proposal
getContext() - return the Context of the function
Created attachment 5562
A Test Class for the FunctionPrototypeSummary Class Functionality

This one is actually just a copy of FunctionPrototypeSummary with an main
method and an String array containing some tests for different proto-strings.
These Strings could be provided by the TagsEntry from CCompletionProcessor
@kesselhaus

This is nice work.  Part of the problem is that the interface for the
CTags/Indexer ITagEntry piece is not well defined in terms of what it 
can return (for example "" really isn't all that useful as a return and
really that should be the fix in this case, not to return an empty string)
as valid values.

This work (as you may have seen on the mailing list) is going to be totally
replaced by the new indexer so it would be more worthwhile to better/properly
set up the interfaces to have no ambiguity about what is going to be returned
rather than hack and slash around it.

Thomas
Well, Thomas, I've seen the problem in the ITagEntry stuff already. I also came to the same 
conclusion, but as you know, the Indexer stuff still is in flux, and I was in need of at least some 
code completion. ;) And it works, even though, you get most entries twice (once from pattern, 
once from fname, the one will write Context::method() the other will just write the Context. 
Well but I can live for a little while with it, and I think about digging into the new Indexer Part a little 
more in my spare time. 
 
I'm not pretty sure, where the info gets into the tags file. I just have something what I believe it 
does. Though the new Indexer will completely replace the old Indexer? In what kind of storage is 
that information then held, same kind of index file, the big rising DOM? What kind of information is 
stored there, so I'll maybe get more &amp; better answers on search patterns. I mean I found also 
some SearchJob etc. classes but nowhere something yet returning infos about what had been 
found. You can fill the searchjob, but how to get infos back? 
 
 
I know, it doesn't really belong here, but I had some really wierd thoughts about the indexing and 
the texthover-help which shall provide infos also for not easliy indexable libs. I little while ago I 
stumbled across java based RDBMS. I was actually on the search for some really leightweight DBM 
like database for a project here. So there is hsqldb. This seems to be really lightweight and can 
driven in In-memory, Standalone and client-server mode. As I said, it was an real weird thought 
about having some RDBMS tumble across several tables select by context,type, etc.. Adding new 
Libraries Info Hoverhelp or even Help could be held in DB, index searched,... 
http://hsqldb.sourceforge.net/web/hsqlFeatures.html  
if someone just has interest on an discussion. If my cdt-dev@ account would work sometimes i 
would post an discussion there too.  
 
Anyway, back to work. 
Long and interresting debate  ... 8-)
so who's patch is left standing ?

Need to know, so I can apply.

Sorry, but I did not read the entire thread.

Thanks guys.
Well, if nobody else wants to. ;)

Alain, if you don't mind, take my two patches for now. But be aware of, that
they don't have the whole path in them, unfortunately. I realized it to late, sorry.

The other question is, how long the ctags indexer will be used. As Thomas said,
the CTags-Indexer Interface isn't that sophisticated as the new Indexer will be.



Sigh ... I had comments but they are gone now. Silly browser!

I agree with the last two patches, but I don't know that we have defined
the IFunctionPrototypeSummary adequately to handle C++, and we have 
definitely not properly defined the CTags component in terms of valid
return values.  I would propose that we no longer concentrate on fixing
the CTags stuff, but rather concentrate on making sure that the pieces
which will be re-used are well defined (ie make sure that the FunctionPrototype
Summary, if you want it to handle class methods, is defined as such in the
interface.
PR was targeted at 2.0 but was not resolved at release time. Changing target 
to 2.1
Fleeping to fix.

Bogdan completely remove the CTags implementation.

Please reopen if I've missed something.</WithStack>
    <WithOutStack>When trying to do CTRL+Space to content assist, log gets an
IndexOutOfBoundsException in FunctionPrototypeSummary. I did a little debugging
on it, though I found the following:
OECU = org.eclipse.cdt.ui
In the OECU.CCompletionProcessor Class in method
private void addProjectCompletions(IProject project, IRegion region, String
frag, ArrayList completions) 
----
if (kind == TagFlags.T_FUNCTION || kind == TagFlags.T_PROTOTYPE) {
    fname = fname + "()";
}
// ----&gt; THIS ONE SEEMS OK
if(tags[i].getPattern() != null) {
    try {
        fproto = new FunctionPrototypeSummary(tags[i].getPattern());
    } catch(Exception ex) {
        fproto = null;
    }
}
// ----&gt; HERE THE EXCEPTION WILL BE THROWN IN THE CONSTRUCTION
if(fproto == null) {
    fproto = new FunctionPrototypeSummary(fname);
}

//System.out.println("tagmatch " + fname + " proto " + fproto + " type" +
tags[i].getKind());
if (kind != TagFlags.T_MEMBER) {
    CCompletionProposal proposal;
    proposal = new CCompletionProposal(fname, 
                                       region.getOffset(), 
                                       region.getLength(),
                                       getTagImage(kind), 
                                       fproto.getPrototypeString(true),
                                       3);
    completions.add(proposal);
    //No summary information available yet
    String fargs = fproto.getArguments();
    if(fargs != null &amp;&amp; fargs.length() &gt; 0) {
        proposal.setContextInformation(new ContextInformation(fname, fargs));
    }
}
-----

Within the FunctionPrototypeSummary Constructor, there is a search of the first
index of an '(' and ')' which returns -1. This isn't catched by any method. 

Though, I think, you either make FunctionPrototypeSummary Constructor safe by
checking for -1, or you try to catch it in CCompletionProcessor. 
---- My changes 
private void addProjectCompletions(IProject project, IRegion region, String
frag, ArrayList completions) {
    IndexModel model = IndexModel.getDefault();
    // Added for later use (kesselhaus@gmx.net)
    String protostring = "";
    ITagEntry[] tags = model.query(project, frag + "*", false, false);
    if (tags != null &amp;&amp; tags.length &gt; 0) {
        for (int i = 0; i &lt; tags.length; i++) {
            String fname = tags[i].getTagName();
            FunctionPrototypeSummary fproto = null;
            int kind = tags[i].getKind();
            if (kind == TagFlags.T_FUNCTION || kind == TagFlags.T_PROTOTYPE) {
                fname = fname + "()";
            }
            if(tags[i].getPattern() != null) {
                try {
                    fproto = new FunctionPrototypeSummary(tags[i].getPattern());
                    protostring = fproto.getPrototypeString(true);
                } catch(Exception ex) {
                    fproto = null;
                }
            }
            /** Changed for Exception catching from FPrototypeSummary
             * when fname is no function (kesselhaus@gmx.net)
             */
            if(fproto == null) {
                try { 
                    fproto = new FunctionPrototypeSummary(fname);
                    protostring = fproto.getPrototypeString(true);
                } catch( Exception e) {
                    // fname was not a function! (kesselhaus@gmx.net)
                    protostring = fname;
                }
            }
            if (kind != TagFlags.T_MEMBER) {
                CCompletionProposal proposal = 
                        new CCompletionProposal(
                                fname, 
                                region.getOffset(), 
                                region.getLength(),
                                getTagImage(kind),
                                // changed cause of exception catch
(kesselhaus@gmx.net)  
                                // fproto.getPrototypeString(true),
                                protostring,
                                3);
                completions.add(proposal);
                //No summary information available yet
                /** changed (kesselhaus@gmx.net)
                 *  if fproto is null because it was not a function and throwed
                 *  an exception above
                 */
                String fargs = (fproto != null)?fproto.getArguments():"";
                if(fargs != null &amp;&amp; fargs.length() &gt; 0) {
                    proposal.setContextInformation(new ContextInformation(fname,
fargs));
                }
            }
        }
    }
}
----
This will get rid of the Exception thrown, though, I don't know what your
intentions are on this.
Thomas you've look at this can you look.
Bogdan, this also affects the information that the indexer is
providing.

Let me know if any of you can take a look, to the patch sent by kesselhaus

Thanks
Made some time to look at your bug, agree with the analysis but not on the remedy.

FunctionPrototypeSummary() is buggy and should be fix.

it could be advertising that it throws an exception or as you rightly
notice by handling the -1 return from lastIndexOf()

I'm not a fan of code like this:
try {
..
} catch (Exception e) {
}

it will hide real errors.

Do you have a test case ?
Created attachment 5555
Cleanups to constructor of FunctionPrototypeSummary and in CCompletionProcessor
I've provided an improved (IMHO) patch and submitted it to cdt-patch.

Thomas
Sorry about the late answer. 
 
Well, since I do not know the intentions of the CDT team about this code and how your guidelines 
are on such issues, I just did the Exception-catch. This could have been done also by catching the 
ArrayIndexOutOfBoundsException to be more precise, and not just catching all exceptions. 
 
I also had some idea on the FunctionPrototypeSummary, but I think as you wrote it, it could be ok 
too. I also had an thought about the CComüpletionProcessor doing an  
switch(tags[i].getKind()) { 
case CLASS: ... 
case MEMBER: ... 
case FUNCTION: ... 
... protostring = new FunctionPrototypeSummary(tags[i].getPattern()).getProtostring(); 
} 
 
or such alike. 
 
However, fixing the FunctionPrototypeSummary itself is the better solution. 
 
Something I had in mind was, that there is some kind of information maybe left. 
If the Model or whatever keeps track where you stay in the Editor, you could probably narrow the 
pattern search to something more specific, like just search for classes, or just functions. 
 
When I stay at: 
ClassA myvar; myvar.  
then there should be infos just about functions or members. 
If I write: 
Cl&lt;CTRL+Space&gt; 
there should be infos about variables, members, etc. 
Though, the list could be kept clean. Right now, you get all it finds on the pattern, making the list 
large and hard to browse through. 
 
Just my 2 cent.  
 
 
@Thomas Fletcher
I just looked into the cdt-patch-archive, but couldn't find it.
Could you point me to the patch, to take a look and test it?
@Thomas Fletcher:
Today, I found your patch and applied it. There is still one more exception
throw. Sorry to tell you that. 

FunctionPrototypeSummary.java:41 ff.
-----
int nameend = leftbracket - 1;
while(proto.charAt(nameend) == ' ') {
    nameend--;
}
-----

2 Test cases are: I have some cpp-source. 

	retval = new CCmvcCorbaSessionHandler;
	retval.&lt;hit CTRL+Space here&gt;
	return retval; 
or:
	retval = new CCmvcCorbaSessionHandler;
	CCm&lt;hit CTRL+Space here&gt;
	return retval; 

This will throw again:
!SESSION Jul 28, 2003 01:11:34.328 ---------------------------------------------
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_DE
Command-line arguments: -os win32 -ws win32 -arch x86 -install
file:D:/Programme/eclipse/
!ENTRY org.eclipse.cdt.ui 4 4 Jul 28, 2003 01:11:34.328
!MESSAGE Error
!STACK 0

...
More Info: Just debugged with the applied patch from Thomas.
Suppose I make an Standard Make C++ Project. Create with the Class Wizard or by
hand the following:
--- TestClass.h START ---
#ifndef TESTCLASS_H
#define TESTCLASS_H

class OneMoreClass {
public:
    OneMoreClass();
    ~OneMoreClass();
    void method1();
    int method2();
};

class TestClass {
public:
    TestClass();
    ~TestClass();
};
#endif // TESTCLASS_H
--- TestClass.h END ---

--- TestClass.cpp START ---
#include "TestClass.h"
TestClass::TestClass() {
    On&lt;hit-CTRL+SPACE&gt;
}
TestClass::~TestClass() {
}
--- TestClass.cpp END ---
This will generate an ITagEntry[] with 6 entries. The entry at index 1 is of
type TagFlags.T_PROTOTYPE, whatever this type means. The tags[i].getPattern() in
CCompletionProcessor.addProjectCompletions(...) at line 436:

if (kind == TagFlags.T_FUNCTION || kind == TagFlags.T_PROTOTYPE) {
    fname = fname + "()";
    String pattern = tags[i].getPattern(); &lt;--- THIS CAN RETURN ""
    if(pattern != null) { &lt;-- and will not be checked here
        fproto = new FunctionPrototypeSummary(pattern); &lt;-- and will throw
exceptions here
    }
    if(fproto == null) {
        fproto = new FunctionPrototypeSummary(fname);
    }
}

will return "", not just null! Though, the FunctionPrototypeSummary CTOR will
not find '(' or ')', and adds "()" to the empty proto-string parameter.
But then you try to look for nameend and namestart, which in fact results in:

    nameend = 0 - 1;
    while( proto.charAt(-1) == ' ') &lt;--- ERROR StringIndexOutOfBoundsException!

Sorry to tell you, that your patch doesn't fix all the bugs.

Created attachment 5560
Minor Fixes, probably the same as Thomas one

This is just prework, the main changes are in the other patch
Created attachment 5561
Main/Enhanced Patch for FunctionPrototypeSummary

This does work for me, so take a look on it please.
This one separates the proto String into

fname	   - the methods name
fcontext   - like Class Name where the method is in
fargumnets - arguments of the method
freturn    - return type _and_ eventually any modifiers like virtual, extern, 
	     static etc., this is a little more tricky to separate and maybe
	     to much time consuming for a proposal
getContext() - return the Context of the function
Created attachment 5562
A Test Class for the FunctionPrototypeSummary Class Functionality

This one is actually just a copy of FunctionPrototypeSummary with an main
method and an String array containing some tests for different proto-strings.
These Strings could be provided by the TagsEntry from CCompletionProcessor
@kesselhaus

This is nice work.  Part of the problem is that the interface for the
CTags/Indexer ITagEntry piece is not well defined in terms of what it 
can return (for example "" really isn't all that useful as a return and
really that should be the fix in this case, not to return an empty string)
as valid values.

This work (as you may have seen on the mailing list) is going to be totally
replaced by the new indexer so it would be more worthwhile to better/properly
set up the interfaces to have no ambiguity about what is going to be returned
rather than hack and slash around it.

Thomas
Well, Thomas, I've seen the problem in the ITagEntry stuff already. I also came to the same 
conclusion, but as you know, the Indexer stuff still is in flux, and I was in need of at least some 
code completion. ;) And it works, even though, you get most entries twice (once from pattern, 
once from fname, the one will write Context::method() the other will just write the Context. 
Well but I can live for a little while with it, and I think about digging into the new Indexer Part a little 
more in my spare time. 
 
I'm not pretty sure, where the info gets into the tags file. I just have something what I believe it 
does. Though the new Indexer will completely replace the old Indexer? In what kind of storage is 
that information then held, same kind of index file, the big rising DOM? What kind of information is 
stored there, so I'll maybe get more &amp; better answers on search patterns. I mean I found also 
some SearchJob etc. classes but nowhere something yet returning infos about what had been 
found. You can fill the searchjob, but how to get infos back? 
 
 
I know, it doesn't really belong here, but I had some really wierd thoughts about the indexing and 
the texthover-help which shall provide infos also for not easliy indexable libs. I little while ago I 
stumbled across java based RDBMS. I was actually on the search for some really leightweight DBM 
like database for a project here. So there is hsqldb. This seems to be really lightweight and can 
driven in In-memory, Standalone and client-server mode. As I said, it was an real weird thought 
about having some RDBMS tumble across several tables select by context,type, etc.. Adding new 
Libraries Info Hoverhelp or even Help could be held in DB, index searched,... 
http://hsqldb.sourceforge.net/web/hsqlFeatures.html  
if someone just has interest on an discussion. If my cdt-dev@ account would work sometimes i 
would post an discussion there too.  
 
Anyway, back to work. 
Long and interresting debate  ... 8-)
so who's patch is left standing ?

Need to know, so I can apply.

Sorry, but I did not read the entire thread.

Thanks guys.
Well, if nobody else wants to. ;)

Alain, if you don't mind, take my two patches for now. But be aware of, that
they don't have the whole path in them, unfortunately. I realized it to late, sorry.

The other question is, how long the ctags indexer will be used. As Thomas said,
the CTags-Indexer Interface isn't that sophisticated as the new Indexer will be.



Sigh ... I had comments but they are gone now. Silly browser!

I agree with the last two patches, but I don't know that we have defined
the IFunctionPrototypeSummary adequately to handle C++, and we have 
definitely not properly defined the CTags component in terms of valid
return values.  I would propose that we no longer concentrate on fixing
the CTags stuff, but rather concentrate on making sure that the pieces
which will be re-used are well defined (ie make sure that the FunctionPrototype
Summary, if you want it to handle class methods, is defined as such in the
interface.
PR was targeted at 2.0 but was not resolved at release time. Changing target 
to 2.1
Fleeping to fix.

Bogdan completely remove the CTags implementation.

Please reopen if I've missed something.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40521" />
    <CreationDate amount="2003-07-19 15:45:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[launcher] Launcher error messages cannot be rebranded</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="assignment">
        <location start="550" end="610" />
        <code>static char* showMsg = "Could not load splash bitmap:\n%s";</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1075" end="1147" />
        <code>companion startup.jar file (in the same directory as the executable).";</code>
      </source_code>
      <source_code type="assignment">
        <location start="1757" end="1821" />
        <code>static wchar_t* showMsg = L"Could not load splash bitmap:\n%s";</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2295" end="2367" />
        <code>companion startup.jar file (in the same directory as the executable).";</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The launcher error messages in eclipse.c refer to "Eclipse" explicitly, instead
of using the value of PROGRAM_NAME specified in the makefiles.

For example:

  "Please use a newer VM. Eclipse requires at least 1.3.0.";

instead of:

  "Please use a newer VM. " PROGRAM_NAME " requires at least 1.3.0.";

The following patch updates the error messages to reference PROGRAM_NAME instead
of "Eclipse":

--- library.orig/eclipse.c      2003-03-24 14:02:04.000000000 -0500
+++ library/eclipse.c   2003-07-18 22:38:01.000000000 -0400
@@ -133,19 +133,19 @@
 static char* showMsg = "Could not load splash bitmap:\n%s";
 static char* noVMMsg =
 "A Java Runtime Environment (JRE) or Java Development Kit (JDK)\n\
-must be available in order to run Eclipse. No Java virtual machine\n\
+must be available in order to run " PROGRAM_NAME ". No Java virtual machine\n\
 was found after searching the following locations:\n\
 %s";

 static char* homeMsg =
-"The Eclipse executable launcher was unable to locate its \n\
+"The " PROGRAM_NAME " executable launcher was unable to locate its \n\
 companion startup.jar file (in the same directory as the executable).";

 static char* startupProblemMsg =
 "Problems during startup. Check the \".log\" file\n\
 in the \".metadata\" directory of your workspace.";

-static char* vmVersionMsg = "Please use a newer VM. Eclipse requires at least
1.3.0.";
+static char* vmVersionMsg = "Please use a newer VM. " PROGRAM_NAME " requires
at least 1.3.0.";

 static char* isRunningMsg =
 "Another session is already running in the associated workspace.\n\
--- library.orig/win32/unicode/eclipse.c        2003-03-24 14:02:04.000000000 -0500
+++ library/win32/unicode/eclipse.c     2003-07-18 22:42:26.000000000 -0400
@@ -128,19 +128,19 @@
 static wchar_t* showMsg = L"Could not load splash bitmap:\n%s";
 static wchar_t* noVMMsg =
 L"A Java Runtime Environment (JRE) or Java Development Kit (JDK)\n\
-must be available in order to run Eclipse. No Java virtual machine\n\
+must be available in order to run " PROGRAM_NAME ". No Java virtual machine\n\
 was found after searching the following locations:\n\
 %s";

 static wchar_t* homeMsg =
-L"The Eclipse executable launcher was unable to locate its \n\
+L"The " PROGRAM_NAME " executable launcher was unable to locate its \n\
 companion startup.jar file (in the same directory as the executable).";

 static wchar_t* startupProblemMsg =
 L"Problems during startup. Check the \".log\" file\n\
 in the \".metadata\" directory of your workspace.";

-static wchar_t* vmVersionMsg = L"Please use a newer VM. Eclipse requires at
least 1.3.0.";
+static wchar_t* vmVersionMsg = L"Please use a newer VM. " PROGRAM_NAME "
requires at least 1.3.0.";

 static wchar_t* isRunningMsg =
 L"Another session is already running in the associated workspace.\n\
Created attachment 5516
Causes launcher error messages to reference PROGRAM_NAME instead of "Eclipse"
executable is owned by SWT.
SSQ, this is really old and may be out of date now?  Jeff is cleaning house.
Most messages have been removed from the launcher. They are in Core now. The 
ones that remain are fixed.

Fixed &gt; 20040402.</WithStack>
    <WithOutStack>The launcher error messages in eclipse.c refer to "Eclipse" explicitly, instead
of using the value of PROGRAM_NAME specified in the makefiles.

For example:

  "Please use a newer VM. Eclipse requires at least 1.3.0.";

instead of:

  "Please use a newer VM. " PROGRAM_NAME " requires at least 1.3.0.";

The following patch updates the error messages to reference PROGRAM_NAME instead
of "Eclipse":

--- library.orig/eclipse.c      2003-03-24 14:02:04.000000000 -0500
+++ library/eclipse.c   2003-07-18 22:38:01.000000000 -0400
@@ -133,19 +133,19 @@
 static char* showMsg = "Could not load splash bitmap:\n%s";
 static char* noVMMsg =
 "A Java Runtime Environment (JRE) or Java Development Kit (JDK)\n\
-must be available in order to run Eclipse. No Java virtual machine\n\
+must be available in order to run " PROGRAM_NAME ". No Java virtual machine\n\
 was found after searching the following locations:\n\
 %s";

 static char* homeMsg =
-"The Eclipse executable launcher was unable to locate its \n\
+"The " PROGRAM_NAME " executable launcher was unable to locate its \n\
 companion startup.jar file (in the same directory as the executable).";

 static char* startupProblemMsg =
 "Problems during startup. Check the \".log\" file\n\
 in the \".metadata\" directory of your workspace.";

-static char* vmVersionMsg = "Please use a newer VM. Eclipse requires at least
1.3.0.";
+static char* vmVersionMsg = "Please use a newer VM. " PROGRAM_NAME " requires
at least 1.3.0.";

 static char* isRunningMsg =
 "Another session is already running in the associated workspace.\n\
--- library.orig/win32/unicode/eclipse.c        2003-03-24 14:02:04.000000000 -0500
+++ library/win32/unicode/eclipse.c     2003-07-18 22:42:26.000000000 -0400
@@ -128,19 +128,19 @@
 static wchar_t* showMsg = L"Could not load splash bitmap:\n%s";
 static wchar_t* noVMMsg =
 L"A Java Runtime Environment (JRE) or Java Development Kit (JDK)\n\
-must be available in order to run Eclipse. No Java virtual machine\n\
+must be available in order to run " PROGRAM_NAME ". No Java virtual machine\n\
 was found after searching the following locations:\n\
 %s";

 static wchar_t* homeMsg =
-L"The Eclipse executable launcher was unable to locate its \n\
+L"The " PROGRAM_NAME " executable launcher was unable to locate its \n\
 companion startup.jar file (in the same directory as the executable).";

 static wchar_t* startupProblemMsg =
 L"Problems during startup. Check the \".log\" file\n\
 in the \".metadata\" directory of your workspace.";

-static wchar_t* vmVersionMsg = L"Please use a newer VM. Eclipse requires at
least 1.3.0.";
+static wchar_t* vmVersionMsg = L"Please use a newer VM. " PROGRAM_NAME "
requires at least 1.3.0.";

 static wchar_t* isRunningMsg =
 L"Another session is already running in the associated workspace.\n\
Created attachment 5516
Causes launcher error messages to reference PROGRAM_NAME instead of "Eclipse"
executable is owned by SWT.
SSQ, this is really old and may be out of date now?  Jeff is cleaning house.
Most messages have been removed from the launcher. They are in Core now. The 
ones that remain are fixed.

Fixed &gt; 20040402.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40522" />
    <CreationDate amount="2003-07-19 15:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>[launcher] Warnings about typecasts in launcher code</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>When compiling the Eclipse launcher code, there are several points in
eclipseWin.c where the results of malloc are not cast to the expected type; this
results in errors if compiling the launcher with MinGW.
Created attachment 5517
Adds casts to malloc() calls in eclipseWin.c
I've attached a patch that adds the appropriate casts to eclipseWin.c (both
versions.)
Thanks for the attachment. Will review and release.
movign to SWT
SSQ, this is really old and may be out of date now?  Jeff is cleaning house.
Generally, i don't think casting the return of malloc is a good idea, it will 
only hide problems like the header file for malloc not being include.
I think that this can probably be closed - even if you're going to accept the
idea of casting the return from malloc, the patch is out of date.
Ok.</WithStack>
    <WithOutStack>When compiling the Eclipse launcher code, there are several points in
eclipseWin.c where the results of malloc are not cast to the expected type; this
results in errors if compiling the launcher with MinGW.
Created attachment 5517
Adds casts to malloc() calls in eclipseWin.c
I've attached a patch that adds the appropriate casts to eclipseWin.c (both
versions.)
Thanks for the attachment. Will review and release.
movign to SWT
SSQ, this is really old and may be out of date now?  Jeff is cleaning house.
Generally, i don't think casting the return of malloc is a good idea, it will 
only hide problems like the header file for malloc not being include.
I think that this can probably be closed - even if you're going to accept the
idea of casting the return from malloc, the patch is out of date.
Ok.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40523" />
    <CreationDate amount="2003-07-19 15:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[launcher] Allow launcher build using MinGW</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- Adds two new files (win32/build.sh, win32/make_mingw.mak)</Line>
          <Line>- Adds a conditional include of &lt;stdlib.h&gt; (based on __MINGW32__)</Line>
          <Line>to two files (eclipseShm.c, win32/eclipseWin.c)</Line>
          <Line>- Adds an initializer to a variable in eclipseShm.c to avoid a</Line>
          <Line>"variable may be used without being initialized" warning</Line>
          <Line>Thanks!</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The following patch provides a Makefile and build.sh that can be used to build
the Eclipse launcher using the MinGW compiler under Cygwin.

I suspect that building the launcher using MinGW and a build.bat file would also
be fairly straightforward, though I haven't had a reason to do that.
Created attachment 5518
Allow launcher to be built using MinGW under Cygwin
The eclipse executable is owned by SWT.  Moving...
SSQ, this is really old and may be out of date now?  Jeff is cleaning house.
The build scripts and makefiles have changed quite a bit in 3.0. Would be able 
to provide a patch for 3.0 HEAD? Also, I don't have the cgwin env, so I will 
probably release your changes as is.
I'll see about redoing this as a patch for 3.0, though it might take
a while for me to get around to it.
Created attachment 10299
Original 2.x patch, redone to apply to 3.0 launcher source

I've recreated the patch based on the 3.0 launcher source.  This patch:
- Adds two new files (win32/build.sh, win32/make_mingw.mak)
- Adds a conditional include of &lt;stdlib.h&gt; (based on __MINGW32__)
  to two files (eclipseShm.c, win32/eclipseWin.c)
- Adds an initializer to a variable in eclipseShm.c to avoid a
  "variable may be used without being initialized" warning
Thanks!

I have applied the changes. Please try the latest and confirm if everything is 
ok.</WithStack>
    <WithOutStack>The following patch provides a Makefile and build.sh that can be used to build
the Eclipse launcher using the MinGW compiler under Cygwin.

I suspect that building the launcher using MinGW and a build.bat file would also
be fairly straightforward, though I haven't had a reason to do that.
Created attachment 5518
Allow launcher to be built using MinGW under Cygwin
The eclipse executable is owned by SWT.  Moving...
SSQ, this is really old and may be out of date now?  Jeff is cleaning house.
The build scripts and makefiles have changed quite a bit in 3.0. Would be able 
to provide a patch for 3.0 HEAD? Also, I don't have the cgwin env, so I will 
probably release your changes as is.
I'll see about redoing this as a patch for 3.0, though it might take
a while for me to get around to it.
Created attachment 10299
Original 2.x patch, redone to apply to 3.0 launcher source

I've recreated the patch based on the 3.0 launcher source.  This patch:
- Adds two new files (win32/build.sh, win32/make_mingw.mak)
- Adds a conditional include of &lt;stdlib.h&gt; (based on __MINGW32__)
  to two files (eclipseShm.c, win32/eclipseWin.c)
- Adds an initializer to a variable in eclipseShm.c to avoid a
  "variable may be used without being initialized" warning
Thanks!

I have applied the changes. Please try the latest and confirm if everything is 
ok.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40524" />
    <CreationDate amount="2003-07-19 16:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Expansion of package view causes ConcurrentModificationException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="4">
      <Stacktrace timestamp="1437340804113">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable 
(java.util.ConcurrentModificationException)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2365)</Frame>
          <Frame depth="1">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:105)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2165)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1882)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)</Frame>
          <Frame depth="6">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="7">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="8">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="9">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="10">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="11">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="12">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="13">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="14">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437340804113">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.HashMap$HashIterator.nextEntry(HashMap.java:762)</Frame>
          <Frame depth="1">java.util.HashMap$KeyIterator.next(HashMap.java:798)</Frame>
          <Frame depth="2">java.util.AbstractCollection.toArray(AbstractCollection.java:121)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.ProgressContentProvider$1.runInUIThread(ProgressContentProvider.java:188)</Frame>
          <Frame depth="4">org.eclipse.ui.progress.UIJob$1.run(UIJob.java:77)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2165)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1882)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)</Frame>
          <Frame depth="11">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="12">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="13">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="14">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="15">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="16">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="17">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="18">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="19">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437340804113">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Failed to execute runnable 
(java.lang.ClassCastException)</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2365)</Frame>
          <Frame depth="1">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:105)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2165)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1882)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)</Frame>
          <Frame depth="6">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="7">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="8">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="9">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="10">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="11">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="12">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="13">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="14">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437340804113">
        <Exception>java.lang.ClassCastException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.ui.internal.progress.ProgressContentProvider.getParent(ProgressContentProvider.java:95)</Frame>
          <Frame depth="1">org.eclipse.jface.viewers.AbstractTreeViewer.internalExpand(AbstractTreeViewer.java:834)</Frame>
          <Frame depth="2">org.eclipse.jface.viewers.AbstractTreeViewer.internalExpand(AbstractTreeViewer.java:836)</Frame>
          <Frame depth="3">org.eclipse.jface.viewers.AbstractTreeViewer.setSelectionToWidget(AbstractTreeViewer.java:1288)</Frame>
          <Frame depth="4">org.eclipse.jface.viewers.StructuredViewer.setSelectionToWidget(StructuredViewer.java:1045)</Frame>
          <Frame depth="5">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:803)</Frame>
          <Frame depth="6">org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:879)</Frame>
          <Frame depth="7">org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:839)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.progress.ProgressContentProvider$1.runInUIThread(ProgressContentProvider.java:186)</Frame>
          <Frame depth="9">org.eclipse.ui.progress.UIJob$1.run(UIJob.java:77)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2165)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1882)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 3.0M2

The following exceptions occured in my log after opening and closing some nodes 
of the package explorer (having the progress view open) 

The ClassCastException appeared when changing to verbose mode while there was 
content in the progress view (stale content from the 
ConcurrentModificationException I assume)


!MESSAGE Failed to execute runnable (java.util.ConcurrentModificationException)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable 
(java.util.ConcurrentModificationException)
	at org.eclipse.swt.SWT.error(SWT.java:2365)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:105)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1882)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Jul 19, 2003 22:34:12.30
!MESSAGE 
*** Stack trace of contained exception ***
!ENTRY org.eclipse.ui 4 0 Jul 19, 2003 22:34:12.30
!MESSAGE java.util.ConcurrentModificationException
!STACK 0
java.util.ConcurrentModificationException
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:762)
	at java.util.HashMap$KeyIterator.next(HashMap.java:798)
	at java.util.AbstractCollection.toArray(AbstractCollection.java:121)
	at 
org.eclipse.ui.internal.progress.ProgressContentProvider$1.runInUIThread
(ProgressContentProvider.java:188)
	at org.eclipse.ui.progress.UIJob$1.run(UIJob.java:77)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:102)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1882)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Jul 19, 2003 22:35:01.410
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jul 19, 2003 22:35:01.410
!MESSAGE Failed to execute runnable (java.lang.ClassCastException)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable 
(java.lang.ClassCastException)
	at org.eclipse.swt.SWT.error(SWT.java:2365)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:105)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1882)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Jul 19, 2003 22:35:01.420
!MESSAGE 
*** Stack trace of contained exception ***
!ENTRY org.eclipse.ui 4 0 Jul 19, 2003 22:35:01.420
!MESSAGE java.lang.ClassCastException
!STACK 0
java.lang.ClassCastException
	at org.eclipse.ui.internal.progress.ProgressContentProvider.getParent
(ProgressContentProvider.java:95)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalExpand
(AbstractTreeViewer.java:834)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalExpand
(AbstractTreeViewer.java:836)
	at org.eclipse.jface.viewers.AbstractTreeViewer.setSelectionToWidget
(AbstractTreeViewer.java:1288)
	at org.eclipse.jface.viewers.StructuredViewer.setSelectionToWidget
(StructuredViewer.java:1045)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:803)
	at org.eclipse.jface.viewers.StructuredViewer.refresh
(StructuredViewer.java:879)
	at org.eclipse.jface.viewers.StructuredViewer.refresh
(StructuredViewer.java:839)
	at 
org.eclipse.ui.internal.progress.ProgressContentProvider$1.runInUIThread
(ProgressContentProvider.java:186)
	at org.eclipse.ui.progress.UIJob$1.run(UIJob.java:77)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:102)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2165)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1882)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
The ClassCastException was fixed for M2 (20030718) - see Bug 40392.

I suspect the ConcurrentModificationException was related to other PRs fixed 
also for M2 - reassigning to component owner for comment.


The report clearly states that I was experiencing the problems with M2, so you're either talking 
about a different ClassCastException or it just isn't fixed.
though i did have to deal with a ConcurrentModificationException for M2, the exception wasn't just made for me, you know :). The stack trace suggests this may be a different problem..
does ProgressContentProvider manage Collections, perhaps?

giving it to tod for one more try. (will accept it back if you really really really think its mine, but i require at least three 'really's :)


This was due to update occuring at the same time as new info was being added.

Fixed in build &gt;20030721
Marking closed</WithStack>
    <WithOutStack>Eclipse 3.0M2

The following exceptions occured in my log after opening and closing some nodes 
of the package explorer (having the progress view open) 

The ClassCastException appeared when changing to verbose mode while there was 
content in the progress view (stale content from the 
ConcurrentModificationException I assume)


!MESSAGE Failed to execute runnable (java.util.ConcurrentModificationException)
!STACK 0
!ENTRY org.eclipse.ui 4 4 Jul 19, 2003 22:34:12.30
!MESSAGE 
*** Stack trace of contained exception ***
!ENTRY org.eclipse.ui 4 0 Jul 19, 2003 22:34:12.30
!MESSAGE java.util.ConcurrentModificationException
!STACK 0
!ENTRY org.eclipse.ui 4 4 Jul 19, 2003 22:35:01.410
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jul 19, 2003 22:35:01.410
!MESSAGE Failed to execute runnable (java.lang.ClassCastException)
!STACK 0
!ENTRY org.eclipse.ui 4 4 Jul 19, 2003 22:35:01.420
!MESSAGE 
*** Stack trace of contained exception ***
!ENTRY org.eclipse.ui 4 0 Jul 19, 2003 22:35:01.420
!MESSAGE java.lang.ClassCastException
!STACK 0

The ClassCastException was fixed for M2 (20030718) - see Bug 40392.

I suspect the ConcurrentModificationException was related to other PRs fixed 
also for M2 - reassigning to component owner for comment.


The report clearly states that I was experiencing the problems with M2, so you're either talking 
about a different ClassCastException or it just isn't fixed.
though i did have to deal with a ConcurrentModificationException for M2, the exception wasn't just made for me, you know :). The stack trace suggests this may be a different problem..
does ProgressContentProvider manage Collections, perhaps?

giving it to tod for one more try. (will accept it back if you really really really think its mine, but i require at least three 'really's :)


This was due to update occuring at the same time as new info was being added.

Fixed in build &gt;20030721
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40525" />
    <CreationDate amount="2003-07-19 17:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Quickdiff's behavior wrong when changing content outside eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 3.0M2

The QuickDiff feature behaves incorrectly when then content of a file was 
changed outside of Eclipse. After telling Eclipse to refresh the editor's 
content from the filesystem, QuickDiff seems to compare with the old filesystem 
content. Expected behavior would be QuickDiff showing no differences.
fixed &gt; 20030822
marking as fixed.</WithStack>
    <WithOutStack>Eclipse 3.0M2

The QuickDiff feature behaves incorrectly when then content of a file was 
changed outside of Eclipse. After telling Eclipse to refresh the editor's 
content from the filesystem, QuickDiff seems to compare with the old filesystem 
content. Expected behavior would be QuickDiff showing no differences.
fixed &gt; 20030822
marking as fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40526" />
    <CreationDate amount="2003-07-19 17:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[Regression] CVS dialog during download has not enough place for displaying current size state</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>During the download process there is not enough place like in eclipse 2.x to 
display the current downloaded size
True for now however this is only temporary. By M3, checkout operations will be
run in the background and progress will be shown in the Progress View. There is
plenty of room there to show file transfer sizes.
Fixed in M3. Checkouts are performed in the background by default.</WithStack>
    <WithOutStack>During the download process there is not enough place like in eclipse 2.x to 
display the current downloaded size
True for now however this is only temporary. By M3, checkout operations will be
run in the background and progress will be shown in the Progress View. There is
plenty of room there to show file transfer sizes.
Fixed in M3. Checkouts are performed in the background by default.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40527" />
    <CreationDate amount="2003-07-19 18:07:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Change compiler compliance level will not be saved</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- open the preference page, java-&gt;compiler</Line>
          <Line>- change 1.3 to 1.4, press OK</Line>
          <Line>- press Yes or No when askes to do a full build</Line>
          <Line>- open preference page again. setting is changed</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>In Preferences-&gt;Java-&gt;Compiler-&gt;Compliance and Classfiles set the compliance
level to 1.4. The settings is not saved at all nor does the message appear that
the compiler settings are changed and a full rebuild is required to make the
changes take effect.
I can't reproduce this, but you are not the only one reporting that the compiler
preference page does not save all settings.
Are you doing soemthing special?
- open the preference page, java-&gt;compiler
- change 1.3 to 1.4, press OK
- press Yes or No when askes to do a full build
- open preference page again. setting is changed

Can you check if there is something in the .log file?
what build are you using? M2?
I used M2 and Gnome 2.0 when I discovered this behavior. But I had another problem with Eclipse 
showing the Preference Pages, but it disappered after I started Eclipse with a fresh workspace 
again.
It's very strange. Yesterday I installed the latest Gnome 2.2. I will check the compiler compliance 
setting again and come back on this tomorrow. I will check the .log for you.
I checked the .log File but it contained only some entries that were written
during startup. Nothing special!
With my new Workspace it is now working fine. The Message to rebuild all Files
appears and the settings are saved. With the other workspace it doesn't work.
Are there any interesting things in the "old" workspace that will help you to
solve the problem?
There was no change in the way how the settings were stored, so I don't see how
an old workspace could help.
setting to 'closed'. please reopen if you see this again</WithStack>
    <WithOutStack>In Preferences-&gt;Java-&gt;Compiler-&gt;Compliance and Classfiles set the compliance
level to 1.4. The settings is not saved at all nor does the message appear that
the compiler settings are changed and a full rebuild is required to make the
changes take effect.
I can't reproduce this, but you are not the only one reporting that the compiler
preference page does not save all settings.
Are you doing soemthing special?
- open the preference page, java-&gt;compiler
- change 1.3 to 1.4, press OK
- press Yes or No when askes to do a full build
- open preference page again. setting is changed

Can you check if there is something in the .log file?
what build are you using? M2?
I used M2 and Gnome 2.0 when I discovered this behavior. But I had another problem with Eclipse 
showing the Preference Pages, but it disappered after I started Eclipse with a fresh workspace 
again.
It's very strange. Yesterday I installed the latest Gnome 2.2. I will check the compiler compliance 
setting again and come back on this tomorrow. I will check the .log for you.
I checked the .log File but it contained only some entries that were written
during startup. Nothing special!
With my new Workspace it is now working fine. The Message to rebuild all Files
appears and the settings are saved. With the other workspace it doesn't work.
Are there any interesting things in the "old" workspace that will help you to
solve the problem?
There was no change in the way how the settings were stored, so I don't see how
an old workspace could help.
setting to 'closed'. please reopen if you see this again</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40528" />
    <CreationDate amount="2003-07-19 18:13:00 -0400" />
    <DupId amount="24319" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[templates][preferences] Popup misses focus on linux/gtk</Summery>
    <Patches amount="1">
      <Patch>
        <index>CompletionProposalPopup.java</index>
        <original_file>CompletionProposalPopup.java</original_file>
        <modified_file>CompletionProposalPopup.java</modified_file>
        <Hunks>
          <hunk>return;&#xD;
&#xD;
 			&#xD;
&#xD;
 		Control control= fViewer.getTextWidget();&#xD;
&#xD;
-		fProposalShell= new Shell(control.getShell(), SWT.ON_TOP | SWT.RESIZE );&#xD;
&#xD;
+		fProposalShell= new Shell(control.getShell(), SWT.RESIZE );&#xD;
&#xD;
 		fProposalTable= new Table(fProposalShell, SWT.H_SCROLL | SWT.V_SCROLL);&#xD;
&#xD;
 		&#xD;
&#xD;
 		fProposalTable.setLocation(0, 0);</hunk>
        </Hunks>
      </Patch>
    </Patches>
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="assignment">
        <location start="1809" end="1853" />
        <code>Control control= fViewer.getTextWidget();</code>
      </source_code>
      <source_code type="assignment">
        <location start="1854" end="1929" />
        <code>-		fProposalShell= new Shell(control.getShell(), SWT.ON_TOP | SWT.RESIZE );</code>
      </source_code>
      <source_code type="assignment">
        <location start="1930" end="1992" />
        <code>+		fProposalShell= new Shell(control.getShell(), SWT.RESIZE );</code>
      </source_code>
      <source_code type="assignment">
        <location start="1993" end="2067" />
        <code>fProposalTable= new Table(fProposalShell, SWT.H_SCROLL | SWT.V_SCROLL);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2072" end="2108" />
        <code>fProposalTable.setLocation(0, 0);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In Preferences-&gt;Java-&gt;Code Generation-&gt;Code and Comments I selected "New Java
Files" and opened it for edit. In the Editor I typed the "$" and the popup with
the proposals appeared. But I can't select anything in the popup because I can't
set the focus to the popup by using the keyboard. When I try to leave the popup
by pressing ESC the popup doesn't disappear. I MUST select something with the
Mouse and then it disappears.
moving to jdt.text
I assume code assist in the editor works fine, rigtht?

Adam, can you try to reproduce this.

Yes, the code assist is working fine. No Problem at all.
yes, confirmed on GTK. all remarks in the original description are confirmed.
i tried it on 20030806
The problem is most likely caused by the usage of SWT.ON_TOP when creating the
shell in CompletionProposalPopup (see also bug 30380).

Other occurrences that need to be revisited:
org.eclipse.jdt.internal.ui.text.link.contentassist.CompletionProposalPopup2.createProposalSelector()
org.eclipse.jdt.internal.ui.text.link.contentassist.ContextInformationPopup2.createContextInfoPopup()
org.eclipse.jdt.internal.ui.text.link.contentassist.ContextInformationPopup2.createContextSelector()
org.eclipse.jface.text.contentassist.ContextInformationPopup.createContextInfoPopup()
org.eclipse.jface.text.contentassist.ContextInformationPopup.createContextSelector()

Index: CompletionProposalPopup.java
===================================================================
RCS file:
/home/eclipse/org.eclipse.jface.text/src/org/eclipse/jface/text/contentassist/CompletionProposalPopup.java,v
retrieving revision 1.25
diff -u -r1.25 CompletionProposalPopup.java
--- CompletionProposalPopup.java	13 Aug 2003 09:02:31 -0000	1.25
+++ CompletionProposalPopup.java	25 Aug 2003 15:36:03 -0000
@@ -207,7 +207,7 @@
 			return;
 			
 		Control control= fViewer.getTextWidget();
-		fProposalShell= new Shell(control.getShell(), SWT.ON_TOP | SWT.RESIZE );
+		fProposalShell= new Shell(control.getShell(), SWT.RESIZE );
 		fProposalTable= new Table(fProposalShell, SWT.H_SCROLL | SWT.V_SCROLL);
 		
 		fProposalTable.setLocation(0, 0);

When fixing this bug we should also consider bug 41889.
Works on Linux-Motif (I20030917)


I tested using SWT.RESIZE instead of (SWT.ON_TOP | SWT.RESIZE) but this made the
problem even worse: the content assist window closes immediately (for both the
content assist in the preferences and the one on the editor).

See also comments in bug 41889, comment 5.
Moving to SWT for comment.
*** Bug 43806 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 24319 ***</WithStack>
    <WithOutStack>In Preferences-&gt;Java-&gt;Code Generation-&gt;Code and Comments I selected "New Java
Files" and opened it for edit. In the Editor I typed the "$" and the popup with
the proposals appeared. But I can't select anything in the popup because I can't
set the focus to the popup by using the keyboard. When I try to leave the popup
by pressing ESC the popup doesn't disappear. I MUST select something with the
Mouse and then it disappears.
moving to jdt.text
I assume code assist in the editor works fine, rigtht?

Adam, can you try to reproduce this.

Yes, the code assist is working fine. No Problem at all.
yes, confirmed on GTK. all remarks in the original description are confirmed.
i tried it on 20030806
The problem is most likely caused by the usage of SWT.ON_TOP when creating the
shell in CompletionProposalPopup (see also bug 30380).

Other occurrences that need to be revisited:
org.eclipse.jdt.internal.ui.text.link.contentassist.CompletionProposalPopup2.createProposalSelector()
org.eclipse.jdt.internal.ui.text.link.contentassist.ContextInformationPopup2.createContextInfoPopup()
org.eclipse.jdt.internal.ui.text.link.contentassist.ContextInformationPopup2.createContextSelector()
org.eclipse.jface.text.contentassist.ContextInformationPopup.createContextInfoPopup()
org.eclipse.jface.text.contentassist.ContextInformationPopup.createContextSelector()

Index: CompletionProposalPopup.java
===================================================================
RCS file:
/home/eclipse/org.eclipse.jface.text/src/org/eclipse/jface/text/contentassist/CompletionProposalPopup.java,v
retrieving revision 1.25
diff -u -r1.25 CompletionProposalPopup.java
--- CompletionProposalPopup.java	13 Aug 2003 09:02:31 -0000	1.25
+++ CompletionProposalPopup.java	25 Aug 2003 15:36:03 -0000
@@ -207,7 +207,7 @@
 			return;
 			
 		Control control= fViewer.getTextWidget();
-		fProposalShell= new Shell(control.getShell(), SWT.ON_TOP | SWT.RESIZE );
+		fProposalShell= new Shell(control.getShell(), SWT.RESIZE );
 		fProposalTable= new Table(fProposalShell, SWT.H_SCROLL | SWT.V_SCROLL);
 		
 		fProposalTable.setLocation(0, 0);

When fixing this bug we should also consider bug 41889.
Works on Linux-Motif (I20030917)


I tested using SWT.RESIZE instead of (SWT.ON_TOP | SWT.RESIZE) but this made the
problem even worse: the content assist window closes immediately (for both the
content assist in the preferences and the one on the editor).

See also comments in bug 41889, comment 5.
Moving to SWT for comment.
*** Bug 43806 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 24319 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40529" />
    <CreationDate amount="2003-07-19 19:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>SWT examples: setup doc bug</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In swt_manual_setup.html, all paths still refer to 2.1.0 instead of 2.1.1. 
This is no big issue for .jar and .zip files, as these will usually be found 
by browsing. But for the java.library.path, which many like me will cut and 
paste into eclipse, this is fatal: when one runs the examples, one gets link 
errors.
VI to just fix this.
I will fix this for 3.0 but 2.1.1 has shipped and there is nothing we can do 
about it now.
Fixed in Head for 3.0.</WithStack>
    <WithOutStack>In swt_manual_setup.html, all paths still refer to 2.1.0 instead of 2.1.1. 
This is no big issue for .jar and .zip files, as these will usually be found 
by browsing. But for the java.library.path, which many like me will cut and 
paste into eclipse, this is fatal: when one runs the examples, one gets link 
errors.
VI to just fix this.
I will fix this for 3.0 but 2.1.1 has shipped and there is nothing we can do 
about it now.
Fixed in Head for 3.0.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40530" />
    <CreationDate amount="2003-07-19 21:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Tasks] Enable "Quick Fix" menu item for &gt;1 item selected in Problems view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>If I have a bunch of "Superfluous semicolons" to quick fix, I have to do them
one at a time: right-click, Quick-Fix, right-click, Quick-Fix, etc... It is a
bit of a pain. The Quick Fix menu item is a cool feature though!

Thanks.
3.0.m2
You are using quick fix in the problem view: Moving to desktop
This would also be useful of course for other warnings and quick fixes like:
"Unnecessary cast to type XXX for expression of type YYY"
I am very happy to see this PR as Assinged as I have just found a giant pile of
different "The static field ClassC.FOO should be accessed directly" and I really
do not want to fix these one by one!

Looking forward to this addition.

Thanks.

*** Bug 48713 has been marked as a duplicate of this bug. ***
*** Bug 48811 has been marked as a duplicate of this bug. ***
*** Bug 64674 has been marked as a duplicate of this bug. ***
I'm also looking forward to this enhancement: when porting a project from JDK
1.4 to JDK 1.5 I switched on 'Missing @override annotation' to 'warning' in the
project preferences as it prevents me from making mistakes. Because this
annotation was not present in 1.4, I now have to add this annotation to every
override in this project. Actually, I have 25 projects, with 4602 occurences of
this warning :-(. 

It would be *very* nice if I could just select all "The method xxx() of type Xxx
should be tagged with @Override since it actually overrides a superclass method"
warnings and apply a QuickFix to all of them at once.
There are currently no plans to work on this feature
Last week we discussed a possible solution to this. Tod, ask Boris.</WithStack>
    <WithOutStack>If I have a bunch of "Superfluous semicolons" to quick fix, I have to do them
one at a time: right-click, Quick-Fix, right-click, Quick-Fix, etc... It is a
bit of a pain. The Quick Fix menu item is a cool feature though!

Thanks.
3.0.m2
You are using quick fix in the problem view: Moving to desktop
This would also be useful of course for other warnings and quick fixes like:
"Unnecessary cast to type XXX for expression of type YYY"
I am very happy to see this PR as Assinged as I have just found a giant pile of
different "The static field ClassC.FOO should be accessed directly" and I really
do not want to fix these one by one!

Looking forward to this addition.

Thanks.

*** Bug 48713 has been marked as a duplicate of this bug. ***
*** Bug 48811 has been marked as a duplicate of this bug. ***
*** Bug 64674 has been marked as a duplicate of this bug. ***
I'm also looking forward to this enhancement: when porting a project from JDK
1.4 to JDK 1.5 I switched on 'Missing @override annotation' to 'warning' in the
project preferences as it prevents me from making mistakes. Because this
annotation was not present in 1.4, I now have to add this annotation to every
override in this project. Actually, I have 25 projects, with 4602 occurences of
this warning :-(. 

It would be *very* nice if I could just select all "The method xxx() of type Xxx
should be tagged with @Override since it actually overrides a superclass method"
warnings and apply a QuickFix to all of them at once.
There are currently no plans to work on this feature
Last week we discussed a possible solution to this. Tod, ask Boris.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40531" />
    <CreationDate amount="2003-07-19 21:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add quick fix for "The static field Class.FIELD should be accessed directly"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Please add a quick fix for "The static field Class.FIELD should be accessed
directly".

Thanks.
added &gt; 20030721</WithStack>
    <WithOutStack>Please add a quick fix for "The static field Class.FIELD should be accessed
directly".

Thanks.
added &gt; 20030721</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40532" />
    <CreationDate amount="2003-07-20 05:19:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 98" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>C-Build doesn't have an executable path.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When running make file from within C-Build in the CDT plug-in for Eclipse it
doesn't appear to pay attention to the defined DOS Path:

C:\msys\1.0\bin\make -k clean all
make: rm: Command not found
rm -rf hello.exe main.o
make: *** [clean] Error 127
make: g++: Command not found
g++ -g -o hello.exe    main.o
make: *** [all] Error 127 

The PATH environment variable has been set-up correctly:

C:\WINDOWS&gt;path
PATH=C:\MSYS\1.0\BIN;C:\MINGW\BIN

Which is clearly correct as the make runs fine from the DOS Prompt:

C:\HelloWorld&gt;make -k clean all
rm -rf hello.exe main.o
g++ -g   -c -o main.o main.cpp
g++ -g -o hello.exe     main.o
I had a similar problem.  I initially attempted to resolve it using full paths 
to executables in the makefile:

RM=c:\\cygwin\\bin\\rm.exe

This failed with a message:

c:\cygwin\bin\rm.exe: not found

I was able to get around this by using:

RM=/cygdrive/c/cygwin/bin/rm

However, when using g++, I received the following error:

A required .DLL file, CYGWIN1.DLL, was not found.

I am attempting to remedy this now and will post a response here if I am 
successful.
Since it is possible to override environmental variables in a makefile, I found 
that this worked:

PATH:=$(PATH):/cygdrive/c/cygwin/bin

It resolved the DLL not found error as well.
Not sure we can close this PR, yet.

But setting the PATH to point where the binaries of Mingwin are should
have been sufficient.

Do you what can have cause this ?
Did you have a typo in the PATH definition ?

Strange ....
No feedback.  Pr set to Fixed.
Are you refering to the Windows environment variable or the makefile override?

As I stated in my original post:

"The PATH environment variable has been set-up correctly:

C:\WINDOWS&gt;path
PATH=C:\MSYS\1.0\BIN;C:\MINGW\BIN

Which is clearly correct as the make runs fine from the DOS Prompt."

The makefile override is not a good solution, making it specific you a single 
platform's configuration.
I use mingw regularly and have not seen this problem.

Your notes are suspicious as your path actually appears to be too short.  
Without the Windows and System32 directories in it, nothing should be working.

One suggestion, change your build command to be 'cmd /c set path' and do a 
Build Project and send in what happens.
&gt; Your notes are suspicious as your path actually appears to be too short.  
&gt; Without the Windows and System32 directories in it, nothing should be 
working.

It is truncated so as not to fill the screen with my DOS path.

&gt; One suggestion, change your build command to be 'cmd /c set path' and do a 
&gt; Build Project and send in what happens.

Unfortunately hard to test as I have since moved to XP.</WithStack>
    <WithOutStack>When running make file from within C-Build in the CDT plug-in for Eclipse it
doesn't appear to pay attention to the defined DOS Path:

C:\msys\1.0\bin\make -k clean all
make: rm: Command not found
rm -rf hello.exe main.o
make: *** [clean] Error 127
make: g++: Command not found
g++ -g -o hello.exe    main.o
make: *** [all] Error 127 

The PATH environment variable has been set-up correctly:

C:\WINDOWS&gt;path
PATH=C:\MSYS\1.0\BIN;C:\MINGW\BIN

Which is clearly correct as the make runs fine from the DOS Prompt:

C:\HelloWorld&gt;make -k clean all
rm -rf hello.exe main.o
g++ -g   -c -o main.o main.cpp
g++ -g -o hello.exe     main.o
I had a similar problem.  I initially attempted to resolve it using full paths 
to executables in the makefile:

RM=c:\\cygwin\\bin\\rm.exe

This failed with a message:

c:\cygwin\bin\rm.exe: not found

I was able to get around this by using:

RM=/cygdrive/c/cygwin/bin/rm

However, when using g++, I received the following error:

A required .DLL file, CYGWIN1.DLL, was not found.

I am attempting to remedy this now and will post a response here if I am 
successful.
Since it is possible to override environmental variables in a makefile, I found 
that this worked:

PATH:=$(PATH):/cygdrive/c/cygwin/bin

It resolved the DLL not found error as well.
Not sure we can close this PR, yet.

But setting the PATH to point where the binaries of Mingwin are should
have been sufficient.

Do you what can have cause this ?
Did you have a typo in the PATH definition ?

Strange ....
No feedback.  Pr set to Fixed.
Are you refering to the Windows environment variable or the makefile override?

As I stated in my original post:

"The PATH environment variable has been set-up correctly:

C:\WINDOWS&gt;path
PATH=C:\MSYS\1.0\BIN;C:\MINGW\BIN

Which is clearly correct as the make runs fine from the DOS Prompt."

The makefile override is not a good solution, making it specific you a single 
platform's configuration.
I use mingw regularly and have not seen this problem.

Your notes are suspicious as your path actually appears to be too short.  
Without the Windows and System32 directories in it, nothing should be working.

One suggestion, change your build command to be 'cmd /c set path' and do a 
Build Project and send in what happens.
&gt; Your notes are suspicious as your path actually appears to be too short.  
&gt; Without the Windows and System32 directories in it, nothing should be 
working.

It is truncated so as not to fill the screen with my DOS path.

&gt; One suggestion, change your build command to be 'cmd /c set path' and do a 
&gt; Build Project and send in what happens.

Unfortunately hard to test as I have since moved to XP.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40533" />
    <CreationDate amount="2003-07-20 06:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Interrupting synch with Remote CVS in the new Synchronize view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. in the progress view select the job running the synchronization and press</Line>
          <Line>cancel.</Line>
          <Line>2. run another synchronization and the current will be cancelled before the</Line>
          <Line>next is started.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I very impressed from new M2 (thanks!) but can you add to the new
Synchronization view some ability for interrupting synchronization process? In
the old view Eclipse uses window with "Cancel" button but new one hasn't such
possibility at all.
Thanks!
There are two ways to interrupt a synchronization. They are based on the new 
progress support in Eclipse. Background jobs are managed via the progress view.

1. in the progress view select the job running the synchronization and press 
cancel.
2. run another synchronization and the current will be cancelled before the 
next is started.

Hope this helps.
Sorry, I sent wrong feature request. I meant follow: when in the new
Synchronization view you select "Refresh with remote" item from context menu
then system cursor transforming into hourglass and you can't block or interrupt
this operation. Meanwhile, I couldn't.
I would like (and I hope other people too!) ability for interrupting of this
process... 

Regards.
In he status bar the progress for the sync is shown. The red button is the 
cancel button. Use that to cancel the operation.</WithStack>
    <WithOutStack>I very impressed from new M2 (thanks!) but can you add to the new
Synchronization view some ability for interrupting synchronization process? In
the old view Eclipse uses window with "Cancel" button but new one hasn't such
possibility at all.
Thanks!
There are two ways to interrupt a synchronization. They are based on the new 
progress support in Eclipse. Background jobs are managed via the progress view.

1. in the progress view select the job running the synchronization and press 
cancel.
2. run another synchronization and the current will be cancelled before the 
next is started.

Hope this helps.
Sorry, I sent wrong feature request. I meant follow: when in the new
Synchronization view you select "Refresh with remote" item from context menu
then system cursor transforming into hourglass and you can't block or interrupt
this operation. Meanwhile, I couldn't.
I would like (and I hope other people too!) ability for interrupting of this
process... 

Regards.
In he status bar the progress for the sync is shown. The red button is the 
cancel button. Use that to cancel the operation.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40534" />
    <CreationDate amount="2003-07-20 12:16:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.1.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>Declare warning/error output - more detail required.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="256" end="472" />
        <code>public class A
{
  public static void main(String[] args)
  {
    A a = new A();
    a.doSomething();
    System.out.println("All done");
  }

  void doSomething()
  {
    System.out.println("Doing something");
  }
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="541" end="571" />
        <code>call(* *.doSomething(..));</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>At present the declare warning and declare error functionality of the compiler 
provides no detailed information about what it is in the user code that has led 
to the generation of the compile-time warning or error. 

Consider the following test case...

public class A
{
  public static void main(String[] args)
  {
    A a = new A();
    a.doSomething();
    System.out.println("All done");
  }

  void doSomething()
  {
    System.out.println("Doing something");
  }
} // end of class A


public aspect MyAspect
{
  pointcut noDoing() :
    call(* *.doSomething(..));

  declare warning : noDoing() :
    "Don't do it!";
} 

When I compile these two files I get the following warning ...

c:\src\A.java:16 Don't do it!

..which is great if all I want to know is where the offending code is. But not 
nearly enough if I want to know what it is on the line that is contravening the 
policy (or policies) that I have specified in my aspect. In the above example it 
would be even more useful if the warning message was something like ...

c:\src\A.java:16 Don't do it! : calling method : void A.doSomething()

For large projects where there is an architectural imperative to reduce or 
completely remove coupling between certain components declare warning/error 
would be of far greater use if it could return more detailed info to say *why* 
not just *where* the desired enforcement rules have been broken.
Is this different from 31724?  It seems to be part of the residual issue keeping
that bug open.  (The issue is more general: *any* warning or error (not just
declare warning/error) generated during weaving rather than during the compiler
pass will produce a message without source context.)  I actually prefer this bug
priority, so if Mik has a fix perhaps 31724 should be closed with a note saying
this bug is to deal with the remaining issue.  If that bug is closed, any
context-related failing test cases should be associated instead with this bug
(and/or more tests written...).  But since we originally thought this was an
issue that Jim/Erik would have to think together about since the source context
info is not available to the weaver, perhaps this should be closed as a
duplicate of 31724.  
Fixed in 1.1.1
updated target milestone field to 1.1.1</WithStack>
    <WithOutStack>At present the declare warning and declare error functionality of the compiler 
provides no detailed information about what it is in the user code that has led 
to the generation of the compile-time warning or error. 

Consider the following test case...

public class A
{
  public static void main(String[] args)
  {
    A a = new A();
    a.doSomething();
    System.out.println("All done");
  }

  void doSomething()
  {
    System.out.println("Doing something");
  }
} // end of class A


public aspect MyAspect
{
  pointcut noDoing() :
    call(* *.doSomething(..));

  declare warning : noDoing() :
    "Don't do it!";
} 

When I compile these two files I get the following warning ...

c:\src\A.java:16 Don't do it!

..which is great if all I want to know is where the offending code is. But not 
nearly enough if I want to know what it is on the line that is contravening the 
policy (or policies) that I have specified in my aspect. In the above example it 
would be even more useful if the warning message was something like ...

c:\src\A.java:16 Don't do it! : calling method : void A.doSomething()

For large projects where there is an architectural imperative to reduce or 
completely remove coupling between certain components declare warning/error 
would be of far greater use if it could return more detailed info to say *why* 
not just *where* the desired enforcement rules have been broken.
Is this different from 31724?  It seems to be part of the residual issue keeping
that bug open.  (The issue is more general: *any* warning or error (not just
declare warning/error) generated during weaving rather than during the compiler
pass will produce a message without source context.)  I actually prefer this bug
priority, so if Mik has a fix perhaps 31724 should be closed with a note saying
this bug is to deal with the remaining issue.  If that bug is closed, any
context-related failing test cases should be associated instead with this bug
(and/or more tests written...).  But since we originally thought this was an
issue that Jim/Erik would have to think together about since the source context
info is not available to the weaver, perhaps this should be closed as a
duplicate of 31724.  
Fixed in 1.1.1
updated target milestone field to 1.1.1</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40535" />
    <CreationDate amount="2003-07-20 15:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Tasks/Problems] Filtering options not saved in 3.0 M2</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This bug report is for 3.0 M2. 
To reproduce change the filtering options for task or problems window.
Restart Eclipse, the no filtering any more.
Sorry, I installed an older version. It is fixed in 3.0 M2.</WithStack>
    <WithOutStack>This bug report is for 3.0 M2. 
To reproduce change the filtering options for task or problems window.
Restart Eclipse, the no filtering any more.
Sorry, I installed an older version. It is fixed in 3.0 M2.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40536" />
    <CreationDate amount="2003-07-20 16:52:00 -0400" />
    <DupId amount="318682" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>DCR - compiler diagnose for method which could be tagged as static</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 3.0m2


I have another compiler marker that we could have. That is a method could be 
static marker. i.e. check if a method accesses local variables or calls non-
static methods and if not mark that method as "should be static".
Any chance these markers could be addressed for 3.0?
DCR was filled originally inside other report for bug 32285
Will consider later.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.


*** This bug has been marked as a duplicate of bug 318682 ***</WithStack>
    <WithOutStack>Build 3.0m2


I have another compiler marker that we could have. That is a method could be 
static marker. i.e. check if a method accesses local variables or calls non-
static methods and if not mark that method as "should be static".
Any chance these markers could be addressed for 3.0?
DCR was filled originally inside other report for bug 32285
Will consider later.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.


*** This bug has been marked as a duplicate of bug 318682 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40537" />
    <CreationDate amount="2003-07-20 17:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Error reporting on the absence of boot and runtime</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When generating a build script, if boot or runtime is missing, an NPE is 
reported. This should be captured and report the appropriate message.
*** Bug 41408 has been marked as a duplicate of this bug. ***
Fix released in HEAD.
Verified
Verified</WithStack>
    <WithOutStack>When generating a build script, if boot or runtime is missing, an NPE is 
reported. This should be captured and report the appropriate message.
*** Bug 41408 has been marked as a duplicate of this bug. ***
Fix released in HEAD.
Verified
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40538" />
    <CreationDate amount="2003-07-20 21:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>What's wrong with my project?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I donot know what happened with my project.
But it seems I make no error.
Can anyone tell me what is the wrong?
Created attachment 5520
My Error Project(But what is the wrong?)
Sorry, but we need to ask you the same question. If you don't tell us what
problem you are facing is, we cannot help at all. Thanks.
Your code has compile errors because it calls methods that don't exist. You need
to give a better description of what you think is wrong with Eclipse.
I am so sorry to waste your rare time.
It is my wrong.
Eclispe has no problem.
I think java has method
"System.out.println()"
and it should also has method
"System.out.print()."
I am so sorry for this.
The stupid thing will not happen again.</WithStack>
    <WithOutStack>I donot know what happened with my project.
But it seems I make no error.
Can anyone tell me what is the wrong?
Created attachment 5520
My Error Project(But what is the wrong?)
Sorry, but we need to ask you the same question. If you don't tell us what
problem you are facing is, we cannot help at all. Thanks.
Your code has compile errors because it calls methods that don't exist. You need
to give a better description of what you think is wrong with Eclipse.
I am so sorry to waste your rare time.
It is my wrong.
Eclispe has no problem.
I think java has method
"System.out.println()"
and it should also has method
"System.out.print()."
I am so sorry for this.
The stupid thing will not happen again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40539" />
    <CreationDate amount="2003-07-21 02:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>QuickDiff rules should use editor background color</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 3.0M2

The QuickDiff ruler should use the background color of the editor (as defined 
by the user) to draw its own background. Instead it uses the system's default 
background color.
fixed some time ago together with the line number ruler.</WithStack>
    <WithOutStack>Eclipse 3.0M2

The QuickDiff ruler should use the background color of the editor (as defined 
by the user) to draw its own background. Instead it uses the system's default 
background color.
fixed some time ago together with the line number ruler.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40540" />
    <CreationDate amount="2003-07-21 03:11:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Eclipse JVM crashes randomly in GTK native code.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Overview Description: Randomly crashes when clicking on a widget. Last time was
during a debug session.

Steps to Reproduce: Can't reproduce it, but occurs each working day.

Build Date &amp; Platform: 2.1.1 Maintenance release for Linux gtk


Here follow the log for the error.
------------------------------------
An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : 11 occurred at PC=0x593C0C99
Function=(null)+0x593C0C99
Library=/usr/lib/libpango-1.0.so.0

NOTE: We are unable to locate the function name symbol for the error
      just occurred. Please refer to release documentation for possible
      reason and solutions.


Current Java thread:
        at org.eclipse.swt.internal.gtk.OS.pango_layout_get_size(Native Method)
        at org.eclipse.swt.graphics.GC.stringExtent(GC.java:1755)
        at
org.eclipse.swt.custom.StyledTextRenderer.getTextWidth(StyledTextRenderer.java:685)
        at
org.eclipse.swt.custom.StyledText$ContentWidthCache.contentWidth(StyledText.java:1263)
        at
org.eclipse.swt.custom.StyledText$ContentWidthCache.calculate(StyledText.java:1212)
        at
org.eclipse.swt.custom.StyledText.calculateContentWidth(StyledText.java:1915)
        at org.eclipse.swt.custom.StyledText.reset(StyledText.java:6635)
        at org.eclipse.swt.custom.StyledText.handleTextSet(StyledText.java:5434)
        at org.eclipse.swt.custom.StyledText$6.textSet(StyledText.java:4925)
        at
org.eclipse.jface.text.DocumentAdapter.fireTextSet(DocumentAdapter.java:309)
        at
org.eclipse.jface.text.DocumentAdapter.documentChanged(DocumentAdapter.java:232)
        at
org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:588)
        at
org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:563)
        at
org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java:623)
        at
org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:906)
        at
org.eclipse.debug.internal.ui.views.variables.VariablesView$5.run(VariablesView.java:873)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at
org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:98)
        - locked &lt;0x44875cd0&gt; (a org.eclipse.swt.widgets.RunnableLock)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1618)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1436)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
        at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
        at org.eclipse.core.launcher.Main.run(Main.java:747)
        at org.eclipse.core.launcher.Main.main(Main.java:583)

Dynamic libraries ( not include dbug I keep them available ).

Local Time = Mon Jul 21 08:43:34 2003
Elapsed Time = 590
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.4.1_01-b01 mixed mode)
#

------------------------------------
Please provide information about the version of Linux you are running and the 
version of GTK you have installed

e.g. rpm -q gtk; rpm -q pango; rpm -q glib2; rpm -q atk

Also, please see the minimum requirements for Eclipse:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/faq.html#gtkstartup

Sorry, that should read "rpm -q gtk2" in my previous comment.
My Linux is REDHAT8.

For libraries, it seems to be ok : 

gtk2-2.0.6-8

atk-1.0.3-1

pango-1.1.1-1

glib2-2.0.6-2

freetype-2.1.2-7
Felipe, 

Pease investigate.

Pascal, 

Can you please provide your locale information (&gt;locale) and do the following:

From the top menu choose Help-&gt;About Eclipse Plaform.  In the dialog click on 
Configuration Details.  This will open an editor called "Configuration 
Details".  Can you copy these details into this bug report?

Thank you.
Created attachment 5527
Configuration details file

This file contains the configuration details file generated from eclipse menu.
I removed all errors that occured while using 2.1 and only kept 2.1.1 related
errors.
I added configuration details as an attachement, 
here follows the "locale" command output
-----------------------------------------[heraudp@loki heraudp]$ locale
LANG=en_US
LC_CTYPE="en_US"
LC_NUMERIC="en_US"
LC_TIME="en_US"
LC_COLLATE="en_US"
LC_MONETARY="en_US"
LC_MESSAGES="en_US"
LC_PAPER="en_US"
LC_NAME="en_US"
LC_ADDRESS="en_US"
LC_TELEPHONE="en_US"
LC_MEASUREMENT="en_US"
LC_IDENTIFICATION="en_US"
LC_ALL=


-----------------------------------------
I can reliably reproduce this in my current workspace; however, I do not
believe I have the right to share the workspace with all its files. I do not
know how soon I will run into a base case. Briefly about my setup and
problem:

RedHat 7.2 with hand-compiled GTK 2.2.2, Pango 1.2.3, ATK 1.2.4 on Linux @
Pentium 4 (gcc version 3.0.2, default optimization levels when compiling).

Eclipse 2.1.1-gtk2, binary downloaded from eclipse.org.

My locale settings are identical.  

I open the workspace, start a debug session, set a breakpoint, trace in a 
few methods deep (Java debug), add a watch of an ArrayList to Expressions,
try to open it, and it crashes. I will attach my log; it is substantially
identical, but also has the loaded libraries.

Let me know what amount of work I need to do to track it down locally.
Created attachment 5531
The log, as promised.
I had again and again this problem, Always in GTK and never the same ?  :
---------------------------------------
An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : 11 occurred at PC=0x5933E443
Function=(null)+0x5933E443
Library=/usr/lib/libgdk-x11-2.0.so.0

NOTE: We are unable to locate the function name symbol for the error
      just occurred. Please refer to release documentation for possible
      reason and solutions.


Current Java thread:
        at org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1432)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
        at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
        at org.eclipse.core.launcher.Main.run(Main.java:747)
        at org.eclipse.core.launcher.Main.main(Main.java:583)

---------------------------------------

------- Additional Comment #9 From Heraud 2003-08-11 08:38 -------  
I had again and again this problem, Always in GTK and never the same ?  : 
--------------------------------------- 
An unexpected exception has been detected in native code outside the VM. 
Unexpected Signal : 11 occurred at PC=0x5933E443 
Function=(null)+0x5933E443 
Library=/usr/lib/libgdk-x11-2.0.so.0 
 
 
The same to me on RH 9.0 with eeclipse 2.2.1gtk 
This keeps happening to me, too, and different things seem to set it off
periodically. Maybe it's a timing thing? Are we running out of memory
consistently or something?

Error reported by the program:

JVM terminated. Exit code=1
/local/scratch/JBuilder8/jdk1.4/bin/java
-cp /local/scratch/eclipse/startup.jar org.eclipse.core.launcher.Main
-os linux
-ws gtk
-arch x86
-showsplash /local/scratch/eclipse/eclipse -showsplash 600
-data /laser/users/rasmith/Personal/classes/NLP/ 
org.eclipse.swt.custom.StyledTextRenderer.getTextWidth()
doesn't exist anymore, I don't think this problem still happen.
I'm closing it, please reopen it if it happens on Eclipse 3.0 M9 or later, 
please also attach a new stacktrace.</WithStack>
    <WithOutStack>Overview Description: Randomly crashes when clicking on a widget. Last time was
during a debug session.

Steps to Reproduce: Can't reproduce it, but occurs each working day.

Build Date &amp; Platform: 2.1.1 Maintenance release for Linux gtk


Here follow the log for the error.
------------------------------------
An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : 11 occurred at PC=0x593C0C99
Function=(null)+0x593C0C99
Library=/usr/lib/libpango-1.0.so.0

NOTE: We are unable to locate the function name symbol for the error
      just occurred. Please refer to release documentation for possible
      reason and solutions.


Current Java thread:
        at org.eclipse.swt.internal.gtk.OS.pango_layout_get_size(Native Method)
        at org.eclipse.swt.graphics.GC.stringExtent(GC.java:1755)
        at
org.eclipse.swt.custom.StyledTextRenderer.getTextWidth(StyledTextRenderer.java:685)
        at
org.eclipse.swt.custom.StyledText$ContentWidthCache.contentWidth(StyledText.java:1263)
        at
org.eclipse.swt.custom.StyledText$ContentWidthCache.calculate(StyledText.java:1212)
        at
org.eclipse.swt.custom.StyledText.calculateContentWidth(StyledText.java:1915)
        at org.eclipse.swt.custom.StyledText.reset(StyledText.java:6635)
        at org.eclipse.swt.custom.StyledText.handleTextSet(StyledText.java:5434)
        at org.eclipse.swt.custom.StyledText$6.textSet(StyledText.java:4925)
        at
org.eclipse.jface.text.DocumentAdapter.fireTextSet(DocumentAdapter.java:309)
        at
org.eclipse.jface.text.DocumentAdapter.documentChanged(DocumentAdapter.java:232)
        at
org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:588)
        at
org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:563)
        at
org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java:623)
        at
org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:906)
        at
org.eclipse.debug.internal.ui.views.variables.VariablesView$5.run(VariablesView.java:873)
        at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
        at
org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:98)
        - locked &lt;0x44875cd0&gt; (a org.eclipse.swt.widgets.RunnableLock)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1618)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1436)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
        at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
        at org.eclipse.core.launcher.Main.run(Main.java:747)
        at org.eclipse.core.launcher.Main.main(Main.java:583)

Dynamic libraries ( not include dbug I keep them available ).

Local Time = Mon Jul 21 08:43:34 2003
Elapsed Time = 590
#
# The exception above was detected in native code outside the VM
#
# Java VM: Java HotSpot(TM) Client VM (1.4.1_01-b01 mixed mode)
#

------------------------------------
Please provide information about the version of Linux you are running and the 
version of GTK you have installed

e.g. rpm -q gtk; rpm -q pango; rpm -q glib2; rpm -q atk

Also, please see the minimum requirements for Eclipse:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-swt-
home/faq.html#gtkstartup

Sorry, that should read "rpm -q gtk2" in my previous comment.
My Linux is REDHAT8.

For libraries, it seems to be ok : 

gtk2-2.0.6-8

atk-1.0.3-1

pango-1.1.1-1

glib2-2.0.6-2

freetype-2.1.2-7
Felipe, 

Pease investigate.

Pascal, 

Can you please provide your locale information (&gt;locale) and do the following:

From the top menu choose Help-&gt;About Eclipse Plaform.  In the dialog click on 
Configuration Details.  This will open an editor called "Configuration 
Details".  Can you copy these details into this bug report?

Thank you.
Created attachment 5527
Configuration details file

This file contains the configuration details file generated from eclipse menu.
I removed all errors that occured while using 2.1 and only kept 2.1.1 related
errors.
I added configuration details as an attachement, 
here follows the "locale" command output
-----------------------------------------[heraudp@loki heraudp]$ locale
LANG=en_US
LC_CTYPE="en_US"
LC_NUMERIC="en_US"
LC_TIME="en_US"
LC_COLLATE="en_US"
LC_MONETARY="en_US"
LC_MESSAGES="en_US"
LC_PAPER="en_US"
LC_NAME="en_US"
LC_ADDRESS="en_US"
LC_TELEPHONE="en_US"
LC_MEASUREMENT="en_US"
LC_IDENTIFICATION="en_US"
LC_ALL=


-----------------------------------------
I can reliably reproduce this in my current workspace; however, I do not
believe I have the right to share the workspace with all its files. I do not
know how soon I will run into a base case. Briefly about my setup and
problem:

RedHat 7.2 with hand-compiled GTK 2.2.2, Pango 1.2.3, ATK 1.2.4 on Linux @
Pentium 4 (gcc version 3.0.2, default optimization levels when compiling).

Eclipse 2.1.1-gtk2, binary downloaded from eclipse.org.

My locale settings are identical.  

I open the workspace, start a debug session, set a breakpoint, trace in a 
few methods deep (Java debug), add a watch of an ArrayList to Expressions,
try to open it, and it crashes. I will attach my log; it is substantially
identical, but also has the loaded libraries.

Let me know what amount of work I need to do to track it down locally.
Created attachment 5531
The log, as promised.
I had again and again this problem, Always in GTK and never the same ?  :
---------------------------------------
An unexpected exception has been detected in native code outside the VM.
Unexpected Signal : 11 occurred at PC=0x5933E443
Function=(null)+0x5933E443
Library=/usr/lib/libgdk-x11-2.0.so.0

NOTE: We are unable to locate the function name symbol for the error
      just occurred. Please refer to release documentation for possible
      reason and solutions.


Current Java thread:
        at org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1432)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
        at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
        at org.eclipse.core.launcher.Main.run(Main.java:747)
        at org.eclipse.core.launcher.Main.main(Main.java:583)

---------------------------------------

------- Additional Comment #9 From Heraud 2003-08-11 08:38 -------  
I had again and again this problem, Always in GTK and never the same ?  : 
--------------------------------------- 
An unexpected exception has been detected in native code outside the VM. 
Unexpected Signal : 11 occurred at PC=0x5933E443 
Function=(null)+0x5933E443 
Library=/usr/lib/libgdk-x11-2.0.so.0 
 
 
The same to me on RH 9.0 with eeclipse 2.2.1gtk 
This keeps happening to me, too, and different things seem to set it off
periodically. Maybe it's a timing thing? Are we running out of memory
consistently or something?

Error reported by the program:

JVM terminated. Exit code=1
/local/scratch/JBuilder8/jdk1.4/bin/java
-cp /local/scratch/eclipse/startup.jar org.eclipse.core.launcher.Main
-os linux
-ws gtk
-arch x86
-showsplash /local/scratch/eclipse/eclipse -showsplash 600
-data /laser/users/rasmith/Personal/classes/NLP/ 
org.eclipse.swt.custom.StyledTextRenderer.getTextWidth()
doesn't exist anymore, I don't think this problem still happen.
I'm closing it, please reopen it if it happens on Eclipse 3.0 M9 or later, 
please also attach a new stacktrace.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40541" />
    <CreationDate amount="2003-07-21 04:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE in launch configuration dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340804134">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.debug.internal.ui.launchConfigurations.PerspectivesTab.initializeFrom(PerspectivesTab.java:271)</Frame>
          <Frame depth="1">org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom(AbstractLaunchConfigurationTabGroup.java:86)</Frame>
          <Frame depth="2">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.displaySharedTabs(LaunchConfigurationTabGroupViewer.java:578)</Frame>
          <Frame depth="3">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer$5.run(LaunchConfigurationTabGroupViewer.java:474)</Frame>
          <Frame depth="4">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="5">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.inputChanged(LaunchConfigurationTabGroupViewer.java:484)</Frame>
          <Frame depth="6">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.setInput(LaunchConfigurationTabGroupViewer.java:443)</Frame>
          <Frame depth="7">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:856)</Frame>
          <Frame depth="8">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog$2.selectionChanged(LaunchConfigurationsDialog.java:628)</Frame>
          <Frame depth="9">org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)</Frame>
          <Frame depth="10">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015)</Frame>
          <Frame depth="11">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="12">org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)</Frame>
          <Frame depth="13">org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1282)</Frame>
          <Frame depth="14">org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:652)</Frame>
          <Frame depth="15">org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:676)</Frame>
          <Frame depth="16">org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:178)</Frame>
          <Frame depth="17">org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:173)</Frame>
          <Frame depth="18">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:308)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)</Frame>
          <Frame depth="23">org.eclipse.jface.window.Window.runEventLoop(Window.java:583)</Frame>
          <Frame depth="24">org.eclipse.jface.window.Window.open(Window.java:563)</Frame>
          <Frame depth="25">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.openDialogOnSelection(LaunchConfigurationsDialog.java:491)</Frame>
          <Frame depth="26">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:445)</Frame>
          <Frame depth="27">org.eclipse.debug.ui.DebugUITools$1.run(DebugUITools.java:381)</Frame>
          <Frame depth="28">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="29">org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:385)</Frame>
          <Frame depth="30">org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:327)</Frame>
          <Frame depth="31">org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:79)</Frame>
          <Frame depth="32">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="33">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:542)</Frame>
          <Frame depth="34">org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:496)</Frame>
          <Frame depth="35">org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:468)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)</Frame>
          <Frame depth="38">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)</Frame>
          <Frame depth="40">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1630)</Frame>
          <Frame depth="41">org.eclipse.ui.internal.Workbench.run(Workbench.java:1613)</Frame>
          <Frame depth="42">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="43">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="44">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="45">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="46">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="47">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="48">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="49">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="50">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When I try to select default run/debug perspectives for my launch configuration
type, Eclipse can not find descriptor (as I see in source) for my perspective.
For my other launch configuration types I don't see NPE. Here are definition of
perspectives, launch configurations and stack trace.

   &lt;extension
         point="org.eclipse.ui.perspectives"&gt;
      &lt;perspective
            name="Profiler"
            icon="icons/profiler2.gif"
            class="ru.nlmk.eclipse.plugins.profiler.ProfilerPerspectiveFactory"
            id="ru.nlmk.eclipse.plugins.profiler.ProfilerPerspective"&gt;
      &lt;/perspective&gt;
      &lt;perspective
            name="Profiler (threads)"
            icon="icons/perspective_threads.gif"
           
class="ru.nlmk.eclipse.plugins.profiler.ProfilerThreadsPerspectiveFactory"
            id="ru.nlmk.eclipse.plugins.profiler.ProfilerThreadsPerspective"&gt;
      &lt;/perspective&gt;
   &lt;/extension&gt;
   &lt;extension
         point="org.eclipse.debug.core.launchConfigurationTypes"&gt;
      &lt;launchConfigurationType
            name="Profiler"
           
delegate="ru.nlmk.eclipse.plugins.profiler.launch.ProfilerLaunchConfigurationDelegate"
            modes="run,debug"
            id="ru.nlmk.eclipse.plugin.profiler.launch.image"&gt;
      &lt;/launchConfigurationType&gt;
      &lt;launchConfigurationType
            name="Remote Profiler"
           
delegate="ru.nlmk.eclipse.plugins.profiler.launch.remote.LaunchConfigurationDelegate"
            modes="run"
            id="ru.nlmk.eclipse.plugin.profiler.launch.remote.image"&gt;
      &lt;/launchConfigurationType&gt;
   &lt;/extension&gt;
   &lt;extension
         point="org.eclipse.debug.ui.launchConfigurationTypeImages"&gt;
      &lt;launchConfigurationTypeImage
            icon="icons/profiler2.gif"
            configTypeID="ru.nlmk.eclipse.plugin.profiler.launch.image"
            id="ru.nlmk.eclipse.plugin.profiler.launch.image"&gt;
      &lt;/launchConfigurationTypeImage&gt;
      &lt;launchConfigurationTypeImage
            icon="icons/profiler2_remote.gif"
            configTypeID="ru.nlmk.eclipse.plugin.profiler.launch.remote.image"
            id="ru.nlmk.eclipse.plugin.profiler.launch.remote.image"&gt;
      &lt;/launchConfigurationTypeImage&gt;
   &lt;/extension&gt;
   &lt;extension
         point="org.eclipse.debug.ui.launchConfigurationTabGroups"&gt;
      &lt;launchConfigurationTabGroup
            type="ru.nlmk.eclipse.plugin.profiler.launch.image"
            class="ru.nlmk.eclipse.plugins.profiler.launch.ProfilerTabGroup"
            id="ru.nlmk.eclipse.plugins.profiler.launch.ProfilerTabGroup"&gt;
      &lt;/launchConfigurationTabGroup&gt;
      &lt;launchConfigurationTabGroup
            type="ru.nlmk.eclipse.plugin.profiler.launch.remote.image"
            class="ru.nlmk.eclipse.plugins.profiler.launch.remote.TabGroup"
            id="ru.nlmk.eclipse.plugins.profiler.launch.remote.TabGroup"&gt;
      &lt;/launchConfigurationTabGroup&gt;
   &lt;/extension&gt;


!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jface".
!STACK 0
java.lang.NullPointerException
	at
org.eclipse.debug.internal.ui.launchConfigurations.PerspectivesTab.initializeFrom(PerspectivesTab.java:271)
	at
org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom(AbstractLaunchConfigurationTabGroup.java:86)
	at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.displaySharedTabs(LaunchConfigurationTabGroupViewer.java:578)
	at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer$5.run(LaunchConfigurationTabGroupViewer.java:474)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
	at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.inputChanged(LaunchConfigurationTabGroupViewer.java:484)
	at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationTabGroupViewer.setInput(LaunchConfigurationTabGroupViewer.java:443)
	at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.handleLaunchConfigurationSelectionChanged(LaunchConfigurationsDialog.java:856)
	at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog$2.selectionChanged(LaunchConfigurationsDialog.java:628)
	at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java:159)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java:157)
	at
org.eclipse.jface.viewers.StructuredViewer.updateSelection(StructuredViewer.java:1282)
	at
org.eclipse.jface.viewers.StructuredViewer.handleSelect(StructuredViewer.java:652)
	at
org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected(StructuredViewer.java:676)
	at org.eclipse.jface.util.OpenStrategy.fireSelectionEvent(OpenStrategy.java:178)
	at org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java:173)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:308)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
	at org.eclipse.jface.window.Window.open(Window.java:563)
	at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.openDialogOnSelection(LaunchConfigurationsDialog.java:491)
	at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:445)
	at org.eclipse.debug.ui.DebugUITools$1.run(DebugUITools.java:381)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
	at
org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:385)
	at
org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:327)
	at
org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:79)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:542)
	at
org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:496)
	at
org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:468)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1630)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1613)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Have you changed your perspective IDs recently? It looks like the perspective 
ID stored in the config does not match any registered perspective ID.
Oops, yes, you are right, perspective ID was changed.
After I changed name in runtime-workbench XML files, I can again activate page
for perspective selection without NPE.

May be it will be good to show message, that perspective not found, instead of
NPE? In case of NPE it is not very easy to fix this problem - manual changes in
internal configs are required...
Yes, we should protect against the NPE.
This has been fixed as part of other work.
If the descriptor for the perspective is not found, we default to no 
perspective switching.
Please verify Luc.
Verified.</WithStack>
    <WithOutStack>When I try to select default run/debug perspectives for my launch configuration
type, Eclipse can not find descriptor (as I see in source) for my perspective.
For my other launch configuration types I don't see NPE. Here are definition of
perspectives, launch configurations and stack trace.

   &lt;extension
         point="org.eclipse.ui.perspectives"&gt;
      &lt;perspective
            name="Profiler"
            icon="icons/profiler2.gif"
            class="ru.nlmk.eclipse.plugins.profiler.ProfilerPerspectiveFactory"
            id="ru.nlmk.eclipse.plugins.profiler.ProfilerPerspective"&gt;
      &lt;/perspective&gt;
      &lt;perspective
            name="Profiler (threads)"
            icon="icons/perspective_threads.gif"
           
class="ru.nlmk.eclipse.plugins.profiler.ProfilerThreadsPerspectiveFactory"
            id="ru.nlmk.eclipse.plugins.profiler.ProfilerThreadsPerspective"&gt;
      &lt;/perspective&gt;
   &lt;/extension&gt;
   &lt;extension
         point="org.eclipse.debug.core.launchConfigurationTypes"&gt;
      &lt;launchConfigurationType
            name="Profiler"
           
delegate="ru.nlmk.eclipse.plugins.profiler.launch.ProfilerLaunchConfigurationDelegate"
            modes="run,debug"
            id="ru.nlmk.eclipse.plugin.profiler.launch.image"&gt;
      &lt;/launchConfigurationType&gt;
      &lt;launchConfigurationType
            name="Remote Profiler"
           
delegate="ru.nlmk.eclipse.plugins.profiler.launch.remote.LaunchConfigurationDelegate"
            modes="run"
            id="ru.nlmk.eclipse.plugin.profiler.launch.remote.image"&gt;
      &lt;/launchConfigurationType&gt;
   &lt;/extension&gt;
   &lt;extension
         point="org.eclipse.debug.ui.launchConfigurationTypeImages"&gt;
      &lt;launchConfigurationTypeImage
            icon="icons/profiler2.gif"
            configTypeID="ru.nlmk.eclipse.plugin.profiler.launch.image"
            id="ru.nlmk.eclipse.plugin.profiler.launch.image"&gt;
      &lt;/launchConfigurationTypeImage&gt;
      &lt;launchConfigurationTypeImage
            icon="icons/profiler2_remote.gif"
            configTypeID="ru.nlmk.eclipse.plugin.profiler.launch.remote.image"
            id="ru.nlmk.eclipse.plugin.profiler.launch.remote.image"&gt;
      &lt;/launchConfigurationTypeImage&gt;
   &lt;/extension&gt;
   &lt;extension
         point="org.eclipse.debug.ui.launchConfigurationTabGroups"&gt;
      &lt;launchConfigurationTabGroup
            type="ru.nlmk.eclipse.plugin.profiler.launch.image"
            class="ru.nlmk.eclipse.plugins.profiler.launch.ProfilerTabGroup"
            id="ru.nlmk.eclipse.plugins.profiler.launch.ProfilerTabGroup"&gt;
      &lt;/launchConfigurationTabGroup&gt;
      &lt;launchConfigurationTabGroup
            type="ru.nlmk.eclipse.plugin.profiler.launch.remote.image"
            class="ru.nlmk.eclipse.plugins.profiler.launch.remote.TabGroup"
            id="ru.nlmk.eclipse.plugins.profiler.launch.remote.TabGroup"&gt;
      &lt;/launchConfigurationTabGroup&gt;
   &lt;/extension&gt;


!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jface".
!STACK 0

Have you changed your perspective IDs recently? It looks like the perspective 
ID stored in the config does not match any registered perspective ID.
Oops, yes, you are right, perspective ID was changed.
After I changed name in runtime-workbench XML files, I can again activate page
for perspective selection without NPE.

May be it will be good to show message, that perspective not found, instead of
NPE? In case of NPE it is not very easy to fix this problem - manual changes in
internal configs are required...
Yes, we should protect against the NPE.
This has been fixed as part of other work.
If the descriptor for the perspective is not found, we default to no 
perspective switching.
Please verify Luc.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40542" />
    <CreationDate amount="2003-07-21 05:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>JUnit - status bar should better show test class name [JUnit]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 3.0M2

In addition to showing the test method name, it should prefix it with the class 
name. The test hierarchy shows this information, but the animation time penalty 
is quite bad, and for big suites, it is not a viable alternative.
Just to clarify.

Currently, JUnit shows the class name but behind the method name:

testSomething(TestPackage)

but when iterating across test, the trailing portion moves a lot and thus isn't 
readable. Since it is more stable that the test method name, it should be 
displayed before:

TestPackage#testSomething
Created attachment 5725
firx
released fix with some tweaks (avoid duplicating extracting testclass/method, 
a different rendering)</WithStack>
    <WithOutStack>Build 3.0M2

In addition to showing the test method name, it should prefix it with the class 
name. The test hierarchy shows this information, but the animation time penalty 
is quite bad, and for big suites, it is not a viable alternative.
Just to clarify.

Currently, JUnit shows the class name but behind the method name:

testSomething(TestPackage)

but when iterating across test, the trailing portion moves a lot and thus isn't 
readable. Since it is more stable that the test method name, it should be 
displayed before:

TestPackage#testSomething
Created attachment 5725
firx
released fix with some tweaks (avoid duplicating extracting testclass/method, 
a different rendering)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40543" />
    <CreationDate amount="2003-07-21 05:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug" />
    <Version amount="1.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add embedded (or better eCos) debug target</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I've managed to use "GDB server" to debug my eCos embedded target, but really 
CDT should come with a specialised "Embedded" or even better :-) "eCos via GDB" 
debug target.

AFAICT, something like what Daniel Thompson has sumbitted to the cdt-debug-dev 
mailing list could be adapted to an "eCos GDB" debug target, but it is is 
beyond my current skillset. (I speak Java and C++, but I don't speak Eclipse 
plugins). 

http://dev.eclipse.org/mhonarc/lists/cdt-debug-dev/msg00317.html


If I have understood correctly, the CDT team envisages that eventually these 
sort of interfaces between CDT and the debug target will be written by the 
users, but it is a tall order to learn the Eclipse plugin development SDK "just 
to configure the debugger". 


Meanwhile, my plan is to continue to hack and slash the "GDB server" per 
postings in the mailing lists.

Øyvind
PR was not targeted to any particular release. Changing target milestone to 2.1
If it is decided to implement the idle mode below, this PR would be moot.

https://bugs.eclipse.org/bugs/show_bug.cgi?id=70895

I suggest closing this bug. Recent progress in CDT has made this issue moot.

("ecos.ecc" editing capabilities would be cool, but I really don't see that as
the CDT team's job, besides it has nothing to do with the debugger.)

For those listening in to this PR, take a look at:

http://www.zylin.com/embeddedcdt.html

I'm sure you'll find that CDT handles eCos debug target pretty well these days.

Øyvind

Good. Marking as FIXED.</WithStack>
    <WithOutStack>I've managed to use "GDB server" to debug my eCos embedded target, but really 
CDT should come with a specialised "Embedded" or even better :-) "eCos via GDB" 
debug target.

AFAICT, something like what Daniel Thompson has sumbitted to the cdt-debug-dev 
mailing list could be adapted to an "eCos GDB" debug target, but it is is 
beyond my current skillset. (I speak Java and C++, but I don't speak Eclipse 
plugins). 

http://dev.eclipse.org/mhonarc/lists/cdt-debug-dev/msg00317.html


If I have understood correctly, the CDT team envisages that eventually these 
sort of interfaces between CDT and the debug target will be written by the 
users, but it is a tall order to learn the Eclipse plugin development SDK "just 
to configure the debugger". 


Meanwhile, my plan is to continue to hack and slash the "GDB server" per 
postings in the mailing lists.

Øyvind
PR was not targeted to any particular release. Changing target milestone to 2.1
If it is decided to implement the idle mode below, this PR would be moot.

https://bugs.eclipse.org/bugs/show_bug.cgi?id=70895

I suggest closing this bug. Recent progress in CDT has made this issue moot.

("ecos.ecc" editing capabilities would be cool, but I really don't see that as
the CDT team's job, besides it has nothing to do with the debugger.)

For those listening in to this PR, take a look at:

http://www.zylin.com/embeddedcdt.html

I'm sure you'll find that CDT handles eCos debug target pretty well these days.

Øyvind

Good. Marking as FIXED.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40544" />
    <CreationDate amount="2003-07-21 05:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>StackOverflowError renaming field [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340804134">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:444)</Frame>
          <Frame depth="2">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="3">org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:441)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:1636)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.ensureRefreshedTypeHierarchy(TypeHierarchyLifeCycle.java:122)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.updateInput(TypeHierarchyViewPart.java:465)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.setInputElement(TypeHierarchyViewPart.java:446)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.openInViewPart(OpenTypeHierarchyUtil.java:94)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.open(OpenTypeHierarchyUtil.java:75)</Frame>
          <Frame depth="10">org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run(OpenTypeHierarchyAction.java:175)</Frame>
          <Frame depth="11">org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run(OpenTypeHierarchyAction.java:141)</Frame>
          <Frame depth="12">org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:196)</Frame>
          <Frame depth="13">org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172)</Frame>
          <Frame depth="14">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="15">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:542)</Frame>
          <Frame depth="16">org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:496)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:468)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)</Frame>
          <Frame depth="24">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="25">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="26">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="27">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="28">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="29">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="8">
      <source_code type="assignment">
        <location start="2579" end="2637" />
        <code>if (typeBinding == null || subType == null) return false;</code>
      </source_code>
      <source_code type="assignment">
        <location start="2638" end="2679" />
        <code>if (subType == typeBinding) return true;</code>
      </source_code>
      <source_code type="assignment">
        <location start="2680" end="2732" />
        <code>ReferenceBinding superclass = subType.superclass();</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2733" end="2807" />
        <code>//	if (superclass != null &amp;&amp; superclass.id == TypeIds.T_JavaLangObject &amp;&amp;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2807" end="2855" />
        <code>subType.isHierarchyInconsistent()) return false;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2856" end="2918" />
        <code>if (this.subTypeOfType(superclass, typeBinding)) return true;</code>
      </source_code>
      <source_code type="assignment">
        <location start="2919" end="2983" />
        <code>ReferenceBinding[] superInterfaces = subType.superInterfaces();</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="2984" end="3281" />
        <code>if (superInterfaces != null) {
		for (int i = 0, length = superInterfaces.length; i &lt; length;
i++) {
			try {
				if (this.subTypeOfType(superInterfaces[i],
typeBinding))
					return true;
			} catch (Error e) {
				System.out.println("Error:");
				e.printStackTrace();
				throw e;
			}
		} 
	}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>I get a StackOverflowError when I want to rename a field in large classes (about
800 lines), with smaller classes it works. The error occured in 2.1 and later. I
wasn't able to reproduce the error with another project. I dint't try with
another OS. My project has about 2000 classes.

!SESSION Jul 21, 2003 10:36:16.288 ---------------------------------------------
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_DE
Command-line arguments: -os win32 -ws win32 -arch x86 -data c:\projekte2
-install file:C:/Programme/eclipse3.0M2/eclipse/
!ENTRY org.eclipse.ui 4 4 Jul 21, 2003 10:36:16.288
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jul 21, 2003 10:36:16.304
!MESSAGE java.lang.StackOverflowError
!STACK 0
java.lang.StackOverflowError
is this the whole stacktrace? 
yes
I debuged the the latest Integration build(I20030723). I think the problem is 
in "org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver" in 
the  "subTypeOfType(ReferenceBinding, ReferenceBinding)" method. I can catch 
the Error there.
Ralf, do you have a reproducable test case which you can attach. That would 
really help.
No I have not. As I said, I have a large projekt with about 2000 classes and 
several libs. The class I have problems with has the following Hierarchy

Class1 implements Interface1, Serializable
Class2 extends class1
Class3 extends class2
MyClass extends class3

with serveral other classes extending class1 and class2 and several classes 
extending my class. I just recognized that trying to open the Type Hierarchy 
fails with this Exception in the log, so perhaps the problem is because of the 
complex structure of that hierarchy. I'll try to reproduce it with other 
classes.

!ENTRY org.eclipse.jdt.ui 4 10001 Aug 04, 2003 10:30:55.838
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.window.ApplicationWindow$1.run
(ApplicationWindow.java:444)
	at org.eclipse.swt.custom.BusyIndicator.showWhile
(BusyIndicator.java:84)
	at org.eclipse.jface.window.ApplicationWindow.run
(ApplicationWindow.java:441)
	at org.eclipse.ui.internal.WorkbenchWindow.run
(WorkbenchWindow.java:1636)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyLifeCycle.ensureRefreshe
dTypeHierarchy(TypeHierarchyLifeCycle.java:122)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.updateInput
(TypeHierarchyViewPart.java:465)
	at 
org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.setInputElement
(TypeHierarchyViewPart.java:446)
	at 
org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.openInViewPart
(OpenTypeHierarchyUtil.java:94)
	at org.eclipse.jdt.internal.ui.util.OpenTypeHierarchyUtil.open
(OpenTypeHierarchyUtil.java:75)
	at org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run
(OpenTypeHierarchyAction.java:175)
	at org.eclipse.jdt.ui.actions.OpenTypeHierarchyAction.run
(OpenTypeHierarchyAction.java:141)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun
(SelectionDispatchAction.java:196)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run
(SelectionDispatchAction.java:172)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:542)
	at org.eclipse.jface.action.ActionContributionItem.access$4
(ActionContributionItem.java:496)
	at org.eclipse.jface.action.ActionContributionItem$6.handleEvent
(ActionContributionItem.java:468)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: java.lang.StackOverflowError
Movingt o JDT/Core for comments since #3 indicates that it happens in 
org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.

Ralf,

you mentioned that you can debug it. The debugger allows you to generate a 
stack trace as well (select the stack frame and simple copy it to clipboard). 
Can you attach the stack tract of the debugger so that we know the calling 
sequence that causes the failure.

Thanks Dirk
Created attachment 5624
StackTrace in the debugger

It took me about 15 minutes of 100% CPU ;-), but here is the stack in the
debugger. I inserted a try catch:
private boolean subTypeOfType(ReferenceBinding subType, ReferenceBinding
typeBinding) {
	if (typeBinding == null || subType == null) return false;
	if (subType == typeBinding) return true;
	ReferenceBinding superclass = subType.superclass();
//	if (superclass != null &amp;&amp; superclass.id == TypeIds.T_JavaLangObject &amp;&amp;
subType.isHierarchyInconsistent()) return false;
	if (this.subTypeOfType(superclass, typeBinding)) return true;
	ReferenceBinding[] superInterfaces = subType.superInterfaces();
	if (superInterfaces != null) {
		for (int i = 0, length = superInterfaces.length; i &lt; length;
i++) {
			try {
				if (this.subTypeOfType(superInterfaces[i],
typeBinding))
					return true;
			} catch (Error e) {
				System.out.println("Error:");
				e.printStackTrace();
				throw e;
			}
		} 
	}
	return false;
}
The stack is in the catch block.
Thanks for taking the time to produce the stack trace.
There is nothing obviously wrong in HierarchyResolver.subTypeOfType(...). 
Unless you can find a test case, I'm not sure what we can do.

Also have you tried to increase the stack size (passing the -Xss argument to 
the VM)?
Yes I tried the -Xss argument with even large values, but with no effect. Could
it be some kind of circular dependence of my classes or interfaces ? No idea
what.    I tried to find a test case, but didnt't manage to create one until now. 
Thanks for the info. The only solution to debug this problem would be either a 
test case, or that you zip your workspace and post it somewhere I can download 
it.
Okay, I'll try to find a test case. Could you give me a hint to some sample
Junit tests which could be useful for me ? (Create a project, classes,
interfaces ...)
I cant't send you my workspace, because it contains confidential classes.
I didn't expect you write code that reproduce the problem. I just expected that 
you would give me a set of classes (not the original ones, but classes that 
have been renamed with no method bodies for example), so that with this set of 
classes I could see the problem.
Please reopen if you have a test case.
Got a test case in e-mail. Verified this is fixed in M4.
Closing.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I get a StackOverflowError when I want to rename a field in large classes (about
800 lines), with smaller classes it works. The error occured in 2.1 and later. I
wasn't able to reproduce the error with another project. I dint't try with
another OS. My project has about 2000 classes.

!SESSION Jul 21, 2003 10:36:16.288 ---------------------------------------------
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=de_DE
Command-line arguments: -os win32 -ws win32 -arch x86 -data c:\projekte2
-install file:C:/Programme/eclipse3.0M2/eclipse/
!ENTRY org.eclipse.ui 4 4 Jul 21, 2003 10:36:16.288
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jul 21, 2003 10:36:16.304
!MESSAGE java.lang.StackOverflowError
!STACK 0
java.lang.StackOverflowError
is this the whole stacktrace? 
yes
I debuged the the latest Integration build(I20030723). I think the problem is 
in "org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver" in 
the  "subTypeOfType(ReferenceBinding, ReferenceBinding)" method. I can catch 
the Error there.
Ralf, do you have a reproducable test case which you can attach. That would 
really help.
No I have not. As I said, I have a large projekt with about 2000 classes and 
several libs. The class I have problems with has the following Hierarchy

Class1 implements Interface1, Serializable
Class2 extends class1
Class3 extends class2
MyClass extends class3

with serveral other classes extending class1 and class2 and several classes 
extending my class. I just recognized that trying to open the Type Hierarchy 
fails with this Exception in the log, so perhaps the problem is because of the 
complex structure of that hierarchy. I'll try to reproduce it with other 
classes.

!ENTRY org.eclipse.jdt.ui 4 10001 Aug 04, 2003 10:30:55.838
!MESSAGE Internal Error
!STACK 0

Caused by: java.lang.StackOverflowError
Movingt o JDT/Core for comments since #3 indicates that it happens in 
org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver.

Ralf,

you mentioned that you can debug it. The debugger allows you to generate a 
stack trace as well (select the stack frame and simple copy it to clipboard). 
Can you attach the stack tract of the debugger so that we know the calling 
sequence that causes the failure.

Thanks Dirk
Created attachment 5624
StackTrace in the debugger

It took me about 15 minutes of 100% CPU ;-), but here is the stack in the
debugger. I inserted a try catch:
private boolean subTypeOfType(ReferenceBinding subType, ReferenceBinding
typeBinding) {
	if (typeBinding == null || subType == null) return false;
	if (subType == typeBinding) return true;
	ReferenceBinding superclass = subType.superclass();
//	if (superclass != null &amp;&amp; superclass.id == TypeIds.T_JavaLangObject &amp;&amp;
subType.isHierarchyInconsistent()) return false;
	if (this.subTypeOfType(superclass, typeBinding)) return true;
	ReferenceBinding[] superInterfaces = subType.superInterfaces();
	if (superInterfaces != null) {
		for (int i = 0, length = superInterfaces.length; i &lt; length;
i++) {
			try {
				if (this.subTypeOfType(superInterfaces[i],
typeBinding))
					return true;
			} catch (Error e) {
				System.out.println("Error:");
				e.printStackTrace();
				throw e;
			}
		} 
	}
	return false;
}
The stack is in the catch block.
Thanks for taking the time to produce the stack trace.
There is nothing obviously wrong in HierarchyResolver.subTypeOfType(...). 
Unless you can find a test case, I'm not sure what we can do.

Also have you tried to increase the stack size (passing the -Xss argument to 
the VM)?
Yes I tried the -Xss argument with even large values, but with no effect. Could
it be some kind of circular dependence of my classes or interfaces ? No idea
what.    I tried to find a test case, but didnt't manage to create one until now. 
Thanks for the info. The only solution to debug this problem would be either a 
test case, or that you zip your workspace and post it somewhere I can download 
it.
Okay, I'll try to find a test case. Could you give me a hint to some sample
Junit tests which could be useful for me ? (Create a project, classes,
interfaces ...)
I cant't send you my workspace, because it contains confidential classes.
I didn't expect you write code that reproduce the problem. I just expected that 
you would give me a set of classes (not the original ones, but classes that 
have been renamed with no method bodies for example), so that with this set of 
classes I could see the problem.
Please reopen if you have a test case.
Got a test case in e-mail. Verified this is fixed in M4.
Closing.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40545" />
    <CreationDate amount="2003-07-21 06:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Check plugins dependencies from the runtime workbench run dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1- From Menu, select run...</Line>
          <Line>2- Select Runtime workbench (and create a new runtime configuration)</Line>
          <Line>3- Select Plugins and Fragments tab, then select "Choose plugins and fragments</Line>
          <Line>to launch from the list".</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It would be nice to have Eclipse check plugins and fragments dependencies in the
run dialog box, when you want to test a plugin in a runtime workbench.

1- From Menu, select run...
2- Select Runtime workbench (and create a new runtime configuration)
3- Select Plugins and Fragments tab, then select "Choose plugins and fragments
to launch from the list". 

On this list, Eclipse should be able to verify the dependencies of each plugin
and fragment, instead of asking developers to remember all the plugin dependencies. 

It's much faster to start up a runtime workbench if you can limit the list to
very few plugins. But currently, you have to know all the dependencies of each
plugin, otherwise, the runtime workbench will just exists without giving you
much information. And the log file is not very helpful either.

Adding this feature is probably a half-a-day work, but it would save a lot of
times to other application developers, especially new people who have not
remembered all the dependencies yet (even for those who are quite familiar with
Eclipse, this is still too much...)
Reasonable request.  Never occurred to me that it's that badly needed because 
I always run with the full set of plug-ins.
One condition: when PDE is computing the required plug-ins, if a workspace 
plug-in has the same id as an external plug-in, the workspace plug-in wins.
Done.
Thanks! Can't wait to try it out.</WithStack>
    <WithOutStack>It would be nice to have Eclipse check plugins and fragments dependencies in the
run dialog box, when you want to test a plugin in a runtime workbench.

1- From Menu, select run...
2- Select Runtime workbench (and create a new runtime configuration)
3- Select Plugins and Fragments tab, then select "Choose plugins and fragments
to launch from the list". 

On this list, Eclipse should be able to verify the dependencies of each plugin
and fragment, instead of asking developers to remember all the plugin dependencies. 

It's much faster to start up a runtime workbench if you can limit the list to
very few plugins. But currently, you have to know all the dependencies of each
plugin, otherwise, the runtime workbench will just exists without giving you
much information. And the log file is not very helpful either.

Adding this feature is probably a half-a-day work, but it would save a lot of
times to other application developers, especially new people who have not
remembered all the dependencies yet (even for those who are quite familiar with
Eclipse, this is still too much...)
Reasonable request.  Never occurred to me that it's that badly needed because 
I always run with the full set of plug-ins.
One condition: when PDE is computing the required plug-ins, if a workspace 
plug-in has the same id as an external plug-in, the workspace plug-in wins.
Done.
Thanks! Can't wait to try it out.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40546" />
    <CreationDate amount="2003-07-21 06:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Java Source Hover] Include representation of immediately assigned final fields</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Currently the java source hover displays the type, name and optional comment 
of class fields.
In my opinion it would be a nice enhancement to additionally display the value 
of (static) final fields of numeric (int,float,..) and textual (String,char) 
type, esp. for NLS.
use the source hover (Ctrl + Mouse Hover)</WithStack>
    <WithOutStack>Currently the java source hover displays the type, name and optional comment 
of class fields.
In my opinion it would be a nice enhancement to additionally display the value 
of (static) final fields of numeric (int,float,..) and textual (String,char) 
type, esp. for NLS.
use the source hover (Ctrl + Mouse Hover)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40547" />
    <CreationDate amount="2003-07-21 06:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>(3.0 M2) Export to .jar fails</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437340804144">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:758)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.ui.jarpackager.JarPackageWizard.executeExportOperation(JarPackageWizard.java:172)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.jarpackager.JarPackageWizard.performFinish(JarPackageWizard.java:146)</Frame>
          <Frame depth="4">org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:608)</Frame>
          <Frame depth="5">org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:321)</Frame>
          <Frame depth="6">org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:423)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)</Frame>
          <Frame depth="12">org.eclipse.jface.window.Window.runEventLoop(Window.java:583)</Frame>
          <Frame depth="13">org.eclipse.jface.window.Window.open(Window.java:563)</Frame>
          <Frame depth="14">org.eclipse.ui.actions.ExportResourcesAction.run(ExportResourcesAction.java:112)</Frame>
          <Frame depth="15">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="16">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:542)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:496)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:468)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)</Frame>
          <Frame depth="25">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="26">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="27">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="28">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="29">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="30">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437340804144">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.ui.jarpackager.JarFileExportOperation.countSelectedElements(JarFileExportOperation.java:197)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.ui.jarpackager.JarFileExportOperation.singleRun(JarFileExportOperation.java:736)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.ui.jarpackager.JarFileExportOperation.execute(JarFileExportOperation.java:725)</Frame>
          <Frame depth="3">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:71)</Frame>
          <Frame depth="4">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1595)</Frame>
          <Frame depth="5">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:85)</Frame>
          <Frame depth="6">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When I select three different files within the same project but within different
packages and try to "Export..." them, I get the following Exception in
JarFileExportOperation.countSelectedElements():

java.lang.reflect.InvocationTargetException
at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:758)
at
org.eclipse.jdt.internal.ui.jarpackager.JarPackageWizard.executeExportOperation(JarPackageWizard.java:172)
at
org.eclipse.jdt.internal.ui.jarpackager.JarPackageWizard.performFinish(JarPackageWizard.java:146)
at org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:608)
at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:321)
at org.eclipse.jface.dialogs.Dialog$1.widgetSelected(Dialog.java:423)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)
at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
at org.eclipse.jface.window.Window.open(Window.java:563)
at org.eclipse.ui.actions.ExportResourcesAction.run(ExportResourcesAction.java:112)
at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:542)
at
org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:496)
at
org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:468)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
at org.eclipse.core.launcher.Main.run(Main.java:747)
at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: java.lang.NullPointerException
at
org.eclipse.jdt.internal.ui.jarpackager.JarFileExportOperation.countSelectedElements(JarFileExportOperation.java:197)
at
org.eclipse.jdt.internal.ui.jarpackager.JarFileExportOperation.singleRun(JarFileExportOperation.java:736)
at
org.eclipse.jdt.internal.ui.jarpackager.JarFileExportOperation.execute(JarFileExportOperation.java:725)
at
org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:71)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1595)
at
org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:85)
at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)
After restarting, the file selection was remembered and I tried "Export..." on
it again: now it worked. Looks like I won't be able to reproduce it, sorry...
Daniel, please comment
Are you sure you run on 3.0 M2? The source line numbers do not match 3.0 M2 code. 

Stack trace look like R2.1 code.
Protected the access against NPE.

Please, ignore my comments about not running 3.0 M2. I had newer unreleased code
in my workspace which shifted the numbers.

I just had a "mid-air collision" when I wanted to say that I might have clicked
the wrong icon and that from now on, the 2.1 and 3.0 M2 icon will be securely
separated on my desktop ;)</WithStack>
    <WithOutStack>When I select three different files within the same project but within different
packages and try to "Export..." them, I get the following Exception in
JarFileExportOperation.countSelectedElements():



After restarting, the file selection was remembered and I tried "Export..." on
it again: now it worked. Looks like I won't be able to reproduce it, sorry...
Daniel, please comment
Are you sure you run on 3.0 M2? The source line numbers do not match 3.0 M2 code. 

Stack trace look like R2.1 code.
Protected the access against NPE.

Please, ignore my comments about not running 3.0 M2. I had newer unreleased code
in my workspace which shifted the numbers.

I just had a "mid-air collision" when I wanted to say that I might have clicked
the wrong icon and that from now on, the 2.1 and 3.0 M2 icon will be securely
separated on my desktop ;)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40548" />
    <CreationDate amount="2003-07-21 06:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[EditorMgmt] Printing disabled for assembly (.s) files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>When an assembly file (extension .s) is selected in the main editor view the 
file&gt;print menu item, and corresponding toolbar item, is disabled. I have tried 
this with other files such as various source files and object files, and as 
many other extensions that I could, and it seems to be only the .s files that 
cause printing to be disabled.
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.</WithStack>
    <WithOutStack>When an assembly file (extension .s) is selected in the main editor view the 
file&gt;print menu item, and corresponding toolbar item, is disabled. I have tried 
this with other files such as various source files and object files, and as 
many other extensions that I could, and it seems to be only the .s files that 
cause printing to be disabled.
As per http://wiki.eclipse.org/Platform_UI/Bug_Triage_Change_2009
Remy is now responsible for watching the [EditorMgmt] component area.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40549" />
    <CreationDate amount="2003-07-21 08:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[reconciling] IllegalThreadStateException in reconciler</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437340804144">
        <Exception>java.lang.IllegalThreadStateException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="2">java.lang.IllegalThreadStateException.&lt;init&gt;(IllegalThreadStateException.java:55)</Frame>
          <Frame depth="3">java.lang.Thread.start(Thread.java:964)</Frame>
          <Frame depth="4">org.eclipse.jface.text.reconciler.AbstractReconciler.startReconciling(AbstractReconciler.java:487)</Frame>
          <Frame depth="5">org.eclipse.jface.text.reconciler.AbstractReconciler.forceReconciling(AbstractReconciler.java:474)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.text.JavaReconciler.forceReconciling(JavaReconciler.java:117)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.text.JavaReconciler$PartListener.partActivated(JavaReconciler.java:45)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java)</Frame>
          <Frame depth="9">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java)</Frame>
          <Frame depth="10">org.eclipse.core.runtime.Platform.run(Platform.java)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.PartListenerList.firePartActivated(PartListenerList.java)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.WWinPartService$1.partActivated(WWinPartService.java:27)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.PartListenerList2$1.run(PartListenerList2.java:45)</Frame>
          <Frame depth="14">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java)</Frame>
          <Frame depth="15">org.eclipse.core.runtime.Platform.run(Platform.java)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.PartListenerList2.firePartActivated(PartListenerList2.java)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.WorkbenchPage.firePartActivated(WorkbenchPage.java:1204)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:2510)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.WorkbenchPage.requestActivation(WorkbenchPage.java:2232)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.PartPane.requestActivation(PartPane.java:334)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.EditorPane.requestActivation(EditorPane.java:136)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.PartPane.handleEvent(PartPane.java:314)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Shell.setActiveControl(Shell.java)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Shell.WM_MOUSEACTIVATE(Shell.java:1324)</Frame>
          <Frame depth="29">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="32">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="33">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="37">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="38">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="42">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="43">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)</Frame>
          <Frame depth="44">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)</Frame>
          <Frame depth="45">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="46">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="47">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="48">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)</Frame>
          <Frame depth="49">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)</Frame>
          <Frame depth="50">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="51">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="52">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="53">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)</Frame>
          <Frame depth="54">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)</Frame>
          <Frame depth="55">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="56">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="57">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="58">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)</Frame>
          <Frame depth="59">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)</Frame>
          <Frame depth="60">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="61">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="62">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="63">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)</Frame>
          <Frame depth="64">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)</Frame>
          <Frame depth="65">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="66">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="67">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="68">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)</Frame>
          <Frame depth="69">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)</Frame>
          <Frame depth="70">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="71">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="72">org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)</Frame>
          <Frame depth="73">org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)</Frame>
          <Frame depth="74">org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)</Frame>
          <Frame depth="75">org.eclipse.swt.widgets.Control.windowProc(Control.java)</Frame>
          <Frame depth="76">org.eclipse.swt.widgets.Display.windowProc(Display.java)</Frame>
          <Frame depth="77">org.eclipse.swt.internal.win32.OS.PeekMessageW(Native Method)</Frame>
          <Frame depth="78">org.eclipse.swt.internal.win32.OS.PeekMessage(OS.java)</Frame>
          <Frame depth="79">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)</Frame>
          <Frame depth="80">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)</Frame>
          <Frame depth="81">org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)</Frame>
          <Frame depth="82">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="83">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="84">java.lang.reflect.AccessibleObject.invokeL(AccessibleObject.java:207)</Frame>
          <Frame depth="85">java.lang.reflect.Method.invoke(Method.java:271)</Frame>
          <Frame depth="86">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="87">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="88">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437340804144">
        <Exception>java.lang.IllegalThreadStateException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.Thread.start(Unknown Source)</Frame>
          <Frame depth="1">org.eclipse.jface.text.reconciler.AbstractReconciler.startReconciling(AbstractReconciler.java:487)</Frame>
          <Frame depth="2">org.eclipse.jface.text.reconciler.AbstractReconciler.forceReconciling(AbstractReconciler.java:474)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.ui.text.JavaReconciler.forceReconciling(JavaReconciler.java:150)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.text.JavaReconciler$ActivationListener.shellActivated(JavaReconciler.java:92)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:163)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:838)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Decorations.WM_ACTIVATE(Decorations.java:1460)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Shell.WM_ACTIVATE(Shell.java:1306)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Control.windowProc(Control.java:2939)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1436)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Display.windowProc(Display.java:2873)</Frame>
          <Frame depth="15">org.eclipse.swt.internal.win32.OS.PeekMessageW(Native Method)</Frame>
          <Frame depth="16">org.eclipse.swt.internal.win32.OS.PeekMessage(OS.java:1759)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2023)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1550)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1526)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:265)</Frame>
          <Frame depth="21">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="23">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:257)</Frame>
          <Frame depth="24">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:104)</Frame>
          <Frame depth="25">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="26">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="27">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="28">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.basicRun(Main.java:279)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.run(Main.java:742)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.main(Main.java:581)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="16">
        <Lines>
          <Line>A) the thread has died already (isAlive() returns false)</Line>
          <Line />
          <Line>1. the reconciler only dies regularly if it has been canceled using cancel(),</Line>
          <Line>which is only called by uninstall(), which nulls out fThread. Since this</Line>
          <Line>uninstall() section and startReconciling() are synchronized, this is safe even</Line>
          <Line>when accessed concurrently. Impossible.</Line>
          <Line>2. reconciler could die from an uncaught run-time exception</Line>
          <Line />
          <Line>B) the thread has been started in between the isAlive() check and starting it.</Line>
          <Line>- the only place that the fThread.start() is called is from within</Line>
          <Line>startReconciling, which is synch'd. Impossible.</Line>
          <Line />
          <Line>C) install(), which sets fThread unsynched, is accessed concurrently to</Line>
          <Line>startReconciling(). This should not happen as install is a lifecycle method that</Line>
          <Line>should not be called repeatedly. It is theoretically possible that a bad</Line>
          <Line>install() call could come in between the isAlive() check and start().</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="5">
        <Lines>
          <Line>1. the reconciler only dies regularly if it has been canceled using cancel(),</Line>
          <Line>which is only called by uninstall(), which nulls out fThread. Since this</Line>
          <Line>uninstall() section and startReconciling() are synchronized, this is safe even</Line>
          <Line>when accessed concurrently. Impossible.</Line>
          <Line>2. reconciler could die from an uncaught run-time exception</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>java.lang.IllegalThreadStateException
at java.lang.Throwable.&lt;init&gt;(Throwable.java)
at java.lang.Throwable.&lt;init&gt;(Throwable.java)
at java.lang.IllegalThreadStateException.&lt;init&gt;
(IllegalThreadStateException.java:55)
at java.lang.Thread.start(Thread.java:964)
at org.eclipse.jface.text.reconciler.AbstractReconciler.startReconciling
(AbstractReconciler.java:487)
at org.eclipse.jface.text.reconciler.AbstractReconciler.forceReconciling
(AbstractReconciler.java:474)
at org.eclipse.jdt.internal.ui.text.JavaReconciler.forceReconciling
(JavaReconciler.java:117)
at org.eclipse.jdt.internal.ui.text.JavaReconciler$PartListener.partActivated
(JavaReconciler.java:45)
at org.eclipse.ui.internal.PartListenerList$1.run(PartListenerList.java)
at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java)
at org.eclipse.core.runtime.Platform.run(Platform.java)
at org.eclipse.ui.internal.PartListenerList.firePartActivated
(PartListenerList.java)
at org.eclipse.ui.internal.WWinPartService$1.partActivated
(WWinPartService.java:27)
at org.eclipse.ui.internal.PartListenerList2$1.run(PartListenerList2.java:45)
at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java)
at org.eclipse.core.runtime.Platform.run(Platform.java)
at org.eclipse.ui.internal.PartListenerList2.firePartActivated
(PartListenerList2.java)
at org.eclipse.ui.internal.WorkbenchPage.firePartActivated
(WorkbenchPage.java:1204)
at org.eclipse.ui.internal.WorkbenchPage.setActivePart(WorkbenchPage.java:2510)
at org.eclipse.ui.internal.WorkbenchPage.requestActivation
(WorkbenchPage.java:2232)
at org.eclipse.ui.internal.PartPane.requestActivation(PartPane.java:334)
at org.eclipse.ui.internal.EditorPane.requestActivation(EditorPane.java:136)
at org.eclipse.ui.internal.PartPane.handleEvent(PartPane.java:314)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
at org.eclipse.swt.widgets.Shell.setActiveControl(Shell.java)
at org.eclipse.swt.widgets.Shell.WM_MOUSEACTIVATE(Shell.java:1324)
at org.eclipse.swt.widgets.Control.windowProc(Control.java)
at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java)
at org.eclipse.swt.widgets.Display.windowProc(Display.java)
at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)
at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)
at org.eclipse.swt.widgets.Control.windowProc(Control.java)
at org.eclipse.swt.widgets.Display.windowProc(Display.java)
at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)
at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)
at org.eclipse.swt.widgets.Control.windowProc(Control.java)
at org.eclipse.swt.widgets.Display.windowProc(Display.java)
at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)
at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)
at org.eclipse.swt.widgets.Control.windowProc(Control.java)
at org.eclipse.swt.widgets.Display.windowProc(Display.java)
at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)
at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)
at org.eclipse.swt.widgets.Control.windowProc(Control.java)
at org.eclipse.swt.widgets.Display.windowProc(Display.java)
at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)
at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)
at org.eclipse.swt.widgets.Control.windowProc(Control.java)
at org.eclipse.swt.widgets.Display.windowProc(Display.java)
at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)
at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)
at org.eclipse.swt.widgets.Control.windowProc(Control.java)
at org.eclipse.swt.widgets.Display.windowProc(Display.java)
at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)
at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)
at org.eclipse.swt.widgets.Control.windowProc(Control.java)
at org.eclipse.swt.widgets.Display.windowProc(Display.java)
at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)
at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)
at org.eclipse.swt.widgets.Control.windowProc(Control.java)
at org.eclipse.swt.widgets.Display.windowProc(Display.java)
at org.eclipse.swt.internal.win32.OS.DefWindowProcW(Native Method)
at org.eclipse.swt.internal.win32.OS.DefWindowProc(OS.java)
at org.eclipse.swt.widgets.Scrollable.callWindowProc(Scrollable.java)
at org.eclipse.swt.widgets.Control.windowProc(Control.java)
at org.eclipse.swt.widgets.Display.windowProc(Display.java)
at org.eclipse.swt.internal.win32.OS.PeekMessageW(Native Method)
at org.eclipse.swt.internal.win32.OS.PeekMessage(OS.java)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
at java.lang.reflect.AccessibleObject.invokeL(AccessibleObject.java:207)
at java.lang.reflect.Method.invoke(Method.java:271)
at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
at org.eclipse.core.launcher.Main.run(Main.java:747)
at org.eclipse.core.launcher.Main.main(Main.java:583)
that's on 3.0 M2
Step? When did it happen? Anything visible in the UI?
sorry, no steps.
i think i was inserting a quick fix proposal (not sure)
no ui problem - just the problem log view came to the front and that's how i 
noticed the problem
3m7 - gettting it continously
java.lang.IllegalThreadStateException
	at java.lang.Thread.start(Unknown Source)
	at org.eclipse.jface.text.reconciler.AbstractReconciler.startReconciling
(AbstractReconciler.java:487)
	at org.eclipse.jface.text.reconciler.AbstractReconciler.forceReconciling
(AbstractReconciler.java:474)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.forceReconciling
(JavaReconciler.java:150)
	at 
org.eclipse.jdt.internal.ui.text.JavaReconciler$ActivationListener.shellActivate
d(JavaReconciler.java:92)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java:163)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:833)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:838)
	at org.eclipse.swt.widgets.Decorations.WM_ACTIVATE
(Decorations.java:1460)
	at org.eclipse.swt.widgets.Shell.WM_ACTIVATE(Shell.java:1306)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2939)
	at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1436)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2873)
	at org.eclipse.swt.internal.win32.OS.PeekMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.PeekMessage(OS.java:1759)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2023)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1550)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1526)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:265)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:47)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:257)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:279)
	at org.eclipse.core.launcher.Main.run(Main.java:742)
	at org.eclipse.core.launcher.Main.main(Main.java:581)

&gt;3m7 - gettting it continously
Do you have steps to reproduce?
*** Bug 65583 has been marked as a duplicate of this bug. ***
Olivier, Can you give us a reference to the files for which you see this? 
Thanks.
I don't have the file anymore, but try to find a huge file and it should not be
difficult to reproduce. I got it by saving code or editing code in that file.
You need to do some edits close to each other. If you wait too long between
edits, you might not see it.
I think a reconciler thread is started before the previous reconciling is finished.
IllegalThreadStateException is thrown on start() if the thread has already been
started. startReconciling() checks whether fThread.isAlive(). Two options:

A) the thread has died already (isAlive() returns false)

  1. the reconciler only dies regularly if it has been canceled using cancel(),
which is only called by uninstall(), which nulls out fThread. Since this
uninstall() section and startReconciling() are synchronized, this is safe even
when accessed concurrently. Impossible.
  2. reconciler could die from an uncaught run-time exception

B) the thread has been started in between the isAlive() check and starting it.
  - the only place that the fThread.start() is called is from within
startReconciling, which is synch'd. Impossible.

C) install(), which sets fThread unsynched, is accessed concurrently to
startReconciling(). This should not happen as install is a lifecycle method that
should not be called repeatedly. It is theoretically possible that a bad
install() call could come in between the isAlive() check and start().

This leaves A.1 as the only option: we get an uncaught runtime exception or
error in the reconciler thread, which dies. A later call to startReconciling()
will see that !isAlive() and try to start it, which results in the
IllegalThreadStateException.
I will attempt a fix along these lines: 

- assert the proper call sequence for install() to rule out case C. We can do
this easily by checking whether fThread is non-null. This check must be
synchronized.

- the isAlive() check in startReconciling is not enough if the reconciler thread
died. We should catch the IllegalThreadState and log it.

- if the reconciler dies unexpectedly due to, say, an OutOfMemoryError (which
might be what comment 8, "try to find a huge file" is pointing to), this should
have been printed to stdout. Adam and Olivier, do you remember seeing anything
on a console? Anyway, we should probably take note of such a case and somehow
(?) log it.
Created attachment 12128
AbstractReconciler.java.diff

Patch for AbstractReconciler as outlined in my previous comment. It simply
catches the IllegalThreadStateException - we have to discuss what to do in this
case.

It does not do anything about uncaught exceptions in the reconciler.
I don't remember anything specific about another exception or error during the
reconciling. I just had the log about the illegalThreadStateException. It seems
to happen a lot when editing quickly several times a huge file.
It is like the previous reconciling thread had not enough time to complete and
another one is started. If editing a second time cancels the first thread maybe
the thread did not have time to stop.
We don't start reconciling threads upon file modification (except for the first
modification) - rather, there is always a reconciler thread waiting that is
kicked off by changes or model updates. 

So, if you saw this on almost every keystroke, I suspect that the reconciler
thread died earlier. Then, everytime a forceReconcile is triggered, you will see
the IllegalThreadState. ForceReconcile is triggerd upon partActivation,
shellActivation, and resourceChanges.
approved by Kai. released for I200406171600</WithStack>
    <WithOutStack>that's on 3.0 M2
Step? When did it happen? Anything visible in the UI?
sorry, no steps.
i think i was inserting a quick fix proposal (not sure)
no ui problem - just the problem log view came to the front and that's how i 
noticed the problem
3m7 - gettting it continously


&gt;3m7 - gettting it continously
Do you have steps to reproduce?
*** Bug 65583 has been marked as a duplicate of this bug. ***
Olivier, Can you give us a reference to the files for which you see this? 
Thanks.
I don't have the file anymore, but try to find a huge file and it should not be
difficult to reproduce. I got it by saving code or editing code in that file.
You need to do some edits close to each other. If you wait too long between
edits, you might not see it.
I think a reconciler thread is started before the previous reconciling is finished.
IllegalThreadStateException is thrown on start() if the thread has already been
started. startReconciling() checks whether fThread.isAlive(). Two options:

A) the thread has died already (isAlive() returns false)

  1. the reconciler only dies regularly if it has been canceled using cancel(),
which is only called by uninstall(), which nulls out fThread. Since this
uninstall() section and startReconciling() are synchronized, this is safe even
when accessed concurrently. Impossible.
  2. reconciler could die from an uncaught run-time exception

B) the thread has been started in between the isAlive() check and starting it.
  - the only place that the fThread.start() is called is from within
startReconciling, which is synch'd. Impossible.

C) install(), which sets fThread unsynched, is accessed concurrently to
startReconciling(). This should not happen as install is a lifecycle method that
should not be called repeatedly. It is theoretically possible that a bad
install() call could come in between the isAlive() check and start().

This leaves A.1 as the only option: we get an uncaught runtime exception or
error in the reconciler thread, which dies. A later call to startReconciling()
will see that !isAlive() and try to start it, which results in the
IllegalThreadStateException.
I will attempt a fix along these lines: 

- assert the proper call sequence for install() to rule out case C. We can do
this easily by checking whether fThread is non-null. This check must be
synchronized.

- the isAlive() check in startReconciling is not enough if the reconciler thread
died. We should catch the IllegalThreadState and log it.

- if the reconciler dies unexpectedly due to, say, an OutOfMemoryError (which
might be what comment 8, "try to find a huge file" is pointing to), this should
have been printed to stdout. Adam and Olivier, do you remember seeing anything
on a console? Anyway, we should probably take note of such a case and somehow
(?) log it.
Created attachment 12128
AbstractReconciler.java.diff

Patch for AbstractReconciler as outlined in my previous comment. It simply
catches the IllegalThreadStateException - we have to discuss what to do in this
case.

It does not do anything about uncaught exceptions in the reconciler.
I don't remember anything specific about another exception or error during the
reconciling. I just had the log about the illegalThreadStateException. It seems
to happen a lot when editing quickly several times a huge file.
It is like the previous reconciling thread had not enough time to complete and
another one is started. If editing a second time cancels the first thread maybe
the thread did not have time to stop.
We don't start reconciling threads upon file modification (except for the first
modification) - rather, there is always a reconciler thread waiting that is
kicked off by changes or model updates. 

So, if you saw this on almost every keystroke, I suspect that the reconciler
thread died earlier. Then, everytime a forceReconcile is triggered, you will see
the IllegalThreadState. ForceReconcile is triggerd upon partActivation,
shellActivation, and resourceChanges.
approved by Kai. released for I200406171600</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40550" />
    <CreationDate amount="2003-07-21 08:50:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Tasks] task disappears from vert ruler but still available in task view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>- open a new empty file using the text editor</Line>
          <Line>- while the file is still empty, add a task</Line>
          <Line>- the task appears on the vertical ruler</Line>
          <Line>- now add one space to the file, the task icon disappears</Line>
          <Line>from the vertical ruler, but still available in the task view</Line>
          <Line>- remove the space just added, the task icon re-appears</Line>
          <Line>Is this still an issue in 3.2?</Line>
          <Line>closing old resolved bug</Line>
          <Line>As of now 'LATER' and 'REMIND' resolutions are no longer supported.</Line>
          <Line>Please reopen this bug if it is still valid for you.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Testcase:
- open a new empty file using the text editor
- while the file is still empty, add a task
- the task appears on the vertical ruler
- now add one space to the file, the task icon disappears
  from the vertical ruler, but still available in the task view
- remove the space just added, the task icon re-appears
Is this still an issue in 3.2?
closing old resolved bug
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Testcase:
- open a new empty file using the text editor
- while the file is still empty, add a task
- the task appears on the vertical ruler
- now add one space to the file, the task icon disappears
  from the vertical ruler, but still available in the task view
- remove the space just added, the task icon re-appears
Is this still an issue in 3.2?
closing old resolved bug
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40551" />
    <CreationDate amount="2003-07-21 09:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Error while starting eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437340804144">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="1">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="2">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="3">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="4">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="5">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437340804144">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:848)</Frame>
          <Frame depth="1">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>I have successfully run eclipse for a few months now. All of a sudden, I am
having a new problem while starting eclipse:
When I launch eclipse, it takes a very long time to come up, then I get a window
which says
	File Has Changed. Apply changes Yes or No

	whether I say yes or no, it takes a long time and then I get an error,
error in startup, look in log file. When I view my workspace/.metadata/.log
file, I have the following error:
	!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Jul 21, 2003 08:00:55.46
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.lang.reflect.InvocationTargetException
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
        at org.eclipse.core.launcher.Main.run(Main.java:747)
        at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: java.lang.reflect.InvocationTargetException
        at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:848)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        ... 7 more
Caused by: java.lang.OutOfMemoryError
You can increase the amount of memory available to Eclipse using a command line
parameter:

eclipse -vmargs -Xmx256M
Closing. Please re-open if you still see these problems after applying John's 
suggestions.
Specifying extra memory works.</WithStack>
    <WithOutStack>I have successfully run eclipse for a few months now. All of a sudden, I am
having a new problem while starting eclipse:
When I launch eclipse, it takes a very long time to come up, then I get a window
which says
	File Has Changed. Apply changes Yes or No

	whether I say yes or no, it takes a long time and then I get an error,
error in startup, look in log file. When I view my workspace/.metadata/.log
file, I have the following error:
	!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Jul 21, 2003 08:00:55.46
!MESSAGE Exception launching the Eclipse Platform:
!STACK


        ... 7 more
Caused by: java.lang.OutOfMemoryError
You can increase the amount of memory available to Eclipse using a command line
parameter:

eclipse -vmargs -Xmx256M
Closing. Please re-open if you still see these problems after applying John's 
suggestions.
Specifying extra memory works.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40552" />
    <CreationDate amount="2003-07-21 09:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-doc" />
    <Version amount="1.2" />
    <rep_platform amount="Sun" />
    <op_sys amount="Solaris" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Font is changing when browsing through help pages</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="INVALID" />
    <WithStack>In Solaris, the Font is changing when browsing through help pages (sometimes we 
see Solaris font which is readable and sometimes we see a Windows font that is 
too small to read)

The help is inside Netscape.
Solaris 2.9
Is this related to CDT ?
or a general eclipse problem.

Dave opinions ?
This sounds like the problem is with help content in question.

Should sumbits bugs on each Eclipse components docs that shows the problem.

Logged 45689 to the Eclipse team.

Verifying this one.</WithStack>
    <WithOutStack>In Solaris, the Font is changing when browsing through help pages (sometimes we 
see Solaris font which is readable and sometimes we see a Windows font that is 
too small to read)

The help is inside Netscape.
Solaris 2.9
Is this related to CDT ?
or a general eclipse problem.

Dave opinions ?
This sounds like the problem is with help content in question.

Should sumbits bugs on each Eclipse components docs that shows the problem.

Logged 45689 to the Eclipse team.

Verifying this one.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40553" />
    <CreationDate amount="2003-07-21 09:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="Core" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>update site is missing feature description information</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The download size reports the "Download Size" as 0KB, which is confusing.  It 
is also missing "Support Platforms" information.
I spent some time looking into how to do this and did not get anywhere.  None 
of the other eclispe tools or technology projects supply this information so 
perhaps it is not possible.
Thanks for checking this out Sian.  Let's drop this to minimum priority and 
pick it up again if we notice that the other plugins start using it.
This would probably require a custom ant task to determine the relevant file
sizes. We haven't been able to justify the time to implement this in the last 2
years, so we probably never will. Also in Eclipse 3.1 it now says "unknown"
instead of 0k - probably because no-one has ever filled in a file size for their
feature!
Makes sense.  PDE should generate these automatically for their plug-in export,
but I won't bother filing a bug report for that since it won't help Ant-based
builds.</WithStack>
    <WithOutStack>The download size reports the "Download Size" as 0KB, which is confusing.  It 
is also missing "Support Platforms" information.
I spent some time looking into how to do this and did not get anywhere.  None 
of the other eclispe tools or technology projects supply this information so 
perhaps it is not possible.
Thanks for checking this out Sian.  Let's drop this to minimum priority and 
pick it up again if we notice that the other plugins start using it.
This would probably require a custom ant task to determine the relevant file
sizes. We haven't been able to justify the time to implement this in the last 2
years, so we probably never will. Also in Eclipse 3.1 it now says "unknown"
instead of 0k - probably because no-one has ever filled in a file size for their
feature!
Makes sense.  PDE should generate these automatically for their plug-in export,
but I won't bother filing a bug report for that since it won't help Ant-based
builds.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40554" />
    <CreationDate amount="2003-07-21 09:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Fields coming back as Vars</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The parser used to differentiate between fields and vars...did an update and 
now fields are coming back as variables.
Fixed in HEAD.</WithStack>
    <WithOutStack>The parser used to differentiate between fields and vars...did an update and 
now fields are coming back as variables.
Fixed in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40555" />
    <CreationDate amount="2003-07-21 09:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Methods come back as Functions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Methods come back as functions...
Fixed in HEAD.</WithStack>
    <WithOutStack>Methods come back as functions...
Fixed in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40556" />
    <CreationDate amount="2003-07-21 10:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="UI" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>build progress and cancelling problems</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>After the first build the progress monitor bar is always at 100%.

Build cancelling does not work.
Problem #1 (progress monitor always 100%)
-----------------------------------------
This problem only occurs if a build is carried out with the default build 
configuration file. With a user-specified build config file the progress monitor 
bar moves smoothly left to right. 
Cause of this is a call to IResource::refreshLocal() in the writeBuildConfig() 
method of org.eclipse.ajdt.internal.builder.Builder that incorrectly passes in 
the IProgressMonitor for the build. Instead of passing in the build monitor, 
*should* be passing in a null (to signify we don't want any monitoring of the 
refresh task). The writeBuildConfig() method only gets called when building with 
the default build config file. 
Patch emailed separately to Andy Clement.

Problem #2 (cancel button doesn't work)
---------------------------------------
Looks like we do not check the IProgressMonitor to see if it is in the cancel 
state. Suggest we poll the build monitor from inside the while loop of the 
waitForBuildCompletion() method in org.eclipse.ajdt.internal.builder.Builder. 
That is, call the IProgressMonitor::isCanceled() operation on the build monitor 
and, if it returns true, throw a org.eclipse.core.runtime.
OperationCanceledException exception. At a first pass, we can catch this 
exception in the org.eclipse.ajdt.internal.builder.Builder's build() method and 
log the fact that the build has been cancelled. Is there anything that we need 
to add into this catch block ?
Patch emailed separately to Andy Clement.


Andy and I have discussed the "build cancel" side of this bug report and agreed 
that my patch only goes so far in remedying the situation : throwing and 
catching the OperationCancelledException will kill the build progress dialogue 
but the compiler still will still keep rumbling on in the background until it 
has finished its work. It looks like what is required here is a means of 
notifying the compiler that the build should be terminated. The abortBuild() 
method of org.aspectj.ajde.internal.AspectJBuildManager looks like it *ought* to 
be the desired mechanism. Mik, can you confirm that calling this is what is 
required ? Plus, are there any other "clean up" calls that need to be made 
following on from this call ? 
The AJDT side of this is now as complete as can be until AspectJ supports the 
cancellation of a running build. Thanks to George for the patch.</WithStack>
    <WithOutStack>After the first build the progress monitor bar is always at 100%.

Build cancelling does not work.
Problem #1 (progress monitor always 100%)
-----------------------------------------
This problem only occurs if a build is carried out with the default build 
configuration file. With a user-specified build config file the progress monitor 
bar moves smoothly left to right. 
Cause of this is a call to IResource::refreshLocal() in the writeBuildConfig() 
method of org.eclipse.ajdt.internal.builder.Builder that incorrectly passes in 
the IProgressMonitor for the build. Instead of passing in the build monitor, 
*should* be passing in a null (to signify we don't want any monitoring of the 
refresh task). The writeBuildConfig() method only gets called when building with 
the default build config file. 
Patch emailed separately to Andy Clement.

Problem #2 (cancel button doesn't work)
---------------------------------------
Looks like we do not check the IProgressMonitor to see if it is in the cancel 
state. Suggest we poll the build monitor from inside the while loop of the 
waitForBuildCompletion() method in org.eclipse.ajdt.internal.builder.Builder. 
That is, call the IProgressMonitor::isCanceled() operation on the build monitor 
and, if it returns true, throw a org.eclipse.core.runtime.
OperationCanceledException exception. At a first pass, we can catch this 
exception in the org.eclipse.ajdt.internal.builder.Builder's build() method and 
log the fact that the build has been cancelled. Is there anything that we need 
to add into this catch block ?
Patch emailed separately to Andy Clement.


Andy and I have discussed the "build cancel" side of this bug report and agreed 
that my patch only goes so far in remedying the situation : throwing and 
catching the OperationCancelledException will kill the build progress dialogue 
but the compiler still will still keep rumbling on in the background until it 
has finished its work. It looks like what is required here is a means of 
notifying the compiler that the build should be terminated. The abortBuild() 
method of org.aspectj.ajde.internal.AspectJBuildManager looks like it *ought* to 
be the desired mechanism. Mik, can you confirm that calling this is what is 
required ? Plus, are there any other "clean up" calls that need to be made 
following on from this call ? 
The AJDT side of this is now as complete as can be until AspectJ supports the 
cancellation of a running build. Thanks to George for the patch.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40557" />
    <CreationDate amount="2003-07-21 10:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>quick fix: improve return type guessing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="7" end="69" />
        <code>class A {
	private boolean foo() {
		return f(1) || f(2);
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>3.0 M2
class A {
	private boolean foo() {
		return f(1) || f(2);
	}
}

quich fix should be able to figure out that i want 'f' to be a boolean method
fixed &gt; 20030722</WithStack>
    <WithOutStack>3.0 M2
class A {
	private boolean foo() {
		return f(1) || f(2);
	}
}

quich fix should be able to figure out that i want 'f' to be a boolean method
fixed &gt; 20030722</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40558" />
    <CreationDate amount="2003-07-21 10:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="minor" />
    <Summery>[Perspectives] IPerspectiveDescriptor.getLabel javadoc</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>The javadoc for getLabel talks about the label attribute.
This attribute does not exist. It appears to have been replaced with the name 
attribute.
Reassigning bugs in component areas that are changing ownership.
Is this still a problem in 3.3?

PW

no change...still a problem</WithStack>
    <WithOutStack>The javadoc for getLabel talks about the label attribute.
This attribute does not exist. It appears to have been replaced with the name 
attribute.
Reassigning bugs in component areas that are changing ownership.
Is this still a problem in 3.3?

PW

no change...still a problem</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40559" />
    <CreationDate amount="2003-07-21 11:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Preferences] Need to make the PreferencesPage accessible</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>We are currently using a CLabel for the preferences page to show the title or 
errors. This cannot be navigated to currently and needs to be replaced by 
something that can take focus.
I have created an reusable component called the DialogMessageArea that now 
switches to using a text whenever a message (i.e. anything but the title) is 
set. This will allow tabbing to the message or error so that screen readers 
can get its contents.

This is currently in use in Preference dialog so all preference and property 
dialogs will get this behaviour for free.

Adding Doug so that he is aware of the change.</WithStack>
    <WithOutStack>We are currently using a CLabel for the preferences page to show the title or 
errors. This cannot be navigated to currently and needs to be replaced by 
something that can take focus.
I have created an reusable component called the DialogMessageArea that now 
switches to using a text whenever a message (i.e. anything but the title) is 
set. This will allow tabbing to the message or error so that screen readers 
can get its contents.

This is currently in use in Preference dialog so all preference and property 
dialogs will get this behaviour for free.

Adding Doug so that he is aware of the change.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40560" />
    <CreationDate amount="2003-07-21 11:40:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Label with text and image set tries to display both</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="408" end="994" />
        <code>public static void main (String [] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	Image image = new Image (display, 16, 16);
	Color red = display.getSystemColor (SWT.COLOR_RED);
	GC gc = new GC (image);
	gc.setBackground(red);
	gc.fillRectangle(image.getBounds());
	gc.dispose();
	
	final Label label = new Label(shell,SWT.NONE);
	label.setText("abcdefg");
	label.setBounds(10,10,200,200);
	label.setImage(image);
	
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch()) display.sleep();
	}
	image.dispose();
	display.dispose();
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Clients can change the thing that a Label displays from a string to an image 
(or vice versa) with the setText() and setImage() APIs.  On Mac, invoking both 
of these on a Label results in it trying to display both, so the image 
overwrites the text wherever they intersect.  On other platforms only the last 
thing that was set into the Label (ie.- either the string or the image) is 
displayed.  Snippet:

public static void main (String [] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	Image image = new Image (display, 16, 16);
	Color red = display.getSystemColor (SWT.COLOR_RED);
	GC gc = new GC (image);
	gc.setBackground(red);
	gc.fillRectangle(image.getBounds());
	gc.dispose();
	
	final Label label = new Label(shell,SWT.NONE);
	label.setText("abcdefg");
	label.setBounds(10,10,200,200);
	label.setImage(image);
	
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch()) display.sleep();
	}
	image.dispose();
	display.dispose();
}
Fixed &gt; 20030826. (HEAD)</WithStack>
    <WithOutStack>Clients can change the thing that a Label displays from a string to an image 
(or vice versa) with the setText() and setImage() APIs.  On Mac, invoking both 
of these on a Label results in it trying to display both, so the image 
overwrites the text wherever they intersect.  On other platforms only the last 
thing that was set into the Label (ie.- either the string or the image) is 
displayed.  Snippet:

public static void main (String [] args) {
	Display display = new Display();
	Shell shell = new Shell(display);
	Image image = new Image (display, 16, 16);
	Color red = display.getSystemColor (SWT.COLOR_RED);
	GC gc = new GC (image);
	gc.setBackground(red);
	gc.fillRectangle(image.getBounds());
	gc.dispose();
	
	final Label label = new Label(shell,SWT.NONE);
	label.setText("abcdefg");
	label.setBounds(10,10,200,200);
	label.setImage(image);
	
	shell.open();
	while (!shell.isDisposed()) {
		if (!display.readAndDispatch()) display.sleep();
	}
	image.dispose();
	display.dispose();
}
Fixed &gt; 20030826. (HEAD)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40561" />
    <CreationDate amount="2003-07-21 11:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[find/replace] Incremental Search mode should overlay popup widget [usability]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1)Make the "mode" more obvious to the user.</Line>
          <Line>2)Make it more obvious when the mode has been exited, i.e. by pressing escape,</Line>
          <Line>or perhaps during focus lost or whatever other mechanism you may have for</Line>
          <Line>existing the mode.</Line>
          <Line>3) Makes it easier to see what you've typed, especially when using BACKSPACE</Line>
          <Line>during the search.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>It would be great if the incremental search mode displayed a nested or 
overlaying Text widget on top of the StyledText widget (I am not talking about 
a shell, just a sibling to the styled text).  This would do the following:

1)Make the "mode" more obvious to the user.
2)Make it more obvious when the mode has been exited, i.e. by pressing escape, 
or perhaps during focus lost or whatever other mechanism you may have for 
existing the mode.
3) Makes it easier to see what you've typed, especially when using BACKSPACE 
during the search.

THANKS!
Another part of this request is that the overlayed control would have to be 
automatically placed just below the revealed range of text.  Otherwise it might 
cover up the range.</WithStack>
    <WithOutStack>It would be great if the incremental search mode displayed a nested or 
overlaying Text widget on top of the StyledText widget (I am not talking about 
a shell, just a sibling to the styled text).  This would do the following:

1)Make the "mode" more obvious to the user.
2)Make it more obvious when the mode has been exited, i.e. by pressing escape, 
or perhaps during focus lost or whatever other mechanism you may have for 
existing the mode.
3) Makes it easier to see what you've typed, especially when using BACKSPACE 
during the search.

THANKS!
Another part of this request is that the overlayed control would have to be 
automatically placed just below the revealed range of text.  Otherwise it might 
cover up the range.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40562" />
    <CreationDate amount="2003-07-21 12:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Perspectives] Reset Perspective Action is confusing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>The action Window-&gt;Reset Perspective is confusing because I am confused by it :-
).

I thought it's purpose was to erase my modifications to the perspective, and to 
re-load it from plugin.xml file.  In fact, there is no way to restore such 
provided perspectives as "java", "resource", etc.

The action would be better named as "Reapply/Relayout Perspective" or something 
similar.

Sorry in advance for what is probably a duplicate.
Window &gt; Reset Perspective action is to reset your perspective to its last 
known saved state.

If you modified "Java" perspective, and saved it under the same name, then to 
restore the "Java" perspective as it was ship, you need to open the Workbench &gt; 
Perspectives preference page, select Java perspective, and press Reset button.

It's so obvious I can't believe you were confused by it ;-)
So it's "Reset Prespective", vs. Perspective -&gt; Reset.  Oh, now I see ;-)
Any chance of getting this string-only change in?  I have seen users which are 
scared to invoke "Reset Perspective" because they have customized their 
persective in some way.
We have no plans to change this for 3.0.

I agree... this is confusing. In my case, I encountered the action first and was
confused about why the preference page didn't have the same behavior.
*** Bug 85585 has been marked as a duplicate of this bug. ***
Reassigning bugs in component areas that are changing ownership.
Is this still a problem in 3.3?

PW

Changes requested on bug 193523</WithStack>
    <WithOutStack>The action Window-&gt;Reset Perspective is confusing because I am confused by it :-
).

I thought it's purpose was to erase my modifications to the perspective, and to 
re-load it from plugin.xml file.  In fact, there is no way to restore such 
provided perspectives as "java", "resource", etc.

The action would be better named as "Reapply/Relayout Perspective" or something 
similar.

Sorry in advance for what is probably a duplicate.
Window &gt; Reset Perspective action is to reset your perspective to its last 
known saved state.

If you modified "Java" perspective, and saved it under the same name, then to 
restore the "Java" perspective as it was ship, you need to open the Workbench &gt; 
Perspectives preference page, select Java perspective, and press Reset button.

It's so obvious I can't believe you were confused by it ;-)
So it's "Reset Prespective", vs. Perspective -&gt; Reset.  Oh, now I see ;-)
Any chance of getting this string-only change in?  I have seen users which are 
scared to invoke "Reset Perspective" because they have customized their 
persective in some way.
We have no plans to change this for 3.0.

I agree... this is confusing. In my case, I encountered the action first and was
confused about why the preference page didn't have the same behavior.
*** Bug 85585 has been marked as a duplicate of this bug. ***
Reassigning bugs in component areas that are changing ownership.
Is this still a problem in 3.3?

PW

Changes requested on bug 193523</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40563" />
    <CreationDate amount="2003-07-21 12:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>extract interface logging JME [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Java Model Exception: Java Model Status [[Working copy] 
CopyToClipboardActionTest.java [in org.eclipse.jdt.ui.tests.reorg [in test 
cases [in org.eclipse.jdt.ui.tests.refactoring]]] does not exist.]
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at org.eclipse.core.runtime.CoreException.&lt;init&gt;(CoreException.java)
	at org.eclipse.jdt.core.JavaModelException.&lt;init&gt;
(JavaModelException.java)
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException
(JavaElement.java)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure
(CompilationUnit.java)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed
(JavaElement.java)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java)
	at org.eclipse.jdt.internal.core.JavaElement.getChildren
(JavaElement.java)
	at org.eclipse.jdt.internal.core.JavaElement.getChildrenOfType
(JavaElement.java)
	at org.eclipse.jdt.internal.core.CompilationUnit.getTypes
(CompilationUnit.java)
	at 
org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil.getMainType
(JavaElementUtil.java)
	at 
org.eclipse.jdt.ui.actions.ExtractInterfaceAction.getSingleSelectedType
(ExtractInterfaceAction.java)
	at org.eclipse.jdt.ui.actions.ExtractInterfaceAction.canEnable
(ExtractInterfaceAction.java)
	at org.eclipse.jdt.ui.actions.ExtractInterfaceAction.selectionChanged
(ExtractInterfaceAction.java)
	at 
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchSelectionChanged
(SelectionDispatchAction.java)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.selectionChanged
(SelectionDispatchAction.java)
	at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java)
	at org.eclipse.core.runtime.Platform.run(Platform.java)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java)
	at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java)
	at org.eclipse.jface.viewers.StructuredViewer.handleSelect
(StructuredViewer.java:652)
	at org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected
(StructuredViewer.java:676)
	at org.eclipse.jface.util.OpenStrategy.fireSelectionEvent
(OpenStrategy.java)
	at org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at java.lang.reflect.AccessibleObject.invokeL(AccessibleObject.java:207)
	at java.lang.reflect.Method.invoke(Method.java:271)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
I think this is the same. We have to protected the action against unexisting 
elements. 
fixed</WithStack>
    <WithOutStack>Java Model Exception: Java Model Status [[Working copy] 
CopyToClipboardActionTest.java [in org.eclipse.jdt.ui.tests.reorg [in test 
cases [in org.eclipse.jdt.ui.tests.refactoring]]] does not exist.]
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at org.eclipse.core.runtime.CoreException.&lt;init&gt;(CoreException.java)
	at org.eclipse.jdt.core.JavaModelException.&lt;init&gt;
(JavaModelException.java)
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException
(JavaElement.java)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure
(CompilationUnit.java)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed
(JavaElement.java)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java)
	at org.eclipse.jdt.internal.core.JavaElement.getChildren
(JavaElement.java)
	at org.eclipse.jdt.internal.core.JavaElement.getChildrenOfType
(JavaElement.java)
	at org.eclipse.jdt.internal.core.CompilationUnit.getTypes
(CompilationUnit.java)
	at 
org.eclipse.jdt.internal.corext.refactoring.util.JavaElementUtil.getMainType
(JavaElementUtil.java)
	at 
org.eclipse.jdt.ui.actions.ExtractInterfaceAction.getSingleSelectedType
(ExtractInterfaceAction.java)
	at org.eclipse.jdt.ui.actions.ExtractInterfaceAction.canEnable
(ExtractInterfaceAction.java)
	at org.eclipse.jdt.ui.actions.ExtractInterfaceAction.selectionChanged
(ExtractInterfaceAction.java)
	at 
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchSelectionChanged
(SelectionDispatchAction.java)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.selectionChanged
(SelectionDispatchAction.java)
	at org.eclipse.jface.viewers.Viewer$2.run(Viewer.java)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java)
	at org.eclipse.core.runtime.Platform.run(Platform.java)
	at org.eclipse.jface.viewers.Viewer.fireSelectionChanged(Viewer.java)
	at org.eclipse.jface.viewers.StructuredViewer.updateSelection
(StructuredViewer.java)
	at org.eclipse.jface.viewers.StructuredViewer.handleSelect
(StructuredViewer.java:652)
	at org.eclipse.jface.viewers.StructuredViewer$4.widgetSelected
(StructuredViewer.java:676)
	at org.eclipse.jface.util.OpenStrategy.fireSelectionEvent
(OpenStrategy.java)
	at org.eclipse.jface.util.OpenStrategy.access$3(OpenStrategy.java)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at java.lang.reflect.AccessibleObject.invokeL(AccessibleObject.java:207)
	at java.lang.reflect.Method.invoke(Method.java:271)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
I think this is the same. We have to protected the action against unexisting 
elements. 
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40564" />
    <CreationDate amount="2003-07-21 12:32:00 -0400" />
    <DupId amount="39807" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>would like a way to remove entries from 'remove as' dropdown</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>3.0 M2
i never run any applets, normal java applications or normal junit tests from my 
self hosting dev workspace.
i'd like to have a way to remove these things from the 'run as/debug as' 
dropdown list


*** This bug has been marked as a duplicate of 39807 ***</WithStack>
    <WithOutStack>3.0 M2
i never run any applets, normal java applications or normal junit tests from my 
self hosting dev workspace.
i'd like to have a way to remove these things from the 'run as/debug as' 
dropdown list


*** This bug has been marked as a duplicate of 39807 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40565" />
    <CreationDate amount="2003-07-21 12:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Annotate view shoud not have border</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>3.0 M2
annotate view uses SWT.BORDER style for its widget which looks bad
Dean, can you fix this please. My eyes are good enough to notice, or my screen
resolution is way too high :)
Since this change is so minor I will include the change in a patch for other 
bug(s).


Fix for this bug is in the patch attached to 40756
Patch released to HEAD.</WithStack>
    <WithOutStack>3.0 M2
annotate view uses SWT.BORDER style for its widget which looks bad
Dean, can you fix this please. My eyes are good enough to notice, or my screen
resolution is way too high :)
Since this change is so minor I will include the change in a patch for other 
bug(s).


Fix for this bug is in the patch attached to 40756
Patch released to HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40566" />
    <CreationDate amount="2003-07-21 13:04:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Ant" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>No working set specification widgets.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>On the Refresh tab of the Ant launch configurations, selecting the 
${working_set} scope variable does not make the working set specification 
widgets visible,.
Can't reproduce on I20030730.
Cannot reproduce either.</WithStack>
    <WithOutStack>On the Refresh tab of the Ant launch configurations, selecting the 
${working_set} scope variable does not make the working set specification 
widgets visible,.
Can't reproduce on I20030730.
Cannot reproduce either.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40567" />
    <CreationDate amount="2003-07-21 13:25:00 -0400" />
    <DupId amount="41325" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Tasks] Task &amp; Problem filters are not applied on startup</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) Apply a filter on tasks view, set to my own defined working set</Line>
          <Line>2) Clicked Ok, filtering works fine</Line>
          <Line>3) Stop eclipse</Line>
          <Line>4) Start eclipse, filtering is not applied</Line>
          <Line>5) Open task filter dialog, the setting is as expected (set to my working set)</Line>
          <Line>6) Just press ok and the filtering is applied.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The filter that can be set of the tasks &amp; problems view in 3.0-M2 is not 
applied when Eclipse is started.
I did the following:
1) Apply a filter on tasks view, set to my own defined working set
2) Clicked Ok, filtering works fine
3) Stop eclipse
4) Start eclipse, filtering is not applied
5) Open task filter dialog, the setting is as expected (set to my working set)
6) Just press ok and the filtering is applied.

The same story holds for the problems view

I hope this gets fixed soon, because it is irritating on a GREAT product.
*** Bug 40755 has been marked as a duplicate of this bug. ***
*** Bug 41025 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 41325 ***</WithStack>
    <WithOutStack>The filter that can be set of the tasks &amp; problems view in 3.0-M2 is not 
applied when Eclipse is started.
I did the following:
1) Apply a filter on tasks view, set to my own defined working set
2) Clicked Ok, filtering works fine
3) Stop eclipse
4) Start eclipse, filtering is not applied
5) Open task filter dialog, the setting is as expected (set to my working set)
6) Just press ok and the filtering is applied.

The same story holds for the problems view

I hope this gets fixed soon, because it is irritating on a GREAT product.
*** Bug 40755 has been marked as a duplicate of this bug. ***
*** Bug 41025 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 41325 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40568" />
    <CreationDate amount="2003-07-21 13:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>File search should be able to use directory pattern.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>As a J2EE app my project contains jsps and java classes.   The struture of my
repository is 

tools/toolname/docroot/*.jsp.
coreservice/servicename/docroot/*.jsp

Now in order to search all jsps I have to create a working set and in that
working set include all the docroot directories.  This is time consuming and I
think having a directory pattern in the file search would be helpful.  For
instance I could just use docroot/*.jsp instead of having to create a working set.
makes sense
tagging 3.0 candidate.
*** Bug 396985 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>As a J2EE app my project contains jsps and java classes.   The struture of my
repository is 

tools/toolname/docroot/*.jsp.
coreservice/servicename/docroot/*.jsp

Now in order to search all jsps I have to create a working set and in that
working set include all the docroot directories.  This is time consuming and I
think having a directory pattern in the file search would be helpful.  For
instance I could just use docroot/*.jsp instead of having to create a working set.
makes sense
tagging 3.0 candidate.
*** Bug 396985 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40569" />
    <CreationDate amount="2003-07-21 15:53:00 -0400" />
    <DupId amount="32285" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>New compiler warning: uncommented (catch) block</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="199" end="227" />
        <code>catch (FooException foo) {
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="261" end="315" />
        <code>catch (FooException foo) {
   // any kind of comment
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>IMHO opinion, this not commenting empty catch block is very bad practice. I am
not sure if this falls under the E compiler warning phylosophy but... the
following could be flaged as a warning:

... 
catch (FooException foo) {
}

while the following would not:

catch (FooException foo) {
   // any kind of comment
}
Lucky you, I just released support for this one for today's integration build !
It also finds empty methods, empty types and all empty blocks, which are not 
documented as you were suggesting.

*** This bug has been marked as a duplicate of 32285 ***
Whoa, you must have ESP... ;-)</WithStack>
    <WithOutStack>IMHO opinion, this not commenting empty catch block is very bad practice. I am
not sure if this falls under the E compiler warning phylosophy but... the
following could be flaged as a warning:

... 
catch (FooException foo) {
}

while the following would not:

catch (FooException foo) {
   // any kind of comment
}
Lucky you, I just released support for this one for today's integration build !
It also finds empty methods, empty types and all empty blocks, which are not 
documented as you were suggesting.

*** This bug has been marked as a duplicate of 32285 ***
Whoa, you must have ESP... ;-)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40570" />
    <CreationDate amount="2003-07-21 16:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Dialogs] New Project wizard throws NPE with two backslashes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340804164">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason>3</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.runtime.Path.append(Path.java:194)</Frame>
          <Frame depth="1">org.eclipse.core.runtime.Path.append(Path.java:169)</Frame>
          <Frame depth="2">org.eclipse.ui.dialogs.WizardNewProjectCreationPage.getDefaultLocationForName(WizardNewProjectCreationPage.java:341)</Frame>
          <Frame depth="3">org.eclipse.ui.dialogs.WizardNewProjectCreationPage.setLocationForSelection(WizardNewProjectCreationPage.java:331)</Frame>
          <Frame depth="4">org.eclipse.ui.dialogs.WizardNewProjectCreationPage.access$0(WizardNewProjectCreationPage.java:329)</Frame>
          <Frame depth="5">org.eclipse.ui.dialogs.WizardNewProjectCreationPage$1.handleEvent(WizardNewProjectCreationPage.java:60)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:865)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:845)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:1755)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:2914)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Control.windowProc(Control.java:2766)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.windowProc(Display.java:2361)</Frame>
          <Frame depth="14">org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)</Frame>
          <Frame depth="15">org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1236)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Text.callWindowProc(Text.java:96)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Control.windowProc(Control.java:2839)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Display.windowProc(Display.java:2361)</Frame>
          <Frame depth="19">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="20">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1303)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1543)</Frame>
          <Frame depth="22">org.eclipse.jface.window.Window.runEventLoop(Window.java:583)</Frame>
          <Frame depth="23">org.eclipse.jface.window.Window.open(Window.java:563)</Frame>
          <Frame depth="24">org.eclipse.ui.actions.NewProjectAction.run(NewProjectAction.java:107)</Frame>
          <Frame depth="25">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="26">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="27">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="28">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="29">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="32">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="33">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="34">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="35">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="36">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)</Frame>
          <Frame depth="37">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="38">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="39">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="40">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="41">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="42">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="43">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="44">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Matt Clement (mattclem@us.ibm.com), 919-254-5681

Problem:

 Typing two backslash characters in the project name field of the new
 Java project wizard causes a NPE for the 2nd slash and an additional NPE
 for each slash after that.

Scenario:

 -Create a Simple Project by invoking the wizard.
  File-&gt;New-&gt;Project;Simple-&gt;Project-&gt;Next
 -In the project name field type two backslashes

Expected Results:

 An error message occurs with no adverse side effects.

Actual Results:

 An error message does occur after the first slash but after the 2nd
 slash an NPE is written to the .log file.

Remarks:

 For each additional slash typed after the 2nd one an additional NPE
 is written.  Probably just an escape sequence problem or something of
 that nature.  An easy way to see this is to make sure to have the PDE
 Runtime view up and on top when trying to reproduce the error and the
 exception wlil pop up as soon as the 2nd slash is typed.
Please add the crash contained in your .log file to this PR.

The original stack trace is no longer available due to the age of the original 
bug.  However the bug is still present in Eclipse 2.1 and appears to no longer 
be NPE.  Below you will find the stack trace:

!ENTRY org.eclipse.ui 4 4 Jul 23, 2003 16:36:26.702
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jul 23, 2003 16:36:26.702
!MESSAGE 3
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 3
	at org.eclipse.core.runtime.Path.append(Path.java:194)
	at org.eclipse.core.runtime.Path.append(Path.java:169)
	at 
org.eclipse.ui.dialogs.WizardNewProjectCreationPage.getDefaultLocationForName
(WizardNewProjectCreationPage.java:341)
	at 
org.eclipse.ui.dialogs.WizardNewProjectCreationPage.setLocationForSelection
(WizardNewProjectCreationPage.java:331)
	at org.eclipse.ui.dialogs.WizardNewProjectCreationPage.access$0
(WizardNewProjectCreationPage.java:329)
	at org.eclipse.ui.dialogs.WizardNewProjectCreationPage$1.handleEvent
(WizardNewProjectCreationPage.java:60)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:865)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:845)
	at org.eclipse.swt.widgets.Text.wmCommandChild(Text.java:1755)
	at org.eclipse.swt.widgets.Control.WM_COMMAND(Control.java:2914)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2766)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2361)
	at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
	at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1236)
	at org.eclipse.swt.widgets.Text.callWindowProc(Text.java:96)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2839)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2361)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1303)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1543)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
	at org.eclipse.jface.window.Window.open(Window.java:563)
	at org.eclipse.ui.actions.NewProjectAction.run
(NewProjectAction.java:107)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Replicated in 3.0 M2
We were validating too late - we should have validated before trying to work 
with the name. Fixed in build &gt; 20030808
Marking as fixed
Marking closed</WithStack>
    <WithOutStack>Matt Clement (mattclem@us.ibm.com), 919-254-5681

Problem:

 Typing two backslash characters in the project name field of the new
 Java project wizard causes a NPE for the 2nd slash and an additional NPE
 for each slash after that.

Scenario:

 -Create a Simple Project by invoking the wizard.
  File-&gt;New-&gt;Project;Simple-&gt;Project-&gt;Next
 -In the project name field type two backslashes

Expected Results:

 An error message occurs with no adverse side effects.

Actual Results:

 An error message does occur after the first slash but after the 2nd
 slash an NPE is written to the .log file.

Remarks:

 For each additional slash typed after the 2nd one an additional NPE
 is written.  Probably just an escape sequence problem or something of
 that nature.  An easy way to see this is to make sure to have the PDE
 Runtime view up and on top when trying to reproduce the error and the
 exception wlil pop up as soon as the 2nd slash is typed.
Please add the crash contained in your .log file to this PR.

The original stack trace is no longer available due to the age of the original 
bug.  However the bug is still present in Eclipse 2.1 and appears to no longer 
be NPE.  Below you will find the stack trace:

!ENTRY org.eclipse.ui 4 4 Jul 23, 2003 16:36:26.702
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Jul 23, 2003 16:36:26.702
!MESSAGE 3
!STACK 0

Replicated in 3.0 M2
We were validating too late - we should have validated before trying to work 
with the name. Fixed in build &gt; 20030808
Marking as fixed
Marking closed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40571" />
    <CreationDate amount="2003-07-21 17:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Missing functionality in the pde junit launch config</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) no choice whether all tests inside a container or a single test should be</Line>
          <Line>run</Line>
          <Line />
          <Line>2) no indication when a launch config corresponds to a single test method.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The pde.junit launch config has some missing functionality compared to the 
jdt.junit launch config:

1) no choice whether all tests inside a container or a single test should be 
run

2) no indication when a launch config corresponds to a single test method.

Both of the above functions are already available when using the pde.junit 
launch short cuts. 

see the attached screen shot.
Created attachment 5525
screenshot of the jdt.junit launch config main tab
Erich,
the "all tests" choice in JUnit allows one to select a library (which is 
neither a project, a package, nor a source folder).
Is this a bug or does the choice extend to libraries as well?
Fixed.
In 3.0 M3, pde.junit uses the main tab of the JDT Junit launcher as is.</WithStack>
    <WithOutStack>The pde.junit launch config has some missing functionality compared to the 
jdt.junit launch config:

1) no choice whether all tests inside a container or a single test should be 
run

2) no indication when a launch config corresponds to a single test method.

Both of the above functions are already available when using the pde.junit 
launch short cuts. 

see the attached screen shot.
Created attachment 5525
screenshot of the jdt.junit launch config main tab
Erich,
the "all tests" choice in JUnit allows one to select a library (which is 
neither a project, a package, nor a source folder).
Is this a bug or does the choice extend to libraries as well?
Fixed.
In 3.0 M3, pde.junit uses the main tab of the JDT Junit launcher as is.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40572" />
    <CreationDate amount="2003-07-21 17:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unnecessary cast warning for necessary cast</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="8">
      <source_code type="package">
        <location start="61" end="72" />
        <code>package p1;</code>
      </source_code>
      <source_code type="class">
        <location start="73" end="108" />
        <code>public class A {
	void foo() {
	}
}</code>
      </source_code>
      <source_code type="package">
        <location start="113" end="124" />
        <code>package p2;</code>
      </source_code>
      <source_code type="import">
        <location start="125" end="137" />
        <code>import p1.A;</code>
      </source_code>
      <source_code type="class">
        <location start="138" end="166" />
        <code>public class B extends A {
}</code>
      </source_code>
      <source_code type="package">
        <location start="171" end="182" />
        <code>package p1;</code>
      </source_code>
      <source_code type="import">
        <location start="183" end="195" />
        <code>import p2.B;</code>
      </source_code>
      <source_code type="class">
        <location start="196" end="299" />
        <code>public class C {
	public void bar() {
		B b = new B();
		((A)b).foo();//warning for necessary cast
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build: 3.0 M2

Given the following three compilation units:

package p1;
public class A {
	void foo() {
	}
}
---
package p2;
import p1.A;
public class B extends A {
}
---
package p1;
import p2.B;
public class C {
	public void bar() {
		B b = new B();
		((A)b).foo();//warning for necessary cast
	}
}

The new warning for unnecessary casts reports a warning in C on the commented
line.  If the cast is removed, a compile error results (due to visibility
restriction), therefore this cast IS necessary.
Did not consider alternate receiver type, only argument types. 

Fixed. Added regression test (NegativeTest#test395)
Access to member types also had a similar defficiency (replace (A)b.foo() with 
(A)b.new Member(), with A defining member type.
Verified.</WithStack>
    <WithOutStack>Build: 3.0 M2

Given the following three compilation units:

package p1;
public class A {
	void foo() {
	}
}
---
package p2;
import p1.A;
public class B extends A {
}
---
package p1;
import p2.B;
public class C {
	public void bar() {
		B b = new B();
		((A)b).foo();//warning for necessary cast
	}
}

The new warning for unnecessary casts reports a warning in C on the commented
line.  If the cast is removed, a compile error results (due to visibility
restriction), therefore this cast IS necessary.
Did not consider alternate receiver type, only argument types. 

Fixed. Added regression test (NegativeTest#test395)
Access to member types also had a similar defficiency (replace (A)b.foo() with 
(A)b.new Member(), with A defining member type.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40573" />
    <CreationDate amount="2003-07-21 17:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>$TODO tasks cannot be marked as completed or deleted</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I should be able to mark a //$TODO comment as completed, and then delete the 
task, therefore deleting the corresponding Java comment.
jdt.core defines the todo marker: probably has to set 'userEditable' to true.
we could add a quick fix: 'Mark as completed: remove comment'
to jdt.core
We do not set userEditable to true since we did not have a quickfix for it. If 
you think you can solve it satisfactorily with a quickfix, then we will make 
them editable.

Back to UI for adding quickfix support, and let us know once complete to enable 
userEditable flag.
Martin, fyi
Java tasks are now quick fixable: CTRL on task or click on task marker.
&gt; 20030724

Moving to jdt.core, in case you want to add the 'userEditable ' flag.
Not sure how this will play together as you can't add an action when the flag is
switched. You can always use the quick fix, regardless if the taks is marked as
complete.


I wanted to say: CTRL + 1 on task, click on task marker or Quick Fix from menu
on task
Fixed for jdt-core: TODO tasks are now editable.

I reassign it to jdt-ui as now we get a NPE while trying to delete completed 
tasks...

Here's following stack trace:
Thread [main] (Suspended (exception NullPointerException))
	ActionDeleteCompleted.getCompletedTasks() line: 97
	ActionDeleteCompleted.run() line: 48
	ActionDeleteCompleted(Action).runWithEvent(Event) line: 842
	ActionContributionItem.handleWidgetSelection(Event, boolean) line: 509
	ActionContributionItem.access$2(ActionContributionItem, Event, boolean) 
line: 461
	ActionContributionItem$5.handleEvent(Event) line: 408
	EventTable.sendEvent(Event) line: 82
	MenuItem(Widget).sendEvent(Event) line: 847
	Display.runDeferredEvents() line: 2294
	Display.readAndDispatch() line: 1975
	Workbench.runEventLoop(Window$IExceptionHandler, Display) line: 1506
	Workbench.runUI() line: 1482
	Workbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 246
	PlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 139
	IDEApplication.run(Object) line: 47
	PlatformActivator$1.run() line: 242
	EclipseStarter.run(String[], Runnable) line: 84
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not 
available [native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
	Method.invoke(Object, Object[]) line: 324
	OSGiBootLoader.basicRun(String[], Runnable) line: 239
	OSGiBootLoader.run(String[], Runnable) line: 665
	OSGiBootLoader.run(String, URL, String, String[], Runnable) line: 652
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not 
available [native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
	Method.invoke(Object, Object[]) line: 324
	Main.basicRun(String[]) line: 299
	Main.run(String[]) line: 767
	Main.main(String[]) line: 601


If this cannot be addressed within M6, then we can revert to read-only mode on 
JDT Core side temporarily.

Just let us know.
ActionDeleteCompleted is provided by platform ui. Moving...
Stefan, can you please look at the NPE for M6?

I also don't understand why JDT Core is marking the task as user editable.
This is not needed to support quick fix.
Was it just to allow the task to be marked as complete?
This won't fix the original problem unless JDT is also listening for marker 
deletions and is prepared to modify the text in response to the deletion.

In my opinion, quick fix should be used in this case, and that it doesn't make 
sense to allow the user either too mark the task as complete or to delete it.

This is indeed the path we are going to follow (and may revert to read-only) 
for M6, if quickfix support cannot be added in time.
Given we are closing on M6, we will revert to read-only tasks for this 
milestone. As soon as M6 is declared, we will proceed again, so that UI has 
time to convert in a suitable way.
Revert done and released...
Stefan please verify the NPE is no longer happening, or needs to be fixed, we 
don't plan to support the original request in this bug at this time.
The NPE is not happening right now. However I needed to fix bug 56491 in order
to verify this.

Investigate post-3.0.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I should be able to mark a //$TODO comment as completed, and then delete the 
task, therefore deleting the corresponding Java comment.
jdt.core defines the todo marker: probably has to set 'userEditable' to true.
we could add a quick fix: 'Mark as completed: remove comment'
to jdt.core
We do not set userEditable to true since we did not have a quickfix for it. If 
you think you can solve it satisfactorily with a quickfix, then we will make 
them editable.

Back to UI for adding quickfix support, and let us know once complete to enable 
userEditable flag.
Martin, fyi
Java tasks are now quick fixable: CTRL on task or click on task marker.
&gt; 20030724

Moving to jdt.core, in case you want to add the 'userEditable ' flag.
Not sure how this will play together as you can't add an action when the flag is
switched. You can always use the quick fix, regardless if the taks is marked as
complete.


I wanted to say: CTRL + 1 on task, click on task marker or Quick Fix from menu
on task
Fixed for jdt-core: TODO tasks are now editable.

I reassign it to jdt-ui as now we get a NPE while trying to delete completed 
tasks...

Here's following stack trace:
Thread [main] (Suspended (exception NullPointerException))
	ActionDeleteCompleted.getCompletedTasks() line: 97
	ActionDeleteCompleted.run() line: 48
	ActionDeleteCompleted(Action).runWithEvent(Event) line: 842
	ActionContributionItem.handleWidgetSelection(Event, boolean) line: 509
	ActionContributionItem.access$2(ActionContributionItem, Event, boolean) 
line: 461
	ActionContributionItem$5.handleEvent(Event) line: 408
	EventTable.sendEvent(Event) line: 82
	MenuItem(Widget).sendEvent(Event) line: 847
	Display.runDeferredEvents() line: 2294
	Display.readAndDispatch() line: 1975
	Workbench.runEventLoop(Window$IExceptionHandler, Display) line: 1506
	Workbench.runUI() line: 1482
	Workbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 246
	PlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 139
	IDEApplication.run(Object) line: 47
	PlatformActivator$1.run() line: 242
	EclipseStarter.run(String[], Runnable) line: 84
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not 
available [native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
	Method.invoke(Object, Object[]) line: 324
	OSGiBootLoader.basicRun(String[], Runnable) line: 239
	OSGiBootLoader.run(String[], Runnable) line: 665
	OSGiBootLoader.run(String, URL, String, String[], Runnable) line: 652
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not 
available [native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
	Method.invoke(Object, Object[]) line: 324
	Main.basicRun(String[]) line: 299
	Main.run(String[]) line: 767
	Main.main(String[]) line: 601


If this cannot be addressed within M6, then we can revert to read-only mode on 
JDT Core side temporarily.

Just let us know.
ActionDeleteCompleted is provided by platform ui. Moving...
Stefan, can you please look at the NPE for M6?

I also don't understand why JDT Core is marking the task as user editable.
This is not needed to support quick fix.
Was it just to allow the task to be marked as complete?
This won't fix the original problem unless JDT is also listening for marker 
deletions and is prepared to modify the text in response to the deletion.

In my opinion, quick fix should be used in this case, and that it doesn't make 
sense to allow the user either too mark the task as complete or to delete it.

This is indeed the path we are going to follow (and may revert to read-only) 
for M6, if quickfix support cannot be added in time.
Given we are closing on M6, we will revert to read-only tasks for this 
milestone. As soon as M6 is declared, we will proceed again, so that UI has 
time to convert in a suitable way.
Revert done and released...
Stefan please verify the NPE is no longer happening, or needs to be fixed, we 
don't plan to support the original request in this bug at this time.
The NPE is not happening right now. However I needed to fix bug 56491 in order
to verify this.

Investigate post-3.0.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40574" />
    <CreationDate amount="2003-07-21 18:32:00 -0400" />
    <DupId amount="31844" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>MonitorManager#removeMonitorInformation(IJavaDebugTarget)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The implementation is not in sync with the javaDoc. The javaDoc says it only
removes the cached information for the specified target, but in the
implementation, all cache information are cleared.
Duplicate of 31844.
The thread and monitor view doesn't manage displaying multiple debug target.
No use to fix this problem without solving the bigger issue.

*** This bug has been marked as a duplicate of 31844 ***</WithStack>
    <WithOutStack>The implementation is not in sync with the javaDoc. The javaDoc says it only
removes the cached information for the specified target, but in the
implementation, all cache information are cleared.
Duplicate of 31844.
The thread and monitor view doesn't manage displaying multiple debug target.
No use to fix this problem without solving the bigger issue.

*** This bug has been marked as a duplicate of 31844 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40575" />
    <CreationDate amount="2003-07-21 19:36:00 -0400" />
    <DupId amount="39986" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Ditry icon decorators much slower in 3.0.m2 than in m1.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. open packages view</Line>
          <Line>2. browse a CVS shared project</Line>
          <Line>3. open a java file</Line>
          <Line>4. edit and save the file</Line>
          <Line>5. notice that the decoration is removed and takes either (a) a long time, or</Line>
          <Line>(b) doesn't reappear at all.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When I change a .java file in the Java Browsing Perspective, the icons are much
slower to refresh in m2. In particular, the class path entry nodes in the
Project View do not seem to be properly marked with the Ditry decorator at all.

I just did a Refactor/Rename on a method which changed just one file and the the
class path entry nodes is still marked clean after a couple of minutes.
I guess you are talking about the CVS decorators, right?
Moving to platform-&gt;vcm
Yes I've noticed this also. We haven't changed the CVS decorator, however the UI
team has moved the decoration scheduler to the job API. There is probably some
responsiveness problems with the refactored decorator mananger.

You can see this easily in M2. And sometimes the decoration never actually occurs:

1. open packages view
2. browse a CVS shared project
3. open a java file
4. edit and save the file
5. notice that the decoration is removed and takes either (a) a long time, or
(b) doesn't reappear at all.

Moving to UI for investigation.
Decoration has been reduced in prioirit for M2 - it is now the lowest priority 
item. In M1 it could potentially run as fast as the UI Thread (which was 
causing responsiveness problems).

However the loss of decorators is an ongoing problem we are looking into. In 
any build post 20030722 if you lose a decorator please check your log and let 
us know if there is anything there - something appears to be killing the job 
without any feedback - we have improved the logging for this case.
We also have not been able to replicate the decorator loss consistently - if 
you have a consistent case please let us know.
I think this is a result of 39986 - updates were getting lost and as a result 
a second update was required to fire off the change. Also as we are running at 
a lowere priority the 3 or 4 updates you used to get are now one or two due to 
the delay in processing.

I am going to mark this as a dup of Bug 39986 so as to have once place to keep 
track of these.

A fix is in for the update problem for build &gt;20030722. 

*** This bug has been marked as a duplicate of 39986 ***</WithStack>
    <WithOutStack>When I change a .java file in the Java Browsing Perspective, the icons are much
slower to refresh in m2. In particular, the class path entry nodes in the
Project View do not seem to be properly marked with the Ditry decorator at all.

I just did a Refactor/Rename on a method which changed just one file and the the
class path entry nodes is still marked clean after a couple of minutes.
I guess you are talking about the CVS decorators, right?
Moving to platform-&gt;vcm
Yes I've noticed this also. We haven't changed the CVS decorator, however the UI
team has moved the decoration scheduler to the job API. There is probably some
responsiveness problems with the refactored decorator mananger.

You can see this easily in M2. And sometimes the decoration never actually occurs:

1. open packages view
2. browse a CVS shared project
3. open a java file
4. edit and save the file
5. notice that the decoration is removed and takes either (a) a long time, or
(b) doesn't reappear at all.

Moving to UI for investigation.
Decoration has been reduced in prioirit for M2 - it is now the lowest priority 
item. In M1 it could potentially run as fast as the UI Thread (which was 
causing responsiveness problems).

However the loss of decorators is an ongoing problem we are looking into. In 
any build post 20030722 if you lose a decorator please check your log and let 
us know if there is anything there - something appears to be killing the job 
without any feedback - we have improved the logging for this case.
We also have not been able to replicate the decorator loss consistently - if 
you have a consistent case please let us know.
I think this is a result of 39986 - updates were getting lost and as a result 
a second update was required to fire off the change. Also as we are running at 
a lowere priority the 3 or 4 updates you used to get are now one or two due to 
the delay in processing.

I am going to mark this as a dup of Bug 39986 so as to have once place to keep 
track of these.

A fix is in for the update problem for build &gt;20030722. 

*** This bug has been marked as a duplicate of 39986 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40576" />
    <CreationDate amount="2003-07-21 20:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE with pinned console</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340804164">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.debug.internal.ui.console.ConsoleView.partClosed(ConsoleView.java:97)</Frame>
          <Frame depth="1">org.eclipse.ui.internal.PartListenerList$3.run(PartListenerList.java:89)</Frame>
          <Frame depth="2">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015)</Frame>
          <Frame depth="3">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PartListenerList.firePartClosed(PartListenerList.java:87)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WorkbenchPage.firePartClosed(WorkbenchPage.java:1233)</Frame>
          <Frame depth="6">org.eclipse.ui.internal.WorkbenchPage.closeEditor(WorkbenchPage.java:847)</Frame>
          <Frame depth="7">org.eclipse.ui.internal.EditorManager.reuseInternalEditor(EditorManager.java:645)</Frame>
          <Frame depth="8">org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor(EditorManager.java:456)</Frame>
          <Frame depth="9">org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:431)</Frame>
          <Frame depth="10">org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2069)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:2019)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2006)</Frame>
          <Frame depth="13">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2001)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1934)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1926)</Frame>
          <Frame depth="17">org.eclipse.compare.internal.CompareUIPlugin.openCompareEditor(CompareUIPlugin.java:310)</Frame>
          <Frame depth="18">org.eclipse.compare.CompareUI.openCompareEditorOnPage(CompareUI.java:125)</Frame>
          <Frame depth="19">org.eclipse.compare.CompareUI.openCompareEditor(CompareUI.java:111)</Frame>
          <Frame depth="20">org.eclipse.team.internal.ui.sync.actions.OpenInCompareAction.openEditor(OpenInCompareAction.java:64)</Frame>
          <Frame depth="21">org.eclipse.team.internal.ui.sync.actions.OpenInCompareAction.run(OpenInCompareAction.java:51)</Frame>
          <Frame depth="22">org.eclipse.team.internal.ui.sync.actions.SyncViewerActions.open(SyncViewerActions.java:227)</Frame>
          <Frame depth="23">org.eclipse.team.internal.ui.sync.views.SyncViewer.handleOpen(SyncViewer.java:404)</Frame>
          <Frame depth="24">org.eclipse.team.internal.ui.sync.views.SyncViewer$6.open(SyncViewer.java:364)</Frame>
          <Frame depth="25">org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:392)</Frame>
          <Frame depth="26">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1015)</Frame>
          <Frame depth="27">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="28">org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:390)</Frame>
          <Frame depth="29">org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:600)</Frame>
          <Frame depth="30">org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:689)</Frame>
          <Frame depth="31">org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:209)</Frame>
          <Frame depth="32">org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:204)</Frame>
          <Frame depth="33">org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:233)</Frame>
          <Frame depth="34">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="35">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)</Frame>
          <Frame depth="36">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)</Frame>
          <Frame depth="37">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)</Frame>
          <Frame depth="38">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)</Frame>
          <Frame depth="39">org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)</Frame>
          <Frame depth="40">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="41">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>updated plugins on latest code
pinned the console

java.lang.NullPointerException
at org.eclipse.debug.internal.ui.console.ConsoleView.partClosed
(ConsoleView.java:97)
at org.eclipse.ui.internal.PartListenerList$3.run(PartListenerList.java:89)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1015)
at org.eclipse.core.runtime.Platform.run(Platform.java:420)
at org.eclipse.ui.internal.PartListenerList.firePartClosed
(PartListenerList.java:87)
at org.eclipse.ui.internal.WorkbenchPage.firePartClosed(WorkbenchPage.java:1233)
at org.eclipse.ui.internal.WorkbenchPage.closeEditor(WorkbenchPage.java:847)
at org.eclipse.ui.internal.EditorManager.reuseInternalEditor
(EditorManager.java:645)
at org.eclipse.ui.internal.EditorManager.openEditorFromDescriptor
(EditorManager.java:456)
at org.eclipse.ui.internal.EditorManager.openEditor(EditorManager.java:431)
at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2069)
at org.eclipse.ui.internal.WorkbenchPage.access$6(WorkbenchPage.java:2019)
at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2006)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2001)
at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1934)
at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:1926)
at org.eclipse.compare.internal.CompareUIPlugin.openCompareEditor
(CompareUIPlugin.java:310)
at org.eclipse.compare.CompareUI.openCompareEditorOnPage(CompareUI.java:125)
at org.eclipse.compare.CompareUI.openCompareEditor(CompareUI.java:111)
at org.eclipse.team.internal.ui.sync.actions.OpenInCompareAction.openEditor
(OpenInCompareAction.java:64)
at org.eclipse.team.internal.ui.sync.actions.OpenInCompareAction.run
(OpenInCompareAction.java:51)
at org.eclipse.team.internal.ui.sync.actions.SyncViewerActions.open
(SyncViewerActions.java:227)
at org.eclipse.team.internal.ui.sync.views.SyncViewer.handleOpen
(SyncViewer.java:404)
at org.eclipse.team.internal.ui.sync.views.SyncViewer$6.open
(SyncViewer.java:364)
at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:392)
at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1015)
at org.eclipse.core.runtime.Platform.run(Platform.java:420)
at org.eclipse.jface.viewers.StructuredViewer.fireOpen
(StructuredViewer.java:390)
at org.eclipse.jface.viewers.StructuredViewer.handleOpen
(StructuredViewer.java:600)
at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen
(StructuredViewer.java:689)
at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:209)
at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:204)
at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:233)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
Fixed in ConsoleView.
Please verify Darinw.
Verified</WithStack>
    <WithOutStack>updated plugins on latest code
pinned the console


at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
Fixed in ConsoleView.
Please verify Darinw.
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40577" />
    <CreationDate amount="2003-07-21 20:53:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>SocketUtil#findUnusedLocalPort(String, int, int)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The implementation of findUnusedLocalPort() has been change to fix bug 35729.
The problem is that the implementation is no more in sync with the javadoc.

This method is part of the API (i don't if anybody except us is using this method).
I will update the javadoc and mark it as a breaking change.
The javadoc looks OK to me - it says that it returns a free port in the range, 
or any free port, or -1 if none found.
Actually, I'm just going to leave the old method there, and add a new method - 
then there's no breaking changes :-)
It's said in the javadoc that the method searchs for a free port on the
specified host, but the current implementation search a free port on localhost only.
I tried it - it actually does return a free port on a the specified host. I 
used a second computer in my office and stepped thru it. However, the present 
code will only return a host on local host if the 10 random ports on the 
specified host fail. So the new method is the best option.
Reverted to old method, and added new "findFreePort" method.
Please verify, Luc.
Shouldn't we put a note in the javadoc of findUnusedLocalPort(), saying that the
method may return a used port in some case (see bug 35729).
I have deprecated the method - with a note of how it can fail. As well, the 
method name is poor (it says "Local", but requires a "host"). 
please verify, Luc.
Verified.</WithStack>
    <WithOutStack>The implementation of findUnusedLocalPort() has been change to fix bug 35729.
The problem is that the implementation is no more in sync with the javadoc.

This method is part of the API (i don't if anybody except us is using this method).
I will update the javadoc and mark it as a breaking change.
The javadoc looks OK to me - it says that it returns a free port in the range, 
or any free port, or -1 if none found.
Actually, I'm just going to leave the old method there, and add a new method - 
then there's no breaking changes :-)
It's said in the javadoc that the method searchs for a free port on the
specified host, but the current implementation search a free port on localhost only.
I tried it - it actually does return a free port on a the specified host. I 
used a second computer in my office and stepped thru it. However, the present 
code will only return a host on local host if the 10 random ports on the 
specified host fail. So the new method is the best option.
Reverted to old method, and added new "findFreePort" method.
Please verify, Luc.
Shouldn't we put a note in the javadoc of findUnusedLocalPort(), saying that the
method may return a used port in some case (see bug 35729).
I have deprecated the method - with a note of how it can fail. As well, the 
method name is poor (it says "Local", but requires a "host"). 
please verify, Luc.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40578" />
    <CreationDate amount="2003-07-21 22:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Changes to classpath containers are not always reflected in the java Package Explorer</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="20">
        <Lines>
          <Line>1. Even though the package explorer does not show the library, it does</Line>
          <Line>exist in the .classpath file.</Line>
          <Line>2. This only occurs the first time I create a project in my workspace. If I</Line>
          <Line>create a second identical project, the missing library reappears in both</Line>
          <Line>projects.</Line>
          <Line>3. I've verified that the container resolves correctly and contains at least 1</Line>
          <Line>classpath entry.</Line>
          <Line>4. Once I've created a project that demonstrates the bug, restarting Eclipse</Line>
          <Line>will "fix" the project. The missing library will reappear after restarting.</Line>
          <Line>5. The problem only occurs when adding the library through the build path</Line>
          <Line>property page. The problem does not occur when adding the library in the New</Line>
          <Line>Project wizard.</Line>
          <Line>6. Refreshing the project does not fix the problem.</Line>
          <Line>7. Certain GUI actions (like advancing to the last page of the New Java Project</Line>
          <Line>wizard) will "fix" the problem. Once the problem has been fixed, it is hard to</Line>
          <Line>reproduce without deleting the projects in the workspace and restarting Eclipse.</Line>
          <Line>8. We have not yet been able to reproduce this error using the JRE System</Line>
          <Line>Library container.</Line>
          <Line>Created attachment 5526</Line>
          <Line>Plugin project containing a simple container class that demonstrates the bug</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="10">
        <Lines>
          <Line>- Start with freshly opened copy of Eclipse with an empty workspace.</Line>
          <Line>- Create a new java project called "asdf" (File -&gt; new -&gt; java project -&gt; Next</Line>
          <Line>-&gt; enter "asdf" -&gt; Click finish before advancing to the last page)</Line>
          <Line>- Expand the project in the Package Explorer by clicking +</Line>
          <Line>- Edit the build path (right-click -&gt; properties -&gt; java build path -&gt; Libraries)</Line>
          <Line>- Add a container (Add Library -&gt; Test Container (or some other custom</Line>
          <Line>container) -&gt; Next -&gt; Finish)</Line>
          <Line>- At this point, the container is correctly added in the build path dialog</Line>
          <Line>- Click "okay"</Line>
          <Line>- Notice that the new container does not appear in the Package Explorer.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When adding a container to the build path of a project, the container will often
not appear in the Package Explorer.

We first observed this bug in the containers for WSDD technology libraries, but
managed to reproduce it in a trivial container class that resolved to a single
hardcoded classpath entry (our container type was called "Test Container" --
implementation attached).

Steps to reproduce:
- Start with freshly opened copy of Eclipse with an empty workspace. 
- Create a new java project called "asdf" (File -&gt; new -&gt; java project -&gt; Next
-&gt; enter "asdf" -&gt; Click finish before advancing to the last page)
- Expand the project in the Package Explorer by clicking +
- Edit the build path (right-click -&gt; properties -&gt; java build path -&gt; Libraries)
- Add a container (Add Library -&gt; Test Container (or some other custom
container) -&gt; Next -&gt; Finish)
- At this point, the container is correctly added in the build path dialog
- Click "okay"
- Notice that the new container does not appear in the Package Explorer.


I believe this may have something to do with the Java model not being correctly
notified that the container has been added. Here are some observations:
1. Even though the package explorer does not show the library, it does
exist in the .classpath file.
2. This only occurs the first time I create a project in my workspace. If I
create a second identical project, the missing library reappears in both
projects.
3. I've verified that the container resolves correctly and contains at least 1
classpath entry.
4. Once I've created a project that demonstrates the bug, restarting Eclipse
will "fix" the project. The missing library will reappear after restarting.
5. The problem only occurs when adding the library through the build path
property page. The problem does not occur when adding the library in the New
Project wizard.
6. Refreshing the project does not fix the problem.
7. Certain GUI actions (like advancing to the last page of the New Java Project
wizard) will "fix" the problem. Once the problem has been fixed, it is hard to
reproduce without deleting the projects in the workspace and restarting Eclipse.
8. We have not yet been able to reproduce this error using the JRE System
Library container.
Created attachment 5526
Plugin project containing a simple container class that demonstrates the bug

This is the source for a plugin that provides a trivial classpath container, a
container properties page, and a container initializer. Load this project into
your workspace and you should be able to demonstrate the bug in an inner
workspace.
Edited Container.getClasspathEntries() to point to "d:/jdk1.3.1/lib/tools.jar" 
(so that it exists in my setup).

When following the given steps, the Java element delta being fired looks ok:
Java Model[*]: {CHILDREN}
	asdf[*]: {CHILDREN}
		D:/jdk1.3.1/lib/tools.jar[+]: {}
		ResourceDelta(/asdf/.classpath)[*]

However the Package Explorer view is not reacting to this delta.

Moving to JDT/UI.


*** This bug has been marked as a duplicate of 38513 ***
reopen, the delta includes a change to a package fragment root

Java Model[*]: {CHILDREN}
	asdf[*]: {CHILDREN}
		D:/jdk1.3.1/lib/tools.jar[+]: {}

should be fixed by the new F_CLASSPATH_CHANGED notification</WithStack>
    <WithOutStack>When adding a container to the build path of a project, the container will often
not appear in the Package Explorer.

We first observed this bug in the containers for WSDD technology libraries, but
managed to reproduce it in a trivial container class that resolved to a single
hardcoded classpath entry (our container type was called "Test Container" --
implementation attached).

Steps to reproduce:
- Start with freshly opened copy of Eclipse with an empty workspace. 
- Create a new java project called "asdf" (File -&gt; new -&gt; java project -&gt; Next
-&gt; enter "asdf" -&gt; Click finish before advancing to the last page)
- Expand the project in the Package Explorer by clicking +
- Edit the build path (right-click -&gt; properties -&gt; java build path -&gt; Libraries)
- Add a container (Add Library -&gt; Test Container (or some other custom
container) -&gt; Next -&gt; Finish)
- At this point, the container is correctly added in the build path dialog
- Click "okay"
- Notice that the new container does not appear in the Package Explorer.


I believe this may have something to do with the Java model not being correctly
notified that the container has been added. Here are some observations:
1. Even though the package explorer does not show the library, it does
exist in the .classpath file.
2. This only occurs the first time I create a project in my workspace. If I
create a second identical project, the missing library reappears in both
projects.
3. I've verified that the container resolves correctly and contains at least 1
classpath entry.
4. Once I've created a project that demonstrates the bug, restarting Eclipse
will "fix" the project. The missing library will reappear after restarting.
5. The problem only occurs when adding the library through the build path
property page. The problem does not occur when adding the library in the New
Project wizard.
6. Refreshing the project does not fix the problem.
7. Certain GUI actions (like advancing to the last page of the New Java Project
wizard) will "fix" the problem. Once the problem has been fixed, it is hard to
reproduce without deleting the projects in the workspace and restarting Eclipse.
8. We have not yet been able to reproduce this error using the JRE System
Library container.
Created attachment 5526
Plugin project containing a simple container class that demonstrates the bug

This is the source for a plugin that provides a trivial classpath container, a
container properties page, and a container initializer. Load this project into
your workspace and you should be able to demonstrate the bug in an inner
workspace.
Edited Container.getClasspathEntries() to point to "d:/jdk1.3.1/lib/tools.jar" 
(so that it exists in my setup).

When following the given steps, the Java element delta being fired looks ok:
Java Model[*]: {CHILDREN}
	asdf[*]: {CHILDREN}
		D:/jdk1.3.1/lib/tools.jar[+]: {}
		ResourceDelta(/asdf/.classpath)[*]

However the Package Explorer view is not reacting to this delta.

Moving to JDT/UI.


*** This bug has been marked as a duplicate of 38513 ***
reopen, the delta includes a change to a package fragment root

Java Model[*]: {CHILDREN}
	asdf[*]: {CHILDREN}
		D:/jdk1.3.1/lib/tools.jar[+]: {}

should be fixed by the new F_CLASSPATH_CHANGED notification</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40579" />
    <CreationDate amount="2003-07-22 02:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P1" />
    <bug_severity amount="critical" />
    <Summery>QuickDiff causes deadlock</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="90">
        <Lines>
          <Line>- waiting to lock &lt;0x1694e3a8&gt; (a</Line>
          <Line>org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer)</Line>
          <Line>at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged</Line>
          <Line>(AbstractDocument.java:598)</Line>
          <Line>at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged</Line>
          <Line>(AbstractDocument.java:563)</Line>
          <Line>at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged</Line>
          <Line>(AbstractDocument.java:623)</Line>
          <Line>at org.eclipse.jface.text.AbstractDocument.replace</Line>
          <Line>(AbstractDocument.java:906)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall</Line>
          <Line>ySynchronizedDocument.replace(CompilationUnitDocumentProvider.java:726)</Line>
          <Line>- locked &lt;0x167ea220&gt; (a</Line>
          <Line>org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall</Line>
          <Line>ySynchronizedDocument)</Line>
          <Line>at org.eclipse.jface.text.DocumentAdapter.replaceTextRange</Line>
          <Line>(DocumentAdapter.java:165)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.modifyContent</Line>
          <Line>(StyledText.java:5856)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6794)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2546)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5187)</Line>
          <Line>at org.eclipse.swt.custom.StyledText.handleKeyDown</Line>
          <Line>(StyledText.java:5210)</Line>
          <Line>at org.eclipse.swt.custom.StyledText$8.handleEvent</Line>
          <Line>(StyledText.java:4957)</Line>
          <Line>at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:872)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)</Line>
          <Line>at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1675)</Line>
          <Line>at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1671)</Line>
          <Line>at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:2993)</Line>
          <Line>at org.eclipse.swt.widgets.Control.windowProc(Control.java:2872)</Line>
          <Line>at org.eclipse.swt.widgets.Display.windowProc(Display.java:2713)</Line>
          <Line>at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Line>
          <Line>at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1338)</Line>
          <Line>at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1876)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)</Line>
          <Line>at org.eclipse.core.internal.boot.InternalBootLoader.run</Line>
          <Line>(InternalBootLoader.java:858)</Line>
          <Line>at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke</Line>
          <Line>(NativeMethodAccessorImpl.java:39)</Line>
          <Line>at sun.reflect.DelegatingMethodAccessorImpl.invoke</Line>
          <Line>(DelegatingMethodAccessorImpl.java:25)</Line>
          <Line>at java.lang.reflect.Method.invoke(Method.java:324)</Line>
          <Line>at org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Line>
          <Line>at org.eclipse.core.launcher.Main.run(Main.java:747)</Line>
          <Line>at org.eclipse.core.launcher.Main.main(Main.java:583)</Line>
          <Line>"Worker-173":</Line>
          <Line>at</Line>
          <Line>org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall</Line>
          <Line>ySynchronizedDocument.get(CompilationUnitDocumentProvider.java:705)</Line>
          <Line>- waiting to lock &lt;0x167ea220&gt; (a</Line>
          <Line>org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall</Line>
          <Line>ySynchronizedDocument)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer.initialize</Line>
          <Line>(DocumentLineDiffer.java:545)</Line>
          <Line>- locked &lt;0x1694e3a8&gt; (a</Line>
          <Line>org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer)</Line>
          <Line>at</Line>
          <Line>org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer$DocumentListener.d</Line>
          <Line>ocumentChanged(DocumentLineDiffer.java:98)</Line>
          <Line>at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged</Line>
          <Line>(AbstractDocument.java:598)</Line>
          <Line>at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged</Line>
          <Line>(AbstractDocument.java:563)</Line>
          <Line>at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged</Line>
          <Line>(AbstractDocument.java:623)</Line>
          <Line>at org.eclipse.jface.text.AbstractDocument.set</Line>
          <Line>(AbstractDocument.java:920)</Line>
          <Line>at</Line>
          <Line>net.sourceforge.perforce.internal.ui.quickdiff.QuickDiffProvider.setDocumentCon</Line>
          <Line>tent(QuickDiffProvider.java:248)</Line>
          <Line>at</Line>
          <Line>net.sourceforge.perforce.internal.ui.quickdiff.QuickDiffProvider.readDocument</Line>
          <Line>(QuickDiffProvider.java:196)</Line>
          <Line>at</Line>
          <Line>net.sourceforge.perforce.internal.ui.quickdiff.QuickDiffProvider.getReference</Line>
          <Line>(QuickDiffProvider.java:108)</Line>
          <Line>- locked &lt;0x1695c2e8&gt; (a</Line>
          <Line>net.sourceforge.perforce.internal.ui.quickdiff.QuickDiffProvider)</Line>
          <Line>at org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer$1.run</Line>
          <Line>(DocumentLineDiffer.java:550)</Line>
          <Line>at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 3.0M2

The following deadlock situation appeared this morning. Although the QuickDiff 
implementation that appears in the stacktrace is mine, it's very much based on 
the example provider implementation.

Found one Java-level deadlock:
=============================
"main":
  waiting to lock monitor 0x009c289c (object 0x1694e3a8, a 
org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer),
  which is held by "Worker-173"
"Worker-173":
  waiting to lock monitor 0x009c287c (object 0x167ea220, a 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall
ySynchronizedDocument)
,
  which is held by "main"

Java stack information for the threads listed above:
===================================================
"main":
        at 
org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer.documentChanged
(DocumentLineDiffer.java:656)
        - waiting to lock &lt;0x1694e3a8&gt; (a 
org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer)
        at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged
(AbstractDocument.java:598)
        at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged
(AbstractDocument.java:563)
        at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged
(AbstractDocument.java:623)
        at org.eclipse.jface.text.AbstractDocument.replace
(AbstractDocument.java:906)
        at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall
ySynchronizedDocument.replace(CompilationUnitDocumentProvider.java:726)
        - locked &lt;0x167ea220&gt; (a 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall
ySynchronizedDocument)
        at org.eclipse.jface.text.DocumentAdapter.replaceTextRange
(DocumentAdapter.java:165)
        at org.eclipse.swt.custom.StyledText.modifyContent
(StyledText.java:5856)
        at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6794)
        at org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2546)
        at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5187)
        at org.eclipse.swt.custom.StyledText.handleKeyDown
(StyledText.java:5210)
        at org.eclipse.swt.custom.StyledText$8.handleEvent
(StyledText.java:4957)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:872)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)
        at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1675)
        at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1671)
        at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:2993)
        at org.eclipse.swt.widgets.Control.windowProc(Control.java:2872)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:2713)
        at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
        at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1338)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1876)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
        at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
        at org.eclipse.core.launcher.Main.run(Main.java:747)
        at org.eclipse.core.launcher.Main.main(Main.java:583)
"Worker-173":
        at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall
ySynchronizedDocument.get(CompilationUnitDocumentProvider.java:705)
        - waiting to lock &lt;0x167ea220&gt; (a 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall
ySynchronizedDocument)
        at 
org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer.initialize
(DocumentLineDiffer.java:545)
        - locked &lt;0x1694e3a8&gt; (a 
org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer)
        at 
org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer$DocumentListener.d
ocumentChanged(DocumentLineDiffer.java:98)
        at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged
(AbstractDocument.java:598)
        at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged
(AbstractDocument.java:563)
        at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged
(AbstractDocument.java:623)
        at org.eclipse.jface.text.AbstractDocument.set
(AbstractDocument.java:920)
        at 
net.sourceforge.perforce.internal.ui.quickdiff.QuickDiffProvider.setDocumentCon
tent(QuickDiffProvider.java:248)
        at 
net.sourceforge.perforce.internal.ui.quickdiff.QuickDiffProvider.readDocument
(QuickDiffProvider.java:196)
        at 
net.sourceforge.perforce.internal.ui.quickdiff.QuickDiffProvider.getReference
(QuickDiffProvider.java:108)
        - locked &lt;0x1695c2e8&gt; (a 
net.sourceforge.perforce.internal.ui.quickdiff.QuickDiffProvider)
        at org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer$1.run
(DocumentLineDiffer.java:550)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)

Found 1 deadlock.
Investigating.
This deadlock can ocur when the reference document is changed in a thread 
different from the ui thread and the document in the editor is changed at the 
same time and the document in the editor synchronizes its modifications 
including the notification of listeners.

In your case the deadlock is caused by the fact that initializing the 
reference document causes the DocumentLineDiffer to reinitialize because of 
the issued document event. I don't understand how this cycle is introduced as 
the reference listener is installed after the reference has been requested. 
See DocumentLineDiffer.initialize for details. Thus, the stack trace for 
Worker-173 should not show that QuickDiffProvider.setDocumentContent triggers 
the reference listener of the DocumentLineDiffer. Is there anything special in 
your implementation in this respect?
When the status of the underlying reference changes, I am calling reference.set(""). As I 
understand, this'll issue the event that calls getReference(). I will then perform another 
setReference() call (now with the new content).
(... I meant reference.set() instead of setReference() ...)
The situation is much better since the new DocumentLineDiffer (&gt; 20030930) does
not copy the diffed documents any longer inside a concurrent thread. 

The only chance for a deadlock is now while re-injecting DocumentEvents that
were stored while diff initializing was going on.
fixed &gt; 20031006

DocumentLineDiffer now tries to get a copy of the reference (and actual)
documents until it is sure its copy is up to date and no document changes have
been missed.</WithStack>
    <WithOutStack>Eclipse 3.0M2

The following deadlock situation appeared this morning. Although the QuickDiff 
implementation that appears in the stacktrace is mine, it's very much based on 
the example provider implementation.

Found one Java-level deadlock:
=============================
"main":
  waiting to lock monitor 0x009c289c (object 0x1694e3a8, a 
org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer),
  which is held by "Worker-173"
"Worker-173":
  waiting to lock monitor 0x009c287c (object 0x167ea220, a 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall
ySynchronizedDocument)
,
  which is held by "main"

Java stack information for the threads listed above:
===================================================
"main":
        at 
org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer.documentChanged
(DocumentLineDiffer.java:656)
        - waiting to lock &lt;0x1694e3a8&gt; (a 
org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer)
        at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged
(AbstractDocument.java:598)
        at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged
(AbstractDocument.java:563)
        at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged
(AbstractDocument.java:623)
        at org.eclipse.jface.text.AbstractDocument.replace
(AbstractDocument.java:906)
        at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall
ySynchronizedDocument.replace(CompilationUnitDocumentProvider.java:726)
        - locked &lt;0x167ea220&gt; (a 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall
ySynchronizedDocument)
        at org.eclipse.jface.text.DocumentAdapter.replaceTextRange
(DocumentAdapter.java:165)
        at org.eclipse.swt.custom.StyledText.modifyContent
(StyledText.java:5856)
        at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6794)
        at org.eclipse.swt.custom.StyledText.doContent(StyledText.java:2546)
        at org.eclipse.swt.custom.StyledText.handleKey(StyledText.java:5187)
        at org.eclipse.swt.custom.StyledText.handleKeyDown
(StyledText.java:5210)
        at org.eclipse.swt.custom.StyledText$8.handleEvent
(StyledText.java:4957)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:872)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:857)
        at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1675)
        at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1671)
        at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:2993)
        at org.eclipse.swt.widgets.Control.windowProc(Control.java:2872)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:2713)
        at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
        at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1338)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1876)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
        at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
        at org.eclipse.core.launcher.Main.run(Main.java:747)
        at org.eclipse.core.launcher.Main.main(Main.java:583)
"Worker-173":
        at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall
ySynchronizedDocument.get(CompilationUnitDocumentProvider.java:705)
        - waiting to lock &lt;0x167ea220&gt; (a 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Partiall
ySynchronizedDocument)
        at 
org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer.initialize
(DocumentLineDiffer.java:545)
        - locked &lt;0x1694e3a8&gt; (a 
org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer)
        at 
org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer$DocumentListener.d
ocumentChanged(DocumentLineDiffer.java:98)
        at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged
(AbstractDocument.java:598)
        at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged
(AbstractDocument.java:563)
        at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged
(AbstractDocument.java:623)
        at org.eclipse.jface.text.AbstractDocument.set
(AbstractDocument.java:920)
        at 
net.sourceforge.perforce.internal.ui.quickdiff.QuickDiffProvider.setDocumentCon
tent(QuickDiffProvider.java:248)
        at 
net.sourceforge.perforce.internal.ui.quickdiff.QuickDiffProvider.readDocument
(QuickDiffProvider.java:196)
        at 
net.sourceforge.perforce.internal.ui.quickdiff.QuickDiffProvider.getReference
(QuickDiffProvider.java:108)
        - locked &lt;0x1695c2e8&gt; (a 
net.sourceforge.perforce.internal.ui.quickdiff.QuickDiffProvider)
        at org.eclipse.ui.internal.editors.quickdiff.DocumentLineDiffer$1.run
(DocumentLineDiffer.java:550)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)

Found 1 deadlock.
Investigating.
This deadlock can ocur when the reference document is changed in a thread 
different from the ui thread and the document in the editor is changed at the 
same time and the document in the editor synchronizes its modifications 
including the notification of listeners.

In your case the deadlock is caused by the fact that initializing the 
reference document causes the DocumentLineDiffer to reinitialize because of 
the issued document event. I don't understand how this cycle is introduced as 
the reference listener is installed after the reference has been requested. 
See DocumentLineDiffer.initialize for details. Thus, the stack trace for 
Worker-173 should not show that QuickDiffProvider.setDocumentContent triggers 
the reference listener of the DocumentLineDiffer. Is there anything special in 
your implementation in this respect?
When the status of the underlying reference changes, I am calling reference.set(""). As I 
understand, this'll issue the event that calls getReference(). I will then perform another 
setReference() call (now with the new content).
(... I meant reference.set() instead of setReference() ...)
The situation is much better since the new DocumentLineDiffer (&gt; 20030930) does
not copy the diffed documents any longer inside a concurrent thread. 

The only chance for a deadlock is now while re-injecting DocumentEvents that
were stored while diff initializing was going on.
fixed &gt; 20031006

DocumentLineDiffer now tries to get a copy of the reference (and actual)
documents until it is sure its copy is up to date and no document changes have
been missed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40580" />
    <CreationDate amount="2003-07-22 04:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>[navigation] Matching brace (Ctrl+Shift+P) should work anywhere in the file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="functiondef">
        <location start="234" end="350" />
        <code>int foo()
{
   // code
&lt;&lt;&lt; cursor here 1.
  if(bar())
  {
    // code
&lt;&lt;&lt; cursor here 2.
    // some more code
  }
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="6038" end="6109" />
        <code>void foobar() {
		String s= ("asdsd(");
		String s= "(bug[[gy!)";]]
	}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="6806" end="6903" />
        <code>&gt;     void foobar() {
&gt;         String s= ("asdsd(");
&gt;         String s= "(bug[[gy!)";]]
&gt;     }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="6">
      <Enumeration lines="7">
        <Lines>
          <Line>e.g. [(]x.o != null) ==&gt; (x.o != null)[ ]</Line>
          <Line />
          <Line>Ideally it would work like this:</Line>
          <Line>[(]x.o != null) &lt;==&gt; (x.o != null[)] incl. preserving of the selection direction</Line>
          <Line>and in respect to this bug:</Line>
          <Line />
          <Line>(x.o [!=] null) ==&gt; [(]x.o != null) ==&gt; (x.o != null[)] ==&gt; (x.o [!=] null)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="14">
        <Lines>
          <Line>1) Users who enable to always show matching brackets will get an on/off</Line>
          <Line>highlighting when they select something inside the brackets. This is</Line>
          <Line>distracting and useless visual noise.</Line>
          <Line>2) The implementation shouldn't be too hard: just make sure that the whole</Line>
          <Line>selection is inside the matching brackets - matching brackets included.</Line>
          <Line>(In reply to comment #19)</Line>
          <Line>&gt; &gt; Point taken, but we should make the behavior inside brackets consistent i.e.</Line>
          <Line>&gt; &gt; also disable it when the selection length is 1.</Line>
          <Line>&gt;</Line>
          <Line>&gt; I have to take that back. After discussion with Markus and looking closer at</Line>
          <Line>&gt; it, we must support the selection. Two reasons:</Line>
          <Line>&gt; 1) Users who enable to always show matching brackets will get an on/off</Line>
          <Line>&gt;    highlighting when they select something inside the brackets. This is</Line>
          <Line>&gt;    distracting and useless visual noise.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>1. Highlight enclosing brackets in the editor</Line>
          <Line>2. Go to matching brackets action</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>1. we will have to check in the client if the selection is of length 1 and covers a bracket. For that we will need another API in ICharacterPairMatcherExtension.getChars() which returns all the characters that the pair matcher matches. (We need this only in MatchingCharacterPainter, in JavaEditor we already have the matched characters.)</Line>
          <Line>2. Then call getOffsetAdjustment() to adjust the offset</Line>
          <Line>3. Then call the old match method.</Line>
          <Line>... looks like a bit of dance in the client code.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- (RtoL) can be removed as it's already written in plain text.</Line>
          <Line>- "Starting at the given selection as indicated by the given ..."</Line>
          <Line>Just write "given selection". The param Javadoc clarifies this enough.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- one for finding a match peer</Line>
          <Line>- one for finding enclosing peers</Line>
          <Line>... and both these methods also need to have a notion of selection.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Now you have to be exactly behind a brace to get CTRL-SHIFT-P working. This is 
a bit annoying. Can't it just work every where in the file?

then it just searches for the brace i am in and toggles between begin and end.
for example:

int foo()
{
   // code
&lt;&lt;&lt; cursor here 1.
  if(bar())
  {
    // code
&lt;&lt;&lt; cursor here 2.
    // some more code
  }
}

with cursor here 1 it shows the braces of the complete method
with cursor here 2 it shows the braces of the if.
See also bug 38608
*** Bug 76187 has been marked as a duplicate of this bug. ***
Sounds like a good idea (also bug 76187).
*** Bug 38608 has been marked as a duplicate of this bug. ***
We also need to investigate whether the third Ctrl+Shift+P goes back to the initial caret or whether we have to offer another way to get back to it.
Moving to M6...
(In reply to comment #5)
&gt; We also need to investigate whether the third Ctrl+Shift+P goes back to the
&gt; initial caret or whether we have to offer another way to get back to it.

How important is it to provide a mechanism to go back to the initial caret?
I think it IS important because you can cycle through the left, right brace and original caret position easily. Presumably the locations are being stored in the location history, thus I guess the user could always invoke the
org.eclipse.ui.navigate.backwardHistory action to get back to the original position. But it will be nice if the same key binding (Ctrl+Shift+P) works so that the flow is not broken.
(In reply to comment #7)
&gt; (In reply to comment #5)
&gt; &gt; We also need to investigate whether the third Ctrl+Shift+P goes back to the
&gt; &gt; initial caret or whether we have to offer another way to get back to it.
&gt; 
&gt; How important is it to provide a mechanism to go back to the initial caret?

It's a must, and I think it should be via Ctrl+Shift+P. We don't put such navigation points into the navigation history and shouldn't start with this now.
The underlying infrastructure to find the enclosing brackets will come from bug 366400.
(In reply to comment #9)
&gt; &gt; How important is it to provide a mechanism to go back to the initial caret?
&gt; 
&gt; It's a must, and I think it should be via Ctrl+Shift+P. 
This bit is easy and I have a fix in my workspace, but...

When you select a bracket (and not just place the caret next to a bracket) and then use the action, it behaves erratically.  To see the erratic nature of the action try with left to right selection of a bracket and compare the results with right to left selection.

I am wondering whether we need to continue to support this mode where the selection is non zero? (as things go a bit more crazy when the action works anywhere in a file)

An alternative would be to auto adjust the caret location i.e. treat left to right selection and right to left selection in the same way and just find the correct match.

Thoughts...
(In reply to comment #11)
&gt; (In reply to comment #9)
&gt; &gt; &gt; How important is it to provide a mechanism to go back to the initial caret?
&gt; &gt; 
&gt; &gt; It's a must, and I think it should be via Ctrl+Shift+P. 
&gt; This bit is easy and I have a fix in my workspace, but...
&gt; 
&gt; When you select a bracket (and not just place the caret next to a bracket) and
&gt; then use the action, it behaves erratically.  To see the erratic nature of the
&gt; action try with left to right selection of a bracket and compare the results
&gt; with right to left selection.
&gt; 
&gt; I am wondering whether we need to continue to support this mode where the
&gt; selection is non zero? (as things go a bit more crazy when the action works
&gt; anywhere in a file)
&gt; 
&gt; An alternative would be to auto adjust the caret location i.e. treat left to
&gt; right selection and right to left selection in the same way and just find the
&gt; correct match.
&gt; 
&gt; Thoughts...

The behavior when there's a [selection] was always a bit muddy:
    e.g. [(]x.o != null) ==&gt; (x.o != null)[ ]

Ideally it would work like this:
[(]x.o != null) &lt;==&gt; (x.o != null[)] incl. preserving of the selection direction
and in respect to this bug:

(x.o [!=] null) ==&gt; [(]x.o != null) ==&gt; (x.o != null[)] ==&gt; (x.o [!=] null)

If this is not possible / too hard to implement then I suggest we only enable it when there's no selection.
Patch on bug 366400 comment 6 includes the fix for this bug.

&gt; The behavior when there's a [selection] was always a bit muddy:
This should work perfectly now, wasn't too hard to fix. (Fix for bug 26314 was not the greatest)

Note that the action still complains when the selection length is greater than 1, which I think is OK.
I think it might also be possible to move the implementation in JavaEditor.gotoMatchingBracket() to Platform, though I don't know if it is worth to do so.
(In reply to comment #13)
&gt; Patch on bug 366400 comment 6 includes the fix for this bug.
&gt; 
&gt; &gt; The behavior when there's a [selection] was always a bit muddy:
&gt; This should work perfectly now, wasn't too hard to fix. (Fix for bug 26314 was
&gt; not the greatest)
&gt; 
&gt; Note that the action still complains when the selection length is greater than
&gt; 1, which I think is OK.

Works nice. I agree with above statement when the selection contains (the) brackets but not when the selection is inside the brackets: there I'd expect that I can toggle between selected text and the surrounding brackets.
(In reply to comment #14)
&gt; I think it might also be possible to move the implementation in
&gt; JavaEditor.gotoMatchingBracket() to Platform, though I don't know if it is
&gt; worth to do so.

This would only make sense if we'd also move down the 'GotoMatchingBracketAction' action. I suggest we do this once we have a concrete request for it.
(In reply to comment #15)
&gt; &gt; Note that the action still complains when the selection length is greater than
&gt; &gt; 1, which I think is OK.
&gt; 
&gt; Works nice. I agree with above statement when the selection contains (the)
&gt; brackets but not when the selection is inside the brackets: there I'd expect
&gt; that I can toggle between selected text and the surrounding brackets.
It will get a bit complicated. For example,

	void foobar() {
		String s= ("asdsd(");
		String s= "(bug[[gy!)";]]
	}

[[  ]] denotes selection

What should happen here? We ignore the '(' before 'bug' while computing enclosing brackets? Or do we complain that a bracket cannot be found?

Though, I am open to take this as an additional enhancement request.
(In reply to comment #17)
&gt; (In reply to comment #15)
&gt; &gt; &gt; Note that the action still complains when the selection length is greater than
&gt; &gt; &gt; 1, which I think is OK.
&gt; &gt; 
&gt; &gt; Works nice. I agree with above statement when the selection contains (the)
&gt; &gt; brackets but not when the selection is inside the brackets: there I'd expect
&gt; &gt; that I can toggle between selected text and the surrounding brackets.
&gt; It will get a bit complicated. For example,
&gt; 
&gt;     void foobar() {
&gt;         String s= ("asdsd(");
&gt;         String s= "(bug[[gy!)";]]
&gt;     }
&gt; 
&gt; [[  ]] denotes selection
&gt; 
&gt; What should happen here? We ignore the '(' before 'bug' while computing
&gt; enclosing brackets? Or do we complain that a bracket cannot be found?
&gt; 

Point taken, but we should make the behavior inside brackets consistent i.e. also disable it when the selection length is 1.
&gt; Point taken, but we should make the behavior inside brackets consistent i.e.
&gt; also disable it when the selection length is 1.

I have to take that back. After discussion with Markus and looking closer at it, we must support the selection. Two reasons:
1) Users who enable to always show matching brackets will get an on/off 
   highlighting when they select something inside the brackets. This is
   distracting and useless visual noise.
2) The implementation shouldn't be too hard: just make sure that the whole
   selection is inside the matching brackets - matching brackets included.
(In reply to comment #19)
&gt; &gt; Point taken, but we should make the behavior inside brackets consistent i.e.
&gt; &gt; also disable it when the selection length is 1.
&gt; 
&gt; I have to take that back. After discussion with Markus and looking closer at
&gt; it, we must support the selection. Two reasons:
&gt; 1) Users who enable to always show matching brackets will get an on/off 
&gt;    highlighting when they select something inside the brackets. This is
&gt;    distracting and useless visual noise.

Hold on. There are two things
1. Highlight enclosing brackets in the editor
2. Go to matching brackets action

You are talking about 1 or 2 or both ? (This bug is about 2) 

Currently both highlighting and the action do not work with a selection.

&gt; 2) The implementation shouldn't be too hard: just make sure that the whole
&gt;    selection is inside the matching brackets - matching brackets included.
The implementation would have to change the new API to add the notion of a non-zero selection : ICharacterPairMatcherExtension#findEnclosingPeerCharacters(org.eclipse.jface.text.IDocument, int)
(In reply to comment #20)
&gt; (In reply to comment #19)
&gt; &gt; &gt; Point taken, but we should make the behavior inside brackets consistent i.e.
&gt; &gt; &gt; also disable it when the selection length is 1.
&gt; &gt; 
&gt; &gt; I have to take that back. After discussion with Markus and looking closer at
&gt; &gt; it, we must support the selection. Two reasons:
&gt; &gt; 1) Users who enable to always show matching brackets will get an on/off 
&gt; &gt;    highlighting when they select something inside the brackets. This is
&gt; &gt;    distracting and useless visual noise.
&gt; 
&gt; Hold on. There are two things
&gt; 1. Highlight enclosing brackets in the editor
&gt; 2. Go to matching brackets action
&gt; 
&gt; You are talking about 1 or 2 or both ? (This bug is about 2) 
&gt; 
&gt; Currently both highlighting and the action do not work with a selection.

Right, and that needs to be fixed.

&gt; The implementation would have to change the new API to add the notion of a
&gt; non-zero selection :
&gt; ICharacterPairMatcherExtension#findEnclosingPeerCharacters(org.eclipse.jface.text.IDocument,
&gt; int)

Yep.
Highlighting matching brackets is currently disabled when selection is non-zero,
see org.eclipse.jface.text.source.MatchingCharacterPainter.paint(int) line 247.

If you enable it, and have the following settings, and select a bracket
[x] Highlight matching brackets
     [x] Highlight bracket at caret location
     [x] Highlight enclosing brackets

... there could be a conflict as to what is painted especially once we add an annotation as part of bug 358347. I don't know if this would be ok or not...
(In reply to comment #22)
&gt; Highlighting matching brackets is currently disabled when selection is
&gt; non-zero,
&gt; see org.eclipse.jface.text.source.MatchingCharacterPainter.paint(int) line 247.
&gt; 
&gt; If you enable it, and have the following settings, and select a bracket
&gt; [x] Highlight matching brackets
&gt;      [x] Highlight bracket at caret location
&gt;      [x] Highlight enclosing brackets
&gt; 
&gt; ... there could be a conflict

Do you have an example?


&gt; especially once we add an annotation as part of bug 358347.With 
If we don't start to support the selection, this will even be more noise, because then, the annotations in the ruler come and go while you type/select things inside the same enclosing brackets.
(In reply to comment #23)
&gt; &gt; especially once we add an annotation as part of bug 358347.With 
&gt; If we don't start to support the selection, this will even be more noise,
&gt; because then, the annotations in the ruler come and go while you type/select
&gt; things inside the same enclosing brackets.
Yeah, makes sense.

The implementation is also simple enough, I just find matching brackets enclosing the 'selection' as opposed to offset. Will attach a patch soon.
Created attachment 211173
patch for jdt ui
Created attachment 211174
patch for platform text

&gt; The implementation is also simple enough.

The implementation was simple enough, but avoiding code duplication and getting the APIs right was relatively harder. 

These two patches should work perfectly with zero and non-zero selections. Dani, let me know if I missed something. In the meanwhile, I will work on adding some new tests.
I don't like all the new APIs which mostly are helpers / look like implementation details. For example getOffsetAdjustment(): it's not obvious from reading the Javadoc why that adjustment is really needed. It e.g. says, it's used to adjust the start offset for the matcher, but in the JavaEditor it is used afterwards. I know, I always want to avoid code duplication but we should have at least 3 clients before we add helpers as API. For now, I would only adjust the findEnclosingPeerCharacters API.

ICharacterPairMatcherExtension.findEnclosingPeerCharacters
- (RtoL) can be removed as it's already written in plain text.
- "Starting at the given selection as indicated by the given ..."
  Just write "given selection". The param Javadoc clarifies this enough.

MatchingCharacterPainter
- Only have characterPresentAtCaretLocation= (pair != null) once in the code

For getSignedSelection: we should probably just use the model selection (viewer.getSelection()) and change the sign based on the widget. We also need to verify that it works in block selection mode.
(In reply to comment #27)
&gt; I don't like all the new APIs which mostly are helpers / look like
&gt; implementation details. For example getOffsetAdjustment(): it's not obvious
&gt; from reading the Javadoc why that adjustment is really needed. It e.g. says,
&gt; it's used to adjust the start offset for the matcher, but in the JavaEditor it
&gt; is used afterwards. 
I can agree that 'getOffsetAdjustment()' is a bit hacky and not really an API :-) I can make this private and duplicate the code...

&gt; I know, I always want to avoid code duplication but we
&gt; should have at least 3 clients before we add helpers as API. For now, I would
&gt; only adjust the findEnclosingPeerCharacters API.
However, I think we do need ICharacterPairMatcherExtension.match(IDocument, int, int).

- We have two clients today MatchingCharacterPainter.paint(int) and JavaEditor.gotoMatchingBracket(). In both of the current clients we need to distinguish the case when a 'match' is found (i.e. the selection is of length 1 and this selection covers a bracket), and when 'enclosing' brackets are found.

- Without the new match method
1. we will have to check in the client if the selection is of length 1 and covers a bracket. For that we will need another API in ICharacterPairMatcherExtension.getChars() which returns all the characters that the pair matcher matches. (We need this only in MatchingCharacterPainter, in JavaEditor we already have the matched characters.)
2. Then call getOffsetAdjustment() to adjust the offset
3. Then call the old match method.
... looks like a bit of dance in the client code.

Also note that the client only needs to call the new match method, which is what I have done in both clients. (The calls to old match method remain only to preserve old behavior but they are not really used from Java editor)
(In reply to comment #28)
&gt; (In reply to comment #27)
&gt; &gt; I don't like all the new APIs which mostly are helpers / look like
&gt; &gt; implementation details. For example getOffsetAdjustment(): it's not obvious
&gt; &gt; from reading the Javadoc why that adjustment is really needed. It e.g. says,
&gt; &gt; it's used to adjust the start offset for the matcher, but in the JavaEditor it
&gt; &gt; is used afterwards. 
&gt; I can agree that 'getOffsetAdjustment()' is a bit hacky and not really an API
&gt; :-) I can make this private and duplicate the code...
&gt; 
&gt; &gt; I know, I always want to avoid code duplication but we
&gt; &gt; should have at least 3 clients before we add helpers as API. For now, I would
&gt; &gt; only adjust the findEnclosingPeerCharacters API.
&gt; However, I think we do need ICharacterPairMatcherExtension.match(IDocument,
&gt; int, int).
&gt; 
&gt; - We have two clients today MatchingCharacterPainter.paint(int) and
&gt; JavaEditor.gotoMatchingBracket(). In both of the current clients we need to
&gt; distinguish the case when a 'match' is found (i.e. the selection is of length 1
&gt; and this selection covers a bracket), and when 'enclosing' brackets are found.
&gt; 
&gt; - Without the new match method
&gt; 1. we will have to check in the client if the selection is of length 1 and
&gt; covers a bracket. For that we will need another API in
&gt; ICharacterPairMatcherExtension.getChars() which returns all the characters that
&gt; the pair matcher matches. (We need this only in MatchingCharacterPainter, in
&gt; JavaEditor we already have the matched characters.)
&gt; 2. Then call getOffsetAdjustment() to adjust the offset
&gt; 3. Then call the old match method.
&gt; ... looks like a bit of dance in the client code.
&gt; 
&gt; Also note that the client only needs to call the new match method, which is
&gt; what I have done in both clients. (The calls to old match method remain only to
&gt; preserve old behavior but they are not really used from Java editor)


Still not convinced ;-)
Couldn't you use findEnclosingPeerCharacters(...) along with the current match(...) API to make the decision?
(In reply to comment #29)
&gt; Couldn't you use findEnclosingPeerCharacters(...) along with the current
&gt; match(...) API to make the decision?

Of course, I can. But as I said the client code becomes ugly/complicated, and there is quite a bit of code duplication.

(In reply to comment #26)
&gt; The implementation was simple enough, but avoiding code duplication and getting
&gt; the APIs right was relatively harder. 
I did spent some time trying to do this without adding a new API, but ultimately realized that the pair matcher needs to have 2 methods 
- one for finding a match peer 
- one for finding enclosing peers
... and both these methods also need to have a notion of selection. 

I could modify findEnclosingPeers because it was new, but I cannot touch the existing match method which is why I added a new one. Possibly we can deprecate the old method or add a note to it recommending users to use the new method.
(In reply to comment #30)
&gt; (In reply to comment #29)
&gt; &gt; Couldn't you use findEnclosingPeerCharacters(...) along with the current
&gt; &gt; match(...) API to make the decision?
&gt; 
&gt; Of course, I can. But as I said the client code becomes ugly/complicated, and
&gt; there is quite a bit of code duplication.

Maybe I wasn't clear: I meant, use both together to decide in which case you are. If you think that doesn't work, the add the match(...) method but please provide Javadoc that explains what its intention is in contrast to just writing if-statements in the Javadoc.
(In reply to comment #31)
&gt; Maybe I wasn't clear: I meant, use both together to decide in which case you
&gt; are. 
No, I cannot.

&gt; If you think that doesn't work, the add the match(...) method but please
&gt; provide Javadoc that explains what its intention is in contrast to just writing
&gt; if-statements in the Javadoc.
Yeah, the javadoc was not the greatest. I will improve that.
Created attachment 211387
patch for jdt ui
Created attachment 211388
patch for platform text

Here we go again :-)

(In reply to comment #27)
&gt; I don't like all the new APIs 
Reworked the javadoc for the new match method.

(In reply to comment #28)
&gt; I can agree that 'getOffsetAdjustment()' is a bit hacky and not really an API
&gt; :-) I can make this private and duplicate the code...
Done.
 
&gt; ICharacterPairMatcherExtension.findEnclosingPeerCharacters
&gt; - (RtoL) can be removed as it's already written in plain text.
&gt; - "Starting at the given selection as indicated by the given ..."
&gt;   Just write "given selection". The param Javadoc clarifies this enough.
Done.

&gt; MatchingCharacterPainter
&gt; - Only have characterPresentAtCaretLocation= (pair != null) once in the code
We need to do this multiple times. No change here.

&gt; For getSignedSelection: we should probably just use the model selection
&gt; (viewer.getSelection()) and change the sign based on the widget. We also need
&gt; to verify that it works in block selection mode.
Done. And also removed the method from JFaceTextUtil.

I also added some tests to test the new functionality. There is one commented test, which describes the problem from bug 372128 comment 3, something that I plan to fix over the next couple of days.
Thanks for the updated patch Deepak. It works fine but I'm still not completely happy with new match API which gives the impression that it works on a selection but indeed it only works on a (selected) character. Either we make it more obvious in the Javadoc, or we replace it with matchSelectedCharacter(...). The Javadoc of getOffsetAdjustment(...) could also be better, or we replace that method with something like findStartOffset(...).

&gt;&gt; MatchingCharacterPainter
&gt;&gt; - Only have characterPresentAtCaretLocation= (pair != null) once in the code
&gt;We need to do this multiple times. No change here.
Point taken.


Given the remaining changes are small, I pushed the code to master:

http://git.eclipse.org/c/platform/eclipse.platform.text.git/commit/?id=1942dbddd460925c0dd3cbed02bad82b548af896

http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=8fc5b67fd7594b88349285d7b446d55cf4337a0a
Created attachment 211781
javadoc tweaks
(In reply to comment #36)
&gt; Created attachment 211781 [details] [diff]
&gt; javadoc tweaks

Thanks for the polished Javadoc.

Fixed in master: http://git.eclipse.org/c/platform/eclipse.platform.text.git/commit/?id=b2d18c3fbba20a963e449aaa990a5397824a729c
Verified in I20120312-1800.</WithStack>
    <WithOutStack>Now you have to be exactly behind a brace to get CTRL-SHIFT-P working. This is 
a bit annoying. Can't it just work every where in the file?

then it just searches for the brace i am in and toggles between begin and end.
for example:

int foo()
{
   // code
&lt;&lt;&lt; cursor here 1.
  if(bar())
  {
    // code
&lt;&lt;&lt; cursor here 2.
    // some more code
  }
}

with cursor here 1 it shows the braces of the complete method
with cursor here 2 it shows the braces of the if.
See also bug 38608
*** Bug 76187 has been marked as a duplicate of this bug. ***
Sounds like a good idea (also bug 76187).
*** Bug 38608 has been marked as a duplicate of this bug. ***
We also need to investigate whether the third Ctrl+Shift+P goes back to the initial caret or whether we have to offer another way to get back to it.
Moving to M6...
(In reply to comment #5)
&gt; We also need to investigate whether the third Ctrl+Shift+P goes back to the
&gt; initial caret or whether we have to offer another way to get back to it.

How important is it to provide a mechanism to go back to the initial caret?
I think it IS important because you can cycle through the left, right brace and original caret position easily. Presumably the locations are being stored in the location history, thus I guess the user could always invoke the
org.eclipse.ui.navigate.backwardHistory action to get back to the original position. But it will be nice if the same key binding (Ctrl+Shift+P) works so that the flow is not broken.
(In reply to comment #7)
&gt; (In reply to comment #5)
&gt; &gt; We also need to investigate whether the third Ctrl+Shift+P goes back to the
&gt; &gt; initial caret or whether we have to offer another way to get back to it.
&gt; 
&gt; How important is it to provide a mechanism to go back to the initial caret?

It's a must, and I think it should be via Ctrl+Shift+P. We don't put such navigation points into the navigation history and shouldn't start with this now.
The underlying infrastructure to find the enclosing brackets will come from bug 366400.
(In reply to comment #9)
&gt; &gt; How important is it to provide a mechanism to go back to the initial caret?
&gt; 
&gt; It's a must, and I think it should be via Ctrl+Shift+P. 
This bit is easy and I have a fix in my workspace, but...

When you select a bracket (and not just place the caret next to a bracket) and then use the action, it behaves erratically.  To see the erratic nature of the action try with left to right selection of a bracket and compare the results with right to left selection.

I am wondering whether we need to continue to support this mode where the selection is non zero? (as things go a bit more crazy when the action works anywhere in a file)

An alternative would be to auto adjust the caret location i.e. treat left to right selection and right to left selection in the same way and just find the correct match.

Thoughts...
(In reply to comment #11)
&gt; (In reply to comment #9)
&gt; &gt; &gt; How important is it to provide a mechanism to go back to the initial caret?
&gt; &gt; 
&gt; &gt; It's a must, and I think it should be via Ctrl+Shift+P. 
&gt; This bit is easy and I have a fix in my workspace, but...
&gt; 
&gt; When you select a bracket (and not just place the caret next to a bracket) and
&gt; then use the action, it behaves erratically.  To see the erratic nature of the
&gt; action try with left to right selection of a bracket and compare the results
&gt; with right to left selection.
&gt; 
&gt; I am wondering whether we need to continue to support this mode where the
&gt; selection is non zero? (as things go a bit more crazy when the action works
&gt; anywhere in a file)
&gt; 
&gt; An alternative would be to auto adjust the caret location i.e. treat left to
&gt; right selection and right to left selection in the same way and just find the
&gt; correct match.
&gt; 
&gt; Thoughts...

The behavior when there's a [selection] was always a bit muddy:
    e.g. [(]x.o != null) ==&gt; (x.o != null)[ ]

Ideally it would work like this:
[(]x.o != null) &lt;==&gt; (x.o != null[)] incl. preserving of the selection direction
and in respect to this bug:

(x.o [!=] null) ==&gt; [(]x.o != null) ==&gt; (x.o != null[)] ==&gt; (x.o [!=] null)

If this is not possible / too hard to implement then I suggest we only enable it when there's no selection.
Patch on bug 366400 comment 6 includes the fix for this bug.

&gt; The behavior when there's a [selection] was always a bit muddy:
This should work perfectly now, wasn't too hard to fix. (Fix for bug 26314 was not the greatest)

Note that the action still complains when the selection length is greater than 1, which I think is OK.
I think it might also be possible to move the implementation in JavaEditor.gotoMatchingBracket() to Platform, though I don't know if it is worth to do so.
(In reply to comment #13)
&gt; Patch on bug 366400 comment 6 includes the fix for this bug.
&gt; 
&gt; &gt; The behavior when there's a [selection] was always a bit muddy:
&gt; This should work perfectly now, wasn't too hard to fix. (Fix for bug 26314 was
&gt; not the greatest)
&gt; 
&gt; Note that the action still complains when the selection length is greater than
&gt; 1, which I think is OK.

Works nice. I agree with above statement when the selection contains (the) brackets but not when the selection is inside the brackets: there I'd expect that I can toggle between selected text and the surrounding brackets.
(In reply to comment #14)
&gt; I think it might also be possible to move the implementation in
&gt; JavaEditor.gotoMatchingBracket() to Platform, though I don't know if it is
&gt; worth to do so.

This would only make sense if we'd also move down the 'GotoMatchingBracketAction' action. I suggest we do this once we have a concrete request for it.
(In reply to comment #15)
&gt; &gt; Note that the action still complains when the selection length is greater than
&gt; &gt; 1, which I think is OK.
&gt; 
&gt; Works nice. I agree with above statement when the selection contains (the)
&gt; brackets but not when the selection is inside the brackets: there I'd expect
&gt; that I can toggle between selected text and the surrounding brackets.
It will get a bit complicated. For example,

	void foobar() {
		String s= ("asdsd(");
		String s= "(bug[[gy!)";]]
	}

[[  ]] denotes selection

What should happen here? We ignore the '(' before 'bug' while computing enclosing brackets? Or do we complain that a bracket cannot be found?

Though, I am open to take this as an additional enhancement request.
(In reply to comment #17)
&gt; (In reply to comment #15)
&gt; &gt; &gt; Note that the action still complains when the selection length is greater than
&gt; &gt; &gt; 1, which I think is OK.
&gt; &gt; 
&gt; &gt; Works nice. I agree with above statement when the selection contains (the)
&gt; &gt; brackets but not when the selection is inside the brackets: there I'd expect
&gt; &gt; that I can toggle between selected text and the surrounding brackets.
&gt; It will get a bit complicated. For example,
&gt; 
&gt;     void foobar() {
&gt;         String s= ("asdsd(");
&gt;         String s= "(bug[[gy!)";]]
&gt;     }
&gt; 
&gt; [[  ]] denotes selection
&gt; 
&gt; What should happen here? We ignore the '(' before 'bug' while computing
&gt; enclosing brackets? Or do we complain that a bracket cannot be found?
&gt; 

Point taken, but we should make the behavior inside brackets consistent i.e. also disable it when the selection length is 1.
&gt; Point taken, but we should make the behavior inside brackets consistent i.e.
&gt; also disable it when the selection length is 1.

I have to take that back. After discussion with Markus and looking closer at it, we must support the selection. Two reasons:
1) Users who enable to always show matching brackets will get an on/off 
   highlighting when they select something inside the brackets. This is
   distracting and useless visual noise.
2) The implementation shouldn't be too hard: just make sure that the whole
   selection is inside the matching brackets - matching brackets included.
(In reply to comment #19)
&gt; &gt; Point taken, but we should make the behavior inside brackets consistent i.e.
&gt; &gt; also disable it when the selection length is 1.
&gt; 
&gt; I have to take that back. After discussion with Markus and looking closer at
&gt; it, we must support the selection. Two reasons:
&gt; 1) Users who enable to always show matching brackets will get an on/off 
&gt;    highlighting when they select something inside the brackets. This is
&gt;    distracting and useless visual noise.

Hold on. There are two things
1. Highlight enclosing brackets in the editor
2. Go to matching brackets action

You are talking about 1 or 2 or both ? (This bug is about 2) 

Currently both highlighting and the action do not work with a selection.

&gt; 2) The implementation shouldn't be too hard: just make sure that the whole
&gt;    selection is inside the matching brackets - matching brackets included.
The implementation would have to change the new API to add the notion of a non-zero selection : ICharacterPairMatcherExtension#findEnclosingPeerCharacters(org.eclipse.jface.text.IDocument, int)
(In reply to comment #20)
&gt; (In reply to comment #19)
&gt; &gt; &gt; Point taken, but we should make the behavior inside brackets consistent i.e.
&gt; &gt; &gt; also disable it when the selection length is 1.
&gt; &gt; 
&gt; &gt; I have to take that back. After discussion with Markus and looking closer at
&gt; &gt; it, we must support the selection. Two reasons:
&gt; &gt; 1) Users who enable to always show matching brackets will get an on/off 
&gt; &gt;    highlighting when they select something inside the brackets. This is
&gt; &gt;    distracting and useless visual noise.
&gt; 
&gt; Hold on. There are two things
&gt; 1. Highlight enclosing brackets in the editor
&gt; 2. Go to matching brackets action
&gt; 
&gt; You are talking about 1 or 2 or both ? (This bug is about 2) 
&gt; 
&gt; Currently both highlighting and the action do not work with a selection.

Right, and that needs to be fixed.

&gt; The implementation would have to change the new API to add the notion of a
&gt; non-zero selection :
&gt; ICharacterPairMatcherExtension#findEnclosingPeerCharacters(org.eclipse.jface.text.IDocument,
&gt; int)

Yep.
Highlighting matching brackets is currently disabled when selection is non-zero,
see org.eclipse.jface.text.source.MatchingCharacterPainter.paint(int) line 247.

If you enable it, and have the following settings, and select a bracket
[x] Highlight matching brackets
     [x] Highlight bracket at caret location
     [x] Highlight enclosing brackets

... there could be a conflict as to what is painted especially once we add an annotation as part of bug 358347. I don't know if this would be ok or not...
(In reply to comment #22)
&gt; Highlighting matching brackets is currently disabled when selection is
&gt; non-zero,
&gt; see org.eclipse.jface.text.source.MatchingCharacterPainter.paint(int) line 247.
&gt; 
&gt; If you enable it, and have the following settings, and select a bracket
&gt; [x] Highlight matching brackets
&gt;      [x] Highlight bracket at caret location
&gt;      [x] Highlight enclosing brackets
&gt; 
&gt; ... there could be a conflict

Do you have an example?


&gt; especially once we add an annotation as part of bug 358347.With 
If we don't start to support the selection, this will even be more noise, because then, the annotations in the ruler come and go while you type/select things inside the same enclosing brackets.
(In reply to comment #23)
&gt; &gt; especially once we add an annotation as part of bug 358347.With 
&gt; If we don't start to support the selection, this will even be more noise,
&gt; because then, the annotations in the ruler come and go while you type/select
&gt; things inside the same enclosing brackets.
Yeah, makes sense.

The implementation is also simple enough, I just find matching brackets enclosing the 'selection' as opposed to offset. Will attach a patch soon.
Created attachment 211173
patch for jdt ui
Created attachment 211174
patch for platform text

&gt; The implementation is also simple enough.

The implementation was simple enough, but avoiding code duplication and getting the APIs right was relatively harder. 

These two patches should work perfectly with zero and non-zero selections. Dani, let me know if I missed something. In the meanwhile, I will work on adding some new tests.
I don't like all the new APIs which mostly are helpers / look like implementation details. For example getOffsetAdjustment(): it's not obvious from reading the Javadoc why that adjustment is really needed. It e.g. says, it's used to adjust the start offset for the matcher, but in the JavaEditor it is used afterwards. I know, I always want to avoid code duplication but we should have at least 3 clients before we add helpers as API. For now, I would only adjust the findEnclosingPeerCharacters API.

ICharacterPairMatcherExtension.findEnclosingPeerCharacters
- (RtoL) can be removed as it's already written in plain text.
- "Starting at the given selection as indicated by the given ..."
  Just write "given selection". The param Javadoc clarifies this enough.

MatchingCharacterPainter
- Only have characterPresentAtCaretLocation= (pair != null) once in the code

For getSignedSelection: we should probably just use the model selection (viewer.getSelection()) and change the sign based on the widget. We also need to verify that it works in block selection mode.
(In reply to comment #27)
&gt; I don't like all the new APIs which mostly are helpers / look like
&gt; implementation details. For example getOffsetAdjustment(): it's not obvious
&gt; from reading the Javadoc why that adjustment is really needed. It e.g. says,
&gt; it's used to adjust the start offset for the matcher, but in the JavaEditor it
&gt; is used afterwards. 
I can agree that 'getOffsetAdjustment()' is a bit hacky and not really an API :-) I can make this private and duplicate the code...

&gt; I know, I always want to avoid code duplication but we
&gt; should have at least 3 clients before we add helpers as API. For now, I would
&gt; only adjust the findEnclosingPeerCharacters API.
However, I think we do need ICharacterPairMatcherExtension.match(IDocument, int, int).

- We have two clients today MatchingCharacterPainter.paint(int) and JavaEditor.gotoMatchingBracket(). In both of the current clients we need to distinguish the case when a 'match' is found (i.e. the selection is of length 1 and this selection covers a bracket), and when 'enclosing' brackets are found.

- Without the new match method
1. we will have to check in the client if the selection is of length 1 and covers a bracket. For that we will need another API in ICharacterPairMatcherExtension.getChars() which returns all the characters that the pair matcher matches. (We need this only in MatchingCharacterPainter, in JavaEditor we already have the matched characters.)
2. Then call getOffsetAdjustment() to adjust the offset
3. Then call the old match method.
... looks like a bit of dance in the client code.

Also note that the client only needs to call the new match method, which is what I have done in both clients. (The calls to old match method remain only to preserve old behavior but they are not really used from Java editor)
(In reply to comment #28)
&gt; (In reply to comment #27)
&gt; &gt; I don't like all the new APIs which mostly are helpers / look like
&gt; &gt; implementation details. For example getOffsetAdjustment(): it's not obvious
&gt; &gt; from reading the Javadoc why that adjustment is really needed. It e.g. says,
&gt; &gt; it's used to adjust the start offset for the matcher, but in the JavaEditor it
&gt; &gt; is used afterwards. 
&gt; I can agree that 'getOffsetAdjustment()' is a bit hacky and not really an API
&gt; :-) I can make this private and duplicate the code...
&gt; 
&gt; &gt; I know, I always want to avoid code duplication but we
&gt; &gt; should have at least 3 clients before we add helpers as API. For now, I would
&gt; &gt; only adjust the findEnclosingPeerCharacters API.
&gt; However, I think we do need ICharacterPairMatcherExtension.match(IDocument,
&gt; int, int).
&gt; 
&gt; - We have two clients today MatchingCharacterPainter.paint(int) and
&gt; JavaEditor.gotoMatchingBracket(). In both of the current clients we need to
&gt; distinguish the case when a 'match' is found (i.e. the selection is of length 1
&gt; and this selection covers a bracket), and when 'enclosing' brackets are found.
&gt; 
&gt; - Without the new match method
&gt; 1. we will have to check in the client if the selection is of length 1 and
&gt; covers a bracket. For that we will need another API in
&gt; ICharacterPairMatcherExtension.getChars() which returns all the characters that
&gt; the pair matcher matches. (We need this only in MatchingCharacterPainter, in
&gt; JavaEditor we already have the matched characters.)
&gt; 2. Then call getOffsetAdjustment() to adjust the offset
&gt; 3. Then call the old match method.
&gt; ... looks like a bit of dance in the client code.
&gt; 
&gt; Also note that the client only needs to call the new match method, which is
&gt; what I have done in both clients. (The calls to old match method remain only to
&gt; preserve old behavior but they are not really used from Java editor)


Still not convinced ;-)
Couldn't you use findEnclosingPeerCharacters(...) along with the current match(...) API to make the decision?
(In reply to comment #29)
&gt; Couldn't you use findEnclosingPeerCharacters(...) along with the current
&gt; match(...) API to make the decision?

Of course, I can. But as I said the client code becomes ugly/complicated, and there is quite a bit of code duplication.

(In reply to comment #26)
&gt; The implementation was simple enough, but avoiding code duplication and getting
&gt; the APIs right was relatively harder. 
I did spent some time trying to do this without adding a new API, but ultimately realized that the pair matcher needs to have 2 methods 
- one for finding a match peer 
- one for finding enclosing peers
... and both these methods also need to have a notion of selection. 

I could modify findEnclosingPeers because it was new, but I cannot touch the existing match method which is why I added a new one. Possibly we can deprecate the old method or add a note to it recommending users to use the new method.
(In reply to comment #30)
&gt; (In reply to comment #29)
&gt; &gt; Couldn't you use findEnclosingPeerCharacters(...) along with the current
&gt; &gt; match(...) API to make the decision?
&gt; 
&gt; Of course, I can. But as I said the client code becomes ugly/complicated, and
&gt; there is quite a bit of code duplication.

Maybe I wasn't clear: I meant, use both together to decide in which case you are. If you think that doesn't work, the add the match(...) method but please provide Javadoc that explains what its intention is in contrast to just writing if-statements in the Javadoc.
(In reply to comment #31)
&gt; Maybe I wasn't clear: I meant, use both together to decide in which case you
&gt; are. 
No, I cannot.

&gt; If you think that doesn't work, the add the match(...) method but please
&gt; provide Javadoc that explains what its intention is in contrast to just writing
&gt; if-statements in the Javadoc.
Yeah, the javadoc was not the greatest. I will improve that.
Created attachment 211387
patch for jdt ui
Created attachment 211388
patch for platform text

Here we go again :-)

(In reply to comment #27)
&gt; I don't like all the new APIs 
Reworked the javadoc for the new match method.

(In reply to comment #28)
&gt; I can agree that 'getOffsetAdjustment()' is a bit hacky and not really an API
&gt; :-) I can make this private and duplicate the code...
Done.
 
&gt; ICharacterPairMatcherExtension.findEnclosingPeerCharacters
&gt; - (RtoL) can be removed as it's already written in plain text.
&gt; - "Starting at the given selection as indicated by the given ..."
&gt;   Just write "given selection". The param Javadoc clarifies this enough.
Done.

&gt; MatchingCharacterPainter
&gt; - Only have characterPresentAtCaretLocation= (pair != null) once in the code
We need to do this multiple times. No change here.

&gt; For getSignedSelection: we should probably just use the model selection
&gt; (viewer.getSelection()) and change the sign based on the widget. We also need
&gt; to verify that it works in block selection mode.
Done. And also removed the method from JFaceTextUtil.

I also added some tests to test the new functionality. There is one commented test, which describes the problem from bug 372128 comment 3, something that I plan to fix over the next couple of days.
Thanks for the updated patch Deepak. It works fine but I'm still not completely happy with new match API which gives the impression that it works on a selection but indeed it only works on a (selected) character. Either we make it more obvious in the Javadoc, or we replace it with matchSelectedCharacter(...). The Javadoc of getOffsetAdjustment(...) could also be better, or we replace that method with something like findStartOffset(...).

&gt;&gt; MatchingCharacterPainter
&gt;&gt; - Only have characterPresentAtCaretLocation= (pair != null) once in the code
&gt;We need to do this multiple times. No change here.
Point taken.


Given the remaining changes are small, I pushed the code to master:

http://git.eclipse.org/c/platform/eclipse.platform.text.git/commit/?id=1942dbddd460925c0dd3cbed02bad82b548af896

http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=8fc5b67fd7594b88349285d7b446d55cf4337a0a
Created attachment 211781
javadoc tweaks
(In reply to comment #36)
&gt; Created attachment 211781 [details] [diff]
&gt; javadoc tweaks

Thanks for the polished Javadoc.

Fixed in master: http://git.eclipse.org/c/platform/eclipse.platform.text.git/commit/?id=b2d18c3fbba20a963e449aaa990a5397824a729c
Verified in I20120312-1800.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40581" />
    <CreationDate amount="2003-07-22 05:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>TYPE constants in the IDOMNode and IJavaElement differ, so the SourceType::equals fails.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="65" end="122" />
        <code>public class SourceType extends Member implements IType {</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>DOM nodes and Java elements are not meant to compare equals. 

public class SourceType extends Member implements IType {
...

No bug :)
Ok, should though be closed as invalid.
Closing</WithStack>
    <WithOutStack>DOM nodes and Java elements are not meant to compare equals. 

public class SourceType extends Member implements IType {
...

No bug :)
Ok, should though be closed as invalid.
Closing</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40582" />
    <CreationDate amount="2003-07-22 06:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>JUnit: Go to failure when stepping through / Open</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I20030722

I find myself clicking between upper and lower pane of the JUnit view when I
navigate through failures: first I have to select the test method and then I
need to click on the failure trace to get the exact failure location.

Wouldn't it be better if the open action in the upper pane would directly go to
the failure location? Also, stepping through the failures could directly go to
the failure/error instead of the test method declaration.
Unfortunately it is not clear what the failure location exactly is. Keep in 
mind a failure location can also any thrown exception and not only assertion 
failures. 


Yes, but in case of failure (not error) it would work, right?

Even in the failure case it is not clear clients can introduce additional 
assert methods, that the junit plug-in cannot know about.
Moving back to the JDT/UI inbox
no changes planed</WithStack>
    <WithOutStack>I20030722

I find myself clicking between upper and lower pane of the JUnit view when I
navigate through failures: first I have to select the test method and then I
need to click on the failure trace to get the exact failure location.

Wouldn't it be better if the open action in the upper pane would directly go to
the failure location? Also, stepping through the failures could directly go to
the failure/error instead of the test method declaration.
Unfortunately it is not clear what the failure location exactly is. Keep in 
mind a failure location can also any thrown exception and not only assertion 
failures. 


Yes, but in case of failure (not error) it would work, right?

Even in the failure case it is not clear clients can introduce additional 
assert methods, that the junit plug-in cannot know about.
Moving back to the JDT/UI inbox
no changes planed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40583" />
    <CreationDate amount="2003-07-22 08:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>[Doc] [KeyBindings] Broken Workbench extension point doc links</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 200307220800.

The following links are broken in Help &gt; Help Content &gt; Platform Plug-in 
Developer Guide &gt; Reference &gt; Extension Points Reference &gt; Workbench

org.eclipse.ui.accelerator*
org.eclipse.ui.actionDefinitions
Chris, can you fix this up please?
Created attachment 6274
topics_Reference.xml, index.html

Removes the obsolete references from both files.
Created attachment 6275
IWorkbenchConstants

Removes the obsolete constants from IWorkbenchConstants.
chris: review/apply
fixed
Fix was in CVS, but map was not updated.  Tod just pushed the map.  It should be
good for tomorrow's integration build.  (I've confirmed that nightly builds
contain the fix.)</WithStack>
    <WithOutStack>Build 200307220800.

The following links are broken in Help &gt; Help Content &gt; Platform Plug-in 
Developer Guide &gt; Reference &gt; Extension Points Reference &gt; Workbench

org.eclipse.ui.accelerator*
org.eclipse.ui.actionDefinitions
Chris, can you fix this up please?
Created attachment 6274
topics_Reference.xml, index.html

Removes the obsolete references from both files.
Created attachment 6275
IWorkbenchConstants

Removes the obsolete constants from IWorkbenchConstants.
chris: review/apply
fixed
Fix was in CVS, but map was not updated.  Tod just pushed the map.  It should be
good for tomorrow's integration build.  (I've confirmed that nightly builds
contain the fix.)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40584" />
    <CreationDate amount="2003-07-22 08:59:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Test suite configuration should be more flexible</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="328" end="509" />
        <code>/**
 * Search the user hard-drive for a Java class library.
 * Returns null if none could be found.
 *
 * Example of use: [org.eclipse.jdt.core.tests.util.Util.getJavaClassLib()]
*/</code>
      </source_code>
      <source_code type="functiondef">
        <location start="510" end="556" />
        <code>public static String getJavaClassLib() {
...
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Inside the JDT/Core test suites, the libraries are retrieved using the
org.eclipse.jdt.core.tests.util.Util class. In this class, we assume that rt.jar
or classes.zip can be retrieved. The name of VMs are hard-coded.
Customers experiment some trouble to run the test suites because
java.lang.Object cannot be found.
The method:
/**
 * Search the user hard-drive for a Java class library.
 * Returns null if none could be found.
 *
 * Example of use: [org.eclipse.jdt.core.tests.util.Util.getJavaClassLib()]
*/
public static String getJavaClassLib() {
...
}
should be improved.
Fixed and released in HEAD.
Verified.</WithStack>
    <WithOutStack>Inside the JDT/Core test suites, the libraries are retrieved using the
org.eclipse.jdt.core.tests.util.Util class. In this class, we assume that rt.jar
or classes.zip can be retrieved. The name of VMs are hard-coded.
Customers experiment some trouble to run the test suites because
java.lang.Object cannot be found.
The method:
/**
 * Search the user hard-drive for a Java class library.
 * Returns null if none could be found.
 *
 * Example of use: [org.eclipse.jdt.core.tests.util.Util.getJavaClassLib()]
*/
public static String getJavaClassLib() {
...
}
should be improved.
Fixed and released in HEAD.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40585" />
    <CreationDate amount="2003-07-22 09:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Index out of bounds exception exiting workbench throwing away changes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340804194">
        <Exception>java.lang.IndexOutOfBoundsException</Exception>
        <Reason>Index: 1, Size: 0</Reason>
        <Frames>
          <Frame depth="0">java.util.ArrayList.RangeCheck(ArrayList.java(Inlined Compiled Code))</Frame>
          <Frame depth="1">java.util.ArrayList.get(ArrayList.java(Compiled Code))</Frame>
          <Frame depth="2">org.eclipse.jface.text.source.VisualAnnotationModel.modelChanged(VisualAnnotationModel.java:131)</Frame>
          <Frame depth="3">org.eclipse.jface.text.source.AnnotationModel.fireModelChanged(AnnotationModel.java:220)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$CompilationUnitAnnotationModel.fireModelChanged(CompilationUnitDocumentProvider.java:551)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$CompilationUnitAnnotationModel.endReporting(CompilationUnitDocumentProvider.java:486)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.JavaModelManager$PerWorkingCopyInfo.endReporting(JavaModelManager.java:519)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:140)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:198)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:448)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:899)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:48)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:365)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:704)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:484)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1011)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:988)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:72)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:99)</Frame>
          <Frame depth="19">org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)</Frame>
          <Frame depth="20">org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:189)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1) Self host Eclipse</Line>
          <Line>2) Edit a file</Line>
          <Line>3) Exit self hosted workbench and choose not to save file</Line>
          <Line>4) Exception</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>M2 (20030718) in a self hosted environment with platform-ui loaded from HEAD 
at 20030722-9:13 AM EST.

When I exited my self hosted workbench with an editor that had changes I got 
the following exception. Please note that I did not get this every time so 
there is likely some other step involved.

STEPS
1) Self host Eclipse
2) Edit a file
3) Exit self hosted workbench and choose not to save file
4) Exception

java.lang.IndexOutOfBoundsException: Index: 1, Size: 0
	at java.util.ArrayList.RangeCheck(ArrayList.java(Inlined Compiled 
Code))
	at java.util.ArrayList.get(ArrayList.java(Compiled Code))
	at org.eclipse.jface.text.source.VisualAnnotationModel.modelChanged
(VisualAnnotationModel.java:131)
	at org.eclipse.jface.text.source.AnnotationModel.fireModelChanged
(AnnotationModel.java:220)
	at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Compilat
ionUnitAnnotationModel.fireModelChanged
(CompilationUnitDocumentProvider.java:551)
	at 
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider$Compilat
ionUnitAnnotationModel.endReporting(CompilationUnitDocumentProvider.java:486)
	at 
org.eclipse.jdt.internal.core.JavaModelManager$PerWorkingCopyInfo.endReporting
(JavaModelManager.java:519)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure
(CompilationUnit.java:140)
	at org.eclipse.jdt.internal.core.Openable.generateInfos
(Openable.java:198)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed
(JavaElement.java:448)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent
(CompilationUnit.java:899)
	at 
org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation
(ReconcileWorkingCopyOperation.java:48)
	at org.eclipse.jdt.internal.core.JavaModelOperation.execute
(JavaModelOperation.java:365)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:704)
	at org.eclipse.jdt.internal.core.JavaElement.runOperation
(JavaElement.java:484)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile
(CompilationUnit.java:1011)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile
(CompilationUnit.java:988)
	at 
org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile
(JavaReconcilingStrategy.java:72)
	at 
org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile
(JavaReconcilingStrategy.java:99)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process
(MonoReconciler.java:76)
	at 
org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run
(AbstractReconciler.java:189)
Happens because the Java reconciler is reporting results while shutting down.

Fixed the listener iteration code to be stable as done in
AnnotationModel.modelChanged</WithStack>
    <WithOutStack>M2 (20030718) in a self hosted environment with platform-ui loaded from HEAD 
at 20030722-9:13 AM EST.

When I exited my self hosted workbench with an editor that had changes I got 
the following exception. Please note that I did not get this every time so 
there is likely some other step involved.

STEPS
1) Self host Eclipse
2) Edit a file
3) Exit self hosted workbench and choose not to save file
4) Exception


Happens because the Java reconciler is reporting results while shutting down.

Fixed the listener iteration code to be stable as done in
AnnotationModel.modelChanged</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40586" />
    <CreationDate amount="2003-07-22 09:19:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Themes] [Preferences] Problems with PreferencePage.createNoteComposite</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="533" end="571" />
        <code>new Label(messageComposite, SWT.WRAP);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="1">
        <Lines>
          <Line>e.g. set dialog font to size 14: all 'Note:' labels still have the old font</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>M2

PreferencePage.createNoteComposite create a 'Note' remork for preference pages:

- Note does not adapt to the dialog font when changed.
e.g. set dialog font to size 14: all 'Note:' labels still have the old font

- createNoteComposite sets SWT.WRAP but the label passed is not wrapped (i guess
the width hint is required, but can't be set on the parent composite)
The first problem is a non issue as it does not use the dialog font - it uses 
the header font.

The composite sets using SWT.NONE - here is the code for the label

new Label(messageComposite, SWT.WRAP);
a.) are you sure? I just set the dialog and the header font to something big 
(24 pixel). When looking at the Appearance preference page, all fonts are big, 
except the 'Note:' label.

b.) It's about the note composite I create using 'createNoteComposite': 
The 'message' that I pass in is longer and should be wrapped. Note that you are 
creating the label, not me. (line 582)

Maybe I completly misunderstood you, but I would suggest to reopen the bug. 
Yes - it is the banner font not the header font (sorry my mistake). Just be 
sure to close the dialog and reopen - we don't apply the fonts to other pages 
right away due to sizing problems it can create.
It's the banner, you're right. I have to say that I would never had guessed 
that I have to change the banner code and keep it 'in sync' with the dialog 
font for the 'Note:'. So maybe tyhis is not the most optimal solution.
Couldn't you take the dialog font and make it bold? If it's already bold it 
doesn't matter.

No you can't as there are many fonts that have no bold value (Asian fonts for 
instance).
My suggestion would have been to have the normal dialog font in that case.

(In reply to comment #6)
&gt; My suggestion would have been to have the normal dialog font in that case.

I'm inclined to agree with Martin here (I just noticed this bug last night). I think it's strange that all your fonts are one size but then the one label control is another. Besides the fact that it updates itself based on the banner's font, it's currently set to start off with JFace's "default font". So first it's the default font, then if you change the banner font, your label will suddenly alter itself to the banner font.
The current solution does not work and gives a bad UI when users change their dialog font (see attached picture).
*** Bug 28428 has been marked as a duplicate of this bug. ***
Created attachment 126813
Picture showing the problem
*** Bug 94681 has been marked as a duplicate of this bug. ***
It does look weird when the two fonts are not in sync. Do we need an additional "bold dialog font", just for this case?
&gt;Do we need an additional "bold dialog font", just for this case?
I think that would be overkill.

I would set the bold style on the existing dialog font and live with the case where this is not available. Another approach would be to use another font (like banner) and set the height to match the dialog font's height.
(In reply to comment #13)

&gt; I would set the bold style on the existing dialog font and live with the case
&gt; where this is not available. Another approach would be to use another font
&gt; (like banner) and set the height to match the dialog font's height.

I agree.  It's bad typography design to mix too many font types. Because of the proximity of the word "Note" to the rest of the text, visually the best choice is to use the same font then live with lack of bolding on some char sets.  This seems a better strategy (typographically) then picking banner or some other font and hoping they look ok side by side. 

Linda, would you agree?
yes agree.
Fixed in HEAD.
Available in build &gt; N20090423-2000.

I also removed the code that updates the label's font on the fly because 99% of the preference pages don't update themselves on font change once they have been created.
(In reply to comment #16)
&gt; Fixed in HEAD.
&gt; Available in build &gt; N20090423-2000.

Thanks Dani.

&gt; I also removed the code that updates the label's font on the fly because 99% of
&gt; the preference pages don't update themselves on font change once they have been
&gt; created.

Makes sense yes. 


Verified in 0428-0100 in XP English.</WithStack>
    <WithOutStack>M2

PreferencePage.createNoteComposite create a 'Note' remork for preference pages:

- Note does not adapt to the dialog font when changed.
e.g. set dialog font to size 14: all 'Note:' labels still have the old font

- createNoteComposite sets SWT.WRAP but the label passed is not wrapped (i guess
the width hint is required, but can't be set on the parent composite)
The first problem is a non issue as it does not use the dialog font - it uses 
the header font.

The composite sets using SWT.NONE - here is the code for the label

new Label(messageComposite, SWT.WRAP);
a.) are you sure? I just set the dialog and the header font to something big 
(24 pixel). When looking at the Appearance preference page, all fonts are big, 
except the 'Note:' label.

b.) It's about the note composite I create using 'createNoteComposite': 
The 'message' that I pass in is longer and should be wrapped. Note that you are 
creating the label, not me. (line 582)

Maybe I completly misunderstood you, but I would suggest to reopen the bug. 
Yes - it is the banner font not the header font (sorry my mistake). Just be 
sure to close the dialog and reopen - we don't apply the fonts to other pages 
right away due to sizing problems it can create.
It's the banner, you're right. I have to say that I would never had guessed 
that I have to change the banner code and keep it 'in sync' with the dialog 
font for the 'Note:'. So maybe tyhis is not the most optimal solution.
Couldn't you take the dialog font and make it bold? If it's already bold it 
doesn't matter.

No you can't as there are many fonts that have no bold value (Asian fonts for 
instance).
My suggestion would have been to have the normal dialog font in that case.

(In reply to comment #6)
&gt; My suggestion would have been to have the normal dialog font in that case.

I'm inclined to agree with Martin here (I just noticed this bug last night). I think it's strange that all your fonts are one size but then the one label control is another. Besides the fact that it updates itself based on the banner's font, it's currently set to start off with JFace's "default font". So first it's the default font, then if you change the banner font, your label will suddenly alter itself to the banner font.
The current solution does not work and gives a bad UI when users change their dialog font (see attached picture).
*** Bug 28428 has been marked as a duplicate of this bug. ***
Created attachment 126813
Picture showing the problem
*** Bug 94681 has been marked as a duplicate of this bug. ***
It does look weird when the two fonts are not in sync. Do we need an additional "bold dialog font", just for this case?
&gt;Do we need an additional "bold dialog font", just for this case?
I think that would be overkill.

I would set the bold style on the existing dialog font and live with the case where this is not available. Another approach would be to use another font (like banner) and set the height to match the dialog font's height.
(In reply to comment #13)

&gt; I would set the bold style on the existing dialog font and live with the case
&gt; where this is not available. Another approach would be to use another font
&gt; (like banner) and set the height to match the dialog font's height.

I agree.  It's bad typography design to mix too many font types. Because of the proximity of the word "Note" to the rest of the text, visually the best choice is to use the same font then live with lack of bolding on some char sets.  This seems a better strategy (typographically) then picking banner or some other font and hoping they look ok side by side. 

Linda, would you agree?
yes agree.
Fixed in HEAD.
Available in build &gt; N20090423-2000.

I also removed the code that updates the label's font on the fly because 99% of the preference pages don't update themselves on font change once they have been created.
(In reply to comment #16)
&gt; Fixed in HEAD.
&gt; Available in build &gt; N20090423-2000.

Thanks Dani.

&gt; I also removed the code that updates the label's font on the fly because 99% of
&gt; the preference pages don't update themselves on font change once they have been
&gt; created.

Makes sense yes. 


Verified in 0428-0100 in XP English.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40587" />
    <CreationDate amount="2003-07-22 09:44:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Checking "Use Incoming/Outgoing mode" preference is not saved in M2</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When I use the checkbox "Use Incoming/Outgoing mode when synchronizing"in the 
Team preferences, save the preferences and reopen the Preferences page again, 
the box is unchecked again.
works withe latest Integration Build(20030806)
Option has been removed in favour of simply saving the selected mode as a
preference. By default, the incoming/outgoing mode is selected.</WithStack>
    <WithOutStack>When I use the checkbox "Use Incoming/Outgoing mode when synchronizing"in the 
Team preferences, save the preferences and reopen the Preferences page again, 
the box is unchecked again.
works withe latest Integration Build(20030806)
Option has been removed in favour of simply saving the selected mode as a
preference. By default, the incoming/outgoing mode is selected.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40588" />
    <CreationDate amount="2003-07-22 09:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>turn off immediate find for Find/Replace in editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="7">
        <Lines>
          <Line>(1) &lt;ctrl-F&gt;</Line>
          <Line>(2) type in search data</Line>
          <Line>(3) &lt;enter&gt;</Line>
          <Line>(4) ...do some work on the first find location...</Line>
          <Line>(5) &lt;find-again&gt;</Line>
          <Line>(6) ...do some more work....</Line>
          <Line>(7) goto (5)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Please can I have a flag to turn off the new (new as in post-2.0) ctrl-F find 
feature where it finds stuff immediately.

When doing pure keyboard work this is irritating.
To see why, consider my prior use case:
(1) &lt;ctrl-F&gt;
(2) type in search data
(3) &lt;enter&gt;
(4) ...do some work on the first find location...
(5) &lt;find-again&gt;
(6) ...do some more work....
(7) goto (5)

This no longer works, because in order to make sure that that &lt;find-again&gt; 
works, I have to hit enter, which means that I initially end up at the __2nd__ 
occurrence of the searched-for text.

Thanks.
uncheck the 'incremental' box in the dialog and press 'close' - this will 
remember your setting.
doh!</WithStack>
    <WithOutStack>Please can I have a flag to turn off the new (new as in post-2.0) ctrl-F find 
feature where it finds stuff immediately.

When doing pure keyboard work this is irritating.
To see why, consider my prior use case:
(1) &lt;ctrl-F&gt;
(2) type in search data
(3) &lt;enter&gt;
(4) ...do some work on the first find location...
(5) &lt;find-again&gt;
(6) ...do some more work....
(7) goto (5)

This no longer works, because in order to make sure that that &lt;find-again&gt; 
works, I have to hit enter, which means that I initially end up at the __2nd__ 
occurrence of the searched-for text.

Thanks.
uncheck the 'incremental' box in the dialog and press 'close' - this will 
remember your setting.
doh!</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40589" />
    <CreationDate amount="2003-07-22 10:07:00 -0400" />
    <DupId amount="39993" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Default method impl for interface causes internal exception.</Summery>
    <Patches amount="2">
      <Patch>
        <index>georgeTests.xml</index>
        <original_file>/dev/null</original_file>
        <modified_file>georgeTests.xml</modified_file>
        <Hunks>
          <hunk>+&lt;!DOCTYPE suite SYSTEM "../tests/ajcTestSuite.dtd"&gt;&#xD;
&#xD;
+&lt;suite&gt; &#xD;
&#xD;
+    &lt;ajc-test dir="bugs" pr="40589"&#xD;
&#xD;
+   	 title="Default method impl for interface causes internal exception."&gt;&#xD;
&#xD;
+        &lt;compile files="CloneMethod.java"/&gt;&#xD;
&#xD;
+        &lt;run class="CloneMethod"/&gt;&#xD;
&#xD;
+    &lt;/ajc-test&gt;&#xD;
&#xD;
+&#xD;
&#xD;
+&lt;/suite&gt;</hunk>
        </Hunks>
      </Patch>
      <Patch>
        <index>CloneMethod.java</index>
        <original_file>/dev/null</original_file>
        <modified_file>CloneMethod.java</modified_file>
        <Hunks>
          <hunk>+aspect AspectA {&#xD;
&#xD;
+	protected interface I {&#xD;
&#xD;
+	}&#xD;
&#xD;
+&#xD;
&#xD;
+	declare parents : MyString implements I;&#xD;
&#xD;
+&#xD;
&#xD;
+	protected Object createCloneFor(I object) {&#xD;
&#xD;
+		if (object instanceof MyString) {&#xD;
&#xD;
+			return new MyString(((MyString) object).toString());&#xD;
&#xD;
+		} else {&#xD;
&#xD;
+			return null;&#xD;
&#xD;
+		}&#xD;
&#xD;
+	}&#xD;
&#xD;
+&#xD;
&#xD;
+	public Object I.clone() throws CloneNotSupportedException {&#xD;
&#xD;
+		return super.clone();&#xD;
&#xD;
+//		return null;&#xD;
&#xD;
+	}&#xD;
&#xD;
+&#xD;
&#xD;
+	public Object cloneObject(I object) {&#xD;
&#xD;
+		try {&#xD;
&#xD;
+			return object.clone();&#xD;
&#xD;
+		} catch (CloneNotSupportedException ex) {&#xD;
&#xD;
+			return createCloneFor(object);&#xD;
&#xD;
+		}&#xD;
&#xD;
+	}&#xD;
&#xD;
+}&#xD;
&#xD;
+&#xD;
&#xD;
+class MyString implements Cloneable {&#xD;
&#xD;
+&#xD;
&#xD;
+	protected String text;&#xD;
&#xD;
+&#xD;
&#xD;
+	public MyString(String init) {&#xD;
&#xD;
+		text = init;&#xD;
&#xD;
+	}&#xD;
&#xD;
+&#xD;
&#xD;
+	public void setText(String newText) {&#xD;
&#xD;
+		text = newText;&#xD;
&#xD;
+	}&#xD;
&#xD;
+&#xD;
&#xD;
+	public String toString() {&#xD;
&#xD;
+		return "MyString: " + text;&#xD;
&#xD;
+	}&#xD;
&#xD;
+}&#xD;
&#xD;
+&#xD;
&#xD;
+public class CloneMethod {&#xD;
&#xD;
+&#xD;
&#xD;
+	public static void main(String[] args) {&#xD;
&#xD;
+		MyString orig1;&#xD;
&#xD;
+		MyString copy1;&#xD;
&#xD;
+&#xD;
&#xD;
+		orig1 = new MyString("  This is I 1");&#xD;
&#xD;
+		copy1 = (MyString) AspectA.aspectOf().cloneObject(orig1);&#xD;
&#xD;
+		orig1.setText("  This is I 2");&#xD;
&#xD;
+		copy1.setText("  This is Clone 1");&#xD;
&#xD;
+		System.out.println("... done.");&#xD;
&#xD;
+	}&#xD;
&#xD;
+}</hunk>
        </Hunks>
      </Patch>
    </Patches>
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437340804204">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode(MessageSend.java:40)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.compiler.ast.ReturnStatement.analyseCode(ReturnStatement.java:37)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode(MethodDeclaration.java:70)</Frame>
          <Frame depth="3">org.aspectj.ajdt.internal.compiler.ast.InterTypeMethodDeclaration.analyseCode(InterTypeMethodDeclaration.java:58)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(TypeDeclaration.java:639)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(TypeDeclaration.java:196)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode(CompilationUnitDeclaration.java:78)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:541)</Frame>
          <Frame depth="8">org.aspectj.ajdt.internal.compiler.AjCompiler.process(AjCompiler.java:65)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:338)</Frame>
          <Frame depth="10">org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:372)</Frame>
          <Frame depth="11">org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:133)</Frame>
          <Frame depth="12">org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:78)</Frame>
          <Frame depth="13">org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:106)</Frame>
          <Frame depth="14">org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60)</Frame>
          <Frame depth="15">org.aspectj.tools.ajc.Main.run(Main.java:217)</Frame>
          <Frame depth="16">org.aspectj.tools.ajc.Main.runMain(Main.java:155)</Frame>
          <Frame depth="17">org.aspectj.tools.ajc.Main.main(Main.java:72)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="6">
      <source_code type="functiondef">
        <location start="354" end="456" />
        <code>public Object I.clone() throws CloneNotSupportedException {   
        return super.clone();
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2262" end="2439" />
        <code>+	protected Object createCloneFor(I object) {
+		if (object instanceof MyString) {
+			return new MyString(((MyString) object).toString());
+		} else {
+			return null;
+		}
+	}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2442" end="2550" />
        <code>+	public Object I.clone() throws CloneNotSupportedException {
+		return super.clone();
+//		return null;
+	}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2553" end="2717" />
        <code>+	public Object cloneObject(I object) {
+		try {
+			return object.clone();
+		} catch (CloneNotSupportedException ex) {
+			return createCloneFor(object);
+		}
+	}</code>
      </source_code>
      <source_code type="class">
        <location start="2723" end="2977" />
        <code>+class MyString implements Cloneable {
+
+	protected String text;
+
+	public MyString(String init) {
+		text = init;
+	}
+
+	public void setText(String newText) {
+		text = newText;
+	}
+
+	public String toString() {
+		return "MyString: " + text;
+	}
+}</code>
      </source_code>
      <source_code type="class">
        <location start="2980" end="3312" />
        <code>+public class CloneMethod {
+
+	public static void main(String[] args) {
+		MyString orig1;
+		MyString copy1;
+
+		orig1 = new MyString("  This is I 1");
+		copy1 = (MyString) AspectA.aspectOf().cloneObject(orig1);
+		orig1.setText("  This is I 2");
+		copy1.setText("  This is Clone 1");
+		System.out.println("... done.");
+	}
+}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Using AspectJ 1.1.0 on Windows, if I create an aspect that contains a 
declaration of an empty interface "I" and then supply a default implementation 
of the clone() method for the interface then an internal compiler error occurs 
at build time. 

Here is the simplest test case I can make :-

public aspect MyAspectA
{
    protected interface I {}
    
    public Object I.clone() throws CloneNotSupportedException {   
        return super.clone();
    }
}

When I run ajc against the above class I get the following output ..

java.lang.NullPointerException
at org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode(MessageSend.
java:40)
at org.eclipse.jdt.internal.compiler.ast.ReturnStatement.
analyseCode(ReturnStatement.java:37)
at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.
analyseCode(MethodDeclaration.java:70)
at org.aspectj.ajdt.internal.compiler.ast.InterTypeMethodDeclaration.
analyseCode(InterTypeMethodDeclaration.java:58)
at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.
internalAnalyseCode(TypeDeclaration.java:639)
at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.
analyseCode(TypeDeclaration.java:196)
at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.
analyseCode(CompilationUnitDeclaration.java:78)
at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:541)
at org.aspectj.ajdt.internal.compiler.AjCompiler.process(AjCompiler.java:65)
at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:338)
at org.aspectj.ajdt.internal.core.builder.AjBuildManager.
performCompilation(AjBuildManager.java:372)
at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.
java:133)
at org.aspectj.ajdt.internal.core.builder.AjBuildManager.
batchBuild(AjBuildManager.java:78)
at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:106)
at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60)
at org.aspectj.tools.ajc.Main.run(Main.java:217)
at org.aspectj.tools.ajc.Main.runMain(Main.java:155)
at org.aspectj.tools.ajc.Main.main(Main.java:72)

Please note that I have run the same aspect through the 1.0.6 AspectJ compiler 
without any problems.
Forgot to mention in my original report that if the single line of code inside 
the clone() method (return super.clone()) is replaced with the line "return 
null" then the aspect will compile OK on 1.1.0. 
General form of the bug is whenever Object methods are called from methods 
introduced on an interface.

*** This bug has been marked as a duplicate of 39993 ***
Here are two related patches that add a test for this problem to the AspectJ 
testing harness. I've had to split the patch into two because with all of the .
ajesym files that were created in my workspace from running the tests my first 
pass at a patch was too big to paste into this note.

Patch 1 of 2
-----------------

Index: georgeTests.xml
===================================================================
RCS file: georgeTests.xml
diff -N georgeTests.xml
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ georgeTests.xml	23 Jul 2003 10:25:54 -0000
@@ -0,0 +1,9 @@
+&lt;!DOCTYPE suite SYSTEM "../tests/ajcTestSuite.dtd"&gt;
+&lt;suite&gt; 
+    &lt;ajc-test dir="bugs" pr="40589"
+   	 title="Default method impl for interface causes internal exception."&gt;
+        &lt;compile files="CloneMethod.java"/&gt;
+        &lt;run class="CloneMethod"/&gt;
+    &lt;/ajc-test&gt;
+
+&lt;/suite&gt;
\ No newline at end of file


Patch 2 of 2
-----------------

Index: CloneMethod.java
===================================================================
RCS file: CloneMethod.java
diff -N CloneMethod.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ CloneMethod.java	23 Jul 2003 10:26:38 -0000
@@ -0,0 +1,58 @@
+aspect AspectA {
+	protected interface I {
+	}
+
+	declare parents : MyString implements I;
+
+	protected Object createCloneFor(I object) {
+		if (object instanceof MyString) {
+			return new MyString(((MyString) object).toString());
+		} else {
+			return null;
+		}
+	}
+
+	public Object I.clone() throws CloneNotSupportedException {
+		return super.clone();
+//		return null;
+	}
+
+	public Object cloneObject(I object) {
+		try {
+			return object.clone();
+		} catch (CloneNotSupportedException ex) {
+			return createCloneFor(object);
+		}
+	}
+}
+
+class MyString implements Cloneable {
+
+	protected String text;
+
+	public MyString(String init) {
+		text = init;
+	}
+
+	public void setText(String newText) {
+		text = newText;
+	}
+
+	public String toString() {
+		return "MyString: " + text;
+	}
+}
+
+public class CloneMethod {
+
+	public static void main(String[] args) {
+		MyString orig1;
+		MyString copy1;
+
+		orig1 = new MyString("  This is I 1");
+		copy1 = (MyString) AspectA.aspectOf().cloneObject(orig1);
+		orig1.setText("  This is I 2");
+		copy1.setText("  This is Clone 1");
+		System.out.println("... done.");
+	}
+}


Great.  This test has been added to the tree, and it also passes with the 
existing fix.

This patch was extremely easy to apply.  Only one comment.  For patches that 
you submit, you should put the test case in either ajcTests.xml or 
ajcTestsFailing.xml depending on the status rather than creating a new file.  
jimTests.xml is a convenience file that I use locally for playing around with 
things.  I'm going to remove it from the tree so that it won't confuse others 
in the future.</WithStack>
    <WithOutStack>Using AspectJ 1.1.0 on Windows, if I create an aspect that contains a 
declaration of an empty interface "I" and then supply a default implementation 
of the clone() method for the interface then an internal compiler error occurs 
at build time. 

Here is the simplest test case I can make :-

public aspect MyAspectA
{
    protected interface I {}
    
    public Object I.clone() throws CloneNotSupportedException {   
        return super.clone();
    }
}

When I run ajc against the above class I get the following output ..



Please note that I have run the same aspect through the 1.0.6 AspectJ compiler 
without any problems.
Forgot to mention in my original report that if the single line of code inside 
the clone() method (return super.clone()) is replaced with the line "return 
null" then the aspect will compile OK on 1.1.0. 
General form of the bug is whenever Object methods are called from methods 
introduced on an interface.

*** This bug has been marked as a duplicate of 39993 ***
Here are two related patches that add a test for this problem to the AspectJ 
testing harness. I've had to split the patch into two because with all of the .
ajesym files that were created in my workspace from running the tests my first 
pass at a patch was too big to paste into this note.

Patch 1 of 2
-----------------

Index: georgeTests.xml
===================================================================
RCS file: georgeTests.xml
diff -N georgeTests.xml
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ georgeTests.xml	23 Jul 2003 10:25:54 -0000
@@ -0,0 +1,9 @@
+&lt;!DOCTYPE suite SYSTEM "../tests/ajcTestSuite.dtd"&gt;
+&lt;suite&gt; 
+    &lt;ajc-test dir="bugs" pr="40589"
+   	 title="Default method impl for interface causes internal exception."&gt;
+        &lt;compile files="CloneMethod.java"/&gt;
+        &lt;run class="CloneMethod"/&gt;
+    &lt;/ajc-test&gt;
+
+&lt;/suite&gt;
\ No newline at end of file


Patch 2 of 2
-----------------

Index: CloneMethod.java
===================================================================
RCS file: CloneMethod.java
diff -N CloneMethod.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ CloneMethod.java	23 Jul 2003 10:26:38 -0000
@@ -0,0 +1,58 @@
+aspect AspectA {
+	protected interface I {
+	}
+
+	declare parents : MyString implements I;
+
+	protected Object createCloneFor(I object) {
+		if (object instanceof MyString) {
+			return new MyString(((MyString) object).toString());
+		} else {
+			return null;
+		}
+	}
+
+	public Object I.clone() throws CloneNotSupportedException {
+		return super.clone();
+//		return null;
+	}
+
+	public Object cloneObject(I object) {
+		try {
+			return object.clone();
+		} catch (CloneNotSupportedException ex) {
+			return createCloneFor(object);
+		}
+	}
+}
+
+class MyString implements Cloneable {
+
+	protected String text;
+
+	public MyString(String init) {
+		text = init;
+	}
+
+	public void setText(String newText) {
+		text = newText;
+	}
+
+	public String toString() {
+		return "MyString: " + text;
+	}
+}
+
+public class CloneMethod {
+
+	public static void main(String[] args) {
+		MyString orig1;
+		MyString copy1;
+
+		orig1 = new MyString("  This is I 1");
+		copy1 = (MyString) AspectA.aspectOf().cloneObject(orig1);
+		orig1.setText("  This is I 2");
+		copy1.setText("  This is Clone 1");
+		System.out.println("... done.");
+	}
+}


Great.  This test has been added to the tree, and it also passes with the 
existing fix.

This patch was extremely easy to apply.  Only one comment.  For patches that 
you submit, you should put the test case in either ajcTests.xml or 
ajcTestsFailing.xml depending on the status rather than creating a new file.  
jimTests.xml is a convenience file that I use locally for playing around with 
things.  I'm going to remove it from the tree so that it won't confuse others 
in the future.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40590" />
    <CreationDate amount="2003-07-22 10:17:00 -0400" />
    <DupId amount="36205" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Extend "self encapsulate" refactoring</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Currently the "Encapsulate field" refactoring complains and refuses to proceed
if the indicated getters/setters already exist.  This makes the refactoring
difficult to use (if not useless) when you're going back to clean up a class. 
It would be great if the refactoring had the options to use existing
getters/setters.


*** This bug has been marked as a duplicate of 36205 ***</WithStack>
    <WithOutStack>Currently the "Encapsulate field" refactoring complains and refuses to proceed
if the indicated getters/setters already exist.  This makes the refactoring
difficult to use (if not useless) when you're going back to clean up a class. 
It would be great if the refactoring had the options to use existing
getters/setters.


*** This bug has been marked as a duplicate of 36205 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40591" />
    <CreationDate amount="2003-07-22 10:21:00 -0400" />
    <DupId amount="9295" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eclipse cannot recover from broken network connections</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Try a network operation (ie/ CVS synch) with your network cable unplugged.  Plug
your network cable back in, and wait for Windows to "rediscover" your connection
(or, in linux, do an "/etc/init.d/network restart").  Try the network operation
again.  You get a message along the lines of "no route to host".  To get Eclipse
back on friendly terms with the network, you have to restart the IDE.
We have seen this behavior since 1.0 and I seem to recall that the VM doesn't
handle this well. Anyway, we should investigate.


*** This bug has been marked as a duplicate of 9295 ***</WithStack>
    <WithOutStack>Try a network operation (ie/ CVS synch) with your network cable unplugged.  Plug
your network cable back in, and wait for Windows to "rediscover" your connection
(or, in linux, do an "/etc/init.d/network restart").  Try the network operation
again.  You get a message along the lines of "no route to host".  To get Eclipse
back on friendly terms with the network, you have to restart the IDE.
We have seen this behavior since 1.0 and I seem to recall that the VM doesn't
handle this well. Anyway, we should investigate.


*** This bug has been marked as a duplicate of 9295 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40592" />
    <CreationDate amount="2003-07-22 10:26:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Extend &lt;ctrl-shift-m&gt; (Add Import) functionality</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Currently, if you do an "add import" for a fully-qualified class, the import is
added and the full-qualification is removed.  (ie/the package part of the class
name is removed).  If you do the same to another usage of the same class,
nothing happens.  It would be very helpful to have the package part of the class
name removed for any class that has an existing import when doing an add import.
fixed &gt; 20030723</WithStack>
    <WithOutStack>Currently, if you do an "add import" for a fully-qualified class, the import is
added and the full-qualification is removed.  (ie/the package part of the class
name is removed).  If you do the same to another usage of the same class,
nothing happens.  It would be very helpful to have the package part of the class
name removed for any class that has an existing import when doing an add import.
fixed &gt; 20030723</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40593" />
    <CreationDate amount="2003-07-22 10:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>[Doc] CVS parent marker type has no name</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build: 3.0 M2

org.eclipse.team.cvs.core plugin defines a marker with no name:

   &lt;extension
         id="cvsmarker"
         point="org.eclipse.core.resources.markers"&gt;
   &lt;/extension&gt;

It should supply a "name" attribute.  This shows up in the UI, for example in
the problems view filter dialog.  If no name is supplied then the marker Id
appears as the name in the UI.
Mike, can you remove the markers from the CVS plugin. We don't need them anymore
since they provide the exact same behavior as the new synchronize view.
If we remove these from the plugin what will the migration story be for 
workspaces that have existing CVS markers?
You may be in luck... the new "Project &gt; Clean..." action removes all problem
markers, so I think the user has a way to get rid of stale markers when they
upgrade to 3.0.
Alright! We will remove the last remaining CVS marker type and put a blurb in 
the readme (or FAQ) on how to remove existing CVS markers.
It turns out that the marker definition was already removed from the plugin.xml.
All that remains is to document the steps to remove the markers (eitehr in the
porting guid or the readme).
Added to release notes for 3.0</WithStack>
    <WithOutStack>Build: 3.0 M2

org.eclipse.team.cvs.core plugin defines a marker with no name:

   &lt;extension
         id="cvsmarker"
         point="org.eclipse.core.resources.markers"&gt;
   &lt;/extension&gt;

It should supply a "name" attribute.  This shows up in the UI, for example in
the problems view filter dialog.  If no name is supplied then the marker Id
appears as the name in the UI.
Mike, can you remove the markers from the CVS plugin. We don't need them anymore
since they provide the exact same behavior as the new synchronize view.
If we remove these from the plugin what will the migration story be for 
workspaces that have existing CVS markers?
You may be in luck... the new "Project &gt; Clean..." action removes all problem
markers, so I think the user has a way to get rid of stale markers when they
upgrade to 3.0.
Alright! We will remove the last remaining CVS marker type and put a blurb in 
the readme (or FAQ) on how to remove existing CVS markers.
It turns out that the marker definition was already removed from the plugin.xml.
All that remains is to document the steps to remove the markers (eitehr in the
porting guid or the readme).
Added to release notes for 3.0</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40594" />
    <CreationDate amount="2003-07-22 10:30:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>wrong location set for org.apache.ant when building jdt component with baseLocation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="681" end="712" />
        <code>bootclasspath="${bootclasspath}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="29">
        <Lines>
          <Line>- &lt;target name="jdtcore.jar" depends="init" unless="jdtcore.jar"</Line>
          <Line>description="Create jar: jdtcore.jar."&gt;</Line>
          <Line>&lt;delete dir="${temp.folder}/jdtcore.jar.bin" /&gt;</Line>
          <Line>&lt;mkdir dir="${temp.folder}/jdtcore.jar.bin" /&gt;</Line>
          <Line>- &lt;!--  compile the source code</Line>
          <Line>--&gt;</Line>
          <Line>- &lt;javac destdir="${temp.folder}/jdtcore.jar.bin"</Line>
          <Line>failonerror="${javacFailOnError}" verbose="${javacVerbose}"</Line>
          <Line>debug="${javacDebugInfo}" includeAntRuntime="no"</Line>
          <Line>"</Line>
          <Line>classpath="../../../t1/plugins/org.eclipse.core.boot/boot.jar;../org.apache.ant</Line>
          <Line>/ant.jar;../../../t1/plugins/org.eclipse.core.runtime/runtime.jar;../../../t1/p</Line>
          <Line>lugins/org.apache.xerces/xmlParserAPIs.jar;../../../t1/plugins/org.apache.xerce</Line>
          <Line>s/xercesImpl.jar;../../../t1/plugins/org.eclipse.core.resources/resources.jar;.</Line>
          <Line>./../../t1/plugins/org.eclipse.core.resources.macosx/resources.jar;../../../t1/</Line>
          <Line>plugins/org.eclipse.core.resources.linux/resources.jar;../../../t1/plugins/org.</Line>
          <Line>eclipse.core.resources.win32/resources.jar;../../../t1/plugins/org.eclipse.core</Line>
          <Line>.resources.qnx/resources.jar;../../../t1/plugins/org.eclipse.ant.core/antsuppor</Line>
          <Line>t.jar;../../../t1/plugins/org.eclipse.team.core/team.jar"</Line>
          <Line>source="${javacSource}" target="${javacTarget}"&gt;</Line>
          <Line>&lt;src path="batch/" /&gt;</Line>
          <Line>&lt;src path="codeassist/" /&gt;</Line>
          <Line>&lt;src path="compiler/" /&gt;</Line>
          <Line>&lt;src path="eval/" /&gt;</Line>
          <Line>&lt;src path="formatter/" /&gt;</Line>
          <Line>&lt;src path="dom/" /&gt;</Line>
          <Line>&lt;src path="model/" /&gt;</Line>
          <Line>&lt;src path="search/" /&gt;</Line>
          <Line>&lt;/javac&gt;</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When using org.eclipse.releng.eclipsebuilder to build the jdt component 
against a prebuilt platform component via a baseLocation setting, the 
classpath entry for org.apache.ant is not set correctly.
  ie.  the build.xml for org.eclipse.jdt.core contains the following:

- &lt;target name="jdtcore.jar" depends="init" unless="jdtcore.jar" 
description="Create jar: jdtcore.jar."&gt;
  &lt;delete dir="${temp.folder}/jdtcore.jar.bin" /&gt; 
  &lt;mkdir dir="${temp.folder}/jdtcore.jar.bin" /&gt; 
- &lt;!--  compile the source code 
  --&gt; 
- &lt;javac destdir="${temp.folder}/jdtcore.jar.bin" 
failonerror="${javacFailOnError}" verbose="${javacVerbose}" 
debug="${javacDebugInfo}" includeAntRuntime="no" 
bootclasspath="${bootclasspath}" 
classpath="../../../t1/plugins/org.eclipse.core.boot/boot.jar;../org.apache.ant
/ant.jar;../../../t1/plugins/org.eclipse.core.runtime/runtime.jar;../../../t1/p
lugins/org.apache.xerces/xmlParserAPIs.jar;../../../t1/plugins/org.apache.xerce
s/xercesImpl.jar;../../../t1/plugins/org.eclipse.core.resources/resources.jar;.
./../../t1/plugins/org.eclipse.core.resources.macosx/resources.jar;../../../t1/
plugins/org.eclipse.core.resources.linux/resources.jar;../../../t1/plugins/org.
eclipse.core.resources.win32/resources.jar;../../../t1/plugins/org.eclipse.core
.resources.qnx/resources.jar;../../../t1/plugins/org.eclipse.ant.core/antsuppor
t.jar;../../../t1/plugins/org.eclipse.team.core/team.jar" 
source="${javacSource}" target="${javacTarget}"&gt;
  &lt;src path="batch/" /&gt; 
  &lt;src path="codeassist/" /&gt; 
  &lt;src path="compiler/" /&gt; 
  &lt;src path="eval/" /&gt; 
  &lt;src path="formatter/" /&gt; 
  &lt;src path="dom/" /&gt; 
  &lt;src path="model/" /&gt; 
  &lt;src path="search/" /&gt; 
  &lt;/javac&gt;

"../org.apache.ant/ant.jar" should 
be ";../../../t1/plugins/org.apache.ant/ant.jar" in the classpath.
The location for ant is wrong because the specification of its location is 
wrong in the build.properties.

The jars.extra.classpath entries are used as is in the classpath. 
If the jars that are being refered are part of plugins people must use platform 
urls.

So in the case of jdt.core the entry should say:
  jars.extra.classpath=platform:/plugin/org.apache.ant/ant.jar
reassign but to JDT Core.
Verified that the change suggested by Pascal works.
Change integrated.

Fixed
Verified.</WithStack>
    <WithOutStack>When using org.eclipse.releng.eclipsebuilder to build the jdt component 
against a prebuilt platform component via a baseLocation setting, the 
classpath entry for org.apache.ant is not set correctly.
  ie.  the build.xml for org.eclipse.jdt.core contains the following:

- &lt;target name="jdtcore.jar" depends="init" unless="jdtcore.jar" 
description="Create jar: jdtcore.jar."&gt;
  &lt;delete dir="${temp.folder}/jdtcore.jar.bin" /&gt; 
  &lt;mkdir dir="${temp.folder}/jdtcore.jar.bin" /&gt; 
- &lt;!--  compile the source code 
  --&gt; 
- &lt;javac destdir="${temp.folder}/jdtcore.jar.bin" 
failonerror="${javacFailOnError}" verbose="${javacVerbose}" 
debug="${javacDebugInfo}" includeAntRuntime="no" 
bootclasspath="${bootclasspath}" 
classpath="../../../t1/plugins/org.eclipse.core.boot/boot.jar;../org.apache.ant
/ant.jar;../../../t1/plugins/org.eclipse.core.runtime/runtime.jar;../../../t1/p
lugins/org.apache.xerces/xmlParserAPIs.jar;../../../t1/plugins/org.apache.xerce
s/xercesImpl.jar;../../../t1/plugins/org.eclipse.core.resources/resources.jar;.
./../../t1/plugins/org.eclipse.core.resources.macosx/resources.jar;../../../t1/
plugins/org.eclipse.core.resources.linux/resources.jar;../../../t1/plugins/org.
eclipse.core.resources.win32/resources.jar;../../../t1/plugins/org.eclipse.core
.resources.qnx/resources.jar;../../../t1/plugins/org.eclipse.ant.core/antsuppor
t.jar;../../../t1/plugins/org.eclipse.team.core/team.jar" 
source="${javacSource}" target="${javacTarget}"&gt;
  &lt;src path="batch/" /&gt; 
  &lt;src path="codeassist/" /&gt; 
  &lt;src path="compiler/" /&gt; 
  &lt;src path="eval/" /&gt; 
  &lt;src path="formatter/" /&gt; 
  &lt;src path="dom/" /&gt; 
  &lt;src path="model/" /&gt; 
  &lt;src path="search/" /&gt; 
  &lt;/javac&gt;

"../org.apache.ant/ant.jar" should 
be ";../../../t1/plugins/org.apache.ant/ant.jar" in the classpath.
The location for ant is wrong because the specification of its location is 
wrong in the build.properties.

The jars.extra.classpath entries are used as is in the classpath. 
If the jars that are being refered are part of plugins people must use platform 
urls.

So in the case of jdt.core the entry should say:
  jars.extra.classpath=platform:/plugin/org.apache.ant/ant.jar
reassign but to JDT Core.
Verified that the change suggested by Pascal works.
Change integrated.

Fixed
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40595" />
    <CreationDate amount="2003-07-22 10:35:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Live Sync View] Nav not present in Java perspectiveigate/Show In/Navigator</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Please add additional actions into the popup menu for Synchronize view
(especially to the new one) to select changed resource in "Package Explorer" and
"Navigator" and also to delete selected resource from the project.
Delete has been added (bug 19598). No view in Eclipse has a Show In in the 
popup menu. Instead, Show In is available from the Navigate global menu. This 
works from the sync view but with strange behavior. In the Resource 
perspectibe, only the Navigator is available in Show in when a resource in the 
sync view is selected (which is probably reasonable). In the Java Browsing 
perspective only the Package Explorer is available. The navigator shold be 
availabe as well. Renaming big from "More actions for changed resources in 
Synchronize view" to indicate problem.
By definition you can't add a perspective extension that references a view that
you don't depend on. In the case of Team UI I have added the navigator to the
show in menu for the Team Synchronizing perspective. 
If synchronization view can't show actions for JDT, then it should allow JDT to 
add its acctions.
It does but JDT won't for the same reason you don't see JDT actions in the 
navigator. You can't have every plugin add object contributions to IResource. 
The UI would be a huge mess with every plugin having a contribution in the 
context menu. Just have a look at some of the bigger apps (WebSphere or XDE) 
and you will understand.</WithStack>
    <WithOutStack>Please add additional actions into the popup menu for Synchronize view
(especially to the new one) to select changed resource in "Package Explorer" and
"Navigator" and also to delete selected resource from the project.
Delete has been added (bug 19598). No view in Eclipse has a Show In in the 
popup menu. Instead, Show In is available from the Navigate global menu. This 
works from the sync view but with strange behavior. In the Resource 
perspectibe, only the Navigator is available in Show in when a resource in the 
sync view is selected (which is probably reasonable). In the Java Browsing 
perspective only the Package Explorer is available. The navigator shold be 
availabe as well. Renaming big from "More actions for changed resources in 
Synchronize view" to indicate problem.
By definition you can't add a perspective extension that references a view that
you don't depend on. In the case of Team UI I have added the navigator to the
show in menu for the Team Synchronizing perspective. 
If synchronization view can't show actions for JDT, then it should allow JDT to 
add its acctions.
It does but JDT won't for the same reason you don't see JDT actions in the 
navigator. You can't have every plugin add object contributions to IResource. 
The UI would be a huge mess with every plugin having a contribution in the 
context menu. Just have a look at some of the bigger apps (WebSphere or XDE) 
and you will understand.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40596" />
    <CreationDate amount="2003-07-22 10:38:00 -0400" />
    <DupId amount="63664" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P5" />
    <bug_severity amount="enhancement" />
    <Summery>Javadoc view and hover should render &lt;code&gt; and &lt;pre&gt; elements with a fixed width font</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Currently all text in the Javadoc view and hover is rendered using a
proportional font. It would be nice if &lt;code&gt; and &lt;pre&gt; tags were displayes
using a fixed-width font. (Alternatively the configured "Java Editor text font"
could be used.)

This way code examples and the explaining text could be visually distinguished
faster.
We considered this as well but are bound by the limitations of the current 
implementation. We use StyledText to render the text which is the SWT text 
widget. It is confined to a single font at a time and the styles plain and 
bold. There will be an HTML widget in the (near) future that will give as the 
styling for free.
This works now.
Get rid of deprecated state.


*** This bug has been marked as a duplicate of bug 63664 ***</WithStack>
    <WithOutStack>Currently all text in the Javadoc view and hover is rendered using a
proportional font. It would be nice if &lt;code&gt; and &lt;pre&gt; tags were displayes
using a fixed-width font. (Alternatively the configured "Java Editor text font"
could be used.)

This way code examples and the explaining text could be visually distinguished
faster.
We considered this as well but are bound by the limitations of the current 
implementation. We use StyledText to render the text which is the SWT text 
widget. It is confined to a single font at a time and the styles plain and 
bold. There will be an HTML widget in the (near) future that will give as the 
styling for free.
This works now.
Get rid of deprecated state.


*** This bug has been marked as a duplicate of bug 63664 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40597" />
    <CreationDate amount="2003-07-22 10:44:00 -0400" />
    <DupId amount="285637" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[JUnit] Run properties for JUnit  does not allow to change test method name</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If you select some method in the TestCase class and then choose Run as...-&gt;
JUnit Test it will create new entry in the run history list. It is possible to
copy that entry and to rename it, but it is not possible to change method name
choosen at the very beginning.
the test method is currently shown as a read-only field we should make it 
editable and support that the user can browse for another method.

(Wassim - we have to make sure that pde.junit and jdt.junit fix this problem 
in the same way).
Is there are any chance to see this in 3.0?
Any chance to get this feature implemented in 3.1 release? Thank you.
Erich, can you please reassing this issue to the right person?
moving back to the inbox
*** Bug 209325 has been marked as a duplicate of this bug. ***
Bug 285637 will fix this.

*** This bug has been marked as a duplicate of bug 285637 ***</WithStack>
    <WithOutStack>If you select some method in the TestCase class and then choose Run as...-&gt;
JUnit Test it will create new entry in the run history list. It is possible to
copy that entry and to rename it, but it is not possible to change method name
choosen at the very beginning.
the test method is currently shown as a read-only field we should make it 
editable and support that the user can browse for another method.

(Wassim - we have to make sure that pde.junit and jdt.junit fix this problem 
in the same way).
Is there are any chance to see this in 3.0?
Any chance to get this feature implemented in 3.1 release? Thank you.
Erich, can you please reassing this issue to the right person?
moving back to the inbox
*** Bug 209325 has been marked as a duplicate of this bug. ***
Bug 285637 will fix this.

*** This bug has been marked as a duplicate of bug 285637 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40598" />
    <CreationDate amount="2003-07-22 11:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[JUnit] Allow to choose selected JUnit test cases to run</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="465" end="1053" />
        <code>public class SomeTest extends TestCase {
    private String param;
    
    public SomeTest(String name, String param) throws Exception {
        super(name);
        this.param = param;
    }

    public void testSomething() {
    	assertNotNull(param);
    }
    
    public static Test suite() throws Exception {
        TestSuite suite = new TestSuite("NAUPDTRoundtrip");
        suite.addTest(new SomeTest("testSomething", "one"));
        suite.addTest(new SomeTest("testSomething", "two"));
        suite.addTest(new SomeTest("testSomething", null));
        return suite;
    }

}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>Present JUnit view allows to scan whole project and it is able to find testcases
and test suites. Unfortunately it runs them all immediately.

Please add an option to scan project and show all existing test cases and test
suites and then allow to select test cases and run only selected ones.

It is even more important to have such feature if TestSuite generating testcases
dynamically based on some external test data. Consider the following code as an
example:

public class SomeTest extends TestCase {
    private String param;
    
    public SomeTest(String name, String param) throws Exception {
        super(name);
        this.param = param;
    }

    public void testSomething() {
    	assertNotNull(param);
    }
    
    public static Test suite() throws Exception {
        TestSuite suite = new TestSuite("NAUPDTRoundtrip");
        suite.addTest(new SomeTest("testSomething", "one"));
        suite.addTest(new SomeTest("testSomething", "two"));
        suite.addTest(new SomeTest("testSomething", null));
        return suite;
    }

}
related to bug 36449
I'd like to propose UI interaction to select tests.

When suite is choosen, test runner should scan it for testcases and then display
the whole tree in the UI. There should be a checkbox for each test in the tree
that allow to select it for the execution. There should be  buttons to select
and unselect all tests. And there should be button to run all selected tests and
also separate one (or just popup menu) to run currently selected test. So, once
scanned, that tree should stay in testrunner view UI and run/rerun actions
should just update testcase state in the tree and in detailed panel.
Any chance to get this feature implemented in 3.1 release? Thank you.
Erich, please reassign to the right person
thanks for the reminder Markus is now the owner of the junit integration
I would love to see this feature implemented too. Maybe the checkboxes suggested by Eugene are a bit of overkill, but if I could just multi-select elements in the JUnit runner view and then run just the selection, that would be great.

Today, I can right-click on a single test case and run just that. But often I'd like to run 3 tests that are somewhat similar. Being able to multi-select them with Ctrl-Click, and Shift-Click would be great!
*** Bug 391243 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Present JUnit view allows to scan whole project and it is able to find testcases
and test suites. Unfortunately it runs them all immediately.

Please add an option to scan project and show all existing test cases and test
suites and then allow to select test cases and run only selected ones.

It is even more important to have such feature if TestSuite generating testcases
dynamically based on some external test data. Consider the following code as an
example:

public class SomeTest extends TestCase {
    private String param;
    
    public SomeTest(String name, String param) throws Exception {
        super(name);
        this.param = param;
    }

    public void testSomething() {
    	assertNotNull(param);
    }
    
    public static Test suite() throws Exception {
        TestSuite suite = new TestSuite("NAUPDTRoundtrip");
        suite.addTest(new SomeTest("testSomething", "one"));
        suite.addTest(new SomeTest("testSomething", "two"));
        suite.addTest(new SomeTest("testSomething", null));
        return suite;
    }

}
related to bug 36449
I'd like to propose UI interaction to select tests.

When suite is choosen, test runner should scan it for testcases and then display
the whole tree in the UI. There should be a checkbox for each test in the tree
that allow to select it for the execution. There should be  buttons to select
and unselect all tests. And there should be button to run all selected tests and
also separate one (or just popup menu) to run currently selected test. So, once
scanned, that tree should stay in testrunner view UI and run/rerun actions
should just update testcase state in the tree and in detailed panel.
Any chance to get this feature implemented in 3.1 release? Thank you.
Erich, please reassign to the right person
thanks for the reminder Markus is now the owner of the junit integration
I would love to see this feature implemented too. Maybe the checkboxes suggested by Eugene are a bit of overkill, but if I could just multi-select elements in the JUnit runner view and then run just the selection, that would be great.

Today, I can right-click on a single test case and run just that. But often I'd like to run 3 tests that are somewhat similar. Being able to multi-select them with Ctrl-Click, and Shift-Click would be great!
*** Bug 391243 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40599" />
    <CreationDate amount="2003-07-22 11:02:00 -0400" />
    <DupId amount="13585" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[ViewMgmt] free standing views - dual monitors - tear off views</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I am running with dual monitors on a W2K machine.  The way eclipse allows window
arrangement is great for a single monitor machine.  But now that I have a second
monitor, I would like to be able to pull off certain views, and place them
outside of the eclipse program window. Like how Photoshop does it, if any of you
are familiar with that.  That way, I can have the editor, navigator, outline,
etc. docked into eclipse on one of my monitors.  On my other monitor, I can have
the Problems, Task List, and Console windows open (as seperate windows - or
maybe just all docked into a seperate window).  I kind of got this to work from
the View -&gt; New Window method... but it only seems to work if I'm in the debug
mode... but I usually can't keep everything synced to my primary window.

I'd prefer to be able to just grab the view, and pull it outside of eclipse, and
have it appear as a free standing window.
With the latest integration build, you should be able to tear off a view. This 
only works on the windows platform. Reopen if you can't tear off the view. If 
you run into problems using the torn off views, please open a new bug report 
for each issue you encounter (may want to search first, as it may already be a 
known problem).
I am unable to tear off views - here is my build id:

Version: 3.0.0
Build id: 200307230800

Is this the correct build where it should work?

What did you mean by reopen?  I tried closing and reopening the java
perspective, but I was unable to drag the problem view, or the task view outside
of eclipse (by the title bar)

Is there a trick (or something obvious) that I am missing?

Thanks

Dan
Oooops... you will need to add the -detach command line parameter. We've just 
turn this stuff back on. There are many outstanding issues, that's why we only 
enable this if you have the command line parameter set. But the SWT and UI 
teams are working to fix these. If it is not possible, this feature will be 
turned off again.

The part about "reopen again" was refering to the bug report.
Very cool.  Thanks.  Yes, I have already noticed one issue - you can't move it
after you drop it.  But even like this, its very sweet.  I love having two
monitors.  I hope that this makes it into the final 3.0's.

Thanks, 

Dan
This seems to have been disabled again in M4?

Even if its broken in some way, I would still like the option of using it... it
always worked great for my purposes.
Dunno if the following two should be marked duplicate
of this one, I just put them here for info, but they should
be closed along this one I guess.

https://bugs.eclipse.org/bugs/show_bug.cgi?id=13585
https://bugs.eclipse.org/bugs/show_bug.cgi?id=19725

Cheers
--Steve
Can somebody close this bug?  Looking at the original request from 2003,
detached views have certianly solved this problem
OK.


*** This bug has been marked as a duplicate of 13585 ***</WithStack>
    <WithOutStack>I am running with dual monitors on a W2K machine.  The way eclipse allows window
arrangement is great for a single monitor machine.  But now that I have a second
monitor, I would like to be able to pull off certain views, and place them
outside of the eclipse program window. Like how Photoshop does it, if any of you
are familiar with that.  That way, I can have the editor, navigator, outline,
etc. docked into eclipse on one of my monitors.  On my other monitor, I can have
the Problems, Task List, and Console windows open (as seperate windows - or
maybe just all docked into a seperate window).  I kind of got this to work from
the View -&gt; New Window method... but it only seems to work if I'm in the debug
mode... but I usually can't keep everything synced to my primary window.

I'd prefer to be able to just grab the view, and pull it outside of eclipse, and
have it appear as a free standing window.
With the latest integration build, you should be able to tear off a view. This 
only works on the windows platform. Reopen if you can't tear off the view. If 
you run into problems using the torn off views, please open a new bug report 
for each issue you encounter (may want to search first, as it may already be a 
known problem).
I am unable to tear off views - here is my build id:

Version: 3.0.0
Build id: 200307230800

Is this the correct build where it should work?

What did you mean by reopen?  I tried closing and reopening the java
perspective, but I was unable to drag the problem view, or the task view outside
of eclipse (by the title bar)

Is there a trick (or something obvious) that I am missing?

Thanks

Dan
Oooops... you will need to add the -detach command line parameter. We've just 
turn this stuff back on. There are many outstanding issues, that's why we only 
enable this if you have the command line parameter set. But the SWT and UI 
teams are working to fix these. If it is not possible, this feature will be 
turned off again.

The part about "reopen again" was refering to the bug report.
Very cool.  Thanks.  Yes, I have already noticed one issue - you can't move it
after you drop it.  But even like this, its very sweet.  I love having two
monitors.  I hope that this makes it into the final 3.0's.

Thanks, 

Dan
This seems to have been disabled again in M4?

Even if its broken in some way, I would still like the option of using it... it
always worked great for my purposes.
Dunno if the following two should be marked duplicate
of this one, I just put them here for info, but they should
be closed along this one I guess.

https://bugs.eclipse.org/bugs/show_bug.cgi?id=13585
https://bugs.eclipse.org/bugs/show_bug.cgi?id=19725

Cheers
--Steve
Can somebody close this bug?  Looking at the original request from 2003,
detached views have certianly solved this problem
OK.


*** This bug has been marked as a duplicate of 13585 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="40600" />
    <CreationDate amount="2003-07-22 11:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="UI" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>automate post-install steps</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>There are numerous post-install steps described in:

http://dev.eclipse.org/viewcvs/indextech.cgi/~checkout~/org.eclipse.ajdt/plugin
s/org.eclipse.ajdt/releaseNotes/readme.html?rev=HEAD&amp;content-type=text/html

These should be autmated.  Where user input is required for automatic 
configuration a wizard should gather it before updating the workbench settings.
Julie has fixed this for 1.1.1
updated target milestone to 1.1.4</WithStack>
    <WithOutStack>There are numerous post-install steps described in:

http://dev.eclipse.org/viewcvs/indextech.cgi/~checkout~/org.eclipse.ajdt/plugin
s/org.eclipse.ajdt/releaseNotes/readme.html?rev=HEAD&amp;content-type=text/html

These should be autmated.  Where user input is required for automatic 
configuration a wizard should gather it before updating the workbench settings.
Julie has fixed this for 1.1.1
updated target milestone to 1.1.4</WithOutStack>
  </Bug>
</infozilla-output>

