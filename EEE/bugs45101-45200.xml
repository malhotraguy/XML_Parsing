<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="45101" />
    <CreationDate amount="2003-10-17 10:13:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[plan item] Integrate RCP stream into HEAD</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Integrate the RCP version of the text plugins with HEAD. (Overall platform 
item.)
Done.</WithStack>
    <WithOutStack>Integrate the RCP version of the text plugins with HEAD. (Overall platform 
item.)
Done.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45102" />
    <CreationDate amount="2003-10-17 10:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Selecting in the Outline hides all Editor Content in the file but the selected</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I don't know if this is expected behaviour.
When having files open, selections in the Outline brings up the corresponding
Editor but hides all Editor Content in the file. The only thing which is shown
is the selection made from the Outline. I don't know how to get the whole file
content back other than closing the file and reopening it. Annoying bug or is
this a "feature"?
Put the focus on the editor and in the toolbar you
will see a button, the hover says (Show Source of Selected Element
only) click on it, the entire file should come back

You will have the same behaviour in the JDT editor.

Please confirm to close this PR
Strange thing, I didn't expect. 

Ok, closing this.</WithStack>
    <WithOutStack>I don't know if this is expected behaviour.
When having files open, selections in the Outline brings up the corresponding
Editor but hides all Editor Content in the file. The only thing which is shown
is the selection made from the Outline. I don't know how to get the whole file
content back other than closing the file and reopening it. Annoying bug or is
this a "feature"?
Put the focus on the editor and in the toolbar you
will see a button, the hover says (Show Source of Selected Element
only) click on it, the entire file should come back

You will have the same behaviour in the JDT editor.

Please confirm to close this PR
Strange thing, I didn't expect. 

Ok, closing this.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45103" />
    <CreationDate amount="2003-10-17 10:32:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Code completion ignores type</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="assignment">
        <location start="20" end="54" />
        <code>String string = new String();</code>
      </source_code>
      <source_code type="assignment">
        <location start="55" end="111" />
        <code>String stringzehavior = new String(st[ctrl-space]);</code>
      </source_code>
      <source_code type="assignment">
        <location start="426" end="456" />
        <code>String string = new String();</code>
      </source_code>
      <source_code type="assignment">
        <location start="457" end="513" />
        <code>String stringzehavior = new String(StackOverflowError);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1141" end="1170" />
        <code>String string = new String();</code>
      </source_code>
      <source_code type="assignment">
        <location start="1171" end="1221" />
        <code>String stringzehavior = new String(s[ctrl-space]);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Type the following

     String string = new String();
     String stringzehavior = new String(st[ctrl-space]);

The resuling list is as follows:
 string
 stringzehavior
 String
 StringBuffer
 ...
 StackOverflowError
 StackTraceElement
 ...
 switch
 syserror

There is no reason to have options that are not valid types that string can 
handle.

For example, why show StackOverflowError. Selecting StackOverflow results in: 

	String string = new String();
	String stringzehavior = new String(StackOverflowError);

Worse yet, selecting switch results in: 

		String stringzehavior = new String(switch (key)
		{
			case value :
				
				break;

			default :
				break;
		});
In fact, if possible there shouldn't even be any popup, and it should just use 
string. 

If you wanted to write 'new String(StackOverflowError.class.getName())' then 
StackOverflowError needs to be included.

Agreed that switch is not expected. But I'm not sure it is easy to remove. 
David can you comment?
If there is no error in your test case then there is a bug because 'switch' 
and 'syserror' does not start with 'st'.

Your resulting list can be obtain with
String string = new String();
String stringzehavior = new String(s[ctrl-space]);

Classes like StackOverflowError are proposed for the reason described by Jerome.
'switch' and 'syserror' are not java completion but java template completion. 
Only the name of template is use to filter template proposals.
(look at Preference&gt;Java&gt;Editor&gt;Templates to see and define template)

With this test case, there is a bug of relevance. The relevance of string and 
stringzehavior is the same and stringzehavior should be lesser relevant.

To obtain the behavior described in comment 1 only the most relevant proposal 
would be proposed (sometime we can have several most relevant proposals)


Post 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Type the following

     String string = new String();
     String stringzehavior = new String(st[ctrl-space]);

The resuling list is as follows:
 string
 stringzehavior
 String
 StringBuffer
 ...
 StackOverflowError
 StackTraceElement
 ...
 switch
 syserror

There is no reason to have options that are not valid types that string can 
handle.

For example, why show StackOverflowError. Selecting StackOverflow results in: 

	String string = new String();
	String stringzehavior = new String(StackOverflowError);

Worse yet, selecting switch results in: 

		String stringzehavior = new String(switch (key)
		{
			case value :
				
				break;

			default :
				break;
		});
In fact, if possible there shouldn't even be any popup, and it should just use 
string. 

If you wanted to write 'new String(StackOverflowError.class.getName())' then 
StackOverflowError needs to be included.

Agreed that switch is not expected. But I'm not sure it is easy to remove. 
David can you comment?
If there is no error in your test case then there is a bug because 'switch' 
and 'syserror' does not start with 'st'.

Your resulting list can be obtain with
String string = new String();
String stringzehavior = new String(s[ctrl-space]);

Classes like StackOverflowError are proposed for the reason described by Jerome.
'switch' and 'syserror' are not java completion but java template completion. 
Only the name of template is use to filter template proposals.
(look at Preference&gt;Java&gt;Editor&gt;Templates to see and define template)

With this test case, there is a bug of relevance. The relevance of string and 
stringzehavior is the same and stringzehavior should be lesser relevant.

To obtain the behavior described in comment 1 only the most relevant proposal 
would be proposed (sometime we can have several most relevant proposals)


Post 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45104" />
    <CreationDate amount="2003-10-17 10:36:00 -0400" />
    <DupId amount="41564" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Compare" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Compare Enhancement -- active update of diff annotations and range markers</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>It would be really nice if the compare view would be more aggressive in updating
its diff annotations and range markers.  The main theme of this idea is to make
the diff shading/annotations reflect the state of the comparison with respect to
what's currently in memory (and, hence, in front of the user's eyes), and to
make those annotations automatically update whenever the user changes one of the
files (in memory -- without needing to save).  This differs from what's
currently implemented in that, currently, the user makes his/her changes, then
has to save and reload the comparison to see what the "new" differences are,
while, with this change, the annotations/shading would update themselves as the
user modifies the file.
Seems like a duplicate of 41564.


*** This bug has been marked as a duplicate of 41564 ***</WithStack>
    <WithOutStack>It would be really nice if the compare view would be more aggressive in updating
its diff annotations and range markers.  The main theme of this idea is to make
the diff shading/annotations reflect the state of the comparison with respect to
what's currently in memory (and, hence, in front of the user's eyes), and to
make those annotations automatically update whenever the user changes one of the
files (in memory -- without needing to save).  This differs from what's
currently implemented in that, currently, the user makes his/her changes, then
has to save and reload the comparison to see what the "new" differences are,
while, with this change, the annotations/shading would update themselves as the
user modifies the file.
Seems like a duplicate of 41564.


*** This bug has been marked as a duplicate of 41564 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45105" />
    <CreationDate amount="2003-10-17 10:42:00 -0400" />
    <DupId amount="47830" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows CE" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[browser] Browser widget on PPC</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>browser widget is not available on Pocket PC using IE. IE does have a control 
for HTML and possibly a Webcontrol too in ActiveX.

This would be very important for our handheld device development.


*** This bug has been marked as a duplicate of 47830 ***</WithStack>
    <WithOutStack>browser widget is not available on Pocket PC using IE. IE does have a control 
for HTML and possibly a Webcontrol too in ActiveX.

This would be very important for our handheld device development.


*** This bug has been marked as a duplicate of 47830 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45106" />
    <CreationDate amount="2003-10-17 10:52:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CTRL-F6 functions as F6 in Debug Perpsective</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I have one system where I installed M4, and CTRL-F6 doesn't function correctly
*in the debug perspective.* It's being treated as F6 (one of the single step
actions).  I've check the preferences for key mappings, and they all appear
"correct".
It works OK in the Java perspective.

Switching back to I20030917 (doing nothing else), and CTRL-F6 works fine in the
debug perspective.
What is CTRL-F6 mapped to?
Ctrl-F6 is 'next editor' by default.
Ctrl-F7 (next view) is not working neither in a debug perspective.

Darin W: can you test on windows, to see if it's a GTK only problem or not.
This is working on windows. Moving to Platform UI.
It works for me on one linux box, and not another.
Felipe, Is this the XFree86 problem?
Bug in gtk actually.
See http://bugzilla.gnome.org/show_bug.cgi?id=100439

You'll need a new version of Gtk.

I won't pretend to  understand all of the details in the referenced gnome bug. 
But if it works in a version of eclipse 3 weeks before M4, but fails in M4, AND
it CTRL-F6 works fine in other perspectives, how is it that my GTK library is bad?</WithStack>
    <WithOutStack>I have one system where I installed M4, and CTRL-F6 doesn't function correctly
*in the debug perspective.* It's being treated as F6 (one of the single step
actions).  I've check the preferences for key mappings, and they all appear
"correct".
It works OK in the Java perspective.

Switching back to I20030917 (doing nothing else), and CTRL-F6 works fine in the
debug perspective.
What is CTRL-F6 mapped to?
Ctrl-F6 is 'next editor' by default.
Ctrl-F7 (next view) is not working neither in a debug perspective.

Darin W: can you test on windows, to see if it's a GTK only problem or not.
This is working on windows. Moving to Platform UI.
It works for me on one linux box, and not another.
Felipe, Is this the XFree86 problem?
Bug in gtk actually.
See http://bugzilla.gnome.org/show_bug.cgi?id=100439

You'll need a new version of Gtk.

I won't pretend to  understand all of the details in the referenced gnome bug. 
But if it works in a version of eclipse 3 weeks before M4, but fails in M4, AND
it CTRL-F6 works fine in other perspectives, how is it that my GTK library is bad?</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45107" />
    <CreationDate amount="2003-10-17 10:56:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Somebackground thread is eating up CPU</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>When I upgraded to M4 from I20030917, I started to get occaisional "massive CPU
consumptions with out cause".  I can see my CPU meter pegged, and response is
very sluggish (~ five minutes to close Eclipse).  I do not yet have any clue as
to what is causing it.  I can be in eclipse for hours at a time without problem.
My feeling is it's related to building Java stuff, but no proof yet.
When your CPU is pegged can you do a CTRL-BREAK in a Java console to get a 
stack dump (I can never remember if this VM feature exists on Linux or not)?
I don't think "Java Console" even makes sense in the linux world....
So can you get a stack dump of a running Java program like you can on Windows?
Google (and a quick test) says "Yes" with "kill -QUIT &lt;javapid&gt;"  I'll try to
get one and attach it.
FWIW, I'm seeing this (massive CPU usage) in M4 when I use the JSP Editor from 
the examples.  CPU usage is fine with normal java file editing, open one 
instance of the JSP Editor, and it sticks at 100% - close the one instance, it 
*stays* at 100%.

I'm putting this here until David says he didn't install that plugin 
(org.eclipse.jdt.ui.examples.javafamily) nor the examples :)  if it looks to be 
a separate cause, i'll open up a new bug report
I didn't install that plugin. :)
We need a more definitive test case for this problem - as it stands, it points 
to no problems with the debugger.</WithStack>
    <WithOutStack>When I upgraded to M4 from I20030917, I started to get occaisional "massive CPU
consumptions with out cause".  I can see my CPU meter pegged, and response is
very sluggish (~ five minutes to close Eclipse).  I do not yet have any clue as
to what is causing it.  I can be in eclipse for hours at a time without problem.
My feeling is it's related to building Java stuff, but no proof yet.
When your CPU is pegged can you do a CTRL-BREAK in a Java console to get a 
stack dump (I can never remember if this VM feature exists on Linux or not)?
I don't think "Java Console" even makes sense in the linux world....
So can you get a stack dump of a running Java program like you can on Windows?
Google (and a quick test) says "Yes" with "kill -QUIT &lt;javapid&gt;"  I'll try to
get one and attach it.
FWIW, I'm seeing this (massive CPU usage) in M4 when I use the JSP Editor from 
the examples.  CPU usage is fine with normal java file editing, open one 
instance of the JSP Editor, and it sticks at 100% - close the one instance, it 
*stays* at 100%.

I'm putting this here until David says he didn't install that plugin 
(org.eclipse.jdt.ui.examples.javafamily) nor the examples :)  if it looks to be 
a separate cause, i'll open up a new bug report
I didn't install that plugin. :)
We need a more definitive test case for this problem - as it stands, it points 
to no problems with the debugger.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45108" />
    <CreationDate amount="2003-10-17 11:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[Contributions] SubContributionManger.find(String) throws exception</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341034092">
        <Exception>org.eclipse.jface.util.Assert$AssertionFailedException</Exception>
        <Reason>Assertion failed:</Reason>
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java:73)</Frame>
          <Frame depth="2">org.eclipse.jface.util.Assert$AssertionFailedException.&lt;init&gt;(Assert.java:54)</Frame>
          <Frame depth="3">org.eclipse.jface.util.Assert.isTrue(Assert.java:168)</Frame>
          <Frame depth="4">org.eclipse.jface.util.Assert.isTrue(Assert.java:154)</Frame>
          <Frame depth="5">org.eclipse.jface.action.SubContributionManager.unwrap(SubContributionManager.java:301)</Frame>
          <Frame depth="6">org.eclipse.jface.action.SubContributionManager.find(SubContributionManager.java:94)</Frame>
          <Frame depth="7">org.eclipse.ui.texteditor.BasicTextEditorActionContributor.contributeToStatusLine(BasicTextEditorActionContributor.java)</Frame>
          <Frame depth="8">org.eclipse.ui.part.EditorActionBarContributor.init(EditorActionBarContributor.java:139)</Frame>
          <Frame depth="9">org.eclipse.ui.part.EditorActionBarContributor.init(EditorActionBarContributor.java:119)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.javaeditor.BasicJavaEditorActionContributor.init(BasicJavaEditorActionContributor.java:125)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.javaeditor.BasicEditorActionContributor.init(BasicEditorActionContributor.java:103)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.EditorManager.createEditorActionBars(EditorManager.java:195)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:614)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:666)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.EditorManager.access$7(EditorManager.java:655)</Frame>
          <Frame depth="16">org.eclipse.ui.internal.EditorManager$7.run(EditorManager.java:919)</Frame>
          <Frame depth="17">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1018)</Frame>
          <Frame depth="18">org.eclipse.core.runtime.Platform.run(Platform.java:461)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:864)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.EditorManager$6.run(EditorManager.java:857)</Frame>
          <Frame depth="21">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:853)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:756)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2291)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1525)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:2203)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.access$14(Workbench.java:2159)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench$23.run(Workbench.java:2071)</Frame>
          <Frame depth="29">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1018)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.Platform.run(Platform.java:461)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:2024)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.init(Workbench.java:1761)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.run(Workbench.java:2332)</Frame>
          <Frame depth="34">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="35">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="36">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="37">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)</Frame>
          <Frame depth="38">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)</Frame>
          <Frame depth="39">java.lang.reflect.Method.invoke(Method.java:386)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="41">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="42">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="4">
      <source_code type="singlecomment">
        <location start="39" end="97" />
        <code>// @see EditorActionBarContributor#contributeToStatusLine</code>
      </source_code>
      <source_code type="functiondef">
        <location start="97" end="171" />
        <code>public void contributeToStatusLine(IStatusLineManager statusLineManager) {</code>
      </source_code>
      <source_code type="functioncall">
        <location start="172" end="222" />
        <code>super.contributeToStatusLine(statusLineManager);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="277" end="378" />
        <code>statusLineManager.insertBefore("&lt;someString&gt;",(IContributionItem)fStatusFields.get(STATUSFIELDS[0]));</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20031015

I wrote the following code:
// @see EditorActionBarContributor#contributeToStatusLine
public void contributeToStatusLine(IStatusLineManager statusLineManager) {
  super.contributeToStatusLine(statusLineManager);
  if (statusLineManager.find("&lt;someString&gt;") != null)
statusLineManager.insertBefore("&lt;someString&gt;",(IContributionItem)fStatusFields.get(STATUSFIELDS[0]));

and got:

!ENTRY org.eclipse.ui.workbench 4 2 Okt 17, 2003 16:49:48.592
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.ui.workbench".
!STACK 0
org.eclipse.jface.util.Assert$AssertionFailedException: Assertion failed: 
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at java.lang.Throwable.&lt;init&gt;(Throwable.java:73)
	at org.eclipse.jface.util.Assert$AssertionFailedException.&lt;init&gt;(Assert.java:54)
	at org.eclipse.jface.util.Assert.isTrue(Assert.java:168)
	at org.eclipse.jface.util.Assert.isTrue(Assert.java:154)
	at
org.eclipse.jface.action.SubContributionManager.unwrap(SubContributionManager.java:301)
	at
org.eclipse.jface.action.SubContributionManager.find(SubContributionManager.java:94)
	at
org.eclipse.ui.texteditor.BasicTextEditorActionContributor.contributeToStatusLine(BasicTextEditorActionContributor.java)
	at
org.eclipse.ui.part.EditorActionBarContributor.init(EditorActionBarContributor.java:139)
	at
org.eclipse.ui.part.EditorActionBarContributor.init(EditorActionBarContributor.java:119)
	at
org.eclipse.jdt.internal.ui.javaeditor.BasicJavaEditorActionContributor.init(BasicJavaEditorActionContributor.java:125)
	at
org.eclipse.jdt.internal.ui.javaeditor.BasicEditorActionContributor.init(BasicEditorActionContributor.java:103)
	at
org.eclipse.ui.internal.EditorManager.createEditorActionBars(EditorManager.java:195)
	at org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:614)
	at org.eclipse.ui.internal.EditorManager.openInternalEditor(EditorManager.java:666)
	at org.eclipse.ui.internal.EditorManager.access$7(EditorManager.java:655)
	at org.eclipse.ui.internal.EditorManager$7.run(EditorManager.java:919)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1018)
	at org.eclipse.core.runtime.Platform.run(Platform.java:461)
	at org.eclipse.ui.internal.EditorManager.busyRestoreEditor(EditorManager.java:864)
	at org.eclipse.ui.internal.EditorManager$6.run(EditorManager.java:857)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
	at org.eclipse.ui.internal.EditorManager.restoreEditor(EditorManager.java:853)
	at org.eclipse.ui.internal.EditorManager.restoreState(EditorManager.java:756)
	at org.eclipse.ui.internal.WorkbenchPage.restoreState(WorkbenchPage.java:2291)
	at org.eclipse.ui.internal.WorkbenchWindow.restoreState(WorkbenchWindow.java:1525)
	at org.eclipse.ui.internal.Workbench.restoreState(Workbench.java:2203)
	at org.eclipse.ui.internal.Workbench.access$14(Workbench.java:2159)
	at org.eclipse.ui.internal.Workbench$23.run(Workbench.java:2071)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1018)
	at org.eclipse.core.runtime.Platform.run(Platform.java:461)
	at
org.eclipse.ui.internal.Workbench.openPreviousWorkbenchState(Workbench.java:2024)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:1761)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:2332)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)
	at java.lang.reflect.Method.invoke(Method.java:386)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
This method should no longer throw an exception. 
Verified (I200405190010, Solaris 8, CDE, Motif) by visual inspection of the
code.</WithStack>
    <WithOutStack>I20031015

I wrote the following code:
// @see EditorActionBarContributor#contributeToStatusLine
public void contributeToStatusLine(IStatusLineManager statusLineManager) {
  super.contributeToStatusLine(statusLineManager);
  if (statusLineManager.find("&lt;someString&gt;") != null)
statusLineManager.insertBefore("&lt;someString&gt;",(IContributionItem)fStatusFields.get(STATUSFIELDS[0]));

and got:

!ENTRY org.eclipse.ui.workbench 4 2 Okt 17, 2003 16:49:48.592
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.ui.workbench".
!STACK 0

This method should no longer throw an exception. 
Verified (I200405190010, Solaris 8, CDE, Motif) by visual inspection of the
code.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45109" />
    <CreationDate amount="2003-10-17 11:10:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[ViewMgmt] Allow to "hide" View's t itlebars</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>For some views (such as Progress, Bookmarks, Search, Console) it will be great
to have an option to hide their titlebar to use screen space more effective.

"Hidden titlebar" can look like narrow titlebar (2..3 pixels), so doble-click
will bring it back to normal size and right click will show a popup menu, that
can combine all View's menus and action buttons all together. Title can be also
shown in a tooltip popup.

Please let me know if you'd like to see a picture of proposed enhancement.
Any chance to get this feature implemented in 3.1 release?
pictures would be helpful.  
I've been looking at the existing views. It turns out that witn recent UI
improvments each views status line and toolbar use screen estate quite
efficiently. So, the only improvement I can think of is to hide all tabs in a
current tabgroup. It may look like wider border on top of the view tab group and
tabs will appear back when user move mouse in that border area. When tabs are
hidden, all icons should be shown on view toolbar.
Created attachment 18000
Original progress view
Created attachment 18001
Possible visual appearance of single view with all controls/toolbars hidden.
I've added some atachments to illustrate possibilities for hiding toolbar and
other view area controls.
How would you expect it to behave if there were multiple views (each with their
own tab) docked together?

One reasonable option would be to disable this feature if area has more then one
view. Second option would be to put some kind of clickable "shadows" for each
tab. These shadows could have mouse rollover pop-up.

I think 1st option will be sufficient, because the whole idea is to make some
particular view always visible, so it should use all space as efficient as possible.
Reassigning bugs in component areas that are changing ownership.

Remy is now responsible for watching the [ViewMgmt] category.</WithStack>
    <WithOutStack>For some views (such as Progress, Bookmarks, Search, Console) it will be great
to have an option to hide their titlebar to use screen space more effective.

"Hidden titlebar" can look like narrow titlebar (2..3 pixels), so doble-click
will bring it back to normal size and right click will show a popup menu, that
can combine all View's menus and action buttons all together. Title can be also
shown in a tooltip popup.

Please let me know if you'd like to see a picture of proposed enhancement.
Any chance to get this feature implemented in 3.1 release?
pictures would be helpful.  
I've been looking at the existing views. It turns out that witn recent UI
improvments each views status line and toolbar use screen estate quite
efficiently. So, the only improvement I can think of is to hide all tabs in a
current tabgroup. It may look like wider border on top of the view tab group and
tabs will appear back when user move mouse in that border area. When tabs are
hidden, all icons should be shown on view toolbar.
Created attachment 18000
Original progress view
Created attachment 18001
Possible visual appearance of single view with all controls/toolbars hidden.
I've added some atachments to illustrate possibilities for hiding toolbar and
other view area controls.
How would you expect it to behave if there were multiple views (each with their
own tab) docked together?

One reasonable option would be to disable this feature if area has more then one
view. Second option would be to put some kind of clickable "shadows" for each
tab. These shadows could have mouse rollover pop-up.

I think 1st option will be sufficient, because the whole idea is to make some
particular view always visible, so it should use all space as efficient as possible.
Reassigning bugs in component areas that are changing ownership.

Remy is now responsible for watching the [ViewMgmt] category.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45110" />
    <CreationDate amount="2003-10-17 11:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No constant for '..compiler.problem.missingAnnotation'</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20031015

The constant for "org.eclipse.jdt.core.compiler.problem.missingAnnotation" is
missing.
e.g.
 JavaCore.COMPILER_PB_MISSING_ANNOTATION;
Fixed
Reopen in order to assign it to jdt-ui
fixed in jdt.ui &gt; 20031117
Verified.</WithStack>
    <WithOutStack>20031015

The constant for "org.eclipse.jdt.core.compiler.problem.missingAnnotation" is
missing.
e.g.
 JavaCore.COMPILER_PB_MISSING_ANNOTATION;
Fixed
Reopen in order to assign it to jdt-ui
fixed in jdt.ui &gt; 20031117
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45111" />
    <CreationDate amount="2003-10-17 11:31:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Sync View] Improved progress indicators</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="23">
        <Lines>
          <Line>- missing "Remove from view" in popup menu. I cannot remove the files I don't</Line>
          <Line>want to synchronize</Line>
          <Line>- When synchronization is in progress, to display it only in progress view is</Line>
          <Line>not enough. It would be nice to have icon/text directly in the synhronize view</Line>
          <Line>- When I commit on the background, again it would be nice to change icon for</Line>
          <Line>those items processed in the background, otherwise it is not clear what I have</Line>
          <Line>already commited and what no</Line>
          <Line>- It is confusing to figure out if I am looking on incoming or outgoing files.</Line>
          <Line>Either highlight the text below title bar or put it to the titlebard, looking</Line>
          <Line>at the icon is not enough.</Line>
          <Line>We've talked about simlar ideas. Investigate for 3.0 M5.</Line>
          <Line>remove from biew is dup of 41052, keeping open for the other points and</Line>
          <Line>renamed the title. We are looking into showing granular progress, but don't</Line>
          <Line>have a final solution yet.</Line>
          <Line>I am working with 3.0M6 and what is still really missing is missing "Remove</Line>
          <Line>from view" in popup menu. I cannot remove the files I don't</Line>
          <Line>want to synchronize and therefore I have to do multiselect around them. It is</Line>
          <Line>really painful.</Line>
          <Line>All the progress indicators for 3.0 are enabled now:</Line>
          <Line>- view icon changes when busy</Line>
          <Line>- half-busy cursor used</Line>
          <Line>- nodes in the view being worked on are highlighted</Line>
          <Line>- workbench progress indicator shows the task being performed</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The new CVS synchronization has usability problems
- missing "Remove from view" in popup menu. I cannot remove the files I don't 
want to synchronize
- When synchronization is in progress, to display it only in progress view is 
not enough. It would be nice to have icon/text directly in the synhronize view
- When I commit on the background, again it would be nice to change icon for 
those items processed in the background, otherwise it is not clear what I have 
already commited and what no
- It is confusing to figure out if I am looking on incoming or outgoing files. 
Either highlight the text below title bar or put it to the titlebard, looking 
at the icon is not enough.
We've talked about simlar ideas. Investigate for 3.0 M5.
remove from biew is dup of 41052, keeping open for the other points and 
renamed the title. We are looking into showing granular progress, but don't 
have a final solution yet. 
I am working with 3.0M6 and what is still really missing is missing "Remove 
from view" in popup menu. I cannot remove the files I don't 
want to synchronize and therefore I have to do multiselect around them. It is 
really painful.
All the progress indicators for 3.0 are enabled now:
- view icon changes when busy
- half-busy cursor used
- nodes in the view being worked on are highlighted
- workbench progress indicator shows the task being performed

re the remove from view, there is another pr for that already.</WithStack>
    <WithOutStack>The new CVS synchronization has usability problems
- missing "Remove from view" in popup menu. I cannot remove the files I don't 
want to synchronize
- When synchronization is in progress, to display it only in progress view is 
not enough. It would be nice to have icon/text directly in the synhronize view
- When I commit on the background, again it would be nice to change icon for 
those items processed in the background, otherwise it is not clear what I have 
already commited and what no
- It is confusing to figure out if I am looking on incoming or outgoing files. 
Either highlight the text below title bar or put it to the titlebard, looking 
at the icon is not enough.
We've talked about simlar ideas. Investigate for 3.0 M5.
remove from biew is dup of 41052, keeping open for the other points and 
renamed the title. We are looking into showing granular progress, but don't 
have a final solution yet. 
I am working with 3.0M6 and what is still really missing is missing "Remove 
from view" in popup menu. I cannot remove the files I don't 
want to synchronize and therefore I have to do multiselect around them. It is 
really painful.
All the progress indicators for 3.0 are enabled now:
- view icon changes when busy
- half-busy cursor used
- nodes in the view being worked on are highlighted
- workbench progress indicator shows the task being performed

re the remove from view, there is another pr for that already.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45112" />
    <CreationDate amount="2003-10-17 11:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Use Javadoc instead of Annotation for comment compiler parsing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20031015

The warnings for problems in javadoc tags say: 'Annotation: xxx'
I would suggest to not use 'Annotation' (already used my the editor e.g. Java -&gt;
Editor -&gt; Annotations' for something different.

'Javadoc tags' seems to me the better description.
Annotation also describes the new metadata facility. See JSR175. We might have
some problems for the naming of the ast classes.
All classes, method, fields names which contain 'annotation' will be changed.
'annotation' will be replaced by 'javadoc' with corresponding character case.

Also all comments which will be changed to avoid confusion...

Of course also replace 'Annotation: ....' in problems description 
with 'Javadoc: ...'.

As some problem descriptions already contain 'javadoc':
Annotation: Unexpected javadoc entry
Annotation: Missing javadoc entry for parameter {0}
Annotation: Duplicate entry for parameter
Annotation: Missing javadoc entry for return type
Annotation: Duplicate entry for return type
Annotation: Missing javadoc entry for declared exception {0}
Annotation: Duplicate entry for thrown exception
Annotation: Missing javadoc comment for public declaration

they will be replaced with following ones:
Javadoc: Unexpected tag
Javadoc: Missing tag for parameter {0}
Javadoc: Duplicate tag for parameter
Javadoc: Missing tag for return type
Javadoc: Duplicate tag for return type
Javadoc: Missing tag for declared exception {0}
Javadoc: Duplicate tag for thrown exception
Javadoc: Missing comment for public declaration

For all other description, only 'Annotation:' prefix will be changed 
to 'Javadoc:'

Martin,

Please note that due to conflict with Annotation JDK 1.5 grammar, ids for 
optional compiler problem to signal problems with javadoc will be changed.

New definitions for these options will be:

COMPILER / Reporting Invalid Javadoc Comment
  - option id: "org.eclipse.jdt.core.compiler.problem.invalidJavadoc"

COMPILER / Reporting Missing Javadoc Comment
  - option id: "org.eclipse.jdt.core.compiler.problem.missingJavadoc"

How can we synchronize this change?

If you can make me a new jdt.core drop as soon as you released the changes, 
then I can adapt to it immediatly as well.


BTW: I wouldn't qualify everything with 'Javadoc:', the other error messages 
don't do that either.
Just write 'Missing Javadoc tag', 'Missing Javadoc comment for public 
declaration'
Fixed.

No specific test cases added, only rerun those already existing.

Martin,
I let prefix 'Javadoc:' in problems description as this kind of problems are 
really specific for the compiler: they are not really against the code but in 
comments...
This is really useful as we use some of 'standard' compiler problem description 
(not found, not visible, etc...) while resolving bindings for references and we 
want to distinguish them easily from those which are in the code (warning/error 
levels are not enough to do this distinction).

Verified.</WithStack>
    <WithOutStack>20031015

The warnings for problems in javadoc tags say: 'Annotation: xxx'
I would suggest to not use 'Annotation' (already used my the editor e.g. Java -&gt;
Editor -&gt; Annotations' for something different.

'Javadoc tags' seems to me the better description.
Annotation also describes the new metadata facility. See JSR175. We might have
some problems for the naming of the ast classes.
All classes, method, fields names which contain 'annotation' will be changed.
'annotation' will be replaced by 'javadoc' with corresponding character case.

Also all comments which will be changed to avoid confusion...

Of course also replace 'Annotation: ....' in problems description 
with 'Javadoc: ...'.

As some problem descriptions already contain 'javadoc':
Annotation: Unexpected javadoc entry
Annotation: Missing javadoc entry for parameter {0}
Annotation: Duplicate entry for parameter
Annotation: Missing javadoc entry for return type
Annotation: Duplicate entry for return type
Annotation: Missing javadoc entry for declared exception {0}
Annotation: Duplicate entry for thrown exception
Annotation: Missing javadoc comment for public declaration

they will be replaced with following ones:
Javadoc: Unexpected tag
Javadoc: Missing tag for parameter {0}
Javadoc: Duplicate tag for parameter
Javadoc: Missing tag for return type
Javadoc: Duplicate tag for return type
Javadoc: Missing tag for declared exception {0}
Javadoc: Duplicate tag for thrown exception
Javadoc: Missing comment for public declaration

For all other description, only 'Annotation:' prefix will be changed 
to 'Javadoc:'

Martin,

Please note that due to conflict with Annotation JDK 1.5 grammar, ids for 
optional compiler problem to signal problems with javadoc will be changed.

New definitions for these options will be:

COMPILER / Reporting Invalid Javadoc Comment
  - option id: "org.eclipse.jdt.core.compiler.problem.invalidJavadoc"

COMPILER / Reporting Missing Javadoc Comment
  - option id: "org.eclipse.jdt.core.compiler.problem.missingJavadoc"

How can we synchronize this change?

If you can make me a new jdt.core drop as soon as you released the changes, 
then I can adapt to it immediatly as well.


BTW: I wouldn't qualify everything with 'Javadoc:', the other error messages 
don't do that either.
Just write 'Missing Javadoc tag', 'Missing Javadoc comment for public 
declaration'
Fixed.

No specific test cases added, only rerun those already existing.

Martin,
I let prefix 'Javadoc:' in problems description as this kind of problems are 
really specific for the compiler: they are not really against the code but in 
comments...
This is really useful as we use some of 'standard' compiler problem description 
(not found, not visible, etc...) while resolving bindings for references and we 
want to distinguish them easily from those which are in the code (warning/error 
levels are not enough to do this distinction).

Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45113" />
    <CreationDate amount="2003-10-17 11:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>No hierarchy refresh when on region</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="package">
        <location start="57" end="67" />
        <code>package p;</code>
      </source_code>
      <source_code type="class">
        <location start="68" end="86" />
        <code>public class X {
}</code>
      </source_code>
      <source_code type="package">
        <location start="95" end="105" />
        <code>package p;</code>
      </source_code>
      <source_code type="class">
        <location start="106" end="124" />
        <code>public class Y {
}</code>
      </source_code>
      <source_code type="package">
        <location start="198" end="208" />
        <code>package p;</code>
      </source_code>
      <source_code type="class">
        <location start="209" end="237" />
        <code>public class Y extends X {
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="5">
        <Lines>
          <Line>X.java</Line>
          <Line />
          <Line />
          <Line />
          <Line>Y.java</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="11">
        <Lines>
          <Line>1. Create package p</Line>
          <Line>2. Add 2 cus:</Line>
          <Line>X.java</Line>
          <Line />
          <Line />
          <Line />
          <Line>Y.java</Line>
          <Line />
          <Line />
          <Line>3. In Package Explorer, select p and open hierarchy</Line>
          <Line>4. Change Y.java to:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20031015

1. Create package p
2. Add 2 cus:
X.java
package p;
public class X {
}

Y.java
package p;
public class Y {
}
3. In Package Explorer, select p and open hierarchy
4. Change Y.java to:
package p;
public class Y extends X {
}
Observe: The hierarchy is not refreshed
Changed RegionBasedTypeHierarchy.isAffectedByOpenable(...) to use the super 
implementation in case of a working copy.

Added regression test TypeHierarchyNotificationTests.testAddExtendsSourceType2()
Verified.</WithStack>
    <WithOutStack>Build 20031015

1. Create package p
2. Add 2 cus:
X.java
package p;
public class X {
}

Y.java
package p;
public class Y {
}
3. In Package Explorer, select p and open hierarchy
4. Change Y.java to:
package p;
public class Y extends X {
}
Observe: The hierarchy is not refreshed
Changed RegionBasedTypeHierarchy.isAffectedByOpenable(...) to use the super 
implementation in case of a working copy.

Added regression test TypeHierarchyNotificationTests.testAddExtendsSourceType2()
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45114" />
    <CreationDate amount="2003-10-17 11:42:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>[hovering] Mouse wheel does not dismiss hover</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>To explain, please try this ... in eclipse place your mouse over the word 
IAction, as in the method signature below.

private void setActionEnabled(IAction action, boolean isEnabled)

A tooltip pops up providing details about IAction from the java docs ... then, 
without clicking, use the mouse wheel to scroll up or down. That window seems 
to stick around for a long time, far after the mouse is no longer over text 
that caused the tool tip to appear.
I20031023

Still an issue. SWT.MouseWheel has been added in 3.1. This event allows to
easily track MouseWheel-Events.

Ben
Fixed in HEAD.
Verified in I20050920-0010.</WithStack>
    <WithOutStack>To explain, please try this ... in eclipse place your mouse over the word 
IAction, as in the method signature below.

private void setActionEnabled(IAction action, boolean isEnabled)

A tooltip pops up providing details about IAction from the java docs ... then, 
without clicking, use the mouse wheel to scroll up or down. That window seems 
to stick around for a long time, far after the mouse is no longer over text 
that caused the tool tip to appear.
I20031023

Still an issue. SWT.MouseWheel has been added in 3.1. This event allows to
easily track MouseWheel-Events.

Ben
Fixed in HEAD.
Verified in I20050920-0010.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45115" />
    <CreationDate amount="2003-10-17 11:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>New Class Wizard: Error in base class doesn't clear when emptied</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I started up the new class wizard, typed the name of a base class that isn't in
my workspace. An error was flagged that the wizard didn't know about it. When I
erased the base class name to leave it blank, the error didn't go away and I had
to cancel the wizard and try again.

A blank base class name should always be valid.
Reassign to Hoda, the queen of the Class Wizard.
Solved.
The status checking was done when the base class name is &gt; 0.
Now it is doen when the base class name is &gt;= 0.

Fix submitted to head on Oct 23rd.</WithStack>
    <WithOutStack>I started up the new class wizard, typed the name of a base class that isn't in
my workspace. An error was flagged that the wizard didn't know about it. When I
erased the base class name to leave it blank, the error didn't go away and I had
to cancel the wizard and try again.

A blank base class name should always be valid.
Reassign to Hoda, the queen of the Class Wizard.
Solved.
The status checking was done when the base class name is &gt; 0.
Now it is doen when the base class name is &gt;= 0.

Fix submitted to head on Oct 23rd.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45116" />
    <CreationDate amount="2003-10-17 12:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Enforce factory != null invariant in CreationTool</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I've just run into a NPE in CreateRequest caused by the 'factory' field in
CreationTool being null. I don't see any reason for not enforcing the
non-nullness there as a class invariant; therefore I suggest integrating
an appropriate check in the setFactory method and either restricting access
to or eliminating the default constructor which does not initialize that
field.

Yes, it might break some existing apps, but I'd consider those that depended
on the behavior of setFactory(null) to be few and wrong anyway.
The use of a factory is not required.  The use of CreateRequest#getNewObject() 
requires a factory, but this doesn't mean all application will need it.</WithStack>
    <WithOutStack>I've just run into a NPE in CreateRequest caused by the 'factory' field in
CreationTool being null. I don't see any reason for not enforcing the
non-nullness there as a class invariant; therefore I suggest integrating
an appropriate check in the setFactory method and either restricting access
to or eliminating the default constructor which does not initialize that
field.

Yes, it might break some existing apps, but I'd consider those that depended
on the behavior of setFactory(null) to be few and wrong anyway.
The use of a factory is not required.  The use of CreateRequest#getNewObject() 
requires a factory, but this doesn't mean all application will need it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45117" />
    <CreationDate amount="2003-10-17 12:13:00 -0400" />
    <DupId amount="5188" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Breakpoint visible across projects.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>As I need to work concurrently on two different versions of an application I
checked out the code from CVS into two separate projects in Eclipse. Let me call
it Abc_1.0 and Abc_2.0.

I set a breakpoint in someMethod() of SomeClass in Abc_2.0.  Now if I run
Abc_1.0 in debug mode the execution stops in someMethod() of SomeClass.  The
source file of SomeClass that opens up is the one in Abc_1.0 and it does not
show the breakpoint.  

As the brekpoint was set in the source in Abc_2.0, the execution should not
suspend when I am executing Abc_1.0.  

I am using Version: 2.1.0 Build id: 200303272130 on Windows 2000.


*** This bug has been marked as a duplicate of 5188 ***</WithStack>
    <WithOutStack>As I need to work concurrently on two different versions of an application I
checked out the code from CVS into two separate projects in Eclipse. Let me call
it Abc_1.0 and Abc_2.0.

I set a breakpoint in someMethod() of SomeClass in Abc_2.0.  Now if I run
Abc_1.0 in debug mode the execution stops in someMethod() of SomeClass.  The
source file of SomeClass that opens up is the one in Abc_1.0 and it does not
show the breakpoint.  

As the brekpoint was set in the source in Abc_2.0, the execution should not
suspend when I am executing Abc_1.0.  

I am using Version: 2.1.0 Build id: 200303272130 on Windows 2000.


*** This bug has been marked as a duplicate of 5188 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45118" />
    <CreationDate amount="2003-10-17 12:24:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[browser] mozilla browser throws exception after reload in some cases</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="39" end="76" />
        <code>browser.setUrl("http://www.cnn.com");</code>
      </source_code>
      <source_code type="functioncall">
        <location start="77" end="94" />
        <code>browser.reload();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>immediately call reload after setUrl:

browser.setUrl("http://www.cnn.com");
browser.reload();

throws exception
fixed v&gt;20031017</WithStack>
    <WithOutStack>immediately call reload after setUrl:

browser.setUrl("http://www.cnn.com");
browser.reload();

throws exception
fixed v&gt;20031017</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45119" />
    <CreationDate amount="2003-10-17 12:30:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[inline] better default when inlining private method</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>3.0 m4

i think that when inling a private method that has only 1 call site, the default
could be to 'inline all' and 'delete declaration' - that's the 99% case then.</WithStack>
    <WithOutStack>3.0 m4

i think that when inling a private method that has only 1 call site, the default
could be to 'inline all' and 'delete declaration' - that's the 99% case then.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45120" />
    <CreationDate amount="2003-10-17 12:38:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Request for fixes that can span install locations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>One of the issues we have when shipping fixes to WSAD is that our product 
contains multiple install locations that eclipse links to (an eclipse 
location, our tools location, a Rational location)  When we ship a fix that 
touches plugins in more than one install location (such as documentation 
translations, or a scheduled fix) that turns into one fix per site.

This is really exposing our internal structure to our users and requiring 
extra steps from them when they don't need to know/care and just want to 
install a fix.   So the request is for the ability for a fix to span install 
locations.

- Jeff Turnham (WSAD Release Team)
Do you expect the fix (all the patching features/plugins ) to be installed in 
one place, or have the patching features/plugins be collocated with those 
being patched (i.e. distributed across installation sites) ?
I think what is being asked for is when we ship a patch to 5.1 that it requires 
us to have a separate patch for each site. Rather than 1 patch for all the 
site. The same goes for updates.

So this is basically the 1 feature including other features by crossing 
multiple sites question. 

structure like

Dir: eclipse\ has root feature com.ibm.wswb
Dir: wstools\ has root feature com.ibm.wsad
Dir: other\ has root feature com.ibm.other

We would want to have look like
Dir: wstools\ has root feature com.ibm.wsad which includes com.ibm.wswb and
com.ibm.other.

So in update manager you would only see com.ibm.wsad being patched or updated 
although the sub-features reside in multiple sites.


This is a mass update of Platform Update bugs that have had no activity in three years. Platform Update was replaced in Eclipse 3.4 (2008) by a new provisioning system called Equinox p2. If this bug or enhancement is not already addressed in p2 please enter a new bug report against p2 (RT &gt; Equinox &gt; p2). If you still want to see this bug addressed in the deprecated Platform Update component, please reopen this bug. Patches welcome.</WithStack>
    <WithOutStack>One of the issues we have when shipping fixes to WSAD is that our product 
contains multiple install locations that eclipse links to (an eclipse 
location, our tools location, a Rational location)  When we ship a fix that 
touches plugins in more than one install location (such as documentation 
translations, or a scheduled fix) that turns into one fix per site.

This is really exposing our internal structure to our users and requiring 
extra steps from them when they don't need to know/care and just want to 
install a fix.   So the request is for the ability for a fix to span install 
locations.

- Jeff Turnham (WSAD Release Team)
Do you expect the fix (all the patching features/plugins ) to be installed in 
one place, or have the patching features/plugins be collocated with those 
being patched (i.e. distributed across installation sites) ?
I think what is being asked for is when we ship a patch to 5.1 that it requires 
us to have a separate patch for each site. Rather than 1 patch for all the 
site. The same goes for updates.

So this is basically the 1 feature including other features by crossing 
multiple sites question. 

structure like

Dir: eclipse\ has root feature com.ibm.wswb
Dir: wstools\ has root feature com.ibm.wsad
Dir: other\ has root feature com.ibm.other

We would want to have look like
Dir: wstools\ has root feature com.ibm.wsad which includes com.ibm.wswb and
com.ibm.other.

So in update manager you would only see com.ibm.wsad being patched or updated 
although the sub-features reside in multiple sites.


This is a mass update of Platform Update bugs that have had no activity in three years. Platform Update was replaced in Eclipse 3.4 (2008) by a new provisioning system called Equinox p2. If this bug or enhancement is not already addressed in p2 please enter a new bug report against p2 (RT &gt; Equinox &gt; p2). If you still want to see this bug addressed in the deprecated Platform Update component, please reopen this bug. Patches welcome.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45121" />
    <CreationDate amount="2003-10-17 12:44:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[misc] Choosing not to open a file for edit under revision closes the file</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I've notice this with the p4eclipse plugin, but I don't think it has anything to
do with that plugin.  When a file is "closed for edit" under source control, and
you attempt edit a file, Eclipse prompt the user "should I check this file out".
 If I say "NO" (because I accidentally typed something), it replaces the editor
with a message saying "the user refused to open the file".

It should just leave it the way it was.
This might already be fixed by now.
Works for me using R3.2 or newer (didn't try with p4eclipse though).</WithStack>
    <WithOutStack>I've notice this with the p4eclipse plugin, but I don't think it has anything to
do with that plugin.  When a file is "closed for edit" under source control, and
you attempt edit a file, Eclipse prompt the user "should I check this file out".
 If I say "NO" (because I accidentally typed something), it replaces the editor
with a message saying "the user refused to open the file".

It should just leave it the way it was.
This might already be fixed by now.
Works for me using R3.2 or newer (didn't try with p4eclipse though).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45122" />
    <CreationDate amount="2003-10-17 12:46:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[browser] Mozilla browser forward() back() always return true</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>fail Browser junit tests
fixed v&gt;20031017
-</WithStack>
    <WithOutStack>fail Browser junit tests
fixed v&gt;20031017
-</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45123" />
    <CreationDate amount="2003-10-17 13:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[plan item] headless annotation support</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="3">
      <Enumeration lines="89">
        <Lines>
          <Line>1) Annotation types</Line>
          <Line />
          <Line>There is now the explicit notion of an annotation type. See Annotation.getType</Line>
          <Line>() and Annotation.setType(). The type of an annotation can change over it's</Line>
          <Line>lifetime. A new extension point has been added for the declaration of</Line>
          <Line>annotation types: "org.eclipse.ui.editors.annotationTypes". An annotation type</Line>
          <Line>has a name and can be declared as being a subtype of another declared</Line>
          <Line>annotation type. An annotation type declaration may also use the</Line>
          <Line>attributes "markerType" and "markerSeverity" in order to specify that markers</Line>
          <Line>of a given type and a given severity should be represented in text editors as</Line>
          <Line>annotations of a particular annotation type. The attributes "markerType"</Line>
          <Line>and "markerSeverity" in</Line>
          <Line>the "org.eclipse.ui.editors.markerAnnotationSpecification" should no longer be</Line>
          <Line>used. Marker annotation specifications are thus becoming independent from</Line>
          <Line>markers and the name thus misleading. However, the name is kept in order to</Line>
          <Line>ensure backward compatibility.</Line>
          <Line />
          <Line>Instances of subclasses of AbstractMarkerAnnotationModel automatically detect</Line>
          <Line>and set the correct  annotation types for annotations they create from</Line>
          <Line>markers. In order to programmatically retrieve the annotation type for a given</Line>
          <Line>marker or a given pair of markerType and markerSeverity use</Line>
          <Line>org.eclipse.ui.texteditor.AnnotationTypeLookup.</Line>
          <Line />
          <Line>Access to the hierarchy of annotation types is provided by</Line>
          <Line>AnnotationTypeHierarchy. For a given annotation type name you can get an</Line>
          <Line>AnnotationType that provides information about the chain of super types and a</Line>
          <Line>method to check whether an annotation type given as name is a subtype. You can</Line>
          <Line>also retrieve the information from IAnnotationAccessExtension.</Line>
          <Line>DefaultMarkerAnnotationAccess implements this interface.</Line>
          <Line />
          <Line>2) org.eclipse.ui.editors.markerAnnotationSpecification</Line>
          <Line />
          <Line>The annotation type is the key with which to find the associated marker</Line>
          <Line>annotation specification. As annotation types can extend other annotation</Line>
          <Line>types, there is an implicit relation between marker annotation specifications</Line>
          <Line>as well. Therefore a marker annotation specification for a given annotation</Line>
          <Line>type is completed by the marker annotation specifications given for the super</Line>
          <Line>types of the given annotation type. Therefore, marker annotation specification</Line>
          <Line>do not have to be complete as this was required before. Marker annotation</Line>
          <Line>specifications are reified by AnnotationPreferences. By using</Line>
          <Line>org.eclipse.ui.texteditor.AnnotationPreferenceLookup, you can retrieve an</Line>
          <Line>annotation preference for a given annotation type that transparently performs</Line>
          <Line>the completion of the preference along the annotation super type chain.</Line>
          <Line />
          <Line>3) Painting annotation</Line>
          <Line />
          <Line>Marker annotation specification has been extended with three addition</Line>
          <Line>attributed in order to allow the definition of custom appearances of a given</Line>
          <Line>annotation type in the vertical ruler. These attributes</Line>
          <Line>are: "icon", "symbolicIcon", and "annotationImageProvider". The value</Line>
          <Line>for "icon" is the path to a file containing the icon image. The value</Line>
          <Line>of "symbolicIcon" can be one</Line>
          <Line>of "error", "warning", "info", "task", "bookmark". The</Line>
          <Line>attribute "symbolicIcon" is used to tell the platform that annotation should</Line>
          <Line>be depicted with the same images that are used by the platform to present</Line>
          <Line>errors, warnings, infos, tasks, and bookmarks respectively. The value</Line>
          <Line>of "annotationImageProvider" is a class implementing</Line>
          <Line>org.eclipse.ui.texteditor.IAnnotationImageProvider that allows for a full</Line>
          <Line>custom annotation presentation.</Line>
          <Line />
          <Line>The vertical ruler uses it's associated</Line>
          <Line>IAnnotationAccess/IAnnotationAccessExtension to draw annotations. The vertical</Line>
          <Line>ruler does not call Annotation.paint any longer. In general, Annotations are</Line>
          <Line>no longer supposed to draw themselves. The "paint" and "getLayer" methods have</Line>
          <Line>been deprecated in order to make annotation eventually UI independent.</Line>
          <Line>DefaultMarkerAnnotationAccess serves as default implementation of</Line>
          <Line>IAnnotationAccess/IAnnotationAccessExtension. DefaultMarkerAnnotationAccess</Line>
          <Line>implements the following strategy for painting annotations: If an annotation</Line>
          <Line>implements IAnnotationPresentation, IAnnotationPresentation.paint is called.</Line>
          <Line>If not, the annotation image provider is looked up in the annotation</Line>
          <Line>preference. The annotation image provider is only available if specified and</Line>
          <Line>if the plug-in defining the enclosing marker annotation specification has</Line>
          <Line>already been loaded. If there is an annotation image provider, the call is</Line>
          <Line>forwarded to it. If not, the specified "icon" is looked up. "symbolicIcon" is</Line>
          <Line>used as the final fallback. For drawing annotations, the annotation</Line>
          <Line>presentation layer is relevant. DefaultMarkerAnnotationAccess looks up the</Line>
          <Line>presentation layer using the following strategy: If the annotation preference</Line>
          <Line>specifies a presentation layer, the specified layer is used. If there is no</Line>
          <Line>layer and the annotation implements IAnnotationPresentation,</Line>
          <Line>IAnnotationPresentation.getLayer is used otherwise the default presentation</Line>
          <Line>layer (which is 0) is returned.</Line>
          <Line />
          <Line>4) Additions to Annotation</Line>
          <Line />
          <Line>Annotations additionally support: a message, a flag to indicate whether the</Line>
          <Line>annotation is marked as deleted, a flag to indicate whether the annotation is</Line>
          <Line>persistent or temporary.</Line>
          <Line />
          <Line>5) Migration</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="26">
        <Lines>
          <Line>- ImageUtilities has been moved from org.eclipse.ui.texteditors to</Line>
          <Line>org.eclipse.jface.text.source</Line>
          <Line>- removed static Annotation.drawImage methods -&gt; use</Line>
          <Line>org.eclipse.jface.text.source.ImageUtilities</Line>
          <Line>- removed setLayer, getLayer, and paint from Annotation -&gt; annotations which</Line>
          <Line>want to draw</Line>
          <Line>themselves should implement IAnnotationPresentation (as has been introduced</Line>
          <Line>by Dec. 18th)</Line>
          <Line>- MarkerAnnotation now directly implements the methods removed from Annotation</Line>
          <Line>(setLayer, getLayer, paint)</Line>
          <Line>- MarkerAnnotation extends SimpleMarkerAnnotation, SimpleMarkerAnnotation just</Line>
          <Line>provides</Line>
          <Line>access to the represented IMarker</Line>
          <Line>- the following classes have been moved from the plug-in</Line>
          <Line>org.eclipse.jface.text to the plug-in</Line>
          <Line>org.eclipse.text, the package names remain the same</Line>
          <Line>org.eclipse.jface.text.ISynchronizable</Line>
          <Line>org.eclipse.jface.text.source.Annotation</Line>
          <Line>org.eclipse.jface.text.source.AnnotationMap</Line>
          <Line>org.eclipse.jface.text.source.AnnotationModel</Line>
          <Line>org.eclipse.jface.text.source.AnnotationModelEvent</Line>
          <Line>org.eclipse.jface.text.source.IAnnotationMap</Line>
          <Line>org.eclipse.jface.text.source.IAnnotationModel</Line>
          <Line>org.eclipse.jface.text.source.IAnnotationModelExtension</Line>
          <Line>org.eclipse.jface.text.source.IAnnotationModelListener</Line>
          <Line>org.eclipse.jface.text.source.IAnnotationModelListenerExtension</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="13">
        <Lines>
          <Line>- added ITextFileBuffer.getAnnotationModel(IPath)</Line>
          <Line>- added ITextFileBufferManager.createAnnotationModel(IPath)</Line>
          <Line>- introduced IPersistableAnnotationModel give annotations model a</Line>
          <Line>sense of a life cycle</Line>
          <Line>- added new extension point</Line>
          <Line>org.eclipse.core.filebuffers.annotationModelCreation for</Line>
          <Line>registering factories for file buffer annotation models</Line>
          <Line>- introduced IAnnotationModelFactory to reify the contract for the</Line>
          <Line>extension point</Line>
          <Line>- changed TextFileDocumentProvider to take the text file buffer</Line>
          <Line>annotation models into</Line>
          <Line>account. This is only the case when a subclass does override</Line>
          <Line>TextFileDocumentProvider.createAnnotationModel</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Filebuffers do not take care of updating marker attached to the underlying 
resource. ResourceMarkerAnnotationModel are already fullfilling this 
responsibility but are UI dependent. Introduce headless annotation models and 
update filebuffers to instantiate them. This involves API changes and needs to 
be approved by the PMC.
Will not be integrated into HEAD by M5. Moving milestone to M6. 
M6 contains changes and additions to the annotation mechanism. The changes are 
backward compatible and are required prerequisits for the next step which is 
introducing headless annotation support. Moving to M7.


1) Annotation types

There is now the explicit notion of an annotation type. See Annotation.getType
() and Annotation.setType(). The type of an annotation can change over it's 
lifetime. A new extension point has been added for the declaration of 
annotation types: "org.eclipse.ui.editors.annotationTypes". An annotation type 
has a name and can be declared as being a subtype of another declared 
annotation type. An annotation type declaration may also use the 
attributes "markerType" and "markerSeverity" in order to specify that markers 
of a given type and a given severity should be represented in text editors as 
annotations of a particular annotation type. The attributes "markerType" 
and "markerSeverity" in 
the "org.eclipse.ui.editors.markerAnnotationSpecification" should no longer be 
used. Marker annotation specifications are thus becoming independent from 
markers and the name thus misleading. However, the name is kept in order to 
ensure backward compatibility.

Instances of subclasses of AbstractMarkerAnnotationModel automatically detect 
and set the correct  annotation types for annotations they create from 
markers. In order to programmatically retrieve the annotation type for a given 
marker or a given pair of markerType and markerSeverity use 
org.eclipse.ui.texteditor.AnnotationTypeLookup.

Access to the hierarchy of annotation types is provided by 
AnnotationTypeHierarchy. For a given annotation type name you can get an 
AnnotationType that provides information about the chain of super types and a 
method to check whether an annotation type given as name is a subtype. You can 
also retrieve the information from IAnnotationAccessExtension. 
DefaultMarkerAnnotationAccess implements this interface.

2) org.eclipse.ui.editors.markerAnnotationSpecification

The annotation type is the key with which to find the associated marker 
annotation specification. As annotation types can extend other annotation 
types, there is an implicit relation between marker annotation specifications 
as well. Therefore a marker annotation specification for a given annotation 
type is completed by the marker annotation specifications given for the super 
types of the given annotation type. Therefore, marker annotation specification 
do not have to be complete as this was required before. Marker annotation 
specifications are reified by AnnotationPreferences. By using 
org.eclipse.ui.texteditor.AnnotationPreferenceLookup, you can retrieve an 
annotation preference for a given annotation type that transparently performs 
the completion of the preference along the annotation super type chain.

3) Painting annotation

Marker annotation specification has been extended with three addition 
attributed in order to allow the definition of custom appearances of a given 
annotation type in the vertical ruler. These attributes 
are: "icon", "symbolicIcon", and "annotationImageProvider". The value 
for "icon" is the path to a file containing the icon image. The value 
of "symbolicIcon" can be one 
of "error", "warning", "info", "task", "bookmark". The 
attribute "symbolicIcon" is used to tell the platform that annotation should 
be depicted with the same images that are used by the platform to present 
errors, warnings, infos, tasks, and bookmarks respectively. The value 
of "annotationImageProvider" is a class implementing 
org.eclipse.ui.texteditor.IAnnotationImageProvider that allows for a full 
custom annotation presentation.

The vertical ruler uses it's associated 
IAnnotationAccess/IAnnotationAccessExtension to draw annotations. The vertical 
ruler does not call Annotation.paint any longer. In general, Annotations are 
no longer supposed to draw themselves. The "paint" and "getLayer" methods have 
been deprecated in order to make annotation eventually UI independent. 
DefaultMarkerAnnotationAccess serves as default implementation of 
IAnnotationAccess/IAnnotationAccessExtension. DefaultMarkerAnnotationAccess 
implements the following strategy for painting annotations: If an annotation 
implements IAnnotationPresentation, IAnnotationPresentation.paint is called. 
If not, the annotation image provider is looked up in the annotation 
preference. The annotation image provider is only available if specified and 
if the plug-in defining the enclosing marker annotation specification has 
already been loaded. If there is an annotation image provider, the call is 
forwarded to it. If not, the specified "icon" is looked up. "symbolicIcon" is 
used as the final fallback. For drawing annotations, the annotation 
presentation layer is relevant. DefaultMarkerAnnotationAccess looks up the 
presentation layer using the following strategy: If the annotation preference 
specifies a presentation layer, the specified layer is used. If there is no 
layer and the annotation implements IAnnotationPresentation, 
IAnnotationPresentation.getLayer is used otherwise the default presentation 
layer (which is 0) is returned.

4) Additions to Annotation

Annotations additionally support: a message, a flag to indicate whether the 
annotation is marked as deleted, a flag to indicate whether the annotation is 
persistent or temporary.

5) Migration

The following annotation types are declared by the org.eclipse.ui.editors plug-
in:

   &lt;extension point="org.eclipse.ui.editors.annotationTypes"&gt;
      &lt;type
         name="org.eclipse.ui.workbench.texteditor.error"
         markerType="org.eclipse.core.resources.problemmarker"
         markerSeverity="2"&gt;
      &lt;/type&gt;
      &lt;type
         name="org.eclipse.ui.workbench.texteditor.warning"
         markerType="org.eclipse.core.resources.problemmarker"
         markerSeverity="1"&gt;
      &lt;/type&gt;
      &lt;type
         name="org.eclipse.ui.workbench.texteditor.info"
         markerType="org.eclipse.core.resources.problemmarker"
         markerSeverity="0"&gt;
      &lt;/type&gt;
      &lt;type
         name="org.eclipse.ui.workbench.texteditor.task"
         markerType="org.eclipse.core.resources.taskmarker"&gt;
      &lt;/type&gt;
      &lt;type
         name="org.eclipse.ui.workbench.texteditor.bookmark"
         markerType="org.eclipse.core.resources.bookmark"&gt;
      &lt;/type&gt;
   &lt;/extension&gt;

The defined markerAnnotationSpecification extension no longer 
provide "markerType" and "markerSeverity" attributes. They define 
the "symbolicIcon" attribute with the according value. Thus, 
MarkerAnnotation.paint and MarkerAnnotation.getLayer are not called any 
longer, i.e. overriding these methods does not have any effect.
Work on this has not happend during M7. Moving to M8.
Changing milestone to M9.
Fixed in M9.

From the build notes:

Headless annotation model support for text file buffers:

We added headless annotation model support to text file buffers. Each text
file buffer can now have its own annotation model. 
        ITextFileBuffer buffer= FileBuffers.getTextFileBufferManager
().getTextFileBuffer(&lt;location&gt;); 
        IAnnotationModel model= buffer.getAnnotationModel(); 
When the buffer's document is changed, all annotations in the buffer's 
annotation 
model are accordingly updated. 

As annotations (org.eclipse.jface.text.source.Annotation) had dependencies on 
SWT the following changes have been applied. These changes might break 
existing 3.0 clients. 
The changes in detail: 
- ImageUtilities has been moved from org.eclipse.ui.texteditors to 
org.eclipse.jface.text.source 
- removed static Annotation.drawImage methods -&gt; use 
org.eclipse.jface.text.source.ImageUtilities 
- removed setLayer, getLayer, and paint from Annotation -&gt; annotations which 
want to draw 
  themselves should implement IAnnotationPresentation (as has been introduced 
by Dec. 18th) 
- MarkerAnnotation now directly implements the methods removed from Annotation 
(setLayer, getLayer, paint) 
- MarkerAnnotation extends SimpleMarkerAnnotation, SimpleMarkerAnnotation just 
provides 
  access to the represented IMarker 
- the following classes have been moved from the plug-in 
org.eclipse.jface.text to the plug-in 
  org.eclipse.text, the package names remain the same 
        org.eclipse.jface.text.ISynchronizable 
        org.eclipse.jface.text.source.Annotation 
        org.eclipse.jface.text.source.AnnotationMap 
        org.eclipse.jface.text.source.AnnotationModel 
        org.eclipse.jface.text.source.AnnotationModelEvent 
        org.eclipse.jface.text.source.IAnnotationMap 
        org.eclipse.jface.text.source.IAnnotationModel 
        org.eclipse.jface.text.source.IAnnotationModelExtension 
        org.eclipse.jface.text.source.IAnnotationModelListener 
        org.eclipse.jface.text.source.IAnnotationModelListenerExtension 

The following changes were made to add headless annotation model support to 
filebuffers. 
        - added ITextFileBuffer.getAnnotationModel(IPath) 
        - added ITextFileBufferManager.createAnnotationModel(IPath) 
        - introduced IPersistableAnnotationModel give annotations model a 
sense of a life cycle 
        - added new extension point 
org.eclipse.core.filebuffers.annotationModelCreation for 
          registering factories for file buffer annotation models 
        - introduced IAnnotationModelFactory to reify the contract for the 
extension point 
        - changed TextFileDocumentProvider to take the text file buffer 
annotation models into 
          account. This is only the case when a subclass does override 
              TextFileDocumentProvider.createAnnotationModel</WithStack>
    <WithOutStack>Filebuffers do not take care of updating marker attached to the underlying 
resource. ResourceMarkerAnnotationModel are already fullfilling this 
responsibility but are UI dependent. Introduce headless annotation models and 
update filebuffers to instantiate them. This involves API changes and needs to 
be approved by the PMC.
Will not be integrated into HEAD by M5. Moving milestone to M6. 
M6 contains changes and additions to the annotation mechanism. The changes are 
backward compatible and are required prerequisits for the next step which is 
introducing headless annotation support. Moving to M7.


1) Annotation types

There is now the explicit notion of an annotation type. See Annotation.getType
() and Annotation.setType(). The type of an annotation can change over it's 
lifetime. A new extension point has been added for the declaration of 
annotation types: "org.eclipse.ui.editors.annotationTypes". An annotation type 
has a name and can be declared as being a subtype of another declared 
annotation type. An annotation type declaration may also use the 
attributes "markerType" and "markerSeverity" in order to specify that markers 
of a given type and a given severity should be represented in text editors as 
annotations of a particular annotation type. The attributes "markerType" 
and "markerSeverity" in 
the "org.eclipse.ui.editors.markerAnnotationSpecification" should no longer be 
used. Marker annotation specifications are thus becoming independent from 
markers and the name thus misleading. However, the name is kept in order to 
ensure backward compatibility.

Instances of subclasses of AbstractMarkerAnnotationModel automatically detect 
and set the correct  annotation types for annotations they create from 
markers. In order to programmatically retrieve the annotation type for a given 
marker or a given pair of markerType and markerSeverity use 
org.eclipse.ui.texteditor.AnnotationTypeLookup.

Access to the hierarchy of annotation types is provided by 
AnnotationTypeHierarchy. For a given annotation type name you can get an 
AnnotationType that provides information about the chain of super types and a 
method to check whether an annotation type given as name is a subtype. You can 
also retrieve the information from IAnnotationAccessExtension. 
DefaultMarkerAnnotationAccess implements this interface.

2) org.eclipse.ui.editors.markerAnnotationSpecification

The annotation type is the key with which to find the associated marker 
annotation specification. As annotation types can extend other annotation 
types, there is an implicit relation between marker annotation specifications 
as well. Therefore a marker annotation specification for a given annotation 
type is completed by the marker annotation specifications given for the super 
types of the given annotation type. Therefore, marker annotation specification 
do not have to be complete as this was required before. Marker annotation 
specifications are reified by AnnotationPreferences. By using 
org.eclipse.ui.texteditor.AnnotationPreferenceLookup, you can retrieve an 
annotation preference for a given annotation type that transparently performs 
the completion of the preference along the annotation super type chain.

3) Painting annotation

Marker annotation specification has been extended with three addition 
attributed in order to allow the definition of custom appearances of a given 
annotation type in the vertical ruler. These attributes 
are: "icon", "symbolicIcon", and "annotationImageProvider". The value 
for "icon" is the path to a file containing the icon image. The value 
of "symbolicIcon" can be one 
of "error", "warning", "info", "task", "bookmark". The 
attribute "symbolicIcon" is used to tell the platform that annotation should 
be depicted with the same images that are used by the platform to present 
errors, warnings, infos, tasks, and bookmarks respectively. The value 
of "annotationImageProvider" is a class implementing 
org.eclipse.ui.texteditor.IAnnotationImageProvider that allows for a full 
custom annotation presentation.

The vertical ruler uses it's associated 
IAnnotationAccess/IAnnotationAccessExtension to draw annotations. The vertical 
ruler does not call Annotation.paint any longer. In general, Annotations are 
no longer supposed to draw themselves. The "paint" and "getLayer" methods have 
been deprecated in order to make annotation eventually UI independent. 
DefaultMarkerAnnotationAccess serves as default implementation of 
IAnnotationAccess/IAnnotationAccessExtension. DefaultMarkerAnnotationAccess 
implements the following strategy for painting annotations: If an annotation 
implements IAnnotationPresentation, IAnnotationPresentation.paint is called. 
If not, the annotation image provider is looked up in the annotation 
preference. The annotation image provider is only available if specified and 
if the plug-in defining the enclosing marker annotation specification has 
already been loaded. If there is an annotation image provider, the call is 
forwarded to it. If not, the specified "icon" is looked up. "symbolicIcon" is 
used as the final fallback. For drawing annotations, the annotation 
presentation layer is relevant. DefaultMarkerAnnotationAccess looks up the 
presentation layer using the following strategy: If the annotation preference 
specifies a presentation layer, the specified layer is used. If there is no 
layer and the annotation implements IAnnotationPresentation, 
IAnnotationPresentation.getLayer is used otherwise the default presentation 
layer (which is 0) is returned.

4) Additions to Annotation

Annotations additionally support: a message, a flag to indicate whether the 
annotation is marked as deleted, a flag to indicate whether the annotation is 
persistent or temporary.

5) Migration

The following annotation types are declared by the org.eclipse.ui.editors plug-
in:

   &lt;extension point="org.eclipse.ui.editors.annotationTypes"&gt;
      &lt;type
         name="org.eclipse.ui.workbench.texteditor.error"
         markerType="org.eclipse.core.resources.problemmarker"
         markerSeverity="2"&gt;
      &lt;/type&gt;
      &lt;type
         name="org.eclipse.ui.workbench.texteditor.warning"
         markerType="org.eclipse.core.resources.problemmarker"
         markerSeverity="1"&gt;
      &lt;/type&gt;
      &lt;type
         name="org.eclipse.ui.workbench.texteditor.info"
         markerType="org.eclipse.core.resources.problemmarker"
         markerSeverity="0"&gt;
      &lt;/type&gt;
      &lt;type
         name="org.eclipse.ui.workbench.texteditor.task"
         markerType="org.eclipse.core.resources.taskmarker"&gt;
      &lt;/type&gt;
      &lt;type
         name="org.eclipse.ui.workbench.texteditor.bookmark"
         markerType="org.eclipse.core.resources.bookmark"&gt;
      &lt;/type&gt;
   &lt;/extension&gt;

The defined markerAnnotationSpecification extension no longer 
provide "markerType" and "markerSeverity" attributes. They define 
the "symbolicIcon" attribute with the according value. Thus, 
MarkerAnnotation.paint and MarkerAnnotation.getLayer are not called any 
longer, i.e. overriding these methods does not have any effect.
Work on this has not happend during M7. Moving to M8.
Changing milestone to M9.
Fixed in M9.

From the build notes:

Headless annotation model support for text file buffers:

We added headless annotation model support to text file buffers. Each text
file buffer can now have its own annotation model. 
        ITextFileBuffer buffer= FileBuffers.getTextFileBufferManager
().getTextFileBuffer(&lt;location&gt;); 
        IAnnotationModel model= buffer.getAnnotationModel(); 
When the buffer's document is changed, all annotations in the buffer's 
annotation 
model are accordingly updated. 

As annotations (org.eclipse.jface.text.source.Annotation) had dependencies on 
SWT the following changes have been applied. These changes might break 
existing 3.0 clients. 
The changes in detail: 
- ImageUtilities has been moved from org.eclipse.ui.texteditors to 
org.eclipse.jface.text.source 
- removed static Annotation.drawImage methods -&gt; use 
org.eclipse.jface.text.source.ImageUtilities 
- removed setLayer, getLayer, and paint from Annotation -&gt; annotations which 
want to draw 
  themselves should implement IAnnotationPresentation (as has been introduced 
by Dec. 18th) 
- MarkerAnnotation now directly implements the methods removed from Annotation 
(setLayer, getLayer, paint) 
- MarkerAnnotation extends SimpleMarkerAnnotation, SimpleMarkerAnnotation just 
provides 
  access to the represented IMarker 
- the following classes have been moved from the plug-in 
org.eclipse.jface.text to the plug-in 
  org.eclipse.text, the package names remain the same 
        org.eclipse.jface.text.ISynchronizable 
        org.eclipse.jface.text.source.Annotation 
        org.eclipse.jface.text.source.AnnotationMap 
        org.eclipse.jface.text.source.AnnotationModel 
        org.eclipse.jface.text.source.AnnotationModelEvent 
        org.eclipse.jface.text.source.IAnnotationMap 
        org.eclipse.jface.text.source.IAnnotationModel 
        org.eclipse.jface.text.source.IAnnotationModelExtension 
        org.eclipse.jface.text.source.IAnnotationModelListener 
        org.eclipse.jface.text.source.IAnnotationModelListenerExtension 

The following changes were made to add headless annotation model support to 
filebuffers. 
        - added ITextFileBuffer.getAnnotationModel(IPath) 
        - added ITextFileBufferManager.createAnnotationModel(IPath) 
        - introduced IPersistableAnnotationModel give annotations model a 
sense of a life cycle 
        - added new extension point 
org.eclipse.core.filebuffers.annotationModelCreation for 
          registering factories for file buffer annotation models 
        - introduced IAnnotationModelFactory to reify the contract for the 
extension point 
        - changed TextFileDocumentProvider to take the text file buffer 
annotation models into 
          account. This is only the case when a subclass does override 
              TextFileDocumentProvider.createAnnotationModel</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45124" />
    <CreationDate amount="2003-10-17 13:30:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P2" />
    <bug_severity amount="enhancement" />
    <Summery>[plan item] Place incremental find status into separate status line item</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Incremental find uses the workbench window status line. When having a post 
selection text listener that tries to find and display the error or warning 
underlying the current selection, the incremental find status and the error 
message are wipping out each other. Status line contribution item needs no to 
be editable but should support tooltips. 

Enable error updating on post selection event in Java editors.
Added new editor status field (category= findField).

Tool tip can be explicitly set. If none is set then it shows the text of the
filed if the text does not fit into the field.

Enabled status line updating based on post selection listener.
start verification

verified</WithStack>
    <WithOutStack>Incremental find uses the workbench window status line. When having a post 
selection text listener that tries to find and display the error or warning 
underlying the current selection, the incremental find status and the error 
message are wipping out each other. Status line contribution item needs no to 
be editable but should support tooltips. 

Enable error updating on post selection event in Java editors.
Added new editor status field (category= findField).

Tool tip can be explicitly set. If none is set then it shows the text of the
filed if the text does not fit into the field.

Enabled status line updating based on post selection listener.
start verification

verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45125" />
    <CreationDate amount="2003-10-17 13:40:00 -0400" />
    <DupId amount="37243" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Can't create radio button styled actions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>org.eclipse.jface.Action has a constructor through which you can specify a style
(i.e I want the actions to appear in the context menu as radio button actions
.... like the "open with" action on the eclipse explorer )

But the sub classes in GEF ....starting with
org.eclipse.gef.ui.actions.WorkbenchPartAction does not implement this constructor
Updated WorkbenchPartAction, EditorPartAction, and SelectionAction.


*** This bug has been marked as a duplicate of 37243 ***</WithStack>
    <WithOutStack>org.eclipse.jface.Action has a constructor through which you can specify a style
(i.e I want the actions to appear in the context menu as radio button actions
.... like the "open with" action on the eclipse explorer )

But the sub classes in GEF ....starting with
org.eclipse.gef.ui.actions.WorkbenchPartAction does not implement this constructor
Updated WorkbenchPartAction, EditorPartAction, and SelectionAction.


*** This bug has been marked as a duplicate of 37243 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45126" />
    <CreationDate amount="2003-10-17 13:48:00 -0400" />
    <DupId amount="43977" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Exception entering javadoc</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341034126">
        <Exception>java.lang.IllegalStateException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.ui.text.link.LinkedPositionUI.getSelectedRegion(LinkedPositionUI.java:335)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.ui.text.template.TemplateProposal.apply(TemplateProposal.java:160)</Frame>
          <Frame depth="2">org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal(CompletionProposalPopup.java:367)</Frame>
          <Frame depth="3">org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposalWithMask(CompletionProposalPopup.java:336)</Frame>
          <Frame depth="4">org.eclipse.jface.text.contentassist.CompletionProposalPopup.verifyKey(CompletionProposalPopup.java:635)</Frame>
          <Frame depth="5">org.eclipse.jface.text.contentassist.ContentAssistant$InternalListener.verifyKey(ContentAssistant.java:603)</Frame>
          <Frame depth="6">org.eclipse.jface.text.TextViewer$VerifyKeyListenersManager.verifyKey(TextViewer.java:369)</Frame>
          <Frame depth="7">org.eclipse.swt.custom.StyledTextListener.handleEvent(StyledTextListener.java:55)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:664)</Frame>
          <Frame depth="13">org.eclipse.swt.custom.StyledText.handleKeyDown(StyledText.java:5309)</Frame>
          <Frame depth="14">org.eclipse.swt.custom.StyledText$8.handleEvent(StyledText.java:5058)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1689)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1685)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3001)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Control.windowProc(Control.java:2889)</Frame>
          <Frame depth="23">org.eclipse.swt.widgets.Display.windowProc(Display.java:2698)</Frame>
          <Frame depth="24">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="25">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1346)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1861)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2361)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.run(Workbench.java:2344)</Frame>
          <Frame depth="29">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="30">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="31">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="33">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="34">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="35">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.run(Main.java:765)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.main(Main.java:599)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I got the following expection using code assist in javadoc to insert the 
&lt;code&gt; template. Eclipse build is I20031015.

java.lang.IllegalStateException
	at 
org.eclipse.jdt.internal.ui.text.link.LinkedPositionUI.getSelectedRegion
(LinkedPositionUI.java:335)
	at org.eclipse.jdt.internal.ui.text.template.TemplateProposal.apply
(TemplateProposal.java:160)
	at 
org.eclipse.jface.text.contentassist.CompletionProposalPopup.insertProposal
(CompletionProposalPopup.java:367)
	at 
org.eclipse.jface.text.contentassist.CompletionProposalPopup.selectProposalWith
Mask(CompletionProposalPopup.java:336)
	at 
org.eclipse.jface.text.contentassist.CompletionProposalPopup.verifyKey
(CompletionProposalPopup.java:635)
	at 
org.eclipse.jface.text.contentassist.ContentAssistant$InternalListener.verifyKe
y(ContentAssistant.java:603)
	at 
org.eclipse.jface.text.TextViewer$VerifyKeyListenersManager.verifyKey
(TextViewer.java:369)
	at org.eclipse.swt.custom.StyledTextListener.handleEvent
(StyledTextListener.java:55)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:664)
	at org.eclipse.swt.custom.StyledText.handleKeyDown
(StyledText.java:5309)
	at org.eclipse.swt.custom.StyledText$8.handleEvent
(StyledText.java:5058)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1689)
	at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1685)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3001)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2889)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2698)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1346)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1861)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2361)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:2344)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:765)
	at org.eclipse.core.launcher.Main.main(Main.java:599)
Tom, looks like a duplicate.
This will be fixed with the new Linked Position infrastructure.

*** This bug has been marked as a duplicate of 43977 ***</WithStack>
    <WithOutStack>I got the following expection using code assist in javadoc to insert the 
&lt;code&gt; template. Eclipse build is I20031015.


Tom, looks like a duplicate.
This will be fixed with the new Linked Position infrastructure.

*** This bug has been marked as a duplicate of 43977 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45127" />
    <CreationDate amount="2003-10-17 14:34:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Docs: Null entry in Hyades Help's Content tree menu.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The Hyades Help's Content tree menu contains a null entry which
displays a HTTP 500 error when selected.

The problem is in 
org.eclipse.hyades.collection.framework.java.doc.user\Agent_Controller_toc.xml 
file.  
The following attribute needs to be added to the toc element:

label="Agent Controller"
The code in cvs is already fixed.
Note: i didn't commit any code change for this defect
house keeping</WithStack>
    <WithOutStack>The Hyades Help's Content tree menu contains a null entry which
displays a HTTP 500 error when selected.

The problem is in 
org.eclipse.hyades.collection.framework.java.doc.user\Agent_Controller_toc.xml 
file.  
The following attribute needs to be added to the toc element:

label="Agent Controller"
The code in cvs is already fixed.
Note: i didn't commit any code change for this defect
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45128" />
    <CreationDate amount="2003-10-17 14:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Error within Debug UI</Summery>
    <Patches amount="0" />
    <Stacktraces amount="28">
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
      <Stacktrace timestamp="1437341034176">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="1">org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:357)</Frame>
          <Frame depth="2">org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)</Frame>
          <Frame depth="3">org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run(AbstractLaunchToolbarAction.java:69)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:207)</Frame>
          <Frame depth="6">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="7">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="8">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="9">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341034176">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2332)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2262)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Widget.error(Widget.java:385)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)</Frame>
          <Frame depth="5">org.eclipse.jface.window.Window.createShell(Window.java:335)</Frame>
          <Frame depth="6">org.eclipse.jface.window.Window.create(Window.java:301)</Frame>
          <Frame depth="7">org.eclipse.jface.window.Window.open(Window.java:552)</Frame>
          <Frame depth="8">org.eclipse.jface.dialogs.MessageDialog.openError(MessageDialog.java:286)</Frame>
          <Frame depth="9">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.validatePlugins(WorkbenchLaunchConfigurationDelegate.java:453)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="15">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="16">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="assignment">
        <location start="2220" end="2236" />
        <code>path.separator=;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Assigned a breakpoint and closed some of the windows (do not remember which 
ones) and then terminated the debug execution. Eclipse does not execute/debug 
simple java program from that point. Upon trying to execute or debug, it pops a 
window up saying

Exception occurred during launch

Reason: Error within Debug UI:

Debug Core: 2.1.0

Output from configuration details are:
********************************************
*** Date: 10/17/03 1:35 PM

*** System properties:
awt.toolkit=sun.awt.windows.WToolkit
file.encoding=Cp1252
file.encoding.pkg=sun.io
file.separator=\
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.awt.printerjob=sun.awt.windows.WPrinterJob
java.class.path=D:\eclipse\startup.jar
java.class.version=48.0
java.endorsed.dirs=d:\JBuilder9\jdk1.4\jre\lib\endorsed
java.ext.dirs=d:\JBuilder9\jdk1.4\jre\lib\ext
java.home=d:\JBuilder9\jdk1.4\jre
java.io.tmpdir=C:\DOCUME~1\daftabh\LOCALS~1\Temp\
java.library.path=C:\WINNT\system32;.;C:\WINNT\system32;C:\WINNT;D:\Oracle\Ora81
\bin;C:\Program Files\Oracle\jre\1.1.7\bin;d:\Program 
Files\Inprise\vbroker\bin;C:\WINNT\system32;C:\WINNT;C:\WINNT\System32
\Wbem;C:\Program Files\ATI Technologies\ATI Control Panel;C:\Program 
Files\Common Files\Adaptec Shared\System;d:\matlab6p5\bin\win32;C:\Program 
Files\Common Files\Autodesk Shared\;C:\PROGRA~1\COMMON~1\AUTODE~1\GIS\IMPORT~1
\2.0
java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition
java.runtime.version=1.4.1_02-b06
java.specification.name=Java Platform API Specification
java.specification.vendor=Sun Microsystems Inc.
java.specification.version=1.4
java.util.prefs.PreferencesFactory=java.util.prefs.WindowsPreferencesFactory
java.vendor=Sun Microsystems Inc.
java.vendor.url=http://java.sun.com/
java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi
java.version=1.4.1_02
java.vm.info=mixed mode
java.vm.name=Java HotSpot(TM) Client VM
java.vm.specification.name=Java Virtual Machine Specification
java.vm.specification.vendor=Sun Microsystems Inc.
java.vm.specification.version=1.0
java.vm.vendor=Sun Microsystems Inc.
java.vm.version=1.4.1_02-b06
line.separator=

org.eclipse.jdt.debug.ui.scrapbookActive=false
os.arch=x86
os.name=Windows 2000
os.version=5.0
path.separator=;
sun.arch.data.model=32
sun.boot.class.path=d:\JBuilder9\jdk1.4\jre\lib\rt.jar;d:\JBuilder9\jdk1.4
\jre\lib\i18n.jar;d:\JBuilder9\jdk1.4\jre\lib\sunrsasign.jar;d:\JBuilder9\jdk1.4
\jre\lib\jsse.jar;d:\JBuilder9\jdk1.4\jre\lib\jce.jar;d:\JBuilder9\jdk1.4
\jre\lib\charsets.jar;d:\JBuilder9\jdk1.4\jre\classes
sun.boot.library.path=d:\JBuilder9\jdk1.4\jre\bin
sun.cpu.endian=little
sun.cpu.isalist=pentium i486 i386
sun.io.unicode.encoding=UnicodeLittle
sun.java2d.fontpath=
sun.net.client.defaultConnectTimeout=60000
sun.net.client.defaultReadTimeout=60000
sun.os.patch.level=Service Pack 4
user.country=US
user.dir=D:\eclipse
user.home=C:\Documents and Settings\daftabh
user.language=en
user.name=daftabh
user.timezone=America/Chicago
user.variant=

*** Features:
org.eclipse.jdt (2.1.1) "org.eclipse.jdt"
org.eclipse.jdt.source (2.1.1) "org.eclipse.jdt.source"
org.eclipse.pde (2.1.0) "org.eclipse.pde"
org.eclipse.platform (2.1.1) "org.eclipse.platform"
org.eclipse.platform.source (2.1.1) "org.eclipse.platform.source"
org.eclipse.platform.win32 (2.1.1) "org.eclipse.platform.win32"
org.eclipse.platform.win32.source (2.1.1) "org.eclipse.platform.win32.source"
org.eclipse.sdk.win32 (2.1.1) "org.eclipse.sdk.win32"

*** Plug-in Registry:
org.apache.ant (1.5.3) "Apache Ant"
org.apache.lucene (1.2.1) "Apache Lucene"
org.apache.xerces (4.0.13) "Xerces Based XML Parser"
org.eclipse.ant.core (2.1.1) "Ant Build Tool Core"
org.eclipse.compare (2.1.0) "Compare Support"
org.eclipse.core.boot (2.1.1) "Core Boot"
org.eclipse.core.resources (2.1.1) "Core Resource Management"
	org.eclipse.core.resources.win32 (2.1.0) "%win32FragmentName"
org.eclipse.core.runtime (2.1.1) "Core Runtime"
org.eclipse.debug.core (2.1.0) "Debug Core"
org.eclipse.debug.ui (2.1.1) "Debug UI"
org.eclipse.help (2.1.1) "Help System Core"
org.eclipse.help.appserver (2.1.0) "Help Application Server"
org.eclipse.help.ui (2.1.1) "Help System UI"
	org.eclipse.help.ui.win32 (2.1.0) "%help_system_plugin_name_win32"
org.eclipse.help.webapp (2.1.1) "Help System Webapp"
org.eclipse.jdt (2.1.1) "Eclipse Java Development Tools"
org.eclipse.jdt.core (2.1.1) "Java Development Tools Core"
org.eclipse.jdt.debug (2.1.0) "JDI Debug Model"
org.eclipse.jdt.debug.ui (2.1.1) "JDI Debug UI"
org.eclipse.jdt.doc.isv (2.1.0) "Eclipse JDT Plug-in Developer Guide"
org.eclipse.jdt.doc.user (2.1.0) "Eclipse Java Development User Guide"
org.eclipse.jdt.junit (2.1.1) "Java Development Tools JUnit support"
org.eclipse.jdt.launching (2.1.1) "Java Development Tools Launching Support"
org.eclipse.jdt.source (2.1.1) "Eclipse Java Development Tools SDK"
org.eclipse.jdt.ui (2.1.1) "Java Development Tools UI"
org.eclipse.jface (2.1.1) "JFace"
org.eclipse.jface.text (2.1.0) "JFace Text"
org.eclipse.pde (2.1.0) "Eclipse Plug-in Development Environment"
org.eclipse.pde.build (2.1.0) "Plug-in Development Environment Build Support"
org.eclipse.pde.core (2.1.0) "Plug-in Development Core"
org.eclipse.pde.doc.user (2.1.0) "Eclipse Plug-in Development User Guide"
org.eclipse.pde.runtime (2.1.0) "Plug-in Development Environment Runtime"
org.eclipse.pde.source (2.1.0) "Eclipse Plug-in Development Environment Source 
Code"
org.eclipse.pde.ui (2.1.0) "Plug-in Development UI"
org.eclipse.platform (2.1.1) "Eclipse Platform"
org.eclipse.platform.doc.isv (2.1.0) "Eclipse Platform Plug-in Developer Guide"
org.eclipse.platform.doc.user (2.1.1) "Eclipse Workbench User Guide"
org.eclipse.platform.source (2.1.1) "Eclipse Platform Plug-in Developer 
Resources"
org.eclipse.platform.win32 (2.1.1) "Eclipse Platform (Windows)"
org.eclipse.platform.win32.source (2.1.1) "Eclipse Platform Plug-in Developer 
Resources (Windows)"
org.eclipse.sdk.win32 (2.1.1) "Eclipse Project SDK (Windows)"
org.eclipse.search (2.1.1) "Search Support"
org.eclipse.swt (2.1.1) "Standard Widget Toolkit"
	org.eclipse.swt.win32 (2.1.1) "%fragmentName"
org.eclipse.team.core (2.1.1) "Team Support Core"
org.eclipse.team.cvs.core (2.1.1) "CVS Team Provider Core"
org.eclipse.team.cvs.ssh (2.1.1) "CVS SSH Core"
org.eclipse.team.cvs.ui (2.1.1) "CVS Team Provider UI"
org.eclipse.team.ui (2.1.0) "Team Support UI"
org.eclipse.text (2.1.0) "Text"
org.eclipse.tomcat (4.0.6.1) "Tomcat Wrapper"
org.eclipse.ui (2.1.1) "Eclipse UI"
org.eclipse.ui.editors (2.1.0) "Default Text Editor"
org.eclipse.ui.externaltools (2.1.1) "External Tools"
org.eclipse.ui.versioncheck (2.1.1) "Eclipse Version Check"
org.eclipse.ui.views (2.1.0) "Views"
org.eclipse.ui.workbench (2.1.1) "Workbench"
	org.eclipse.ui.win32 (2.1.0) "%Win32Fragment.fragmentName"
org.eclipse.ui.workbench.texteditor (2.1.0) "Text Editor Framework"
org.eclipse.update.core (2.1.0) "Install/Update Core"
	org.eclipse.update.core.win32 (2.1.0) "%fragmentNameWin"
org.eclipse.update.ui (2.1.1) "Install/Update UI"
	org.eclipse.update.ui.win32 (2.1.0) "%fragmentNameWin"
org.eclipse.update.ui.forms (2.1.0) "Install/Update Forms"
org.junit (3.8.1) "JUnit Testing Framework"

*** User Preferences:
#Fri Oct 17 13:35:33 CDT 2003
org.eclipse.debug.ui/org.eclipse.debug.ui.lastLaunchConfigSelection=&lt;?xml 
version\="1.0" encoding\="UTF-8"?&gt;\r\n&lt;launchConfiguration local\="true" 
path\="ExprDriver.launch"/&gt;\r\n
org.eclipse.jdt.ui/fontPropagated=true
org.eclipse.jdt.core=2.1.1
org.eclipse.jdt.debug.ui/org.eclipse.debug.ui.VariableView.org.eclipse.jdt.debug
.ui.show_qualified_names=true
org.eclipse.jdt.debug.ui/org.eclipse.debug.ui.VariableView.org.eclipse.jdt.debug
.ui.show_constants=true
org.eclipse.jdt.core/org.eclipse.jdt.core.codeComplete.visibilityCheck=enabled
org.eclipse.ui.workbench=2.1.1
org.eclipse.jdt.launching/org.eclipse.jdt.launching.PREF_VM_XML=&lt;?xml 
version\="1.0" encoding\="UTF-8"?&gt;\r\n&lt;vmSettings\r\n    
defaultVM\="57,org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType1,0" 
defaultVMConnector\=""&gt;\r\n    &lt;vmType 
id\="org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType"&gt;\r\n        &lt;vm 
id\="0" javadocURL\="http\://java.sun.com/j2se/1.4.1/docs/api"\r\n            
name\="jdk1.4" path\="d\:\\JBuilder9\\jdk1.4"/&gt;\r\n    
&lt;/vmType&gt;\r\n&lt;/vmSettings&gt;\r\n
org.eclipse.jdt.ui=2.1.1
org.eclipse.ui.workbench/EXIT_PROMPT_ON_CLOSE_LAST_WINDOW=false
org.eclipse.debug.ui/org.eclipse.debug.ui.BreakpointView+org.eclipse.debug.ui.Sh
owSupportedBreakpointsAction=true
org.eclipse.pde.core/platform_path=D\:\\eclipse
org.eclipse.jdt.debug.ui=2.1.1
org.eclipse.jdt.ui/org.eclipse.jface.textfont=1|Courier 
New|10|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Courier 
New;1|Courier|10|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Courier;1|Lucida 
Console|9|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Lucida Console;
org.eclipse.jdt.launching=2.1.1
org.eclipse.debug.ui=2.1.1
org.eclipse.debug.ui/org.eclipse.debug.ui.VariableView+org.eclipse.debug.ui.Show
TypesAction=true
org.eclipse.ui.workbench/WELCOME_DIALOG=false
org.eclipse.pde.core=2.1.0
org.eclipse.jdt.core/org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.
launch
org.eclipse.jdt.debug.ui/org.eclipse.debug.ui.DebugView.org.eclipse.jdt.debug.ui
.show_qualified_names=true
org.eclipse.jdt.core/org.eclipse.jdt.core.classpathContainer.Abhay|org.eclipse.j
dt.launching.JRE_CONTAINER=&lt;?xml version\="1.0" encoding\="UTF-8"?
&gt;\n&lt;classpath&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/rt.jar" rootpath\="" 
sourcepath\="d\:/JBuilder9/jdk1.4/src.zip"/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/sunrsasign.jar" rootpath\="" 
sourcepath\="d\:/JBuilder9/jdk1.4/src.zip"/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/jsse.jar" rootpath\="" 
sourcepath\="d\:/JBuilder9/jdk1.4/src.zip"/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/jce.jar" rootpath\="" 
sourcepath\="d\:/JBuilder9/jdk1.4/src.zip"/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/charsets.jar" rootpath\="" 
sourcepath\="d\:/JBuilder9/jdk1.4/src.zip"/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/ext/dnsns.jar" rootpath\="" 
sourcepath\=""/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/ext/ldapsec.jar" rootpath\="" 
sourcepath\=""/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/ext/localedata.jar" rootpath\="" 
sourcepath\=""/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/ext/sunjce_provider.jar" rootpath\="" 
sourcepath\=""/&gt;&lt;/classpath&gt;
org.eclipse.jdt.core/org.eclipse.jdt.core.classpathVariable.ECLIPSE_HOME=D\:/ecl
ipse

*** Update Manager Log:

Configuration=Aug 11, 2003 12:34:07 PM
Is current configuration=true

Date=8/11/03 12:34 PM
Activities=file:D:/eclipse/
Action=Site installed
Status=Success

Date=8/11/03 12:34 PM
Activities=file:D:/eclipse/workspace/.metadata/.config/platform.cfg.metadata/v2L
ocalSite.xml
Action=Reconcile
Status=Success

*** Error Log:
!SESSION Oct 17, 2003 13:12:08.39 ----------------------------------------------
java.version=1.4.1_02
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:D:/eclipse/
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:12:08.39
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!SESSION Oct 17, 2003 13:13:09.39 ----------------------------------------------
java.version=1.4.1_02
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:D:/eclipse/
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:13:09.39
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:13:48.929
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:14:49.945
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:15:07.820
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:15:27.945
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:15:36.179
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:15:54.257
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!SESSION Oct 17, 2003 13:16:29.242 ---------------------------------------------
java.version=1.4.1_02
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:D:/eclipse/
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:16:29.242
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:17:14.976
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:17:19.820
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!SESSION Oct 17, 2003 13:17:46.757 ---------------------------------------------
java.version=1.4.1_02
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:D:/eclipse/
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:17:46.773
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:24:53.179
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:33:04.195
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
It looks like the PDE launcher is attempting to open a dialog in a non-UI 
thread. The launch method is not neccessarily called from the main (UI) thread.
Fixed.
Marking as fixed.</WithStack>
    <WithOutStack>Assigned a breakpoint and closed some of the windows (do not remember which 
ones) and then terminated the debug execution. Eclipse does not execute/debug 
simple java program from that point. Upon trying to execute or debug, it pops a 
window up saying

Exception occurred during launch

Reason: Error within Debug UI:

Debug Core: 2.1.0

Output from configuration details are:
********************************************
*** Date: 10/17/03 1:35 PM

*** System properties:
awt.toolkit=sun.awt.windows.WToolkit
file.encoding=Cp1252
file.encoding.pkg=sun.io
file.separator=\
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.awt.printerjob=sun.awt.windows.WPrinterJob
java.class.path=D:\eclipse\startup.jar
java.class.version=48.0
java.endorsed.dirs=d:\JBuilder9\jdk1.4\jre\lib\endorsed
java.ext.dirs=d:\JBuilder9\jdk1.4\jre\lib\ext
java.home=d:\JBuilder9\jdk1.4\jre
java.io.tmpdir=C:\DOCUME~1\daftabh\LOCALS~1\Temp\
java.library.path=C:\WINNT\system32;.;C:\WINNT\system32;C:\WINNT;D:\Oracle\Ora81
\bin;C:\Program Files\Oracle\jre\1.1.7\bin;d:\Program 
Files\Inprise\vbroker\bin;C:\WINNT\system32;C:\WINNT;C:\WINNT\System32
\Wbem;C:\Program Files\ATI Technologies\ATI Control Panel;C:\Program 
Files\Common Files\Adaptec Shared\System;d:\matlab6p5\bin\win32;C:\Program 
Files\Common Files\Autodesk Shared\;C:\PROGRA~1\COMMON~1\AUTODE~1\GIS\IMPORT~1
\2.0
java.runtime.name=Java(TM) 2 Runtime Environment, Standard Edition
java.runtime.version=1.4.1_02-b06
java.specification.name=Java Platform API Specification
java.specification.vendor=Sun Microsystems Inc.
java.specification.version=1.4
java.util.prefs.PreferencesFactory=java.util.prefs.WindowsPreferencesFactory
java.vendor=Sun Microsystems Inc.
java.vendor.url=http://java.sun.com/
java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi
java.version=1.4.1_02
java.vm.info=mixed mode
java.vm.name=Java HotSpot(TM) Client VM
java.vm.specification.name=Java Virtual Machine Specification
java.vm.specification.vendor=Sun Microsystems Inc.
java.vm.specification.version=1.0
java.vm.vendor=Sun Microsystems Inc.
java.vm.version=1.4.1_02-b06
line.separator=

org.eclipse.jdt.debug.ui.scrapbookActive=false
os.arch=x86
os.name=Windows 2000
os.version=5.0
path.separator=;
sun.arch.data.model=32
sun.boot.class.path=d:\JBuilder9\jdk1.4\jre\lib\rt.jar;d:\JBuilder9\jdk1.4
\jre\lib\i18n.jar;d:\JBuilder9\jdk1.4\jre\lib\sunrsasign.jar;d:\JBuilder9\jdk1.4
\jre\lib\jsse.jar;d:\JBuilder9\jdk1.4\jre\lib\jce.jar;d:\JBuilder9\jdk1.4
\jre\lib\charsets.jar;d:\JBuilder9\jdk1.4\jre\classes
sun.boot.library.path=d:\JBuilder9\jdk1.4\jre\bin
sun.cpu.endian=little
sun.cpu.isalist=pentium i486 i386
sun.io.unicode.encoding=UnicodeLittle
sun.java2d.fontpath=
sun.net.client.defaultConnectTimeout=60000
sun.net.client.defaultReadTimeout=60000
sun.os.patch.level=Service Pack 4
user.country=US
user.dir=D:\eclipse
user.home=C:\Documents and Settings\daftabh
user.language=en
user.name=daftabh
user.timezone=America/Chicago
user.variant=

*** Features:
org.eclipse.jdt (2.1.1) "org.eclipse.jdt"
org.eclipse.jdt.source (2.1.1) "org.eclipse.jdt.source"
org.eclipse.pde (2.1.0) "org.eclipse.pde"
org.eclipse.platform (2.1.1) "org.eclipse.platform"
org.eclipse.platform.source (2.1.1) "org.eclipse.platform.source"
org.eclipse.platform.win32 (2.1.1) "org.eclipse.platform.win32"
org.eclipse.platform.win32.source (2.1.1) "org.eclipse.platform.win32.source"
org.eclipse.sdk.win32 (2.1.1) "org.eclipse.sdk.win32"

*** Plug-in Registry:
org.apache.ant (1.5.3) "Apache Ant"
org.apache.lucene (1.2.1) "Apache Lucene"
org.apache.xerces (4.0.13) "Xerces Based XML Parser"
org.eclipse.ant.core (2.1.1) "Ant Build Tool Core"
org.eclipse.compare (2.1.0) "Compare Support"
org.eclipse.core.boot (2.1.1) "Core Boot"
org.eclipse.core.resources (2.1.1) "Core Resource Management"
	org.eclipse.core.resources.win32 (2.1.0) "%win32FragmentName"
org.eclipse.core.runtime (2.1.1) "Core Runtime"
org.eclipse.debug.core (2.1.0) "Debug Core"
org.eclipse.debug.ui (2.1.1) "Debug UI"
org.eclipse.help (2.1.1) "Help System Core"
org.eclipse.help.appserver (2.1.0) "Help Application Server"
org.eclipse.help.ui (2.1.1) "Help System UI"
	org.eclipse.help.ui.win32 (2.1.0) "%help_system_plugin_name_win32"
org.eclipse.help.webapp (2.1.1) "Help System Webapp"
org.eclipse.jdt (2.1.1) "Eclipse Java Development Tools"
org.eclipse.jdt.core (2.1.1) "Java Development Tools Core"
org.eclipse.jdt.debug (2.1.0) "JDI Debug Model"
org.eclipse.jdt.debug.ui (2.1.1) "JDI Debug UI"
org.eclipse.jdt.doc.isv (2.1.0) "Eclipse JDT Plug-in Developer Guide"
org.eclipse.jdt.doc.user (2.1.0) "Eclipse Java Development User Guide"
org.eclipse.jdt.junit (2.1.1) "Java Development Tools JUnit support"
org.eclipse.jdt.launching (2.1.1) "Java Development Tools Launching Support"
org.eclipse.jdt.source (2.1.1) "Eclipse Java Development Tools SDK"
org.eclipse.jdt.ui (2.1.1) "Java Development Tools UI"
org.eclipse.jface (2.1.1) "JFace"
org.eclipse.jface.text (2.1.0) "JFace Text"
org.eclipse.pde (2.1.0) "Eclipse Plug-in Development Environment"
org.eclipse.pde.build (2.1.0) "Plug-in Development Environment Build Support"
org.eclipse.pde.core (2.1.0) "Plug-in Development Core"
org.eclipse.pde.doc.user (2.1.0) "Eclipse Plug-in Development User Guide"
org.eclipse.pde.runtime (2.1.0) "Plug-in Development Environment Runtime"
org.eclipse.pde.source (2.1.0) "Eclipse Plug-in Development Environment Source 
Code"
org.eclipse.pde.ui (2.1.0) "Plug-in Development UI"
org.eclipse.platform (2.1.1) "Eclipse Platform"
org.eclipse.platform.doc.isv (2.1.0) "Eclipse Platform Plug-in Developer Guide"
org.eclipse.platform.doc.user (2.1.1) "Eclipse Workbench User Guide"
org.eclipse.platform.source (2.1.1) "Eclipse Platform Plug-in Developer 
Resources"
org.eclipse.platform.win32 (2.1.1) "Eclipse Platform (Windows)"
org.eclipse.platform.win32.source (2.1.1) "Eclipse Platform Plug-in Developer 
Resources (Windows)"
org.eclipse.sdk.win32 (2.1.1) "Eclipse Project SDK (Windows)"
org.eclipse.search (2.1.1) "Search Support"
org.eclipse.swt (2.1.1) "Standard Widget Toolkit"
	org.eclipse.swt.win32 (2.1.1) "%fragmentName"
org.eclipse.team.core (2.1.1) "Team Support Core"
org.eclipse.team.cvs.core (2.1.1) "CVS Team Provider Core"
org.eclipse.team.cvs.ssh (2.1.1) "CVS SSH Core"
org.eclipse.team.cvs.ui (2.1.1) "CVS Team Provider UI"
org.eclipse.team.ui (2.1.0) "Team Support UI"
org.eclipse.text (2.1.0) "Text"
org.eclipse.tomcat (4.0.6.1) "Tomcat Wrapper"
org.eclipse.ui (2.1.1) "Eclipse UI"
org.eclipse.ui.editors (2.1.0) "Default Text Editor"
org.eclipse.ui.externaltools (2.1.1) "External Tools"
org.eclipse.ui.versioncheck (2.1.1) "Eclipse Version Check"
org.eclipse.ui.views (2.1.0) "Views"
org.eclipse.ui.workbench (2.1.1) "Workbench"
	org.eclipse.ui.win32 (2.1.0) "%Win32Fragment.fragmentName"
org.eclipse.ui.workbench.texteditor (2.1.0) "Text Editor Framework"
org.eclipse.update.core (2.1.0) "Install/Update Core"
	org.eclipse.update.core.win32 (2.1.0) "%fragmentNameWin"
org.eclipse.update.ui (2.1.1) "Install/Update UI"
	org.eclipse.update.ui.win32 (2.1.0) "%fragmentNameWin"
org.eclipse.update.ui.forms (2.1.0) "Install/Update Forms"
org.junit (3.8.1) "JUnit Testing Framework"

*** User Preferences:
#Fri Oct 17 13:35:33 CDT 2003
org.eclipse.debug.ui/org.eclipse.debug.ui.lastLaunchConfigSelection=&lt;?xml 
version\="1.0" encoding\="UTF-8"?&gt;\r\n&lt;launchConfiguration local\="true" 
path\="ExprDriver.launch"/&gt;\r\n
org.eclipse.jdt.ui/fontPropagated=true
org.eclipse.jdt.core=2.1.1
org.eclipse.jdt.debug.ui/org.eclipse.debug.ui.VariableView.org.eclipse.jdt.debug
.ui.show_qualified_names=true
org.eclipse.jdt.debug.ui/org.eclipse.debug.ui.VariableView.org.eclipse.jdt.debug
.ui.show_constants=true
org.eclipse.jdt.core/org.eclipse.jdt.core.codeComplete.visibilityCheck=enabled
org.eclipse.ui.workbench=2.1.1
org.eclipse.jdt.launching/org.eclipse.jdt.launching.PREF_VM_XML=&lt;?xml 
version\="1.0" encoding\="UTF-8"?&gt;\r\n&lt;vmSettings\r\n    
defaultVM\="57,org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType1,0" 
defaultVMConnector\=""&gt;\r\n    &lt;vmType 
id\="org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType"&gt;\r\n        &lt;vm 
id\="0" javadocURL\="http\://java.sun.com/j2se/1.4.1/docs/api"\r\n            
name\="jdk1.4" path\="d\:\\JBuilder9\\jdk1.4"/&gt;\r\n    
&lt;/vmType&gt;\r\n&lt;/vmSettings&gt;\r\n
org.eclipse.jdt.ui=2.1.1
org.eclipse.ui.workbench/EXIT_PROMPT_ON_CLOSE_LAST_WINDOW=false
org.eclipse.debug.ui/org.eclipse.debug.ui.BreakpointView+org.eclipse.debug.ui.Sh
owSupportedBreakpointsAction=true
org.eclipse.pde.core/platform_path=D\:\\eclipse
org.eclipse.jdt.debug.ui=2.1.1
org.eclipse.jdt.ui/org.eclipse.jface.textfont=1|Courier 
New|10|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Courier 
New;1|Courier|10|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Courier;1|Lucida 
Console|9|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Lucida Console;
org.eclipse.jdt.launching=2.1.1
org.eclipse.debug.ui=2.1.1
org.eclipse.debug.ui/org.eclipse.debug.ui.VariableView+org.eclipse.debug.ui.Show
TypesAction=true
org.eclipse.ui.workbench/WELCOME_DIALOG=false
org.eclipse.pde.core=2.1.0
org.eclipse.jdt.core/org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.
launch
org.eclipse.jdt.debug.ui/org.eclipse.debug.ui.DebugView.org.eclipse.jdt.debug.ui
.show_qualified_names=true
org.eclipse.jdt.core/org.eclipse.jdt.core.classpathContainer.Abhay|org.eclipse.j
dt.launching.JRE_CONTAINER=&lt;?xml version\="1.0" encoding\="UTF-8"?
&gt;\n&lt;classpath&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/rt.jar" rootpath\="" 
sourcepath\="d\:/JBuilder9/jdk1.4/src.zip"/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/sunrsasign.jar" rootpath\="" 
sourcepath\="d\:/JBuilder9/jdk1.4/src.zip"/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/jsse.jar" rootpath\="" 
sourcepath\="d\:/JBuilder9/jdk1.4/src.zip"/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/jce.jar" rootpath\="" 
sourcepath\="d\:/JBuilder9/jdk1.4/src.zip"/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/charsets.jar" rootpath\="" 
sourcepath\="d\:/JBuilder9/jdk1.4/src.zip"/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/ext/dnsns.jar" rootpath\="" 
sourcepath\=""/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/ext/ldapsec.jar" rootpath\="" 
sourcepath\=""/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/ext/localedata.jar" rootpath\="" 
sourcepath\=""/&gt;&lt;classpathentry kind\="lib" 
path\="D\:/JBuilder9/jdk1.4/jre/lib/ext/sunjce_provider.jar" rootpath\="" 
sourcepath\=""/&gt;&lt;/classpath&gt;
org.eclipse.jdt.core/org.eclipse.jdt.core.classpathVariable.ECLIPSE_HOME=D\:/ecl
ipse

*** Update Manager Log:

Configuration=Aug 11, 2003 12:34:07 PM
Is current configuration=true

Date=8/11/03 12:34 PM
Activities=file:D:/eclipse/
Action=Site installed
Status=Success

Date=8/11/03 12:34 PM
Activities=file:D:/eclipse/workspace/.metadata/.config/platform.cfg.metadata/v2L
ocalSite.xml
Action=Reconcile
Status=Success

*** Error Log:
!SESSION Oct 17, 2003 13:12:08.39 ----------------------------------------------
java.version=1.4.1_02
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:D:/eclipse/
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:12:08.39
!MESSAGE Error logged from Debug UI: 
!STACK 0
!SESSION Oct 17, 2003 13:13:09.39 ----------------------------------------------
java.version=1.4.1_02
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:D:/eclipse/
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:13:09.39
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:13:48.929
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:14:49.945
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:15:07.820
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:15:27.945
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:15:36.179
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:15:54.257
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!SESSION Oct 17, 2003 13:16:29.242 ---------------------------------------------
java.version=1.4.1_02
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:D:/eclipse/
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:16:29.242
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:17:14.976
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:17:19.820
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!SESSION Oct 17, 2003 13:17:46.757 ---------------------------------------------
java.version=1.4.1_02
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -install file:D:/eclipse/
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:17:46.773
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:24:53.179
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jface.dialogs.ProgressMonitorDialog.run
(ProgressMonitorDialog.java:357)
	at org.eclipse.debug.ui.DebugUITools.launch(DebugUITools.java:494)
	at org.eclipse.debug.ui.actions.AbstractLaunchToolbarAction.run
(AbstractLaunchToolbarAction.java:69)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:251)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent
(WWinPluginAction.java:207)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
Caused by: org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2332)
	at org.eclipse.swt.SWT.error(SWT.java:2262)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:385)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:246)
	at org.eclipse.swt.widgets.Shell.&lt;init&gt;(Shell.java:324)
	at org.eclipse.jface.window.Window.createShell(Window.java:335)
	at org.eclipse.jface.window.Window.create(Window.java:301)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at org.eclipse.jface.dialogs.MessageDialog.openError
(MessageDialog.java:286)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.valida
tePlugins(WorkbenchLaunchConfigurationDelegate.java:453)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.create
WorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:184)
	at 
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch
(WorkbenchLaunchConfigurationDelegate.java:78)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch
(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch
(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.debug.ui 4 120 Oct 17, 2003 13:33:04.195
!MESSAGE Error logged from Debug UI: 
!STACK 0


It looks like the PDE launcher is attempting to open a dialog in a non-UI 
thread. The launch method is not neccessarily called from the main (UI) thread.
Fixed.
Marking as fixed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45129" />
    <CreationDate amount="2003-10-17 14:49:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="2.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Symbol table needs to support functions as parameters</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="functioncall">
        <location start="58" end="89" />
        <code>void f( int ( *pf ) ( char ) );</code>
      </source_code>
      <source_code type="functioncall">
        <location start="90" end="104" />
        <code>int g( char );</code>
      </source_code>
      <source_code type="functiondef">
        <location start="106" end="130" />
        <code>void foo(){
   f( g );
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="381" end="434" />
        <code>template &lt; class T, class U &gt; void f( T(*)( T, U ) );</code>
      </source_code>
      <source_code type="functioncall">
        <location start="435" end="454" />
        <code>int g( int, char );</code>
      </source_code>
      <source_code type="functiondef">
        <location start="455" end="545" />
        <code>void foo (){
   f( g );    //implicitly instantiates f with T=int, U= char and calls it.
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The symbol table does not currently handle the following:
void f( int ( *pf ) ( char ) );
int g( char );

void foo(){
   f( g );
}

The symbol table needs to compare two functions and determine if they have the 
same return type &amp; parameters.  It also needs to support the function-to-
pointer conversion.

This will need to be supported before the table can handle the following:
template &lt; class T, class U &gt; void f( T(*)( T, U ) );
int g( int, char );
void foo (){
   f( g );    //implicitly instantiates f with T=int, U= char and calls it.
}
fixed in new DOM AST</WithStack>
    <WithOutStack>The symbol table does not currently handle the following:
void f( int ( *pf ) ( char ) );
int g( char );

void foo(){
   f( g );
}

The symbol table needs to compare two functions and determine if they have the 
same return type &amp; parameters.  It also needs to support the function-to-
pointer conversion.

This will need to be supported before the table can handle the following:
template &lt; class T, class U &gt; void f( T(*)( T, U ) );
int g( int, char );
void foo (){
   f( g );    //implicitly instantiates f with T=int, U= char and calls it.
}
fixed in new DOM AST</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45130" />
    <CreationDate amount="2003-10-17 14:57:00 -0400" />
    <DupId amount="21892" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Rename Class should update Launch Configurations [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>When a class that contains a main() is renamed, any launch configuration 
that refers to this class should be updated as well.

  -Frank
This should be doen by debug when the rename participants are public. Moving 
to debugger. Bug depends on bug 37937.


*** This bug has been marked as a duplicate of 21892 ***</WithStack>
    <WithOutStack>When a class that contains a main() is renamed, any launch configuration 
that refers to this class should be updated as well.

  -Frank
This should be doen by debug when the rename participants are public. Moving 
to debugger. Bug depends on bug 37937.


*** This bug has been marked as a duplicate of 21892 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45131" />
    <CreationDate amount="2003-10-17 15:04:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="normal" />
    <Summery>[move member type] produces non-compiling code</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="199" end="329" />
        <code>public class MoveMemberTypeToTopLevelBug {

	private static class A {
		class B {
			void foo(){
				A a = A.this;
			}
		}
	}
	
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>When I apply "Move Member Type to New File" to class B, the resulting
program won't compile. This happens regardless whether the option
"create field for enclosing instance" is selected.

  -Frank


public class MoveMemberTypeToTopLevelBug {

	private static class A {
		class B {
			void foo(){
				A a = A.this;
			}
		}
	}
	
}
Markus, please investigate. Could be because nesting level is two.
Corner case: we only deal with references to the immediate enclosing type.
Not for 3.0.</WithStack>
    <WithOutStack>When I apply "Move Member Type to New File" to class B, the resulting
program won't compile. This happens regardless whether the option
"create field for enclosing instance" is selected.

  -Frank


public class MoveMemberTypeToTopLevelBug {

	private static class A {
		class B {
			void foo(){
				A a = A.this;
			}
		}
	}
	
}
Markus, please investigate. Could be because nesting level is two.
Corner case: we only deal with references to the immediate enclosing type.
Not for 3.0.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45132" />
    <CreationDate amount="2003-10-17 15:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>[2.1.3 Candidate] Checkout as erases existing project</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This is not a bug per se, but rather a usability problem with severe 
consequences.

I had a project called VCode checked out under C:\Eclipse\Workspace, which I 
hadn't synchronized with CVS in a week. I wanted to checkout a separate copy of 
the CVS version of VCode under C:\Temp, but keep the one under 
C:\Eclipse\Workspace. 

I went to the CVS perspective and did Checkout as..., then left VCode as the 
project name, unchecked "Use default workspace location" and entered 
C:\Temp\VCode as the location. 

The system did a checkout into C:\Temp\VCode, but unfortunately, it ERASED THE 
COPY I HAD UNDER C:\eclipse\workspace WITHOUT EVER ASKING ME IF THAT'S WHAT I 
WANTED!!! 

As a result, I lost one week's worth of uncommited changes.

Instead of blindingly assuming that I wanted to delete the old version under 
C:\eclipse\workspace, the system should have asked warned me that there already 
was a checked out module by the name of VCode, and it should have asked me if I 
wanted to delete it.
Strange, I thought they did prompt for deletion.  Moving to platform vcm.
This is definitely a bug. We do prompt but the prompt logic must be thrown off 
by the switch of the target location. Ideally, we should leave the original 
intact but if we can't we should definitely prompt. This is a problem in both 
2.1.1 and 3.0.
It turns out to be difficult to disconnect the existing project so I've added 
the prompt. Fix released to HEAD. I'm marking as fixed but can reopen if there 
is a 2.1.3 build since the fix was easy.</WithStack>
    <WithOutStack>This is not a bug per se, but rather a usability problem with severe 
consequences.

I had a project called VCode checked out under C:\Eclipse\Workspace, which I 
hadn't synchronized with CVS in a week. I wanted to checkout a separate copy of 
the CVS version of VCode under C:\Temp, but keep the one under 
C:\Eclipse\Workspace. 

I went to the CVS perspective and did Checkout as..., then left VCode as the 
project name, unchecked "Use default workspace location" and entered 
C:\Temp\VCode as the location. 

The system did a checkout into C:\Temp\VCode, but unfortunately, it ERASED THE 
COPY I HAD UNDER C:\eclipse\workspace WITHOUT EVER ASKING ME IF THAT'S WHAT I 
WANTED!!! 

As a result, I lost one week's worth of uncommited changes.

Instead of blindingly assuming that I wanted to delete the old version under 
C:\eclipse\workspace, the system should have asked warned me that there already 
was a checked out module by the name of VCode, and it should have asked me if I 
wanted to delete it.
Strange, I thought they did prompt for deletion.  Moving to platform vcm.
This is definitely a bug. We do prompt but the prompt logic must be thrown off 
by the switch of the target location. Ideally, we should leave the original 
intact but if we can't we should definitely prompt. This is a problem in both 
2.1.1 and 3.0.
It turns out to be difficult to disconnect the existing project so I've added 
the prompt. Fix released to HEAD. I'm marking as fixed but can reopen if there 
is a 2.1.3 build since the fix was easy.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45133" />
    <CreationDate amount="2003-10-17 15:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Copy/Paste Not Working</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I was running 2.1.1 platform and upgraded to 1.2 CDT and copy/pase in the edit
menu stopped working when editing source as well as Ctrl+Insert, Shift+Insert,
and Shift+Delete key sequences.  The only way it works is with the mouse ;(.

Very annoying, but otherwise incredible software.  If any of you ever travel to
Atlanta, I'd be happy to buy you guys all beers!  Eclipse is changing how we
develop software.
PR was targeted at 2.0 but was not resolved at release time. Changing target 
to 2.1
This is an old bug report. If you still see this problem in recent CDT releases,
please reopen. However, if this is a 1.2 only bug, I'll have to mark as WONTFIX
since no one is actively developing on that stream anymore.</WithStack>
    <WithOutStack>I was running 2.1.1 platform and upgraded to 1.2 CDT and copy/pase in the edit
menu stopped working when editing source as well as Ctrl+Insert, Shift+Insert,
and Shift+Delete key sequences.  The only way it works is with the mouse ;(.

Very annoying, but otherwise incredible software.  If any of you ever travel to
Atlanta, I'd be happy to buy you guys all beers!  Eclipse is changing how we
develop software.
PR was targeted at 2.0 but was not resolved at release time. Changing target 
to 2.1
This is an old bug report. If you still see this problem in recent CDT releases,
please reopen. However, if this is a 1.2 only bug, I'll have to mark as WONTFIX
since no one is actively developing on that stream anymore.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45134" />
    <CreationDate amount="2003-10-17 15:11:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>URL.setStreamHandlerFactory throws from second invocation of Tomcat from eclipse</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I am using the sysdeo Tomcat plugin with Tomcat 4.1.24 and M4. When Tomcat is 
started for the first time in an eclipse session everything is OK. If Tomcat 
is restarted whithin the same eclipse session, URL.setStreamHandlerFactory 
throws a fit, er.. no actually it is an Error("factory already defined"). If I 
exit eclipse and restart it ther error deos not happen again for the first 
invocation. This behaviour was not present in M3. The eclipse JVM is 1.4.2-b28.

In any case I have great trouble understanding how this could be happenning at 
all as Tomcat must be running in a JVM separate from eclipse. I have checked 
the task manager and in fact it is, in fact according to the configuration I 
have set it is even a different JVM from eclipse's (1.3.1_08).
Are you getting the error in Eclipse (dialog box which display the error
message) or in Tomcat (stack trace in the console view) ?

If you get the error in Eclipse, please attach the relevant part of the log file
(&lt;workspace_dir&gt;/.metadata/.log).

The Sysdeo tomcat plugin is developed by Sysdeo ... if the problem is in their
code, you should fill a bug agains them. You should also check if the plug-in is
supposed to work on 3.0M4.
The error comes up in the debugger, so it is not eclipse. I have done a bit 
more testing. The error is not there if the plugin is set such that the 
debugger is not used. Additonally, I can't reproduce the problem in vitrio, so 
it is indeed the plug in. I'll contact sysdeo. Still, it is strange. As far as 
I can make out all the plugin is doing is starting an external VM under debug 
and connecting to it. Yet from the second invocation it executes the code 
containing the setURLHandlerFactory multiple times.
marking as won't fix, as it looks like a sysdeo problem</WithStack>
    <WithOutStack>I am using the sysdeo Tomcat plugin with Tomcat 4.1.24 and M4. When Tomcat is 
started for the first time in an eclipse session everything is OK. If Tomcat 
is restarted whithin the same eclipse session, URL.setStreamHandlerFactory 
throws a fit, er.. no actually it is an Error("factory already defined"). If I 
exit eclipse and restart it ther error deos not happen again for the first 
invocation. This behaviour was not present in M3. The eclipse JVM is 1.4.2-b28.

In any case I have great trouble understanding how this could be happenning at 
all as Tomcat must be running in a JVM separate from eclipse. I have checked 
the task manager and in fact it is, in fact according to the configuration I 
have set it is even a different JVM from eclipse's (1.3.1_08).
Are you getting the error in Eclipse (dialog box which display the error
message) or in Tomcat (stack trace in the console view) ?

If you get the error in Eclipse, please attach the relevant part of the log file
(&lt;workspace_dir&gt;/.metadata/.log).

The Sysdeo tomcat plugin is developed by Sysdeo ... if the problem is in their
code, you should fill a bug agains them. You should also check if the plug-in is
supposed to work on 3.0M4.
The error comes up in the debugger, so it is not eclipse. I have done a bit 
more testing. The error is not there if the plugin is set such that the 
debugger is not used. Additonally, I can't reproduce the problem in vitrio, so 
it is indeed the plug in. I'll contact sysdeo. Still, it is strange. As far as 
I can make out all the plugin is doing is starting an external VM under debug 
and connecting to it. Yet from the second invocation it executes the code 
containing the setURLHandlerFactory multiple times.
marking as won't fix, as it looks like a sysdeo problem</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45135" />
    <CreationDate amount="2003-10-17 15:14:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Progress bar inaccurate when comparing project versions</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- In the CVS Repositories view, select versions v20031015 and RCP_MERGED_2003-</Line>
          <Line>09-18 of project org.eclipse.ui.workbench.</Line>
          <Line>- Compare them.</Line>
          <Line>- The progress dialog comes up, and goes to 100% very quickly, but it still has</Line>
          <Line>lots of work to do.</Line>
          <Line>I'll be reworking this command. This is a reminder to ensure good progress</Line>
          <Line>feedback when I do.</Line>
          <Line>Progress now looks better.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build I20031015

- In the CVS Repositories view, select versions v20031015 and RCP_MERGED_2003-
09-18 of project org.eclipse.ui.workbench.
- Compare them.
- The progress dialog comes up, and goes to 100% very quickly, but it still has 
lots of work to do.
I'll be reworking this command. This is a reminder to ensure good progress 
feedback when I do.
Progress now looks better.</WithStack>
    <WithOutStack>build I20031015

- In the CVS Repositories view, select versions v20031015 and RCP_MERGED_2003-
09-18 of project org.eclipse.ui.workbench.
- Compare them.
- The progress dialog comes up, and goes to 100% very quickly, but it still has 
lots of work to do.
I'll be reworking this command. This is a reminder to ensure good progress 
feedback when I do.
Progress now looks better.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45136" />
    <CreationDate amount="2003-10-17 15:16:00 -0400" />
    <DupId amount="46026" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[MenuMgmt] File Menu becomes disabled</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>For some reason I haven't figured out, periodically, the File menu is becoming
disbaled.  Everything else appears to work OK, but I have to shut Eclipse down
and restart it to regain control.
David,
Is there anything in your .log file (&lt;workspace&gt;/.metadata/.log)?  Can you 
reproduce this problem?  Do you have any non-standard plug-ins installed?

I cannot reproduce this on demand, but I have run into it several times.  I'm
paying closer attention to figure out how.

I failed to look at the log when the problem was occurring, and doubt I could
find the right place. I will next time.

As for non-standard plugins, yes, I do have a couple, but they've all been
working fine in 2.1 and I'm not aware of anything they should be doing with the
File menu.
I just ran into it again.  I was working on duplciation of another bug, when the
JVM crapped out.  I restarted eclipse, and by the time things settled down, File
was disabled.  There were no log entries of relevance.  

Subsequent restart corrected the problem.
Which vm are you using?

Chris, Any ideas?
java version "1.4.1_05"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.1_05-b01)
Java HotSpot(TM) Client VM (build 1.4.1_05-b01, mixed mode)

what eclipse build are you using?

M4, though I think I've seen it before M4.
Log files.  We're going to need more information.  Log files, what were you
doing when it happened, stuff like that.  For now, I'm going to mark this bug as
a duplicate as Bug 46026.  It sounds somewhat similar.

*** This bug has been marked as a duplicate of 46026 ***</WithStack>
    <WithOutStack>For some reason I haven't figured out, periodically, the File menu is becoming
disbaled.  Everything else appears to work OK, but I have to shut Eclipse down
and restart it to regain control.
David,
Is there anything in your .log file (&lt;workspace&gt;/.metadata/.log)?  Can you 
reproduce this problem?  Do you have any non-standard plug-ins installed?

I cannot reproduce this on demand, but I have run into it several times.  I'm
paying closer attention to figure out how.

I failed to look at the log when the problem was occurring, and doubt I could
find the right place. I will next time.

As for non-standard plugins, yes, I do have a couple, but they've all been
working fine in 2.1 and I'm not aware of anything they should be doing with the
File menu.
I just ran into it again.  I was working on duplciation of another bug, when the
JVM crapped out.  I restarted eclipse, and by the time things settled down, File
was disabled.  There were no log entries of relevance.  

Subsequent restart corrected the problem.
Which vm are you using?

Chris, Any ideas?
java version "1.4.1_05"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.1_05-b01)
Java HotSpot(TM) Client VM (build 1.4.1_05-b01, mixed mode)

what eclipse build are you using?

M4, though I think I've seen it before M4.
Log files.  We're going to need more information.  Log files, what were you
doing when it happened, stuff like that.  For now, I'm going to mark this bug as
a duplicate as Bug 46026.  It sounds somewhat similar.

*** This bug has been marked as a duplicate of 46026 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45137" />
    <CreationDate amount="2003-10-17 15:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eclipse Slow on Build Start-Up</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1) Managed build needs dependencies in order to build</Line>
          <Line>2) Dependencies are obtained from the indexer</Line>
          <Line>3) In order to get a complete list of dependencies the project must be</Line>
          <Line>indexed - so if the project is large, and the parser has problems going</Line>
          <Line>through the files due to lack of include paths/symbols, then the indexing will</Line>
          <Line>take a while - but it should get through it</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When starting up a non-managed make project with the managed make add-on
installed and doing a Ctrl+B (Build) it will pop up a "Processing" dialog which
can sit there for a very long time, sometimes to the point where you have to
kill the process.

I re-installed Eclipse and just installed Standard make and so far have not
seent his issue.
Dave/Sean you've seen this before ?

Comments ?

I was not able to reproduce this.
Alain, I can't see how this has anything to do with the managed build system. I
wouldn't even be involved in the build if the user has just created an unmanaged
project, and since I don't do anything unless asked, I can't possibly see how
the mere presence of my plugins would matter. 

I'll take a look and see if I can duplicate this, though. I wonder how big this
person's project is. We saw something like this with large projects getting
indexed. It didn't matter which builder was being used, it just seemed to be
related because of timing.
&gt; I'll take a look and see if I can duplicate this, though. I wonder how big this
&gt; person's project is. We saw something like this with large projects getting
&gt; indexed. It didn't matter which builder was being used, it just seemed to be
&gt; related because of timing.

Yes, Indexer !!!
Yes, this is where, I've seen this before.
For some reason the dependency checking was trigger and
the build seems to take forever.

Thanks Sean.

Adding Bogdan in the CC:

So Bogdan what do you think ?
Any feedbacks ?
Yup - here's the scoop: 

1) Managed build needs dependencies in order to build
2) Dependencies are obtained from the indexer
3) In order to get a complete list of dependencies the project must be 
indexed - so if the project is large, and the parser has problems going 
through the files due to lack of include paths/symbols, then the indexing will 
take a while - but it should get through it

This is obviously not optimal and I'm working on a proposal to address this...
&gt; This is obviously not optimal and I'm working on a proposal to address 

thanks bogdan ... 
I will reassign so you can handle the followup.
We no longer rely on the indexer dependency tree to generate managed 
makefiles, so this can be closed...

- BG</WithStack>
    <WithOutStack>When starting up a non-managed make project with the managed make add-on
installed and doing a Ctrl+B (Build) it will pop up a "Processing" dialog which
can sit there for a very long time, sometimes to the point where you have to
kill the process.

I re-installed Eclipse and just installed Standard make and so far have not
seent his issue.
Dave/Sean you've seen this before ?

Comments ?

I was not able to reproduce this.
Alain, I can't see how this has anything to do with the managed build system. I
wouldn't even be involved in the build if the user has just created an unmanaged
project, and since I don't do anything unless asked, I can't possibly see how
the mere presence of my plugins would matter. 

I'll take a look and see if I can duplicate this, though. I wonder how big this
person's project is. We saw something like this with large projects getting
indexed. It didn't matter which builder was being used, it just seemed to be
related because of timing.
&gt; I'll take a look and see if I can duplicate this, though. I wonder how big this
&gt; person's project is. We saw something like this with large projects getting
&gt; indexed. It didn't matter which builder was being used, it just seemed to be
&gt; related because of timing.

Yes, Indexer !!!
Yes, this is where, I've seen this before.
For some reason the dependency checking was trigger and
the build seems to take forever.

Thanks Sean.

Adding Bogdan in the CC:

So Bogdan what do you think ?
Any feedbacks ?
Yup - here's the scoop: 

1) Managed build needs dependencies in order to build
2) Dependencies are obtained from the indexer
3) In order to get a complete list of dependencies the project must be 
indexed - so if the project is large, and the parser has problems going 
through the files due to lack of include paths/symbols, then the indexing will 
take a while - but it should get through it

This is obviously not optimal and I'm working on a proposal to address this...
&gt; This is obviously not optimal and I'm working on a proposal to address 

thanks bogdan ... 
I will reassign so you can handle the followup.
We no longer rely on the indexer dependency tree to generate managed 
makefiles, so this can be closed...

- BG</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45138" />
    <CreationDate amount="2003-10-17 15:25:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>[2.1.3 Candidate] Eclipse doesn't work with cvs server version 1.11.9</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341034187">
        <Exception>java.lang.NoClassDefFoundError</Exception>
        <Reason>:
org/eclipse/team/internal/ccvs/core/CVSProviderPlugin</Reason>
        <Frames>
          <Frame depth="0">java.lang.Class.getDeclaredConstructors0(Native Method)</Frame>
          <Frame depth="1">java.lang.Class.privateGetDeclaredConstructors(Unknown Source)</Frame>
          <Frame depth="2">java.lang.Class.getConstructor0(Unknown Source)</Frame>
          <Frame depth="3">java.lang.Class.getConstructor(Unknown Source)</Frame>
          <Frame depth="4">org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation(PluginDescriptor.java:709)</Frame>
          <Frame depth="5">org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation(PluginDescriptor.java:188)</Frame>
          <Frame depth="6">org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin(PluginClassLoader.java:112)</Frame>
          <Frame depth="7">org.eclipse.core.internal.plugins.PluginClassLoader.internalFindClassParentsSelf(PluginClassLoader.java:185)</Frame>
          <Frame depth="8">org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassParentsSelf(DelegatingURLClassLoader.java:490)</Frame>
          <Frame depth="9">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:882)</Frame>
          <Frame depth="10">org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass(DelegatingURLClassLoader.java:862)</Frame>
          <Frame depth="11">java.lang.ClassLoader.loadClass(Unknown Source)</Frame>
          <Frame depth="12">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:130)</Frame>
          <Frame depth="13">org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension(PluginDescriptor.java:167)</Frame>
          <Frame depth="14">org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:103)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:158)</Frame>
          <Frame depth="16">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:155)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.registry.ViewDescriptor.createView(ViewDescriptor.java:51)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.ViewFactory$2.run(ViewFactory.java:115)</Frame>
          <Frame depth="20">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1006)</Frame>
          <Frame depth="21">org.eclipse.core.runtime.Platform.run(Platform.java:413)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.ViewFactory.busyRestoreView(ViewFactory.java:98)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.ViewFactory$1.run(ViewFactory.java:82)</Frame>
          <Frame depth="24">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.ViewFactory.restoreView(ViewFactory.java:78)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.Perspective.showView(Perspective.java:1465)</Frame>
          <Frame depth="27">org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:655)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.WorkbenchPage.access$9(WorkbenchPage.java:634)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:2777)</Frame>
          <Frame depth="30">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:2774)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:2764)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.ShowViewAction.run(ShowViewAction.java:46)</Frame>
          <Frame depth="34">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="35">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="36">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="37">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="38">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="39">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)</Frame>
          <Frame depth="43">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="45">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="46">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="47">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="48">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="49">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="50">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="51">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="53">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>It looks like Eclipse won't work with cvs server version 1.11.9. When opening
HEAD, instead of returning "E cvs server: New directory `CVSROOT' -- ignored",
version 1.11.9 now returns "E cvs update: New directory `CVSROOT' -- ignored".
This seems to cause Eclipse problems. Any way of working around this?

Ewan
Yes, unfortunately most of the interesting Eclipse functionality relies on the 
format of the messages and the change in format made in 1.11.7 break the 
parsing in 2.1.x. In 3.0 this is not a problem since the parsing of message 
strings was improved to handle this. I will attach a jar that should fix the 
problem (i.e. I will backport the 3.0 fix). I also intend to add an FAQ entry 
and make the jar available there.
I was wrong. This is not fixed in 3.0 but is an easy fix. Will also look into 
getting fix into 2.1.2.
*** Bug 45208 has been marked as a duplicate of this bug. ***
Created attachment 6491
cvs.jar file

This fix will most likely not make it into 2.1.2. I have attached a jar that
can be used with 2.1.1 and 2.1.2. Place it in the
eclipse/plugins/org.eclipse.team.cvs.core_2.1.1 directory inside your eclipse
install. You only need this if you are using CVS server versions 1.11.7 and
beyond. The fix is backward compatible but has not been extensively tested. Use
at your own risk.
Interum fix has been released to 3.0. We will investigate providing a full fix 
that uses regular expresions to match and extract required info in order to 
protect against similar changes in the future.
I still get one test failure on 3.0 
(CVSWorkspaceSubscriberTests#testOverrideOutgoingChanges). The fix for this 
would need to be backported to the 2.1 maintenance stream.
Ignore the last comment. The error was caused by something else.
The 3.0 stream now works with the newer servers. If there is a 2.1.3 build, 
the fix should be included. Also, work could be done in 3.0 to support above 
mentioned use of regular expression.
It appears that CVS server verson 1.12.1 did not have the text message change 
in it but 1.12.2 does so the same problem exists for 1.12.2 as for 1.11.7.
the patched jar is not working w/ eclipse v2.1.1 and v.2.1.2 - any ideas?

java.lang.NoClassDefFoundError:
org/eclipse/team/internal/ccvs/core/CVSProviderPlugin
at java.lang.Class.getDeclaredConstructors0(Native Method)
at java.lang.Class.privateGetDeclaredConstructors(Unknown Source)
at java.lang.Class.getConstructor0(Unknown Source)
at java.lang.Class.getConstructor(Unknown Source)
at
org.eclipse.core.internal.plugins.PluginDescriptor.internalDoPluginActivation
(PluginDescriptor.java:709)
at
org.eclipse.core.internal.plugins.PluginDescriptor.doPluginActivation
(PluginDescriptor.java:188)
at
org.eclipse.core.internal.plugins.PluginClassLoader.activatePlugin
(PluginClassLoader.java:112)
at
org.eclipse.core.internal.plugins.PluginClassLoader.internalFindClassParentsSel
f(PluginClassLoader.java:185)
at
org.eclipse.core.internal.boot.DelegatingURLClassLoader.findClassParentsSelf
(DelegatingURLClassLoader.java:490)
at
org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass
(DelegatingURLClassLoader.java:882)
at
org.eclipse.core.internal.boot.DelegatingURLClassLoader.loadClass
(DelegatingURLClassLoader.java:862)
at java.lang.ClassLoader.loadClass(Unknown Source)
at
org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension
(PluginDescriptor.java:130)
at
org.eclipse.core.internal.plugins.PluginDescriptor.createExecutableExtension
(PluginDescriptor.java:167)
at
org.eclipse.core.internal.plugins.ConfigurationElement.createExecutableExtensio
n(ConfigurationElement.java:103)
at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:158)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at
org.eclipse.ui.internal.WorkbenchPlugin.createExtension
(WorkbenchPlugin.java:155)
at
org.eclipse.ui.internal.registry.ViewDescriptor.createView
(ViewDescriptor.java:51)
at org.eclipse.ui.internal.ViewFactory$2.run(ViewFactory.java:115)
at
org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1006)
at org.eclipse.core.runtime.Platform.run(Platform.java:413)
at org.eclipse.ui.internal.ViewFactory.busyRestoreView(ViewFactory.java:98)
at org.eclipse.ui.internal.ViewFactory$1.run(ViewFactory.java:82)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at org.eclipse.ui.internal.ViewFactory.restoreView(ViewFactory.java:78)
at org.eclipse.ui.internal.Perspective.showView(Perspective.java:1465)
at org.eclipse.ui.internal.WorkbenchPage.busyShowView(WorkbenchPage.java:655)
at org.eclipse.ui.internal.WorkbenchPage.access$9(WorkbenchPage.java:634)
at org.eclipse.ui.internal.WorkbenchPage$13.run(WorkbenchPage.java:2777)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:2774)
at org.eclipse.ui.internal.WorkbenchPage.showView(WorkbenchPage.java:2764)
at org.eclipse.ui.internal.ShowViewAction.run(ShowViewAction.java:46)
at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
at
org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
at
org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
at
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1838)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1545)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
at
org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
at org.eclipse.core.launcher.Main.run(Main.java:747)
at org.eclipse.core.launcher.Main.main(Main.java:583)

Others have reported a similar problem that goes away if you start from 
scratch (i.e. install Eclipse, place the patched jar and then launch Eclipse 
for the first time). The problem may be related to how the Eclipse Update 
component stores configuration information. You could also try deleting 
the .config folder in the .metadata directory of yur workspace.
hrm - removing the .config directory and then the whole workspace directory 
doens't work. i'm going downloading again to start from complete scratch to 
see if that helps fix the problem.
You might want to check that the jar file size is correct - 422891 bytes on my
linux system. I had a different file size when I initially downloaded it. It now
works fine.
good catch! i tried d/ling in IE and got an incorrect file size.

firebird retrieved the correct one tho - odd. thx everyone for your 
help!
*** Bug 47446 has been marked as a duplicate of this bug. ***
*** Bug 47944 has been marked as a duplicate of this bug. ***
Fix has been submitted to the 2.1.3 maintenance stream
*** Bug 48924 has been marked as a duplicate of this bug. ***
FYI I had problems with the cvs.jar patch file getting the error:

java.lang.NoClassDefFoundError:
org/eclipse/team/internal/ccvs/core/CVSProviderPlugin

after applying it In Eclipse 2.1.2.

I tracked this down to the fact I was using Java 1.3.1 runtime.
I was able to resolve the issue by simply unjar'ing cvs.jar with JDK 1.4 and 
jar'ing with 1.3.1 to enable me to continue with my java 1.3.1 runtime (which I 
need for other reasons).

Thanks Martin


Discovered this problem after trying to connect to SourceForege via extssh 
recently.  Couldn't get the jar mentioned above to work, but the Eclipse 2.1.3 
maintenance build did the trick.

Could you generate fix for the Eclipse 2.0.2. It is very critical for our 
Eclipse based application.

Thank you,
Andrey Elkin
Sorry, that would be more work than I have time for. The code is in the 
repository if this is a "must have" for you and I would be happy to answer any 
questions you have about how to proceed.
I tried downloading the jar file multiple times from IE but it is not working. 
and I dont have any other unix machine from where I can download.
I also tried unjaring with 1.4 and jaring with 1.3 option the that is also not 
working. 
I am getting the different file size than specified here

Please help
I get this above error for eclipse on windows 2000 and CVS on Sun Solaris.</WithStack>
    <WithOutStack>It looks like Eclipse won't work with cvs server version 1.11.9. When opening
HEAD, instead of returning "E cvs server: New directory `CVSROOT' -- ignored",
version 1.11.9 now returns "E cvs update: New directory `CVSROOT' -- ignored".
This seems to cause Eclipse problems. Any way of working around this?

Ewan
Yes, unfortunately most of the interesting Eclipse functionality relies on the 
format of the messages and the change in format made in 1.11.7 break the 
parsing in 2.1.x. In 3.0 this is not a problem since the parsing of message 
strings was improved to handle this. I will attach a jar that should fix the 
problem (i.e. I will backport the 3.0 fix). I also intend to add an FAQ entry 
and make the jar available there.
I was wrong. This is not fixed in 3.0 but is an easy fix. Will also look into 
getting fix into 2.1.2.
*** Bug 45208 has been marked as a duplicate of this bug. ***
Created attachment 6491
cvs.jar file

This fix will most likely not make it into 2.1.2. I have attached a jar that
can be used with 2.1.1 and 2.1.2. Place it in the
eclipse/plugins/org.eclipse.team.cvs.core_2.1.1 directory inside your eclipse
install. You only need this if you are using CVS server versions 1.11.7 and
beyond. The fix is backward compatible but has not been extensively tested. Use
at your own risk.
Interum fix has been released to 3.0. We will investigate providing a full fix 
that uses regular expresions to match and extract required info in order to 
protect against similar changes in the future.
I still get one test failure on 3.0 
(CVSWorkspaceSubscriberTests#testOverrideOutgoingChanges). The fix for this 
would need to be backported to the 2.1 maintenance stream.
Ignore the last comment. The error was caused by something else.
The 3.0 stream now works with the newer servers. If there is a 2.1.3 build, 
the fix should be included. Also, work could be done in 3.0 to support above 
mentioned use of regular expression.
It appears that CVS server verson 1.12.1 did not have the text message change 
in it but 1.12.2 does so the same problem exists for 1.12.2 as for 1.11.7.
the patched jar is not working w/ eclipse v2.1.1 and v.2.1.2 - any ideas?


Others have reported a similar problem that goes away if you start from 
scratch (i.e. install Eclipse, place the patched jar and then launch Eclipse 
for the first time). The problem may be related to how the Eclipse Update 
component stores configuration information. You could also try deleting 
the .config folder in the .metadata directory of yur workspace.
hrm - removing the .config directory and then the whole workspace directory 
doens't work. i'm going downloading again to start from complete scratch to 
see if that helps fix the problem.
You might want to check that the jar file size is correct - 422891 bytes on my
linux system. I had a different file size when I initially downloaded it. It now
works fine.
good catch! i tried d/ling in IE and got an incorrect file size.

firebird retrieved the correct one tho - odd. thx everyone for your 
help!
*** Bug 47446 has been marked as a duplicate of this bug. ***
*** Bug 47944 has been marked as a duplicate of this bug. ***
Fix has been submitted to the 2.1.3 maintenance stream
*** Bug 48924 has been marked as a duplicate of this bug. ***
FYI I had problems with the cvs.jar patch file getting the error:

java.lang.NoClassDefFoundError:
org/eclipse/team/internal/ccvs/core/CVSProviderPlugin

after applying it In Eclipse 2.1.2.

I tracked this down to the fact I was using Java 1.3.1 runtime.
I was able to resolve the issue by simply unjar'ing cvs.jar with JDK 1.4 and 
jar'ing with 1.3.1 to enable me to continue with my java 1.3.1 runtime (which I 
need for other reasons).

Thanks Martin


Discovered this problem after trying to connect to SourceForege via extssh 
recently.  Couldn't get the jar mentioned above to work, but the Eclipse 2.1.3 
maintenance build did the trick.

Could you generate fix for the Eclipse 2.0.2. It is very critical for our 
Eclipse based application.

Thank you,
Andrey Elkin
Sorry, that would be more work than I have time for. The code is in the 
repository if this is a "must have" for you and I would be happy to answer any 
questions you have about how to proceed.
I tried downloading the jar file multiple times from IE but it is not working. 
and I dont have any other unix machine from where I can download.
I also tried unjaring with 1.4 and jaring with 1.3 option the that is also not 
working. 
I am getting the different file size than specified here

Please help
I get this above error for eclipse on windows 2000 and CVS on Sun Solaris.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45139" />
    <CreationDate amount="2003-10-17 15:34:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Too many OperationCanceledException in the console</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437341034190">
        <Exception>org.eclipse.core.runtime.OperationCanceledException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.events.BuildManager.checkCanceled(BuildManager.java:314)</Frame>
          <Frame depth="1">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:157)</Frame>
          <Frame depth="2">org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:182)</Frame>
          <Frame depth="3">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:834)</Frame>
          <Frame depth="4">org.eclipse.core.runtime.Platform.run(Platform.java:467)</Frame>
          <Frame depth="5">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:185)</Frame>
          <Frame depth="6">org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:219)</Frame>
          <Frame depth="7">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:247)</Frame>
          <Frame depth="8">org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:76)</Frame>
          <Frame depth="9">org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:109)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341034190">
        <Exception>org.eclipse.core.runtime.OperationCanceledException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.events.BuildManager.checkCanceled(BuildManager.java:314)</Frame>
          <Frame depth="1">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:157)</Frame>
          <Frame depth="2">org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:182)</Frame>
          <Frame depth="3">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:834)</Frame>
          <Frame depth="4">org.eclipse.core.runtime.Platform.run(Platform.java:467)</Frame>
          <Frame depth="5">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:185)</Frame>
          <Frame depth="6">org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:219)</Frame>
          <Frame depth="7">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:247)</Frame>
          <Frame depth="8">org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:76)</Frame>
          <Frame depth="9">org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:109)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341034190">
        <Exception>org.eclipse.core.runtime.OperationCanceledException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.events.BuildManager.checkCanceled(BuildManager.java:314)</Frame>
          <Frame depth="1">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:157)</Frame>
          <Frame depth="2">org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:182)</Frame>
          <Frame depth="3">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:834)</Frame>
          <Frame depth="4">org.eclipse.core.runtime.Platform.run(Platform.java:467)</Frame>
          <Frame depth="5">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:185)</Frame>
          <Frame depth="6">org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:219)</Frame>
          <Frame depth="7">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:247)</Frame>
          <Frame depth="8">org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:76)</Frame>
          <Frame depth="9">org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:109)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="2196" end="2254" />
        <code>They added a catch (Throwable t) { t.printStackTrace(); }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Using 1015, I get lots of OperationCanceledException in the console. I think if
this exception is used to exit the for loop, it should be handled. The finally
block simply rethrow it. The user should not be aware of this operation
cancelation management.

org.eclipse.core.runtime.OperationCanceledException
        at
org.eclipse.core.internal.events.BuildManager.checkCanceled(BuildManager.java:314)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:157)
        at
org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:182)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:834)
        at org.eclipse.core.runtime.Platform.run(Platform.java:467)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:185)
        at
org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:219)
        at
org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:247)
        at
org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:76)
        at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:109)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
org.eclipse.core.runtime.OperationCanceledException
        at
org.eclipse.core.internal.events.BuildManager.checkCanceled(BuildManager.java:314)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:157)
        at
org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:182)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:834)
        at org.eclipse.core.runtime.Platform.run(Platform.java:467)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:185)
        at
org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:219)
        at
org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:247)
        at
org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:76)
        at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:109)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
org.eclipse.core.runtime.OperationCanceledException
        at
org.eclipse.core.internal.events.BuildManager.checkCanceled(BuildManager.java:314)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:157)
        at
org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:182)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:834)
        at org.eclipse.core.runtime.Platform.run(Platform.java:467)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:185)
        at
org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:219)
        at
org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:247)
        at
org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:76)
        at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:109)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
Are you still seeing this in I20031023? I can't reproduce, and looking at the
code I can't figure out how you could be seeing this in the console.  The
exception is eventually caught in AutoBuildJob.run, and there is no code in
between that logs or prints the exception to stdout.
Yes, I still get it sometimes.
I just observed this on Kevin's machine using I20031203.  He tried to initiate a
full rebuild while a background build was running.  Loads of cancelation
exceptions appeared in the log, and it didn't look like the autobuild was
cancelling.  After a few seconds on this, the autobuild cancelled and the full
rebuild started.
I just got this on the 20031202 build. It happened to me after I caused an 
autobuild while no other build should have been running. All I did was open an 
editor, make one change (the first edit in this workspace), and save.
A bug was introduced by the equinox merge that caused this to happen every time.
 They added a catch (Throwable t) { t.printStackTrace(); } inside the
ISafeRunnable exception handler.  This means that exception handlers that were
rethrowing an exception were broken because platform swallowed the exception. 
This was causing the OperationCanceledException to be lost (and thus build
cancelation was broken).  I have released a fix, and entered bug 48102 against
Equinox to reconsider their changes.

While this explains the recent occurrences, it does not explain Olivier's
original occurrence which happened before the Equinox merge.  I'm going to leave
this open to see if it continues to happen after my fix has been released.
Yes, it could be the same issue. I was one of the earlier users of Equinox. I 
don't remember if at that time I was using Equinox. It is highly possible.
Aha!! And Jeff McAffer is the only other person who saw it before this week  I'm
going to mark this fixed, another mystery solved.  Please reopen if it comes
back in a build &gt; 20031204.
*** Bug 48283 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Using 1015, I get lots of OperationCanceledException in the console. I think if
this exception is used to exit the for loop, it should be handled. The finally
block simply rethrow it. The user should not be aware of this operation
cancelation management.

org.eclipse.core.runtime.OperationCanceledException
        at
org.eclipse.core.internal.events.BuildManager.checkCanceled(BuildManager.java:314)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:157)
        at
org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:182)
        at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:834)
        at org.eclipse.core.runtime.Platform.run(Platform.java:467)
        at
org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:185)
        at
org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:219)
        at
org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:247)
        at
org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:76)
        at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:109)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)

Are you still seeing this in I20031023? I can't reproduce, and looking at the
code I can't figure out how you could be seeing this in the console.  The
exception is eventually caught in AutoBuildJob.run, and there is no code in
between that logs or prints the exception to stdout.
Yes, I still get it sometimes.
I just observed this on Kevin's machine using I20031203.  He tried to initiate a
full rebuild while a background build was running.  Loads of cancelation
exceptions appeared in the log, and it didn't look like the autobuild was
cancelling.  After a few seconds on this, the autobuild cancelled and the full
rebuild started.
I just got this on the 20031202 build. It happened to me after I caused an 
autobuild while no other build should have been running. All I did was open an 
editor, make one change (the first edit in this workspace), and save.
A bug was introduced by the equinox merge that caused this to happen every time.
 They added a catch (Throwable t) { t.printStackTrace(); } inside the
ISafeRunnable exception handler.  This means that exception handlers that were
rethrowing an exception were broken because platform swallowed the exception. 
This was causing the OperationCanceledException to be lost (and thus build
cancelation was broken).  I have released a fix, and entered bug 48102 against
Equinox to reconsider their changes.

While this explains the recent occurrences, it does not explain Olivier's
original occurrence which happened before the Equinox merge.  I'm going to leave
this open to see if it continues to happen after my fix has been released.
Yes, it could be the same issue. I was one of the earlier users of Equinox. I 
don't remember if at that time I was using Equinox. It is highly possible.
Aha!! And Jeff McAffer is the only other person who saw it before this week  I'm
going to mark this fixed, another mystery solved.  Please reopen if it comes
back in a build &gt; 20031204.
*** Bug 48283 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45140" />
    <CreationDate amount="2003-10-17 15:44:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>refactor IScanner to allow use of Readers of IResource</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="14">
        <Lines>
          <Line>- content assist inclusions need to use the working copy rather than the saved</Line>
          <Line>files</Line>
          <Line>- edit header file (add a declaration) and do not save it</Line>
          <Line>- code complete in compilation unit that includes it --&gt; should see the new</Line>
          <Line>declaration</Line>
          <Line>- along with the work done on resource readers, we need to make sure the reader</Line>
          <Line>locater can find the working copy if it is specified</Line>
          <Line>- features like Search will want to work on saved files, so we need to make</Line>
          <Line>this an option to ParserFactory.createScanner()</Line>
          <Line>- create a subclass of Enum named 'ParserLanguageStrategy'</Line>
          <Line>- ALL_WORKING_COPY // use working copies for main comp unit and inclusions</Line>
          <Line>- PRIMARY_WORKING_COPY // use working for main comp unit, saved for include</Line>
          <Line>files</Line>
          <Line>- ALL_SAVED_FILES  // use only saved files</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Since the Scanner opens files up as File, the Eclipse core knows nothing about 
the access to them.  Thus if the dependency tree/indexer is running and a 
particular header file is open, and another component tries to move or delete 
it, they will get a CoreException.
However, we cannot use IResource inside the Scanner implementation, as the 
parser jarfile needs to build without Eclipse dependencies.  
Moved to CDT 2.0. This refactoring is substantial, and it will be difficult to 
apply to both streams since HEAD contains a parser that is Eclipse independent 
(cdtparser.jar) and 1_2 has a parser that uses other org.eclipse.core 
classes.  
updated summary. 
Refer to section in design document. 
This defect represents Feature-ettes "remove resource lock errors"
related to this (discovered this morning while trying to create a DEMO for the 
BoF tonight @ EclipseCon)
- content assist inclusions need to use the working copy rather than the saved 
files
   - edit header file (add a declaration) and do not save it 
   - code complete in compilation unit that includes it --&gt; should see the new 
declaration
- along with the work done on resource readers, we need to make sure the reader 
locater can find the working copy if it is specified
- features like Search will want to work on saved files, so we need to make 
this an option to ParserFactory.createScanner()
- create a subclass of Enum named 'ParserLanguageStrategy'
  - ALL_WORKING_COPY // use working copies for main comp unit and inclusions
  - PRIMARY_WORKING_COPY // use working for main comp unit, saved for include 
files
  - ALL_SAVED_FILES  // use only saved files

The scanner will need to be updated to deal with these different strategies.  
feel free to rename the enum or enumerators, i'm just making stuff up at this 
point ... 
I'll take that back!
fixed in HEAD.</WithStack>
    <WithOutStack>Since the Scanner opens files up as File, the Eclipse core knows nothing about 
the access to them.  Thus if the dependency tree/indexer is running and a 
particular header file is open, and another component tries to move or delete 
it, they will get a CoreException.
However, we cannot use IResource inside the Scanner implementation, as the 
parser jarfile needs to build without Eclipse dependencies.  
Moved to CDT 2.0. This refactoring is substantial, and it will be difficult to 
apply to both streams since HEAD contains a parser that is Eclipse independent 
(cdtparser.jar) and 1_2 has a parser that uses other org.eclipse.core 
classes.  
updated summary. 
Refer to section in design document. 
This defect represents Feature-ettes "remove resource lock errors"
related to this (discovered this morning while trying to create a DEMO for the 
BoF tonight @ EclipseCon)
- content assist inclusions need to use the working copy rather than the saved 
files
   - edit header file (add a declaration) and do not save it 
   - code complete in compilation unit that includes it --&gt; should see the new 
declaration
- along with the work done on resource readers, we need to make sure the reader 
locater can find the working copy if it is specified
- features like Search will want to work on saved files, so we need to make 
this an option to ParserFactory.createScanner()
- create a subclass of Enum named 'ParserLanguageStrategy'
  - ALL_WORKING_COPY // use working copies for main comp unit and inclusions
  - PRIMARY_WORKING_COPY // use working for main comp unit, saved for include 
files
  - ALL_SAVED_FILES  // use only saved files

The scanner will need to be updated to deal with these different strategies.  
feel free to rename the enum or enumerators, i'm just making stuff up at this 
point ... 
I'll take that back!
fixed in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45141" />
    <CreationDate amount="2003-10-17 16:01:00 -0400" />
    <DupId amount="44642" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Broken new code formatter</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="7">
      <source_code type="package">
        <location start="140" end="153" />
        <code>package test;</code>
      </source_code>
      <source_code type="import">
        <location start="154" end="182" />
        <code>import java.util.Hashtable;</code>
      </source_code>
      <source_code type="class">
        <location start="184" end="616" />
        <code>public class Test {

	public Test() {
		Hashtable fields;

		// TODO some todo text
		// direct field names

		//		==== Dictionaries
		//CountryDictInfo
		fields = new Hashtable();

		fields.put("name", "Name");
		fields.put("numericCode", "NumericCode");

		getSqls()
                   .put("finmon.domain.dictionary", new SomeFieldSQLDescriptor(
			this, "SELECT * FROM CountryDict WHERE ",
			" ORDER BY Name", fields))		;

	}
}</code>
      </source_code>
      <source_code type="package">
        <location start="925" end="938" />
        <code>package test;</code>
      </source_code>
      <source_code type="import">
        <location start="939" end="966" />
        <code>import java.util.Hashtable;</code>
      </source_code>
      <source_code type="class">
        <location start="967" end="1490" />
        <code>public class Test {
    public Test() {
        Hashtable fields;
        // TODO some todo text
        // direct field names
        //		==== Dictionaries
        //CountryDictInfo
        fields = new Hashtable();
        fields.put("name", "Name");
        fields.put("numericCode", "NumericCode");
        getSqls()
                .put("finmon.domain.dictionary", new SomeFieldSQLDescriptor(
                        this, "SELECT * FROM CountryDict WHERE ",
                        " ORDER BY Name", fields));
    }
}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1529" end="1578" />
        <code>fields.put("numericCode", "NumericCode");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Very strange separation of the long line and many spaces before semicolon (";")


Try to format this code

=====start of the Test.java code
package test;

import java.util.Hashtable;

public class Test {

	public Test() {
		Hashtable fields;

		// TODO some todo text
		// direct field names

		//		==== Dictionaries
		//CountryDictInfo
		fields = new Hashtable();

		fields.put("name", "Name");
		fields.put("numericCode", "NumericCode");

		getSqls()
                   .put("finmon.domain.dictionary", new SomeFieldSQLDescriptor(
			this, "SELECT * FROM CountryDict WHERE ",
			" ORDER BY Name", fields))		;

	}
}
=======end of code


Pay attention on spliting the line and where putting the last semicolon

getSqls().put("finmon.domain.dictionary", 
              new SomeFieldSQLDescriptor(this, 
                         "SELECT * FROM CountryDict WHERE ",
			 " ORDER BY Name", fields));
With latest code, it returns:
package test;
import java.util.Hashtable;
public class Test {
    public Test() {
        Hashtable fields;
        // TODO some todo text
        // direct field names
        //		==== Dictionaries
        //CountryDictInfo
        fields = new Hashtable();
        fields.put("name", "Name");
        fields.put("numericCode", "NumericCode");
        getSqls()
                .put("finmon.domain.dictionary", new SomeFieldSQLDescriptor(
                        this, "SELECT * FROM CountryDict WHERE ",
                        " ORDER BY Name", fields));
    }
}

Does this look acceptable?
Not yet.

        fields.put("numericCode", "NumericCode");
        getSqls()
                .put("finmon.domain.dictionary", new SomeFieldSQLDescriptor(
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        this, "SELECT * FROM CountryDict WHERE ",
                        " ORDER BY Name", fields));


Why you split getSqls() and .put. You win just 1 char but not the clearness.

I think old formatter do it fine and readable:

        getSqls().put(
            "finmon.domain.dictionary", 
            new SomeFieldSQLDescriptor(
                this, 
                "SELECT * FROM  CountryDict WHERE ",
                " ORDER BY Name", 
                fields));

If hole arguments line must be droped then each argument must be appeared on new
line with ident (4 spaces)

P.S. I think formatter must use Sun standard Code Conventions for the Java.
http://java.sun.com/docs/codeconv/html/CodeConvTOC.doc.html

It's very pragmatic and make code very readable. And its looks like Standard!
This is a different problem. The remaining problem is a duplicate of bug 44642.
Close as duplicate of bug 44642, because the first problem is already fixed.

*** This bug has been marked as a duplicate of 44642 ***</WithStack>
    <WithOutStack>Very strange separation of the long line and many spaces before semicolon (";")


Try to format this code

=====start of the Test.java code
package test;

import java.util.Hashtable;

public class Test {

	public Test() {
		Hashtable fields;

		// TODO some todo text
		// direct field names

		//		==== Dictionaries
		//CountryDictInfo
		fields = new Hashtable();

		fields.put("name", "Name");
		fields.put("numericCode", "NumericCode");

		getSqls()
                   .put("finmon.domain.dictionary", new SomeFieldSQLDescriptor(
			this, "SELECT * FROM CountryDict WHERE ",
			" ORDER BY Name", fields))		;

	}
}
=======end of code


Pay attention on spliting the line and where putting the last semicolon

getSqls().put("finmon.domain.dictionary", 
              new SomeFieldSQLDescriptor(this, 
                         "SELECT * FROM CountryDict WHERE ",
			 " ORDER BY Name", fields));
With latest code, it returns:
package test;
import java.util.Hashtable;
public class Test {
    public Test() {
        Hashtable fields;
        // TODO some todo text
        // direct field names
        //		==== Dictionaries
        //CountryDictInfo
        fields = new Hashtable();
        fields.put("name", "Name");
        fields.put("numericCode", "NumericCode");
        getSqls()
                .put("finmon.domain.dictionary", new SomeFieldSQLDescriptor(
                        this, "SELECT * FROM CountryDict WHERE ",
                        " ORDER BY Name", fields));
    }
}

Does this look acceptable?
Not yet.

        fields.put("numericCode", "NumericCode");
        getSqls()
                .put("finmon.domain.dictionary", new SomeFieldSQLDescriptor(
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        this, "SELECT * FROM CountryDict WHERE ",
                        " ORDER BY Name", fields));


Why you split getSqls() and .put. You win just 1 char but not the clearness.

I think old formatter do it fine and readable:

        getSqls().put(
            "finmon.domain.dictionary", 
            new SomeFieldSQLDescriptor(
                this, 
                "SELECT * FROM  CountryDict WHERE ",
                " ORDER BY Name", 
                fields));

If hole arguments line must be droped then each argument must be appeared on new
line with ident (4 spaces)

P.S. I think formatter must use Sun standard Code Conventions for the Java.
http://java.sun.com/docs/codeconv/html/CodeConvTOC.doc.html

It's very pragmatic and make code very readable. And its looks like Standard!
This is a different problem. The remaining problem is a duplicate of bug 44642.
Close as duplicate of bug 44642, because the first problem is already fixed.

*** This bug has been marked as a duplicate of 44642 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45142" />
    <CreationDate amount="2003-10-17 16:06:00 -0400" />
    <DupId amount="73074" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Non-UTF-8 characters in strings in messages from RAC to client cause problems</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="12">
      <source_code type="assignment">
        <location start="1469" end="1533" />
        <code>long length=Message.readRALongFromBuffer(buffer, offset);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1567" end="1637" />
        <code>data=new String(buffer, offset+4, (int)length, "UTF-8");</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1647" end="1748" />
        <code>catch(Throwable e) {
              data=new String(buffer, 0, offset+4, (int)length);
       }</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1749" end="1779" />
        <code>rastring.setData(data);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1788" end="1828" />
        <code>return offset+rastring.getSize();</code>
      </source_code>
      <source_code type="assignment">
        <location start="1964" end="2022" />
        <code>long length=Message.readRALongFromBuffer(buffer, offset);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2044" end="2102" />
        <code>data=new String(buffer, offset+4, (int)length, "UTF-8");</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2106" end="2231" />
        <code>catch(Throwable e) {
		data=new String(buffer, offset+4, (int)length);  // *** changed 
to non-deprecated constructor ***
	}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2232" end="2256" />
        <code>rastring.setData(data);</code>
      </source_code>
      <source_code type="multicomment">
        <location start="2257" end="2280" />
        <code>/*** Start of fix ***/</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="2282" end="2602" />
        <code>if (rastring.length() != (int)length) {
                // If not all of the data is parsed from the buffer
                // increment the buffer offset by the length of the data
		int padding = 0;
		padding=4-(int)length%4;
		if(padding==4) {
			padding=0;
		}		
		
		return offset+(int)length+sizeofLong+padding;
	}</code>
      </source_code>
      <source_code type="elsestatement">
        <location start="2603" end="2677" />
        <code>else {
/*** End of fix ***/
		return offset+rastring.getSize();	
    }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="DUPLICATE" />
    <WithStack>A user running on a Danish Windows XP machine reported a problem launching a 
java application from the Profiling and Logging Perspective.  He received an 
error message like "Error launching application" but the application was 
successfully launched as indicated by the Agent Controller (RAC) 
servicelog.log. 

The cause of the problem was determined to be a non-UTF-8 character (the danish 
letter æ (ae)) in one of his system environment variables.  The RAC sends all 
of the system environment variables to the client in the Process Launched 
command.  When the client reads the message it can only parse the environment 
variable up to the non-UTF-8 character when creating the String to hold the 
environment variable.  But when it increments the buffer offset to move to the 
next environment variable in the message it uses the String length instead of 
the true length as stored in the message.  This causes an exception when the 
length of the next environment variable is parsed because the buffer offset is 
incorrect.  This exception cause a failure reading the Process Launched command 
message so the client assumes there was an error launching the process.

The client code that reads string data from messages sent by the RAC should 
handle non-UTF-8 characters.

Here is the original code in 
org.eclipse.hyades.internal.execution.local.common.Message.java:

public static int readRAStringFromBuffer(byte[] buffer, int offset, RAString 
rastring) {
       long length=Message.readRALongFromBuffer(buffer, offset);
       String data;
       try {
              data=new String(buffer, offset+4, (int)length, "UTF-8");
       }
       catch(Throwable e) {
              data=new String(buffer, 0, offset+4, (int)length);
       }
       rastring.setData(data);
       
       return offset+rastring.getSize();
}

Here is a possible fix for this problem:

public static int readRAStringFromBuffer(byte[] buffer, int offset, RAString 
rastring) {
	long length=Message.readRALongFromBuffer(buffer, offset);
	String data;
	try {
		data=new String(buffer, offset+4, (int)length, "UTF-8");
	}
	catch(Throwable e) {
		data=new String(buffer, offset+4, (int)length);  // *** changed 
to non-deprecated constructor ***
	}
	rastring.setData(data);

/*** Start of fix ***/	
	if (rastring.length() != (int)length) {
                // If not all of the data is parsed from the buffer
                // increment the buffer offset by the length of the data
		int padding = 0;
		padding=4-(int)length%4;
		if(padding==4) {
			padding=0;
		}		
		
		return offset+(int)length+sizeofLong+padding;
	}
    else {
/*** End of fix ***/
		return offset+rastring.getSize();	
    }
}


*** This bug has been marked as a duplicate of 73074 ***
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>A user running on a Danish Windows XP machine reported a problem launching a 
java application from the Profiling and Logging Perspective.  He received an 
error message like "Error launching application" but the application was 
successfully launched as indicated by the Agent Controller (RAC) 
servicelog.log. 

The cause of the problem was determined to be a non-UTF-8 character (the danish 
letter æ (ae)) in one of his system environment variables.  The RAC sends all 
of the system environment variables to the client in the Process Launched 
command.  When the client reads the message it can only parse the environment 
variable up to the non-UTF-8 character when creating the String to hold the 
environment variable.  But when it increments the buffer offset to move to the 
next environment variable in the message it uses the String length instead of 
the true length as stored in the message.  This causes an exception when the 
length of the next environment variable is parsed because the buffer offset is 
incorrect.  This exception cause a failure reading the Process Launched command 
message so the client assumes there was an error launching the process.

The client code that reads string data from messages sent by the RAC should 
handle non-UTF-8 characters.

Here is the original code in 
org.eclipse.hyades.internal.execution.local.common.Message.java:

public static int readRAStringFromBuffer(byte[] buffer, int offset, RAString 
rastring) {
       long length=Message.readRALongFromBuffer(buffer, offset);
       String data;
       try {
              data=new String(buffer, offset+4, (int)length, "UTF-8");
       }
       catch(Throwable e) {
              data=new String(buffer, 0, offset+4, (int)length);
       }
       rastring.setData(data);
       
       return offset+rastring.getSize();
}

Here is a possible fix for this problem:

public static int readRAStringFromBuffer(byte[] buffer, int offset, RAString 
rastring) {
	long length=Message.readRALongFromBuffer(buffer, offset);
	String data;
	try {
		data=new String(buffer, offset+4, (int)length, "UTF-8");
	}
	catch(Throwable e) {
		data=new String(buffer, offset+4, (int)length);  // *** changed 
to non-deprecated constructor ***
	}
	rastring.setData(data);

/*** Start of fix ***/	
	if (rastring.length() != (int)length) {
                // If not all of the data is parsed from the buffer
                // increment the buffer offset by the length of the data
		int padding = 0;
		padding=4-(int)length%4;
		if(padding==4) {
			padding=0;
		}		
		
		return offset+(int)length+sizeofLong+padding;
	}
    else {
/*** End of fix ***/
		return offset+rastring.getSize();	
    }
}


*** This bug has been marked as a duplicate of 73074 ***
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this originator of this enhancement/defect has an inactive Bugzilla account and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45143" />
    <CreationDate amount="2003-10-17 17:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="2.1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NullPointerException NPE when workbench restarts after crash</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>GraphicalEditor throws a NPE during restoring previous workbench state 
following a crash in the workbench.  The active workbench page is NULL for some 
reason.  The fix is to call getPage(), instead of obtaining the activePage, 
since editors are shared across all pages, it doesn't matter.
fixed</WithStack>
    <WithOutStack>GraphicalEditor throws a NPE during restoring previous workbench state 
following a crash in the workbench.  The active workbench page is NULL for some 
reason.  The fix is to call getPage(), instead of obtaining the activePage, 
since editors are shared across all pages, it doesn't matter.
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45144" />
    <CreationDate amount="2003-10-17 18:44:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[PropertiesView] Properties View label provider does not clear the image</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="743" end="769" />
        <code>item.setImage(1, image);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="810" end="836" />
        <code>item.setImage(1, image);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Properties View does not clear the image when the LabelProvider.getImage() 
retrns null.

Attached exmaple:
I have added onto the org.eclipse.ui.examples.propertysheet example to provide 
a ColorLabelProvider that returns null image for black and an image for all 
other colors.  Select "richard" and note there are no image displayed.  Now 
select an color besides black, and the color image appears as expected.  Now 
select the color black and notice that the color image is still there.
Created attachment 6471
modified propertysheet.jar for the plugin org.eclipse.ui.examples.propertysheet_2.1.0
I am unable to open the attached jar.

The suggested fix is to replace the following in 
PropertySheetViewer.updateEntry:
	if (image != null)
		item.setImage(1, image);

with:

	if (item.getImage(1) != image)
		item.setImage(1, image);

Can you try this out?  (I'm working in a split stream at the moment.)

Looks good, thanks!
Thanks for checking.  Released in HEAD for tomorrow morning's rebuild of the 
integration build.</WithStack>
    <WithOutStack>Properties View does not clear the image when the LabelProvider.getImage() 
retrns null.

Attached exmaple:
I have added onto the org.eclipse.ui.examples.propertysheet example to provide 
a ColorLabelProvider that returns null image for black and an image for all 
other colors.  Select "richard" and note there are no image displayed.  Now 
select an color besides black, and the color image appears as expected.  Now 
select the color black and notice that the color image is still there.
Created attachment 6471
modified propertysheet.jar for the plugin org.eclipse.ui.examples.propertysheet_2.1.0
I am unable to open the attached jar.

The suggested fix is to replace the following in 
PropertySheetViewer.updateEntry:
	if (image != null)
		item.setImage(1, image);

with:

	if (item.getImage(1) != image)
		item.setImage(1, image);

Can you try this out?  (I'm working in a split stream at the moment.)

Looks good, thanks!
Thanks for checking.  Released in HEAD for tomorrow morning's rebuild of the 
integration build.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45145" />
    <CreationDate amount="2003-10-17 19:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Second window comes to front when using first</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I use two Eclipse windows. If I switch in from another application to one Eclipse window, and then 
click on a docked view, or perspective, the other window comes to the front over my other 
applications' windows. Unless I click on the Eclipse dock icon, the only time a window should come 
to the front is if I click on it explicitly (or some behavior takes me to a widget in the other window).
Fixed &gt; 20031020.</WithStack>
    <WithOutStack>I use two Eclipse windows. If I switch in from another application to one Eclipse window, and then 
click on a docked view, or perspective, the other window comes to the front over my other 
applications' windows. Unless I click on the Eclipse dock icon, the only time a window should come 
to the front is if I click on it explicitly (or some behavior takes me to a widget in the other window).
Fixed &gt; 20031020.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45146" />
    <CreationDate amount="2003-10-17 20:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Code formatter preference page xample should take up remaining vertical space. [formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If you open the code formatter preference page and expand the dialog, the part 
with the code only takes up half of the dialog. In fact it should take up all 
of the remaining space that the tab pane doesnt need. IE: the GridData on the 
tab pane should be FILL_HORIZONTAL and not FILL_BOTH and the GridData on the 
code example should be FILL_BOTH.
Created attachment 6472
A plugin for viewing system properties and settign custom properties. 

This plugin demonstrates the problem. The icon for the plugin is a PNG. You can
see that it works in the view and preference page but not in the dialogs where
you select open-view.
Silvio, please make sure that the new dialog doesn't reveal the same behaviour.
Fixed in the new page (Java -&gt; Work in progress -&gt; Enable new formatter)</WithStack>
    <WithOutStack>If you open the code formatter preference page and expand the dialog, the part 
with the code only takes up half of the dialog. In fact it should take up all 
of the remaining space that the tab pane doesnt need. IE: the GridData on the 
tab pane should be FILL_HORIZONTAL and not FILL_BOTH and the GridData on the 
code example should be FILL_BOTH.
Created attachment 6472
A plugin for viewing system properties and settign custom properties. 

This plugin demonstrates the problem. The icon for the plugin is a PNG. You can
see that it works in the view and preference page but not in the dialogs where
you select open-view.
Silvio, please make sure that the new dialog doesn't reveal the same behaviour.
Fixed in the new page (Java -&gt; Work in progress -&gt; Enable new formatter)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45147" />
    <CreationDate amount="2003-10-17 20:15:00 -0400" />
    <DupId amount="37661" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>The plugin.xml editor should have a field for comments.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>It would be nice if the plugin.xml editor had a field to add comments to the 
plugin.xml file. If you add them in the source, they get erased the next time 
the settings are changed in the editor.


*** This bug has been marked as a duplicate of 37661 ***</WithStack>
    <WithOutStack>It would be nice if the plugin.xml editor had a field to add comments to the 
plugin.xml file. If you add them in the source, they get erased the next time 
the settings are changed in the editor.


*** This bug has been marked as a duplicate of 37661 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45148" />
    <CreationDate amount="2003-10-17 21:02:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>References To and Call Hiearchy do not include references to super implementation.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="699" end="747" />
        <code>public class X {
	protected void foobar() {
	}
}</code>
      </source_code>
      <source_code type="class">
        <location start="756" end="869" />
        <code>public class Y extends X {
	protected void foobar() {
		super.foobar();
	}
	void bar() {
		new X().foobar();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="14">
        <Lines>
          <Line>A.fooBar(), such as if B.fooBar() calls super.fooBar(), the reference to</Line>
          <Line>super.fooBar is not listed.</Line>
          <Line />
          <Line>The results can be misleading if the user is not really paying attention to</Line>
          <Line>which specific type they are in.</Line>
          <Line>Asking JDT/Core for comments.</Line>
          <Line>Jerome - Is this us or UI ?</Line>
          <Line>Looks like a bug on our side. To reproduce:</Line>
          <Line>1. Create the 2 following cus:</Line>
          <Line />
          <Line>X.java</Line>
          <Line />
          <Line />
          <Line>Y.java</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="14">
        <Lines>
          <Line>1. Create the 2 following cus:</Line>
          <Line />
          <Line>X.java</Line>
          <Line />
          <Line />
          <Line>Y.java</Line>
          <Line />
          <Line />
          <Line>2. Select Y.foobar() and search for references in the hierarchy</Line>
          <Line>Observe: Only the reference in Y.bar() is found. The reference in Y.foobar() is</Line>
          <Line>not found</Line>
          <Line>Searching in the workspace doesn't find the super.foobar() reference either</Line>
          <Line>I take back what I said in comment #3. super.foobar() cannot be a reference to</Line>
          <Line>Y.foobar() as it is called within Y.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>This is essentially bug 10057 ("References To Hierarchy") but occurs in the 
Method Call Hierarchy.

Just to be clear:

Say class B extends A and B.fooBar() overrides A.fooBar().  When i bring up 
the Method Call Hierarchy on (or search for references to) B.fooBar() the 
results do not include references that are determined to be directly to 
A.fooBar(), such as if B.fooBar() calls super.fooBar(), the reference to 
super.fooBar is not listed.

The results can be misleading if the user is not really paying attention to 
which specific type they are in.
Asking JDT/Core for comments.
Jerome - Is this us or UI ?
Looks like a bug on our side. To reproduce:
1. Create the 2 following cus:

X.java
public class X {
	protected void foobar() {
	}
}

Y.java
public class Y extends X {
	protected void foobar() {
		super.foobar();
	}
	void bar() {
		new X().foobar();
	}
}

2. Select Y.foobar() and search for references in the hierarchy
Observe: Only the reference in Y.bar() is found. The reference in Y.foobar() is 
not found
Searching in the workspace doesn't find the super.foobar() reference either
I take back what I said in comment #3. super.foobar() cannot be a reference to 
Y.foobar() as it is called within Y.

Works as expected.</WithStack>
    <WithOutStack>This is essentially bug 10057 ("References To Hierarchy") but occurs in the 
Method Call Hierarchy.

Just to be clear:

Say class B extends A and B.fooBar() overrides A.fooBar().  When i bring up 
the Method Call Hierarchy on (or search for references to) B.fooBar() the 
results do not include references that are determined to be directly to 
A.fooBar(), such as if B.fooBar() calls super.fooBar(), the reference to 
super.fooBar is not listed.

The results can be misleading if the user is not really paying attention to 
which specific type they are in.
Asking JDT/Core for comments.
Jerome - Is this us or UI ?
Looks like a bug on our side. To reproduce:
1. Create the 2 following cus:

X.java
public class X {
	protected void foobar() {
	}
}

Y.java
public class Y extends X {
	protected void foobar() {
		super.foobar();
	}
	void bar() {
		new X().foobar();
	}
}

2. Select Y.foobar() and search for references in the hierarchy
Observe: Only the reference in Y.bar() is found. The reference in Y.foobar() is 
not found
Searching in the workspace doesn't find the super.foobar() reference either
I take back what I said in comment #3. super.foobar() cannot be a reference to 
Y.foobar() as it is called within Y.

Works as expected.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45149" />
    <CreationDate amount="2003-10-17 21:16:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>The position of IME input field is wrong.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>When I input Japanese text on the text component of JDT,
the text appears in wrong position until the text is fixed.
It seems that x-axis and y-axis should be replaced.

I use Eclipse3.0M4, Windows2000, MS-IME.
SN to investigate.

The problem is not solved although tried on Eclipse3.0M6.
In the country using IME, it is a very big problem.

I use Eclipse3.0M6, Windows2000 or Windows XP, MS-IME or ATOK(Japanese IME), JDK1.4.2
I found how to correct a bug probably. 
Please check this patch.

&gt;diff -c os_structs.old.c os_structs.c
*** os_structs.old.c	Tue Nov 18 13:05:46 2003
--- os_structs.c	Wed Dec 31 04:11:27 2003
***************
*** 433,440 ****
  {
  	if (!COMPOSITIONFORMFc.cached) cacheCOMPOSITIONFORMFields(env, 
lpObject);
  	lpStruct-&gt;dwStyle = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.dwStyle);
! 	lpStruct-&gt;ptCurrentPos.y = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.x);
! 	lpStruct-&gt;ptCurrentPos.x = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.y);
  	lpStruct-&gt;rcArea.left = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.left);
  	lpStruct-&gt;rcArea.top = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.top);
  	lpStruct-&gt;rcArea.right = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.right);
--- 433,440 ----
  {
  	if (!COMPOSITIONFORMFc.cached) cacheCOMPOSITIONFORMFields(env, 
lpObject);
  	lpStruct-&gt;dwStyle = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.dwStyle);
! 	lpStruct-&gt;ptCurrentPos.x = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.x);
! 	lpStruct-&gt;ptCurrentPos.y = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.y);
  	lpStruct-&gt;rcArea.left = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.left);
  	lpStruct-&gt;rcArea.top = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.top);
  	lpStruct-&gt;rcArea.right = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.right);
***************
*** 446,453 ****
  {
  	if (!COMPOSITIONFORMFc.cached) cacheCOMPOSITIONFORMFields(env, 
lpObject);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.dwStyle, (jint)
lpStruct-&gt;dwStyle);
! 	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.x, (jint)lpStruct-
&gt;ptCurrentPos.y);
! 	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.y, (jint)lpStruct-
&gt;ptCurrentPos.x);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.left, (jint)
lpStruct-&gt;rcArea.left);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.top, (jint)
lpStruct-&gt;rcArea.top);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.right, (jint)
lpStruct-&gt;rcArea.right);
--- 446,453 ----
  {
  	if (!COMPOSITIONFORMFc.cached) cacheCOMPOSITIONFORMFields(env, 
lpObject);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.dwStyle, (jint)
lpStruct-&gt;dwStyle);
! 	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.x, (jint)lpStruct-
&gt;ptCurrentPos.x);
! 	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.y, (jint)lpStruct-
&gt;ptCurrentPos.y);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.left, (jint)
lpStruct-&gt;rcArea.left);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.top, (jint)
lpStruct-&gt;rcArea.top);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.right, (jint)
lpStruct-&gt;rcArea.right);

*** Bug 49480 has been marked as a duplicate of this bug. ***
FH to get to the bottom of this.  Is it me or are there no changes in the 
patches?
The patch is good, our c code is wrong (we switch x and y).
Although our c code is generate automatically is possible to have errors in it 
if the jnigen metadata is wrong.

I will release the patch but I want to do more investigation on this pr, for 
me, besides the IME box position been wrong, when I commit the DBCS text it 
disappears. Very serious bug.

I suspect that the problem I'm having here are due the bidi extension I have 
installed in my machine.
I've fixed the jnigen metadata, generate the C code and recompiled.
I've also added "Udagawa (udagawa@arksystems.co.jp) - Bug 45149" to SWT 
contributors list.</WithStack>
    <WithOutStack>When I input Japanese text on the text component of JDT,
the text appears in wrong position until the text is fixed.
It seems that x-axis and y-axis should be replaced.

I use Eclipse3.0M4, Windows2000, MS-IME.
SN to investigate.

The problem is not solved although tried on Eclipse3.0M6.
In the country using IME, it is a very big problem.

I use Eclipse3.0M6, Windows2000 or Windows XP, MS-IME or ATOK(Japanese IME), JDK1.4.2
I found how to correct a bug probably. 
Please check this patch.

&gt;diff -c os_structs.old.c os_structs.c
*** os_structs.old.c	Tue Nov 18 13:05:46 2003
--- os_structs.c	Wed Dec 31 04:11:27 2003
***************
*** 433,440 ****
  {
  	if (!COMPOSITIONFORMFc.cached) cacheCOMPOSITIONFORMFields(env, 
lpObject);
  	lpStruct-&gt;dwStyle = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.dwStyle);
! 	lpStruct-&gt;ptCurrentPos.y = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.x);
! 	lpStruct-&gt;ptCurrentPos.x = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.y);
  	lpStruct-&gt;rcArea.left = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.left);
  	lpStruct-&gt;rcArea.top = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.top);
  	lpStruct-&gt;rcArea.right = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.right);
--- 433,440 ----
  {
  	if (!COMPOSITIONFORMFc.cached) cacheCOMPOSITIONFORMFields(env, 
lpObject);
  	lpStruct-&gt;dwStyle = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.dwStyle);
! 	lpStruct-&gt;ptCurrentPos.x = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.x);
! 	lpStruct-&gt;ptCurrentPos.y = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.y);
  	lpStruct-&gt;rcArea.left = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.left);
  	lpStruct-&gt;rcArea.top = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.top);
  	lpStruct-&gt;rcArea.right = (*env)-&gt;GetIntField(env, lpObject, 
COMPOSITIONFORMFc.right);
***************
*** 446,453 ****
  {
  	if (!COMPOSITIONFORMFc.cached) cacheCOMPOSITIONFORMFields(env, 
lpObject);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.dwStyle, (jint)
lpStruct-&gt;dwStyle);
! 	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.x, (jint)lpStruct-
&gt;ptCurrentPos.y);
! 	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.y, (jint)lpStruct-
&gt;ptCurrentPos.x);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.left, (jint)
lpStruct-&gt;rcArea.left);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.top, (jint)
lpStruct-&gt;rcArea.top);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.right, (jint)
lpStruct-&gt;rcArea.right);
--- 446,453 ----
  {
  	if (!COMPOSITIONFORMFc.cached) cacheCOMPOSITIONFORMFields(env, 
lpObject);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.dwStyle, (jint)
lpStruct-&gt;dwStyle);
! 	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.x, (jint)lpStruct-
&gt;ptCurrentPos.x);
! 	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.y, (jint)lpStruct-
&gt;ptCurrentPos.y);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.left, (jint)
lpStruct-&gt;rcArea.left);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.top, (jint)
lpStruct-&gt;rcArea.top);
  	(*env)-&gt;SetIntField(env, lpObject, COMPOSITIONFORMFc.right, (jint)
lpStruct-&gt;rcArea.right);

*** Bug 49480 has been marked as a duplicate of this bug. ***
FH to get to the bottom of this.  Is it me or are there no changes in the 
patches?
The patch is good, our c code is wrong (we switch x and y).
Although our c code is generate automatically is possible to have errors in it 
if the jnigen metadata is wrong.

I will release the patch but I want to do more investigation on this pr, for 
me, besides the IME box position been wrong, when I commit the DBCS text it 
disappears. Very serious bug.

I suspect that the problem I'm having here are due the bidi extension I have 
installed in my machine.
I've fixed the jnigen metadata, generate the C code and recompiled.
I've also added "Udagawa (udagawa@arksystems.co.jp) - Bug 45149" to SWT 
contributors list.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45150" />
    <CreationDate amount="2003-10-17 21:58:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Doc" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Adding utility JARs to a plugin should be easier "Update Classpath"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="19">
        <Lines>
          <Line>1) How the bloody hell does one do this? Im  so frustrated that a thing that</Line>
          <Line>should be so simple has blocked me. I have sifted hundreds of emails in search</Line>
          <Line>and still cant get it working. What is the magic dance?</Line>
          <Line />
          <Line>2) This process should be CHANGED to be easier.</Line>
          <Line>The process is pretty straight forward as-is.  Let me clarify how it works.</Line>
          <Line>PDE's Update Classpath function computes a classpath for your plug-in project</Line>
          <Line>that is identical to the runtime classpath of the plug-in.</Line>
          <Line>The JARs that will be on the plug-in's runtime classpath are:</Line>
          <Line>i. The libraries listed in the Runtime section of the plugin.xml</Line>
          <Line>ii. The libraries contributed by plug-ins listed in the &lt;requires&gt; section</Line>
          <Line>of the plugin.xml.</Line>
          <Line>iii.  Nothing else.  Therefore, you must not tweak the Java build path of</Line>
          <Line>your plug-in to make your code compile, as whatever extra JAR you manually add</Line>
          <Line>to the classpath will not be available to the plug-in at runtime.  So the</Line>
          <Line>successful compilation that might result from a manual tweak is really a false</Line>
          <Line>positive, and your plug-in will not be able to be built and deployed</Line>
          <Line>properly.  That is why PDE's update classpath removes this extra JAR, as it</Line>
          <Line>does not belong there.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I added a new jar to my plugin called jakarta-regexp-1.3.jar. Now I have spent 
the last hour trying to figure out how to get it working together. 

I went to project properties -&gt; java build path -&gt; add jar -&gt; selected the jar 
and then ok. The I close and hit "update classpath" on my plugin.xml. The jar 
is then REMOVED from the java build path. 

Undetered, I went to the plugin.xml and added lib/jakarta-regexp-1.3.jar to 
the runtime. Saved, hit "Update classpath" and still nothing happens. 

1) How the bloody hell does one do this? Im  so frustrated that a thing that 
should be so simple has blocked me. I have sifted hundreds of emails in search 
and still cant get it working. What is the magic dance?

2) This process should be CHANGED to be easier.
The process is pretty straight forward as-is.  Let me clarify how it works.
PDE's Update Classpath function computes a classpath for your plug-in project 
that is identical to the runtime classpath of the plug-in.
The JARs that will be on the plug-in's runtime classpath are:
   i. The libraries listed in the Runtime section of the plugin.xml
   ii. The libraries contributed by plug-ins listed in the &lt;requires&gt; section 
of the plugin.xml.
   iii.  Nothing else.  Therefore, you must not tweak the Java build path of 
your plug-in to make your code compile, as whatever extra JAR you manually add 
to the classpath will not be available to the plug-in at runtime.  So the 
successful compilation that might result from a manual tweak is really a false 
positive, and your plug-in will not be able to be built and deployed 
properly.  That is why PDE's update classpath removes this extra JAR, as it 
does not belong there.

&gt;I went to the plugin.xml and added lib/jakarta-regexp-1.3.jar to 
&gt;the runtime.
You must never do that.  This JAR is not contributed by your plug-in.  Even if 
you erroneously added it to the runtime section, the reason why it was not 
picked up by the Update Classpath function is because it is not physically in 
your project.

Here is what you should do:
Add whatever plug-in X contributes the lib/jakarta-regexp-1.3.jar to the 
dependency list of your plug-in.  Upon saving, PDE will automatically update 
the classpath and will pick it up, as long as plug-in X explicits lists that 
library in its runtime section.

In certain setups, and I'm not sure if your case is one of them or not, it 
might not be desirable to add plug-in X to the list of dependencies of your 
plug-in.  In this case, open the "build.properties" of your plug-in, and in 
the "Extra Classpath Entries" section of the editor, add the JAR you want and 
save.  When you then update the classpath, PDE checks the build.properties 
file and adds all the JARs listed to the plug-in's classpath.
I searched for HOURS to solve this problem and only tripped on the solution by 
accident. It was extremely frustrating. If ntohing else this should be a 
documentation issue. 
I searched for HOURS to solve this problem and only tripped on the solution by 
accident. It was extremely frustrating. If ntohing else this should be a 
documentation issue. 
No longer relevant after 3.0 release</WithStack>
    <WithOutStack>I added a new jar to my plugin called jakarta-regexp-1.3.jar. Now I have spent 
the last hour trying to figure out how to get it working together. 

I went to project properties -&gt; java build path -&gt; add jar -&gt; selected the jar 
and then ok. The I close and hit "update classpath" on my plugin.xml. The jar 
is then REMOVED from the java build path. 

Undetered, I went to the plugin.xml and added lib/jakarta-regexp-1.3.jar to 
the runtime. Saved, hit "Update classpath" and still nothing happens. 

1) How the bloody hell does one do this? Im  so frustrated that a thing that 
should be so simple has blocked me. I have sifted hundreds of emails in search 
and still cant get it working. What is the magic dance?

2) This process should be CHANGED to be easier.
The process is pretty straight forward as-is.  Let me clarify how it works.
PDE's Update Classpath function computes a classpath for your plug-in project 
that is identical to the runtime classpath of the plug-in.
The JARs that will be on the plug-in's runtime classpath are:
   i. The libraries listed in the Runtime section of the plugin.xml
   ii. The libraries contributed by plug-ins listed in the &lt;requires&gt; section 
of the plugin.xml.
   iii.  Nothing else.  Therefore, you must not tweak the Java build path of 
your plug-in to make your code compile, as whatever extra JAR you manually add 
to the classpath will not be available to the plug-in at runtime.  So the 
successful compilation that might result from a manual tweak is really a false 
positive, and your plug-in will not be able to be built and deployed 
properly.  That is why PDE's update classpath removes this extra JAR, as it 
does not belong there.

&gt;I went to the plugin.xml and added lib/jakarta-regexp-1.3.jar to 
&gt;the runtime.
You must never do that.  This JAR is not contributed by your plug-in.  Even if 
you erroneously added it to the runtime section, the reason why it was not 
picked up by the Update Classpath function is because it is not physically in 
your project.

Here is what you should do:
Add whatever plug-in X contributes the lib/jakarta-regexp-1.3.jar to the 
dependency list of your plug-in.  Upon saving, PDE will automatically update 
the classpath and will pick it up, as long as plug-in X explicits lists that 
library in its runtime section.

In certain setups, and I'm not sure if your case is one of them or not, it 
might not be desirable to add plug-in X to the list of dependencies of your 
plug-in.  In this case, open the "build.properties" of your plug-in, and in 
the "Extra Classpath Entries" section of the editor, add the JAR you want and 
save.  When you then update the classpath, PDE checks the build.properties 
file and adds all the JARs listed to the plug-in's classpath.
I searched for HOURS to solve this problem and only tripped on the solution by 
accident. It was extremely frustrating. If ntohing else this should be a 
documentation issue. 
I searched for HOURS to solve this problem and only tripped on the solution by 
accident. It was extremely frustrating. If ntohing else this should be a 
documentation issue. 
No longer relevant after 3.0 release</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45151" />
    <CreationDate amount="2003-10-17 22:29:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Double-click not supported on second page of merge wizard</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- select a project</Line>
          <Line>- Team &gt; Merge</Line>
          <Line>- double-click on a version</Line>
          <Line>- it goes to the next page</Line>
          <Line>- double-click on a version</Line>
          <Line>- it has no effect</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>build I20031015

- select a project
- Team &gt; Merge
- double-click on a version
- it goes to the next page
- double-click on a version
- it has no effect

Should be equivalent to pressing Finish.
I cannot find any API on IWizard or IWizardContainer that will allow me to 
perform a finish and close and the wizard. Duplicating the code in 
WizardDialog#finishedPressed() does not appeal to me. Nick, can you offer any 
insight into what API I could use to have a double-click in the end page 
trigger the wizard to finish?
Tod, please advise.
According to Tod, the double-click on the first page should not take you to 
the next page.
Eh?  It's a common convention for double-click to be the same as selecting and 
pressing the default button, as a convenience.

Not for 3.0
Can't really schedule this for 3.1 since it requires additional API from the 
wizard framework.
This no longer applies as the merge wizard layout has changed.</WithStack>
    <WithOutStack>build I20031015

- select a project
- Team &gt; Merge
- double-click on a version
- it goes to the next page
- double-click on a version
- it has no effect

Should be equivalent to pressing Finish.
I cannot find any API on IWizard or IWizardContainer that will allow me to 
perform a finish and close and the wizard. Duplicating the code in 
WizardDialog#finishedPressed() does not appeal to me. Nick, can you offer any 
insight into what API I could use to have a double-click in the end page 
trigger the wizard to finish?
Tod, please advise.
According to Tod, the double-click on the first page should not take you to 
the next page.
Eh?  It's a common convention for double-click to be the same as selecting and 
pressing the default button, as a convenience.

Not for 3.0
Can't really schedule this for 3.1 since it requires additional API from the 
wizard framework.
This no longer applies as the merge wizard layout has changed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45152" />
    <CreationDate amount="2003-10-17 23:09:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>NPE from AbstractDocument.search</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I know that this is deprecated but the current code throws an NPE when the 
FindReplaceDocumentAdapter returns null when there was no match.
clearly a bug.
verified</WithStack>
    <WithOutStack>I know that this is deprecated but the current code throws an NPE when the 
FindReplaceDocumentAdapter returns null when there was no match.
clearly a bug.
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45153" />
    <CreationDate amount="2003-10-18 05:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>two columns in Search View</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>- the kind of search (there might be a C++ search which shows up as a-b-c</Line>
          <Line>- the current sorter</Line>
          <Line>So, if the C++ shows up as a-b-c then there should be three columns: a, b and c</Line>
          <Line>There are currently no plans to change the table layout (column numbers)</Line>
          <Line>however, we investigate in showing the results in a tree. The reason for this is</Line>
          <Line>that we can improve performance with a tree while we would degrade performance</Line>
          <Line>the more columns we use.</Line>
          <Line>As of now 'LATER' and 'REMIND' resolutions are no longer supported.</Line>
          <Line>Please reopen this bug if it is still valid for you.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The Search View should consist of two sortable columns.
Can you provide a bit more information i.e. what would be in those two columns?
Well, the two things that are currently in one column :-) 
 
For a File Search e.g. the output format right now is  
 
&lt;file&gt; - &lt;path&gt; 
 
For a Java Search for all references of a method the output is 
 
&lt;method&gt; - &lt;package+class&gt; 
 
IMO those should be seperated into two (sortable) columns. 
The format/display string depends on
- the kind of search (there might be a C++ search which shows up as a-b-c
- the current sorter
So, if the C++ shows up as a-b-c then there should be three columns: a, b and c 
There are currently no plans to change the table layout (column numbers)
however, we investigate in showing the results in a tree. The reason for this is
that we can improve performance with a tree while we would degrade performance
the more columns we use.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>The Search View should consist of two sortable columns.
Can you provide a bit more information i.e. what would be in those two columns?
Well, the two things that are currently in one column :-) 
 
For a File Search e.g. the output format right now is  
 
&lt;file&gt; - &lt;path&gt; 
 
For a Java Search for all references of a method the output is 
 
&lt;method&gt; - &lt;package+class&gt; 
 
IMO those should be seperated into two (sortable) columns. 
The format/display string depends on
- the kind of search (there might be a C++ search which shows up as a-b-c
- the current sorter
So, if the C++ shows up as a-b-c then there should be three columns: a, b and c 
There are currently no plans to change the table layout (column numbers)
however, we investigate in showing the results in a tree. The reason for this is
that we can improve performance with a tree while we would degrade performance
the more columns we use.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45154" />
    <CreationDate amount="2003-10-18 07:19:00 -0400" />
    <DupId amount="48352" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Live Sync View] NPE while synchronizing workspace</Summery>
    <Patches amount="0" />
    <Stacktraces amount="4">
      <Stacktrace timestamp="1437341034208">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.core.CVSSyncInfo.makeInSync(CVSSyncInfo.java:302)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.ui.subscriber.CVSSubscriberAction.makeInSync(CVSSubscriberAction.java:75)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.ui.subscriber.CVSSubscriberAction.makeInSync(CVSSubscriberAction.java:62)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ccvs.ui.subscriber.SafeUpdateAction.safeUpdate(SafeUpdateAction.java:184)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ccvs.ui.subscriber.SafeUpdateAction.run(SafeUpdateAction.java:66)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.ui.subscriber.CVSSubscriberAction$2.run(CVSSubscriberAction.java:153)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run(EclipseSynchronizer.java:1362)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder$3.run(EclipseFolder.java:300)</Frame>
          <Frame depth="8">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1555)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.run(EclipseFolder.java:297)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ccvs.ui.subscriber.CVSSubscriberAction$1.run(CVSSubscriberAction.java:149)</Frame>
          <Frame depth="11">org.eclipse.team.internal.ccvs.ui.operations.CVSNonblockingRunnableContext.run(CVSNonblockingRunnableContext.java:47)</Frame>
          <Frame depth="12">org.eclipse.team.internal.ccvs.ui.operations.CVSNonblockingRunnableContext$2.runInWorkspace(CVSNonblockingRunnableContext.java:67)</Frame>
          <Frame depth="13">org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:37)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341034208">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>Element not 
found: /org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/code/tests/formatte
r.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.watson.ElementTree.elementNotFound(ElementTree.java:358)</Frame>
          <Frame depth="1">org.eclipse.core.internal.watson.ElementTree.createElement(ElementTree.java:272)</Frame>
          <Frame depth="2">org.eclipse.core.internal.resources.Workspace.createResource(Workspace.java:672)</Frame>
          <Frame depth="3">org.eclipse.core.internal.resources.Workspace.createResource(Workspace.java:643)</Frame>
          <Frame depth="4">org.eclipse.core.internal.resources.Workspace.createResource(Workspace.java:705)</Frame>
          <Frame depth="5">org.eclipse.core.internal.resources.Synchronizer.setSyncInfo(Synchronizer.java:228)</Frame>
          <Frame depth="6">org.eclipse.team.core.subscribers.RemoteBytesSynchronizer.setSyncBytes(RemoteBytesSynchronizer.java:94)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.core.syncinfo.CVSRemoteSynchronizer.setSyncBytes(CVSRemoteSynchronizer.java:63)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ccvs.core.syncinfo.OptimizedRemoteSynchronizer.setSyncBytes(OptimizedRemoteSynchronizer.java:57)</Frame>
          <Frame depth="9">org.eclipse.team.core.subscribers.RemoteBytesSynchronizer.setRemoteDoesNotExist(RemoteBytesSynchronizer.java:142)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ccvs.core.syncinfo.RemoteTagSynchronizer.collectChanges(RemoteTagSynchronizer.java:58)</Frame>
          <Frame depth="11">org.eclipse.team.internal.ccvs.core.syncinfo.RemoteTagSynchronizer.refresh(RemoteTagSynchronizer.java:247)</Frame>
          <Frame depth="12">org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.refreshRemote(CVSSyncTreeSubscriber.java:235)</Frame>
          <Frame depth="13">org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.refresh(CVSSyncTreeSubscriber.java:218)</Frame>
          <Frame depth="14">org.eclipse.team.internal.ui.jobs.RefreshSubscriberJob.runInWorkspace(RefreshSubscriberJob.java:131)</Frame>
          <Frame depth="15">org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:37)</Frame>
          <Frame depth="16">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341034208">
        <Exception>org.eclipse.core.internal.resources.ResourceException</Exception>
        <Reason>Resource /org.eclipse.jdt.core.tests.model/workspace/Formatter does not exist.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.resources.Resource.checkExists(Resource.java:297)</Frame>
          <Frame depth="1">org.eclipse.core.internal.resources.Resource.checkAccessible(Resource.java:169)</Frame>
          <Frame depth="2">org.eclipse.core.internal.resources.Folder.assertCreateRequirements(Folder.java:26)</Frame>
          <Frame depth="3">org.eclipse.core.internal.resources.Folder.create(Folder.java:84)</Frame>
          <Frame depth="4">org.eclipse.core.internal.resources.Folder.create(Folder.java:114)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.mkdir(EclipseFolder.java:115)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.core.resources.CVSRemoteSyncElement.makeInSync(CVSRemoteSyncElement.java:250)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.ui.sync.MergeAction.makeInSync(MergeAction.java:352)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ccvs.ui.sync.UpdateSyncAction.run(UpdateSyncAction.java:277)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.ui.sync.MergeAction$1.execute(MergeAction.java:125)</Frame>
          <Frame depth="10">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:71)</Frame>
          <Frame depth="11">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1555)</Frame>
          <Frame depth="12">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1572)</Frame>
          <Frame depth="13">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:85)</Frame>
          <Frame depth="14">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341034208">
        <Exception>org.eclipse.core.internal.resources.ResourceException</Exception>
        <Reason>Resource /org.eclipse.jdt.core.tests.model/workspace/Formatter does not exist.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.resources.Resource.checkExists(Resource.java:297)</Frame>
          <Frame depth="1">org.eclipse.core.internal.resources.Resource.checkAccessible(Resource.java:169)</Frame>
          <Frame depth="2">org.eclipse.core.internal.resources.Folder.assertCreateRequirements(Folder.java:26)</Frame>
          <Frame depth="3">org.eclipse.core.internal.resources.Folder.create(Folder.java:84)</Frame>
          <Frame depth="4">org.eclipse.core.internal.resources.Folder.create(Folder.java:114)</Frame>
          <Frame depth="5">org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.mkdir(EclipseFolder.java:115)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ccvs.core.resources.CVSRemoteSyncElement.makeInSync(CVSRemoteSyncElement.java:250)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ccvs.ui.sync.MergeAction.makeInSync(MergeAction.java:352)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ccvs.ui.sync.UpdateSyncAction.run(UpdateSyncAction.java:277)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ccvs.ui.sync.MergeAction$1.execute(MergeAction.java:125)</Frame>
          <Frame depth="10">org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:71)</Frame>
          <Frame depth="11">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1555)</Frame>
          <Frame depth="12">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1572)</Frame>
          <Frame depth="13">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:85)</Frame>
          <Frame depth="14">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build 3.0M4

Attempting to synchronize a self-hosting workspace using new sync view, I got 
several failures, leaving the sync view with stale information and unable to 
perform updates from there on.

Entries in log:
!ENTRY org.eclipse.core.runtime 4 2 Oct 18, 2003 09:14:57.942
!MESSAGE An internal error occurred during: "Performing CVS update on 987 
resources.".
!STACK 0
java.lang.NullPointerException
        at org.eclipse.team.internal.ccvs.core.CVSSyncInfo.makeInSync
(CVSSyncInfo.java:302)
        at 
org.eclipse.team.internal.ccvs.ui.subscriber.CVSSubscriberAction.makeInSync
(CVSSubscriberAction.java:75)
        at 
org.eclipse.team.internal.ccvs.ui.subscriber.CVSSubscriberAction.makeInSync
(CVSSubscriberAction.java:62)
        at 
org.eclipse.team.internal.ccvs.ui.subscriber.SafeUpdateAction.safeUpdate
(SafeUpdateAction.java:184)
        at org.eclipse.team.internal.ccvs.ui.subscriber.SafeUpdateAction.run
(SafeUpdateAction.java:66)
        at 
org.eclipse.team.internal.ccvs.ui.subscriber.CVSSubscriberAction$2.run
(CVSSubscriberAction.java:153)
        at org.eclipse.team.internal.ccvs.core.resources.EclipseSynchronizer.run
(EclipseSynchronizer.java:1362)
        at org.eclipse.team.internal.ccvs.core.resources.EclipseFolder$3.run
(EclipseFolder.java:300)
        at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1555)
        at org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.run
(EclipseFolder.java:297)
        at 
org.eclipse.team.internal.ccvs.ui.subscriber.CVSSubscriberAction$1.run
(CVSSubscriberAction.java:149)
        at 
org.eclipse.team.internal.ccvs.ui.operations.CVSNonblockingRunnableContext.run
(CVSNonblockingRunnableContext.java:47)
        at 
org.eclipse.team.internal.ccvs.ui.operations.CVSNonblockingRunnableContext$2.run
InWorkspace(CVSNonblockingRunnableContext.java:67)
        at org.eclipse.core.internal.resources.InternalWorkspaceJob.run
(InternalWorkspaceJob.java:37)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
!ENTRY org.eclipse.core.runtime 4 2 Oct 18, 2003 13:03:51.770
!MESSAGE An internal error occurred during: "Team refresh 1 folders for CVS 
Workspace".
!STACK 0
java.lang.IllegalArgumentException: Element not 
found: /org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/code/tests/formatte
r.
        at org.eclipse.core.internal.watson.ElementTree.elementNotFound
(ElementTree.java:358)
        at org.eclipse.core.internal.watson.ElementTree.createElement
(ElementTree.java:272)
        at org.eclipse.core.internal.resources.Workspace.createResource
(Workspace.java:672)
        at org.eclipse.core.internal.resources.Workspace.createResource
(Workspace.java:643)
        at org.eclipse.core.internal.resources.Workspace.createResource
(Workspace.java:705)
        at org.eclipse.core.internal.resources.Synchronizer.setSyncInfo
(Synchronizer.java:228)
        at 
org.eclipse.team.core.subscribers.RemoteBytesSynchronizer.setSyncBytes
(RemoteBytesSynchronizer.java:94)
        at 
org.eclipse.team.internal.ccvs.core.syncinfo.CVSRemoteSynchronizer.setSyncBytes
(CVSRemoteSynchronizer.java:63)
        at 
org.eclipse.team.internal.ccvs.core.syncinfo.OptimizedRemoteSynchronizer.setSync
Bytes(OptimizedRemoteSynchronizer.java:57)
        at 
org.eclipse.team.core.subscribers.RemoteBytesSynchronizer.setRemoteDoesNotExist
(RemoteBytesSynchronizer.java:142)
        at 
org.eclipse.team.internal.ccvs.core.syncinfo.RemoteTagSynchronizer.collectChange
s(RemoteTagSynchronizer.java:58)
        at 
org.eclipse.team.internal.ccvs.core.syncinfo.RemoteTagSynchronizer.refresh
(RemoteTagSynchronizer.java:247)
        at 
org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.refreshRemote
(CVSSyncTreeSubscriber.java:235)
        at org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.refresh
(CVSSyncTreeSubscriber.java:218)
        at org.eclipse.team.internal.ui.jobs.RefreshSubscriberJob.runInWorkspace
(RefreshSubscriberJob.java:131)
        at org.eclipse.core.internal.resources.InternalWorkspaceJob.run
(InternalWorkspaceJob.java:37)
        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
Can you give a description of what was happening when this occured. For 
instance, on of the exceptions indicates that there were 987 incoming changes. 
Where there that many changes or is the count off? Any other details you can 
provide would be helpful.
Also, could this have been related to the cvsup problems?
I was working on the master repo. I was synchronizing workspace with 
repository, and there was likely numerous changes since Olivier had released 
the new formatter regression tests. I had only incoming changes to apply.

This workspace has been working fine for the last month, I hadn't updated the 
SDK recently, nothing really different in this session. Synchronization was the 
only failing scenario, I recall I have tried it twice and both attempts got 
doomed.

After shutting down and restarting, it worked fine after forcing a replace with 
latest.

Given that the cvsup did fail at the same time (i.e. Olivier's changes were 
omitted from the nightly build), there is a possibility that it is related. We 
should test synching against a project with folders deleted remotely just to 
see if we get similar behavior.
CVSup is out of the loop. I was working against the master repo.

On a different machine, it occurred to me again when synchronizing. This time 
the log contained:

!ENTRY org.eclipse.team.cvs.ui 4 0 Oct 22, 2003 17:04:44.867
!MESSAGE Problem creating 
folder: /org.eclipse.jdt.core.tests.model/workspace/Formatter/test226. 
Resource /org.eclipse.jdt.core.tests.model/workspace/Formatter does not exist.
!STACK 1
org.eclipse.team.internal.ccvs.core.CVSException[368]: 
org.eclipse.core.internal.resources.ResourceException: 
Resource /org.eclipse.jdt.core.tests.model/workspace/Formatter does not exist.
        at org.eclipse.core.internal.resources.Resource.checkExists
(Resource.java:297)
        at org.eclipse.core.internal.resources.Resource.checkAccessible
(Resource.java:169)
        at org.eclipse.core.internal.resources.Folder.assertCreateRequirements
(Folder.java:26)
        at org.eclipse.core.internal.resources.Folder.create(Folder.java:84)
        at org.eclipse.core.internal.resources.Folder.create(Folder.java:114)
        at org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.mkdir
(EclipseFolder.java:115)
        at 
org.eclipse.team.internal.ccvs.core.resources.CVSRemoteSyncElement.makeInSync
(CVSRemoteSyncElement.java:250)
        at org.eclipse.team.internal.ccvs.ui.sync.MergeAction.makeInSync
(MergeAction.java:352)
        at org.eclipse.team.internal.ccvs.ui.sync.UpdateSyncAction.run
(UpdateSyncAction.java:277)
        at org.eclipse.team.internal.ccvs.ui.sync.MergeAction$1.execute
(MergeAction.java:125)
        at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run
(WorkspaceModifyOperation.java:71)
        at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1555)
        at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1572)
        at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:85)
        at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.team.cvs.core 4 368 Oct 22, 2003 17:04:44.867
!MESSAGE Problem creating 
folder: /org.eclipse.jdt.core.tests.model/workspace/Formatter/test226. 
Resource /org.eclipse.jdt.core.tests.model/workspace/Formatter does not exist.
!STACK 1
org.eclipse.core.internal.resources.ResourceException: 
Resource /org.eclipse.jdt.core.tests.model/workspace/Formatter does not exist.
        at org.eclipse.core.internal.resources.Resource.checkExists
(Resource.java:297)
        at org.eclipse.core.internal.resources.Resource.checkAccessible
(Resource.java:169)
        at org.eclipse.core.internal.resources.Folder.assertCreateRequirements
(Folder.java:26)
        at org.eclipse.core.internal.resources.Folder.create(Folder.java:84)
        at org.eclipse.core.internal.resources.Folder.create(Folder.java:114)
        at org.eclipse.team.internal.ccvs.core.resources.EclipseFolder.mkdir
(EclipseFolder.java:115)
        at 
org.eclipse.team.internal.ccvs.core.resources.CVSRemoteSyncElement.makeInSync
(CVSRemoteSyncElement.java:250)
        at org.eclipse.team.internal.ccvs.ui.sync.MergeAction.makeInSync
(MergeAction.java:352)
        at org.eclipse.team.internal.ccvs.ui.sync.UpdateSyncAction.run
(UpdateSyncAction.java:277)
        at org.eclipse.team.internal.ccvs.ui.sync.MergeAction$1.execute
(MergeAction.java:125)
        at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run
(WorkspaceModifyOperation.java:71)
        at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1555)
        at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1572)
        at org.eclipse.ui.actions.WorkspaceModifyOperation.run
(WorkspaceModifyOperation.java:85)
        at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.core.resources 4 368 Oct 22, 2003 17:04:44.867
!MESSAGE Resource /org.eclipse.jdt.core.tests.model/workspace/Formatter does 
not exist.


I think you should be able to reproduce by constructing a 3.0M4 self-hosted 
workspace, then synchronize jdt/core with HEAD and grab all incoming changes 
and say 'update'. CC'ed Olivier which can help you for the setup.
I have tried to peform the scenario you mentioned as best I can but as of yet 
am unable to reproduce the problem. Will keep trying.
A code ispection has revealed that a problem could occur if one of the parent 
folders was ignored. You wouldn't happen to have "formatter" in your global 
ignore list would you?
No, definitely not. I can't think of anything special I did... weird... replace 
with HEAD contents worked fine, but synchronize/update did not. I questionned 
other teammates, and I seem to be the only one seeing this behavior...
This one doesn't seem reproducable. There are a few things we can do to make 
the code more rebust (i.e. avoid the NPE) but these can wait until after M5


*** This bug has been marked as a duplicate of 48352 ***</WithStack>
    <WithOutStack>Build 3.0M4

Attempting to synchronize a self-hosting workspace using new sync view, I got 
several failures, leaving the sync view with stale information and unable to 
perform updates from there on.

Entries in log:
!ENTRY org.eclipse.core.runtime 4 2 Oct 18, 2003 09:14:57.942
!MESSAGE An internal error occurred during: "Performing CVS update on 987 
resources.".
!STACK 0
!ENTRY org.eclipse.core.runtime 4 2 Oct 18, 2003 13:03:51.770
!MESSAGE An internal error occurred during: "Team refresh 1 folders for CVS 
Workspace".
!STACK 0
Can you give a description of what was happening when this occured. For 
instance, on of the exceptions indicates that there were 987 incoming changes. 
Where there that many changes or is the count off? Any other details you can 
provide would be helpful.
Also, could this have been related to the cvsup problems?
I was working on the master repo. I was synchronizing workspace with 
repository, and there was likely numerous changes since Olivier had released 
the new formatter regression tests. I had only incoming changes to apply.

This workspace has been working fine for the last month, I hadn't updated the 
SDK recently, nothing really different in this session. Synchronization was the 
only failing scenario, I recall I have tried it twice and both attempts got 
doomed.

After shutting down and restarting, it worked fine after forcing a replace with 
latest.

Given that the cvsup did fail at the same time (i.e. Olivier's changes were 
omitted from the nightly build), there is a possibility that it is related. We 
should test synching against a project with folders deleted remotely just to 
see if we get similar behavior.
CVSup is out of the loop. I was working against the master repo.

On a different machine, it occurred to me again when synchronizing. This time 
the log contained:

!ENTRY org.eclipse.team.cvs.ui 4 0 Oct 22, 2003 17:04:44.867
!MESSAGE Problem creating 
folder: /org.eclipse.jdt.core.tests.model/workspace/Formatter/test226. 
Resource /org.eclipse.jdt.core.tests.model/workspace/Formatter does not exist.
!STACK 1
org.eclipse.team.internal.ccvs.core.CVSException[368]: 
!ENTRY org.eclipse.team.cvs.core 4 368 Oct 22, 2003 17:04:44.867
!MESSAGE Problem creating 
folder: /org.eclipse.jdt.core.tests.model/workspace/Formatter/test226. 
Resource /org.eclipse.jdt.core.tests.model/workspace/Formatter does not exist.
!STACK 1

!ENTRY org.eclipse.core.resources 4 368 Oct 22, 2003 17:04:44.867
!MESSAGE Resource /org.eclipse.jdt.core.tests.model/workspace/Formatter does 
not exist.


I think you should be able to reproduce by constructing a 3.0M4 self-hosted 
workspace, then synchronize jdt/core with HEAD and grab all incoming changes 
and say 'update'. CC'ed Olivier which can help you for the setup.
I have tried to peform the scenario you mentioned as best I can but as of yet 
am unable to reproduce the problem. Will keep trying.
A code ispection has revealed that a problem could occur if one of the parent 
folders was ignored. You wouldn't happen to have "formatter" in your global 
ignore list would you?
No, definitely not. I can't think of anything special I did... weird... replace 
with HEAD contents worked fine, but synchronize/update did not. I questionned 
other teammates, and I seem to be the only one seeing this behavior...
This one doesn't seem reproducable. There are a few things we can do to make 
the code more rebust (i.e. avoid the NPE) but these can wait until after M5


*** This bug has been marked as a duplicate of 48352 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45155" />
    <CreationDate amount="2003-10-18 10:22:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>"Create method" quickfix better return type guessing [quick fix]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="13" end="38" />
        <code>assertFalse(newMethod());</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hi.
If I do

assertFalse(newMethod());

and use quickfix to create newMethod, the method is created with
a return type of String.
I suppose this is due to assertFalse being overloaded with

assertFalse(boolean)
assertFalse(String, boolean)

In this case I am calling assertFalse with just one parameter so I think it
should be possibile to choose the correct version of assertFalse to get the
return type from to use for newMethod.

Thanks
Move to JDT/UI for comment.
I'm using methodDeclarion.resolveBinding on 'assertFalse': It returns a guess of
a IMethodBinding as the parameters can't be resolved. (ASTResolving.java, line 91)

In this case it returns the binidng for 'assertFalse(String, boolean)', but
'assertFalse(boolean)' would make more sense.

moving to jdt.core
Deferred post 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Hi.
If I do

assertFalse(newMethod());

and use quickfix to create newMethod, the method is created with
a return type of String.
I suppose this is due to assertFalse being overloaded with

assertFalse(boolean)
assertFalse(String, boolean)

In this case I am calling assertFalse with just one parameter so I think it
should be possibile to choose the correct version of assertFalse to get the
return type from to use for newMethod.

Thanks
Move to JDT/UI for comment.
I'm using methodDeclarion.resolveBinding on 'assertFalse': It returns a guess of
a IMethodBinding as the parameters can't be resolved. (ASTResolving.java, line 91)

In this case it returns the binidng for 'assertFalse(String, boolean)', but
'assertFalse(boolean)' would make more sense.

moving to jdt.core
Deferred post 3.0
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45156" />
    <CreationDate amount="2003-10-18 11:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Source formatter as independent plugin?</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Currently I believe the source formatter is integrated into the JDT. Would it 
be possible to remove it to its own plugin? This would make the process of 
working on it much easier since you would not need to download the entire JDT 
to work with the formatter. 

Would there be any problems or objections to doing this?
Addendum: The creation of a general "file formatter" architecture would be 
even better. Then other developers can write formatters for other types of 
files and plug them into eclipse.
later
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Currently I believe the source formatter is integrated into the JDT. Would it 
be possible to remove it to its own plugin? This would make the process of 
working on it much easier since you would not need to download the entire JDT 
to work with the formatter. 

Would there be any problems or objections to doing this?
Addendum: The creation of a general "file formatter" architecture would be 
even better. Then other developers can write formatters for other types of 
files and plug them into eclipse.
later
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45157" />
    <CreationDate amount="2003-10-18 11:28:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Source Formatter: Clear all Blank lines needs to have the ability to set a number of lines to keep.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="class">
        <location start="376" end="555" />
        <code>public class foo {


  /** some attribute. */
  public int someAttr = 0;

  
  public foo() {
    // intitialize
    someAttr = -1;

    for (int idx=0; idx&lt;1000;idx++) 
    }
  }</code>
      </source_code>
      <source_code type="class">
        <location start="601" end="778" />
        <code>public class foo {

  /** some attribute. */
  public int someAttr = 0;
  
  public foo() {
    // intitialize
    someAttr = -1;

    for (int idx=0; idx&lt;1000;idx++) 
    }
  }</code>
      </source_code>
      <source_code type="class">
        <location start="824" end="996" />
        <code>public class foo {
  /** some attribute. */
  public int someAttr = 0;
  public foo() {
    // intitialize
    someAttr = -1;
    for (int idx=0; idx&lt;1000;idx++) 
    }
  }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Ooops ... Wrong button ... here is the description: 

in the formatter there is a checkbox on the New Lines tab that says clear all 
blank lines. I would like this changed so that you can clear all blank lines 
above a certain value. So If I set "keep" to 1 then anywhere the formatter 
encounters 2 blank lines in a row it will compress them to one blank line. 


Input: 

public class foo {


  /** some attribute. */
  public int someAttr = 0;

  
  public foo() {
    // intitialize
    someAttr = -1;

    for (int idx=0; idx&lt;1000;idx++) 
    }
  }
}

With code keep blank lines = 1 it is .. 

public class foo {

  /** some attribute. */
  public int someAttr = 0;
  
  public foo() {
    // intitialize
    someAttr = -1;

    for (int idx=0; idx&lt;1000;idx++) 
    }
  }
}

With code keep blank lines = 0 it is .. 

public class foo {
  /** some attribute. */
  public int someAttr = 0;
  public foo() {
    // intitialize
    someAttr = -1;
    for (int idx=0; idx&lt;1000;idx++) 
    }
  }
}


This is doable when the new code formatter preference page is ready.
Could you please check the new formatter preferences page in the latest
integration build and let me know if it works as expected?
Then I can close it.
This is done by changing the values for blank lines using the new code formatter
preference page.
Fixed in HEAD.
Verified for 3.0M6</WithStack>
    <WithOutStack>Ooops ... Wrong button ... here is the description: 

in the formatter there is a checkbox on the New Lines tab that says clear all 
blank lines. I would like this changed so that you can clear all blank lines 
above a certain value. So If I set "keep" to 1 then anywhere the formatter 
encounters 2 blank lines in a row it will compress them to one blank line. 


Input: 

public class foo {


  /** some attribute. */
  public int someAttr = 0;

  
  public foo() {
    // intitialize
    someAttr = -1;

    for (int idx=0; idx&lt;1000;idx++) 
    }
  }
}

With code keep blank lines = 1 it is .. 

public class foo {

  /** some attribute. */
  public int someAttr = 0;
  
  public foo() {
    // intitialize
    someAttr = -1;

    for (int idx=0; idx&lt;1000;idx++) 
    }
  }
}

With code keep blank lines = 0 it is .. 

public class foo {
  /** some attribute. */
  public int someAttr = 0;
  public foo() {
    // intitialize
    someAttr = -1;
    for (int idx=0; idx&lt;1000;idx++) 
    }
  }
}


This is doable when the new code formatter preference page is ready.
Could you please check the new formatter preferences page in the latest
integration build and let me know if it works as expected?
Then I can close it.
This is done by changing the values for blank lines using the new code formatter
preference page.
Fixed in HEAD.
Verified for 3.0M6</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45158" />
    <CreationDate amount="2003-10-18 11:37:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Source Formatter: Formatter preferences needs to have Better tab organization.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Currently the formatter preferences need to have a bit better tab 
organization. Right now the tab for "new lines" is a bit confusing since there 
are settinggs for brace style configuration there as well as wrapping 
configuration. Perhaps the structure should be revised to be a bit more 
intuitive with an expanded feature set.
Move to JDT/UI.
For M5 we are completely recoding the preference page.
to be closed when we have the new fomatter page
The new page is available (Java -&gt; Work in progress).</WithStack>
    <WithOutStack>Currently the formatter preferences need to have a bit better tab 
organization. Right now the tab for "new lines" is a bit confusing since there 
are settinggs for brace style configuration there as well as wrapping 
configuration. Perhaps the structure should be revised to be a bit more 
intuitive with an expanded feature set.
Move to JDT/UI.
For M5 we are completely recoding the preference page.
to be closed when we have the new fomatter page
The new page is available (Java -&gt; Work in progress).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45159" />
    <CreationDate amount="2003-10-18 11:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Source Formatter: Wrapping needs to be intelligent.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="12">
      <source_code type="functioncall">
        <location start="499" end="511" />
        <code>.yMeth();</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2033" end="2101" />
        <code>// - 1 ------- 2 ------- 3 ------- 4 ------- 5 ------- 6 ------- 7</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2101" end="2171" />
        <code>// 89012345678901234567890123456789012345678901234567890123456789012</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2426" end="2494" />
        <code>// - 1 ------- 2 ------- 3 ------- 4 ------- 5 ------- 6 ------- 7</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="2494" end="2564" />
        <code>// 89012345678901234567890123456789012345678901234567890123456789012</code>
      </source_code>
      <source_code type="functiondef">
        <location start="2564" end="2949" />
        <code>public void testPersonEquality() {
		try {
			Person p1c = cloneNewP1();
			Assert
					.assertEquals(
							"Two person objects with same name and pno are not equal",
							p1, p1c);
		} catch (MalformedNameException e) {
			Assert.fail("Unexpected MalformedNameException");
		} catch (WrongPersonNumberException e) {
			Assert.fail("Unexpected WrongPersonNumberException");
		}
	}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="3035" end="3103" />
        <code>// - 1 ------- 2 ------- 3 ------- 4 ------- 5 ------- 6 ------- 7</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="3103" end="3173" />
        <code>// 89012345678901234567890123456789012345678901234567890123456789012</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3487" end="3570" />
        <code>} catch (WrongPersonNumberException e2) { 
				// ignore expected exception
			}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3613" end="3707" />
        <code>} catch (WrongPersonNumberException e2) {// ignore expected
													 // exception
			}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3760" end="3863" />
        <code>} catch (WrongPersonNumberException e2) { // ignore
													  // expected
				// exception
			}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3909" end="4001" />
        <code>} catch (WrongPersonNumberException e2) { // ignore
				// expected
				// exception
			}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The in addition to settign line length, the user should be able to set how to 
wrap things similarly to the way jalopy does now (but better naturally. =)) 
You should be able to tell the formatter to wrap the extends keyword down if 
there are more extends types than can fit on a line and same with throws and 
implmenets. 

In addition the wrapping of method call chains should be configurable. 

I should be able to enter:

foo.bar().xmeth().yMeth(); 

and come out with: 

foo.bar()
   .xmeth()
   .yMeth();

In addition the parameters should be able to wrap if exceeded and deep indent.
Another nice option would be to indicate that the code formatter should be less
wasteful of the vertical space. At the moment, following is the result of the
code formatter:

  private static final String[] ACCEPTABLE_NAMES =
    new String[] {
      "ABIS",
      "ING",
      "DEXIA",
      "Fortis",
      "Nationale Bank België",
      "Studio100" };

I would like to see the following:

  private static final String[] ACCEPTABLE_NAMES =
    new String[] {"ABIS", "ING", "DEXIA", "Fortis","Nationale Bank België",
                  "Studio100"};

or something very similar to it.

Eclipse version: 3.0M4 on Win 2000 (Build id: 200310101454)
Did you enable the new formatter?
Go to Preferences&gt;Java&gt;Work in progress.
&lt;blush&gt;Ooops&lt;/blush&gt;

This is the result with the new formatter:

  private static final String[] ACCEPTABLE_NAMES = new String[]{
    "ABIS", "ING", "DEXIA", "Fortis", "Nationale Bank België",
    "Studio100"};

Incredible work. Thanks and sorry for disturbance. :-)
Ok to close then?
I don't know about Robert's request, but for me most of it seems solved. I will
check some more during the weekend (found a couple of things/details and want to
bundle them together as test cases).
Here are some tests I did and which turned out strange results. All line lengths
are set to 72 characters (print margin, max. code line length, max. comment line
length). Tab length is 4.

First a case where we go over the line length:
	// - 1 ------- 2 ------- 3 ------- 4 ------- 5 ------- 6 ------- 7
	// 89012345678901234567890123456789012345678901234567890123456789012
	private static final String[] UNACCEPTABLE_FIRST_NAMES = new String[]{
			"Paul1", "1Paul", "-Paul", "Paul-", "2", "Paul@some"};

Here, we clearly pass the indicated line length and, furthermore, the formatting
of the assertEquals method is a bit weird.
	// - 1 ------- 2 ------- 3 ------- 4 ------- 5 ------- 6 ------- 7
	// 89012345678901234567890123456789012345678901234567890123456789012
	public void testPersonEquality() {
		try {
			Person p1c = cloneNewP1();
			Assert
					.assertEquals(
							"Two person objects with same name and pno are not equal",
							p1, p1c);
		} catch (MalformedNameException e) {
			Assert.fail("Unexpected MalformedNameException");
		} catch (WrongPersonNumberException e) {
			Assert.fail("Unexpected WrongPersonNumberException");
		}
	}

A case where the line is cut on character before the indicated maximum line length:
	// - 1 ------- 2 ------- 3 ------- 4 ------- 5 ------- 6 ------- 7
	// 89012345678901234567890123456789012345678901234567890123456789012
	String[] s = {"18", "bb", "cc", "dd", "ee", "ff", "gg", "hh", "ii",
			"jj", "kk", "ll", "mm"};
	String[] st = {"19", "bb", "cc", "dd", "ee", "ff", "gg", "hh",
			"ii", "jj", "kk", "ll", "mm"};

Sometimes, code is touched which does not need to be formatted. The unformatted
code (remember: tab is 4 characters):
			} catch (WrongPersonNumberException e2) { 
				// ignore expected exception
			}

The formatted code (1st time formatted):
			} catch (WrongPersonNumberException e2) {// ignore expected
													 // exception
			}
The formatted code (formatted above a second time):
			} catch (WrongPersonNumberException e2) { // ignore
													  // expected
				// exception
			}
The formatted code (formatted a third time):
			} catch (WrongPersonNumberException e2) { // ignore
				// expected
				// exception
			}
After this third time, the formatting stays stable. With one indentation level
less, it does not jump around so much.

I hope I'm not veering to much off topic here.
Reconsider post 3.0.
*** Bug 65974 has been marked as a duplicate of this bug. ***
This can be done with wrap on columns but it doesnt work because of bug number 
49896. If tabs are on, nothing lines up. Reopened in accordance with re-
opening 49896.
Deferring post 3.1
Deferring BASIC and CORE formatting code is not a good idea. 
The focus right now is on performance. Nothing prevents you from providing patches.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>The in addition to settign line length, the user should be able to set how to 
wrap things similarly to the way jalopy does now (but better naturally. =)) 
You should be able to tell the formatter to wrap the extends keyword down if 
there are more extends types than can fit on a line and same with throws and 
implmenets. 

In addition the wrapping of method call chains should be configurable. 

I should be able to enter:

foo.bar().xmeth().yMeth(); 

and come out with: 

foo.bar()
   .xmeth()
   .yMeth();

In addition the parameters should be able to wrap if exceeded and deep indent.
Another nice option would be to indicate that the code formatter should be less
wasteful of the vertical space. At the moment, following is the result of the
code formatter:

  private static final String[] ACCEPTABLE_NAMES =
    new String[] {
      "ABIS",
      "ING",
      "DEXIA",
      "Fortis",
      "Nationale Bank België",
      "Studio100" };

I would like to see the following:

  private static final String[] ACCEPTABLE_NAMES =
    new String[] {"ABIS", "ING", "DEXIA", "Fortis","Nationale Bank België",
                  "Studio100"};

or something very similar to it.

Eclipse version: 3.0M4 on Win 2000 (Build id: 200310101454)
Did you enable the new formatter?
Go to Preferences&gt;Java&gt;Work in progress.
&lt;blush&gt;Ooops&lt;/blush&gt;

This is the result with the new formatter:

  private static final String[] ACCEPTABLE_NAMES = new String[]{
    "ABIS", "ING", "DEXIA", "Fortis", "Nationale Bank België",
    "Studio100"};

Incredible work. Thanks and sorry for disturbance. :-)
Ok to close then?
I don't know about Robert's request, but for me most of it seems solved. I will
check some more during the weekend (found a couple of things/details and want to
bundle them together as test cases).
Here are some tests I did and which turned out strange results. All line lengths
are set to 72 characters (print margin, max. code line length, max. comment line
length). Tab length is 4.

First a case where we go over the line length:
	// - 1 ------- 2 ------- 3 ------- 4 ------- 5 ------- 6 ------- 7
	// 89012345678901234567890123456789012345678901234567890123456789012
	private static final String[] UNACCEPTABLE_FIRST_NAMES = new String[]{
			"Paul1", "1Paul", "-Paul", "Paul-", "2", "Paul@some"};

Here, we clearly pass the indicated line length and, furthermore, the formatting
of the assertEquals method is a bit weird.
	// - 1 ------- 2 ------- 3 ------- 4 ------- 5 ------- 6 ------- 7
	// 89012345678901234567890123456789012345678901234567890123456789012
	public void testPersonEquality() {
		try {
			Person p1c = cloneNewP1();
			Assert
					.assertEquals(
							"Two person objects with same name and pno are not equal",
							p1, p1c);
		} catch (MalformedNameException e) {
			Assert.fail("Unexpected MalformedNameException");
		} catch (WrongPersonNumberException e) {
			Assert.fail("Unexpected WrongPersonNumberException");
		}
	}

A case where the line is cut on character before the indicated maximum line length:
	// - 1 ------- 2 ------- 3 ------- 4 ------- 5 ------- 6 ------- 7
	// 89012345678901234567890123456789012345678901234567890123456789012
	String[] s = {"18", "bb", "cc", "dd", "ee", "ff", "gg", "hh", "ii",
			"jj", "kk", "ll", "mm"};
	String[] st = {"19", "bb", "cc", "dd", "ee", "ff", "gg", "hh",
			"ii", "jj", "kk", "ll", "mm"};

Sometimes, code is touched which does not need to be formatted. The unformatted
code (remember: tab is 4 characters):
			} catch (WrongPersonNumberException e2) { 
				// ignore expected exception
			}

The formatted code (1st time formatted):
			} catch (WrongPersonNumberException e2) {// ignore expected
													 // exception
			}
The formatted code (formatted above a second time):
			} catch (WrongPersonNumberException e2) { // ignore
													  // expected
				// exception
			}
The formatted code (formatted a third time):
			} catch (WrongPersonNumberException e2) { // ignore
				// expected
				// exception
			}
After this third time, the formatting stays stable. With one indentation level
less, it does not jump around so much.

I hope I'm not veering to much off topic here.
Reconsider post 3.0.
*** Bug 65974 has been marked as a duplicate of this bug. ***
This can be done with wrap on columns but it doesnt work because of bug number 
49896. If tabs are on, nothing lines up. Reopened in accordance with re-
opening 49896.
Deferring post 3.1
Deferring BASIC and CORE formatting code is not a good idea. 
The focus right now is on performance. Nothing prevents you from providing patches.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45160" />
    <CreationDate amount="2003-10-18 11:45:00 -0400" />
    <DupId amount="49896" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Source Formatter: Indent using tabs should have qualifier option to use tabs only for leading indents.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="101" end="303" />
        <code>public class foo {
    public void someMethod(final int xvalue,
                           final int yvalue,
                           final String name,
                           final String key);
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>if I have code that is indented using tabs then my method parameters lists 
might not line up; eg: 

public class foo {
    public void someMethod(final int xvalue,
                           final int yvalue,
                           final String name,
                           final String key);
}

If my tabs are set to 4 spaces and someone else sets them to 8 spaces then the 
indentation of my parameters wont line up. Instead, the formatter should only 
use tabs for the leading indents. This means there would be one tab and many 
spaces for the lines with the parameters in my example.
Are you using a fix size font to look at the result?
Will reconsider post 3.0.
Reopening to mark duplicate.


*** This bug has been marked as a duplicate of 49896 ***</WithStack>
    <WithOutStack>if I have code that is indented using tabs then my method parameters lists 
might not line up; eg: 

public class foo {
    public void someMethod(final int xvalue,
                           final int yvalue,
                           final String name,
                           final String key);
}

If my tabs are set to 4 spaces and someone else sets them to 8 spaces then the 
indentation of my parameters wont line up. Instead, the formatter should only 
use tabs for the leading indents. This means there would be one tab and many 
spaces for the lines with the parameters in my example.
Are you using a fix size font to look at the result?
Will reconsider post 3.0.
Reopening to mark duplicate.


*** This bug has been marked as a duplicate of 49896 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45161" />
    <CreationDate amount="2003-10-18 11:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Source Formatter: When making preference changes, the editor preview pane should stay scrolled to where the user had it. [code manipulation] [formatter]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Right now if you change a formatter setting, the editor preview pane moves and 
scrolls, sometimes quite a bit. Instead it should remember the scroll position 
in relation to the file (ie the content of the line the cursor is on) and 
attempt to maintain the position. This would make it much easier to see the 
impact of the editor changes.
Move to JDT/UI.
Martin, should be considered by the new preference page.
Fixed with the new formatter preference page (enable "Use new formatter" in Java
-&gt; Work in progress), starting from I20031202.</WithStack>
    <WithOutStack>Right now if you change a formatter setting, the editor preview pane moves and 
scrolls, sometimes quite a bit. Instead it should remember the scroll position 
in relation to the file (ie the content of the line the cursor is on) and 
attempt to maintain the position. This would make it much easier to see the 
impact of the editor changes.
Move to JDT/UI.
Martin, should be considered by the new preference page.
Fixed with the new formatter preference page (enable "Use new formatter" in Java
-&gt; Work in progress), starting from I20031202.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45162" />
    <CreationDate amount="2003-10-18 11:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Source Formatter: Customizable headers and footers using template variables.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>You should be able to customize the formatter to use a custom header and 
footer and to remove old headers and footers. I use this to put the license 
description along with some file information (such as file name and package 
and encoding) in the header. Whenever I format a new file, it should insert 
the header. Whenever i format a file that already has a header, it should 
remove that header in preference to my header. 

The header configuration should be on its own tab with the options to add some 
number of blank line (enter in a spinner or text field) after the header and 
before the footer.
From my point of view, this has nothing to do with code formatting. Code
formatters should not change the source code. They should simply rearrange it.
Actually I disagree. You should see how Jalopy uses headers. It allows you to 
do really cool things such as attach license notes and make SURE they stay 
there. Headers are not part of the "source" per se. They are merely .. well .. 
headers. Things that are standard and developers shouldnt be messing with 
them. 
In Eclipse, headers can be handled by setting the type comment in the template 
section. It is not because Jalopy is handling headers that all code formatters 
have to do the same thing.

That only works if you create a new type using the new -&gt; class approach. That 
does NOT work if the class was created outside of eclipse or by another user 
using a different template (such as a new junior developer who doesnt have 
that information).

In addition, the templates are only applied at generation time so that if a 
user accidentally makes a mistake and changes them, you will never know. 

Finally, headers can be embedded with variables such as $fileName$ $package$ 
(those 2 are for jalopy) that change if you move or rename the file. With a 
code formatter these are automatically updated. 

Overall if you want to implement consistent headers and footers, templates are 
the way to go.
I mean templates in the code formatter. 
*** Bug 49898 has been marked as a duplicate of this bug. ***
The code formatter doesn't change the code (add or remove tokens).
This should be addressed by a separate tool.
Close as WONTFIX</WithStack>
    <WithOutStack>You should be able to customize the formatter to use a custom header and 
footer and to remove old headers and footers. I use this to put the license 
description along with some file information (such as file name and package 
and encoding) in the header. Whenever I format a new file, it should insert 
the header. Whenever i format a file that already has a header, it should 
remove that header in preference to my header. 

The header configuration should be on its own tab with the options to add some 
number of blank line (enter in a spinner or text field) after the header and 
before the footer.
From my point of view, this has nothing to do with code formatting. Code
formatters should not change the source code. They should simply rearrange it.
Actually I disagree. You should see how Jalopy uses headers. It allows you to 
do really cool things such as attach license notes and make SURE they stay 
there. Headers are not part of the "source" per se. They are merely .. well .. 
headers. Things that are standard and developers shouldnt be messing with 
them. 
In Eclipse, headers can be handled by setting the type comment in the template 
section. It is not because Jalopy is handling headers that all code formatters 
have to do the same thing.

That only works if you create a new type using the new -&gt; class approach. That 
does NOT work if the class was created outside of eclipse or by another user 
using a different template (such as a new junior developer who doesnt have 
that information).

In addition, the templates are only applied at generation time so that if a 
user accidentally makes a mistake and changes them, you will never know. 

Finally, headers can be embedded with variables such as $fileName$ $package$ 
(those 2 are for jalopy) that change if you move or rename the file. With a 
code formatter these are automatically updated. 

Overall if you want to implement consistent headers and footers, templates are 
the way to go.
I mean templates in the code formatter. 
*** Bug 49898 has been marked as a duplicate of this bug. ***
The code formatter doesn't change the code (add or remove tokens).
This should be addressed by a separate tool.
Close as WONTFIX</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45163" />
    <CreationDate amount="2003-10-18 11:51:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>The warning "Local variable declaration hides another field or variable" should not be reported for "init"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The warning can be silenced for constructors and setters, but using an empty
constructor and an init method is such a common idiom that the compiler should
have a switch to turn off the warning for it.

I don't want to turn off the warning as it helps catching errors, but when I
turn it on I get too many false positives.

Thank you.
Interesting, will queue for later if this appears to be a common request.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>The warning can be silenced for constructors and setters, but using an empty
constructor and an init method is such a common idiom that the compiler should
have a switch to turn off the warning for it.

I don't want to turn off the warning as it helps catching errors, but when I
turn it on I get too many false positives.

Thank you.
Interesting, will queue for later if this appears to be a common request.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45164" />
    <CreationDate amount="2003-10-18 11:56:00 -0400" />
    <DupId amount="44443" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Performance degradation after Upgrade from Integration to 3.0 M4</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>After moving from the last working integration build (before the M4 release) to
3.0M4, the system became very irresponsive while debugging. 
Moved back to yhe integration build and it started behaving fine. I am worried
that the M4 release has introduced some builds that keep happening in the
backgroud causing this grief. 
I did try to change the machine speed scroller from fast to slow but that did
not help either.
I have moved back and forth between the integration  buil and the release and
the performance changes are obvious every time.
Reverted back to the integrtaion build and have full control on the platform.

System 600 Mhz 384 MB ram.
JDK 1.4.2 on  windows 2000.
Are there specific activities that seem slow, or is it just a general slowness?
 When things are slow, do you notice if the busy indicator in the lower left
corner of the screen is moving?  Is it freezing for long periods without
redrawing the screen, or is it a more uniform degradation?  The more details you
give, the greater chance we have of identifying the problem.

Also, if you work with the task or problem view visible, try turning off its
filters (for example filtering based on selection or working set).  See if this
improves performance.

Can you also give us the build Id of the last integration build that worked ok?
 This information is available under help &gt; about.
Please comment on whether turning off task/problem view filtering fixes the
slowness. I suspect this is another dup of bug 44443.
Version: 3.0.0
Build id: 200309170800
This was the last working integration build before M4.
Debugging / stepping through code became painstakingly slow and using the hot
code replace made it worse. Saartup  of Running the application in debug mode
would take really long to start. 
I deleted the class fiels and built the project again to seeif that had any effect.
I reduced the file size and number fo files for the history that did not help
either.
The yellow progress indicator would keep on be doing something (i think it was
building).
I did have filters set up for the various projects....
Unfortunately I use eclipse as a primary development tool at work and do not
have the flexibility at the current time to go to M4.
Marking as dup of 4443.  If you move back to a newer build and have performance
problems that are unrelated to task list filtering, please reopen.

*** This bug has been marked as a duplicate of 44443 ***</WithStack>
    <WithOutStack>After moving from the last working integration build (before the M4 release) to
3.0M4, the system became very irresponsive while debugging. 
Moved back to yhe integration build and it started behaving fine. I am worried
that the M4 release has introduced some builds that keep happening in the
backgroud causing this grief. 
I did try to change the machine speed scroller from fast to slow but that did
not help either.
I have moved back and forth between the integration  buil and the release and
the performance changes are obvious every time.
Reverted back to the integrtaion build and have full control on the platform.

System 600 Mhz 384 MB ram.
JDK 1.4.2 on  windows 2000.
Are there specific activities that seem slow, or is it just a general slowness?
 When things are slow, do you notice if the busy indicator in the lower left
corner of the screen is moving?  Is it freezing for long periods without
redrawing the screen, or is it a more uniform degradation?  The more details you
give, the greater chance we have of identifying the problem.

Also, if you work with the task or problem view visible, try turning off its
filters (for example filtering based on selection or working set).  See if this
improves performance.

Can you also give us the build Id of the last integration build that worked ok?
 This information is available under help &gt; about.
Please comment on whether turning off task/problem view filtering fixes the
slowness. I suspect this is another dup of bug 44443.
Version: 3.0.0
Build id: 200309170800
This was the last working integration build before M4.
Debugging / stepping through code became painstakingly slow and using the hot
code replace made it worse. Saartup  of Running the application in debug mode
would take really long to start. 
I deleted the class fiels and built the project again to seeif that had any effect.
I reduced the file size and number fo files for the history that did not help
either.
The yellow progress indicator would keep on be doing something (i think it was
building).
I did have filters set up for the various projects....
Unfortunately I use eclipse as a primary development tool at work and do not
have the flexibility at the current time to go to M4.
Marking as dup of 4443.  If you move back to a newer build and have performance
problems that are unrelated to task list filtering, please reopen.

*** This bug has been marked as a duplicate of 44443 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45165" />
    <CreationDate amount="2003-10-18 12:20:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>refactoring variable to affect getter/setter</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="61" end="203" />
        <code>public class Blah 
{ 
	String blah; 
 
	// generated by eclipse 
	public String getBlah() 
	{ 
		return blah; 
	} 
 
	// setter accordingly 
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Hard to judge whether this is a bug or a feature request: 
 
public class Blah 
{ 
	String blah; 
 
	// generated by eclipse 
	public String getBlah() 
	{ 
		return blah; 
	} 
 
	// setter accordingly 
} 
 
Rename the String variable blah via eclipse' refactor method to whatever and 
getBlah() will return whatever but the method will still be named getBlah(), 
not getWhatever().
Functionality already implemented.</WithStack>
    <WithOutStack>Hard to judge whether this is a bug or a feature request: 
 
public class Blah 
{ 
	String blah; 
 
	// generated by eclipse 
	public String getBlah() 
	{ 
		return blah; 
	} 
 
	// setter accordingly 
} 
 
Rename the String variable blah via eclipse' refactor method to whatever and 
getBlah() will return whatever but the method will still be named getBlah(), 
not getWhatever().
Functionality already implemented.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45166" />
    <CreationDate amount="2003-10-18 12:35:00 -0400" />
    <DupId amount="39260" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="Other" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>refactoring: renaming package does not rename sub-packages</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Renaming the package 
 
	one.two 
 
to 
	 
	blah.two 
 
does not automatically rename 
 
	one.two.three 
 
to 
 
	blah.two.three
one.two and one.two.three are two different packages, so I don't see why the
renaming of one.two would have a side-effect on one.two.three.

?? 
 
Well, they are related to each other. Don't you think that e.g. 
java.nio.channel.spi has something to do with java.nio.channel? So, renaming 
java.nio.channel should affect java.nio.channel.spi as well... 
No, there is no notion of nested packages in Java.
In you example, java.nio.channel and java.nio.channel.spi are two completely
different packages. Types define with package visibility in java.nio.channel are
not visible inside java.nio.channel.spi.
Renaming one package doesn't mean that you want to rename the other one.

While comment #3 is technically correct, many (most?) developers organize their
packages as though the concept of nested packages did exist and as such, would
find the ability to rename "sub-packages" along with the parent package very
useful.  I for one have spent WAY to much tediously renaming package after
package  one at a time, when I changed the name of a "parent" package.

Maybe make this behavior optional (a checkbox on the refactor dialog labeled
"rename sub-packages" if the selected element to rename is a package?) but it
definitely should at least exist, IMHO.

Exactly. Java defines the notion of package, and nested package may be related 
to each other, and be attempted to be refactored in one action.

Moving to UI which defines refactoring behavior. Extra option seems well 
indicated.


*** This bug has been marked as a duplicate of 39260 ***</WithStack>
    <WithOutStack>Renaming the package 
 
	one.two 
 
to 
	 
	blah.two 
 
does not automatically rename 
 
	one.two.three 
 
to 
 
	blah.two.three
one.two and one.two.three are two different packages, so I don't see why the
renaming of one.two would have a side-effect on one.two.three.

?? 
 
Well, they are related to each other. Don't you think that e.g. 
java.nio.channel.spi has something to do with java.nio.channel? So, renaming 
java.nio.channel should affect java.nio.channel.spi as well... 
No, there is no notion of nested packages in Java.
In you example, java.nio.channel and java.nio.channel.spi are two completely
different packages. Types define with package visibility in java.nio.channel are
not visible inside java.nio.channel.spi.
Renaming one package doesn't mean that you want to rename the other one.

While comment #3 is technically correct, many (most?) developers organize their
packages as though the concept of nested packages did exist and as such, would
find the ability to rename "sub-packages" along with the parent package very
useful.  I for one have spent WAY to much tediously renaming package after
package  one at a time, when I changed the name of a "parent" package.

Maybe make this behavior optional (a checkbox on the refactor dialog labeled
"rename sub-packages" if the selected element to rename is a package?) but it
definitely should at least exist, IMHO.

Exactly. Java defines the notion of package, and nested package may be related 
to each other, and be attempted to be refactored in one action.

Moving to UI which defines refactoring behavior. Extra option seems well 
indicated.


*** This bug has been marked as a duplicate of 39260 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45167" />
    <CreationDate amount="2003-10-18 13:23:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Source Formatter: Ability to choose a file to use for the preview.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>It would be cool if the user could choose a file to preview the result of the 
code formatting options.
This is a UI feature. Move to JDT/UI.
This will not happen. The file is tuned to have examples for all the 
preferences.</WithStack>
    <WithOutStack>It would be cool if the user could choose a file to preview the result of the 
code formatting options.
This is a UI feature. Move to JDT/UI.
This will not happen. The file is tuned to have examples for all the 
preferences.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45168" />
    <CreationDate amount="2003-10-18 19:30:00 -0400" />
    <DupId amount="44443" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Eclipse 3.0M4 perform exhausting operations (freeze) on incremental (small) builds</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>1. javaw.exe process consumed all (99.9) CPU for all time eclipse was hanging</Line>
          <Line>2. project size is quite big (&gt;5Mb of source code)</Line>
          <Line>3. any preference settings that could affect it (IMHO) was off (no decoration</Line>
          <Line>etc, in 3.0M4 machine performance was reported to be small - did not work, fast</Line>
          <Line>- did not work either)</Line>
          <Line>4. almost all compile warnings was on (switched from default value - "ignore")</Line>
          <Line>Try turning off filtering in the tasks and problems view to see if that speeds</Line>
          <Line>it up.  There is a recent bug causing filtering based on selection or working</Line>
          <Line>set to be very slow.</Line>
          <Line>John, thanks a lot - your workaround helps. Please correct me if I found wrong</Line>
          <Line>duplicated problem (#28162).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>OS: WinXP and Win2000
JDK: JRE1.4.1 and JRE1.4.2
Eclipse Version: all 3.0 (M1, M2, M3 and especially bad on M4)
PC: 800MHz+512MB, 2.5GHz+1GB
Works fine on 2.1 release.

After full upgrade (by erasing old version, leaving just workspace in separate
dir) and first full re-build any attempt to perform small modification (even
comments correction) and save cause to wait for few seconds (at least 15 seconds
in a best case scenario). Last attempt with 3.0M4 consume all OS resources and
lasted up to 5 minutes (I'm talking about incremental builds, since I've made
full re-build before). Had to revert to 2.1 release. 
I can provide any additional information
Helpful (IMHO) information
1. javaw.exe process consumed all (99.9) CPU for all time eclipse was hanging
2. project size is quite big (&gt;5Mb of source code)
3. any preference settings that could affect it (IMHO) was off (no decoration
etc, in 3.0M4 machine performance was reported to be small - did not work, fast
- did not work either)
4. almost all compile warnings was on (switched from default value - "ignore")
Try turning off filtering in the tasks and problems view to see if that speeds
it up.  There is a recent bug causing filtering based on selection or working
set to be very slow.
John, thanks a lot - your workaround helps. Please correct me if I found wrong
duplicated problem (#28162).

*** This bug has been marked as a duplicate of 28162 ***
Wrong dup.


*** This bug has been marked as a duplicate of 44443 ***</WithStack>
    <WithOutStack>OS: WinXP and Win2000
JDK: JRE1.4.1 and JRE1.4.2
Eclipse Version: all 3.0 (M1, M2, M3 and especially bad on M4)
PC: 800MHz+512MB, 2.5GHz+1GB
Works fine on 2.1 release.

After full upgrade (by erasing old version, leaving just workspace in separate
dir) and first full re-build any attempt to perform small modification (even
comments correction) and save cause to wait for few seconds (at least 15 seconds
in a best case scenario). Last attempt with 3.0M4 consume all OS resources and
lasted up to 5 minutes (I'm talking about incremental builds, since I've made
full re-build before). Had to revert to 2.1 release. 
I can provide any additional information
Helpful (IMHO) information
1. javaw.exe process consumed all (99.9) CPU for all time eclipse was hanging
2. project size is quite big (&gt;5Mb of source code)
3. any preference settings that could affect it (IMHO) was off (no decoration
etc, in 3.0M4 machine performance was reported to be small - did not work, fast
- did not work either)
4. almost all compile warnings was on (switched from default value - "ignore")
Try turning off filtering in the tasks and problems view to see if that speeds
it up.  There is a recent bug causing filtering based on selection or working
set to be very slow.
John, thanks a lot - your workaround helps. Please correct me if I found wrong
duplicated problem (#28162).

*** This bug has been marked as a duplicate of 28162 ***
Wrong dup.


*** This bug has been marked as a duplicate of 44443 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45169" />
    <CreationDate amount="2003-10-19 01:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Open type dialog does not show all types</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Build: 3.0 M4

I have org.eclipse.pde.ui and org.eclipse.pde.core checked out from CVS and 
all other plug-ins were imported as binary without links.

I opened the "Open type" dialog to open the Java 
class 'SchemaObjectPropertySource' from the pde.ui plug-in.  When typed in 
SchemaObjectProperty in the text field of the dialog, there were no matches.  
Even when I typed the entire name, there was still no match.
I will attach an image showing the dialog with 0 matches.  If you look at the 
tree in the package explorer view on the left, you will see that the type I'm 
looking for and was not found in the dialog is indeed in my workspace.
Created attachment 6475
missing type
Asking JDT/Core for comments. We are using the search engine to determine all 
available types.
This one can be closed.  There was a two-week period when my jdt core metadata 
was flaky.  Once I deleted the metadata and forced re-indexing, everything 
went back to normal.
Jerome - can you still try to reproduce in latest ? 
I see this all the time on the 20031023 build. I didn't do anything to mess up 
my metadata.
By the way, is there anything you can do from the workbench to make JDT reindex?
Nothing can be done from the workbench. You have to exit the workbench, go to 
the .metadata, delete the indexes and restart the workbench.

Do you have steps to reproduce the problem?
Please reopen if you have steps to reproduce the problem.
But... This bug still exists. It happens to me every day. It definitely doesn't 
"work". :-/
Just prove it :-) I've never seen it, so I need steps to reproduce.
I had the same problem as Jared for a two week-period.  Even Java search was 
giving me false results all the time.  Much like him, no one believed me :-)  
That is why I attached the screenshot.  That should be enough proof.  However, 
deleting my JDT core metadata and forcing it to re-index solved the problem

However, how did the metadata get corrupted in the first place? That is the 
real question.  It all seemed to happen to me from a fresh workspace 2 days 
prior to 3.0M4.
I can attach the appropriate file from my metadata if someone tells me which 
file is relevant.
Wassim, I cannot recall any change in this area before M4. It must be a bug 
that has always existed. Something you did made it appear.

Jared, the problem is not that I don't believe you :-) I'm sure that the 
current state of your metadata indicates that some types are missing. Attaching 
the index would not help us fix the problem. Also have you tried to delete the 
indexes as I mentioned in comment #7? Then restart your workspace (the indexes 
will be recomputed on the next search query) and try to note what steps lead to 
have missing types.</WithStack>
    <WithOutStack>Build: 3.0 M4

I have org.eclipse.pde.ui and org.eclipse.pde.core checked out from CVS and 
all other plug-ins were imported as binary without links.

I opened the "Open type" dialog to open the Java 
class 'SchemaObjectPropertySource' from the pde.ui plug-in.  When typed in 
SchemaObjectProperty in the text field of the dialog, there were no matches.  
Even when I typed the entire name, there was still no match.
I will attach an image showing the dialog with 0 matches.  If you look at the 
tree in the package explorer view on the left, you will see that the type I'm 
looking for and was not found in the dialog is indeed in my workspace.
Created attachment 6475
missing type
Asking JDT/Core for comments. We are using the search engine to determine all 
available types.
This one can be closed.  There was a two-week period when my jdt core metadata 
was flaky.  Once I deleted the metadata and forced re-indexing, everything 
went back to normal.
Jerome - can you still try to reproduce in latest ? 
I see this all the time on the 20031023 build. I didn't do anything to mess up 
my metadata.
By the way, is there anything you can do from the workbench to make JDT reindex?
Nothing can be done from the workbench. You have to exit the workbench, go to 
the .metadata, delete the indexes and restart the workbench.

Do you have steps to reproduce the problem?
Please reopen if you have steps to reproduce the problem.
But... This bug still exists. It happens to me every day. It definitely doesn't 
"work". :-/
Just prove it :-) I've never seen it, so I need steps to reproduce.
I had the same problem as Jared for a two week-period.  Even Java search was 
giving me false results all the time.  Much like him, no one believed me :-)  
That is why I attached the screenshot.  That should be enough proof.  However, 
deleting my JDT core metadata and forcing it to re-index solved the problem

However, how did the metadata get corrupted in the first place? That is the 
real question.  It all seemed to happen to me from a fresh workspace 2 days 
prior to 3.0M4.
I can attach the appropriate file from my metadata if someone tells me which 
file is relevant.
Wassim, I cannot recall any change in this area before M4. It must be a bug 
that has always existed. Something you did made it appear.

Jared, the problem is not that I don't believe you :-) I'm sure that the 
current state of your metadata indicates that some types are missing. Attaching 
the index would not help us fix the problem. Also have you tried to delete the 
indexes as I mentioned in comment #7? Then restart your workspace (the indexes 
will be recomputed on the next search query) and try to note what steps lead to 
have missing types.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45170" />
    <CreationDate amount="2003-10-19 03:35:00 -0400" />
    <DupId amount="43524" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.2" />
    <rep_platform amount="All" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Severe slowness and disable of basic operations</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I'm using Eclipe 2.1.2, CDT 1.2 release version, clearcase plugin(ibm) &amp; perl 
plugin.
After editing a c++ file I see an OutOfMemory exception in the background, the 
outline flickers and every operation ( save, copy, auto complete, etc. ) takes 
a long time. It looks as if there is a thread that enters an endless loop and 
consume cpu.
When moving to a new editor it loks as if there is no problem but the minute I 
start editing the new file the probelm starts again.
The reconciler, is being recalled too often.

Mark as duplicate of 43524

*** This bug has been marked as a duplicate of 43524 ***</WithStack>
    <WithOutStack>I'm using Eclipe 2.1.2, CDT 1.2 release version, clearcase plugin(ibm) &amp; perl 
plugin.
After editing a c++ file I see an OutOfMemory exception in the background, the 
outline flickers and every operation ( save, copy, auto complete, etc. ) takes 
a long time. It looks as if there is a thread that enters an endless loop and 
consume cpu.
When moving to a new editor it loks as if there is no problem but the minute I 
start editing the new file the probelm starts again.
The reconciler, is being recalled too often.

Mark as duplicate of 43524

*** This bug has been marked as a duplicate of 43524 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45171" />
    <CreationDate amount="2003-10-19 06:14:00 -0400" />
    <DupId amount="34940" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Crash when using Text control with GridLayout</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="11">
      <source_code type="import">
        <location start="455" end="494" />
        <code>import org.eclipse.swt.widgets.Display;</code>
      </source_code>
      <source_code type="import">
        <location start="495" end="532" />
        <code>import org.eclipse.swt.widgets.Shell;</code>
      </source_code>
      <source_code type="import">
        <location start="533" end="574" />
        <code>import org.eclipse.swt.layout.FillLayout;</code>
      </source_code>
      <source_code type="import">
        <location start="575" end="602" />
        <code>import org.eclipse.swt.SWT;</code>
      </source_code>
      <source_code type="import">
        <location start="603" end="639" />
        <code>import org.eclipse.swt.widgets.Text;</code>
      </source_code>
      <source_code type="import">
        <location start="640" end="681" />
        <code>import org.eclipse.swt.widgets.Composite;</code>
      </source_code>
      <source_code type="import">
        <location start="682" end="719" />
        <code>import org.eclipse.swt.widgets.Group;</code>
      </source_code>
      <source_code type="import">
        <location start="720" end="761" />
        <code>import org.eclipse.swt.layout.GridLayout;</code>
      </source_code>
      <source_code type="multicomment">
        <location start="762" end="927" />
        <code>/*
 * Created on 2003-okt-19
 *
 * To change the template for this generated file go to
 * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments
 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="928" end="1092" />
        <code>/**
 * @author nian
 *
 * To change the template for this generated type comment go to
 * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments
 */</code>
      </source_code>
      <source_code type="class">
        <location start="1093" end="1953" />
        <code>public class App
{

	public static void main(String[] args)
	{
		final Display display = new Display();
		final Shell shell = new Shell();
		shell.setLayout(new FillLayout());
		shell.setText("SWT Application");
		{
			final Group group = new Group(shell, SWT.NONE);
			group.setLayout(new GridLayout());
			{
				final Text text = new Text(group, SWT.BORDER);
// -----------------------------------
// This is the line which causes my JRE-to crash,
// also if a omit this line completely
// the JRE-would still crash. However, if
// I set the text to anything for example:
// 				text.setText("Some text");
// it would work...
//
				text.setText("");
//-----------------------------------
			}
		}
		// DESIGNER: Add controls before this line.
		shell.open();
		while (!shell.isDisposed())
		{
			if (!display.readAndDispatch())
				display.sleep();
		}
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I am developing a standalone SWT-application on Windows XP together with JRE-
1.4.2 (see error report for details).

When I put a Text control in a GroupBox with a GridLayout and either not 
setting the text or setting the text to "" with the setText-method (..setText
(""); my JRE crashes. When I use for example a FillLayout everything works, or 
if I set the text to something It also works. Please see snippet below for 
reproducing the error.

&lt;pre&gt;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.SWT;
import org.eclipse.swt.widgets.Text;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Group;
import org.eclipse.swt.layout.GridLayout;

/*
 * Created on 2003-okt-19
 *
 * To change the template for this generated file go to
 * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments
 */

/**
 * @author nian
 *
 * To change the template for this generated type comment go to
 * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments
 */
public class App
{

	public static void main(String[] args)
	{
		final Display display = new Display();
		final Shell shell = new Shell();
		shell.setLayout(new FillLayout());
		shell.setText("SWT Application");
		{
			final Group group = new Group(shell, SWT.NONE);
			group.setLayout(new GridLayout());
			{
				final Text text = new Text(group, SWT.BORDER);
// -----------------------------------
// This is the line which causes my JRE-to crash,
// also if a omit this line completely
// the JRE-would still crash. However, if
// I set the text to anything for example:
// 				text.setText("Some text");
// it would work...
//
				text.setText("");
//-----------------------------------
			}
		}
		// DESIGNER: Add controls before this line.
		shell.open();
		while (!shell.isDisposed())
		{
			if (!display.readAndDispatch())
				display.sleep();
		}
	}
}
&lt;/pre&gt;
Created attachment 6477
Error dumped by my JRE
This looks like bug 34940, which should be fixed in 2.1.1.  Using the same vm 
and eclipse 2.1.1 I can't reproduce the error you're seeing.  Is it possible 
that you're using Eclipse 2.1?

Marking report as duplicate of bug 34940.  If you download an Eclipse 3.0 build 
such as 3.0M4 and still see this problem on your end then please re-open the 
report.


*** This bug has been marked as a duplicate of 34940 ***</WithStack>
    <WithOutStack>I am developing a standalone SWT-application on Windows XP together with JRE-
1.4.2 (see error report for details).

When I put a Text control in a GroupBox with a GridLayout and either not 
setting the text or setting the text to "" with the setText-method (..setText
(""); my JRE crashes. When I use for example a FillLayout everything works, or 
if I set the text to something It also works. Please see snippet below for 
reproducing the error.

&lt;pre&gt;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.SWT;
import org.eclipse.swt.widgets.Text;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Group;
import org.eclipse.swt.layout.GridLayout;

/*
 * Created on 2003-okt-19
 *
 * To change the template for this generated file go to
 * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments
 */

/**
 * @author nian
 *
 * To change the template for this generated type comment go to
 * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments
 */
public class App
{

	public static void main(String[] args)
	{
		final Display display = new Display();
		final Shell shell = new Shell();
		shell.setLayout(new FillLayout());
		shell.setText("SWT Application");
		{
			final Group group = new Group(shell, SWT.NONE);
			group.setLayout(new GridLayout());
			{
				final Text text = new Text(group, SWT.BORDER);
// -----------------------------------
// This is the line which causes my JRE-to crash,
// also if a omit this line completely
// the JRE-would still crash. However, if
// I set the text to anything for example:
// 				text.setText("Some text");
// it would work...
//
				text.setText("");
//-----------------------------------
			}
		}
		// DESIGNER: Add controls before this line.
		shell.open();
		while (!shell.isDisposed())
		{
			if (!display.readAndDispatch())
				display.sleep();
		}
	}
}
&lt;/pre&gt;
Created attachment 6477
Error dumped by my JRE
This looks like bug 34940, which should be fixed in 2.1.1.  Using the same vm 
and eclipse 2.1.1 I can't reproduce the error you're seeing.  Is it possible 
that you're using Eclipse 2.1?

Marking report as duplicate of bug 34940.  If you download an Eclipse 3.0 build 
such as 3.0M4 and still see this problem on your end then please re-open the 
report.


*** This bug has been marked as a duplicate of 34940 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45172" />
    <CreationDate amount="2003-10-19 08:05:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Add Infos on Build, which Target is being build</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The Messages in the Log just show the make messages, would be useful to have at
least at the beginning a message if building Debug or Release Version. Something
like:

**** Building Debug Version ****

or 

**** Building Release Version ****

There could be also an changeable Menu Entry for "Build Project" and "Release
Project" like
"Build Project - Debug" &lt;--&gt; "Build Project - Release"


Also when selecting an target for Debugging, there should be the paths in the
Binary Selection Dialog. I never really know, if I select the Debug or the
Release Version, except when closing this dialog and in the Launch configuration
is the path written. But then I would have to select the target again, if my
first selection went wrong.
Seb,
  we need a component for the build manager

Reassign to the right dude.
I have added an information message to the build output console before the 
build starts about the type of build, the project being built, and the 
configuration that is selected. For now, I am going to treat this as fixed, 
even though the request seems to be a bit more involved (i.e. a UI menu 
element).</WithStack>
    <WithOutStack>The Messages in the Log just show the make messages, would be useful to have at
least at the beginning a message if building Debug or Release Version. Something
like:

**** Building Debug Version ****

or 

**** Building Release Version ****

There could be also an changeable Menu Entry for "Build Project" and "Release
Project" like
"Build Project - Debug" &lt;--&gt; "Build Project - Release"


Also when selecting an target for Debugging, there should be the paths in the
Binary Selection Dialog. I never really know, if I select the Debug or the
Release Version, except when closing this dialog and in the Launch configuration
is the path written. But then I would have to select the target again, if my
first selection went wrong.
Seb,
  we need a component for the build manager

Reassign to the right dude.
I have added an information message to the build output console before the 
build starts about the type of build, the project being built, and the 
configuration that is selected. For now, I am going to treat this as fixed, 
even though the request seems to be a bit more involved (i.e. a UI menu 
element).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45173" />
    <CreationDate amount="2003-10-19 11:36:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Source-&gt;Generate Delegate methods: Methods tree should be expanded when pressing "Select All"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="61" end="124" />
        <code>public class MyA implements A {
  private A a;
  private B b;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Suppose you an interface A and a class B.
Create this class:
public class MyA implements A {
  private A a;
  private B b;
}

Select "a" -&gt; Right Click -&gt; Source -&gt; Generate Delegate Methods
Select All
instead of having just A's method generated, I have both A and B's methods.

Took me a while to notice that B's methods were also selected when I 
pressed "Select All". It is advisable that that the tree of methods is expanded 
fully when pressing "Select All".
The tree is now expanded when the dialog pops up.</WithStack>
    <WithOutStack>Suppose you an interface A and a class B.
Create this class:
public class MyA implements A {
  private A a;
  private B b;
}

Select "a" -&gt; Right Click -&gt; Source -&gt; Generate Delegate Methods
Select All
instead of having just A's method generated, I have both A and B's methods.

Took me a while to notice that B's methods were also selected when I 
pressed "Select All". It is advisable that that the tree of methods is expanded 
fully when pressing "Select All".
The tree is now expanded when the dialog pops up.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45174" />
    <CreationDate amount="2003-10-19 12:08:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="GEF" />
    <component amount="GEF (MVC) [GEF 3.x / Zest 1.x]" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Logic Example]: Problems with creating overlapping connections</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1. Create a circuit.</Line>
          <Line>2. Create a connection from one pin at the top edge to another</Line>
          <Line>at the bottom edge (so far so good).</Line>
          <Line>3. Try creating another connection from the same source pin to the</Line>
          <Line>same target pin.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>1. Create a circuit.
2. Create a connection from one pin at the top edge to another
at the bottom edge (so far so good).
3. Try creating another connection from the same source pin to the
same target pin.

The second connection is created with a target handle at some random
location lying outside the circuit figure. See attached screenshot.
Created attachment 6478
Screenshot of the problem
Fixed - The second connection will not be permitted. The cursor will change to 
a unexecutable state when a target pin is hovered over that already has a 
connection.</WithStack>
    <WithOutStack>1. Create a circuit.
2. Create a connection from one pin at the top edge to another
at the bottom edge (so far so good).
3. Try creating another connection from the same source pin to the
same target pin.

The second connection is created with a target handle at some random
location lying outside the circuit figure. See attached screenshot.
Created attachment 6478
Screenshot of the problem
Fixed - The second connection will not be permitted. The cursor will change to 
a unexecutable state when a target pin is hovered over that already has a 
connection.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45175" />
    <CreationDate amount="2003-10-19 14:10:00 -0400" />
    <DupId amount="69881" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>org.eclipse.swt.custom.ScrolledComposite.needVScroll()</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="153" end="228" />
        <code>if (!expandHorizontal &amp;&amp; contentRect.height &gt; hostRect.height) return true;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="229" end="294" />
        <code>if (expandHorizontal &amp;&amp; minHeight &gt; hostRect.height) return true;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>In function:
org.eclipse.swt.custom.ScrolledComposite.needVScroll()

the next two lines look like copy and paste from the above function needHScroll():

if (!expandHorizontal &amp;&amp; contentRect.height &gt; hostRect.height) return true;
if (expandHorizontal &amp;&amp; minHeight &gt; hostRect.height) return true;


It seems that "expandHorizontal" must be replaced by "expandVertical".
Note that this is present in 2.x versions, too. 
Fixed for 3.1.  No plan to fix in 3.0.X or 2.X.

*** This bug has been marked as a duplicate of 69881 ***</WithStack>
    <WithOutStack>In function:
org.eclipse.swt.custom.ScrolledComposite.needVScroll()

the next two lines look like copy and paste from the above function needHScroll():

if (!expandHorizontal &amp;&amp; contentRect.height &gt; hostRect.height) return true;
if (expandHorizontal &amp;&amp; minHeight &gt; hostRect.height) return true;


It seems that "expandHorizontal" must be replaced by "expandVertical".
Note that this is present in 2.x versions, too. 
Fixed for 3.1.  No plan to fix in 3.0.X or 2.X.

*** This bug has been marked as a duplicate of 69881 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45176" />
    <CreationDate amount="2003-10-19 14:14:00 -0400" />
    <DupId amount="39260" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[refactor.move]/[refactor.rename]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>1)consider creating a wizard to move/rename multiple packages
source -&gt; destination [ ]-(checkbox) recusive, or with children
[add]
2)
when moving/renaming package name add [ ]-(checkbox) recusive, or with children
if you have
com.company.project.pak1
com.company.project.pak1.service
com.company.project.pak1.model
com.company.project.pak1.constants
com.company.project.pak1.api
com.company.project.pak1.api.permission
com.company.project.pak1.api.principal

and you want to renam pak1-&gt;pak10 you need to rename each of them
espetialy when renaming company - day work


*** This bug has been marked as a duplicate of 39260 ***
the bug that was marked duplicate is not actually mirroring all the 
functionality
recursive checkbox is only a small point it in
i was talking about a wizard, so you add multiple
source -&gt; destination packages
and perform refactoring only once

please also consider added a checkbox [deprecation class]
if you move the class all the sources  that are poining on it will be changed 
too
but product can have much more dependencies that thouse in the workbench
so when moving a class another class will be created wich will extend the 
previouse with deprecation comment
currently doing it by hands
also consider adding another source folder for deprecation classes
it is a good practise to produce "product_3.1.5.jar" 
and "product_3.1.5_deprecation.jar", wich will contain all deprecated classes

didn't want to add this comment to duplicated bug, i hope you will read it
if there will be no reaction for a week, i will post this message to dup bug</WithStack>
    <WithOutStack>1)consider creating a wizard to move/rename multiple packages
source -&gt; destination [ ]-(checkbox) recusive, or with children
[add]
2)
when moving/renaming package name add [ ]-(checkbox) recusive, or with children
if you have
com.company.project.pak1
com.company.project.pak1.service
com.company.project.pak1.model
com.company.project.pak1.constants
com.company.project.pak1.api
com.company.project.pak1.api.permission
com.company.project.pak1.api.principal

and you want to renam pak1-&gt;pak10 you need to rename each of them
espetialy when renaming company - day work


*** This bug has been marked as a duplicate of 39260 ***
the bug that was marked duplicate is not actually mirroring all the 
functionality
recursive checkbox is only a small point it in
i was talking about a wizard, so you add multiple
source -&gt; destination packages
and perform refactoring only once

please also consider added a checkbox [deprecation class]
if you move the class all the sources  that are poining on it will be changed 
too
but product can have much more dependencies that thouse in the workbench
so when moving a class another class will be created wich will extend the 
previouse with deprecation comment
currently doing it by hands
also consider adding another source folder for deprecation classes
it is a good practise to produce "product_3.1.5.jar" 
and "product_3.1.5_deprecation.jar", wich will contain all deprecated classes

didn't want to add this comment to duplicated bug, i hope you will read it
if there will be no reaction for a week, i will post this message to dup bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45177" />
    <CreationDate amount="2003-10-19 14:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Memory consumption of rename/move refactoring [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>when performing a numerouse count of refactors move/rename memory usage is 
rising to 500mb, looks like a memory leak
Slavik, do you have some more input on this. How does your workspace look 
like. What kind of Java elements did you rename ?
i will create a sample project
and tell you the steps
don't have the time right now
We did a memeory leak pass for M6 and couldn't find a memeory leak in rename &amp; 
move refactoring. Please reopen and provide steps to reproduce if you still 
see the problem.</WithStack>
    <WithOutStack>when performing a numerouse count of refactors move/rename memory usage is 
rising to 500mb, looks like a memory leak
Slavik, do you have some more input on this. How does your workspace look 
like. What kind of Java elements did you rename ?
i will create a sample project
and tell you the steps
don't have the time right now
We did a memeory leak pass for M6 and couldn't find a memeory leak in rename &amp; 
move refactoring. Please reopen and provide steps to reproduce if you still 
see the problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45178" />
    <CreationDate amount="2003-10-19 16:33:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Exception when closing rename dialog with read only files [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>if the resource is read-only you get a modal dialog
"the selected elements contain read-only resources. Do you still want to move 
them ?"
when pressing on close { upper right X ) you get
java.lang.ArrayIndexOutOfBoundsException: -1
see attached log
Created attachment 6479
eclipse erroe log
Linked close box to choice "No" in builds &gt; 20031208.</WithStack>
    <WithOutStack>if the resource is read-only you get a modal dialog
"the selected elements contain read-only resources. Do you still want to move 
them ?"
when pressing on close { upper right X ) you get
java.lang.ArrayIndexOutOfBoundsException: -1
see attached log
Created attachment 6479
eclipse erroe log
Linked close box to choice "No" in builds &gt; 20031208.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45179" />
    <CreationDate amount="2003-10-19 16:43:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Save dialog state of rename dialog [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>when you are making batch refactor
you use some specifig kind of setting for it
like :
refactor -&gt; rename
has following choices :
Update references to renamed classes (checked by default)
Update references in javadocs
Update references in regular comments
Update references in string literals
Update fully qualifed names in non Java file ( force preview )
 File name patterns : [               ] - this one is saved
all other are not, it would be a nice feature to save all thouse settings so 
there is no need to check all of them all the time
Agree
Fixed in I20031209: all checkboxes are saved when exiting the wizard via "OK".
*** Bug 25809 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>when you are making batch refactor
you use some specifig kind of setting for it
like :
refactor -&gt; rename
has following choices :
Update references to renamed classes (checked by default)
Update references in javadocs
Update references in regular comments
Update references in string literals
Update fully qualifed names in non Java file ( force preview )
 File name patterns : [               ] - this one is saved
all other are not, it would be a nice feature to save all thouse settings so 
there is no need to check all of them all the time
Agree
Fixed in I20031209: all checkboxes are saved when exiting the wizard via "OK".
*** Bug 25809 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45180" />
    <CreationDate amount="2003-10-19 16:48:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>Unable to edit java file in external source path...</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I did a new and totally fresh install of I20031015.

This bug is similar to &lt;a href="https://bugs.eclipse.org/bugs/show_bug.cgi?
id=44690"&gt;bug #44690&lt;/a&gt;

Followed the steps in comment #2 for bug #44690, i.e. created a Java project 
and a Java file in an external source path. The file opens and shows correctly, 
but I can't edit it. Then I created a Java project under workspace and moved 
the Java file to it. It opens and edits nicely.
Kai, AFAIK this is now fixed. Please close if so.

Fixed since 20031016 for linked projects. Works for linked files and linked 
source folder in I20031015.
start verifying
veryfied</WithStack>
    <WithOutStack>I did a new and totally fresh install of I20031015.

This bug is similar to &lt;a href="https://bugs.eclipse.org/bugs/show_bug.cgi?
id=44690"&gt;bug #44690&lt;/a&gt;

Followed the steps in comment #2 for bug #44690, i.e. created a Java project 
and a Java file in an external source path. The file opens and shows correctly, 
but I can't edit it. Then I created a Java project under workspace and moved 
the Java file to it. It opens and edits nicely.
Kai, AFAIK this is now fixed. Please close if so.

Fixed since 20031016 for linked projects. Works for linked files and linked 
source folder in I20031015.
start verifying
veryfied</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45181" />
    <CreationDate amount="2003-10-19 16:54:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>strange behavior of Display#asyncExec() - EventLoopProgressMonitor problems</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1. The user saves a file.</Line>
          <Line>2. Various builders run</Line>
          <Line>2.1. Java builder runs</Line>
          <Line>2.2. My builder runs and invokes Display#asyncExec(runnable)</Line>
          <Line>My builder finishes</Line>
          <Line>2.3. Before the build manager exits, my runnable is being run - which</Line>
          <Line>is wrong - it should wait until all builders finish. my runnable</Line>
          <Line>class tries to invoke a builder and of course fails.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>For some reason the EventLoopProgressMonitor#isCanceled() method runs the event
loop (i.e., Display.readAndDispatch()), which causes Runnable's to execute
earlier than expected.

Here is what I posted on the newsgroup:

Hi,

If I understand correctly, the Display#asyncExec() should be the SWT alternative
to swing's invokeLater() method (that is - take a Runnable, and execute it in
the UI thread when all other tasks are done).

What I see is the following behavior - all events occur in the same thread (main
thread)
1. The user saves a file.
2. Various builders run
   2.1. Java builder runs
   2.2. My builder runs and invokes Display#asyncExec(runnable)
        My builder finishes
   2.3. Before the build manager exits, my runnable is being run - which
        is wrong - it should wait until all builders finish. my runnable
        class tries to invoke a builder and of course fails.

I am confused - the Display#readAndDispatch() method appears to be reentrant.

Please tell me what I'm doing wrong or whether this is a bug (I use WSAD5.1 trial).

Thanks,
Genady

Here is the full stack trace:
Thread [main] (Suspended)
    BuildManager.canRun(int) line: 295
    BuildManager.build(IProject, int, String, Map, IProgressMonitor) line: 278
    Project.build(int, String, Map, IProgressMonitor) line: 64
    RMIBuilder$1.run(IProgressMonitor) line: 258
    ModalContext.runInCurrentThread(IRunnableWithProgress, IProgressMonitor)
line: 302
    ModalContext.run(IRunnableWithProgress, boolean, IProgressMonitor, Display)
line: 252
    ApplicationWindow$1.run() line: 431
    BusyIndicator.showWhile(Display, Runnable) line: 69
    WorkbenchWindow(ApplicationWindow).run(boolean, boolean,
IRunnableWithProgress) line: 428
    WorkbenchWindow.run(boolean, boolean, IRunnableWithProgress) line: 1385
    RMIBuilder$2.run() line: 270
    RunnableLock.run() line: 35
    UISynchronizer(Synchronizer).runAsyncMessages() line: 98
    Display.runAsyncMessages() line: 1815
    Display.readAndDispatch() line: 1549
    EventLoopProgressMonitor.runEventLoop() line: 94
    EventLoopProgressMonitor.isCanceled() line: 73
    SubProgressMonitor(ProgressMonitorWrapper).isCanceled() line: 87
    SubProgressMonitor(ProgressMonitorWrapper).isCanceled() line: 87
    Policy.checkCanceled(IProgressMonitor) line: 146
    BuildManager.basicBuild(IProject, int, ICommand[], MultiStatus,
IProgressMonitor) line: 192
    BuildManager$1.run() line: 151
    InternalPlatform.run(ISafeRunnable) line: 1006
    Platform.run(ISafeRunnable) line: 413
    BuildManager.basicBuild(IProject, int, MultiStatus, IProgressMonitor) line: 165
    BuildManager.basicBuildLoop(IProject[], IProject[], int, MultiStatus,
IProgressMonitor) line: 243
    BuildManager.build(int, IProgressMonitor) line: 212
    Workspace.endOperation(boolean, IProgressMonitor) line: 884
    Workspace.run(IWorkspaceRunnable, IProgressMonitor) line: 1600
    EditorManager$10.run(IProgressMonitor) line: 1039
    EditorManager$8.run(IProgressMonitor) line: 960
    ModalContext.runInCurrentThread(IRunnableWithProgress, IProgressMonitor)
line: 302
    ModalContext.run(IRunnableWithProgress, boolean, IProgressMonitor, Display)
line: 252
    ApplicationWindow$1.run() line: 431
    BusyIndicator.showWhile(Display, Runnable) line: 69
    WorkbenchWindow(ApplicationWindow).run(boolean, boolean,
IRunnableWithProgress) line: 428
    WorkbenchWindow.run(boolean, boolean, IRunnableWithProgress) line: 1385
    EditorManager.runProgressMonitorOperation(String, IRunnableWithProgress,
IWorkbenchWindow) line: 966
    EditorManager.saveAll(List, boolean, IWorkbenchWindow) line: 1053
    EditorManager.saveAll(boolean, boolean) line: 992
    WorkbenchPage.saveAllEditors(boolean) line: 2346
    SaveAllAction.run() line: 101
    SaveAllAction(Action).runWithEvent(Event) line: 842
    ActionContributionItem.handleWidgetSelection(Event) line: 456
    ActionContributionItem.handleWidgetEvent(Event) line: 403
    ActionContributionItem.access$0(ActionContributionItem, Event) line: 397
    ActionContributionItem$ActionListener.handleEvent(Event) line: 72
    EventTable.sendEvent(Event) line: 81
    MenuItem(Widget).sendEvent(Event) line: 840
    Display.runDeferredEvents() line: 1838
    Display.readAndDispatch() line: 1545
    Workbench.runEventLoop(Window$IExceptionHandler) line: 1402
    Workbench.run(Object) line: 1385
    InternalBootLoader.run(String, URL, String, String[], Runnable) line: 858
    BootLoader.run(String, URL, String, String[], Runnable) line: 461
    NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not
available [native method]
    NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39 [local variables
unavailable]
    DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25 [local
variables unavailable]
    Method.invoke(Object, Object[]) line: 324 [local variables unavailable]
    Main.basicRun(String[]) line: 291
    Main.run(String[]) line: 747
    Main.main(String[]) line: 583
Is this a BuildManager issue?
Personally, I believe the problem is in EventLoopProgressMonitor.isCanceled ...

No, this isn't a builder issue. In fact, this is currently expected behaviour. 
I just moved the bug to UI to allow UI team to comment on why this happens (ok,
I was just being lazy ;)

The real problem is that the save operation happens in the UI thread.  To ensure
that the UI continues to paint during the save, it runs with the
EventLoopProgressMonitor.  This progress monitor spins the event loop whenever
any of its methods is called to allow the UI to paint.  This also causes
asyncExecs to be served at an inappropriate time.

To answer Genday's questions: yes, asyncExec is essentially like invokeLater. 
It will be processed as soon as the UI event loop is idle.  You're being tricked
in this case because of the (hack) in EventLoopProgressMonitor that serves
events in the middle of operations.  You can't really rely on the asyncExec
being served after the current operation is completed. If you really want a
second build to happen after the first one completes, I suggest scheduling a
background job to do the second build (3.0 stream only).  See
org.eclipse.core.runtime.Job#schedule. This job will block until the first build
finishes.

For your other question: yes, it is not uncommon for Display.readAndDispatch to
be re-entrant.  This happens for example in modal dialogs, which are invoked
from the main event loop, but spin their own event loop while the dialog is up.

I'm going to close this as invalid.  Again, the real reason this happens is
because the save operation runs in the UI.  This will have to change, and it
will be discussed by the team working on UI responsiveness issues.
This means that it can eventually lead to stack overflow (suppose I call one 
#asyncExec() from inside another repeatedly) 

What kind of solution do you propose for 2.1.1 plugins?

P.S. Is there any documentation of API/extension points about the new builders 
framework? I see that the porting document is still almost empty in M4.</WithStack>
    <WithOutStack>For some reason the EventLoopProgressMonitor#isCanceled() method runs the event
loop (i.e., Display.readAndDispatch()), which causes Runnable's to execute
earlier than expected.

Here is what I posted on the newsgroup:

Hi,

If I understand correctly, the Display#asyncExec() should be the SWT alternative
to swing's invokeLater() method (that is - take a Runnable, and execute it in
the UI thread when all other tasks are done).

What I see is the following behavior - all events occur in the same thread (main
thread)
1. The user saves a file.
2. Various builders run
   2.1. Java builder runs
   2.2. My builder runs and invokes Display#asyncExec(runnable)
        My builder finishes
   2.3. Before the build manager exits, my runnable is being run - which
        is wrong - it should wait until all builders finish. my runnable
        class tries to invoke a builder and of course fails.

I am confused - the Display#readAndDispatch() method appears to be reentrant.

Please tell me what I'm doing wrong or whether this is a bug (I use WSAD5.1 trial).

Thanks,
Genady

Here is the full stack trace:
Thread [main] (Suspended)
    BuildManager.canRun(int) line: 295
    BuildManager.build(IProject, int, String, Map, IProgressMonitor) line: 278
    Project.build(int, String, Map, IProgressMonitor) line: 64
    RMIBuilder$1.run(IProgressMonitor) line: 258
    ModalContext.runInCurrentThread(IRunnableWithProgress, IProgressMonitor)
line: 302
    ModalContext.run(IRunnableWithProgress, boolean, IProgressMonitor, Display)
line: 252
    ApplicationWindow$1.run() line: 431
    BusyIndicator.showWhile(Display, Runnable) line: 69
    WorkbenchWindow(ApplicationWindow).run(boolean, boolean,
IRunnableWithProgress) line: 428
    WorkbenchWindow.run(boolean, boolean, IRunnableWithProgress) line: 1385
    RMIBuilder$2.run() line: 270
    RunnableLock.run() line: 35
    UISynchronizer(Synchronizer).runAsyncMessages() line: 98
    Display.runAsyncMessages() line: 1815
    Display.readAndDispatch() line: 1549
    EventLoopProgressMonitor.runEventLoop() line: 94
    EventLoopProgressMonitor.isCanceled() line: 73
    SubProgressMonitor(ProgressMonitorWrapper).isCanceled() line: 87
    SubProgressMonitor(ProgressMonitorWrapper).isCanceled() line: 87
    Policy.checkCanceled(IProgressMonitor) line: 146
    BuildManager.basicBuild(IProject, int, ICommand[], MultiStatus,
IProgressMonitor) line: 192
    BuildManager$1.run() line: 151
    InternalPlatform.run(ISafeRunnable) line: 1006
    Platform.run(ISafeRunnable) line: 413
    BuildManager.basicBuild(IProject, int, MultiStatus, IProgressMonitor) line: 165
    BuildManager.basicBuildLoop(IProject[], IProject[], int, MultiStatus,
IProgressMonitor) line: 243
    BuildManager.build(int, IProgressMonitor) line: 212
    Workspace.endOperation(boolean, IProgressMonitor) line: 884
    Workspace.run(IWorkspaceRunnable, IProgressMonitor) line: 1600
    EditorManager$10.run(IProgressMonitor) line: 1039
    EditorManager$8.run(IProgressMonitor) line: 960
    ModalContext.runInCurrentThread(IRunnableWithProgress, IProgressMonitor)
line: 302
    ModalContext.run(IRunnableWithProgress, boolean, IProgressMonitor, Display)
line: 252
    ApplicationWindow$1.run() line: 431
    BusyIndicator.showWhile(Display, Runnable) line: 69
    WorkbenchWindow(ApplicationWindow).run(boolean, boolean,
IRunnableWithProgress) line: 428
    WorkbenchWindow.run(boolean, boolean, IRunnableWithProgress) line: 1385
    EditorManager.runProgressMonitorOperation(String, IRunnableWithProgress,
IWorkbenchWindow) line: 966
    EditorManager.saveAll(List, boolean, IWorkbenchWindow) line: 1053
    EditorManager.saveAll(boolean, boolean) line: 992
    WorkbenchPage.saveAllEditors(boolean) line: 2346
    SaveAllAction.run() line: 101
    SaveAllAction(Action).runWithEvent(Event) line: 842
    ActionContributionItem.handleWidgetSelection(Event) line: 456
    ActionContributionItem.handleWidgetEvent(Event) line: 403
    ActionContributionItem.access$0(ActionContributionItem, Event) line: 397
    ActionContributionItem$ActionListener.handleEvent(Event) line: 72
    EventTable.sendEvent(Event) line: 81
    MenuItem(Widget).sendEvent(Event) line: 840
    Display.runDeferredEvents() line: 1838
    Display.readAndDispatch() line: 1545
    Workbench.runEventLoop(Window$IExceptionHandler) line: 1402
    Workbench.run(Object) line: 1385
    InternalBootLoader.run(String, URL, String, String[], Runnable) line: 858
    BootLoader.run(String, URL, String, String[], Runnable) line: 461
    NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not
available [native method]
    NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39 [local variables
unavailable]
    DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25 [local
variables unavailable]
    Method.invoke(Object, Object[]) line: 324 [local variables unavailable]
    Main.basicRun(String[]) line: 291
    Main.run(String[]) line: 747
    Main.main(String[]) line: 583
Is this a BuildManager issue?
Personally, I believe the problem is in EventLoopProgressMonitor.isCanceled ...

No, this isn't a builder issue. In fact, this is currently expected behaviour. 
I just moved the bug to UI to allow UI team to comment on why this happens (ok,
I was just being lazy ;)

The real problem is that the save operation happens in the UI thread.  To ensure
that the UI continues to paint during the save, it runs with the
EventLoopProgressMonitor.  This progress monitor spins the event loop whenever
any of its methods is called to allow the UI to paint.  This also causes
asyncExecs to be served at an inappropriate time.

To answer Genday's questions: yes, asyncExec is essentially like invokeLater. 
It will be processed as soon as the UI event loop is idle.  You're being tricked
in this case because of the (hack) in EventLoopProgressMonitor that serves
events in the middle of operations.  You can't really rely on the asyncExec
being served after the current operation is completed. If you really want a
second build to happen after the first one completes, I suggest scheduling a
background job to do the second build (3.0 stream only).  See
org.eclipse.core.runtime.Job#schedule. This job will block until the first build
finishes.

For your other question: yes, it is not uncommon for Display.readAndDispatch to
be re-entrant.  This happens for example in modal dialogs, which are invoked
from the main event loop, but spin their own event loop while the dialog is up.

I'm going to close this as invalid.  Again, the real reason this happens is
because the save operation runs in the UI.  This will have to change, and it
will be discussed by the team working on UI responsiveness issues.
This means that it can eventually lead to stack overflow (suppose I call one 
#asyncExec() from inside another repeatedly) 

What kind of solution do you propose for 2.1.1 plugins?

P.S. Is there any documentation of API/extension points about the new builders 
framework? I see that the porting document is still almost empty in M4.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45182" />
    <CreationDate amount="2003-10-19 17:01:00 -0400" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="EMF" />
    <component amount="Core" />
    <Version amount="1.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ParseException gen'ing code from Rose on JDK 1.4</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341034235">
        <Exception>org.apache.xerces.impl.xpath.regex.ParseException</Exception>
        <Reason>Unexpected meta character.
[roseModel2Ecore]</Reason>
        <Frames>
          <Frame depth="0">org.apache.xerces.impl.xpath.regex.RegexParser.ex(Unknown Source)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>My code generates from my Rose model just fine on JDK 1.3.1, but fails on JDK 
1.4.1, due to the regular expression code being stricter about syntax on JDK 
1.4.1 (which has Xerces built in).  The following line (532) of 
plugins\org.eclipse.emf.codegen\src\org\eclipse\emf\codegen\JMerger.java is 
failing:

  protected static RegularExpression braceLine = new RegularExpression
("(\\s*^\\s*{\\s*)$", "m"); // }

Until that is fixed, EMF codegen fails on JDK 1.4.1 (J2RE 1.4.1 IBM Windows 32 
build cn1411-20030915, in my case) with the following stack dumps:

[roseModel2Ecore] java.lang.ExceptionInInitializerError
[roseModel2Ecore]       at 
org.eclipse.emf.codegen.ecore.genmodel.impl.GenBaseImpl.generate
(GenBaseImpl.java:422)
[roseModel2Ecore]       at 
org.eclipse.emf.codegen.ecore.genmodel.impl.GenClassImpl.generate
(GenClassImpl.java:849)
[roseModel2Ecore]       at 
org.eclipse.emf.codegen.ecore.genmodel.impl.GenPackageImpl.generate
(GenPackageImpl.java:1372)
[roseModel2Ecore]       at 
org.eclipse.emf.codegen.ecore.genmodel.impl.GenModelImpl.generate
(GenModelImpl.java:1160)
[roseModel2Ecore]       at org.eclipse.emf.codegen.ecore.Generator$1.run
(Generator.java:340)
[roseModel2Ecore]       at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1595)
[roseModel2Ecore]       at org.eclipse.emf.codegen.ecore.Generator.run
(Generator.java:370)
[roseModel2Ecore]       at 
org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
[roseModel2Ecore]       at org.eclipse.core.boot.BootLoader.run
(BootLoader.java:461)
[roseModel2Ecore]       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native 
Method)
[roseModel2Ecore]       at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:79)
[roseModel2Ecore]       at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:41)
[roseModel2Ecore]       at java.lang.reflect.Method.invoke(Method.java:386)
[roseModel2Ecore]       at org.eclipse.core.launcher.Main.basicRun
(Main.java:291)
[roseModel2Ecore]       at org.eclipse.core.launcher.Main.run(Main.java:747)
[roseModel2Ecore]       at org.eclipse.core.launcher.Main.main(Main.java:583)
[roseModel2Ecore] Caused by: 
org.apache.xerces.impl.xpath.regex.ParseException: Unexpected meta character.
[roseModel2Ecore]       at org.apache.xerces.impl.xpath.regex.RegexParser.ex
(Unknown Source)
[roseModel2Ecore]       at 
org.apache.xerces.impl.xpath.regex.RegexParser.parseAtom(Unknown Source)
[roseModel2Ecore]       at 
org.apache.xerces.impl.xpath.regex.RegexParser.parseFactor(Unknown Source)
[roseModel2Ecore]       at 
org.apache.xerces.impl.xpath.regex.RegexParser.parseTerm(Unknown Source)
[roseModel2Ecore]       at 
org.apache.xerces.impl.xpath.regex.RegexParser.parseRegex(Unknown Source)
[roseModel2Ecore]       at 
org.apache.xerces.impl.xpath.regex.RegexParser.processParen(Unknown Source)
[roseModel2Ecore]       at 
org.apache.xerces.impl.xpath.regex.RegexParser.parseAtom(Unknown Source)
[roseModel2Ecore]       at 
org.apache.xerces.impl.xpath.regex.RegexParser.parseFactor(Unknown Source)
[roseModel2Ecore]       at 
org.apache.xerces.impl.xpath.regex.RegexParser.parseTerm(Unknown Source)
[roseModel2Ecore]       at 
org.apache.xerces.impl.xpath.regex.RegexParser.parseRegex(Unknown Source)
[roseModel2Ecore]       at org.apache.xerces.impl.xpath.regex.RegexParser.parse
(Unknown Source)
[roseModel2Ecore]       at 
org.apache.xerces.impl.xpath.regex.RegularExpression.setPattern(Unknown Source)
[roseModel2Ecore]       at 
org.apache.xerces.impl.xpath.regex.RegularExpression.setPattern(Unknown Source)
[roseModel2Ecore]       at 
org.apache.xerces.impl.xpath.regex.RegularExpression.&lt;init&gt;(Unknown Source)
[roseModel2Ecore]       at      at 
org.eclipse.emf.codegen.jmerge.JMerger.&lt;clinit&gt;(JMerger.java:532).null(Unknown 
Source)
[roseModel2Ecore]       ... 16 more
[roseModel2Ecore] Error.  Java code did not generate correctly.  Please use -
verbose to verify command line.

This is on EMF 1.1 (your BugZilla page only offers 1.0 under version), build 
20030620_1105VL.  This keeps us from being able build the WebSphere Common 
Configuration Models (WCCM) on JDK 1.4.1 (the JDK that ships with WAS 5.1).  
However, not super-urgent - we're doing OK with building with JDK 1.3.1 and 
then running that output on JDK 1.4.1 - just would be nice to get fixed in the 
next release of EMF.  Thanks.
Because the fix is trivial (escape the brace) we'll fix in in 1.1.1:

&gt; etools-diff JMerger.java
549c549
&lt;   protected static RegularExpression braceLine = new RegularExpression("(\\s*" 
+ lineSeparator + "\\s*{\\s*)" + lineSeparator); // }
---
&gt;   protected static RegularExpression braceLine = new RegularExpression("(\\s*" 
+ lineSeparator + "\\s*\\{\\s*)" + lineSeparator); // }

This should be fixed in 20031020_1612WL.
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>My code generates from my Rose model just fine on JDK 1.3.1, but fails on JDK 
1.4.1, due to the regular expression code being stricter about syntax on JDK 
1.4.1 (which has Xerces built in).  The following line (532) of 
plugins\org.eclipse.emf.codegen\src\org\eclipse\emf\codegen\JMerger.java is 
failing:

  protected static RegularExpression braceLine = new RegularExpression
("(\\s*^\\s*{\\s*)$", "m"); // }

Until that is fixed, EMF codegen fails on JDK 1.4.1 (J2RE 1.4.1 IBM Windows 32 
build cn1411-20030915, in my case) with the following stack dumps:

[roseModel2Ecore] java.lang.ExceptionInInitializerError
[roseModel2Ecore]       at 
org.eclipse.emf.codegen.ecore.genmodel.impl.GenBaseImpl.generate
(GenBaseImpl.java:422)
[roseModel2Ecore]       at 
org.eclipse.emf.codegen.ecore.genmodel.impl.GenClassImpl.generate
(GenClassImpl.java:849)
[roseModel2Ecore]       at 
org.eclipse.emf.codegen.ecore.genmodel.impl.GenPackageImpl.generate
(GenPackageImpl.java:1372)
[roseModel2Ecore]       at 
org.eclipse.emf.codegen.ecore.genmodel.impl.GenModelImpl.generate
(GenModelImpl.java:1160)
[roseModel2Ecore]       at org.eclipse.emf.codegen.ecore.Generator$1.run
(Generator.java:340)
[roseModel2Ecore]       at org.eclipse.core.internal.resources.Workspace.run
(Workspace.java:1595)
[roseModel2Ecore]       at org.eclipse.emf.codegen.ecore.Generator.run
(Generator.java:370)
[roseModel2Ecore]       at 
org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
[roseModel2Ecore]       at org.eclipse.core.boot.BootLoader.run
(BootLoader.java:461)
[roseModel2Ecore]       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native 
Method)
[roseModel2Ecore]       at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:79)
[roseModel2Ecore]       at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:41)
[roseModel2Ecore]       at java.lang.reflect.Method.invoke(Method.java:386)
[roseModel2Ecore]       at org.eclipse.core.launcher.Main.basicRun
(Main.java:291)
[roseModel2Ecore]       at org.eclipse.core.launcher.Main.run(Main.java:747)
[roseModel2Ecore]       at org.eclipse.core.launcher.Main.main(Main.java:583)
[roseModel2Ecore] Caused by: 
.null(Unknown 
Source)
[roseModel2Ecore]       ... 16 more
[roseModel2Ecore] Error.  Java code did not generate correctly.  Please use -
verbose to verify command line.

This is on EMF 1.1 (your BugZilla page only offers 1.0 under version), build 
20030620_1105VL.  This keeps us from being able build the WebSphere Common 
Configuration Models (WCCM) on JDK 1.4.1 (the JDK that ships with WAS 5.1).  
However, not super-urgent - we're doing OK with building with JDK 1.3.1 and 
then running that output on JDK 1.4.1 - just would be nice to get fixed in the 
next release of EMF.  Thanks.
Because the fix is trivial (escape the brace) we'll fix in in 1.1.1:

&gt; etools-diff JMerger.java
549c549
&lt;   protected static RegularExpression braceLine = new RegularExpression("(\\s*" 
+ lineSeparator + "\\s*{\\s*)" + lineSeparator); // }
---
&gt;   protected static RegularExpression braceLine = new RegularExpression("(\\s*" 
+ lineSeparator + "\\s*\\{\\s*)" + lineSeparator); // }

This should be fixed in 20031020_1612WL.
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45183" />
    <CreationDate amount="2003-10-19 21:44:00 -0400" />
    <DupId amount="44809" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Tree displays failing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341034237">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.resources.MarkerManager.basicFindMatching(MarkerManager.java:106)</Frame>
          <Frame depth="1">org.eclipse.core.internal.resources.MarkerManager$3.visitElement(MarkerManager.java:496)</Frame>
          <Frame depth="2">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:76)</Frame>
          <Frame depth="3">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="4">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="5">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="6">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="7">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="8">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="9">org.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:119)</Frame>
          <Frame depth="10">org.eclipse.core.internal.resources.MarkerManager.visitorFindMarkers(MarkerManager.java:502)</Frame>
          <Frame depth="11">org.eclipse.core.internal.resources.MarkerManager.findMarkers(MarkerManager.java:222)</Frame>
          <Frame depth="12">org.eclipse.core.internal.resources.Resource.findMarkers(Resource.java:781)</Frame>
          <Frame depth="13">org.eclipse.jdt.ui.ProblemsLabelDecorator.getErrorTicksFromMarkers(ProblemsLabelDecorator.java:211)</Frame>
          <Frame depth="14">org.eclipse.jdt.ui.ProblemsLabelDecorator.computeAdornmentFlags(ProblemsLabelDecorator.java:166)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.ui.viewsupport.TreeHierarchyLayoutProblemsDecorator.computeAdornmentFlags(TreeHierarchyLayoutProblemsDecorator.java:69)</Frame>
          <Frame depth="16">org.eclipse.jdt.ui.ProblemsLabelDecorator.decorateImage(ProblemsLabelDecorator.java:146)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.decorateImage(JavaUILabelProvider.java:119)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.getImage(JavaUILabelProvider.java:134)</Frame>
          <Frame depth="19">org.eclipse.jface.viewers.DecoratingLabelProvider.getImage(DecoratingLabelProvider.java:73)</Frame>
          <Frame depth="20">org.eclipse.jdt.internal.ui.viewsupport.DecoratingJavaLabelProvider.getImage(DecoratingJavaLabelProvider.java:103)</Frame>
          <Frame depth="21">org.eclipse.jface.viewers.TreeViewer.doUpdateItem(TreeViewer.java:96)</Frame>
          <Frame depth="22">org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run(AbstractTreeViewer.java:77)</Frame>
          <Frame depth="23">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1018)</Frame>
          <Frame depth="24">org.eclipse.core.runtime.Platform.run(Platform.java:461)</Frame>
          <Frame depth="25">org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem(AbstractTreeViewer.java:457)</Frame>
          <Frame depth="26">org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:119)</Frame>
          <Frame depth="27">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1018)</Frame>
          <Frame depth="28">org.eclipse.core.runtime.Platform.run(Platform.java:461)</Frame>
          <Frame depth="29">org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:1263)</Frame>
          <Frame depth="30">org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren(AbstractTreeViewer.java:1529)</Frame>
          <Frame depth="31">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1045)</Frame>
          <Frame depth="32">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct(AbstractTreeViewer.java:1052)</Frame>
          <Frame depth="33">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:1023)</Frame>
          <Frame depth="34">org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh(AbstractTreeViewer.java:986)</Frame>
          <Frame depth="35">org.eclipse.jface.viewers.StructuredViewer$8.run(StructuredViewer.java:881)</Frame>
          <Frame depth="36">org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:796)</Frame>
          <Frame depth="37">org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:879)</Frame>
          <Frame depth="38">org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider$3.run(PackageExplorerContentProvider.java:562)</Frame>
          <Frame depth="39">org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider$7.run(PackageExplorerContentProvider.java:604)</Frame>
          <Frame depth="40">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="41">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)</Frame>
          <Frame depth="42">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2150)</Frame>
          <Frame depth="43">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1867)</Frame>
          <Frame depth="44">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2347)</Frame>
          <Frame depth="45">org.eclipse.ui.internal.Workbench.run(Workbench.java:2330)</Frame>
          <Frame depth="46">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="47">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="48">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="49">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="50">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="51">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="52">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="53">org.eclipse.core.launcher.Main.run(Main.java:765)</Frame>
          <Frame depth="54">org.eclipse.core.launcher.Main.main(Main.java:599)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I was editing in Eclipse when I got a popup stateing that a problem had 
occurred and details were in the log. The work I was doing completed 
successfully but I found that whenever I tried to expand a tree node, for 
example in the Navigator, the node data would not display, only the node 
expansion buttions and connecting lines. The stack trace from the log is 
appended. This happened using the M4 release but I have experienced similar 
problems with various flavours of the M3 family.

!SESSION Oct 19, 2003 21:28:46.15 ---------------------------------------------
-
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -data 
e:\StellationRefactorForWVCM-1 -showlocation -install file:E:/Eclipse-
M4/eclipse/
!ENTRY org.eclipse.jface 4 2 Oct 19, 2003 21:28:46.15
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.jface".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.core.internal.resources.MarkerManager.basicFindMatching
(MarkerManager.java:106)
	at org.eclipse.core.internal.resources.MarkerManager$3.visitElement
(MarkerManager.java:496)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:76)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:80)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:80)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:80)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:80)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:80)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:80)
	at org.eclipse.core.internal.watson.ElementTreeIterator.iterate
(ElementTreeIterator.java:119)
	at org.eclipse.core.internal.resources.MarkerManager.visitorFindMarkers
(MarkerManager.java:502)
	at org.eclipse.core.internal.resources.MarkerManager.findMarkers
(MarkerManager.java:222)
	at org.eclipse.core.internal.resources.Resource.findMarkers
(Resource.java:781)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.getErrorTicksFromMarkers
(ProblemsLabelDecorator.java:211)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.computeAdornmentFlags
(ProblemsLabelDecorator.java:166)
	at 
org.eclipse.jdt.internal.ui.viewsupport.TreeHierarchyLayoutProblemsDecorator.co
mputeAdornmentFlags(TreeHierarchyLayoutProblemsDecorator.java:69)
	at org.eclipse.jdt.ui.ProblemsLabelDecorator.decorateImage
(ProblemsLabelDecorator.java:146)
	at 
org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.decorateImage
(JavaUILabelProvider.java:119)
	at org.eclipse.jdt.internal.ui.viewsupport.JavaUILabelProvider.getImage
(JavaUILabelProvider.java:134)
	at org.eclipse.jface.viewers.DecoratingLabelProvider.getImage
(DecoratingLabelProvider.java:73)
	at 
org.eclipse.jdt.internal.ui.viewsupport.DecoratingJavaLabelProvider.getImage
(DecoratingJavaLabelProvider.java:103)
	at org.eclipse.jface.viewers.TreeViewer.doUpdateItem
(TreeViewer.java:96)
	at 
org.eclipse.jface.viewers.AbstractTreeViewer$UpdateItemSafeRunnable.run
(AbstractTreeViewer.java:77)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1018)
	at org.eclipse.core.runtime.Platform.run(Platform.java:461)
	at org.eclipse.jface.viewers.AbstractTreeViewer.doUpdateItem
(AbstractTreeViewer.java:457)
	at 
org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run
(StructuredViewer.java:119)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1018)
	at org.eclipse.core.runtime.Platform.run(Platform.java:461)
	at org.eclipse.jface.viewers.StructuredViewer.updateItem
(StructuredViewer.java:1263)
	at org.eclipse.jface.viewers.AbstractTreeViewer.updateChildren
(AbstractTreeViewer.java:1529)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct
(AbstractTreeViewer.java:1045)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefreshStruct
(AbstractTreeViewer.java:1052)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java:1023)
	at org.eclipse.jface.viewers.AbstractTreeViewer.internalRefresh
(AbstractTreeViewer.java:986)
	at org.eclipse.jface.viewers.StructuredViewer$8.run
(StructuredViewer.java:881)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection
(StructuredViewer.java:796)
	at org.eclipse.jface.viewers.StructuredViewer.refresh
(StructuredViewer.java:879)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider$3.run
(PackageExplorerContentProvider.java:562)
	at 
org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider$7.run
(PackageExplorerContentProvider.java:604)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:102)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2150)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1867)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2347)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:2330)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:765)
	at org.eclipse.core.launcher.Main.main(Main.java:599)
Looks like it might be a Core problem.  Please reassign if I'm wrong.
Need to investigate


*** This bug has been marked as a duplicate of 44809 ***</WithStack>
    <WithOutStack>I was editing in Eclipse when I got a popup stateing that a problem had 
occurred and details were in the log. The work I was doing completed 
successfully but I found that whenever I tried to expand a tree node, for 
example in the Navigator, the node data would not display, only the node 
expansion buttions and connecting lines. The stack trace from the log is 
appended. This happened using the M4 release but I have experienced similar 
problems with various flavours of the M3 family.

!SESSION Oct 19, 2003 21:28:46.15 ---------------------------------------------
-
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -data 
e:\StellationRefactorForWVCM-1 -showlocation -install file:E:/Eclipse-
M4/eclipse/
!ENTRY org.eclipse.jface 4 2 Oct 19, 2003 21:28:46.15
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.jface".
!STACK 0

Looks like it might be a Core problem.  Please reassign if I'm wrong.
Need to investigate


*** This bug has been marked as a duplicate of 44809 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45184" />
    <CreationDate amount="2003-10-19 22:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>External pointcut refs not resolved if named pointcut used by declare</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="118" end="236" />
        <code>public class DeclareErrorNamedPointcutCE {
    public static void main(String[] args) {
        new C().run();
    }
}</code>
      </source_code>
      <source_code type="class">
        <location start="237" end="287" />
        <code>class C {
    void run() { } // CW expected here
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Get incorrect error

  can't find pointcut "pc()" on B

when compiling this code using AJDT 1.1.4/AspectJ 1.1.1:
----
public class DeclareErrorNamedPointcutCE {
    public static void main(String[] args) {
        new C().run();
    }
}
class C {
    void run() { } // CW expected here
}

aspect A { pointcut pc(): execution(void run()); }

aspect B {
    pointcut ref() : A.pc();  // bug: A.pc() treated as B.pc()
    declare error : ref() : "ref";  
}

----

Not true when advice uses ref().
I've added this test case into bugs/DeclareErrorNamedPointcutCE.java, and 
appended it to the end of ajcTests.xml. It passes for me with the current CVS
tree. Is it still failing for you Wes?
Fixed in tree, slated for 1.2 release.</WithStack>
    <WithOutStack>Get incorrect error

  can't find pointcut "pc()" on B

when compiling this code using AJDT 1.1.4/AspectJ 1.1.1:
----
public class DeclareErrorNamedPointcutCE {
    public static void main(String[] args) {
        new C().run();
    }
}
class C {
    void run() { } // CW expected here
}

aspect A { pointcut pc(): execution(void run()); }

aspect B {
    pointcut ref() : A.pc();  // bug: A.pc() treated as B.pc()
    declare error : ref() : "ref";  
}

----

Not true when advice uses ref().
I've added this test case into bugs/DeclareErrorNamedPointcutCE.java, and 
appended it to the end of ajcTests.xml. It passes for me with the current CVS
tree. Is it still failing for you Wes?
Fixed in tree, slated for 1.2 release.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45185" />
    <CreationDate amount="2003-10-19 22:11:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AJDT" />
    <component amount="Core" />
    <Version amount="1.1.4" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows NT" />
    <priority amount="P2" />
    <bug_severity amount="critical" />
    <Summery>Classes deleted from text still seen by compiler</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>In a source file that contains many classes, deleting a class and compiling does
not provoke an error for each reference to the now-missing class.  (Might also
be true of other source files (haven't tested) or in incremental mode.)
This looks like it is caused by the same problem as critical bug#43711 
(reported by me, currently assigned to Adrian).  I'm not marking it a 
duplicate since these reports should correspond to two seperate incremental 
tests.
With the fix for full builds that I've put in for 43711 (delete the .class 
files in the output directory before rebuilding) - this problem should be fixed.
Believed fixed as per Andy's last comment. Included in BSF build.</WithStack>
    <WithOutStack>In a source file that contains many classes, deleting a class and compiling does
not provoke an error for each reference to the now-missing class.  (Might also
be true of other source files (haven't tested) or in incremental mode.)
This looks like it is caused by the same problem as critical bug#43711 
(reported by me, currently assigned to Adrian).  I'm not marking it a 
duplicate since these reports should correspond to two seperate incremental 
tests.
With the fix for full builds that I've put in for 43711 (delete the .class 
files in the output directory before rebuilding) - this problem should be fixed.
Believed fixed as per Andy's last comment. Included in BSF build.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45186" />
    <CreationDate amount="2003-10-19 22:47:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[UI Guidelines] Double clicking a view does not activate editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="8">
      <Enumeration lines="4">
        <Lines>
          <Line>s) single-click opens but does not activate the editor</Line>
          <Line>(selects the element in the editor if possible)</Line>
          <Line>d) double-click opens and activates the editor</Line>
          <Line>(selects the element in the editor if possible)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="14">
        <Lines>
          <Line>d) double-click opens and activates the editor</Line>
          <Line>(selects the element in the editor if possible)</Line>
          <Line />
          <Line>* file already open</Line>
          <Line>s: single-click brings the editor to front but does not activate it</Line>
          <Line>(selects the element in the editor if possible)</Line>
          <Line>d: double-click activates the editor</Line>
          <Line>(selects the element in the editor if possible)</Line>
          <Line />
          <Line>DOUBLE-CLICK MODE:</Line>
          <Line>* file closed</Line>
          <Line>s) single-click does nothing except selecting the element</Line>
          <Line>d) double-click opens and activates the editor</Line>
          <Line>(selects the element in the editor if possible)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="11">
        <Lines>
          <Line>d) double-click opens and activates the editor</Line>
          <Line>(selects the element in the editor if possible)</Line>
          <Line />
          <Line>* file already open</Line>
          <Line>s) single-click</Line>
          <Line>- 'Link with Editor' off: single-click does nothing except selecting the element</Line>
          <Line>- 'Link with Editor' on:  single-click brings the editor to front but does not activate it</Line>
          <Line>(selects the element in the editor if possible)</Line>
          <Line>- no 'Link with Editor':  up to the view to decide</Line>
          <Line>d) double-click activates the editor</Line>
          <Line>(selects the element in the editor if possible)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="8">
        <Lines>
          <Line>1) Why should this behave differently than the package explorer? In the browser</Line>
          <Line>double clicking makes the editor active. I don't understand the answer: "the is</Line>
          <Line>to browse the code" and that is why a double click shouldn't make the editor</Line>
          <Line>active.</Line>
          <Line />
          <Line>2) I don't understand why if I already have my mouse over the method I want to</Line>
          <Line>edit I need to now select F12 to make the editor active before I can edit.</Line>
          <Line>Double clicking where my mouse currently is would be SIGNIFICANTLY faster.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>1) single click -&gt; select and reveal</Line>
          <Line>2) double click -&gt; activate editor</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- The Enter key should do the same as a doubleclick</Line>
          <Line>- If available, the Next / Previous buttons and keybindings (Ctrl+, / Ctrl+.) should select the next element in the view, open (but not activate) the editor, and select the element in the editor.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>- 'Link with Editor' off: single-click does nothing except selecting the element</Line>
          <Line>- 'Link with Editor' on:  single-click brings the editor to front but does not activate it</Line>
          <Line>(selects the element in the editor if possible)</Line>
          <Line>- no 'Link with Editor':  up to the view to decide</Line>
          <Line>d) double-click activates the editor</Line>
          <Line>(selects the element in the editor if possible)</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- pressing the the 'Enter' key should do the same as a double-click</Line>
          <Line>- Next (Ctrl+.) / Previous (Ctrl+,) buttons select the next/previous element in the view, open (or bring to front) the editor and select the element in the editor but never activate the editor</Line>
          <Line>Added guidelines to</Line>
          <Line>http://wiki.eclipse.org/User_Interface_Guidelines#Interaction_with_Editors</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Double click on the outline view and the corresponding location in the file is 
selected but the editor is not active. 

This behavior differes from the package explorer view with "show members in 
package explorer" selected. 

When show memebers is selected, double clicking on the member selects the 
member in the editor, and makes the editor active. The outline view should 
exhibit the same behavior.
This works as designed: the view is to browse the code (see also comments in bug
45339).

Use F12 to switch to the editor.
If this is by design, then I would like to suggest that the design is wrong. 

Several things I don't understand about this:
1) Why should this behave differently than the package explorer? In the browser 
double clicking makes the editor active. I don't understand the answer: "the is 
to browse the code" and that is why a double click shouldn't make the editor 
active. 

2) I don't understand why if I already have my mouse over the method I want to 
edit I need to now select F12 to make the editor active before I can edit. 
Double clicking where my mouse currently is would be SIGNIFICANTLY faster. 

One of my biggest problems with eclipse is the lack of consistency amonst 
different plugins, this defect is a good example of that lack of consistency. 

I would suggest a little experiment. Go to anyone in your office who is not 
familiar with how the explorer and outline work. Tell them that in the explorer 
to highlight the item in the editor, single click, and to make the editor 
active on that item double click. Then ask them open up the outline and make an 
item active in the editor, and watch what they do. Then explain to them that 
for the for the outline, you need to single click and then hit f12 and look at 
thier reaction. 

In addtion, it is well known that single click is ususlly used for selection, 
and double clicking is used for the default action. What I am suggesting is 
that a double click in a view that has a corresponding element in an editor, 
select the item in the editor and make the editor active, in ALL cases. 


There was a slight miscommunication in this thread - Dani was pointing out 
that the outline view is different than the package explorer, which is 
correct. However, behind the view kind discussion there is an enhancement 
request that is valuable. Outlines should have the following selection 
behaviour:
1) single click -&gt; select and reveal
2) double click -&gt; activate editor

This behaviour has to consider the open mode (single, double click) and the 
linking toggle. My initial reaction is that this behaviour makes sense in all 
modes. CCing Nick, since this should be spelled out in the UI guidelines.
I agree that it should work as Brett is requesting, and that the UI guidelines 
should recommend this behaviour be applied consistently across all views.

Erich or Dani, can you comment on bug 44870, where the Search view is also 
inconsistent in this regard?  I do seem to recall that there were use cases 
where we wanted the Search view to work differently, but cannot remember the 
details.  It would be good to reverse engineer this decision so that any 
reasonable exceptions can be documented in the UI guideline.



Note that the guideline should not simply recommend that double-click activate.
It needs to honour the open mode.  When the open mode is double-click, then 
double-click should open and activate.  When the open mode is single-click, 
then single-click should open but -not- activate, to allow further operations 
on the selected item in the view.
 
Nick, from a user's point of view: shouldn't single click also activate the
editor? As far as I can remember, on all systems applications I used "open" also
activates and this includes open on single-click. Erich told me that the current
"single-click and not activate" soltion is to make Drag and drop work. For me in
Eclipse drag and drop is the (&lt;) 20% case but opening a file is the (&gt;) 80%
case. Since I use single click I always have to perform an additional click or
press a key.

Besided drag and drop are there other user-experienced driven reasons for not
activating the editor (oder whatever is used to open the file).

Please also note with the not-activate approach Eclipe editors are not treated
as equal as system editors: when opening a file with a system editor using
single-click mode in Eclipse the editor gets activated.
Regarding comment #5. Makes sense, but I miss one case:

&gt;When the open mode is double-click, then 
&gt;double-click should open and activate.  When the open mode is single-click, 
&gt;then single-click should open but -not- activate, to allow further operations 
&gt;on the selected item in the view.
when the open mode is single-click and the user double clicks then the editor 
should be activated.
DnD is not the main reason we avoid activating on single click.
DnD should occur if you mouse down then drag.  Open (with or without 
activation) should happen on mouse release if there hasn't been a drag.

The main reason is to allow further operations on the selected object on the 
view, without focus being taken away.  E.g. select file and choose Refactor &gt; 
Rename.  Currently we do this regardless of the "Select on hover" setting.  
Perhaps we should only avoid activating if "Select on hover" is unchecked.

Re comment #6, we could make double-click always activate.

Eduardo, do you remember any more details about the rationale for not 
activating when in single click mode?

Dani and Erich, do you feel that single-click mode should also activate in the 
Search view?
It depends. The problem is that the user can control open mode independent from
the selection mode which can cause troubles for opening context menus as
outlined comment 8. I agree that if the Eclipse user simply checks the
single-click option without checking point/hover based selection then
non-activation is OK. However, when selection by hovering/pointing is checked I
really expect the file to be opened and activated. Note that Windows does not
allow such fine grained control you can either have
double-click opens and single-click selects
or
single-click opens and point (hover) to select

Regarding comment 10: yes I currently consider it a bug that single-click does
not open the file. The bug comes from the open action and is not provided as a
Search view feature. Of course the Search view has to keep the focus (which it
does) when using the Show Next/Prev Match actions.


deferring
Adapting summary since this problem is not restricted to the Outline view.
*** Bug 105556 has been marked as a duplicate of this bug. ***
I think at least double-click should always activate the part. Any objections changing that for 3.5?
Adding Kevin and Eric to increase visibility.
(In reply to comment #15)
&gt; I think at least double-click should always activate the part. Any objections
&gt; changing that for 3.5?

Yes we should absolutely do this.  I'm a little dismayed at the age of this bug, its a subtle but important usability issue.

We should also consider search behaving as the outline (ie. single click, where the target file is already open, should move the selection but keep focus on the search).

And all this of course modulo single/double select mode.

Dani, if we proceed we should open a matching bug to update the guidelines (I can take that one).
&gt;Dani, if we proceed we should open a matching bug to update the guidelines (I
&gt;can take that one).
OK, thanks.

So to summarize:

SINGLE-CLICK MODE:
* file closed
  1 single-click opens but does not activate the editor
  2 double-click opens and activates the editor

* file already open
  3 single-click brings the editor to front but does not activate it
    (plus might also select the element in the editor)
  4 double-click activates the editor
    (plus might also select the element in the editor)

DOUBLE-CLICK MODE:
* file closed
  5 single-click does nothing except selecting the element
  6 double-click opens and activates the editor

* file already open
  7 single-click does nothing except selecting the element
  8 double-click activates the editor
    (plus might also select the element in the editor)

==&gt; the only thing which is currently wrong in the OpenStrategy (and custom implementations in the Outline and the Search view - didn't check other views for custom open strategies) are case 2 and 4. Which means we should reopen and fix bug 44870 as well.

Did I catch the cases correctly?


&gt;We should also consider search behaving as the outline (ie. single click, where
&gt;the target file is already open, should move the selection but keep focus on
&gt;the search).
This is already done that way for single-click mode. I don't think that we should do this also in double-click mode, as this would mean to bring editors to front, which most likely will disturb double-click strategy users.


&gt;Which means we should reopen and fix bug 44870 as well.
Sorry, actually no. For some views which are mainly there for navigating stuff (like the Search view) people might prefer a different behavior when the view is a fast view, i.e. double-click not closing the fast view. Note that we didn't get any bug regarding the Search view behavior except the one from Nick dated 2003.

Note that 'fast view' also means 'minimized stack' now. If we change to more aggressively active the editor then we may negatively affect work-flows for folks that work with a maximized editor. Note that making the Search view stay up when opening as a minimized view (aka 'fast' view) was a high-priority work item for the min/max work...

I think Dani's got the right set of behaviors...-never- activate the editor on a single-click, regardless of the open mode (and -always- activate on a double-click).

&gt;(and -always- activate on a double-click).
But with some exceptions, like the Search view, right? Otherwise this seems to contradict with your first paragraph.

Dani, the work-flow I see is:

Single-click (and let's not forget 'arrow up/down') simply opens the editor without activation. (does 'selection change' == single-click?)

Double-click opens and activates (does 'enter' == double-click?)

This won't break the current behavior since the FV will only close on the double-click case (which is a very specific UI gesture). To para-phrase it:

"Select to browse, Open to activate" - where 'Open' means either hitting 'Enter' -or- double-clicking.

The main difference is that the 'browse' views (Outline and Search at least) want to open the editor on 'select' regardless of the open mode while the various 'Explorers' should respect the current open mode semantics.


Correct.
I'm still not convinced about Search. Presently Search behaves like the package explorer. That suggests the following division:

1) Views that navigate TO resources have one strategy (Package Explorer, Search, Errors)
2) Views that navigate WITHIN a resource have a second strategy (Outline, um Outline)

But then that's not right because the package explorer basically has the outline view embedded within it, once you drill down within a class file.  Add to the confusion that Package Explorer has Link with Editor, which gives you the "click on a method and its selected in already open editor" behaviour that I'd like for Search, yet Search does not have Link with Editor so I can never get that.

What I'd rather see is Search behaving like the agreed to new behaviour for Outline. For the Package Explorer, the elements in the tree have useful operations on their own which you often use (put another way, the view is useful without an editor area).  But the whole point of search is for finding within the contents of files.  That sounds like outline.  It thus seems helpful that if the editor is already open, single selection in the Search (in double-click pref mode) would highlight in the editor, then I can quickly see if it was the thing I was searching for. Why should Search and Outline not behave the same?
&gt;I'm still not convinced about Search.
Darn! It looks like me neither if we look at my previous comments ;-)

When looking at it again I think we should not special case the Search view in case of double-click ==&gt; like Eric said: double-click should always activate the editor no matter which mode.

&gt;It thus seems helpful
&gt;that if the editor is already open, single selection in the Search (in
&gt;double-click pref mode) would highlight in the editor
Totally agree. I actually never noticed that because I use single-click mode. We should enhance case 7 from comment 18.


SINGLE-CLICK MODE:
* file closed
  1 single-click opens but does not activate the editor
    (selects the element in the editor if possible)
  2 double-click opens and activates the editor
    (selects the element in the editor if possible)

* file already open
  3 single-click brings the editor to front but does not activate it
    (selects the element in the editor if possible)
  4 double-click activates the editor
    (selects the element in the editor if possible)

DOUBLE-CLICK MODE:
* file closed
  5 single-click does nothing except selecting the element
  6 double-click opens and activates the editor
    (selects the element in the editor if possible)

* file already open
  7 single-click does nothing except selecting the element
    (iff the currently shown editor contains that element, then it
     selects the element in the editor if possible 
  8 double-click activates the editor
    (selects the element in the editor if possible)


==&gt; fix case 2 and 4 for all views (obviously, we should try to fix this in Platform UI code. Problematic part might be that OpenStrategy.activateOnOpen() is static).

==&gt; fix Outline view regarding case 8

==&gt; fix Search view regarding case 7

==&gt; look at all other views
Case 7 from comment 25 is still wrong as it does not take 'Link with Editor' into account which - at least in 3.4 views - affects case 7:

DOUBLE-CLICK MODE:
* file already open
  7 'Link with Editor' off: single-click does nothing except selecting the element
  7 'Link with Editor' on: single-click brings the editor to front but does not
     activate it (selects the element in the editor if possible)
  7 no 'Link with Editor' up to the view to decide

When only talking about open strategies we could of course just ignore case 7 and say: 
  7 single-click does nothing except selecting the element

It is then up to each view whether what it does on single-click and whether it offers 'Link with Editor'.
Kevin, I suggest we should go ahead with this now and not in later milestones (suggest to target 3.5 M2). Would you also do the code changes in Platform UI (fix case 2 and 4) or only update the guide? I can fix Outline and Search but could also look at the other issue if you can't to do it.
(In reply to comment #26)
&gt; It is then up to each view whether what it does on single-click and whether it
&gt; offers 'Link with Editor'.

We should agree on a guideline though. Plus if we think there are different patterns, we should attempt to describe what they are and when they should be applied.

(In reply to comment #27)
&gt; Kevin, I suggest we should go ahead with this now and not in later milestones
&gt; (suggest to target 3.5 M2). Would you also do the code changes in Platform UI
&gt; (fix case 2 and 4) or only update the guide? I can fix Outline and Search but
&gt; could also look at the other issue if you can't to do it.

I agree its better to do this early.  Theory and reality are often different on these matters!

Unfortunately I will have no ability to work on this in the next 5 weeks.


&gt;Unfortunately I will have no ability to work on this in the next 5 weeks.
I thought we're almost there since there was no further reply to my last suggestion. Could we at least finish the guidelines now?

I can then start to implement it step by step and maybe in 5 weeks you find some time too ;-)
Hi Dani, lets proceed with your last proposal.  I think its fine but we probably need to see it in action to be sure.  We can then write up the guideline.  Thanks for pushing on this item and sorry I'm not more help right now.
Comment 26 and comment 27 look good to me.

Comment 27 requires also
==&gt; fix Outline view regarding case 7
   (with 'Link with Editor' off and doubleclick mode, the Outline currently still selects the item on single click)

For completeness, I would also add these two items to the guidelines:
- The Enter key should do the same as a doubleclick
- If available, the Next / Previous buttons and keybindings (Ctrl+, / Ctrl+.) should select the next element in the view, open (but not activate) the editor, and select the element in the editor.

And all this of course also needs to be tested when the view is a fast view.
Fixing this in OpenStrategy would have caused collateral damage to performance as single-click opening would have been delayed for the double-click delay time (as you can notice e.g. in Windows Explorer). This delay can be up to 1s and since we spend lots of time tuning performance in the 10ms range this wasn't an option. Also, using timerExec can always result in unexpected side effects.

I therefore added a new API class (org.eclipse.ui.OpenAndLinkWithEditorHelper) that helps to correctly handle the open modes in combination with editor linking. As proof of concept I ported the resource and the common navigator (aka Project Explorer) to it. I've also adjusted all JDT views.

Next step is to post the guidelines to http://wiki.eclipse.org/index.php/User_Interface_Guidelines.

Also fixed Search view. Below are the applied guidelines. Kevin, can you add them to the wiki? I'm not sure whether anyone is supposed to change those guidelines.


SINGLE-CLICK MODE:
* file closed
  s) single-click opens but does not activate the editor
     (selects the element in the editor if possible)
  d) double-click opens and activates the editor
     (selects the element in the editor if possible)

* file already open
  s: single-click brings the editor to front but does not activate it
     (selects the element in the editor if possible)
  d: double-click activates the editor
     (selects the element in the editor if possible)

DOUBLE-CLICK MODE:
* file closed
  s) single-click does nothing except selecting the element
  d) double-click opens and activates the editor
     (selects the element in the editor if possible)

* file already open
  s) single-click
     - 'Link with Editor' off: single-click does nothing except selecting the element
     - 'Link with Editor' on:  single-click brings the editor to front but does not activate it
                               (selects the element in the editor if possible)
     - no 'Link with Editor':  up to the view to decide
  d) double-click activates the editor
     (selects the element in the editor if possible)

ADDITIONAL RULES:
- pressing the the 'Enter' key should do the same as a double-click
- Next (Ctrl+.) / Previous (Ctrl+,) buttons select the next/previous element in the view, open (or bring to front) the editor and select the element in the editor but never activate the editor
Added guidelines to
http://wiki.eclipse.org/User_Interface_Guidelines#Interaction_with_Editors</WithStack>
    <WithOutStack>Double click on the outline view and the corresponding location in the file is 
selected but the editor is not active. 

This behavior differes from the package explorer view with "show members in 
package explorer" selected. 

When show memebers is selected, double clicking on the member selects the 
member in the editor, and makes the editor active. The outline view should 
exhibit the same behavior.
This works as designed: the view is to browse the code (see also comments in bug
45339).

Use F12 to switch to the editor.
If this is by design, then I would like to suggest that the design is wrong. 

Several things I don't understand about this:
1) Why should this behave differently than the package explorer? In the browser 
double clicking makes the editor active. I don't understand the answer: "the is 
to browse the code" and that is why a double click shouldn't make the editor 
active. 

2) I don't understand why if I already have my mouse over the method I want to 
edit I need to now select F12 to make the editor active before I can edit. 
Double clicking where my mouse currently is would be SIGNIFICANTLY faster. 

One of my biggest problems with eclipse is the lack of consistency amonst 
different plugins, this defect is a good example of that lack of consistency. 

I would suggest a little experiment. Go to anyone in your office who is not 
familiar with how the explorer and outline work. Tell them that in the explorer 
to highlight the item in the editor, single click, and to make the editor 
active on that item double click. Then ask them open up the outline and make an 
item active in the editor, and watch what they do. Then explain to them that 
for the for the outline, you need to single click and then hit f12 and look at 
thier reaction. 

In addtion, it is well known that single click is ususlly used for selection, 
and double clicking is used for the default action. What I am suggesting is 
that a double click in a view that has a corresponding element in an editor, 
select the item in the editor and make the editor active, in ALL cases. 


There was a slight miscommunication in this thread - Dani was pointing out 
that the outline view is different than the package explorer, which is 
correct. However, behind the view kind discussion there is an enhancement 
request that is valuable. Outlines should have the following selection 
behaviour:
1) single click -&gt; select and reveal
2) double click -&gt; activate editor

This behaviour has to consider the open mode (single, double click) and the 
linking toggle. My initial reaction is that this behaviour makes sense in all 
modes. CCing Nick, since this should be spelled out in the UI guidelines.
I agree that it should work as Brett is requesting, and that the UI guidelines 
should recommend this behaviour be applied consistently across all views.

Erich or Dani, can you comment on bug 44870, where the Search view is also 
inconsistent in this regard?  I do seem to recall that there were use cases 
where we wanted the Search view to work differently, but cannot remember the 
details.  It would be good to reverse engineer this decision so that any 
reasonable exceptions can be documented in the UI guideline.



Note that the guideline should not simply recommend that double-click activate.
It needs to honour the open mode.  When the open mode is double-click, then 
double-click should open and activate.  When the open mode is single-click, 
then single-click should open but -not- activate, to allow further operations 
on the selected item in the view.
 
Nick, from a user's point of view: shouldn't single click also activate the
editor? As far as I can remember, on all systems applications I used "open" also
activates and this includes open on single-click. Erich told me that the current
"single-click and not activate" soltion is to make Drag and drop work. For me in
Eclipse drag and drop is the (&lt;) 20% case but opening a file is the (&gt;) 80%
case. Since I use single click I always have to perform an additional click or
press a key.

Besided drag and drop are there other user-experienced driven reasons for not
activating the editor (oder whatever is used to open the file).

Please also note with the not-activate approach Eclipe editors are not treated
as equal as system editors: when opening a file with a system editor using
single-click mode in Eclipse the editor gets activated.
Regarding comment #5. Makes sense, but I miss one case:

&gt;When the open mode is double-click, then 
&gt;double-click should open and activate.  When the open mode is single-click, 
&gt;then single-click should open but -not- activate, to allow further operations 
&gt;on the selected item in the view.
when the open mode is single-click and the user double clicks then the editor 
should be activated.
DnD is not the main reason we avoid activating on single click.
DnD should occur if you mouse down then drag.  Open (with or without 
activation) should happen on mouse release if there hasn't been a drag.

The main reason is to allow further operations on the selected object on the 
view, without focus being taken away.  E.g. select file and choose Refactor &gt; 
Rename.  Currently we do this regardless of the "Select on hover" setting.  
Perhaps we should only avoid activating if "Select on hover" is unchecked.

Re comment #6, we could make double-click always activate.

Eduardo, do you remember any more details about the rationale for not 
activating when in single click mode?

Dani and Erich, do you feel that single-click mode should also activate in the 
Search view?
It depends. The problem is that the user can control open mode independent from
the selection mode which can cause troubles for opening context menus as
outlined comment 8. I agree that if the Eclipse user simply checks the
single-click option without checking point/hover based selection then
non-activation is OK. However, when selection by hovering/pointing is checked I
really expect the file to be opened and activated. Note that Windows does not
allow such fine grained control you can either have
double-click opens and single-click selects
or
single-click opens and point (hover) to select

Regarding comment 10: yes I currently consider it a bug that single-click does
not open the file. The bug comes from the open action and is not provided as a
Search view feature. Of course the Search view has to keep the focus (which it
does) when using the Show Next/Prev Match actions.


deferring
Adapting summary since this problem is not restricted to the Outline view.
*** Bug 105556 has been marked as a duplicate of this bug. ***
I think at least double-click should always activate the part. Any objections changing that for 3.5?
Adding Kevin and Eric to increase visibility.
(In reply to comment #15)
&gt; I think at least double-click should always activate the part. Any objections
&gt; changing that for 3.5?

Yes we should absolutely do this.  I'm a little dismayed at the age of this bug, its a subtle but important usability issue.

We should also consider search behaving as the outline (ie. single click, where the target file is already open, should move the selection but keep focus on the search).

And all this of course modulo single/double select mode.

Dani, if we proceed we should open a matching bug to update the guidelines (I can take that one).
&gt;Dani, if we proceed we should open a matching bug to update the guidelines (I
&gt;can take that one).
OK, thanks.

So to summarize:

SINGLE-CLICK MODE:
* file closed
  1 single-click opens but does not activate the editor
  2 double-click opens and activates the editor

* file already open
  3 single-click brings the editor to front but does not activate it
    (plus might also select the element in the editor)
  4 double-click activates the editor
    (plus might also select the element in the editor)

DOUBLE-CLICK MODE:
* file closed
  5 single-click does nothing except selecting the element
  6 double-click opens and activates the editor

* file already open
  7 single-click does nothing except selecting the element
  8 double-click activates the editor
    (plus might also select the element in the editor)

==&gt; the only thing which is currently wrong in the OpenStrategy (and custom implementations in the Outline and the Search view - didn't check other views for custom open strategies) are case 2 and 4. Which means we should reopen and fix bug 44870 as well.

Did I catch the cases correctly?


&gt;We should also consider search behaving as the outline (ie. single click, where
&gt;the target file is already open, should move the selection but keep focus on
&gt;the search).
This is already done that way for single-click mode. I don't think that we should do this also in double-click mode, as this would mean to bring editors to front, which most likely will disturb double-click strategy users.


&gt;Which means we should reopen and fix bug 44870 as well.
Sorry, actually no. For some views which are mainly there for navigating stuff (like the Search view) people might prefer a different behavior when the view is a fast view, i.e. double-click not closing the fast view. Note that we didn't get any bug regarding the Search view behavior except the one from Nick dated 2003.

Note that 'fast view' also means 'minimized stack' now. If we change to more aggressively active the editor then we may negatively affect work-flows for folks that work with a maximized editor. Note that making the Search view stay up when opening as a minimized view (aka 'fast' view) was a high-priority work item for the min/max work...

I think Dani's got the right set of behaviors...-never- activate the editor on a single-click, regardless of the open mode (and -always- activate on a double-click).

&gt;(and -always- activate on a double-click).
But with some exceptions, like the Search view, right? Otherwise this seems to contradict with your first paragraph.

Dani, the work-flow I see is:

Single-click (and let's not forget 'arrow up/down') simply opens the editor without activation. (does 'selection change' == single-click?)

Double-click opens and activates (does 'enter' == double-click?)

This won't break the current behavior since the FV will only close on the double-click case (which is a very specific UI gesture). To para-phrase it:

"Select to browse, Open to activate" - where 'Open' means either hitting 'Enter' -or- double-clicking.

The main difference is that the 'browse' views (Outline and Search at least) want to open the editor on 'select' regardless of the open mode while the various 'Explorers' should respect the current open mode semantics.


Correct.
I'm still not convinced about Search. Presently Search behaves like the package explorer. That suggests the following division:

1) Views that navigate TO resources have one strategy (Package Explorer, Search, Errors)
2) Views that navigate WITHIN a resource have a second strategy (Outline, um Outline)

But then that's not right because the package explorer basically has the outline view embedded within it, once you drill down within a class file.  Add to the confusion that Package Explorer has Link with Editor, which gives you the "click on a method and its selected in already open editor" behaviour that I'd like for Search, yet Search does not have Link with Editor so I can never get that.

What I'd rather see is Search behaving like the agreed to new behaviour for Outline. For the Package Explorer, the elements in the tree have useful operations on their own which you often use (put another way, the view is useful without an editor area).  But the whole point of search is for finding within the contents of files.  That sounds like outline.  It thus seems helpful that if the editor is already open, single selection in the Search (in double-click pref mode) would highlight in the editor, then I can quickly see if it was the thing I was searching for. Why should Search and Outline not behave the same?
&gt;I'm still not convinced about Search.
Darn! It looks like me neither if we look at my previous comments ;-)

When looking at it again I think we should not special case the Search view in case of double-click ==&gt; like Eric said: double-click should always activate the editor no matter which mode.

&gt;It thus seems helpful
&gt;that if the editor is already open, single selection in the Search (in
&gt;double-click pref mode) would highlight in the editor
Totally agree. I actually never noticed that because I use single-click mode. We should enhance case 7 from comment 18.


SINGLE-CLICK MODE:
* file closed
  1 single-click opens but does not activate the editor
    (selects the element in the editor if possible)
  2 double-click opens and activates the editor
    (selects the element in the editor if possible)

* file already open
  3 single-click brings the editor to front but does not activate it
    (selects the element in the editor if possible)
  4 double-click activates the editor
    (selects the element in the editor if possible)

DOUBLE-CLICK MODE:
* file closed
  5 single-click does nothing except selecting the element
  6 double-click opens and activates the editor
    (selects the element in the editor if possible)

* file already open
  7 single-click does nothing except selecting the element
    (iff the currently shown editor contains that element, then it
     selects the element in the editor if possible 
  8 double-click activates the editor
    (selects the element in the editor if possible)


==&gt; fix case 2 and 4 for all views (obviously, we should try to fix this in Platform UI code. Problematic part might be that OpenStrategy.activateOnOpen() is static).

==&gt; fix Outline view regarding case 8

==&gt; fix Search view regarding case 7

==&gt; look at all other views
Case 7 from comment 25 is still wrong as it does not take 'Link with Editor' into account which - at least in 3.4 views - affects case 7:

DOUBLE-CLICK MODE:
* file already open
  7 'Link with Editor' off: single-click does nothing except selecting the element
  7 'Link with Editor' on: single-click brings the editor to front but does not
     activate it (selects the element in the editor if possible)
  7 no 'Link with Editor' up to the view to decide

When only talking about open strategies we could of course just ignore case 7 and say: 
  7 single-click does nothing except selecting the element

It is then up to each view whether what it does on single-click and whether it offers 'Link with Editor'.
Kevin, I suggest we should go ahead with this now and not in later milestones (suggest to target 3.5 M2). Would you also do the code changes in Platform UI (fix case 2 and 4) or only update the guide? I can fix Outline and Search but could also look at the other issue if you can't to do it.
(In reply to comment #26)
&gt; It is then up to each view whether what it does on single-click and whether it
&gt; offers 'Link with Editor'.

We should agree on a guideline though. Plus if we think there are different patterns, we should attempt to describe what they are and when they should be applied.

(In reply to comment #27)
&gt; Kevin, I suggest we should go ahead with this now and not in later milestones
&gt; (suggest to target 3.5 M2). Would you also do the code changes in Platform UI
&gt; (fix case 2 and 4) or only update the guide? I can fix Outline and Search but
&gt; could also look at the other issue if you can't to do it.

I agree its better to do this early.  Theory and reality are often different on these matters!

Unfortunately I will have no ability to work on this in the next 5 weeks.


&gt;Unfortunately I will have no ability to work on this in the next 5 weeks.
I thought we're almost there since there was no further reply to my last suggestion. Could we at least finish the guidelines now?

I can then start to implement it step by step and maybe in 5 weeks you find some time too ;-)
Hi Dani, lets proceed with your last proposal.  I think its fine but we probably need to see it in action to be sure.  We can then write up the guideline.  Thanks for pushing on this item and sorry I'm not more help right now.
Comment 26 and comment 27 look good to me.

Comment 27 requires also
==&gt; fix Outline view regarding case 7
   (with 'Link with Editor' off and doubleclick mode, the Outline currently still selects the item on single click)

For completeness, I would also add these two items to the guidelines:
- The Enter key should do the same as a doubleclick
- If available, the Next / Previous buttons and keybindings (Ctrl+, / Ctrl+.) should select the next element in the view, open (but not activate) the editor, and select the element in the editor.

And all this of course also needs to be tested when the view is a fast view.
Fixing this in OpenStrategy would have caused collateral damage to performance as single-click opening would have been delayed for the double-click delay time (as you can notice e.g. in Windows Explorer). This delay can be up to 1s and since we spend lots of time tuning performance in the 10ms range this wasn't an option. Also, using timerExec can always result in unexpected side effects.

I therefore added a new API class (org.eclipse.ui.OpenAndLinkWithEditorHelper) that helps to correctly handle the open modes in combination with editor linking. As proof of concept I ported the resource and the common navigator (aka Project Explorer) to it. I've also adjusted all JDT views.

Next step is to post the guidelines to http://wiki.eclipse.org/index.php/User_Interface_Guidelines.

Also fixed Search view. Below are the applied guidelines. Kevin, can you add them to the wiki? I'm not sure whether anyone is supposed to change those guidelines.


SINGLE-CLICK MODE:
* file closed
  s) single-click opens but does not activate the editor
     (selects the element in the editor if possible)
  d) double-click opens and activates the editor
     (selects the element in the editor if possible)

* file already open
  s: single-click brings the editor to front but does not activate it
     (selects the element in the editor if possible)
  d: double-click activates the editor
     (selects the element in the editor if possible)

DOUBLE-CLICK MODE:
* file closed
  s) single-click does nothing except selecting the element
  d) double-click opens and activates the editor
     (selects the element in the editor if possible)

* file already open
  s) single-click
     - 'Link with Editor' off: single-click does nothing except selecting the element
     - 'Link with Editor' on:  single-click brings the editor to front but does not activate it
                               (selects the element in the editor if possible)
     - no 'Link with Editor':  up to the view to decide
  d) double-click activates the editor
     (selects the element in the editor if possible)

ADDITIONAL RULES:
- pressing the the 'Enter' key should do the same as a double-click
- Next (Ctrl+.) / Previous (Ctrl+,) buttons select the next/previous element in the view, open (or bring to front) the editor and select the element in the editor but never activate the editor
Added guidelines to
http://wiki.eclipse.org/User_Interface_Guidelines#Interaction_with_Editors</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45187" />
    <CreationDate amount="2003-10-19 22:55:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Double clicking in Package Explorer highlights class name [package explorer]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Rurn on "Show members in Package Explorer" 

Using EclipsePlugin as an example class name, when double clicking on a method 
in that class, like getDefault, getDefault is selected in the editor, but the 
highlight in the package explorer jumps to EclipsePlugin instead of remaining 
on getDefault. 

This is the behavior if "Link with editor" is turned on. If it is turned off, 
the highlight doesn't jump.
Erich, can you investigate for M6 ?
fixed</WithStack>
    <WithOutStack>Rurn on "Show members in Package Explorer" 

Using EclipsePlugin as an example class name, when double clicking on a method 
in that class, like getDefault, getDefault is selected in the editor, but the 
highlight in the package explorer jumps to EclipsePlugin instead of remaining 
on getDefault. 

This is the behavior if "Link with editor" is turned on. If it is turned off, 
the highlight doesn't jump.
Erich, can you investigate for M6 ?
fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45188" />
    <CreationDate amount="2003-10-19 23:31:00 -0400" />
    <DupId amount="37423" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="User Assistance" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Web Accessibility checklist fails checkpoint 9: Two internal frames say "Untitled" in HomePageReader</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="assignment">
        <location start="5220" end="5252" />
        <code>iframes[i].className = "hidden";</code>
      </source_code>
      <source_code type="assignment">
        <location start="5253" end="5290" />
        <code>iframes[i].style.visibility="hidden";</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="10">
        <Lines>
          <Line>1.  Both frames have NAME and TITLE attributes, so the frames that contain the</Line>
          <Line>hidden frames are completely accessible.</Line>
          <Line>2.  The frames are used for implementations of certain DHTML actions and have</Line>
          <Line>no content to be accessed by a user.  In fact they have no content and no SRC</Line>
          <Line>attribute set, so there is no inaccessible content in them.</Line>
          <Line>The fact that there is no content and no source is additionally emphasized by:</Line>
          <Line>- both frames are hidden, not visible in UI.</Line>
          <Line>- tab index is set to -1, so user cannot navigate to these frames using</Line>
          <Line>keyboard.</Line>
          <Line>- the title says to ignore these frames</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- both frames are hidden, not visible in UI.</Line>
          <Line>- tab index is set to -1, so user cannot navigate to these frames using</Line>
          <Line>keyboard.</Line>
          <Line>- the title says to ignore these frames</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>My information center is on 2.1.1 code. The information center is at: 
http://publib.boulder.ibm.com/infocenter/wsphelp/index.jsp

However, I tried a standalone help version using 2.1.2 code, and in HomePage 
Reader, I still see two internal frames that say "Untitled: blank"

I've read bugs 36548 and 37423 and there seem to be some fixes that were made 
in those; however, those indicate they were done in 2.1.1 code, but I'm still 
observing two internal frames without titles in the 2.1.2 plugins when I use 
them for a standalone help. According to the Web Accessibility checklist, 
checkpoint 9, all of the frames need some kind of titles, even the internal 
frames.

At the information center URL above, when viewed using IBM HomePage Reader 
(which is one of the testing tools for IBM Web Accessibility Checklist), there 
are two internal frames that say "Untitled":
Internal frame 11 contained in frame 10: Untitled: blank
Internal frame 8 contained in frame 3: Untitled: blank

Do these frames actually have titles and HomePage Reader is just not picking 
them up?

It seems that to satisfy the checklist, the internal frames that are for layout 
presentation only should list something like:
"Internal frame xx contained in frame yy: Used for layout presentation; no 
meaningful content"

so that visually impaired users will hear the HomePage Reader browser voice 
that these frames don't have content that they need to be reading.

One typical Web accessibility test is to do Ctrl-E in HomePage Reader and scan 
the list of frames and see that none say "Untitled". HomePage Reader creates 
its list using the page TITLE, the FRAME title attribute, or Frame name 
attribute, if available. If it lists "Untitled", then that frame has no TITLE 
or NAME available. Because those internal frames are listing as Untitled today, 
someone testing is going to say that this is not compliant, and I'd really like 
to avoid that in the 2.1.x code stream if at all possible.
All frames have titles.  I am marking the bug as duplicate of bug 37423.  It is 
a Home Page Reader problem.

The navigation views contains view frames and one hidden IFRAME used for 
loading other frames during synchronization.  The HTML code is as follows:
&lt;iframe frameborder="0" style="visibility:hidden" tabindex="-1" name="temp" 
id="temp" title="Ignore this temp frame, it only contains other 
frames."&gt;&lt;/iframe&gt;

The toolbar contains hidden IFrame used to execute live (active) help actions.  
The HTML code is as follows:
&lt;iframe name="liveHelpFrame" title="Ignore this liveHelpFrame frame, it only 
contains other frames." style="visibility:hidden" tabindex="-1" 
frameborder="no" width="0" height="0" scrolling="no"&gt;
&lt;/iframe&gt;

Check point 9:
"Provide a title for each FRAME element and frame page
,Provide an accessible source for each frame"

Answer:
1.  Both frames have NAME and TITLE attributes, so the frames that contain the 
hidden frames are completely accessible.
2.  The frames are used for implementations of certain DHTML actions and have 
no content to be accessed by a user.  In fact they have no content and no SRC 
attribute set, so there is no inaccessible content in them.
The fact that there is no content and no source is additionally emphasized by:
 - both frames are hidden, not visible in UI.
 - tab index is set to -1, so user cannot navigate to these frames using 
keyboard.
 - the title says to ignore these frames

Hence,
We are accessible.  The frames are internal to implementation and cannot be got 
rid of.  We added all possible accessibility features to these frames.  Users 
that do not use special tools, or use good tools have no chance of being 
confused by these frames.  Jaws has no problem with these frames, only Home 
Page Reader has.  It should report the title correctly, honor visibility:hidden 
and tabindex=-1.  The bugs are in Home Page reader and I am not sure they will 
ever be fixed, as Home Page Reader in not even supported on Windows XP.

*** This bug has been marked as a duplicate of 37423 ***
What's curious to me is that HomePage Reader reports some of the internal 
frames with titles, but just not two particular ones. Is it that it's only 
those 2 that have the hidden attribute, while the other internal frames are 
visible?

See the attachment which is the list of frames when I load the information in 
HomePage Reader. It shows 6 internal frames listed, but 2 of the 6 
say "Untitled" (#11 and #8), while the others show titles. The internal frames 
that are listed as "Untitled" and the other ones that have specific titles 
listed. Are those the two hidden ones, while the other ones are visible?

I can go to the Accessibility Center and ask them to clarify in the checklist 
regarding the tool. However, I need to understand why there seems to be a 
difference in the treatment of one type of internal frame vs the other, so I 
can articulate an intelligent case to them.


Created attachment 6494
screen capture of Home Page Reader Frames listing window on Information Center
Other frames are hidden or visible depending on the user actions, so they do 
not have attribute style="visibility:hidden" but have visibility controlled 
from JavaScript by code like:
iframes[i].className = "hidden";
iframes[i].style.visibility="hidden";
So the two frames are not the only hidden ones.
Jaws does not report frames that are hidden (correct), but HPR does.  For 
example after launching content view is shown, and search results view is not 
(it is hidden).  So in addition to reporting two frames as "Untitled: blank", 
HPR shows "Search Results" frame and second "Toolbar" frame, which are hidden 
and should not be reported.

But, the main problem #1 of HPR is that it simply ignores TITLE attribute of 
the FRAME or IFRAME element.
When it ignores title of our two frames that do not have any source, it has 
nothing tho show, so it reports "Untitled: blank".
For our frames titled "Search Results View Toolbar"(usually hidden) 
and "Contents View Toolbar"(usually visible), HPR reports both of them, and 
shows the name as "Toolbar".  This is clearly wrong.  Who ever defines 
frameset and uses TITLE attribute on the frames has knowledge how many frames 
there are.  The documents displayed inside frames have no knowledge of each 
other, any many can share the same document title.  In HTML document title has 
nothing to do with frame title.  HPR should not use those.
Another example to illustrated the problem:
The frame #1 we defined and gave it a title "Banner".  HPR reports the frame 
title as "IBM Websphere .....".  It is clear that HPR displays document titles 
instead of frame titles.

I suggest to treat HPR as a tool to aid identifying problems.  It is not a 
tool to pass or fail standard compliance.</WithStack>
    <WithOutStack>My information center is on 2.1.1 code. The information center is at: 
http://publib.boulder.ibm.com/infocenter/wsphelp/index.jsp

However, I tried a standalone help version using 2.1.2 code, and in HomePage 
Reader, I still see two internal frames that say "Untitled: blank"

I've read bugs 36548 and 37423 and there seem to be some fixes that were made 
in those; however, those indicate they were done in 2.1.1 code, but I'm still 
observing two internal frames without titles in the 2.1.2 plugins when I use 
them for a standalone help. According to the Web Accessibility checklist, 
checkpoint 9, all of the frames need some kind of titles, even the internal 
frames.

At the information center URL above, when viewed using IBM HomePage Reader 
(which is one of the testing tools for IBM Web Accessibility Checklist), there 
are two internal frames that say "Untitled":
Internal frame 11 contained in frame 10: Untitled: blank
Internal frame 8 contained in frame 3: Untitled: blank

Do these frames actually have titles and HomePage Reader is just not picking 
them up?

It seems that to satisfy the checklist, the internal frames that are for layout 
presentation only should list something like:
"Internal frame xx contained in frame yy: Used for layout presentation; no 
meaningful content"

so that visually impaired users will hear the HomePage Reader browser voice 
that these frames don't have content that they need to be reading.

One typical Web accessibility test is to do Ctrl-E in HomePage Reader and scan 
the list of frames and see that none say "Untitled". HomePage Reader creates 
its list using the page TITLE, the FRAME title attribute, or Frame name 
attribute, if available. If it lists "Untitled", then that frame has no TITLE 
or NAME available. Because those internal frames are listing as Untitled today, 
someone testing is going to say that this is not compliant, and I'd really like 
to avoid that in the 2.1.x code stream if at all possible.
All frames have titles.  I am marking the bug as duplicate of bug 37423.  It is 
a Home Page Reader problem.

The navigation views contains view frames and one hidden IFRAME used for 
loading other frames during synchronization.  The HTML code is as follows:
&lt;iframe frameborder="0" style="visibility:hidden" tabindex="-1" name="temp" 
id="temp" title="Ignore this temp frame, it only contains other 
frames."&gt;&lt;/iframe&gt;

The toolbar contains hidden IFrame used to execute live (active) help actions.  
The HTML code is as follows:
&lt;iframe name="liveHelpFrame" title="Ignore this liveHelpFrame frame, it only 
contains other frames." style="visibility:hidden" tabindex="-1" 
frameborder="no" width="0" height="0" scrolling="no"&gt;
&lt;/iframe&gt;

Check point 9:
"Provide a title for each FRAME element and frame page
,Provide an accessible source for each frame"

Answer:
1.  Both frames have NAME and TITLE attributes, so the frames that contain the 
hidden frames are completely accessible.
2.  The frames are used for implementations of certain DHTML actions and have 
no content to be accessed by a user.  In fact they have no content and no SRC 
attribute set, so there is no inaccessible content in them.
The fact that there is no content and no source is additionally emphasized by:
 - both frames are hidden, not visible in UI.
 - tab index is set to -1, so user cannot navigate to these frames using 
keyboard.
 - the title says to ignore these frames

Hence,
We are accessible.  The frames are internal to implementation and cannot be got 
rid of.  We added all possible accessibility features to these frames.  Users 
that do not use special tools, or use good tools have no chance of being 
confused by these frames.  Jaws has no problem with these frames, only Home 
Page Reader has.  It should report the title correctly, honor visibility:hidden 
and tabindex=-1.  The bugs are in Home Page reader and I am not sure they will 
ever be fixed, as Home Page Reader in not even supported on Windows XP.

*** This bug has been marked as a duplicate of 37423 ***
What's curious to me is that HomePage Reader reports some of the internal 
frames with titles, but just not two particular ones. Is it that it's only 
those 2 that have the hidden attribute, while the other internal frames are 
visible?

See the attachment which is the list of frames when I load the information in 
HomePage Reader. It shows 6 internal frames listed, but 2 of the 6 
say "Untitled" (#11 and #8), while the others show titles. The internal frames 
that are listed as "Untitled" and the other ones that have specific titles 
listed. Are those the two hidden ones, while the other ones are visible?

I can go to the Accessibility Center and ask them to clarify in the checklist 
regarding the tool. However, I need to understand why there seems to be a 
difference in the treatment of one type of internal frame vs the other, so I 
can articulate an intelligent case to them.


Created attachment 6494
screen capture of Home Page Reader Frames listing window on Information Center
Other frames are hidden or visible depending on the user actions, so they do 
not have attribute style="visibility:hidden" but have visibility controlled 
from JavaScript by code like:
iframes[i].className = "hidden";
iframes[i].style.visibility="hidden";
So the two frames are not the only hidden ones.
Jaws does not report frames that are hidden (correct), but HPR does.  For 
example after launching content view is shown, and search results view is not 
(it is hidden).  So in addition to reporting two frames as "Untitled: blank", 
HPR shows "Search Results" frame and second "Toolbar" frame, which are hidden 
and should not be reported.

But, the main problem #1 of HPR is that it simply ignores TITLE attribute of 
the FRAME or IFRAME element.
When it ignores title of our two frames that do not have any source, it has 
nothing tho show, so it reports "Untitled: blank".
For our frames titled "Search Results View Toolbar"(usually hidden) 
and "Contents View Toolbar"(usually visible), HPR reports both of them, and 
shows the name as "Toolbar".  This is clearly wrong.  Who ever defines 
frameset and uses TITLE attribute on the frames has knowledge how many frames 
there are.  The documents displayed inside frames have no knowledge of each 
other, any many can share the same document title.  In HTML document title has 
nothing to do with frame title.  HPR should not use those.
Another example to illustrated the problem:
The frame #1 we defined and gave it a title "Banner".  HPR reports the frame 
title as "IBM Websphere .....".  It is clear that HPR displays document titles 
instead of frame titles.

I suggest to treat HPR as a tool to aid identifying problems.  It is not a 
tool to pass or fail standard compliance.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45189" />
    <CreationDate amount="2003-10-20 00:18:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Empty delta on file saving</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="19">
        <Lines>
          <Line>1) This one is generated when I added a field in the class AAA (through an</Line>
          <Line>open editor). I did not save the file, I just stopped typing.</Line>
          <Line />
          <Line>FIRING POST_CHANGE Delta [Thread</Line>
          <Line>[org.eclipse.jdt.internal.ui.text.JavaReconciler,1,main]]:</Line>
          <Line>&lt;NONE&gt;</Line>
          <Line>FIRING POST_RECONCILE Delta [Thread</Line>
          <Line>[org.eclipse.jdt.internal.ui.text.JavaReconciler,1,main]]:</Line>
          <Line>[Working copy] AAA.java[*]: {CHILDREN | FINE GRAINED}</Line>
          <Line>AAA[*]: {CHILDREN | FINE GRAINED}</Line>
          <Line>i[+]: {}</Line>
          <Line />
          <Line>2) After the previous delta, I went back to my editor, saved it and</Line>
          <Line>surprisingly received no delta.</Line>
          <Line />
          <Line>FIRING POST_CHANGE Delta [Thread[main,6,main]]:</Line>
          <Line>&lt;NONE&gt;</Line>
          <Line>FIRING POST_RECONCILE Delta [Thread[main,6,main]]:</Line>
          <Line>&lt;NONE&gt;</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I'm surprised that the delta received on file saving are empty whereas they 
were containing information in 2.1.
Please find below deltas generated.

1) This one is generated when I added a field in the class AAA (through an 
open editor). I did not save the file, I just stopped typing.
 
FIRING POST_CHANGE Delta [Thread
[org.eclipse.jdt.internal.ui.text.JavaReconciler,1,main]]:
&lt;NONE&gt;
FIRING POST_RECONCILE Delta [Thread
[org.eclipse.jdt.internal.ui.text.JavaReconciler,1,main]]:
[Working copy] AAA.java[*]: {CHILDREN | FINE GRAINED}
 AAA[*]: {CHILDREN | FINE GRAINED}
  i[+]: {}
 
2) After the previous delta, I went back to my editor, saved it and 
surprisingly received no delta. 
 
FIRING POST_CHANGE Delta [Thread[main,6,main]]:
&lt;NONE&gt;
FIRING POST_RECONCILE Delta [Thread[main,6,main]]:
&lt;NONE&gt;

In this case I would expect to have the field i added in the original 
compilation unit.
Which build are you using?
M4
This is a consequence of the notion of primary working copies which are 
automatically associated with compilation units being edited. This was 
documented in recent build notes (along M4). We are preparing an entry for this 
topic in the porting guide for 3.0.

Basically, primary working copies are allowing the Java model to behave like a 
virtual file system. For units opened in editors, primary working copies will 
be created (upon request), and these transparently take precedence over 
underlying resource files. Thus fine grain deltas (during reconcile) apply to 
the edited unit, and when saved the model isn't altered. Only a side-effect is 
performed on the underlying resource file (you should get a resource delta), 
but from the Java Model standpoint, nothing is changing as the logical unit 
isn't modified by the save action.
Actually, I can't find the release notes entry I was looking for. Jerome, can 
you point Estelle at some material ?
This issue is captured in bug 40782. Estelle do you need more information, or 
can I close this bug?
Closing as this works as expected.</WithStack>
    <WithOutStack>I'm surprised that the delta received on file saving are empty whereas they 
were containing information in 2.1.
Please find below deltas generated.

1) This one is generated when I added a field in the class AAA (through an 
open editor). I did not save the file, I just stopped typing.
 
FIRING POST_CHANGE Delta [Thread
[org.eclipse.jdt.internal.ui.text.JavaReconciler,1,main]]:
&lt;NONE&gt;
FIRING POST_RECONCILE Delta [Thread
[org.eclipse.jdt.internal.ui.text.JavaReconciler,1,main]]:
[Working copy] AAA.java[*]: {CHILDREN | FINE GRAINED}
 AAA[*]: {CHILDREN | FINE GRAINED}
  i[+]: {}
 
2) After the previous delta, I went back to my editor, saved it and 
surprisingly received no delta. 
 
FIRING POST_CHANGE Delta [Thread[main,6,main]]:
&lt;NONE&gt;
FIRING POST_RECONCILE Delta [Thread[main,6,main]]:
&lt;NONE&gt;

In this case I would expect to have the field i added in the original 
compilation unit.
Which build are you using?
M4
This is a consequence of the notion of primary working copies which are 
automatically associated with compilation units being edited. This was 
documented in recent build notes (along M4). We are preparing an entry for this 
topic in the porting guide for 3.0.

Basically, primary working copies are allowing the Java model to behave like a 
virtual file system. For units opened in editors, primary working copies will 
be created (upon request), and these transparently take precedence over 
underlying resource files. Thus fine grain deltas (during reconcile) apply to 
the edited unit, and when saved the model isn't altered. Only a side-effect is 
performed on the underlying resource file (you should get a resource delta), 
but from the Java Model standpoint, nothing is changing as the logical unit 
isn't modified by the save action.
Actually, I can't find the release notes entry I was looking for. Jerome, can 
you point Estelle at some material ?
This issue is captured in bug 40782. Estelle do you need more information, or 
can I close this bug?
Closing as this works as expected.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45190" />
    <CreationDate amount="2003-10-20 02:41:00 -0400" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="AspectJ" />
    <component amount="Compiler" />
    <Version amount="1.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>matching javac's enforcement of package structure</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>The feature is described in the following aspectj-users conversation:

-------------

I agree with both of you that this feature of javac can be annoying.  I can 
never bring myself to write the code to enforce this rule (so ajc doesn't).  
However, we've gotten our fair share of bug reports complaining about legal 
behavior that was different from javac's.  We usually wind up "fixing" these 
in acknowledgement of javac's position as a de-facto standard.

This rule combined with the rule that externally visible classes must be in a 
file named ClassName.java makes it easy for compilers to find the correct 
source file for a given class name without doing any parsing.
This is very useful for javac's dependency-based compilation where you can 
point it at Main.java and have all dependencies compiled automatically.  It 
can also make implementing incremental compilation easier.

In AspectJ-1.2, we should add a -warn:packageMatchesDirectory option to go 
along with eclipse's other warning options like the one for unused local 
variables.  I'm afraid that the default behavior will probably be to match 
javac following the principle of least surprise.  However, I'm almost certain 
that this will be an option that can be disabled for those who find the rule 
silly.

-Jim

BTW - I've been exploring the csharp language and MS's tools are much more 
flexible about the relationship between file structure and namespaces.  I've 
found this to be very helpful in the early stages of a project where I often 
want all of my classes in a single file.  However, I've found that as a 
project grows I will break it up into the one class per file and one directory 
per package structure enforced by javac.
This is made easier by csharp's 'internal' modifier that roughly corresponds 
to "within my .jar file" rather than within my package.

&gt; -----Original Message-----
&gt; From: aspectj-users-admin@eclipse.org [mailto:aspectj-users- 
&gt; admin@eclipse.org] On Behalf Of Lendvai Attila
&gt; Sent: Saturday, October 18, 2003 2:52 AM
&gt; To: aspectj-users@eclipse.org
&gt; Subject: RE: [aspectj-users] ajc not enforcing package - directory 
&gt; structure rule
&gt; 
&gt; :: &gt; is it a feature or a bug that ajc does not complain if a
&gt; :: &gt; file is not in
&gt; :: &gt; a directory structure what it's package name defines?
&gt; ::
&gt; :: Feature in my view . There's no requirement that source
&gt; :: files be stored in the same directory structure as their
&gt; :: packages define. I find it very annoying when IDE's require this.
&gt; 
&gt; i kinda like it, too. btw, javac itself is the one who complains, not 
&gt; only the ide's.
&gt; 
&gt; i would just like to know wether this feature will remain or will be 
&gt; fixed, so i can have my long term package strategy...
&gt; 
&gt; i like package private stuff, but on the other hand i don't like 
&gt; directories with houdreds of files.
This is a nice enhancement and with a patch we'd be happy to add it.
There are higher-priority items for now.
this one does come up fairly frequently. if we can spare a few cycles in the
next month, let's take a look.
*** Bug 106032 has been marked as a duplicate of this bug. ***
sorry, missed the cut on this one again....
and again
*** Bug 143441 has been marked as a duplicate of this bug. ***
This one continues to cause surprise and concern among newcomers to the language "it's not a bug, it's a feature." It would be really good to have an Xlint warning as Jim described by 1.5.3
*** Bug 163233 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>The feature is described in the following aspectj-users conversation:

-------------

I agree with both of you that this feature of javac can be annoying.  I can 
never bring myself to write the code to enforce this rule (so ajc doesn't).  
However, we've gotten our fair share of bug reports complaining about legal 
behavior that was different from javac's.  We usually wind up "fixing" these 
in acknowledgement of javac's position as a de-facto standard.

This rule combined with the rule that externally visible classes must be in a 
file named ClassName.java makes it easy for compilers to find the correct 
source file for a given class name without doing any parsing.
This is very useful for javac's dependency-based compilation where you can 
point it at Main.java and have all dependencies compiled automatically.  It 
can also make implementing incremental compilation easier.

In AspectJ-1.2, we should add a -warn:packageMatchesDirectory option to go 
along with eclipse's other warning options like the one for unused local 
variables.  I'm afraid that the default behavior will probably be to match 
javac following the principle of least surprise.  However, I'm almost certain 
that this will be an option that can be disabled for those who find the rule 
silly.

-Jim

BTW - I've been exploring the csharp language and MS's tools are much more 
flexible about the relationship between file structure and namespaces.  I've 
found this to be very helpful in the early stages of a project where I often 
want all of my classes in a single file.  However, I've found that as a 
project grows I will break it up into the one class per file and one directory 
per package structure enforced by javac.
This is made easier by csharp's 'internal' modifier that roughly corresponds 
to "within my .jar file" rather than within my package.

&gt; -----Original Message-----
&gt; From: aspectj-users-admin@eclipse.org [mailto:aspectj-users- 
&gt; admin@eclipse.org] On Behalf Of Lendvai Attila
&gt; Sent: Saturday, October 18, 2003 2:52 AM
&gt; To: aspectj-users@eclipse.org
&gt; Subject: RE: [aspectj-users] ajc not enforcing package - directory 
&gt; structure rule
&gt; 
&gt; :: &gt; is it a feature or a bug that ajc does not complain if a
&gt; :: &gt; file is not in
&gt; :: &gt; a directory structure what it's package name defines?
&gt; ::
&gt; :: Feature in my view . There's no requirement that source
&gt; :: files be stored in the same directory structure as their
&gt; :: packages define. I find it very annoying when IDE's require this.
&gt; 
&gt; i kinda like it, too. btw, javac itself is the one who complains, not 
&gt; only the ide's.
&gt; 
&gt; i would just like to know wether this feature will remain or will be 
&gt; fixed, so i can have my long term package strategy...
&gt; 
&gt; i like package private stuff, but on the other hand i don't like 
&gt; directories with houdreds of files.
This is a nice enhancement and with a patch we'd be happy to add it.
There are higher-priority items for now.
this one does come up fairly frequently. if we can spare a few cycles in the
next month, let's take a look.
*** Bug 106032 has been marked as a duplicate of this bug. ***
sorry, missed the cut on this one again....
and again
*** Bug 143441 has been marked as a duplicate of this bug. ***
This one continues to cause surprise and concern among newcomers to the language "it's not a bug, it's a feature." It would be really good to have an Xlint warning as Jim described by 1.5.3
*** Bug 163233 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45191" />
    <CreationDate amount="2003-10-20 03:17:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>CVS Repo view does not show projects if opening 3.0 wsp with 2.12</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>2.1.2 RC2

I know we don't support this scenario but thought I let you know. I run into
this while testing 2.1.2 RC2 along with my existing 3.0 workspace (which I
backed up before).

After opening my workspace I opened the CVS Repository perspective and opened
HEAD of an existing dev.eclipse.org connection but only modules were shown - no
projects. A fresh location shows the projects as well.
This was caused by the removal of configurability of the remote program name. 
In CVSProviderPlugin, we wrote a dummy place holder instead of "cvs". I've 
changed it to write "cvs" which fixes this problem.</WithStack>
    <WithOutStack>2.1.2 RC2

I know we don't support this scenario but thought I let you know. I run into
this while testing 2.1.2 RC2 along with my existing 3.0 workspace (which I
backed up before).

After opening my workspace I opened the CVS Repository perspective and opened
HEAD of an existing dev.eclipse.org connection but only modules were shown - no
projects. A fresh location shows the projects as well.
This was caused by the removal of configurability of the remote program name. 
In CVSProviderPlugin, we wrote a dummy place holder instead of "cvs". I've 
changed it to write "cvs" which fixes this problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45192" />
    <CreationDate amount="2003-10-20 03:27:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[KeyBindings] CTRL+space doesn't bring up content assist</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>CTRL+space doesn't bring up content assist in the Java editor, but the menu 
item does work correctly.
M4: This is also a problem in the Display view for the Debugger: CTRL+space 
does not work, but Right-Click--&gt; Content Assist brings up the menu.
this works for me. i'm running 200310290955 using org.eclipse.ui.workbench from head. please 
confirm. which build were you running (john davidson).

joe moore: file a bug against platform debug.</WithStack>
    <WithOutStack>CTRL+space doesn't bring up content assist in the Java editor, but the menu 
item does work correctly.
M4: This is also a problem in the Display view for the Debugger: CTRL+space 
does not work, but Right-Click--&gt; Content Assist brings up the menu.
this works for me. i'm running 200310290955 using org.eclipse.ui.workbench from head. please 
confirm. which build were you running (john davidson).

joe moore: file a bug against platform debug.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45193" />
    <CreationDate amount="2003-10-20 04:57:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>hierarchy scope search only shows types that exist in jars</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="6">
      <source_code type="assignment">
        <location start="163" end="231" />
        <code>IJavaSearchScope scope = SearchEngine.createHierarchyScope(myIType);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1344" end="1374" />
        <code>(JavaProjectHelper.JUNIT_SRC);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1454" end="1458" />
        <code>());</code>
      </source_code>
      <source_code type="assignment">
        <location start="1552" end="1614" />
        <code>IType type= fJProject1.findType("junit.framework.TestCase");</code>
      </source_code>
      <source_code type="assignment">
        <location start="1615" end="1682" />
        <code>IJavaSearchScope scope = SearchEngine.createHierarchyScope(type);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1903" end="1919" />
        <code>dialog.open();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>(e.g. "/TestProject1/src/junit/extensions/ActiveTestSuite.java") but the path</Line>
          <Line>given to HierarchyScope.encloses(String) is a relative path</Line>
          <Line>(e.g. "TestProject1/src/junit/extensions/ActiveTestSuite.java"). Why is that?</Line>
          <Line>The second path should also be an absolute path. This would fix the problem.</Line>
          <Line>you're right, bug in our code! sorry for that, didn't see this small difference.</Line>
          <Line>fixed &gt; 20031111</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>2.1.1 &amp; 20031020

from bug 12955:
However, the hierarchy scope search only shows types that exist in jars. No 
types in the source path are shown in the results.

IJavaSearchScope scope = SearchEngine.createHierarchyScope(myIType);

SelectionDialog dialog =
JavaUI.createTypeDialog(
    getShell(),
    new ProgressMonitorDialog(getShell()),
    scope(),
    IJavaElementSearchConstants.CONSIDER_CLASSES,
    false);

I tried this 3.0 HEAD: The type dialog does only contain types from binaries.
I debugged into it. My guess is that there is a bug in 
HierarchyScope.buildResourceVector: The only add to this.resourcePaths is 
inside the 'root instanceof JarPackageFragmentRoot' then-block.
Sorry I didn't verify this last year. Things got thick around here. Having our 
first kid'll do that!

Geoff
Martin, what JDT/Core API does createTypeDialog call? What are the paramters 
passed to this API?
The user passes in a (hierarchy) scope (IJavaSearchScope).
We go over all types in our all types cache:
If 'scope.encloses(typeInfo.getPath())' then the element is added to the dialog.
typeInfo.getPath()) is one of the paths returned from the all types search.

This was my test code:
- The dialog shows only java.lang.Object

public void test_bug44772a() throws Exception {
		
  File junitSrcArchive= JavaTestPlugin.getDefault().getFileInPlugin
(JavaProjectHelper.JUNIT_SRC);
  assertTrue("Junit source", junitSrcArchive != null &amp;&amp; junitSrcArchive.exists
());
  JavaProjectHelper.addSourceContainerWithImport(fJProject1, "src", 
junitSrcArchive);
		
		
  IType type= fJProject1.findType("junit.framework.TestCase");
  IJavaSearchScope scope = SearchEngine.createHierarchyScope(type);
  SelectionDialog dialog= JavaUI.createTypeDialog(
	JavaPlugin.getActiveWorkbenchShell(),
	new ProgressMonitorDialog(JavaPlugin.getActiveWorkbenchShell()),
	scope,
	IJavaElementSearchConstants.CONSIDER_CLASSES,
	false);
  dialog.open();
}
Just wondering if a fix for this is realistic for 3.0 final. If not, I will 
adjust my plans accordingly.

Geoff
Martin, are you certain that IJavaSearchScope.encloses(String) fails in 3.0M4? 
I cannot reproduce, and no test_bug44772a exists.
If this fails in 3.0, can you provide a test case?
This still seems to be the case in 20030929 . The test is the code contained in 
comment #3 (it's not in our test suites as this is an interactive test). copy 
the test method and paste it in e.g. TypeInfoTest, run the test. When the dialog
opens, inesrt '*' as name (=all types). You get only 'Object', but not 'Assert' 
(TestCase extends Assert)

Why do you always assume that I know your tests? :-)
Ok I'll try this out.
No, in fact this time I tried to avoid the confusion and wanted to have only 
code in the bug report, so you wouldn't be required to have the latest jdt.test 
HEAD code...

Martin, the path given to the TypeInfoRequestor is an absolute path 
(e.g. "/TestProject1/src/junit/extensions/ActiveTestSuite.java") but the path 
given to HierarchyScope.encloses(String) is a relative path 
(e.g. "TestProject1/src/junit/extensions/ActiveTestSuite.java"). Why is that? 
The second path should also be an absolute path. This would fix the problem.
you're right, bug in our code! sorry for that, didn't see this small difference.
fixed &gt; 20031111</WithStack>
    <WithOutStack>2.1.1 &amp; 20031020

from bug 12955:
However, the hierarchy scope search only shows types that exist in jars. No 
types in the source path are shown in the results.

IJavaSearchScope scope = SearchEngine.createHierarchyScope(myIType);

SelectionDialog dialog =
JavaUI.createTypeDialog(
    getShell(),
    new ProgressMonitorDialog(getShell()),
    scope(),
    IJavaElementSearchConstants.CONSIDER_CLASSES,
    false);

I tried this 3.0 HEAD: The type dialog does only contain types from binaries.
I debugged into it. My guess is that there is a bug in 
HierarchyScope.buildResourceVector: The only add to this.resourcePaths is 
inside the 'root instanceof JarPackageFragmentRoot' then-block.
Sorry I didn't verify this last year. Things got thick around here. Having our 
first kid'll do that!

Geoff
Martin, what JDT/Core API does createTypeDialog call? What are the paramters 
passed to this API?
The user passes in a (hierarchy) scope (IJavaSearchScope).
We go over all types in our all types cache:
If 'scope.encloses(typeInfo.getPath())' then the element is added to the dialog.
typeInfo.getPath()) is one of the paths returned from the all types search.

This was my test code:
- The dialog shows only java.lang.Object

public void test_bug44772a() throws Exception {
		
  File junitSrcArchive= JavaTestPlugin.getDefault().getFileInPlugin
(JavaProjectHelper.JUNIT_SRC);
  assertTrue("Junit source", junitSrcArchive != null &amp;&amp; junitSrcArchive.exists
());
  JavaProjectHelper.addSourceContainerWithImport(fJProject1, "src", 
junitSrcArchive);
		
		
  IType type= fJProject1.findType("junit.framework.TestCase");
  IJavaSearchScope scope = SearchEngine.createHierarchyScope(type);
  SelectionDialog dialog= JavaUI.createTypeDialog(
	JavaPlugin.getActiveWorkbenchShell(),
	new ProgressMonitorDialog(JavaPlugin.getActiveWorkbenchShell()),
	scope,
	IJavaElementSearchConstants.CONSIDER_CLASSES,
	false);
  dialog.open();
}
Just wondering if a fix for this is realistic for 3.0 final. If not, I will 
adjust my plans accordingly.

Geoff
Martin, are you certain that IJavaSearchScope.encloses(String) fails in 3.0M4? 
I cannot reproduce, and no test_bug44772a exists.
If this fails in 3.0, can you provide a test case?
This still seems to be the case in 20030929 . The test is the code contained in 
comment #3 (it's not in our test suites as this is an interactive test). copy 
the test method and paste it in e.g. TypeInfoTest, run the test. When the dialog
opens, inesrt '*' as name (=all types). You get only 'Object', but not 'Assert' 
(TestCase extends Assert)

Why do you always assume that I know your tests? :-)
Ok I'll try this out.
No, in fact this time I tried to avoid the confusion and wanted to have only 
code in the bug report, so you wouldn't be required to have the latest jdt.test 
HEAD code...

Martin, the path given to the TypeInfoRequestor is an absolute path 
(e.g. "/TestProject1/src/junit/extensions/ActiveTestSuite.java") but the path 
given to HierarchyScope.encloses(String) is a relative path 
(e.g. "TestProject1/src/junit/extensions/ActiveTestSuite.java"). Why is that? 
The second path should also be an absolute path. This would fix the problem.
you're right, bug in our code! sorry for that, didn't see this small difference.
fixed &gt; 20031111</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45194" />
    <CreationDate amount="2003-10-20 05:16:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="major" />
    <Summery>[templates] ${enclosing_*} doesn't work  in M4</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>All those enclosing_* variables that can be used in templates are no longer
replaced with the values but treated as ordinary variables
Confirmed using I20031015


*** Bug 45970 has been marked as a duplicate of this bug. ***
*** Bug 46179 has been marked as a duplicate of this bug. ***
enclosing_type
*** Bug 46783 has been marked as a duplicate of this bug. ***
appears to be fixed in the newest builds (e.g. N20031116 + plugin-export
20031118 of jdt &amp; text components).
verified</WithStack>
    <WithOutStack>All those enclosing_* variables that can be used in templates are no longer
replaced with the values but treated as ordinary variables
Confirmed using I20031015


*** Bug 45970 has been marked as a duplicate of this bug. ***
*** Bug 46179 has been marked as a duplicate of this bug. ***
enclosing_type
*** Bug 46783 has been marked as a duplicate of this bug. ***
appears to be fixed in the newest builds (e.g. N20031116 + plugin-export
20031118 of jdt &amp; text components).
verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45195" />
    <CreationDate amount="2003-10-20 06:39:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Debug View: Copy Stack only copies &lt;pending...&gt;</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functiondef">
        <location start="598" end="908" />
        <code>LabelProvider#getText(element) {
 if (textCache.contains(element)) {
  text= textCache.remove(element); // value is removed from cache when found
 } else {
  text= "&lt;pending...&gt;";
 }
 // START BACKGROUND JOB {
  text= calculateText(element);
  textCache.put(element, text);
  view.refresh();
 }
 return text;
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="10">
        <Lines>
          <Line>- debugging a java program</Line>
          <Line>- in suspended mode, select an item in the stack tree of the Debug view</Line>
          <Line>- context menu &gt; Copy Stack</Line>
          <Line>-&gt; expected: clipboard contains stack trace(s)</Line>
          <Line>-&gt; was: clipboard contains hierarchical (tabbed) text list of &lt;pending...&gt;</Line>
          <Line>This is due to our new background label support.</Line>
          <Line>Right. And it's nasty because it's a design problem with the way the label</Line>
          <Line>provider works. I wrote the launch view label provider assuming that it was only</Line>
          <Line>used to provide labels for the launch view (silly me :P). It uses a one-time</Line>
          <Line>cache that is intended to work like so:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Build id: 200310150800

- debugging a java program
- in suspended mode, select an item in the stack tree of the Debug view
- context menu &gt; Copy Stack
-&gt; expected: clipboard contains stack trace(s)
-&gt; was: clipboard contains hierarchical (tabbed) text list of &lt;pending...&gt;
This is due to our new background label support.
Right. And it's nasty because it's a design problem with the way the label 
provider works. I wrote the launch view label provider assuming that it was only 
used to provide labels for the launch view (silly me :P). It uses a one-time 
cache that is intended to work like so:
LabelProvider#getText(element) {
 if (textCache.contains(element)) {
  text= textCache.remove(element); // value is removed from cache when found
 } else {
  text= "&lt;pending...&gt;";
 }
 // START BACKGROUND JOB {
  text= calculateText(element);
  textCache.put(element, text);
  view.refresh();
 }
 return text;
}

When the launch view asks for a label, it gets &lt;pending...&gt;, then the background 
job computes the real label and tells the launch view to refresh. When it 
refreshes, it asks for the labels again and this time it gets the cached value. 
The cached value is cleared to avoid any problems with the label becoming stale.

The most robust solution to this problem will probably be to change the label 
provider to make it only remove text from the cache at the appropriate time. But 
this will probably be tricky.

An alternative would be for no one other than the launch view to use its label 
provider. Other actions could ask for the text using a label provider that 
doesn't compute labels in the background. However, this would probably require 
an API change.
Can't we just change the 'copy' action to traverse the actual tree widgets 
(items), and use their text/labels?
Righto. The TreeItem approach works, plus it's way faster (no calls to the content or label 
providers) and more accurate (WYSIWYG).

Please verify, DarinW.
Verified.</WithStack>
    <WithOutStack>Build id: 200310150800

- debugging a java program
- in suspended mode, select an item in the stack tree of the Debug view
- context menu &gt; Copy Stack
-&gt; expected: clipboard contains stack trace(s)
-&gt; was: clipboard contains hierarchical (tabbed) text list of &lt;pending...&gt;
This is due to our new background label support.
Right. And it's nasty because it's a design problem with the way the label 
provider works. I wrote the launch view label provider assuming that it was only 
used to provide labels for the launch view (silly me :P). It uses a one-time 
cache that is intended to work like so:
LabelProvider#getText(element) {
 if (textCache.contains(element)) {
  text= textCache.remove(element); // value is removed from cache when found
 } else {
  text= "&lt;pending...&gt;";
 }
 // START BACKGROUND JOB {
  text= calculateText(element);
  textCache.put(element, text);
  view.refresh();
 }
 return text;
}

When the launch view asks for a label, it gets &lt;pending...&gt;, then the background 
job computes the real label and tells the launch view to refresh. When it 
refreshes, it asks for the labels again and this time it gets the cached value. 
The cached value is cleared to avoid any problems with the label becoming stale.

The most robust solution to this problem will probably be to change the label 
provider to make it only remove text from the cache at the appropriate time. But 
this will probably be tricky.

An alternative would be for no one other than the launch view to use its label 
provider. Other actions could ask for the text using a label provider that 
doesn't compute labels in the background. However, this would probably require 
an API change.
Can't we just change the 'copy' action to traverse the actual tree widgets 
(items), and use their text/labels?
Righto. The TreeItem approach works, plus it's way faster (no calls to the content or label 
providers) and more accurate (WYSIWYG).

Please verify, DarinW.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45196" />
    <CreationDate amount="2003-10-20 06:44:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Threads and Monitors view should offer "Copy"</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The Threads and Monitors view should offer a "Copy" command (menu / context
menu) to copy the shown trees as text to the clipboard (similar to Copy Stack in
the Debug view).

This would allow users to easily append more information to a PR when they
encounter a deadlock.
I was going to enter a request for this but found it already so... ditto.

I wanted to report a thread deadlock to an open source project but I had to re-
type in part of the treads and monitors window (adding a few typos probably) 
into the bug report. I tried selecting a few items and pressing Ctrl-C but it 
didn't do anything.

This is needed in all the modes of this view: threads, monitors, and deadlocks.

*** Bug 60531 has been marked as a duplicate of this bug. ***
Deferred
Re-open for 3.1
Consider with re-work of view.
Marking as won't fix. Instead, see bug 75280 which makes the Threads and 
Monitors view obsolete. The copy feature already exists in the debug view, so 
this feature will be included in the "replacement feature".</WithStack>
    <WithOutStack>The Threads and Monitors view should offer a "Copy" command (menu / context
menu) to copy the shown trees as text to the clipboard (similar to Copy Stack in
the Debug view).

This would allow users to easily append more information to a PR when they
encounter a deadlock.
I was going to enter a request for this but found it already so... ditto.

I wanted to report a thread deadlock to an open source project but I had to re-
type in part of the treads and monitors window (adding a few typos probably) 
into the bug report. I tried selecting a few items and pressing Ctrl-C but it 
didn't do anything.

This is needed in all the modes of this view: threads, monitors, and deadlocks.

*** Bug 60531 has been marked as a duplicate of this bug. ***
Deferred
Re-open for 3.1
Consider with re-work of view.
Marking as won't fix. Instead, see bug 75280 which makes the Threads and 
Monitors view obsolete. The copy feature already exists in the debug view, so 
this feature will be included in the "replacement feature".</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45197" />
    <CreationDate amount="2003-10-20 06:54:00 -0400" />
    <DupId amount="36698" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>creating sub-folders or files in sub-folders causes eclipse to hang.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341034270">
        <Exception>org.eclipse.swt.SWTException</Exception>
        <Reason>Invalid thread access</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2369)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2299)</Frame>
          <Frame depth="2">org.eclipse.swt.dnd.DND.error(DND.java:230)</Frame>
          <Frame depth="3">org.eclipse.swt.dnd.DND.error(DND.java:181)</Frame>
          <Frame depth="4">org.eclipse.swt.dnd.Clipboard.checkWidget(Clipboard.java:131)</Frame>
          <Frame depth="5">org.eclipse.swt.dnd.Clipboard.getAvailableTypes(Clipboard.java:281)</Frame>
          <Frame depth="6">org.eclipse.ui.views.navigator.PasteAction.updateSelection(PasteAction.java:220)</Frame>
          <Frame depth="7">org.eclipse.ui.actions.SelectionListenerAction.selectionChanged(SelectionListenerAction.java:208)</Frame>
          <Frame depth="8">org.eclipse.ui.views.navigator.RefactorActionGroup.updateActionBars(RefactorActionGroup.java:139)</Frame>
          <Frame depth="9">org.eclipse.ui.views.navigator.MainActionGroup.handleResourceChanged(MainActionGroup.java:107)</Frame>
          <Frame depth="10">org.eclipse.ui.views.navigator.MainActionGroup$1.resourceChanged(MainActionGroup.java:74)</Frame>
          <Frame depth="11">org.eclipse.core.internal.events.NotificationManager$2.run(NotificationManager.java:218)</Frame>
          <Frame depth="12">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1018)</Frame>
          <Frame depth="13">org.eclipse.core.runtime.Platform.run(Platform.java:461)</Frame>
          <Frame depth="14">org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:211)</Frame>
          <Frame depth="15">org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:118)</Frame>
          <Frame depth="16">org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:153)</Frame>
          <Frame depth="17">org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:852)</Frame>
          <Frame depth="18">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1562)</Frame>
          <Frame depth="19">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1572)</Frame>
          <Frame depth="20">org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:85)</Frame>
          <Frame depth="21">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Steps to reproduce:
I'm using eclipse 3.0.0 build 200310101454.

In a new project, select a project sub-directory and right-click, select
new-&gt;file and supply a filename (e.g. tmp.txt).

Press 'finish'.

Eclipse appears to be completing the task, but never completes. Clicking on
cancel does not do anything. If you attempt to close the window, eclipse reports
that the file wizard is in progress and you need to 'cancel' the current
operation before you can close. I then have to use xKill to get rid of eclipse
and restart it. As a workaround, I'm creating the files outside of eclipse and
then just editing them through the workbench.

It only appears to affect 2nd level directories/files. I've successfully created
files and directories in the project root.

I've included the log file output below. I hope that it helps.

This is my 1st eclipse bug report, if there is anything else that would help,
please let me know.

Thanks,
James


!SESSION Oct 20, 2003 11:35:18.256 ---------------------------------------------
java.version=1.4.1_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=en_ZA
Command-line arguments: -os linux -ws gtk -arch x86 -data
/home/james/public_html -install file:/usr/local/eclipse/
!ENTRY org.eclipse.core.resources 4 2 Oct 20, 2003 11:35:18.259
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.core.resources".
!STACK 0
org.eclipse.swt.SWTException: Invalid thread access
	at org.eclipse.swt.SWT.error(SWT.java:2369)
	at org.eclipse.swt.SWT.error(SWT.java:2299)
	at org.eclipse.swt.dnd.DND.error(DND.java:230)
	at org.eclipse.swt.dnd.DND.error(DND.java:181)
	at org.eclipse.swt.dnd.Clipboard.checkWidget(Clipboard.java:131)
	at org.eclipse.swt.dnd.Clipboard.getAvailableTypes(Clipboard.java:281)
	at org.eclipse.ui.views.navigator.PasteAction.updateSelection(PasteAction.java:220)
	at
org.eclipse.ui.actions.SelectionListenerAction.selectionChanged(SelectionListenerAction.java:208)
	at
org.eclipse.ui.views.navigator.RefactorActionGroup.updateActionBars(RefactorActionGroup.java:139)
	at
org.eclipse.ui.views.navigator.MainActionGroup.handleResourceChanged(MainActionGroup.java:107)
	at
org.eclipse.ui.views.navigator.MainActionGroup$1.resourceChanged(MainActionGroup.java:74)
	at
org.eclipse.core.internal.events.NotificationManager$2.run(NotificationManager.java:218)
	at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1018)
	at org.eclipse.core.runtime.Platform.run(Platform.java:461)
	at
org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:211)
	at
org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:118)
	at
org.eclipse.core.internal.resources.Workspace.broadcastChanges(Workspace.java:153)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:852)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1562)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1572)
	at
org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:85)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)
!ENTRY com.xored.xws.php.launching 4 4 Oct 20, 2003 11:39:13.267
!MESSAGE Bad installation at:
/usr/local/eclipse/plugins/com.xored.xws.bundled.php-core.win32_4.3.1/php.exe
The log entry is unrelated to the freezing. I have reopened bug 42176 for this
invalid thread access problem.

When eclipse is hung, try sending "kill -3" to the java process.  This should
produce a stack dump file in the pwd that will tell us why it is hanging. 
Please attach this dump file to the bug report (using the "create new
attachment" button near the top of this page).

I am not able to reproduce the problem with that Linux build (using GTK).
Created attachment 6490
stack dump
Thanks for the stack trace.  Can you attach one more trace just to be sure the
problem is consistent? With only one data point a deadlock and an infinite loop
look much the same.  When it is in this state, does the process continue to
consume any CPU?  The command line utility called "top" can be used to see the
most active proecesses.

Thanks again for following up with more information so quickly.
I've attached a stack dump as requested, but I'm not sure if it is what you
need. If there are any other details, please let me know.
In answer to the questions:
When it is in this state, does the process continue to
consume any CPU?
1. Here is a copy from 'top'. as you can see, eclipse and X are consuming pretty
much all the available cpu.

 5865 james     17   0 80332  78m  18m R 53.2 13.1   0:40.63 java
 1711 root      17   0 86828  52m 9.9m R 39.4  8.7  44:31.33 X

 This is the view from 'top' a few minutes(!) after creating the 'hanging'
condition.

I've also prepared another stack trace. which I will attach. 



Created attachment 6493
another stack trace
The output from top is a little useless without the solumn headings. The same
info with the column headings ...

  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  Command
 5865 james     17   0 80332  78m  18m R 53.2 13.1   0:40.63 java
 1711 root      17   0 86828  52m 9.9m R 39.4  8.7  44:31.33 X


Can I get an opinion from SWT for these stack traces?  The trace in comment #6
is the simplest variant.  Here is what's going on:

- background thread (ModalContextThread) is trying to do a syncExec.  It has
added the RunnableLock to the queue and is waiting for it to be served

- the main thread is in the event loop, but it never processes the deferred
event posted by the background thread.

The first stack trace (comment #2) looks a bit different.  In this case the main
thread has exited the event loop, but is then stuck in Display.update and never
returns (the user is reporting that the window never closes). CPU usage remains
high, with both X and java processes busy.

This seems to be the same bug as Bug#36698. James, could follow the 
instructions in that bug (check your GTK version, etc) and confirm if it is the 
same bug?

Thanks!
Silenio
Also, check Bug#45002.
Timed out, assuming that this is a dup of bug 36698 ; if you still see this 
problem happen while using a gtk version that is confirmed to not have the 
treeview peg bug (as specified in bug 36698) then please reopen.


*** This bug has been marked as a duplicate of 36698 ***</WithStack>
    <WithOutStack>Steps to reproduce:
I'm using eclipse 3.0.0 build 200310101454.

In a new project, select a project sub-directory and right-click, select
new-&gt;file and supply a filename (e.g. tmp.txt).

Press 'finish'.

Eclipse appears to be completing the task, but never completes. Clicking on
cancel does not do anything. If you attempt to close the window, eclipse reports
that the file wizard is in progress and you need to 'cancel' the current
operation before you can close. I then have to use xKill to get rid of eclipse
and restart it. As a workaround, I'm creating the files outside of eclipse and
then just editing them through the workbench.

It only appears to affect 2nd level directories/files. I've successfully created
files and directories in the project root.

I've included the log file output below. I hope that it helps.

This is my 1st eclipse bug report, if there is anything else that would help,
please let me know.

Thanks,
James


!SESSION Oct 20, 2003 11:35:18.256 ---------------------------------------------
java.version=1.4.1_04
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=en_ZA
Command-line arguments: -os linux -ws gtk -arch x86 -data
/home/james/public_html -install file:/usr/local/eclipse/
!ENTRY org.eclipse.core.resources 4 2 Oct 20, 2003 11:35:18.259
!MESSAGE Problems occurred when invoking code from plug-in:
"org.eclipse.core.resources".
!STACK 0

!ENTRY com.xored.xws.php.launching 4 4 Oct 20, 2003 11:39:13.267
!MESSAGE Bad installation at:
/usr/local/eclipse/plugins/com.xored.xws.bundled.php-core.win32_4.3.1/php.exe
The log entry is unrelated to the freezing. I have reopened bug 42176 for this
invalid thread access problem.

When eclipse is hung, try sending "kill -3" to the java process.  This should
produce a stack dump file in the pwd that will tell us why it is hanging. 
Please attach this dump file to the bug report (using the "create new
attachment" button near the top of this page).

I am not able to reproduce the problem with that Linux build (using GTK).
Created attachment 6490
stack dump
Thanks for the stack trace.  Can you attach one more trace just to be sure the
problem is consistent? With only one data point a deadlock and an infinite loop
look much the same.  When it is in this state, does the process continue to
consume any CPU?  The command line utility called "top" can be used to see the
most active proecesses.

Thanks again for following up with more information so quickly.
I've attached a stack dump as requested, but I'm not sure if it is what you
need. If there are any other details, please let me know.
In answer to the questions:
When it is in this state, does the process continue to
consume any CPU?
1. Here is a copy from 'top'. as you can see, eclipse and X are consuming pretty
much all the available cpu.

 5865 james     17   0 80332  78m  18m R 53.2 13.1   0:40.63 java
 1711 root      17   0 86828  52m 9.9m R 39.4  8.7  44:31.33 X

 This is the view from 'top' a few minutes(!) after creating the 'hanging'
condition.

I've also prepared another stack trace. which I will attach. 



Created attachment 6493
another stack trace
The output from top is a little useless without the solumn headings. The same
info with the column headings ...

  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  Command
 5865 james     17   0 80332  78m  18m R 53.2 13.1   0:40.63 java
 1711 root      17   0 86828  52m 9.9m R 39.4  8.7  44:31.33 X


Can I get an opinion from SWT for these stack traces?  The trace in comment #6
is the simplest variant.  Here is what's going on:

- background thread (ModalContextThread) is trying to do a syncExec.  It has
added the RunnableLock to the queue and is waiting for it to be served

- the main thread is in the event loop, but it never processes the deferred
event posted by the background thread.

The first stack trace (comment #2) looks a bit different.  In this case the main
thread has exited the event loop, but is then stuck in Display.update and never
returns (the user is reporting that the window never closes). CPU usage remains
high, with both X and java processes busy.

This seems to be the same bug as Bug#36698. James, could follow the 
instructions in that bug (check your GTK version, etc) and confirm if it is the 
same bug?

Thanks!
Silenio
Also, check Bug#45002.
Timed out, assuming that this is a dup of bug 36698 ; if you still see this 
problem happen while using a gtk version that is confirmed to not have the 
treeview peg bug (as specified in bug 36698) then please reopen.


*** This bug has been marked as a duplicate of 36698 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45198" />
    <CreationDate amount="2003-10-20 07:00:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>NPE from AnnotationParser</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Cause timestamp="1437341034272">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.jdt.internal.compiler.parser.Scanner.getNextToken(Scanner.java:892)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.compiler.parser.AnnotationParser.readToken(AnnotationParser.java:740)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.parser.AnnotationParser.readTokenAndConsume(AnnotationParser.java:747)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.compiler.parser.AnnotationParser.checkDeprecation(AnnotationParser.java:126)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.parser.Parser.checkAnnotation(Parser.java:953)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.parser.Parser.consumeModifiers(Parser.java:2731)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:3774)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5659)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.formatter.CodeFormatterParser.parseClassBodyDeclarations(CodeFormatterParser.java:74)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.parseClassBodyDeclarations(DefaultCodeFormatter.java:55)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatClassBodyDeclarations(DefaultCodeFormatter.java:216)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:202)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:93)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.corext.codemanipulation.AddCustomConstructorOperation.run(AddCustomConstructorOperation.java:177)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705)</Frame>
          <Frame depth="19">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1555)</Frame>
          <Frame depth="20">org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1572)</Frame>
          <Frame depth="21">org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3010)</Frame>
          <Frame depth="22">org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:42)</Frame>
          <Frame depth="23">org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="4">
      <source_code type="package">
        <location start="44" end="57" />
        <code>package pack;</code>
      </source_code>
      <source_code type="class">
        <location start="59" end="173" />
        <code>public class A {
	
	private int fOffset;
	private int fLength;
	
	private String fTag;
	private String fContent;
}</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="631" end="689" />
        <code>if (this.checkAnnotation &amp;&amp; this.scanner.source != null) {</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="704" end="731" />
        <code>if (this.checkAnnotation) {</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="6">
        <Lines>
          <Line>1. create</Line>
          <Line />
          <Line />
          <Line />
          <Line />
          <Line>2. Invoke Generate Constructors from Fields, select all, press ok</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- AssistParser</Line>
          <Line>- DocumentElementParser</Line>
          <Line>- CodeSnippetParser</Line>
          <Line>- CodeFormatterParser</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>20031015, jdt core from 20031012

1. create
package pack;

public class A {
	
	private int fOffset;
	private int fLength;
	
	private String fTag;
	private String fContent;
}

2. Invoke Generate Constructors from Fields, select all, press ok

(new code fomatter enabled)


Caused by: java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.parser.Scanner.getNextToken(Scanner.java:892)
	at
org.eclipse.jdt.internal.compiler.parser.AnnotationParser.readToken(AnnotationParser.java:740)
	at
org.eclipse.jdt.internal.compiler.parser.AnnotationParser.readTokenAndConsume(AnnotationParser.java:747)
	at
org.eclipse.jdt.internal.compiler.parser.AnnotationParser.checkDeprecation(AnnotationParser.java:126)
	at org.eclipse.jdt.internal.compiler.parser.Parser.checkAnnotation(Parser.java:953)
	at
org.eclipse.jdt.internal.compiler.parser.Parser.consumeModifiers(Parser.java:2731)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:3774)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5659)
	at
org.eclipse.jdt.internal.formatter.CodeFormatterParser.parseClassBodyDeclarations(CodeFormatterParser.java:74)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.parseClassBodyDeclarations(DefaultCodeFormatter.java:55)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.formatClassBodyDeclarations(DefaultCodeFormatter.java:216)
	at
org.eclipse.jdt.internal.formatter.DefaultCodeFormatter.format(DefaultCodeFormatter.java:202)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format2(CodeFormatterUtil.java:189)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:101)
	at
org.eclipse.jdt.internal.corext.util.CodeFormatterUtil.format(CodeFormatterUtil.java:93)
	at
org.eclipse.jdt.internal.corext.codemanipulation.AddCustomConstructorOperation.run(AddCustomConstructorOperation.java:177)
	at
org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)
	at
org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366)
	at
org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1555)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1572)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3010)
	at
org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:42)
	at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:302)
	... 28 more
You have to enable the new 'javadoc tag' warnings to see this.

How do you enable the new javadoc tag warning?
The problem comes from the fact that the source of the scanner of the 
annotation parser is not garantee to be initialized.
I released a patch for now to do a null check on the source of the scanner. See 
line 78 of AnnotationParser.
if (this.checkAnnotation &amp;&amp; this.scanner.source != null) {

instead of:

if (this.checkAnnotation) {


verified the patch from comment 4: Seems to work!
Problem comes from the fact that the source of AnnotationParser scanner is 
initialized only in parse(ICompilationUnit,CompilationResult,int,int) method
of Parser.

UI code in this action of creating getter/setter, call createMethod(String) of 
IDOMFactory in order to have the new methods created. The IDOMFactory uses a 
DocumentElementParser which parses only the code of the created method through 
parse(MethodDeclaration, CompilationUnitDeclaration). This method did not 
initialize the source of the scanner and then the NPE occurs in it...

So, final fix consists to disable the parse of annotation for specific parsers:
- AssistParser
- DocumentElementParser
- CodeSnippetParser
- CodeFormatterParser

Note that this behavior will be surely changed fro DocumentElementParser when 
specific DOM ast nodes will be created for javadoc comment content...
This work will be done while implementing bug 36887

Test case testMethodCreateFromSource added in AnnotationTestForClass.

Verified.</WithStack>
    <WithOutStack>20031015, jdt core from 20031012

1. create
package pack;

public class A {
	
	private int fOffset;
	private int fLength;
	
	private String fTag;
	private String fContent;
}

2. Invoke Generate Constructors from Fields, select all, press ok

(new code fomatter enabled)



	... 28 more
You have to enable the new 'javadoc tag' warnings to see this.

How do you enable the new javadoc tag warning?
The problem comes from the fact that the source of the scanner of the 
annotation parser is not garantee to be initialized.
I released a patch for now to do a null check on the source of the scanner. See 
line 78 of AnnotationParser.
if (this.checkAnnotation &amp;&amp; this.scanner.source != null) {

instead of:

if (this.checkAnnotation) {


verified the patch from comment 4: Seems to work!
Problem comes from the fact that the source of AnnotationParser scanner is 
initialized only in parse(ICompilationUnit,CompilationResult,int,int) method
of Parser.

UI code in this action of creating getter/setter, call createMethod(String) of 
IDOMFactory in order to have the new methods created. The IDOMFactory uses a 
DocumentElementParser which parses only the code of the created method through 
parse(MethodDeclaration, CompilationUnitDeclaration). This method did not 
initialize the source of the scanner and then the NPE occurs in it...

So, final fix consists to disable the parse of annotation for specific parsers:
- AssistParser
- DocumentElementParser
- CodeSnippetParser
- CodeFormatterParser

Note that this behavior will be surely changed fro DocumentElementParser when 
specific DOM ast nodes will be created for javadoc comment content...
This work will be done while implementing bug 36887

Test case testMethodCreateFromSource added in AnnotationTestForClass.

Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45199" />
    <CreationDate amount="2003-10-20 07:06:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>resolveTypeBinding returns null for some expression</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="20">
      <source_code type="class">
        <location start="287" end="417" />
        <code>class A {
  public void foo() {
     int x= 10;
     x= x + 1;
     // ^ resolveTypeBinding on this simple name returns null
  }
}</code>
      </source_code>
      <source_code type="class">
        <location start="562" end="630" />
        <code>class A {
  public void foo() {
     int x= 10;
     x= x + 1;
  }
}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="797" end="862" />
        <code>/**
	 * http://bugs.eclipse.org/bugs/show_bug.cgi?id=45199
	 */</code>
      </source_code>
      <source_code type="assignment">
        <location start="1063" end="1114" />
        <code>ASTNode result = runConversion(sourceUnit, true);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1219" end="1269" />
        <code>CompilationUnit unit = (CompilationUnit) result;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1270" end="1343" />
        <code>assertEquals("Wrong number of problems", 1, unit.getProblems().length);</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1344" end="1358" />
        <code>//$NON-NLS-1$</code>
      </source_code>
      <source_code type="assignment">
        <location start="1358" end="1401" />
        <code>ASTNode node = getASTNode(unit, 0, 0, 1);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1402" end="1424" />
        <code>assertNotNull(node);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1536" end="1607" />
        <code>Expression expression = ((ExpressionStatement) node).getExpression();</code>
      </source_code>
      <source_code type="assignment">
        <location start="1705" end="1755" />
        <code>Assignment assignment = (Assignment) expression;</code>
      </source_code>
      <source_code type="assignment">
        <location start="1756" end="1813" />
        <code>Expression expression2 = assignment.getRightHandSide();</code>
      </source_code>
      <source_code type="assignment">
        <location start="1924" end="1990" />
        <code>InfixExpression infixExpression = (InfixExpression) expression2;</code>
      </source_code>
      <source_code type="assignment">
        <location start="1991" end="2051" />
        <code>Expression expression3 = infixExpression.getLeftOperand();</code>
      </source_code>
      <source_code type="assignment">
        <location start="2151" end="2209" />
        <code>ITypeBinding binding = expression3.resolveTypeBinding();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2210" end="2249" />
        <code>assertNotNull("No binding", binding);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2250" end="2306" />
        <code>Expression expression4 = assignment.getLeftHandSide();</code>
      </source_code>
      <source_code type="assignment">
        <location start="2406" end="2465" />
        <code>ITypeBinding binding2 = expression4.resolveTypeBinding();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2466" end="2506" />
        <code>assertNotNull("No binding", binding2);</code>
      </source_code>
      <source_code type="assignment">
        <location start="2507" end="2563" />
        <code>assertTrue("Should be the same", binding == binding2);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I200310150800

Calling resolveTypeBinding returns null for expressions referring to local 
variables. Also speced in the doc I don't understand why and when this is the 
case. IMO all expression refer to a type.
Please provide test cases. Do you have syntax errors?
Here is an example:

class A {
  public void foo() {
     int x= 10;
     x= x + 1;
     // ^ resolveTypeBinding on this simple name returns null
  }
}
I will investigate.
Are you sure that you actually requested the bindings?
I tried your example and I could not reproduce.
I used this example:
class A {
  public void foo() {
     int x= 10;
     x= x + 1;
  }
}

And I successfully resolved the type binding for x in x = x + 1. Both 'x' have
the right type binding (type binding for int in this example).

Here is my test case:

	/**
	 * http://bugs.eclipse.org/bugs/show_bug.cgi?id=45199
	 */
	public void test0499() throws JavaModelException {
		ICompilationUnit sourceUnit = getCompilationUnit("Converter" , "", "test0499",
"A.java"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
		ASTNode result = runConversion(sourceUnit, true);
		assertTrue("not a compilation unit", result.getNodeType() ==
ASTNode.COMPILATION_UNIT); //$NON-NLS-1$
		CompilationUnit unit = (CompilationUnit) result;
		assertEquals("Wrong number of problems", 1, unit.getProblems().length);
//$NON-NLS-1$
		ASTNode node = getASTNode(unit, 0, 0, 1);
		assertNotNull(node);
		assertTrue("Not an expression statement", node.getNodeType() ==
ASTNode.EXPRESSION_STATEMENT); //$NON-NLS-1$
		Expression expression = ((ExpressionStatement) node).getExpression();
		assertTrue("Not an assignment", expression.getNodeType() ==
ASTNode.ASSIGNMENT); //$NON-NLS-1$
		Assignment assignment = (Assignment) expression;
		Expression expression2 = assignment.getRightHandSide();
		assertTrue("Not an infix expression", expression2.getNodeType() ==
ASTNode.INFIX_EXPRESSION); //$NON-NLS-1$
		InfixExpression infixExpression = (InfixExpression) expression2;
		Expression expression3 = infixExpression.getLeftOperand();
		assertTrue("Not a simple name", expression3.getNodeType() ==
ASTNode.SIMPLE_NAME); //$NON-NLS-1$
		ITypeBinding binding = expression3.resolveTypeBinding();
		assertNotNull("No binding", binding);
		Expression expression4 = assignment.getLeftHandSide();
		assertTrue("Not a simple name", expression4.getNodeType() ==
ASTNode.SIMPLE_NAME); //$NON-NLS-1$
		ITypeBinding binding2 = expression4.resolveTypeBinding();
		assertNotNull("No binding", binding2);
		assertTrue("Should be the same", binding == binding2);
	}
I will release it as a test case for this bug report.
Please provide additional steps. I can successfully resolve type bindings for
'x' in your example.
Without further information, I will close it as WORKSFORME.
I will try to provide additional information today.
Tried to reproduce again and wasn't able to do so (but I am pretty sure that 
it returned null the last time I tested it). 

Frank Tip, saw the same behaviour. I will ask Frank if he can provide a test 
case. 

Olivier, you can close the PR. We reopen when we have a test case.
Close as WORKSFORME. Please reopen if you have more information.</WithStack>
    <WithOutStack>I200310150800

Calling resolveTypeBinding returns null for expressions referring to local 
variables. Also speced in the doc I don't understand why and when this is the 
case. IMO all expression refer to a type.
Please provide test cases. Do you have syntax errors?
Here is an example:

class A {
  public void foo() {
     int x= 10;
     x= x + 1;
     // ^ resolveTypeBinding on this simple name returns null
  }
}
I will investigate.
Are you sure that you actually requested the bindings?
I tried your example and I could not reproduce.
I used this example:
class A {
  public void foo() {
     int x= 10;
     x= x + 1;
  }
}

And I successfully resolved the type binding for x in x = x + 1. Both 'x' have
the right type binding (type binding for int in this example).

Here is my test case:

	/**
	 * http://bugs.eclipse.org/bugs/show_bug.cgi?id=45199
	 */
	public void test0499() throws JavaModelException {
		ICompilationUnit sourceUnit = getCompilationUnit("Converter" , "", "test0499",
"A.java"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
		ASTNode result = runConversion(sourceUnit, true);
		assertTrue("not a compilation unit", result.getNodeType() ==
ASTNode.COMPILATION_UNIT); //$NON-NLS-1$
		CompilationUnit unit = (CompilationUnit) result;
		assertEquals("Wrong number of problems", 1, unit.getProblems().length);
//$NON-NLS-1$
		ASTNode node = getASTNode(unit, 0, 0, 1);
		assertNotNull(node);
		assertTrue("Not an expression statement", node.getNodeType() ==
ASTNode.EXPRESSION_STATEMENT); //$NON-NLS-1$
		Expression expression = ((ExpressionStatement) node).getExpression();
		assertTrue("Not an assignment", expression.getNodeType() ==
ASTNode.ASSIGNMENT); //$NON-NLS-1$
		Assignment assignment = (Assignment) expression;
		Expression expression2 = assignment.getRightHandSide();
		assertTrue("Not an infix expression", expression2.getNodeType() ==
ASTNode.INFIX_EXPRESSION); //$NON-NLS-1$
		InfixExpression infixExpression = (InfixExpression) expression2;
		Expression expression3 = infixExpression.getLeftOperand();
		assertTrue("Not a simple name", expression3.getNodeType() ==
ASTNode.SIMPLE_NAME); //$NON-NLS-1$
		ITypeBinding binding = expression3.resolveTypeBinding();
		assertNotNull("No binding", binding);
		Expression expression4 = assignment.getLeftHandSide();
		assertTrue("Not a simple name", expression4.getNodeType() ==
ASTNode.SIMPLE_NAME); //$NON-NLS-1$
		ITypeBinding binding2 = expression4.resolveTypeBinding();
		assertNotNull("No binding", binding2);
		assertTrue("Should be the same", binding == binding2);
	}
I will release it as a test case for this bug report.
Please provide additional steps. I can successfully resolve type bindings for
'x' in your example.
Without further information, I will close it as WORKSFORME.
I will try to provide additional information today.
Tried to reproduce again and wasn't able to do so (but I am pretty sure that 
it returned null the last time I tested it). 

Frank Tip, saw the same behaviour. I will ask Frank if he can provide a test 
case. 

Olivier, you can close the PR. We reopen when we have a test case.
Close as WORKSFORME. Please reopen if you have more information.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="45200" />
    <CreationDate amount="2003-10-20 07:12:00 -0400" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Deadlock when trying to start runtime workbench</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I20031015 + jdt-ui export 20031020_1100

I start my runtime workbench in debug mode from within eclipse and get a
deadlock when the splash screen is still there. When I terminate and relaunch,
the same thing happens again.

I'll attach a screenshot.
Created attachment 6481
screenshot of deadlock stack trace
After re-importing all binary projects and doing a full rebuild, I didn't get
the deadlock again.

I'm only 99% sure that I correctly imported all plugins from the export.
Looking at the picture the deadlock is in the Java core indexer.
Darin: How did debug decide that the indexing thread was in a deadlock 
situation?

From the thread trace, the indexing thread is simply waiting on its own lock 
which isn't available to anyone else.

What does 'owned' &amp; 'in contention' mean?
Luc, could you please decipher the lock cycle in the given graph (i.e. attached 
image). I admit, I do not see the cycle.
I don't understand neither. The screenshot seems ... wrong.
'owned' means that the thread has the lock (is executing code inside a
synchrozined block).
'in contention' means that the thread is waiting for the lock.

But the fact that one thread has and is waiting for the same lock doesn't make
any sense. If a thread has a thread it doesn't need to wait to enter a block
synchronized on the same lock. And if wait() is called on the lock, the thread
loses the lock.
Second 'problem' in your case, Worker-0 and Worker-1 own the same lock ?!

To decide if there is a deadlock, we just check if there is a loop in a chain like:
thread1 owns monitor1
   monitor1 is requested by thread2
       thread2 owns monitor2
           monitor2 is requested by thread1
thread1 is twice in the chaine =&gt; there is deadlock

In your case, we get
Java Indexing owns IndexManager
    IndexManager is requested by Java Indexing
Luc - so does this look like a bug in our Monitor's view?
Luc: I'll give this one to you. If you can make any sense out of it, reassign 
then.

From the thread trace, I don't see how this is an indexing issue.
It may be a VM problem.
I tried a simple deadlock test case, J9SC in j9 mode works fine, but in 'normal'
mode, the VM doesn't give all the expected information.
I will search where to report this problem and report it.
I filled a bug in IBM internal "Java Bug Reporting and Tracking" system about
the fact that the VM is not returning the correct monitor information.

Will see if this bug linked is linked to it or not.
Looks like there is nothing more we can do here. Bug has been entered for the 
VM. There is no longer a reproduceable deadlock that I am aware of.</WithStack>
    <WithOutStack>I20031015 + jdt-ui export 20031020_1100

I start my runtime workbench in debug mode from within eclipse and get a
deadlock when the splash screen is still there. When I terminate and relaunch,
the same thing happens again.

I'll attach a screenshot.
Created attachment 6481
screenshot of deadlock stack trace
After re-importing all binary projects and doing a full rebuild, I didn't get
the deadlock again.

I'm only 99% sure that I correctly imported all plugins from the export.
Looking at the picture the deadlock is in the Java core indexer.
Darin: How did debug decide that the indexing thread was in a deadlock 
situation?

From the thread trace, the indexing thread is simply waiting on its own lock 
which isn't available to anyone else.

What does 'owned' &amp; 'in contention' mean?
Luc, could you please decipher the lock cycle in the given graph (i.e. attached 
image). I admit, I do not see the cycle.
I don't understand neither. The screenshot seems ... wrong.
'owned' means that the thread has the lock (is executing code inside a
synchrozined block).
'in contention' means that the thread is waiting for the lock.

But the fact that one thread has and is waiting for the same lock doesn't make
any sense. If a thread has a thread it doesn't need to wait to enter a block
synchronized on the same lock. And if wait() is called on the lock, the thread
loses the lock.
Second 'problem' in your case, Worker-0 and Worker-1 own the same lock ?!

To decide if there is a deadlock, we just check if there is a loop in a chain like:
thread1 owns monitor1
   monitor1 is requested by thread2
       thread2 owns monitor2
           monitor2 is requested by thread1
thread1 is twice in the chaine =&gt; there is deadlock

In your case, we get
Java Indexing owns IndexManager
    IndexManager is requested by Java Indexing
Luc - so does this look like a bug in our Monitor's view?
Luc: I'll give this one to you. If you can make any sense out of it, reassign 
then.

From the thread trace, I don't see how this is an indexing issue.
It may be a VM problem.
I tried a simple deadlock test case, J9SC in j9 mode works fine, but in 'normal'
mode, the VM doesn't give all the expected information.
I will search where to report this problem and report it.
I filled a bug in IBM internal "Java Bug Reporting and Tracking" system about
the fact that the VM is not returning the correct monitor information.

Will see if this bug linked is linked to it or not.
Looks like there is nothing more we can do here. Bug has been entered for the 
VM. There is no longer a reproduceable deadlock that I am aware of.</WithOutStack>
  </Bug>
</infozilla-output>

