<?xml version="1.0" encoding="UTF-8"?>
<infozilla-output>
  <Bug>
    <BugId amount="46101" />
    <CreationDate amount="2003-11-05 10:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="Build" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Improve error message when the platform.doc.isv is missing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>For now, when the platform.doc.isv is missing (due for example to incorrect 
fetching) an NPE is raised on source feature generation.
This needs to be fixed to provide an error message.
Fixed in HEAD.</WithStack>
    <WithOutStack>For now, when the platform.doc.isv is missing (due for example to incorrect 
fetching) an NPE is raised on source feature generation.
This needs to be fixed to provide an error message.
Fixed in HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46102" />
    <CreationDate amount="2003-11-05 10:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="minor" />
    <Summery>[WorkingSets] Java Working Set "unchecks" src directory</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Whenever I startup Eclipse my Java Working Set has changed. The src directory 
is no longer included in the set. So, I check it again just to have to do the 
same thing again next time I startup Eclipse. I am using I20031104, but the 
problem has been in the last couple of integeration builds. It applies both 
under Linux and Windows.
Can you give us the exact details of what you are doing.  For example, are you 
using the working set in a search or in filtering problems in the Problems 
view, ...
I am using the working set in Package Explorer (Java Perspective) to only show 
files and directories that I primarily use.

Note: If I use a working set of type 'Resource' instead of 'Java' then the src 
directory remains in the working set like it should (i.e. I can exit Eclipse 
and start it up again with the 'Resource' working set intact).
I don't believe this an issue any longer.  My src directories are sticking around just fine.  Passing to JDT to close.
please reopen if this is still an issue.</WithStack>
    <WithOutStack>Whenever I startup Eclipse my Java Working Set has changed. The src directory 
is no longer included in the set. So, I check it again just to have to do the 
same thing again next time I startup Eclipse. I am using I20031104, but the 
problem has been in the last couple of integeration builds. It applies both 
under Linux and Windows.
Can you give us the exact details of what you are doing.  For example, are you 
using the working set in a search or in filtering problems in the Problems 
view, ...
I am using the working set in Package Explorer (Java Perspective) to only show 
files and directories that I primarily use.

Note: If I use a working set of type 'Resource' instead of 'Java' then the src 
directory remains in the working set like it should (i.e. I can exit Eclipse 
and start it up again with the 'Resource' working set intact).
I don't believe this an issue any longer.  My src directories are sticking around just fine.  Passing to JDT to close.
please reopen if this is still an issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46103" />
    <CreationDate amount="2003-11-05 10:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[preferences] Offer separate color preferences for line number ruler</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>It will be good if one could change the backgroung on line numbers as other
editors do.
Which build ID?

Which editor (different editors are contributed by different components)?

The Text editor ruler has the same color as the OS text widget and can currently
not be changed inside Eclipse (see bug 5811).

In 2.0 the Java editor's ruler color was using the OS text background color and
the editor's text background could be changed inside Eclipse which resulted in
two different colors. Now the ruler has the same color as the selected Java
editor's text background color.

Is this PR requesting that the line number ruler can have a different color than
the editor text background?

Yes i am requesting that the line number ruler can have a different color than
the editor text background. Most current editors support it.

Also there is no way (i have seen) one can share color setting with a group. For
example if one person develops a nice coloring scheme he could share that with
the rest of the community. For this you would need to export/import color
settings. Maybe i should file this separately ??
There's already a feature request for color schemes.
*** Bug 46911 has been marked as a duplicate of this bug. ***
what is hapening ???

/me whishes this be part of eclipse 3.0
*** Bug 108217 has been marked as a duplicate of this bug. ***
is anyone notice how *late* eclipse is in the editor land ! so many people have reported the need to get line numbers colored !
You can always attach a good quality patch if you want something badly.</WithStack>
    <WithOutStack>It will be good if one could change the backgroung on line numbers as other
editors do.
Which build ID?

Which editor (different editors are contributed by different components)?

The Text editor ruler has the same color as the OS text widget and can currently
not be changed inside Eclipse (see bug 5811).

In 2.0 the Java editor's ruler color was using the OS text background color and
the editor's text background could be changed inside Eclipse which resulted in
two different colors. Now the ruler has the same color as the selected Java
editor's text background color.

Is this PR requesting that the line number ruler can have a different color than
the editor text background?

Yes i am requesting that the line number ruler can have a different color than
the editor text background. Most current editors support it.

Also there is no way (i have seen) one can share color setting with a group. For
example if one person develops a nice coloring scheme he could share that with
the rest of the community. For this you would need to export/import color
settings. Maybe i should file this separately ??
There's already a feature request for color schemes.
*** Bug 46911 has been marked as a duplicate of this bug. ***
what is hapening ???

/me whishes this be part of eclipse 3.0
*** Bug 108217 has been marked as a duplicate of this bug. ***
is anyone notice how *late* eclipse is in the editor land ! so many people have reported the need to get line numbers colored !
You can always attach a good quality patch if you want something badly.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46104" />
    <CreationDate amount="2003-11-05 10:27:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE in log</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341071985">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.Hashtable.get(Hashtable.java:333)</Frame>
          <Frame depth="1">java.util.Properties.getProperty(Properties.java:563)</Frame>
          <Frame depth="2">org.eclipse.core.runtime.Preferences.getBoolean(Preferences.java:594)</Frame>
          <Frame depth="3">org.eclipse.ui.plugin.AbstractUIPlugin$CompatibilityPreferenceStore.getBoolean(AbstractUIPlugin.java:268)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.text.JavaAnnotationHover.getJavaAnnotationsForLine(JavaAnnotationHover.java:123)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.text.JavaAnnotationHover.getHoverInfo(JavaAnnotationHover.java:214)</Frame>
          <Frame depth="6">org.eclipse.jface.text.source.AnnotationBarHoverManager.computeInformation(AnnotationBarHoverManager.java:100)</Frame>
          <Frame depth="7">org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:661)</Frame>
          <Frame depth="8">org.eclipse.jface.text.AbstractHoverInformationControlManager$MouseTracker.mouseHover(AbstractHoverInformationControlManager.java:298)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:211)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:962)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1839)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1619)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1611)</Frame>
          <Frame depth="15">org.eclipse.ui.internal.Workbench.run(Workbench.java:1594)</Frame>
          <Frame depth="16">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="17">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="18">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="19">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="20">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="21">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="23">org.eclipse.core.launcher.Main.run(Main.java:765)</Frame>
          <Frame depth="24">org.eclipse.core.launcher.Main.main(Main.java:599)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The following NPE appeared in my log while I was edited a Java file. It appears
that they key passed to the hashtable was null. The Eclipse build is I20031104

java.lang.NullPointerException
	at java.util.Hashtable.get(Hashtable.java:333)
	at java.util.Properties.getProperty(Properties.java:563)
	at org.eclipse.core.runtime.Preferences.getBoolean(Preferences.java:594)
	at
org.eclipse.ui.plugin.AbstractUIPlugin$CompatibilityPreferenceStore.getBoolean(AbstractUIPlugin.java:268)
	at
org.eclipse.jdt.internal.ui.text.JavaAnnotationHover.getJavaAnnotationsForLine(JavaAnnotationHover.java:123)
	at
org.eclipse.jdt.internal.ui.text.JavaAnnotationHover.getHoverInfo(JavaAnnotationHover.java:214)
	at
org.eclipse.jface.text.source.AnnotationBarHoverManager.computeInformation(AnnotationBarHoverManager.java:100)
	at
org.eclipse.jface.text.AbstractInformationControlManager.doShowInformation(AbstractInformationControlManager.java:661)
	at
org.eclipse.jface.text.AbstractHoverInformationControlManager$MouseTracker.mouseHover(AbstractHoverInformationControlManager.java:298)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:211)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:962)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1839)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1619)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1611)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1594)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:765)
	at org.eclipse.core.launcher.Main.main(Main.java:599)
has been fixed for I20031105
.</WithStack>
    <WithOutStack>The following NPE appeared in my log while I was edited a Java file. It appears
that they key passed to the hashtable was null. The Eclipse build is I20031104


has been fixed for I20031105
.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46105" />
    <CreationDate amount="2003-11-05 10:45:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Unable to launch more than 25 programs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="multicomment">
        <location start="1801" end="2344" />
        <code>/*******************************************************************************
 * Copyright (c) 2000, 2003 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials 
 * are made available under the terms of the Common Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/cpl-v10.html
 * 
 * Contributors:
 *     IBM Corporation - initial API and implementation
 
*******************************************************************************/</code>
      </source_code>
      <source_code type="class">
        <location start="2347" end="2635" />
        <code>public class InfiniteLoop {
	public static void main(String[] args) {
		(new InfiniteLoop()).loop();
	}

	public void loop() {
		int i = 0;
		while (true) {
			System.out.println("Looping " + i);
			i++;
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
			}
		}
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I'm using 3.0m4. I have launched 25 actively running java programs (using the 
Run menu) but can't launch the 26th. External programs can't be launched 
either. I thought perhaps I was running out of memory but I don't get any 
error dialog and the .log file is clean - no messages output anywhere I can 
tell. All the programs I launched earlier are still running fine, and the 
console window is popping all over the place with new output from the 
different processes.

One of the 25 is a Workbench, and the other are instances of one smallish Java 
program I built in the workspace. I still have virtual memory available on the 
machine (dual Xeon running XP).

Is there a limit of 25 launches, or is some undiagnosed error occuring?
There is no limit set by Eclipse - are there any errors in the DOS console (if 
you have one)?
I didn't invoke Eclipse from a DOS console. However when I began terminating 
the launches (selected one in the debug view, pressed the red square button), 
I noticed that it started launching the ones I had tried to launch 32 minutes 
ago! In other words, I launched 25 programs, then tried to launch 10 more but 
nothing happened. When I killed some of the ones that were already running, 
some of that second group started up (so if I killed 10 of the original, the 
10 I tried to launch earlier finally started). It's like they were quietly 
queued up somewhere, but the queue was not visible anywhere (I checked the 
progress window but they weren't there either). Wierd.

I can reproduce the problem. After 25 launches, launching other programs has no 
effect. Once I terminate one of the original 25 launches, my "queued" launches 
are launched.

Luc, does the same thing happen on Linux?
Luc, I'm just using/launching this simple "java" program in "run" mode.

/*******************************************************************************
 * Copyright (c) 2000, 2003 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials 
 * are made available under the terms of the Common Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/cpl-v10.html
 * 
 * Contributors:
 *     IBM Corporation - initial API and implementation
 
*******************************************************************************/


public class InfiniteLoop {
	public static void main(String[] args) {
		(new InfiniteLoop()).loop();
	}

	public void loop() {
		int i = 0;
		while (true) {
			System.out.println("Looping " + i);
			i++;
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
			}
		}
	}
}
Found the problem.
For each process, one RuntimeProcess#ProcessMonitorJob job is created and
launched. This job will terminate when the process terminates.
The job manager has an hard-coded maximum of 25 simultaneous running threads to
execute the jobs.
So when 25 processes are running, there are 25 running jobs, the job manager
blocks the execution of all new jobs until one thread is available.
The launch framework uses jobs to perform the launches, so when 25 process are
running, it's no possible to launch a new process until an other one is terminated.
Good find! John, is there any plan to allow the user to set the maximum number 
of jobs?
I can use the "computer speed preference" to configure the maximum
I am now setting the thread pool size based on the "computer speed" preference
(see Preferences &gt; Workbench &gt; Work in progress).  The default max is still 25,
but it now varies between 5 and 125 based on the value of that slider.  &lt;famous
last words&gt;125 launches should be enough for anyone&lt;/famous last words&gt;</WithStack>
    <WithOutStack>I'm using 3.0m4. I have launched 25 actively running java programs (using the 
Run menu) but can't launch the 26th. External programs can't be launched 
either. I thought perhaps I was running out of memory but I don't get any 
error dialog and the .log file is clean - no messages output anywhere I can 
tell. All the programs I launched earlier are still running fine, and the 
console window is popping all over the place with new output from the 
different processes.

One of the 25 is a Workbench, and the other are instances of one smallish Java 
program I built in the workspace. I still have virtual memory available on the 
machine (dual Xeon running XP).

Is there a limit of 25 launches, or is some undiagnosed error occuring?
There is no limit set by Eclipse - are there any errors in the DOS console (if 
you have one)?
I didn't invoke Eclipse from a DOS console. However when I began terminating 
the launches (selected one in the debug view, pressed the red square button), 
I noticed that it started launching the ones I had tried to launch 32 minutes 
ago! In other words, I launched 25 programs, then tried to launch 10 more but 
nothing happened. When I killed some of the ones that were already running, 
some of that second group started up (so if I killed 10 of the original, the 
10 I tried to launch earlier finally started). It's like they were quietly 
queued up somewhere, but the queue was not visible anywhere (I checked the 
progress window but they weren't there either). Wierd.

I can reproduce the problem. After 25 launches, launching other programs has no 
effect. Once I terminate one of the original 25 launches, my "queued" launches 
are launched.

Luc, does the same thing happen on Linux?
Luc, I'm just using/launching this simple "java" program in "run" mode.

/*******************************************************************************
 * Copyright (c) 2000, 2003 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials 
 * are made available under the terms of the Common Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/cpl-v10.html
 * 
 * Contributors:
 *     IBM Corporation - initial API and implementation
 
*******************************************************************************/


public class InfiniteLoop {
	public static void main(String[] args) {
		(new InfiniteLoop()).loop();
	}

	public void loop() {
		int i = 0;
		while (true) {
			System.out.println("Looping " + i);
			i++;
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
			}
		}
	}
}
Found the problem.
For each process, one RuntimeProcess#ProcessMonitorJob job is created and
launched. This job will terminate when the process terminates.
The job manager has an hard-coded maximum of 25 simultaneous running threads to
execute the jobs.
So when 25 processes are running, there are 25 running jobs, the job manager
blocks the execution of all new jobs until one thread is available.
The launch framework uses jobs to perform the launches, so when 25 process are
running, it's no possible to launch a new process until an other one is terminated.
Good find! John, is there any plan to allow the user to set the maximum number 
of jobs?
I can use the "computer speed preference" to configure the maximum
I am now setting the thread pool size based on the "computer speed" preference
(see Preferences &gt; Workbench &gt; Work in progress).  The default max is still 25,
but it now varies between 5 and 125 based on the value of that slider.  &lt;famous
last words&gt;125 launches should be enough for anyone&lt;/famous last words&gt;</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46106" />
    <CreationDate amount="2003-11-05 11:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="2.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>JAR-exporter uses absolute path for JAR path in '.jardesc'-files [jarcreation]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>If you tell the JAR-exporter to save a description of the JAR in the workspace, 
it stores the destination path of the JAR as absolute path. This makes it 
impossible to keep '.jardesc'-files under version control. Proposal: It should
be configurable whether to use absolute paths or not. It would also be useful
to be able to reference to one of the eclipse environment variables.
Move to JDT/UI.
Daniel, please comment.
&gt;This makes it impossible to keep '.jardesc'-files under version control.
Not true. Why shouldn't you be able to commit that file? What you probably meant
is: it is not possible to share the file via version control with others that
have a different machine disk layout.

The path is relative to the workspace location (-data &lt;workspaceLocation&gt;) which
means you can specify paths in an independent manner but you have to edit the
.jardesc manually, e.g.
&lt;jardesc&gt;
  &lt;jar path="myProjectDir/myJar.jar"/&gt;
...</WithStack>
    <WithOutStack>If you tell the JAR-exporter to save a description of the JAR in the workspace, 
it stores the destination path of the JAR as absolute path. This makes it 
impossible to keep '.jardesc'-files under version control. Proposal: It should
be configurable whether to use absolute paths or not. It would also be useful
to be able to reference to one of the eclipse environment variables.
Move to JDT/UI.
Daniel, please comment.
&gt;This makes it impossible to keep '.jardesc'-files under version control.
Not true. Why shouldn't you be able to commit that file? What you probably meant
is: it is not possible to share the file via version control with others that
have a different machine disk layout.

The path is relative to the workspace location (-data &lt;workspaceLocation&gt;) which
means you can specify paths in an independent manner but you have to edit the
.jardesc manually, e.g.
&lt;jardesc&gt;
  &lt;jar path="myProjectDir/myJar.jar"/&gt;
...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46107" />
    <CreationDate amount="2003-11-05 11:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Java Processes linger</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="9">
        <Lines>
          <Line>1)Go to Profiling + Logging perpsective</Line>
          <Line>2)Launch a java Process</Line>
          <Line>3)Terminate the process</Line>
          <Line>4)Close the workbench</Line>
          <Line>5)Open up the task manager</Line>
          <Line>The java.exe is still there</Line>
          <Line>Moving the defect to the right component</Line>
          <Line>Need to verify if this is still a problem.</Line>
          <Line>Verified this defect with the build 3.3.0_20050207_1022:</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>After profiling a simple application (ie.StartStop), and closing the workbench, 
the java.exe still remain as a process in my task manager, even when the 
application has been terminated.
Reproduce:
1)Go to Profiling + Logging perpsective
2)Launch a java Process
3)Terminate the process
4)Close the workbench
5)Open up the task manager
The java.exe is still there
Moving the defect to the right component
Need to verify if this is still a problem.
Verified this defect with the build 3.3.0_20050207_1022:

When profiling the StartStop from the workbench, a new process java.exe showed 
up in the Windows Task Manager. After the profiling process terminated, the 
process java.exe disappeared from the Task Manager.
Verified to be fixed in the build 3.3.0_20050207_1022
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>After profiling a simple application (ie.StartStop), and closing the workbench, 
the java.exe still remain as a process in my task manager, even when the 
application has been terminated.
Reproduce:
1)Go to Profiling + Logging perpsective
2)Launch a java Process
3)Terminate the process
4)Close the workbench
5)Open up the task manager
The java.exe is still there
Moving the defect to the right component
Need to verify if this is still a problem.
Verified this defect with the build 3.3.0_20050207_1022:

When profiling the StartStop from the workbench, a new process java.exe showed 
up in the Windows Task Manager. After the profiling process terminated, the 
process java.exe disappeared from the Task Manager.
Verified to be fixed in the build 3.3.0_20050207_1022
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46108" />
    <CreationDate amount="2003-11-05 11:19:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Runtime" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[osgi] State.resolveConstraint being called when constraint has not changed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>State.resolveConstraint being called when constraint has not changed. Workaround
is to ignore when the new resolution state is the same as the existing one. But
the call should not have been made in the first place.
what is the status of this?
It is in my todo-list for the resolver... 
Removing milestone.
This code has been completely rewritten.</WithStack>
    <WithOutStack>State.resolveConstraint being called when constraint has not changed. Workaround
is to ignore when the new resolution state is the same as the existing one. But
the call should not have been made in the first place.
what is the status of this?
It is in my todo-list for the resolver... 
Removing milestone.
This code has been completely rewritten.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46109" />
    <CreationDate amount="2003-11-05 11:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[EditorMgmt] Better management for closing editors</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Closing editors currently requires clicking on the X which only appears when 
you mouse over.  If there are many editors to close (for example, after 
looking at the results of a search) this is a very tedious process.  Suggest 
adding an action to the context menu that appears on right click over any 
editor tab, which would open a dialog listing all editors, providing a 
convenient means for selecting several and then closing them.
Also suggest adding the following menu items: 

 * Close all
 * Close all but this one. 
Take a look at the dialog you get with &lt;cntl&gt;&lt;shift&gt;W

I think this may be what you are looking for.
Yes, that's good, thanks! - but, still - there should be an action in the 
context menu.  I think it's a standard feature, not an advanced feature - so 
IMHO there should be a non-keyboard shortcut way to invoke it.</WithStack>
    <WithOutStack>Closing editors currently requires clicking on the X which only appears when 
you mouse over.  If there are many editors to close (for example, after 
looking at the results of a search) this is a very tedious process.  Suggest 
adding an action to the context menu that appears on right click over any 
editor tab, which would open a dialog listing all editors, providing a 
convenient means for selecting several and then closing them.
Also suggest adding the following menu items: 

 * Close all
 * Close all but this one. 
Take a look at the dialog you get with &lt;cntl&gt;&lt;shift&gt;W

I think this may be what you are looking for.
Yes, that's good, thanks! - but, still - there should be an action in the 
context menu.  I think it's a standard feature, not an advanced feature - so 
IMHO there should be a non-keyboard shortcut way to invoke it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46110" />
    <CreationDate amount="2003-11-05 11:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Autobuild preference appears to be lost</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>1. Launch a new test workspace from within Eclipse.</Line>
          <Line>2. Open the Java perspective.</Line>
          <Line>3. Import jdt.core from source after importing its required projects as binary.</Line>
          <Line>4. Allow the build to finish then exit the workspace.</Line>
          <Line />
          <Line>5. Restart the workspace &amp; notice an incremental background build occurs.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>M4

1. Launch a new test workspace from within Eclipse.
2. Open the Java perspective.
3. Import jdt.core from source after importing its required projects as binary.
4. Allow the build to finish then exit the workspace.

5. Restart the workspace &amp; notice an incremental background build occurs.

Should happen everytime you restart the workspace. Toggling the Auto-build 
preference back &amp; forth has no affect on the next restart.
Cannot reproduce with latest in HEAD.

Note the "autobuild" job does run even when autobuild is off.  This is a bit of
a technicality... it just runs the PRE_AUTO_BUILD and POST_AUTO_BUILD change
events, since these are specified to run regardless of whether autobuild is on.
 This should be very quick.  I didn't even see a flicker in the progress view
with your steps.</WithStack>
    <WithOutStack>M4

1. Launch a new test workspace from within Eclipse.
2. Open the Java perspective.
3. Import jdt.core from source after importing its required projects as binary.
4. Allow the build to finish then exit the workspace.

5. Restart the workspace &amp; notice an incremental background build occurs.

Should happen everytime you restart the workspace. Toggling the Auto-build 
preference back &amp; forth has no affect on the next restart.
Cannot reproduce with latest in HEAD.

Note the "autobuild" job does run even when autobuild is off.  This is a bit of
a technicality... it just runs the PRE_AUTO_BUILD and POST_AUTO_BUILD change
events, since these are specified to run regardless of whether autobuild is on.
 This should be very quick.  I didn't even see a flicker in the progress view
with your steps.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46111" />
    <CreationDate amount="2003-11-05 12:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NullPointerException when calling 'setLaunchPerspective'</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="package">
        <location start="955" end="991" />
        <code>package custom.launch.configuration;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1128" end="1142" />
        <code>super();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1288" end="1326" />
        <code>.getLaunchManager();</code>
      </source_code>
      <source_code type="functioncall">
        <location start="1378" end="1428" />
        <code>("custom.launch.configuration");</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I have a custom debug perspective for my programming language. I also have a 
custom LaunchConfigurationType. I want the user to be automatically switched to 
the custom debug perspective when he launches my custom LaunchConfigurationType 
in debug mode. This used to work for me when I was using 2.1, but now that I 
have migrated to 3.0M4 I have had to do this differently.

I am now using the brand new method 'setLaunchPerspective'' of 
org.eclipse.debug.ui.DebugUITools. I have decided to put the call 
to 'setLaunchPerspective' inside the constructor for my custom launch delegate.

Here are some code snippets:

&lt;extension point = "org.eclipse.debug.core.launchConfigurationTypes"&gt;
 &lt;launchConfigurationType
  id="custom.launch.configuration"
  name="Custom launch configuration"
  delegate="custom.launch.configuration.delegate"
  modes= "run, debug"&gt;
   &lt;fileExtension
	extension="abc"
	default="true"/&gt;
 &lt;/launchConfigurationType&gt;
&lt;/extension&gt;

package custom.launch.configuration;
public class delegate
   implements ILaunchConfigurationDelegate
{
   public OmnimarkLocalApplicationLaunchConfigurationDelegate()
   {
      super();

      ILaunchManager            manager;
      ILaunchConfigurationType  type;

      manager = org.eclipse.debug.core.DebugPlugin.getDefault()
                  .getLaunchManager();
      type    = manager.getLaunchConfigurationType
                  ("custom.launch.configuration");

      DebugUITools.setLaunchPerspective(type,
                                       ILaunchManager.DEBUG_MODE,
                                       "custom.debug.perspective");
   }

The problem is that I am getting a null pointer excecption when I 
call 'setLaunchPerspective'.

More precisely, the variable 'fPreferenceMap' in 'internalSetLaunchPerspective' 
of org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager is 
null.

It seems that this map will always be null until somebody 
calls 'getUserSpecifiedLaunchPerspective', and I am 
calling 'org.eclipse.debug.ui.DebugUITools.setLaunchPerspective' which ends up 
calling 'setLaunchPerspective' before anything ever 
calls 'getUserSpecifiedLaunchPerspective'.
Type in code above (comment #1), the constructor name should be 'delegate' 
instead of 'OmnimarkLocalApplicationLaunchConfigurationDelegate'.
Fixed in PerspectiveManager.
Please verify, Luc.
Verified.</WithStack>
    <WithOutStack>I have a custom debug perspective for my programming language. I also have a 
custom LaunchConfigurationType. I want the user to be automatically switched to 
the custom debug perspective when he launches my custom LaunchConfigurationType 
in debug mode. This used to work for me when I was using 2.1, but now that I 
have migrated to 3.0M4 I have had to do this differently.

I am now using the brand new method 'setLaunchPerspective'' of 
org.eclipse.debug.ui.DebugUITools. I have decided to put the call 
to 'setLaunchPerspective' inside the constructor for my custom launch delegate.

Here are some code snippets:

&lt;extension point = "org.eclipse.debug.core.launchConfigurationTypes"&gt;
 &lt;launchConfigurationType
  id="custom.launch.configuration"
  name="Custom launch configuration"
  delegate="custom.launch.configuration.delegate"
  modes= "run, debug"&gt;
   &lt;fileExtension
	extension="abc"
	default="true"/&gt;
 &lt;/launchConfigurationType&gt;
&lt;/extension&gt;

package custom.launch.configuration;
public class delegate
   implements ILaunchConfigurationDelegate
{
   public OmnimarkLocalApplicationLaunchConfigurationDelegate()
   {
      super();

      ILaunchManager            manager;
      ILaunchConfigurationType  type;

      manager = org.eclipse.debug.core.DebugPlugin.getDefault()
                  .getLaunchManager();
      type    = manager.getLaunchConfigurationType
                  ("custom.launch.configuration");

      DebugUITools.setLaunchPerspective(type,
                                       ILaunchManager.DEBUG_MODE,
                                       "custom.debug.perspective");
   }

The problem is that I am getting a null pointer excecption when I 
call 'setLaunchPerspective'.

More precisely, the variable 'fPreferenceMap' in 'internalSetLaunchPerspective' 
of org.eclipse.debug.internal.ui.launchConfigurations.PerspectiveManager is 
null.

It seems that this map will always be null until somebody 
calls 'getUserSpecifiedLaunchPerspective', and I am 
calling 'org.eclipse.debug.ui.DebugUITools.setLaunchPerspective' which ends up 
calling 'setLaunchPerspective' before anything ever 
calls 'getUserSpecifiedLaunchPerspective'.
Type in code above (comment #1), the constructor name should be 'delegate' 
instead of 'OmnimarkLocalApplicationLaunchConfigurationDelegate'.
Fixed in PerspectiveManager.
Please verify, Luc.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46112" />
    <CreationDate amount="2003-11-05 12:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Please provide some means to compute one dimension of a control's size, given the other (known) dimension</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>1. Change the implementation of computeSize to match its JavaDoc and the way it</Line>
          <Line>is being used in Eclipse.</Line>
          <Line>2. Provide a new method whose behavior matches the JavaDoc for computeSize.</Line>
          <Line>3. Provide a new method that returns a control's trim given its outer dimensions.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>SWT needs to expose some way to compute the height of a control given its width
(and visa versa). 

Control.computeSize does not behave as documented. It takes the inner content
size (the size of the control minus trim) as hints, not the actual control size.
SWT does not provide API to compute the trim size of a control given its outer
dimensions, and layouts only have knowledge of the outer dimensions of child
controls.

This enhancement asks for one of the following:

1. Change the implementation of computeSize to match its JavaDoc and the way it
is being used in Eclipse.
2. Provide a new method whose behavior matches the JavaDoc for computeSize.
3. Provide a new method that returns a control's trim given its outer dimensions.

Personally, I would prefer option 1. This would simplify code within SWT, and
would fix downstream bugs in apps that expect computeSize to behave as
documented. Options 2 or 3 would require updating the JavaDoc for computeSize to
describe the actual behavior of computeSize.

This is required in order for ANY layout to correctly handle wrapping text.

See bug 45874 for more details
*** Bug 45874 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 9866 ***
Reopening. Bug 9866 was closed without solving this issue.
It was bogusly marked as a dup.  That's why it was closed.
*** Bug 90232 has been marked as a duplicate of this bug. ***
See bug 46112, bug 104234, and bug 103863. These are the three biggest issues
that are complicating the workbench layouts.

This is still a problem.</WithStack>
    <WithOutStack>SWT needs to expose some way to compute the height of a control given its width
(and visa versa). 

Control.computeSize does not behave as documented. It takes the inner content
size (the size of the control minus trim) as hints, not the actual control size.
SWT does not provide API to compute the trim size of a control given its outer
dimensions, and layouts only have knowledge of the outer dimensions of child
controls.

This enhancement asks for one of the following:

1. Change the implementation of computeSize to match its JavaDoc and the way it
is being used in Eclipse.
2. Provide a new method whose behavior matches the JavaDoc for computeSize.
3. Provide a new method that returns a control's trim given its outer dimensions.

Personally, I would prefer option 1. This would simplify code within SWT, and
would fix downstream bugs in apps that expect computeSize to behave as
documented. Options 2 or 3 would require updating the JavaDoc for computeSize to
describe the actual behavior of computeSize.

This is required in order for ANY layout to correctly handle wrapping text.

See bug 45874 for more details
*** Bug 45874 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of 9866 ***
Reopening. Bug 9866 was closed without solving this issue.
It was bogusly marked as a dup.  That's why it was closed.
*** Bug 90232 has been marked as a duplicate of this bug. ***
See bug 46112, bug 104234, and bug 103863. These are the three biggest issues
that are complicating the workbench layouts.

This is still a problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46113" />
    <CreationDate amount="2003-11-05 12:33:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Live Sync View] Context menu enablement not updated</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="5">
        <Lines>
          <Line>1) There is an conflict on a file</Line>
          <Line>2) Mrk as Merged and Override and Commit is enabled and Commit is not enabled</Line>
          <Line>3) perform a Mark as Merged</Line>
          <Line>4) Commit is still disabled</Line>
          <Line>5) select another node and reselect original. Commit is now enabled.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>If I select a node in the sync view and perform an operation, the menu
enablement in the context menu is not updated. Here is the scenario I tried:

1) There is an conflict on a file
2) Mrk as Merged and Override and Commit is enabled and Commit is not enabled
3) perform a Mark as Merged
4) Commit is still disabled
5) select another node and reselect original. Commit is now enabled.

This is with I20031104
Ugly hack to fix this problem. Basically PluginAction enablement is not 
updated unless there is a selection change. If added code to listen before the 
menu is shown and force all PluginActions (e.g. action contributions) to 
update their enablement.

Should confirm with UI team if this is appropriate or if there are better 
hacks:)
Created attachment 6688
patch attempt 1
released to HEAD.</WithStack>
    <WithOutStack>If I select a node in the sync view and perform an operation, the menu
enablement in the context menu is not updated. Here is the scenario I tried:

1) There is an conflict on a file
2) Mrk as Merged and Override and Commit is enabled and Commit is not enabled
3) perform a Mark as Merged
4) Commit is still disabled
5) select another node and reselect original. Commit is now enabled.

This is with I20031104
Ugly hack to fix this problem. Basically PluginAction enablement is not 
updated unless there is a selection change. If added code to listen before the 
menu is shown and force all PluginActions (e.g. action contributions) to 
update their enablement.

Should confirm with UI team if this is appropriate or if there are better 
hacks:)
Created attachment 6688
patch attempt 1
released to HEAD.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46114" />
    <CreationDate amount="2003-11-05 12:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-GTK" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Eclipse freezes after edit of .bashrc in Linux SuSE 8.2 everytime</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="6">
        <Lines>
          <Line>1.  Install Eclipse from the .zip file</Line>
          <Line>2.  Install my Eclipse Projects</Line>
          <Line>3.  Run any Java App</Line>
          <Line>4.  Make an alias change in .bashrc file</Line>
          <Line>5.  Close eclipse and open the open a new eclipse</Line>
          <Line>6.  Eclipse freezes</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- Eclipse does not freeze unless I execute a Java App as in step 3.</Line>
          <Line>- Running Java 1.4.1</Line>
          <Line>- Linux Suse 8.2</Line>
          <Line>- Dell Inspirion 4150</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>For some reason everytime after I change my .bashrc file the next time in run 
Eclipse it freezes on me and doesn't work properly.

Below are the steps I take to recreate the bug for me.
1.  Install Eclipse from the .zip file
2.  Install my Eclipse Projects
3.  Run any Java App
4.  Make an alias change in .bashrc file
5.  Close eclipse and open the open a new eclipse
6.  Eclipse freezes

Things of note:
- Eclipse does not freeze unless I execute a Java App as in step 3.
- Running Java 1.4.1
- Linux Suse 8.2
- Dell Inspirion 4150

Please help.
Sorry if we didn't help...&lt;g&gt; This one fell throught the cracks.

Please reopen if you are still seeing this (I guess you are not, because you
would not be using Eclipse anymore). If you can still reproduce it, we should be
able to find out where Eclipse is getting stuck.</WithStack>
    <WithOutStack>For some reason everytime after I change my .bashrc file the next time in run 
Eclipse it freezes on me and doesn't work properly.

Below are the steps I take to recreate the bug for me.
1.  Install Eclipse from the .zip file
2.  Install my Eclipse Projects
3.  Run any Java App
4.  Make an alias change in .bashrc file
5.  Close eclipse and open the open a new eclipse
6.  Eclipse freezes

Things of note:
- Eclipse does not freeze unless I execute a Java App as in step 3.
- Running Java 1.4.1
- Linux Suse 8.2
- Dell Inspirion 4150

Please help.
Sorry if we didn't help...&lt;g&gt; This one fell throught the cracks.

Please reopen if you are still seeing this (I guess you are not, because you
would not be using Eclipse anymore). If you can still reproduce it, we should be
able to find out where Eclipse is getting stuck.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46115" />
    <CreationDate amount="2003-11-05 13:03:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="CVS" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Annotate] Show Annotation switches perspective</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Build 20031104

Selecting Team-&gt;Show Annotation switches to the CVS perspective. There doesn't 
appear to be any way to turn this off. The closest available preference is the 
perspective switching preference for synchronizing, but I've already got that 
set to "None".
Yeah, the guy who wrote this feature got pulled off our team and we haven't 
had a chance to polish it off yet. I agree that the switch is rude, since you 
can't disable it.
*** Bug 49952 has been marked as a duplicate of this bug. ***
*** Bug 50668 has been marked as a duplicate of this bug. ***
*** Bug 52560 has been marked as a duplicate of this bug. ***
Post 3.0
Patch released to HEAD</WithStack>
    <WithOutStack>Build 20031104

Selecting Team-&gt;Show Annotation switches to the CVS perspective. There doesn't 
appear to be any way to turn this off. The closest available preference is the 
perspective switching preference for synchronizing, but I've already got that 
set to "None".
Yeah, the guy who wrote this feature got pulled off our team and we haven't 
had a chance to polish it off yet. I agree that the switch is rude, since you 
can't disable it.
*** Bug 49952 has been marked as a duplicate of this bug. ***
*** Bug 50668 has been marked as a duplicate of this bug. ***
*** Bug 52560 has been marked as a duplicate of this bug. ***
Post 3.0
Patch released to HEAD</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46116" />
    <CreationDate amount="2003-11-05 13:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P1" />
    <bug_severity amount="normal" />
    <Summery>NPE in team jobs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341072007">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ui.jobs.JobBusyCursor.showCursor(JobBusyCursor.java:48)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ui.jobs.JobBusyCursor.finished(JobBusyCursor.java:93)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ui.jobs.JobStatusHandler$2.notify(JobStatusHandler.java:224)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ui.jobs.JobStatusHandler$Notification.run(JobStatusHandler.java:46)</Frame>
          <Frame depth="4">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1143)</Frame>
          <Frame depth="5">org.eclipse.core.runtime.Platform.run(Platform.java:461)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ui.jobs.JobStatusHandler$Notification.run(JobStatusHandler.java:43)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ui.jobs.JobStatusHandler.fireNotification(JobStatusHandler.java:174)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ui.jobs.JobStatusHandler.fireEndNotification(JobStatusHandler.java:222)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ui.jobs.JobStatusHandler.jobDone(JobStatusHandler.java:216)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ui.jobs.JobStatusHandler.done(JobStatusHandler.java:150)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:106)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1143)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.Platform.run(Platform.java:461)</Frame>
          <Frame depth="15">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="16">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="17">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:305)</Frame>
          <Frame depth="18">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:85)</Frame>
          <Frame depth="19">org.eclipse.core.internal.jobs.Worker.run(Worker.java:72)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Using 1105, I get this stack trace:
java.lang.NullPointerException
at org.eclipse.team.internal.ui.jobs.JobBusyCursor.showCursor(JobBusyCursor.java:48)
at org.eclipse.team.internal.ui.jobs.JobBusyCursor.finished(JobBusyCursor.java:93)
at
org.eclipse.team.internal.ui.jobs.JobStatusHandler$2.notify(JobStatusHandler.java:224)
at
org.eclipse.team.internal.ui.jobs.JobStatusHandler$Notification.run(JobStatusHandler.java:46)
at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1143)
at org.eclipse.core.runtime.Platform.run(Platform.java:461)
at
org.eclipse.team.internal.ui.jobs.JobStatusHandler$Notification.run(JobStatusHandler.java:43)
at
org.eclipse.team.internal.ui.jobs.JobStatusHandler.fireNotification(JobStatusHandler.java:174)
at
org.eclipse.team.internal.ui.jobs.JobStatusHandler.fireEndNotification(JobStatusHandler.java:222)
at
org.eclipse.team.internal.ui.jobs.JobStatusHandler.jobDone(JobStatusHandler.java:216)
at
org.eclipse.team.internal.ui.jobs.JobStatusHandler.done(JobStatusHandler.java:150)
at org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)
at org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:106)
at
org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1143)
at org.eclipse.core.runtime.Platform.run(Platform.java:461)
at org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)
at org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)
at org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:305)
at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:85)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:72)
I added a null check for the cursor on line 48. showCursor is called with null
argument in finished(...). I can provide a patch if necessary.
The fix for this should have been included in the build. I will investigate 
and request a rebuild if necessary.
The fix was improperly tagged and didn't make it in. The problem in annoying 
but does not affect functionality so no rebuild will be requested.
*** Bug 46130 has been marked as a duplicate of this bug. ***
Could either Olivier or Michael attach a patched JAR. The bug fills the .log and
makes it hard to see "real" problems.

Created attachment 6677
Apply on top of your Eclipse installation

Apply on your Eclipse installation at the right location. It works for me.
*** Bug 46155 has been marked as a duplicate of this bug. ***
*** Bug 46223 has been marked as a duplicate of this bug. ***
*** Bug 46333 has been marked as a duplicate of this bug. ***
*** Bug 46661 has been marked as a duplicate of this bug. ***</WithStack>
    <WithOutStack>Using 1105, I get this stack trace:

I added a null check for the cursor on line 48. showCursor is called with null
argument in finished(...). I can provide a patch if necessary.
The fix for this should have been included in the build. I will investigate 
and request a rebuild if necessary.
The fix was improperly tagged and didn't make it in. The problem in annoying 
but does not affect functionality so no rebuild will be requested.
*** Bug 46130 has been marked as a duplicate of this bug. ***
Could either Olivier or Michael attach a patched JAR. The bug fills the .log and
makes it hard to see "real" problems.

Created attachment 6677
Apply on top of your Eclipse installation

Apply on your Eclipse installation at the right location. It works for me.
*** Bug 46155 has been marked as a duplicate of this bug. ***
*** Bug 46223 has been marked as a duplicate of this bug. ***
*** Bug 46333 has been marked as a duplicate of this bug. ***
*** Bug 46661 has been marked as a duplicate of this bug. ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46117" />
    <CreationDate amount="2003-11-05 13:30:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[PropertiesView] Properties view does not clear on selection.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>We have a debug adapter which provides properties for the stack frame.  When 
stopped at a breakpoint the top stack frame is selected in the debug view 
(automatically by the debug framework).  If the debug view is active then the 
properties for that stack frame will show in the properties view.  If the user 
then clicks on another view such as the display view or the editor, the stack 
frame properties still show.  If the user then presses the F5 button to do a 
step into, the properties view still shows the information for the old stack 
frame, even though the user has stepped into a new function.  It would be much 
less confusing if the properties view cleared itself if there are no properties 
for the current selection rather than continuing to show the properties for the 
previous selection.
Reassigning bugs in component areas that are changing ownership.

Cleaning up defect lists by setting ones without recent traffic to 'REMIND'.

As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>We have a debug adapter which provides properties for the stack frame.  When 
stopped at a breakpoint the top stack frame is selected in the debug view 
(automatically by the debug framework).  If the debug view is active then the 
properties for that stack frame will show in the properties view.  If the user 
then clicks on another view such as the display view or the editor, the stack 
frame properties still show.  If the user then presses the F5 button to do a 
step into, the properties view still shows the information for the old stack 
frame, even though the user has stepped into a new function.  It would be much 
less confusing if the properties view cleared itself if there are no properties 
for the current selection rather than continuing to show the properties for the 
previous selection.
Reassigning bugs in component areas that are changing ownership.

Cleaning up defect lists by setting ones without recent traffic to 'REMIND'.

As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46118" />
    <CreationDate amount="2003-11-05 13:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Dialogs] Open Resource:  Should allow multiple open.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I have 2 branches and the head which I currently work on, each is a different
project in my eclipse workspace.  Currently I am making a change to the head and
I need to backport that change to the two branches.  So to open the file on the
head I use ctrl-shirt-r and click the fiel and the project it exists in but I
would also like to open the other two instances so I have to repeat this action
another two times.  It would be great if I could just multiple select the
instances in the folder list and have them all open !!!
Not for 3.0
Reopening now that 3.0 has shipped
*** Bug 39371 has been marked as a duplicate of this bug. ***
*** Bug 78032 has been marked as a duplicate of this bug. ***
moving Open Resource related bugs to Szymon.
Szymon, please move between you and Krystof as needed.  Let me know if you have any questions.  These are all the bugs I had related to OpenResource.
AbstractSearchDialog is a new abstract class which should be used as a super
class for resource and type search dialogs.

The new dialog solves the problem.
Fixed</WithStack>
    <WithOutStack>I have 2 branches and the head which I currently work on, each is a different
project in my eclipse workspace.  Currently I am making a change to the head and
I need to backport that change to the two branches.  So to open the file on the
head I use ctrl-shirt-r and click the fiel and the project it exists in but I
would also like to open the other two instances so I have to repeat this action
another two times.  It would be great if I could just multiple select the
instances in the folder list and have them all open !!!
Not for 3.0
Reopening now that 3.0 has shipped
*** Bug 39371 has been marked as a duplicate of this bug. ***
*** Bug 78032 has been marked as a duplicate of this bug. ***
moving Open Resource related bugs to Szymon.
Szymon, please move between you and Krystof as needed.  Let me know if you have any questions.  These are all the bugs I had related to OpenResource.
AbstractSearchDialog is a new abstract class which should be used as a super
class for resource and type search dialogs.

The new dialog solves the problem.
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46119" />
    <CreationDate amount="2003-11-05 13:43:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[CVS Sync View] Exceptions during project deletion</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341072009">
        <Exception>org.eclipse.team.internal.ccvs.core.CVSException</Exception>
        <Reason>Synchronization bytes are
missing for parent of resource '/org.eclipse.team.ui/build.properties' in
synchronization partner 'org.eclipse.team.cvs:remote-resource-key' on get.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ccvs.core.syncinfo.CVSRemoteSynchronizer.getRemoteResource(CVSRemoteSynchronizer.java:47)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getRemoteResource(CVSSyncTreeSubscriber.java:151)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getSyncInfo(CVSSyncTreeSubscriber.java:172)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.collect(SubscriberEventHandler.java:149)</Frame>
          <Frame depth="4">org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEvent(SubscriberEventHandler.java:277)</Frame>
          <Frame depth="5">org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:206)</Frame>
          <Frame depth="6">org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:87)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Replacing team.ui (imported in binary form) with its source version from the
dev.eclipse.org cvs server, I get lots of:
org.eclipse.team.internal.ccvs.core.CVSException: Synchronization bytes are
missing for parent of resource '/org.eclipse.team.ui/build.properties' in
synchronization partner 'org.eclipse.team.cvs:remote-resource-key' on get.
	at
org.eclipse.team.internal.ccvs.core.syncinfo.CVSRemoteSynchronizer.getRemoteResource(CVSRemoteSynchronizer.java:47)
	at
org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getRemoteResource(CVSSyncTreeSubscriber.java:151)
	at
org.eclipse.team.internal.ccvs.core.CVSSyncTreeSubscriber.getSyncInfo(CVSSyncTreeSubscriber.java:172)
	at
org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.collect(SubscriberEventHandler.java:149)
	at
org.eclipse.team.internal.ui.synchronize.sets.SubscriberEventHandler.processEvent(SubscriberEventHandler.java:277)
	at
org.eclipse.team.core.subscribers.BackgroundEventHandler.processEvents(BackgroundEventHandler.java:206)
	at
org.eclipse.team.core.subscribers.BackgroundEventHandler$1.run(BackgroundEventHandler.java:87)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
The event handler should catch this and react accordingly (i.e. ignore it 
since the project is no longer a CVS project).
I also ended up with outgoing changes that I could not get rid of. The only way 
to get rid of it was to delete the binary project and import it again.
The outgoing changes problem has been fixed. The original problem turns out to 
be hard to handle. The problem is that during a project deletion, Core deletes 
from the file system first and then cleans up it's internal structures. This 
puts things in a state that causes the above exception. The problem is that it 
is difiicult to differentiate the valid failure from an actual failure because 
there is no que that the project is in the process of being deleted.

Given that this exception doesn't effect functionality, we'll put this off 
until later in 3.0.
Haven't seen this lately.</WithStack>
    <WithOutStack>Replacing team.ui (imported in binary form) with its source version from the
dev.eclipse.org cvs server, I get lots of:

The event handler should catch this and react accordingly (i.e. ignore it 
since the project is no longer a CVS project).
I also ended up with outgoing changes that I could not get rid of. The only way 
to get rid of it was to delete the binary project and import it again.
The outgoing changes problem has been fixed. The original problem turns out to 
be hard to handle. The problem is that during a project deletion, Core deletes 
from the file system first and then cleans up it's internal structures. This 
puts things in a state that causes the above exception. The problem is that it 
is difiicult to differentiate the valid failure from an actual failure because 
there is no que that the project is in the process of being deleted.

Given that this exception doesn't effect functionality, we'll put this off 
until later in 3.0.
Haven't seen this lately.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46120" />
    <CreationDate amount="2003-11-05 13:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Switching back to editor should not initially invalidate selection.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>- java (or other) file open in editor</Line>
          <Line>- select text</Line>
          <Line>- click on other pane (package explorer, etc)</Line>
          <Line>- click back on editor to return focus</Line>
          <Line>The original selected text is cleared, as the click on the editor is considered</Line>
          <Line>a caret position change, as opposed to a refocus on the editor pane.  An initial</Line>
          <Line>focus switch on first click on unfocused editor would be nice, so as not to</Line>
          <Line>invalidate existing (and useful) selection.  Addmittedly, when using keystrokes</Line>
          <Line>to switch focus, the selection is not invalidated, however, I would imagine that</Line>
          <Line>mouse based focussing is the primary usecase, and, as such, a fix would be quite</Line>
          <Line>useful.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>In the following scenario:
 - java (or other) file open in editor
 - select text
 - click on other pane (package explorer, etc)
 - click back on editor to return focus
The original selected text is cleared, as the click on the editor is considered
a caret position change, as opposed to a refocus on the editor pane.  An initial
focus switch on first click on unfocused editor would be nice, so as not to
invalidate existing (and useful) selection.  Addmittedly, when using keystrokes
to switch focus, the selection is not invalidated, however, I would imagine that
mouse based focussing is the primary usecase, and, as such, a fix would be quite
useful.

M3 is stunning, btw.  

Andy
The 80% case is that the user clicks where he wants to edit/browse next. If you
want to keep the selection without loosing the selection you can click on the
editor's tab.</WithStack>
    <WithOutStack>In the following scenario:
 - java (or other) file open in editor
 - select text
 - click on other pane (package explorer, etc)
 - click back on editor to return focus
The original selected text is cleared, as the click on the editor is considered
a caret position change, as opposed to a refocus on the editor pane.  An initial
focus switch on first click on unfocused editor would be nice, so as not to
invalidate existing (and useful) selection.  Addmittedly, when using keystrokes
to switch focus, the selection is not invalidated, however, I would imagine that
mouse based focussing is the primary usecase, and, as such, a fix would be quite
useful.

M3 is stunning, btw.  

Andy
The 80% case is that the user clicks where he wants to edit/browse next. If you
want to keep the selection without loosing the selection you can click on the
editor's tab.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46121" />
    <CreationDate amount="2003-11-05 13:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>java vm unable to find required classes.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341072011">
        <Exception>java.net.MalformedURLException</Exception>
        <Reason>unknown protocol: https</Reason>
        <Frames>
          <Frame depth="0">java.net.URL.&lt;init&gt;(URL.java:480)</Frame>
          <Frame depth="1">java.net.URL.&lt;init&gt;(URL.java:376)</Frame>
          <Frame depth="2">java.net.URL.&lt;init&gt;(URL.java:330)</Frame>
          <Frame depth="3">testUrl.main(testUrl.java:9)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="3">
      <source_code type="import">
        <location start="459" end="499" />
        <code>import java.net.MalformedURLException;</code>
      </source_code>
      <source_code type="import">
        <location start="500" end="520" />
        <code>import java.net.URL;</code>
      </source_code>
      <source_code type="class">
        <location start="522" end="879" />
        <code>public class testUrl {

    public static void main(String[] args) {
        
        try {
            URL u = new URL("https://finance.yahoo.com:6000/hello");
            System.out.println(u.getProtocol());
        } catch (MalformedURLException e) {
            // todo: Auto-generated catch block
            e.printStackTrace();
        }
    
    }
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>e3m4.

When I run the following code from within eclipse using jdk 131 I get a java.net
.MalformedUrlException.  This classfile works when run under w2k dos.

I have this in my .classpath file:

    &lt;classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/&gt;

And when I expand the jre system library I see the following files:

i18n.jar
jcsi_base.jar
jcsi_jce.jar
jcsi_krb.jar
jcsi_provider.jar
rt.jar
sunrsasign.jar

Here is the class file.


import java.net.MalformedURLException;
import java.net.URL;

public class testUrl {

    public static void main(String[] args) {
        
        try {
            URL u = new URL("https://finance.yahoo.com:6000/hello");
            System.out.println(u.getProtocol());
        } catch (MalformedURLException e) {
            // todo: Auto-generated catch block
            e.printStackTrace();
        }
    
    }
}
I get the same result from the command line as within Eclipse. It works on 1.4 
and not on 1.3. Following is my command line output. Thus, it does not indicate 
a problem with Eclipse.

D:\eclipse3.0\plugins\Bingo&gt;d:\jdk1.3.1\jre\bin\java -cp . testUrl
java.net.MalformedURLException: unknown protocol: https
        at java.net.URL.&lt;init&gt;(URL.java:480)
        at java.net.URL.&lt;init&gt;(URL.java:376)
        at java.net.URL.&lt;init&gt;(URL.java:330)
        at testUrl.main(testUrl.java:9)

D:\eclipse3.0\plugins\Bingo&gt;d:\jdk1.4.1\jre\bin\java -cp . testUrl
https</WithStack>
    <WithOutStack>e3m4.

When I run the following code from within eclipse using jdk 131 I get a java.net
.MalformedUrlException.  This classfile works when run under w2k dos.

I have this in my .classpath file:

    &lt;classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/&gt;

And when I expand the jre system library I see the following files:

i18n.jar
jcsi_base.jar
jcsi_jce.jar
jcsi_krb.jar
jcsi_provider.jar
rt.jar
sunrsasign.jar

Here is the class file.


import java.net.MalformedURLException;
import java.net.URL;

public class testUrl {

    public static void main(String[] args) {
        
        try {
            URL u = new URL("https://finance.yahoo.com:6000/hello");
            System.out.println(u.getProtocol());
        } catch (MalformedURLException e) {
            // todo: Auto-generated catch block
            e.printStackTrace();
        }
    
    }
}
I get the same result from the command line as within Eclipse. It works on 1.4 
and not on 1.3. Following is my command line output. Thus, it does not indicate 
a problem with Eclipse.

D:\eclipse3.0\plugins\Bingo&gt;d:\jdk1.3.1\jre\bin\java -cp . testUrl


D:\eclipse3.0\plugins\Bingo&gt;d:\jdk1.4.1\jre\bin\java -cp . testUrl
https</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46122" />
    <CreationDate amount="2003-11-05 13:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[CVS UI] Problems with History View refreshing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="23">
        <Lines>
          <Line>1) I perform a Tag with Existing and the tag I wanted was missing. Refresh</Line>
          <Line>didn't make the tag visible but Configure worked OK.</Line>
          <Line />
          <Line>2) After the tag with exiting, the view appeared to refresh but the contents</Line>
          <Line>of the view didn't change (i.e. the tag wasn't moved). Peforming an explict</Line>
          <Line>refrsh fixed the problem but performing a Team&gt;Show in Resource History did</Line>
          <Line>not.</Line>
          <Line>Problem 2 occurs because the view does not refresh it's contents on a Show in</Line>
          <Line>Resource History if it is already showing that file. This leads to a third</Line>
          <Line>problem.</Line>
          <Line />
          <Line>3) If the revision of a local file being shown has changed (e.g. gone from</Line>
          <Line>1.10 to 1.11 or higher), performing a Show in Resource History will not</Line>
          <Line>refresh the view. It should.</Line>
          <Line>Post 3.0</Line>
          <Line>I guess this is the same problem:</Line>
          <Line>- open CVS Resource History and enable 'Link with Editor'</Line>
          <Line>- open a file, change it, commit the change</Line>
          <Line>-&gt; CVS Resource History is not updated</Line>
          <Line>*** Bug 94839 has been marked as a duplicate of this bug. ***</Line>
          <Line>I fixed this problem in 3.1</Line>
          <Line>The resource history view is now completely refreshed when I call Team &gt; Show</Line>
          <Line>Resource History on the file that is already shown in the history.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- open CVS Resource History and enable 'Link with Editor'</Line>
          <Line>- open a file, change it, commit the change</Line>
          <Line>-&gt; CVS Resource History is not updated</Line>
          <Line>*** Bug 94839 has been marked as a duplicate of this bug. ***</Line>
          <Line>I fixed this problem in 3.1</Line>
          <Line>The resource history view is now completely refreshed when I call Team &gt; Show</Line>
          <Line>Resource History on the file that is already shown in the history.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I've noticed the following problems with the History view:

1) I perform a Tag with Existing and the tag I wanted was missing. Refresh 
didn't make the tag visible but Configure worked OK.

2) After the tag with exiting, the view appeared to refresh but the contents 
of the view didn't change (i.e. the tag wasn't moved). Peforming an explict 
refrsh fixed the problem but performing a Team&gt;Show in Resource History did 
not.
Problem 2 occurs because the view does not refresh it's contents on a Show in 
Resource History if it is already showing that file. This leads to a third 
problem.

3) If the revision of a local file being shown has changed (e.g. gone from 
1.10 to 1.11 or higher), performing a Show in Resource History will not 
refresh the view. It should.
Post 3.0
I guess this is the same problem:
- open CVS Resource History and enable 'Link with Editor'
- open a file, change it, commit the change
-&gt; CVS Resource History is not updated
*** Bug 94839 has been marked as a duplicate of this bug. ***
I fixed this problem in 3.1
The resource history view is now completely refreshed when I call Team &gt; Show
Resource History on the file that is already shown in the history.

But the problems from bug 94839 and from comment 3 are not fixed: If the
resource history is linked to the editor and the edited file gets another
revision (commit or update), the Resource History is not updated automatically.
Could you log a separate bug for that. I could just reopen the old one but 
then it gets confusing trying to figure out what is fixed and what isn't. 
Thanks...</WithStack>
    <WithOutStack>I've noticed the following problems with the History view:

1) I perform a Tag with Existing and the tag I wanted was missing. Refresh 
didn't make the tag visible but Configure worked OK.

2) After the tag with exiting, the view appeared to refresh but the contents 
of the view didn't change (i.e. the tag wasn't moved). Peforming an explict 
refrsh fixed the problem but performing a Team&gt;Show in Resource History did 
not.
Problem 2 occurs because the view does not refresh it's contents on a Show in 
Resource History if it is already showing that file. This leads to a third 
problem.

3) If the revision of a local file being shown has changed (e.g. gone from 
1.10 to 1.11 or higher), performing a Show in Resource History will not 
refresh the view. It should.
Post 3.0
I guess this is the same problem:
- open CVS Resource History and enable 'Link with Editor'
- open a file, change it, commit the change
-&gt; CVS Resource History is not updated
*** Bug 94839 has been marked as a duplicate of this bug. ***
I fixed this problem in 3.1
The resource history view is now completely refreshed when I call Team &gt; Show
Resource History on the file that is already shown in the history.

But the problems from bug 94839 and from comment 3 are not fixed: If the
resource history is linked to the editor and the edited file gets another
revision (commit or update), the Resource History is not updated automatically.
Could you log a separate bug for that. I could just reopen the old one but 
then it gets confusing trying to figure out what is fixed and what isn't. 
Thanks...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46123" />
    <CreationDate amount="2003-11-05 13:57:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Live Sync View] Project not removed</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I imported several binary plugins over plugins that had been loaded as source. 
One of the projects (org.eclipse.platform.isv.doc) remained in the sync view 
with an incoming change on the plugin.xml file. The problem may be a timing 
issue where the SubscriberEventHandler sends an event (from a refresh) after 
the project has been cleared, thus recreating the project.
Fix released to HEAD. SubscriberInput now detects the case of a removed and 
recreated project in the delta handler.</WithStack>
    <WithOutStack>I imported several binary plugins over plugins that had been loaded as source. 
One of the projects (org.eclipse.platform.isv.doc) remained in the sync view 
with an incoming change on the plugin.xml file. The problem may be a timing 
issue where the SubscriberEventHandler sends an event (from a refresh) after 
the project has been cleared, thus recreating the project.
Fix released to HEAD. SubscriberInput now detects the case of a removed and 
recreated project in the delta handler.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46124" />
    <CreationDate amount="2003-11-05 14:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Misspelling in label strings on page in Preferences dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="11">
        <Lines>
          <Line>1. note the "Advance Filter Properties" string on the tab -- did somebody</Line>
          <Line>mean "Advanced Filter Properties" (Advanced with a "d")? The two strings mean</Line>
          <Line>entirely different things!  :-)</Line>
          <Line>2. select the "Advance Filter Properties" tab. Note the string "Advance</Line>
          <Line>filtering: create a new filter with Add button". This should probably</Line>
          <Line>be "Advanced filtering: create a new filter with the Add button"</Line>
          <Line>(change "Advance" to "Advanced", add "the" before "Add button" -- for</Line>
          <Line>localization!)</Line>
          <Line>done in Hyades 1.3.0 and 3.0 stream</Line>
          <Line>house keeping</Line>
          <Line>As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Window &gt; Preferences &gt; Profiling and Logging &gt; Log View.
1. note the "Advance Filter Properties" string on the tab -- did somebody 
mean "Advanced Filter Properties" (Advanced with a "d")? The two strings mean 
entirely different things!  :-)
2. select the "Advance Filter Properties" tab. Note the string "Advance 
filtering: create a new filter with Add button". This should probably 
be "Advanced filtering: create a new filter with the Add button" 
(change "Advance" to "Advanced", add "the" before "Add button" -- for 
localization!)
done in Hyades 1.3.0 and 3.0 stream
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithStack>
    <WithOutStack>Window &gt; Preferences &gt; Profiling and Logging &gt; Log View.
1. note the "Advance Filter Properties" string on the tab -- did somebody 
mean "Advanced Filter Properties" (Advanced with a "d")? The two strings mean 
entirely different things!  :-)
2. select the "Advance Filter Properties" tab. Note the string "Advance 
filtering: create a new filter with Add button". This should probably 
be "Advanced filtering: create a new filter with the Add button" 
(change "Advance" to "Advanced", add "the" before "Add button" -- for 
localization!)
done in Hyades 1.3.0 and 3.0 stream
house keeping
As of TPTP 4.6.0, TPTP is in maintenance mode and focusing on improving quality by resolving relevant enhancements/defects and increasing test coverage through test creation, automation, Build Verification Tests (BVTs), and expanded run-time execution. As part of the TPTP Bugzilla housecleaning process (see http://wiki.eclipse.org/Bugzilla_Housecleaning_Processes), this enhancement/defect is verified/closed by the Project Lead since this enhancement/defect has been resolved and unverified for more than 1 year and considered to be fixed. If this enhancement/defect is still unresolved and reproducible in the latest TPTP release (http://www.eclipse.org/tptp/home/downloads/), please re-open.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46125" />
    <CreationDate amount="2003-11-05 14:19:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>StateBuilder ignores match rules</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The StateBuilder currently ignores match rules. They are honored in the
resolution, cached, but processed initially (so everybody has the default match
rule: compatible)
Fixed in the loader_reorg stream.</WithStack>
    <WithOutStack>The StateBuilder currently ignores match rules. They are honored in the
resolution, cached, but processed initially (so everybody has the default match
rule: compatible)
Fixed in the loader_reorg stream.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46126" />
    <CreationDate amount="2003-11-05 14:32:00 -0500" />
    <DupId amount="50683" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="2.1.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[DCR] IBinding should have a method to check @since javadoc tag</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="8">
      <source_code type="assignment">
        <location start="501" end="553" />
        <code>Javadoc docComment = methodDeclaration.getjavadoc();</code>
      </source_code>
      <source_code type="assignment">
        <location start="554" end="603" />
        <code>Iterator tags = docComment.tags().listIterator();</code>
      </source_code>
      <source_code type="assignment">
        <location start="604" end="626" />
        <code>String version = null;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="627" end="651" />
        <code>while (tags.hasNext()) {</code>
      </source_code>
      <source_code type="assignment">
        <location start="652" end="703" />
        <code>TagElement tagElement = (TagElement) tags.next();</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="704" end="1035" />
        <code>if ("@since".equals(tagElement.getTagName())) { // tag name may be null!
  if (tagElement.fragments().size() &gt; 0) {
    ASTNode fragment = (ASTNode) fragment.next();
    if (fragment.getNodeType() == ASTNode.TEXT_ELEMENT) {
      TextElement text = (TextElement) fragment;
      version = text.getText();
      break;
    }
  }
}</code>
      </source_code>
      <source_code type="singlecomment">
        <location start="1036" end="1076" />
        <code>// Here you have version = "JDK1.2" :))</code>
      </source_code>
      <source_code type="assignment">
        <location start="1084" end="1136" />
        <code>Javadoc docComment = methodDeclaration.getJavadoc();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Similar to IBinding.isDeprecated(), it will be helpful if IBinding also have 
another method to return JDK version from @since javadoc tag.

e.g @since JDK1.2

return JDK1.2
DOM AST will soon provide support for surfacing comments. In particular, you 
should be able to look for any given tag defined in a javadoc.
General purpose comment support got added to DOM AST API. 


*** This bug has been marked as a duplicate of 50683 ***
With new API, here a code sample which can match your requirement:

Javadoc docComment = methodDeclaration.getjavadoc();
Iterator tags = docComment.tags().listIterator();
String version = null;
while (tags.hasNext()) {
  TagElement tagElement = (TagElement) tags.next();
  if ("@since".equals(tagElement.getTagName())) { // tag name may be null!
  if (tagElement.fragments().size() &gt; 0) {
    ASTNode fragment = (ASTNode) fragment.next();
    if (fragment.getNodeType() == ASTNode.TEXT_ELEMENT) {
      TextElement text = (TextElement) fragment;
      version = text.getText();
      break;
    }
  }
}
// Here you have version = "JDK1.2" :))

Sorry:
Javadoc docComment = methodDeclaration.getJavadoc();
...
assuming that methodDeclaration is kind of 
org.eclipse.jdt.core.dom.BodyDeclaration</WithStack>
    <WithOutStack>Similar to IBinding.isDeprecated(), it will be helpful if IBinding also have 
another method to return JDK version from @since javadoc tag.

e.g @since JDK1.2

return JDK1.2
DOM AST will soon provide support for surfacing comments. In particular, you 
should be able to look for any given tag defined in a javadoc.
General purpose comment support got added to DOM AST API. 


*** This bug has been marked as a duplicate of 50683 ***
With new API, here a code sample which can match your requirement:

Javadoc docComment = methodDeclaration.getjavadoc();
Iterator tags = docComment.tags().listIterator();
String version = null;
while (tags.hasNext()) {
  TagElement tagElement = (TagElement) tags.next();
  if ("@since".equals(tagElement.getTagName())) { // tag name may be null!
  if (tagElement.fragments().size() &gt; 0) {
    ASTNode fragment = (ASTNode) fragment.next();
    if (fragment.getNodeType() == ASTNode.TEXT_ELEMENT) {
      TextElement text = (TextElement) fragment;
      version = text.getText();
      break;
    }
  }
}
// Here you have version = "JDK1.2" :))

Sorry:
Javadoc docComment = methodDeclaration.getJavadoc();
...
assuming that methodDeclaration is kind of 
org.eclipse.jdt.core.dom.BodyDeclaration</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46127" />
    <CreationDate amount="2003-11-05 15:08:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Annoying IOException in the error log</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341072016">
        <Exception>com.sun.jdi.VMDisconnectedException</Exception>
        <Reason>Got IOException from Virtual Machine</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:79)</Frame>
          <Frame depth="1">org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:169)</Frame>
          <Frame depth="2">org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:191)</Frame>
          <Frame depth="3">org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:206)</Frame>
          <Frame depth="4">org.eclipse.jdi.internal.ThreadReferenceImpl.name(ThreadReferenceImpl.java:270)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.debug.core.model.JDIThread.getName(JDIThread.java:960)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.debug.core.model.JDIThread.queueRunnable(JDIThread.java:685)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersManager$3.run(JavaDetailFormattersManager.java:124)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)</Frame>
          <Frame depth="12">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1611)</Frame>
          <Frame depth="13">org.eclipse.ui.internal.Workbench.run(Workbench.java:1594)</Frame>
          <Frame depth="14">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="15">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="16">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="17">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="18">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="19">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="20">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="21">org.eclipse.core.launcher.Main.run(Main.java:765)</Frame>
          <Frame depth="22">org.eclipse.core.launcher.Main.main(Main.java:599)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Using 1105, when I kill a java process that I was debugging because I missed the
spot I wanted to debug, I get lots of these stack traces into the error log. I
think I should not see them. They should be caught silently.

com.sun.jdi.VMDisconnectedException: Got IOException from Virtual Machine
	at
org.eclipse.jdi.internal.connect.PacketSendManager.sendPacket(PacketSendManager.java:79)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:169)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:191)
	at org.eclipse.jdi.internal.MirrorImpl.requestVM(MirrorImpl.java:206)
	at org.eclipse.jdi.internal.ThreadReferenceImpl.name(ThreadReferenceImpl.java:270)
	at org.eclipse.jdt.internal.debug.core.model.JDIThread.getName(JDIThread.java:960)
	at
org.eclipse.jdt.internal.debug.core.model.JDIThread.queueRunnable(JDIThread.java:685)
	at
org.eclipse.jdt.internal.debug.ui.JavaDetailFormattersManager$3.run(JavaDetailFormattersManager.java:124)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:102)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:2164)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1881)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1611)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1594)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:765)
	at org.eclipse.core.launcher.Main.main(Main.java:599)
Luc, looking at the code, we ensure that we can get a thread name before 
queueing a runnable. Why is this (to ensure that the thread is alive/valid?)

We should not log the error, but we should update the javadoc to indicate that 
a runnable will not be run if the thread terminates.
Removed the call to JDIThread.getName(). It was there only to create a nice name
for the job.
Changes in JDIThread and JDIThread#ThreadJob.
Please verify, Darin W.
Verified.</WithStack>
    <WithOutStack>Using 1105, when I kill a java process that I was debugging because I missed the
spot I wanted to debug, I get lots of these stack traces into the error log. I
think I should not see them. They should be caught silently.


Luc, looking at the code, we ensure that we can get a thread name before 
queueing a runnable. Why is this (to ensure that the thread is alive/valid?)

We should not log the error, but we should update the javadoc to indicate that 
a runnable will not be run if the thread terminates.
Removed the call to JDIThread.getName(). It was there only to create a nice name
for the job.
Changes in JDIThread and JDIThread#ThreadJob.
Please verify, Darin W.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46128" />
    <CreationDate amount="2003-11-05 15:32:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[OLE] Inline MS Word document ignores document modify password.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>1) create a MS Word document outside Eclipse</Line>
          <Line>2) Add a modify password by opening the document and then adding a modify</Line>
          <Line>password as follows: Tools-&gt;Options-&gt;Security and enter a password in</Line>
          <Line>the "Password to modify" field.   Save the document.</Line>
          <Line>3) Import into a simple project in Eclipse.</Line>
          <Line>3) Open document inside Eclipse and MS Word will open inside the edit window.</Line>
          <Line>This is the default behaviour based on file associations.</Line>
          <Line>4) Now make a change and save the document.   Your changes are saved!</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>To reproduce:
1) create a MS Word document outside Eclipse
2) Add a modify password by opening the document and then adding a modify 
password as follows: Tools-&gt;Options-&gt;Security and enter a password in 
the "Password to modify" field.   Save the document.
3) Import into a simple project in Eclipse.
3) Open document inside Eclipse and MS Word will open inside the edit window. 
This is the default behaviour based on file associations.
4) Now make a change and save the document.   Your changes are saved!

You should NOT have been able to save any changes because if you invoke MS 
Word externally it will ask you for a password before letting you open the 
document.  Normally MS Word will open in read-only mode if you don't have a 
password.

While it doesn't quite work right if I use the "Password to open..." option it 
will stop me from opening the file (but it invokes MS Word externally first 
before opening it inline)

PROBLEM: Eclipse has allowed me to save changes to a protected document 
without requiring the password.

I noticed that the save icon in the MS Word toolbar is disabled but I AM ABLE 
to save the document by using Eclipse commands.

This could be a serious problem for anyone (like myself) that stores MS Word 
documents in CVS under Eclipse control.    It allows someone that doesn't have 
the password to submit changes.
Look like an OLE bug to me.

Your bug has been moved to triage, visit http://www.eclipse.org/swt/triage.php for more info.</WithStack>
    <WithOutStack>To reproduce:
1) create a MS Word document outside Eclipse
2) Add a modify password by opening the document and then adding a modify 
password as follows: Tools-&gt;Options-&gt;Security and enter a password in 
the "Password to modify" field.   Save the document.
3) Import into a simple project in Eclipse.
3) Open document inside Eclipse and MS Word will open inside the edit window. 
This is the default behaviour based on file associations.
4) Now make a change and save the document.   Your changes are saved!

You should NOT have been able to save any changes because if you invoke MS 
Word externally it will ask you for a password before letting you open the 
document.  Normally MS Word will open in read-only mode if you don't have a 
password.

While it doesn't quite work right if I use the "Password to open..." option it 
will stop me from opening the file (but it invokes MS Word externally first 
before opening it inline)

PROBLEM: Eclipse has allowed me to save changes to a protected document 
without requiring the password.

I noticed that the save icon in the MS Word toolbar is disabled but I AM ABLE 
to save the document by using Eclipse commands.

This could be a serious problem for anyone (like myself) that stores MS Word 
documents in CVS under Eclipse control.    It allows someone that doesn't have 
the password to submit changes.
Look like an OLE bug to me.

Your bug has been moved to triage, visit http://www.eclipse.org/swt/triage.php for more info.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46129" />
    <CreationDate amount="2003-11-05 15:36:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-debug-cdi" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Launches which abort due to missing configuration items cause NPE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Launching a configuration which is missing a configuration item ie. project or
program causes a NullPointerException leading to a general error instead of a
error stating what is wrong specificly.
Version was wrong cdt 1.2 does not have this problem
Fixed</WithStack>
    <WithOutStack>Launching a configuration which is missing a configuration item ie. project or
program causes a NullPointerException leading to a general error instead of a
error stating what is wrong specificly.
Version was wrong cdt 1.2 does not have this problem
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46130" />
    <CreationDate amount="2003-11-05 15:51:00 -0500" />
    <DupId amount="46116" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Half-busy cursor left showing after update complete</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="10">
        <Lines>
          <Line>- selected org.eclipse.ui.workbench in the Package Explorer</Line>
          <Line>- Synchronize</Line>
          <Line>- it switched to the Sync perspective</Line>
          <Line>- while the operation was still working, I closed the Sync perspective, turned</Line>
          <Line>the perspective switch pref off, and opened the Sync view in the Java</Line>
          <Line>perspective</Line>
          <Line>- reviewed changes coming in from HEAD, selected them all and chose Update</Line>
          <Line>- when done, the sync view was empty, there were no operations running, but</Line>
          <Line>the half-busy cursor was still showing in the sync view.</Line>
          <Line>Not sure if the half-busy cursor got messed up during the sync or the update.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- select project in Package Explorer (e.g. org.eclipse.ui.workbench)</Line>
          <Line>- choose Team &gt; Synchronize with Repository</Line>
          <Line>- it does the work (no changes to show in this case)</Line>
          <Line>- when done, the half-busy cursor is still showing</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>build I20031105

- selected org.eclipse.ui.workbench in the Package Explorer
- Synchronize
- it switched to the Sync perspective
- while the operation was still working, I closed the Sync perspective, turned 
the perspective switch pref off, and opened the Sync view in the Java 
perspective
- reviewed changes coming in from HEAD, selected them all and chose Update
- when done, the sync view was empty, there were no operations running, but 
the half-busy cursor was still showing in the sync view.
Not sure if the half-busy cursor got messed up during the sync or the update.

Closing and reopening the sync view fixes the cursor.

Simpler steps:
- select project in Package Explorer (e.g. org.eclipse.ui.workbench)
- choose Team &gt; Synchronize with Repository
- it does the work (no changes to show in this case)
- when done, the half-busy cursor is still showing


*** This bug has been marked as a duplicate of 46116 ***</WithStack>
    <WithOutStack>build I20031105

- selected org.eclipse.ui.workbench in the Package Explorer
- Synchronize
- it switched to the Sync perspective
- while the operation was still working, I closed the Sync perspective, turned 
the perspective switch pref off, and opened the Sync view in the Java 
perspective
- reviewed changes coming in from HEAD, selected them all and chose Update
- when done, the sync view was empty, there were no operations running, but 
the half-busy cursor was still showing in the sync view.
Not sure if the half-busy cursor got messed up during the sync or the update.

Closing and reopening the sync view fixes the cursor.

Simpler steps:
- select project in Package Explorer (e.g. org.eclipse.ui.workbench)
- choose Team &gt; Synchronize with Repository
- it does the work (no changes to show in this case)
- when done, the half-busy cursor is still showing


*** This bug has been marked as a duplicate of 46116 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46131" />
    <CreationDate amount="2003-11-05 15:58:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux-Motif" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eclipse crashed with a unhandled expection of no more handles</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437341072025">
        <Exception>org.eclipse.swt.SWTError</Exception>
        <Reason>No more handles</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2618)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:2522)</Frame>
          <Frame depth="2">org.eclipse.swt.graphics.Image.init(Image.java:1369)</Frame>
          <Frame depth="3">org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:161)</Frame>
          <Frame depth="4">org.eclipse.swt.custom.StyledText.performPaint(StyledText.java:6080)</Frame>
          <Frame depth="5">org.eclipse.swt.custom.StyledText.handlePaint(StyledText.java:5396)</Frame>
          <Frame depth="6">org.eclipse.swt.custom.StyledText$13.handleEvent(StyledText.java:5095)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:796)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Control.windowProc(Control.java:2989)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)</Frame>
          <Frame depth="14">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="15">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)</Frame>
          <Frame depth="17">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:246)</Frame>
          <Frame depth="20">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:47)</Frame>
          <Frame depth="22">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:226)</Frame>
          <Frame depth="23">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:85)</Frame>
          <Frame depth="24">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="25">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="26">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="27">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="28">org.eclipse.core.launcher.Main.basicRun(Main.java:279)</Frame>
          <Frame depth="29">org.eclipse.core.launcher.Main.run(Main.java:742)</Frame>
          <Frame depth="30">org.eclipse.core.launcher.Main.main(Main.java:581)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072025">
        <Exception>org.eclipse.swt.SWTError</Exception>
        <Reason>No more handles</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:2717)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java(Inlined Compiled Code))</Frame>
          <Frame depth="2">org.eclipse.swt.SWT.error(SWT.java(Inlined Compiled Code))</Frame>
          <Frame depth="3">org.eclipse.swt.graphics.Image.init(Image.java(Compiled Code))</Frame>
          <Frame depth="4">org.eclipse.swt.graphics.Image.init(Image.java(Compiled Code))</Frame>
          <Frame depth="5">org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java(Compiled Code))</Frame>
          <Frame depth="6">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java(CompiledCode))</Frame>
          <Frame depth="7">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java(InlinedCompiled Code))</Frame>
          <Frame depth="8">org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java(InlinedCompiled Code))</Frame>
          <Frame depth="9">handlestest.actions.SampleAction.run(SampleAction.java(Compiled Code))</Frame>
          <Frame depth="10">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:276)</Frame>
          <Frame depth="11">org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:206)</Frame>
          <Frame depth="12">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)</Frame>
          <Frame depth="13">org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:866)</Frame>
          <Frame depth="14">org.eclipse.jface.action.ActionContributionItem$8.handleEvent(ActionContributionItem.java:824)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)</Frame>
          <Frame depth="17">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2732)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2398)</Frame>
          <Frame depth="19">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1375)</Frame>
          <Frame depth="20">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1346)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:252)</Frame>
          <Frame depth="22">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)</Frame>
          <Frame depth="24">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)</Frame>
          <Frame depth="25">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:272)</Frame>
          <Frame depth="26">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)</Frame>
          <Frame depth="27">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="28">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)</Frame>
          <Frame depth="29">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)</Frame>
          <Frame depth="30">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)</Frame>
          <Frame depth="31">java.lang.reflect.Method.invoke(Method.java:391)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.basicRun(Main.java:186)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.run(Main.java:647)</Frame>
          <Frame depth="34">org.eclipse.core.launcher.Main.main(Main.java:631)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072025">
        <Exception>org.eclipse.swt.SWTError</Exception>
        <Reason>No more handles</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.swt.SWT.error(SWT.java:3400)</Frame>
          <Frame depth="1">org.eclipse.swt.SWT.error(SWT.java:3297)</Frame>
          <Frame depth="2">org.eclipse.swt.SWT.error(SWT.java:3268)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Widget.error(Widget.java:435)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Control.createHandle(Control.java:508)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Label.createHandle(Label.java:178)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Control.createWidget(Control.java:523)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Control.&lt;init&gt;(Control.java:98)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Label.&lt;init&gt;(Label.java:91)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.ui.text.java.hover.BrowserInformationControl.&lt;init&gt;(BrowserInformationControl.java:252)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover$2.doCreateInformationControl(JavadocHover.java:102)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.text.java.hover.AbstractReusableInformationControlCreator.createInformationControl(AbstractReusableInformationControlCreator.java:45)</Frame>
          <Frame depth="12">org.eclipse.jface.text.AbstractInformationControlManager.getInformationControl(AbstractInformationControlManager.java:620)</Frame>
          <Frame depth="13">org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:851)</Frame>
          <Frame depth="14">org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:837)</Frame>
          <Frame depth="15">org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:502)</Frame>
          <Frame depth="16">org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:231)</Frame>
          <Frame depth="17">org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:221)</Frame>
          <Frame depth="18">org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3325)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2971)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)</Frame>
          <Frame depth="25">org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)</Frame>
          <Frame depth="27">org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)</Frame>
          <Frame depth="28">org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)</Frame>
          <Frame depth="29">org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)</Frame>
          <Frame depth="30">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)</Frame>
          <Frame depth="31">org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="34">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="35">java.lang.reflect.Method.invoke(Method.java:585)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.basicRun(Main.java:280)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.run(Main.java:977)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.main(Main.java:952)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="3">
      <source_code type="assignment">
        <location start="6817" end="6852" />
        <code>ImageDescriptor imgDescr = null;</code>
      </source_code>
      <source_code type="functiondef">
        <location start="6853" end="6966" />
        <code>for (int k = 0; k &lt; 10000; k++) {
      imgDescr = testIcons();
      Image i = imgDescr.createImage();
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="7082" end="8040" />
        <code>private ImageDescriptor testIcons() {
    ImageDescriptor imgDesc = null;

    // look up the filename for the specified key
    String filename = "sample.gif";

    // look in ImageRegistry
    imgDesc =
HandlestestPlugin.getDefault().getImageRegistry().getDescriptor(filename);

    // if not found - load from file
    if (imgDesc == null) {
      try {
        String full_filename = "icons/" + filename; 
        Bundle bund = HandlestestPlugin.getDefault().getBundle();
        URL url = bund.getEntry(full_filename);
        imgDesc = ImageDescriptor.createFromURL(url);
      }
      catch (Exception e) {
        // in the event of an error, create a 'broken' icon instead
        imgDesc = ImageDescriptor.getMissingImageDescriptor();
      }

      // cache the new image
      HandlestestPlugin.getDefault().getImageRegistry().put(filename, imgDesc);
    }
    
    imageCount++;
    System.out.println(imageCount);
    
    return imgDesc;
  }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I've recently need to move a new Linux installation. I was setting up Eclipse on
Red Hat Linux 7.3 with JDK 1.4.1_02. I tried M4, M3, I200308281813 and finally
200306250800. All version fail at some point with a exception No more handles.
Sometimes this is a rude JVM core dump, sometimes it dialog saying that an error
occurrs and Eclipse must be shut down. 

Typically, I can crash the system by going to Window preferences. This is a new
workspace with no projects or windows open. There is nothing being used at this
moment when it dies. The odd things is that version I200306250800 is working
fine on a Redhat Linux 7.2 box using JDK 1.4.0. I've also tried to use the IBM
JDK to see, if it was a problem with Sun's 1.4.1 JDK.  This also failed! Bug
42986 might be like the Windows XP version of this problem. I add this there,
because I have NO file open. This is clean install that is crashing, so sounded
somewhat different. 

After I post this, I will try to step back to 2.1.1. I really don't want to do
this, because my projects are all in the 3.0 format. I will also attach two JVM
core dumps and a current log file
Created attachment 6665
Eclipse IDE Log
Created attachment 6666
JVM Coredump
Created attachment 6667
JVM Coredump
I have the exact same problem on Linux with 2.1.2.  I notice that Bug 29966 and 
Bug 27369 are similar problems.  I wonder if the fix is transferable?
I suspect the NoMoreHandles error is a red herring.  The call to 
XmFontListInitFontContext is failing, so there's probably a bogus fontList 
being passed as an argument.  I've never seen this call fail before though, so 
tracing back to where this list would have come from could be tricky.  SSQ do 
you have any suggestions here?

This might be happenning because of the LessTif library. Make sure that 
eclipse uses the open motif library included in the zip by adding it to the
LD_LIBRARY_PATH. The open motif library is in the root directory of eclipse 
(libXm.so.x).

LDD is good way to figure out which library is being used. Type something as 
follows in the same place where you would type "eclipse" to start up Eclipse.

ldd &lt;eclipse dir&gt;/plugins/org.eclipse.swt.motif_X.X.X/os/linux/x86/libswt-
motif-XXXX.so
Here is the output that I got form the ldd command. I see that libXm.so.2 in 
this list, so it would seem that the system is finding the Eclipse libraries.

I added the LD_LIBRARY_PATH to my .bash_profile and the results were the same as 
the before. 

Running Eclipse is after changing this still results in a SWT error. 

Here is the output from ldd command 

ldd: warning: you do not have execution permission for 
`plugins/org.eclipse.swt.motif_2.1.0/os/linux/x86/libswt-motif-3010.so'
        /lib/libNoVersion.so.1 =&gt; /lib/libNoVersion.so.1 (0x40045000)
        libXm.so.2 =&gt; ./libXm.so.2 (0x40048000)
        libX11.so.6 =&gt; /usr/X11R6/lib/libX11.so.6 (0x401f9000)
        libm.so.6 =&gt; /lib/libm.so.6 (0x402ce000)
        libXext.so.6 =&gt; /usr/X11R6/lib/libXext.so.6 (0x402ef000)
        libXt.so.6 =&gt; /usr/X11R6/lib/libXt.so.6 (0x402fc000)
        libXp.so.6 =&gt; /usr/X11R6/lib/libXp.so.6 (0x40348000)
        libdl.so.2 =&gt; /lib/libdl.so.2 (0x40350000)
        libc.so.6 =&gt; /lib/libc.so.6 (0x40353000)
        libSM.so.6 =&gt; /usr/X11R6/lib/libSM.so.6 (0x4047a000)
        libICE.so.6 =&gt; /usr/X11R6/lib/libICE.so.6 (0x40482000)
        /lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x80000000)

Created attachment 7271
Sun JAVA Coredump/Error Log
Created attachment 7272
IBM java coredump
I'm seeing this error as well, but on a Win2000 JDK 1.4.2 Eclipse 2.1.1 
configuration.  It happens only when I try to use UML diagrams or EMF 
diagrams.  I don't know much about EMF and won't learn now as it causes this 
error whenever I try to do anything with EMF (model diagrams).
For what it's worth I downloaded Omondo's UML Diagram plugin at
http://www.omondo.com and something it has installed is causing the 
exceptions.  To work around this I simply do not use those features.
I have also experienced this on windows 2000.  It happened when I was running 
the runtime-workbench to test a plugin I was creating.  After this error 
occured, I was unable to restart eclipse without performing a complete reboot 
of my system.

!SESSION Feb 10, 2004 16:29:26.259 ---------------------------------------------
java.version=1.4.2_03
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86
!ENTRY org.eclipse.ui 4 4 Feb 10, 2004 16:29:26.259
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Feb 10, 2004 16:29:26.275
!MESSAGE No more handles
!STACK 0
org.eclipse.swt.SWTError: No more handles
	at org.eclipse.swt.SWT.error(SWT.java:2618)
	at org.eclipse.swt.SWT.error(SWT.java:2522)
	at org.eclipse.swt.graphics.Image.init(Image.java:1369)
	at org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java:161)
	at org.eclipse.swt.custom.StyledText.performPaint(StyledText.java:6080)
	at org.eclipse.swt.custom.StyledText.handlePaint(StyledText.java:5396)
	at org.eclipse.swt.custom.StyledText$13.handleEvent
(StyledText.java:5095)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:847)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:871)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:856)
	at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:796)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:2989)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:2836)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1369)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1990)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1506)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1482)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench
(Workbench.java:246)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:139)
	at org.eclipse.ui.internal.ide.IDEApplication.run
(IDEApplication.java:47)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run
(PlatformActivator.java:226)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run
(EclipseStarter.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:279)
	at org.eclipse.core.launcher.Main.run(Main.java:742)
	at org.eclipse.core.launcher.Main.main(Main.java:581)
I experience the 'org.eclipse.swt.SWTError: No more handles' problem frequently
(after about an hour of use).  I am running W2k (latest patches as of
today),dual xeon,1gb.  

For me, the problem appears to be related to the video card in use.  I started
out using an ATI Radeon (driver: ATI CATALYST 4.1, 01/19/04).  With that card,
i've never had this 'no handles' problem.  Then I installed a XFX GeForce 5600
with the nVidia drivers (driver: 53.03).  That configuration results in the
hourly restart of eclipse due to the SWT 'No more hanldes' crash.  Reinstalling
the ATI card makes the problem go away.  

I have seen this same problem on many versions of eclipse: from M7 back to 2.1.1

I have monitored the GDI handles available to W2K right up to and past the point
of eclipse failure and I have never seen the OS run out of handles. 

See the attached eclipse log for a recent eclipse log (M7). 

Created attachment 8317
Eclipse M7 Log
Not able to reproduce error.  Please retry with Eclipse 3.0 M9 and report.  
Please provide exact steps.

Richard, please open a different bug report for the Win2K problem - it is most 
likely not the same thing.
I have a simple test case that I think repoduces this exact problem in every 3.0
version of eclispe that I have tried so far, including the latest version
available of 3.0.1. In the product I am developing the icons are used to flag
items on a table, so there are hundreds being produced every time the table
is refreshed. It is my understanding that the method used below should allow
me to get the icons as many times as I require without using up resouces.
However this test case shows this is not the case.

If needed I can e-mail people a zip containing the project. Please let me know
if you needs this. I will also try and attached the project to this defect as an
attachment.

I am running Windows XP, in 1280x1024, currently testing on eclipse 3.0.0
build 200406192000.

Test case is as follows:

Create a plugin project. Create a plugin project with the simple "hello world"
template which gives you a tool bar button that runs an action.

Replace the action code with the following:

   ImageDescriptor imgDescr = null;
    for (int k = 0; k &lt; 10000; k++) {
      imgDescr = testIcons();
      Image i = imgDescr.createImage();
    }

The create the method testIcons() as follows, ensuring you have created the
static instance variable imageCount.

  private ImageDescriptor testIcons() {
    ImageDescriptor imgDesc = null;

    // look up the filename for the specified key
    String filename = "sample.gif";

    // look in ImageRegistry
    imgDesc =
HandlestestPlugin.getDefault().getImageRegistry().getDescriptor(filename);

    // if not found - load from file
    if (imgDesc == null) {
      try {
        String full_filename = "icons/" + filename; 
        Bundle bund = HandlestestPlugin.getDefault().getBundle();
        URL url = bund.getEntry(full_filename);
        imgDesc = ImageDescriptor.createFromURL(url);
      }
      catch (Exception e) {
        // in the event of an error, create a 'broken' icon instead
        imgDesc = ImageDescriptor.getMissingImageDescriptor();
      }

      // cache the new image
      HandlestestPlugin.getDefault().getImageRegistry().put(filename, imgDesc);
    }
    
    imageCount++;
    System.out.println(imageCount);
    
    return imgDesc;
  }

Running this test case I can produce 4894 icons every time before eclipse dies
with the no more handles error:

eclipse.buildId=unknown
java.fullversion=J2RE 1.4.2 IBM Windows 32 build cn1420-20040616 (JIT enabled: jitc)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -application org.eclipse.ui.ide.workbench

!ENTRY org.eclipse.ui 4 4 Sep 01, 2004 13:22:40.600
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 Sep 01, 2004 13:22:40.600
!MESSAGE No more handles
!STACK 0
org.eclipse.swt.SWTError: No more handles
	at org.eclipse.swt.SWT.error(SWT.java:2717)
	at org.eclipse.swt.SWT.error(SWT.java(Inlined Compiled Code))
	at org.eclipse.swt.SWT.error(SWT.java(Inlined Compiled Code))
	at org.eclipse.swt.graphics.Image.init(Image.java(Compiled Code))
	at org.eclipse.swt.graphics.Image.init(Image.java(Compiled Code))
	at org.eclipse.swt.graphics.Image.&lt;init&gt;(Image.java(Compiled Code))
	at
org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java(Compiled
Code))
	at
org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java(Inlined
Compiled Code))
	at
org.eclipse.jface.resource.ImageDescriptor.createImage(ImageDescriptor.java(Inlined
Compiled Code))
	at handlestest.actions.SampleAction.run(SampleAction.java(Compiled Code))
	at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:276)
	at org.eclipse.ui.internal.WWinPluginAction.runWithEvent(WWinPluginAction.java:206)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:915)
	at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:866)
	at
org.eclipse.jface.action.ActionContributionItem$8.handleEvent(ActionContributionItem.java:824)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2732)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2398)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1375)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1346)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:252)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:272)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:186)
	at org.eclipse.core.launcher.Main.run(Main.java:647)
	at org.eclipse.core.launcher.Main.main(Main.java:631)
Stephen, in your case you're running out of handles for real because you're 
creating so many images without disposing any.  If you add "i.dispose();" to 
the bottom of the run() method then your example reaches 10000 images without 
problem.  This is not related to this report's problem.

The code base has changed significantly since this bug was reported.  If it is still happening for you, please reopen this bug report.
I get this error in Windows XP ([Version 5.1.2600]) and Eclipse Version: 3.2.1 Build id: M20060921-0945.  (Can't re-open issue.. don't have priv)

org.eclipse.swt.SWTError: No more handles
	at org.eclipse.swt.SWT.error(SWT.java:3400)
	at org.eclipse.swt.SWT.error(SWT.java:3297)
	at org.eclipse.swt.SWT.error(SWT.java:3268)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:435)
	at org.eclipse.swt.widgets.Control.createHandle(Control.java:508)
	at org.eclipse.swt.widgets.Label.createHandle(Label.java:178)
	at org.eclipse.swt.widgets.Control.createWidget(Control.java:523)
	at org.eclipse.swt.widgets.Control.&lt;init&gt;(Control.java:98)
	at org.eclipse.swt.widgets.Label.&lt;init&gt;(Label.java:91)
	at org.eclipse.jdt.internal.ui.text.java.hover.BrowserInformationControl.&lt;init&gt;(BrowserInformationControl.java:252)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover$2.doCreateInformationControl(JavadocHover.java:102)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractReusableInformationControlCreator.createInformationControl(AbstractReusableInformationControlCreator.java:45)
	at org.eclipse.jface.text.AbstractInformationControlManager.getInformationControl(AbstractInformationControlManager.java:620)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:851)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:837)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:502)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:231)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:221)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:123)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3325)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2971)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:280)
	at org.eclipse.core.launcher.Main.run(Main.java:977)
	at org.eclipse.core.launcher.Main.main(Main.java:952)</WithStack>
    <WithOutStack>I've recently need to move a new Linux installation. I was setting up Eclipse on
Red Hat Linux 7.3 with JDK 1.4.1_02. I tried M4, M3, I200308281813 and finally
200306250800. All version fail at some point with a exception No more handles.
Sometimes this is a rude JVM core dump, sometimes it dialog saying that an error
occurrs and Eclipse must be shut down. 

Typically, I can crash the system by going to Window preferences. This is a new
workspace with no projects or windows open. There is nothing being used at this
moment when it dies. The odd things is that version I200306250800 is working
fine on a Redhat Linux 7.2 box using JDK 1.4.0. I've also tried to use the IBM
JDK to see, if it was a problem with Sun's 1.4.1 JDK.  This also failed! Bug
42986 might be like the Windows XP version of this problem. I add this there,
because I have NO file open. This is clean install that is crashing, so sounded
somewhat different. 

After I post this, I will try to step back to 2.1.1. I really don't want to do
this, because my projects are all in the 3.0 format. I will also attach two JVM
core dumps and a current log file
Created attachment 6665
Eclipse IDE Log
Created attachment 6666
JVM Coredump
Created attachment 6667
JVM Coredump
I have the exact same problem on Linux with 2.1.2.  I notice that Bug 29966 and 
Bug 27369 are similar problems.  I wonder if the fix is transferable?
I suspect the NoMoreHandles error is a red herring.  The call to 
XmFontListInitFontContext is failing, so there's probably a bogus fontList 
being passed as an argument.  I've never seen this call fail before though, so 
tracing back to where this list would have come from could be tricky.  SSQ do 
you have any suggestions here?

This might be happenning because of the LessTif library. Make sure that 
eclipse uses the open motif library included in the zip by adding it to the
LD_LIBRARY_PATH. The open motif library is in the root directory of eclipse 
(libXm.so.x).

LDD is good way to figure out which library is being used. Type something as 
follows in the same place where you would type "eclipse" to start up Eclipse.

ldd &lt;eclipse dir&gt;/plugins/org.eclipse.swt.motif_X.X.X/os/linux/x86/libswt-
motif-XXXX.so
Here is the output that I got form the ldd command. I see that libXm.so.2 in 
this list, so it would seem that the system is finding the Eclipse libraries.

I added the LD_LIBRARY_PATH to my .bash_profile and the results were the same as 
the before. 

Running Eclipse is after changing this still results in a SWT error. 

Here is the output from ldd command 

ldd: warning: you do not have execution permission for 
`plugins/org.eclipse.swt.motif_2.1.0/os/linux/x86/libswt-motif-3010.so'
        /lib/libNoVersion.so.1 =&gt; /lib/libNoVersion.so.1 (0x40045000)
        libXm.so.2 =&gt; ./libXm.so.2 (0x40048000)
        libX11.so.6 =&gt; /usr/X11R6/lib/libX11.so.6 (0x401f9000)
        libm.so.6 =&gt; /lib/libm.so.6 (0x402ce000)
        libXext.so.6 =&gt; /usr/X11R6/lib/libXext.so.6 (0x402ef000)
        libXt.so.6 =&gt; /usr/X11R6/lib/libXt.so.6 (0x402fc000)
        libXp.so.6 =&gt; /usr/X11R6/lib/libXp.so.6 (0x40348000)
        libdl.so.2 =&gt; /lib/libdl.so.2 (0x40350000)
        libc.so.6 =&gt; /lib/libc.so.6 (0x40353000)
        libSM.so.6 =&gt; /usr/X11R6/lib/libSM.so.6 (0x4047a000)
        libICE.so.6 =&gt; /usr/X11R6/lib/libICE.so.6 (0x40482000)
        /lib/ld-linux.so.2 =&gt; /lib/ld-linux.so.2 (0x80000000)

Created attachment 7271
Sun JAVA Coredump/Error Log
Created attachment 7272
IBM java coredump
I'm seeing this error as well, but on a Win2000 JDK 1.4.2 Eclipse 2.1.1 
configuration.  It happens only when I try to use UML diagrams or EMF 
diagrams.  I don't know much about EMF and won't learn now as it causes this 
error whenever I try to do anything with EMF (model diagrams).
For what it's worth I downloaded Omondo's UML Diagram plugin at
http://www.omondo.com and something it has installed is causing the 
exceptions.  To work around this I simply do not use those features.
I have also experienced this on windows 2000.  It happened when I was running 
the runtime-workbench to test a plugin I was creating.  After this error 
occured, I was unable to restart eclipse without performing a complete reboot 
of my system.

!SESSION Feb 10, 2004 16:29:26.259 ---------------------------------------------
java.version=1.4.2_03
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86
!ENTRY org.eclipse.ui 4 4 Feb 10, 2004 16:29:26.259
!MESSAGE Unhandled event loop exception
!ENTRY org.eclipse.ui 4 0 Feb 10, 2004 16:29:26.275
!MESSAGE No more handles
!STACK 0
I experience the 'org.eclipse.swt.SWTError: No more handles' problem frequently
(after about an hour of use).  I am running W2k (latest patches as of
today),dual xeon,1gb.  

For me, the problem appears to be related to the video card in use.  I started
out using an ATI Radeon (driver: ATI CATALYST 4.1, 01/19/04).  With that card,
i've never had this 'no handles' problem.  Then I installed a XFX GeForce 5600
with the nVidia drivers (driver: 53.03).  That configuration results in the
hourly restart of eclipse due to the SWT 'No more hanldes' crash.  Reinstalling
the ATI card makes the problem go away.  

I have seen this same problem on many versions of eclipse: from M7 back to 2.1.1

I have monitored the GDI handles available to W2K right up to and past the point
of eclipse failure and I have never seen the OS run out of handles. 

See the attached eclipse log for a recent eclipse log (M7). 

Created attachment 8317
Eclipse M7 Log
Not able to reproduce error.  Please retry with Eclipse 3.0 M9 and report.  
Please provide exact steps.

Richard, please open a different bug report for the Win2K problem - it is most 
likely not the same thing.
I have a simple test case that I think repoduces this exact problem in every 3.0
version of eclispe that I have tried so far, including the latest version
available of 3.0.1. In the product I am developing the icons are used to flag
items on a table, so there are hundreds being produced every time the table
is refreshed. It is my understanding that the method used below should allow
me to get the icons as many times as I require without using up resouces.
However this test case shows this is not the case.

If needed I can e-mail people a zip containing the project. Please let me know
if you needs this. I will also try and attached the project to this defect as an
attachment.

I am running Windows XP, in 1280x1024, currently testing on eclipse 3.0.0
build 200406192000.

Test case is as follows:

Create a plugin project. Create a plugin project with the simple "hello world"
template which gives you a tool bar button that runs an action.

Replace the action code with the following:

   ImageDescriptor imgDescr = null;
    for (int k = 0; k &lt; 10000; k++) {
      imgDescr = testIcons();
      Image i = imgDescr.createImage();
    }

The create the method testIcons() as follows, ensuring you have created the
static instance variable imageCount.

  private ImageDescriptor testIcons() {
    ImageDescriptor imgDesc = null;

    // look up the filename for the specified key
    String filename = "sample.gif";

    // look in ImageRegistry
    imgDesc =
HandlestestPlugin.getDefault().getImageRegistry().getDescriptor(filename);

    // if not found - load from file
    if (imgDesc == null) {
      try {
        String full_filename = "icons/" + filename; 
        Bundle bund = HandlestestPlugin.getDefault().getBundle();
        URL url = bund.getEntry(full_filename);
        imgDesc = ImageDescriptor.createFromURL(url);
      }
      catch (Exception e) {
        // in the event of an error, create a 'broken' icon instead
        imgDesc = ImageDescriptor.getMissingImageDescriptor();
      }

      // cache the new image
      HandlestestPlugin.getDefault().getImageRegistry().put(filename, imgDesc);
    }
    
    imageCount++;
    System.out.println(imageCount);
    
    return imgDesc;
  }

Running this test case I can produce 4894 icons every time before eclipse dies
with the no more handles error:

eclipse.buildId=unknown
java.fullversion=J2RE 1.4.2 IBM Windows 32 build cn1420-20040616 (JIT enabled: jitc)
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -application org.eclipse.ui.ide.workbench

!ENTRY org.eclipse.ui 4 4 Sep 01, 2004 13:22:40.600
!MESSAGE Unhandled event loop exception

!ENTRY org.eclipse.ui 4 0 Sep 01, 2004 13:22:40.600
!MESSAGE No more handles
!STACK 0
Stephen, in your case you're running out of handles for real because you're 
creating so many images without disposing any.  If you add "i.dispose();" to 
the bottom of the run() method then your example reaches 10000 images without 
problem.  This is not related to this report's problem.

The code base has changed significantly since this bug was reported.  If it is still happening for you, please reopen this bug report.
I get this error in Windows XP ([Version 5.1.2600]) and Eclipse Version: 3.2.1 Build id: M20060921-0945.  (Can't re-open issue.. don't have priv)</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46132" />
    <CreationDate amount="2003-11-05 16:04:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Jobs] Clear (System) error shown after tagging</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- select a project in package explorer (e.g. org.eclipse.ui)</Line>
          <Line>- tag as version</Line>
          <Line>- after the tagging is done, the Progress view shows an error item with text:</Line>
          <Line>Clear (System)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>build I20031105

- select a project in package explorer (e.g. org.eclipse.ui)
- tag as version
- after the tagging is done, the Progress view shows an error item with text: 
Clear (System)

- Show Error shows: Error, reason: Error
Interestingly, even though there is a new error, the progress indicator 
doesn't get the red box.

I have Verbose on.

We don't have a job named clear. There are many other UI jobs that run and 
this probably is a stale job related to the progress view.
Nick did you have a log file? The clear job is the one that occurs when 
progress is finished.
There was nothing in the log.  I'll let you know if I see it again.

It has been 4 months since we saw this so I will close it.</WithStack>
    <WithOutStack>build I20031105

- select a project in package explorer (e.g. org.eclipse.ui)
- tag as version
- after the tagging is done, the Progress view shows an error item with text: 
Clear (System)

- Show Error shows: Error, reason: Error
Interestingly, even though there is a new error, the progress indicator 
doesn't get the red box.

I have Verbose on.

We don't have a job named clear. There are many other UI jobs that run and 
this probably is a stale job related to the progress view.
Nick did you have a log file? The clear job is the one that occurs when 
progress is finished.
There was nothing in the log.  I'll let you know if I see it again.

It has been 4 months since we saw this so I will close it.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46133" />
    <CreationDate amount="2003-11-05 16:07:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Class not found on the JavaBean Launcher</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>JavaBean Launcher does not work
Created attachment 6668
Screen Scrape
Joe, I'll take it off your hands. 
Opps, when I moved over from WSAD I didn't convert ids correctly within the
plugin.xml. Unfortunately there is no compiler tie-in which can automatically
detect this. I actually had a few others that were wrong too that I found.
0.5.0 is out, so these are now closed.</WithStack>
    <WithOutStack>JavaBean Launcher does not work
Created attachment 6668
Screen Scrape
Joe, I'll take it off your hands. 
Opps, when I moved over from WSAD I didn't convert ids correctly within the
plugin.xml. Unfortunately there is no compiler tie-in which can automatically
detect this. I actually had a few others that were wrong too that I found.
0.5.0 is out, so these are now closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46134" />
    <CreationDate amount="2003-11-05 16:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Migration of CVS repository location problem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="ifstatement">
        <location start="2351" end="2366" />
        <code>if (version1) {</code>
      </source_code>
      <source_code type="assignment">
        <location start="2376" end="2404" />
        <code>projSize = dis.readInt();</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="2405" end="2919" />
        <code>if (projSize &gt; 0) {
	for (int j = 0; j &lt; projSize; j++) {
	   String name = dis.readUTF();
	   Set filenames = new HashSet();
	   int numFilenames = dis.readInt();
	   for (int k = 0; k &lt; numFilenames; k++) {
	      /* Original code
	       * filenames.add(dis.readUTF());
	       */
		//Sandyg adding the Project name to the files and the "/"
		filenames.add(name+"/"+dis.readUTF());
	  }
	  repoRoot.setAutoRefreshFiles(name, 
		(String[]) filenames.toArray(new String[filenames.size()]));
        }
     }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="19">
        <Lines>
          <Line>1. In a workspace within 2.0.2 Create a repository location and examine a</Line>
          <Line>project that has some tags and a .project file in the repository.</Line>
          <Line>2. Expand the Versions itemp and then the project with the tags and notice that</Line>
          <Line>they are visible.</Line>
          <Line>3. Right click on the project under the Versions item and select Configure</Line>
          <Line>Branches and Tags...</Line>
          <Line>4. Notice under List of files to be automatically examined when refreshing tags</Line>
          <Line>that the .project and .vcm_meta files do not have the project name in front of</Line>
          <Line>them.</Line>
          <Line>5. Close eclipse 2.0.2</Line>
          <Line>6. Run eclipse 2.1.1 using the -data argument to point to the location of the</Line>
          <Line>2.0.2 workspace</Line>
          <Line>7. Expand the Versions item and project and notice that you will not be able to</Line>
          <Line>see the tags.</Line>
          <Line>8. Right click on Configure Branches and Versions... you will see that</Line>
          <Line>the .project and .vcm_meta files still do not have the project name in front of</Line>
          <Line>them as a path. In 2.1.1 all the files normally have projectname/.project and</Line>
          <Line>when they do you will be able to see the tags.</Line>
          <Line>The issue seems to be the migration of the</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>When you migrate a workspace with a CVS repository location from 2.0.2 to 2.1.1 
you will not be able to automatically see the tags on your projects. In the 
Configure Branches and Versions for (project) dialog the files under List of 
files to be automatically examined when refreshing tags will not have the 
project path in front of the file names in 2.1.1 which seems to be required. In 
2.0.2 the files did not have the project path in front of the files and it was 
not required. The workaround to this problem is to delete and recreate the 
repository location or to manually remove all the files listed and reconfigure 
them.

Steps to reproduce:

1. In a workspace within 2.0.2 Create a repository location and examine a 
project that has some tags and a .project file in the repository.
2. Expand the Versions itemp and then the project with the tags and notice that 
they are visible.
3. Right click on the project under the Versions item and select Configure 
Branches and Tags...
4. Notice under List of files to be automatically examined when refreshing tags 
that the .project and .vcm_meta files do not have the project name in front of 
them.
5. Close eclipse 2.0.2
6. Run eclipse 2.1.1 using the -data argument to point to the location of the 
2.0.2 workspace
7. Expand the Versions item and project and notice that you will not be able to 
see the tags.
8. Right click on Configure Branches and Versions... you will see that 
the .project and .vcm_meta files still do not have the project name in front of 
them as a path. In 2.1.1 all the files normally have projectname/.project and 
when they do you will be able to see the tags.
The issue seems to be the migration of the 

Workspace\.metadata\.plugins\org.eclipse.team.cvs.ui\.repositoryManagerState 
file to a repositoriesView.xml file.

This migration is done when a Eclipse 2.0.x workspace is migrated to Eclipse
2.1.1

The culprit seems to be the 
org.eclipse.team.internal.ccvs.ui.repo.RepositoryManager class in the
org.eclipse.team.cvs.ui plugin.

On line 489 it reads the auto refresh filenames for this project but does
not append the "projectname"+"/" as expected by Eclipse 2.1.1



The proposed change to the code to correct the issue is as follows:

filenames.add(name+"/"+dis.readUTF());  //Line 489


Line 479:// read the auto refresh filenames for this project
if (version1) {
   try {
   projSize = dis.readInt();
      if (projSize &gt; 0) {
	for (int j = 0; j &lt; projSize; j++) {
	   String name = dis.readUTF();
	   Set filenames = new HashSet();
	   int numFilenames = dis.readInt();
	   for (int k = 0; k &lt; numFilenames; k++) {
	      /* Original code
	       * filenames.add(dis.readUTF());
	       */
		//Sandyg adding the Project name to the files and the "/"
		filenames.add(name+"/"+dis.readUTF());
	  }
	  repoRoot.setAutoRefreshFiles(name, 
		(String[]) filenames.toArray(new String[filenames.size()]));
        }
     }


The issue seems to be the same when migrating an Eclipse 2.0.x workspace to 
Eclipse 3.0
Post 3.0
At this point, we expect most people to be upgrading from R2.1.x to R3.0. Michael 
Valenta to verify that this works properly.
I have verified that 2.1.x to 3.0 migration preserves the tags in the 
repositories view.
Actually, upon further reflection, the proposed change appears to be very low 
risk and is isolated to 2.0.x to 3.0 migration so I will put it into 3.0.1.
Fixed released to 3.0.1 and 3.1
Verified in M200408180800. The auto-refresh files are properly preserved</WithStack>
    <WithOutStack>When you migrate a workspace with a CVS repository location from 2.0.2 to 2.1.1 
you will not be able to automatically see the tags on your projects. In the 
Configure Branches and Versions for (project) dialog the files under List of 
files to be automatically examined when refreshing tags will not have the 
project path in front of the file names in 2.1.1 which seems to be required. In 
2.0.2 the files did not have the project path in front of the files and it was 
not required. The workaround to this problem is to delete and recreate the 
repository location or to manually remove all the files listed and reconfigure 
them.

Steps to reproduce:

1. In a workspace within 2.0.2 Create a repository location and examine a 
project that has some tags and a .project file in the repository.
2. Expand the Versions itemp and then the project with the tags and notice that 
they are visible.
3. Right click on the project under the Versions item and select Configure 
Branches and Tags...
4. Notice under List of files to be automatically examined when refreshing tags 
that the .project and .vcm_meta files do not have the project name in front of 
them.
5. Close eclipse 2.0.2
6. Run eclipse 2.1.1 using the -data argument to point to the location of the 
2.0.2 workspace
7. Expand the Versions item and project and notice that you will not be able to 
see the tags.
8. Right click on Configure Branches and Versions... you will see that 
the .project and .vcm_meta files still do not have the project name in front of 
them as a path. In 2.1.1 all the files normally have projectname/.project and 
when they do you will be able to see the tags.
The issue seems to be the migration of the 

Workspace\.metadata\.plugins\org.eclipse.team.cvs.ui\.repositoryManagerState 
file to a repositoriesView.xml file.

This migration is done when a Eclipse 2.0.x workspace is migrated to Eclipse
2.1.1

The culprit seems to be the 
org.eclipse.team.internal.ccvs.ui.repo.RepositoryManager class in the
org.eclipse.team.cvs.ui plugin.

On line 489 it reads the auto refresh filenames for this project but does
not append the "projectname"+"/" as expected by Eclipse 2.1.1



The proposed change to the code to correct the issue is as follows:

filenames.add(name+"/"+dis.readUTF());  //Line 489


Line 479:// read the auto refresh filenames for this project
if (version1) {
   try {
   projSize = dis.readInt();
      if (projSize &gt; 0) {
	for (int j = 0; j &lt; projSize; j++) {
	   String name = dis.readUTF();
	   Set filenames = new HashSet();
	   int numFilenames = dis.readInt();
	   for (int k = 0; k &lt; numFilenames; k++) {
	      /* Original code
	       * filenames.add(dis.readUTF());
	       */
		//Sandyg adding the Project name to the files and the "/"
		filenames.add(name+"/"+dis.readUTF());
	  }
	  repoRoot.setAutoRefreshFiles(name, 
		(String[]) filenames.toArray(new String[filenames.size()]));
        }
     }


The issue seems to be the same when migrating an Eclipse 2.0.x workspace to 
Eclipse 3.0
Post 3.0
At this point, we expect most people to be upgrading from R2.1.x to R3.0. Michael 
Valenta to verify that this works properly.
I have verified that 2.1.x to 3.0 migration preserves the tags in the 
repositories view.
Actually, upon further reflection, the proposed change appears to be very low 
risk and is isolated to 2.0.x to 3.0 migration so I will put it into 3.0.1.
Fixed released to 3.0.1 and 3.1
Verified in M200408180800. The auto-refresh files are properly preserved</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46135" />
    <CreationDate amount="2003-11-05 16:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Compare shows project name only in task field</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- select a project</Line>
          <Line>- Compare With &gt; Another Branch or Version</Line>
          <Line>- choose another version</Line>
          <Line>- the progress dialog shows: Synchronizing with Remote...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>build I20031105

- select a project
- Compare With &gt; Another Branch or Version
- choose another version
- the progress dialog shows: Synchronizing with Remote...

"Synchronizing" suggests that I'm doing a sync, but I'm not.
Tried this out and the message is improved but is still strange. The dialog 
title is "CVS Compare (...)" and the task name is the project being compared 
(on a multi project compare. It looks strange just having the projetc name 
there.
The task name is comming from an API class. We can't add API to have a 
specific message so I propose using "Processing projectName".
Fixed</WithStack>
    <WithOutStack>build I20031105

- select a project
- Compare With &gt; Another Branch or Version
- choose another version
- the progress dialog shows: Synchronizing with Remote...

"Synchronizing" suggests that I'm doing a sync, but I'm not.
Tried this out and the message is improved but is still strange. The dialog 
title is "CVS Compare (...)" and the task name is the project being compared 
(on a multi project compare. It looks strange just having the projetc name 
there.
The task name is comming from an API class. We can't add API to have a 
specific message so I propose using "Processing projectName".
Fixed</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46136" />
    <CreationDate amount="2003-11-05 16:18:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Can't luanch Runtime Instance with any plugins</Summery>
    <Patches amount="0" />
    <Stacktraces amount="4">
      <Stacktrace timestamp="1437341072039">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>:</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:56)</Frame>
          <Frame depth="1">org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:41)</Frame>
          <Frame depth="2">org.eclipse.core.runtime.Path.removeFirstSegments(Path.java:689)</Frame>
          <Frame depth="3">org.eclipse.pde.internal.core.TargetPlatform$LocalSite.getRelativePluginList(TargetPlatform.java:66)</Frame>
          <Frame depth="4">org.eclipse.pde.internal.core.TargetPlatform.createConfigurationEntries(TargetPlatform.java:292)</Frame>
          <Frame depth="5">org.eclipse.pde.internal.core.TargetPlatform.savePlatformConfiguration(TargetPlatform.java:233)</Frame>
          <Frame depth="6">org.eclipse.pde.internal.core.TargetPlatform.createPlatformConfiguration(TargetPlatform.java:181)</Frame>
          <Frame depth="7">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:220)</Frame>
          <Frame depth="8">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="9">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="10">org.eclipse.pde.internal.ui.launcher.RuntimeWorkbenchShortcut.launch(RuntimeWorkbenchShortcut.java:58)</Frame>
          <Frame depth="11">org.eclipse.pde.internal.ui.launcher.RuntimeWorkbenchShortcut.launch(RuntimeWorkbenchShortcut.java:47)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.launch(LaunchShortcutExtension.java:198)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.actions.LaunchShortcutAction.run(LaunchShortcutAction.java:56)</Frame>
          <Frame depth="14">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="15">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="16">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="17">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="18">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="19">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="20">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="21">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)</Frame>
          <Frame depth="22">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)</Frame>
          <Frame depth="23">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="24">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="25">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="26">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="27">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="28">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="29">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="30">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="31">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="32">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="33">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072039">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.validatePlugins(AdvancedLauncherTab.java:597)</Frame>
          <Frame depth="1">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.updateStatus(AdvancedLauncherTab.java:566)</Frame>
          <Frame depth="2">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.useDefaultChanged(AdvancedLauncherTab.java:238)</Frame>
          <Frame depth="3">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.access$7(AdvancedLauncherTab.java:234)</Frame>
          <Frame depth="4">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab$1.widgetSelected(AdvancedLauncherTab.java:208)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)</Frame>
          <Frame depth="10">org.eclipse.jface.window.Window.runEventLoop(Window.java:583)</Frame>
          <Frame depth="11">org.eclipse.jface.window.Window.open(Window.java:563)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.openDialogOnSelection(LaunchConfigurationsDialog.java:504)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:458)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools$1.run(DebugUITools.java:369)</Frame>
          <Frame depth="15">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="16">org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:373)</Frame>
          <Frame depth="17">org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:315)</Frame>
          <Frame depth="18">org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:70)</Frame>
          <Frame depth="19">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="20">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="21">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="22">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="23">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="30">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="31">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="34">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="35">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072039">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.validatePlugins(AdvancedLauncherTab.java:597)</Frame>
          <Frame depth="1">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.updateStatus(AdvancedLauncherTab.java:566)</Frame>
          <Frame depth="2">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.useDefaultChanged(AdvancedLauncherTab.java:238)</Frame>
          <Frame depth="3">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.access$7(AdvancedLauncherTab.java:234)</Frame>
          <Frame depth="4">org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab$1.widgetSelected(AdvancedLauncherTab.java:208)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)</Frame>
          <Frame depth="10">org.eclipse.jface.window.Window.runEventLoop(Window.java:583)</Frame>
          <Frame depth="11">org.eclipse.jface.window.Window.open(Window.java:563)</Frame>
          <Frame depth="12">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.openDialogOnSelection(LaunchConfigurationsDialog.java:504)</Frame>
          <Frame depth="13">org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialog.open(LaunchConfigurationsDialog.java:458)</Frame>
          <Frame depth="14">org.eclipse.debug.ui.DebugUITools$1.run(DebugUITools.java:369)</Frame>
          <Frame depth="15">org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Frame>
          <Frame depth="16">org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:373)</Frame>
          <Frame depth="17">org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(DebugUITools.java:315)</Frame>
          <Frame depth="18">org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogAction.java:70)</Frame>
          <Frame depth="19">org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Frame>
          <Frame depth="20">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:456)</Frame>
          <Frame depth="21">org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionContributionItem.java:403)</Frame>
          <Frame depth="22">org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionItem.java:397)</Frame>
          <Frame depth="23">org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(ActionContributionItem.java:72)</Frame>
          <Frame depth="24">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)</Frame>
          <Frame depth="28">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Frame>
          <Frame depth="30">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="31">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="32">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="34">sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Frame>
          <Frame depth="35">java.lang.reflect.Method.invoke(Unknown Source)</Frame>
          <Frame depth="36">org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.run(Main.java:747)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.main(Main.java:583)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072039">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason>:</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:56)</Frame>
          <Frame depth="1">org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:41)</Frame>
          <Frame depth="2">org.eclipse.core.runtime.Path.removeFirstSegments(Path.java:689)</Frame>
          <Frame depth="3">org.eclipse.pde.internal.core.TargetPlatform$LocalSite.getRelativePluginList(TargetPlatform.java:67)</Frame>
          <Frame depth="4">org.eclipse.pde.internal.core.TargetPlatform.createConfigurationEntries(TargetPlatform.java:293)</Frame>
          <Frame depth="5">org.eclipse.pde.internal.core.TargetPlatform.savePlatformConfiguration(TargetPlatform.java:234)</Frame>
          <Frame depth="6">org.eclipse.pde.internal.core.TargetPlatform.createPlatformConfiguration(TargetPlatform.java:182)</Frame>
          <Frame depth="7">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:220)</Frame>
          <Frame depth="8">org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)</Frame>
          <Frame depth="9">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="10">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)</Frame>
          <Frame depth="11">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)</Frame>
          <Frame depth="12">org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)</Frame>
          <Frame depth="13">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="5246" end="5853" />
        <code>public String[] getRelativePluginList() {
			String[] list = new String[plugins.size()];
			for (int i = 0; i &lt; plugins.size(); i++) {
				IPluginModelBase model = (IPluginModelBase) plugins.get(i);
				IPath location = getPluginLocation(model);
				location =
					location.append(
						model.isFragmentModel()
							? "fragment.xml" //$NON-NLS-1$
							: "plugin.xml"); //$NON-NLS-1$
				
				IPath relative =
					location.removeFirstSegments(location.segmentCount() - 3);
				//31489 - entry must be relative
				list[i] = relative.setDevice(null).makeRelative().toString();
			}
			return list;
		}</code>
      </source_code>
      <source_code type="functioncall">
        <location start="5855" end="5930" />
        <code>notice this line location.removeFirstSegments(location.segmentCount() - 3);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="46">
        <Lines>
          <Line>g.openDialogOnSelection(LaunchConfigurationsDialog.java:504)</Line>
          <Line>at</Line>
          <Line>org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialo</Line>
          <Line>g.open(LaunchConfigurationsDialog.java:458)</Line>
          <Line>at org.eclipse.debug.ui.DebugUITools$1.run(DebugUITools.java:369)</Line>
          <Line>at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)</Line>
          <Line>at</Line>
          <Line>org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(Debug</Line>
          <Line>UITools.java:373)</Line>
          <Line>at</Line>
          <Line>org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(Debug</Line>
          <Line>UITools.java:315)</Line>
          <Line>at</Line>
          <Line>org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogActi</Line>
          <Line>on.java:70)</Line>
          <Line>at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Action</Line>
          <Line>ContributionItem.java:456)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionCont</Line>
          <Line>ributionItem.java:403)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionI</Line>
          <Line>tem.java:397)</Line>
          <Line>at</Line>
          <Line>org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(A</Line>
          <Line>ctionContributionItem.java:72)</Line>
          <Line>at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)</Line>
          <Line>at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)</Line>
          <Line>at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)</Line>
          <Line>at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)</Line>
          <Line>at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)</Line>
          <Line>at</Line>
          <Line>org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.jav</Line>
          <Line>a:858)</Line>
          <Line>at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Line>
          <Line>at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</Line>
          <Line>at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</Line>
          <Line>at java.lang.reflect.Method.invoke(Unknown Source)</Line>
          <Line>at org.eclipse.core.launcher.Main.basicRun(Main.java:291)</Line>
          <Line>at org.eclipse.core.launcher.Main.run(Main.java:747)</Line>
          <Line>at org.eclipse.core.launcher.Main.main(Main.java:583)</Line>
          <Line>This bug is a PDE Newbie Killer for sure It almost killed me.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>1) Fresh Install of Eclipse SDK 2.1.2</Line>
          <Line>2) Create a Hello World Plugin using the Project Wizard</Line>
          <Line>3) In Preferences configure the PDE development environment to point to an</Line>
          <Line>external app which has a copy of the eclipse runtime 2.1.2</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Here is the situation I can consistently reproduce this bug on my machine.

1) Fresh Install of Eclipse SDK 2.1.2
2) Create a Hello World Plugin using the Project Wizard
3) In Preferences configure the PDE development environment to point to an
external app which has a copy of the eclipse runtime 2.1.2

Whenever I try to launch the hello world plug I end with a dialog box that
has nothing in it and when I check the log file I end up with the an
IllegalArgumentException thrown by the PDE I have attached the .log file

I have no idea what is causing this problem or why it is there? I can launch
a runtime instance of eclipse just fine if I configure the PDE development
environment to launch based on the development instance of eclipse.
------
!SESSION Nov 05, 2003
15:48:06.931 ---------------------------------------------
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -data
s:\ --vmargs -Xmx200m -Xms350m -install file:C:/eclipse/
!ENTRY org.eclipse.pde.core 4 4 Nov 05, 2003 15:48:06.931
!MESSAGE
!STACK 0
java.lang.IllegalArgumentException:
 at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:56)
 at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:41)
 at org.eclipse.core.runtime.Path.removeFirstSegments(Path.java:689)
 at
org.eclipse.pde.internal.core.TargetPlatform$LocalSite.getRelativePluginList
(TargetPlatform.java:66)
 at
org.eclipse.pde.internal.core.TargetPlatform.createConfigurationEntries(Targ
etPlatform.java:292)
 at
org.eclipse.pde.internal.core.TargetPlatform.savePlatformConfiguration(Targe
tPlatform.java:233)
 at
org.eclipse.pde.internal.core.TargetPlatform.createPlatformConfiguration(Tar
getPlatform.java:181)
 at
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.cr
eateWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:2
20)
 at
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.la
unch(WorkbenchLaunchConfigurationDelegate.java:78)
 at
org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfigurati
on.java:156)
 at
org.eclipse.pde.internal.ui.launcher.RuntimeWorkbenchShortcut.launch(Runtime
WorkbenchShortcut.java:58)
 at
org.eclipse.pde.internal.ui.launcher.RuntimeWorkbenchShortcut.launch(Runtime
WorkbenchShortcut.java:47)
 at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.l
aunch(LaunchShortcutExtension.java:198)
 at
org.eclipse.debug.internal.ui.actions.LaunchShortcutAction.run(LaunchShortcu
tAction.java:56)
 at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
 at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Action
ContributionItem.java:456)
 at
org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionCont
ributionItem.java:403)
 at
org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionI
tem.java:397)
 at
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(A
ctionContributionItem.java:72)
 at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
 at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
 at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)
 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)
 at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
 at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
 at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.jav
a:858)
 at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
 at java.lang.reflect.Method.invoke(Unknown Source)
 at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
 at org.eclipse.core.launcher.Main.run(Main.java:747)
 at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Nov 05, 2003 15:48:27.441
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Nov 05, 2003 15:48:27.441
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.validatePlugins(Adv
ancedLauncherTab.java:597)
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.updateStatus(Advanc
edLauncherTab.java:566)
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.useDefaultChanged(A
dvancedLauncherTab.java:238)
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.access$7(AdvancedLa
uncherTab.java:234)
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab$1.widgetSelected(Ad
vancedLauncherTab.java:208)
 at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
 at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
 at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
 at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)
 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)
 at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
 at org.eclipse.jface.window.Window.open(Window.java:563)
 at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialo
g.openDialogOnSelection(LaunchConfigurationsDialog.java:504)
 at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialo
g.open(LaunchConfigurationsDialog.java:458)
 at org.eclipse.debug.ui.DebugUITools$1.run(DebugUITools.java:369)
 at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
 at
org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(Debug
UITools.java:373)
 at
org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(Debug
UITools.java:315)
 at
org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogActi
on.java:70)
 at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
 at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Action
ContributionItem.java:456)
 at
org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionCont
ributionItem.java:403)
 at
org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionI
tem.java:397)
 at
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(A
ctionContributionItem.java:72)
 at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
 at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
 at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)
 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)
 at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
 at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
 at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.jav
a:858)
 at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
 at java.lang.reflect.Method.invoke(Unknown Source)
 at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
 at org.eclipse.core.launcher.Main.run(Main.java:747)
 at org.eclipse.core.launcher.Main.main(Main.java:583)
!ENTRY org.eclipse.ui 4 4 Nov 05, 2003 15:48:27.451
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Nov 05, 2003 15:48:27.451
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.validatePlugins(Adv
ancedLauncherTab.java:597)
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.updateStatus(Advanc
edLauncherTab.java:566)
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.useDefaultChanged(A
dvancedLauncherTab.java:238)
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.access$7(AdvancedLa
uncherTab.java:234)
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab$1.widgetSelected(Ad
vancedLauncherTab.java:208)
 at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
 at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
 at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
 at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)
 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)
 at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
 at org.eclipse.jface.window.Window.open(Window.java:563)
 at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialo
g.openDialogOnSelection(LaunchConfigurationsDialog.java:504)
 at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialo
g.open(LaunchConfigurationsDialog.java:458)
 at org.eclipse.debug.ui.DebugUITools$1.run(DebugUITools.java:369)
 at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
 at
org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(Debug
UITools.java:373)
 at
org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(Debug
UITools.java:315)
 at
org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogActi
on.java:70)
 at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
 at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Action
ContributionItem.java:456)
 at
org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionCont
ributionItem.java:403)
 at
org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionI
tem.java:397)
 at
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(A
ctionContributionItem.java:72)
 at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
 at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
 at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)
 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)
 at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
 at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
 at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.jav
a:858)
 at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
 at java.lang.reflect.Method.invoke(Unknown Source)
 at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
 at org.eclipse.core.launcher.Main.run(Main.java:747)
 at org.eclipse.core.launcher.Main.main(Main.java:583)
This bug is a PDE Newbie Killer for sure It almost killed me.

Here is what is going on with this situation. I like to have multiple source
trees mapped to different drive letters. so my main development tree is on
d:\dev maps to s:\ in windows. So when PDE was tyring to launch my plugin it was
resolving the locations of the plugins my plugins has a full path of
s:/ce-plugin/plugin.xml which did not work becuase the code in pde assumes that
there are three seperators for launching the plugin. 

	public String[] getRelativePluginList() {
			String[] list = new String[plugins.size()];
			for (int i = 0; i &lt; plugins.size(); i++) {
				IPluginModelBase model = (IPluginModelBase) plugins.get(i);
				IPath location = getPluginLocation(model);
				location =
					location.append(
						model.isFragmentModel()
							? "fragment.xml" //$NON-NLS-1$
							: "plugin.xml"); //$NON-NLS-1$
				
				IPath relative =
					location.removeFirstSegments(location.segmentCount() - 3);
				//31489 - entry must be relative
				list[i] = relative.setDevice(null).makeRelative().toString();
			}
			return list;
		}

notice this line location.removeFirstSegments(location.segmentCount() - 3);
which assumes that there are three seperators. I think this method should be
refactored to not assume that there are three seperators. 

I just started with Writing plugins for eclipse. It took me more than two days
to figure out why eclipse was not able to start my PDE. the .log file always had
this exception in it. 

java.lang.IllegalArgumentException: 
	at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:56)
	at org.eclipse.core.internal.runtime.Assert.isLegal(Assert.java:41)
	at org.eclipse.core.runtime.Path.removeFirstSegments(Path.java:689)
	at
org.eclipse.pde.internal.core.TargetPlatform$LocalSite.getRelativePluginList(TargetPlatform.java:67)
	at
org.eclipse.pde.internal.core.TargetPlatform.createConfigurationEntries(TargetPlatform.java:293)
	at
org.eclipse.pde.internal.core.TargetPlatform.savePlatformConfiguration(TargetPlatform.java:234)
	at
org.eclipse.pde.internal.core.TargetPlatform.createPlatformConfiguration(TargetPlatform.java:182)
	at
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.createWorkspaceRunnerConfiguration(WorkbenchLaunchConfigurationDelegate.java:220)
	at
org.eclipse.pde.internal.ui.launcher.WorkbenchLaunchConfigurationDelegate.launch(WorkbenchLaunchConfigurationDelegate.java:78)
	at
org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)
	at
org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:676)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:538)
	at org.eclipse.debug.ui.DebugUITools$2.run(DebugUITools.java:487)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)

This one has been fixed in the 3.0 stream.
Use 3.0M4 for development.
Is there a place I document this. I wasted two workdays on this problem. The 2.0
Release is porbably not going to be out for a while longer. The point of
downloading a STABLE Release is that simple things like launching the PDE should
work. I am confused as to why this bug is marked resolved. It certainly is not
resolved in 2.1.2 is there going to be another release of 2.1.x line if so I
think this bug should be fixed for that release or at least documented in the
help file that your workspace can not be the root of a drive :) 




This bug has been marked as resolved, because it has been fixed in the 
development 3.0 stream.
No new PDE work is going into the 2.1.x maintenance streams.  Only bugs deemed 
as critical/blocker warrant going into that stream.
For this particular bug, there is a workaround, which is to not put your 
workspace at the root of a drive.

It does however deserve a readme entry in the release notes.  So should there 
be a 2.1.3, a readme entry will go in.</WithStack>
    <WithOutStack>Here is the situation I can consistently reproduce this bug on my machine.

1) Fresh Install of Eclipse SDK 2.1.2
2) Create a Hello World Plugin using the Project Wizard
3) In Preferences configure the PDE development environment to point to an
external app which has a copy of the eclipse runtime 2.1.2

Whenever I try to launch the hello world plug I end with a dialog box that
has nothing in it and when I check the log file I end up with the an
IllegalArgumentException thrown by the PDE I have attached the .log file

I have no idea what is causing this problem or why it is there? I can launch
a runtime instance of eclipse just fine if I configure the PDE development
environment to launch based on the development instance of eclipse.
------
!SESSION Nov 05, 2003
15:48:06.931 ---------------------------------------------
java.version=1.4.2
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -data
s:\ --vmargs -Xmx200m -Xms350m -install file:C:/eclipse/
!ENTRY org.eclipse.pde.core 4 4 Nov 05, 2003 15:48:06.931
!MESSAGE
!STACK 0
!ENTRY org.eclipse.ui 4 4 Nov 05, 2003 15:48:27.441
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Nov 05, 2003 15:48:27.441
!MESSAGE java.lang.NullPointerException
!STACK 0
!ENTRY org.eclipse.ui 4 4 Nov 05, 2003 15:48:27.451
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Nov 05, 2003 15:48:27.451
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.validatePlugins(Adv
ancedLauncherTab.java:597)
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.updateStatus(Advanc
edLauncherTab.java:566)
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.useDefaultChanged(A
dvancedLauncherTab.java:238)
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab.access$7(AdvancedLa
uncherTab.java:234)
 at
org.eclipse.pde.internal.ui.launcher.AdvancedLauncherTab$1.widgetSelected(Ad
vancedLauncherTab.java:208)
 at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:89)
 at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
 at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
 at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)
 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)
 at org.eclipse.jface.window.Window.runEventLoop(Window.java:583)
 at org.eclipse.jface.window.Window.open(Window.java:563)
 at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialo
g.openDialogOnSelection(LaunchConfigurationsDialog.java:504)
 at
org.eclipse.debug.internal.ui.launchConfigurations.LaunchConfigurationsDialo
g.open(LaunchConfigurationsDialog.java:458)
 at org.eclipse.debug.ui.DebugUITools$1.run(DebugUITools.java:369)
 at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
 at
org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(Debug
UITools.java:373)
 at
org.eclipse.debug.ui.DebugUITools.openLaunchConfigurationDialogOnGroup(Debug
UITools.java:315)
 at
org.eclipse.debug.ui.actions.OpenLaunchDialogAction.run(OpenLaunchDialogActi
on.java:70)
 at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
 at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(Action
ContributionItem.java:456)
 at
org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent(ActionCont
ributionItem.java:403)
 at
org.eclipse.jface.action.ActionContributionItem.access$0(ActionContributionI
tem.java:397)
 at
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent(A
ctionContributionItem.java:72)
 at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
 at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
 at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2022)
 at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1729)
 at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
 at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
 at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.jav
a:858)
 at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
 at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
 at java.lang.reflect.Method.invoke(Unknown Source)
 at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
 at org.eclipse.core.launcher.Main.run(Main.java:747)
 at org.eclipse.core.launcher.Main.main(Main.java:583)
This bug is a PDE Newbie Killer for sure It almost killed me.

Here is what is going on with this situation. I like to have multiple source
trees mapped to different drive letters. so my main development tree is on
d:\dev maps to s:\ in windows. So when PDE was tyring to launch my plugin it was
resolving the locations of the plugins my plugins has a full path of
s:/ce-plugin/plugin.xml which did not work becuase the code in pde assumes that
there are three seperators for launching the plugin. 

	public String[] getRelativePluginList() {
			String[] list = new String[plugins.size()];
			for (int i = 0; i &lt; plugins.size(); i++) {
				IPluginModelBase model = (IPluginModelBase) plugins.get(i);
				IPath location = getPluginLocation(model);
				location =
					location.append(
						model.isFragmentModel()
							? "fragment.xml" //$NON-NLS-1$
							: "plugin.xml"); //$NON-NLS-1$
				
				IPath relative =
					location.removeFirstSegments(location.segmentCount() - 3);
				//31489 - entry must be relative
				list[i] = relative.setDevice(null).makeRelative().toString();
			}
			return list;
		}

notice this line location.removeFirstSegments(location.segmentCount() - 3);
which assumes that there are three seperators. I think this method should be
refactored to not assume that there are three seperators. 

I just started with Writing plugins for eclipse. It took me more than two days
to figure out why eclipse was not able to start my PDE. the .log file always had
this exception in it. 



This one has been fixed in the 3.0 stream.
Use 3.0M4 for development.
Is there a place I document this. I wasted two workdays on this problem. The 2.0
Release is porbably not going to be out for a while longer. The point of
downloading a STABLE Release is that simple things like launching the PDE should
work. I am confused as to why this bug is marked resolved. It certainly is not
resolved in 2.1.2 is there going to be another release of 2.1.x line if so I
think this bug should be fixed for that release or at least documented in the
help file that your workspace can not be the root of a drive :) 




This bug has been marked as resolved, because it has been fixed in the 
development 3.0 stream.
No new PDE work is going into the 2.1.x maintenance streams.  Only bugs deemed 
as critical/blocker warrant going into that stream.
For this particular bug, there is a workaround, which is to not put your 
workspace at the root of a drive.

It does however deserve a readme entry in the release notes.  So should there 
be a 2.1.3, a readme entry will go in.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46137" />
    <CreationDate amount="2003-11-05 16:22:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>delta generation is incorrect when updating a bundle</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The constraint system delta generated when removing a resolved bundle, adding,
and re-resolving (the update scenario) is incorrect. It reports the bundle as
being added/unresolved. It shouldn't report any change (the bundle is still
present, and is still resolved).
Thomas pointed out that uninstall/install/resolve and update/resolve are
different scenarios:

"In this case though (remove, added, resovle) I would expect two BundleDeltas,
one for (Bundle removed) and one for (Bundle added, resolved).  Because we would
be dealing with two different bundles with two different Bundle IDs"
Fixed the update scenarion in the loader_reorg branch. Need to investigate what
to do in the uninstall/install/resolve case.
This has been fixed. Test case added.</WithStack>
    <WithOutStack>The constraint system delta generated when removing a resolved bundle, adding,
and re-resolving (the update scenario) is incorrect. It reports the bundle as
being added/unresolved. It shouldn't report any change (the bundle is still
present, and is still resolved).
Thomas pointed out that uninstall/install/resolve and update/resolve are
different scenarios:

"In this case though (remove, added, resovle) I would expect two BundleDeltas,
one for (Bundle removed) and one for (Bundle added, resolved).  Because we would
be dealing with two different bundles with two different Bundle IDs"
Fixed the update scenarion in the loader_reorg branch. Need to investigate what
to do in the uninstall/install/resolve case.
This has been fixed. Test case added.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46138" />
    <CreationDate amount="2003-11-05 16:24:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>De/serialize all subclasses of ISituationType from/to attributes instead of child elements in CbeFormatter.java.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>De/serialize all subclasses of ISituationType from/to attributes instead of 
child elements in CbeFormatter.java.
CbeFormatter.java updated on 11/05/2003.
Closing.
house keeping</WithStack>
    <WithOutStack>De/serialize all subclasses of ISituationType from/to attributes instead of 
child elements in CbeFormatter.java.
CbeFormatter.java updated on 11/05/2003.
Closing.
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46139" />
    <CreationDate amount="2003-11-05 16:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Msg. Catalog is not set up properly</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>The Msg. Catalog for tool tips is not set up properly
Created attachment 6670
Screen Scrape
Bundle keys miss match due to packaging
0.5.0 is out, so these are now closed.</WithStack>
    <WithOutStack>The Msg. Catalog for tool tips is not set up properly
Created attachment 6670
Screen Scrape
Bundle keys miss match due to packaging
0.5.0 is out, so these are now closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46140" />
    <CreationDate amount="2003-11-05 16:39:00 -0500" />
    <DupId amount="56409" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[tools] change dependancy on UI</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>The new refactoring of the UI plug-in for the RCP plan item has been released to
HEAD. We should look at the Core Tools and change our plug-in dependancies and
extensions accordingly.
We have opened a new bug report to address all the current issues with the core
tools in an effort to get another working version to the web in the near future.
Marking as a duplicate.

*** This bug has been marked as a duplicate of 56409 ***</WithStack>
    <WithOutStack>The new refactoring of the UI plug-in for the RCP plan item has been released to
HEAD. We should look at the Core Tools and change our plug-in dependancies and
extensions accordingly.
We have opened a new bug report to address all the current issues with the core
tools in an effort to get another working version to the web in the near future.
Marking as a duplicate.

*** This bug has been marked as a duplicate of 56409 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46141" />
    <CreationDate amount="2003-11-05 16:55:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>cycles in pre-requisites prevent the state from resolving</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We need to support partial resolution when there are cycles in the pre-requisite
chain in the state. Currently we are throwing CyclicSystemException... 

Whenever we find a cycle, we could disable one of the elements involved in the
cycle and try again.
Released a hack to show where the cycle is happening. Need to fix this...
I need to understand better what you mean by cycle.  If this is an issue it 
needs to be documented in RFC 70.  I'm not sure what you mean by partial 
resolution.

Does a cycle in this context mean something like this:
Bundle com.foo.a requires com.foo.b and
Bundle com.foo.b requires com.foo.a

Under the current Framework classloading model this is perfectly legal.  No 
where do we specify that this would result in the bundles not being resolved.

It is similar to bundle com.foo.a importing a package from bundle com.foo.b and 
bundle com.foo.b importing a package from bundle com.foo.a.  Both will load 
classes from each other and both will resolve.
As noted, the runtime will allow/handle prerequisite cycles simply by ensuring 
that it visits any given transitively reachable prereq at most once.  The issue 
seems to be more one of development/build time.  That is, the runtime supports 
a structure that the tooling cannot reasonably build.

If the resolver were changed to allow cycles then the tooling would not be able 
to detect the cycles and notify users etc.

Not sure what to do here.  We need to consult the community to see if there are 
strong usecases for cycles.  We could consider having two modes on the 
resolver, one to allow cycles, the other not.
*** Bug 48576 has been marked as a duplicate of this bug. ***
Fixed and released to HEAD.

Fix consisted in disabling one of the bundles involved in the cycle and
re-resolving, until there are no cycles. State#resolve(false) must be called for
the bundle to be re-enabled. Added test cases to OSGi tests (StateCycleTest).


Not fixed. Reopening.
Fixed. All bundles involved in a cycle will be disabled. Bundles not in a cycle
but optionally requiring bundles in a cycle might be resolved.</WithStack>
    <WithOutStack>We need to support partial resolution when there are cycles in the pre-requisite
chain in the state. Currently we are throwing CyclicSystemException... 

Whenever we find a cycle, we could disable one of the elements involved in the
cycle and try again.
Released a hack to show where the cycle is happening. Need to fix this...
I need to understand better what you mean by cycle.  If this is an issue it 
needs to be documented in RFC 70.  I'm not sure what you mean by partial 
resolution.

Does a cycle in this context mean something like this:
Bundle com.foo.a requires com.foo.b and
Bundle com.foo.b requires com.foo.a

Under the current Framework classloading model this is perfectly legal.  No 
where do we specify that this would result in the bundles not being resolved.

It is similar to bundle com.foo.a importing a package from bundle com.foo.b and 
bundle com.foo.b importing a package from bundle com.foo.a.  Both will load 
classes from each other and both will resolve.
As noted, the runtime will allow/handle prerequisite cycles simply by ensuring 
that it visits any given transitively reachable prereq at most once.  The issue 
seems to be more one of development/build time.  That is, the runtime supports 
a structure that the tooling cannot reasonably build.

If the resolver were changed to allow cycles then the tooling would not be able 
to detect the cycles and notify users etc.

Not sure what to do here.  We need to consult the community to see if there are 
strong usecases for cycles.  We could consider having two modes on the 
resolver, one to allow cycles, the other not.
*** Bug 48576 has been marked as a duplicate of this bug. ***
Fixed and released to HEAD.

Fix consisted in disabling one of the bundles involved in the cycle and
re-resolving, until there are no cycles. State#resolve(false) must be called for
the bundle to be re-enabled. Added test cases to OSGi tests (StateCycleTest).


Not fixed. Reopening.
Fixed. All bundles involved in a cycle will be disabled. Bundles not in a cycle
but optionally requiring bundles in a cycle might be resolved.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46142" />
    <CreationDate amount="2003-11-05 16:59:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Window inheritance size problems with subclass of subclass</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>MyJFrame extends javax.swing.JFrame
set its size, title and background color.
MyJFrame2 extends MyJFrame.
In the Visual Editor the GUI for the JFrame does not show the inherited size.  
It shows the title and color OK so the initialize() is being called, however 
there is some code that is overriding the real size and making it a default no-
size window
Although this is not exactly what you would expect to see, this is WAD.

The reason for this is that when you drop a component onto the canvas (or in 
this case instanciate 'this' which is the superclass), if the size property is 
explicitly set (in this case MyJFrame2) the component's size is set based on 
it's preferredSize. This is applicable for other components as well. If you 
drop a JPanel or your own JPanel subclassed from a JPanel, the preferredSize is 
used, not size. 

Unfortunately, the preferredSize for a JFrame cannot be explicity set (in this 
case for MyJFrame) because it is a read only property so that inherited classes 
could drop to the desired size. But this works for other JComponents such as 
JPanel since it's a read/write property. But JFrame's preferredSize is 
calculated under the covers. To test this out, select and change the 
preferredSize of MyJFrame's content pane (a JPanel) to something like 300,200. 
Then open MyJFrame2 and it should resize to this setting.

I'd like to do propose a design change (which is why the severity of this 
defect is changed to "enhancement").
If you drop a component (or in this case instanciate the super class) on the 
canvas, if the size property is not explicitly set locally (in this case 
MyJFrame2), instead of setting the size to the preferredSize, check the size of 
the component in the VM and if it's not 0,0 then use whatever size is returned. 
Otherwise use the preferredSize (as is today).

Joe &amp; Rich... please elaborate with more information if you need to.</WithStack>
    <WithOutStack>MyJFrame extends javax.swing.JFrame
set its size, title and background color.
MyJFrame2 extends MyJFrame.
In the Visual Editor the GUI for the JFrame does not show the inherited size.  
It shows the title and color OK so the initialize() is being called, however 
there is some code that is overriding the real size and making it a default no-
size window
Although this is not exactly what you would expect to see, this is WAD.

The reason for this is that when you drop a component onto the canvas (or in 
this case instanciate 'this' which is the superclass), if the size property is 
explicitly set (in this case MyJFrame2) the component's size is set based on 
it's preferredSize. This is applicable for other components as well. If you 
drop a JPanel or your own JPanel subclassed from a JPanel, the preferredSize is 
used, not size. 

Unfortunately, the preferredSize for a JFrame cannot be explicity set (in this 
case for MyJFrame) because it is a read only property so that inherited classes 
could drop to the desired size. But this works for other JComponents such as 
JPanel since it's a read/write property. But JFrame's preferredSize is 
calculated under the covers. To test this out, select and change the 
preferredSize of MyJFrame's content pane (a JPanel) to something like 300,200. 
Then open MyJFrame2 and it should resize to this setting.

I'd like to do propose a design change (which is why the severity of this 
defect is changed to "enhancement").
If you drop a component (or in this case instanciate the super class) on the 
canvas, if the size property is not explicitly set locally (in this case 
MyJFrame2), instead of setting the size to the preferredSize, check the size of 
the component in the VM and if it's not 0,0 then use whatever size is returned. 
Otherwise use the preferredSize (as is today).

Joe &amp; Rich... please elaborate with more information if you need to.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46143" />
    <CreationDate amount="2003-11-05 17:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="VE" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Customizer toolbar option not enabled for inherited JavaBean</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>Customizer toolbar option not enabled for inherited JavaBean
To see this create a JavaBean with a customizer.  Drop this using Choose Bean 
and the customizer option is enabled on the toolbar and appears in the Java 
Beans view.
Now subclass the JavaBean.  Select the Java Bean in the GUI or Java Beans view 
and the customize button is not enabled
Joe, we should discuss this. But technically it is invalid. However, it does
make things inconvienent. By technically I mean the BeanInfo spec doesn't walk
the parent chain to find the customizer class. It uses the one returned by the
BeanInfo. And the Introspector, when it creates a default BeanDescriptor,
doesn't walk the heirarchy to find the customizer class. That is because the
definition of the returned BeanInfo is supposed to be complete in and of itself.
It is not supposed to be "if we want that property editor you go up the
hierarchy." The getAdditionBeanInfo() is what does that for us, but this is not
required and the BeanDecorator isn't merged in from superclass's
getAdditionBeanInfo. Only the properties/methods/events are merged from the
additionalBeanInfo.

We can decide that for VE we will walk the heirarchy. This is not the standard
expected action from the spec though. The problem we have is if a subclass
decided that it DIDN'T want to use the customizer of the superclass and not have
a customizer at all, there is no way to indicate this. The customizer class
setting can be null or not null. There is no way to say it is Set to null
explicitly to indicate there is no customizer class. (Even the current xmi
override doesn't mark the customizer class as being unsettable, so we can't use
the xmi to indicate this either, though we could change that if we wanted to).
M1 released, move all resolved to Verified, as prelude to closing.
M1 released, move all resolved/verified to Closed.
*** Bug 74103 has been marked as a duplicate of this bug. ***
I want to readdress this. It is actually unintuitive and I think we can do
something to help out. But it needs to be placed in priority with other defects.</WithStack>
    <WithOutStack>Customizer toolbar option not enabled for inherited JavaBean
To see this create a JavaBean with a customizer.  Drop this using Choose Bean 
and the customizer option is enabled on the toolbar and appears in the Java 
Beans view.
Now subclass the JavaBean.  Select the Java Bean in the GUI or Java Beans view 
and the customize button is not enabled
Joe, we should discuss this. But technically it is invalid. However, it does
make things inconvienent. By technically I mean the BeanInfo spec doesn't walk
the parent chain to find the customizer class. It uses the one returned by the
BeanInfo. And the Introspector, when it creates a default BeanDescriptor,
doesn't walk the heirarchy to find the customizer class. That is because the
definition of the returned BeanInfo is supposed to be complete in and of itself.
It is not supposed to be "if we want that property editor you go up the
hierarchy." The getAdditionBeanInfo() is what does that for us, but this is not
required and the BeanDecorator isn't merged in from superclass's
getAdditionBeanInfo. Only the properties/methods/events are merged from the
additionalBeanInfo.

We can decide that for VE we will walk the heirarchy. This is not the standard
expected action from the spec though. The problem we have is if a subclass
decided that it DIDN'T want to use the customizer of the superclass and not have
a customizer at all, there is no way to indicate this. The customizer class
setting can be null or not null. There is no way to say it is Set to null
explicitly to indicate there is no customizer class. (Even the current xmi
override doesn't mark the customizer class as being unsettable, so we can't use
the xmi to indicate this either, though we could change that if we wanted to).
M1 released, move all resolved to Verified, as prelude to closing.
M1 released, move all resolved/verified to Closed.
*** Bug 74103 has been marked as a duplicate of this bug. ***
I want to readdress this. It is actually unintuitive and I think we can do
something to help out. But it needs to be placed in priority with other defects.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46144" />
    <CreationDate amount="2003-11-05 17:05:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Improve deadlock detection and reporting</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>I'm just creating this bug report as a way of capturing patches and recording
progress on the problem of improving deadlock detection and reporting.

Max: I have merged your code into the runtime plugin.  I did a bit of cleanup:
renaming methods, deleting blank lines, adding comments, copyrights, etc.

When I run the resource tests in this state there are 480 errors (runtime tests
all pass).  Can you please investigate.  I will attach a patch with the results
of my merging and refactoring.
Created attachment 6671
Diff of core.runtime plugin with latest code
Created attachment 6720
Proposed patch to the deadlock detection and resolution algorithm

All the tests in org.eclipse.core.runtime and org.eclipse.core.resources pass.
FileSystemResourceManagerTest.testWriteProject() fails when it is run as part
of the automated tests but passes when it is run as part of its own smaller
test suite.
DeadlockDetectionTest.testComplexRuleLockInteraction() sometimes fails and I
will investigate.
The patch is against the latest org.eclipse.core.runtime plugin.
Created attachment 6721
New test cases to test deadlock detection.

A new test case to the org.eclipse.core.tests.runtime.jobs package to test the
new functionality of deadlock detection and resolution.
Created attachment 6737
Updated patch to deadlock detection

All tests pass.
FileSystemResourceManagerTest.testWriteProject() assertion 2.1 fails when the
test is run as part of the automated tests, but passes when it is run as part
of the tests in the file or a smaller test suite.
Created attachment 6738
Updated test cases for deadlock detection

A new test case added, several other test cases improved.
Created attachment 6747
Minor update to deadlock detection

All automated tests in org.eclipse.runtime and org.eclipse.resources now pass.
I have released patches 6738 and 6747 to HEAD!
Created attachment 6755
Improved deadlock reporting

Added the name of the thread whose locks will be suspended to resolve deadlock
to the explanatory error message in the log.
Also, I ran the ui tests and they all pass.
Patch released to HEAD
Max, one more request. I'd like the option of throwing an exception when
deadlock is detected rather than silently logging.  This could be triggered by a
debug trace option (see DEBUG_ constants in JobManager).  The idea is that if a
developer sets a debug flag like:

org.eclipse.core.runtime/jobs/errorondeadlock=true

Then it would just throw an exception (say IllegalStateException) on the thread
that causes the deadlock condition, in addition to logging.

Talk to me if you have more questions
Created attachment 6767
Added code to throw exception.

If a deadlock is detected, an error is written to the .log file and an
exception is thrown right after. Deadlock is not resolved. Is this how it
should be?
Thanks, patch released. I'm going to close this bug.  We can open new ones for
future changes.</WithStack>
    <WithOutStack>I'm just creating this bug report as a way of capturing patches and recording
progress on the problem of improving deadlock detection and reporting.

Max: I have merged your code into the runtime plugin.  I did a bit of cleanup:
renaming methods, deleting blank lines, adding comments, copyrights, etc.

When I run the resource tests in this state there are 480 errors (runtime tests
all pass).  Can you please investigate.  I will attach a patch with the results
of my merging and refactoring.
Created attachment 6671
Diff of core.runtime plugin with latest code
Created attachment 6720
Proposed patch to the deadlock detection and resolution algorithm

All the tests in org.eclipse.core.runtime and org.eclipse.core.resources pass.
FileSystemResourceManagerTest.testWriteProject() fails when it is run as part
of the automated tests but passes when it is run as part of its own smaller
test suite.
DeadlockDetectionTest.testComplexRuleLockInteraction() sometimes fails and I
will investigate.
The patch is against the latest org.eclipse.core.runtime plugin.
Created attachment 6721
New test cases to test deadlock detection.

A new test case to the org.eclipse.core.tests.runtime.jobs package to test the
new functionality of deadlock detection and resolution.
Created attachment 6737
Updated patch to deadlock detection

All tests pass.
FileSystemResourceManagerTest.testWriteProject() assertion 2.1 fails when the
test is run as part of the automated tests, but passes when it is run as part
of the tests in the file or a smaller test suite.
Created attachment 6738
Updated test cases for deadlock detection

A new test case added, several other test cases improved.
Created attachment 6747
Minor update to deadlock detection

All automated tests in org.eclipse.runtime and org.eclipse.resources now pass.
I have released patches 6738 and 6747 to HEAD!
Created attachment 6755
Improved deadlock reporting

Added the name of the thread whose locks will be suspended to resolve deadlock
to the explanatory error message in the log.
Also, I ran the ui tests and they all pass.
Patch released to HEAD
Max, one more request. I'd like the option of throwing an exception when
deadlock is detected rather than silently logging.  This could be triggered by a
debug trace option (see DEBUG_ constants in JobManager).  The idea is that if a
developer sets a debug flag like:

org.eclipse.core.runtime/jobs/errorondeadlock=true

Then it would just throw an exception (say IllegalStateException) on the thread
that causes the deadlock condition, in addition to logging.

Talk to me if you have more questions
Created attachment 6767
Added code to throw exception.

If a deadlock is detected, an error is written to the .log file and an
exception is thrown right after. Deadlock is not resolved. Is this how it
should be?
Thanks, patch released. I'm going to close this bug.  We can open new ones for
future changes.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46145" />
    <CreationDate amount="2003-11-05 17:09:00 -0500" />
    <DupId amount="" />
    <classification amount="RT" />
    <Product amount="Equinox" />
    <component amount="Incubator" />
    <Version amount="unspecified" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE resolving state after removing bundle</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341072046">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.osgi.internal.resolver.StateImpl.resolveBundle(StateImpl.java:104)</Frame>
          <Frame depth="1">org.eclipse.osgi.internal.resolver.ResolverImpl.processInnerDelta(ResolverImpl.java:73)</Frame>
          <Frame depth="2">org.eclipse.osgi.internal.resolver.ResolverImpl.resolve(ResolverImpl.java:40)</Frame>
          <Frame depth="3">org.eclipse.osgi.internal.resolver.StateImpl.resolve(StateImpl.java:133)</Frame>
          <Frame depth="4">org.eclipse.osgi.framework.internal.core.PackageAdmin.resolveBundles(PackageAdmin.java:574)</Frame>
          <Frame depth="5">org.eclipse.osgi.framework.internal.core.PackageAdmin.refreshPackages(PackageAdmin.java:340)</Frame>
          <Frame depth="6">org.eclipse.osgi.framework.internal.core.PackageAdmin$1.run(PackageAdmin.java:317)</Frame>
          <Frame depth="7">java.lang.Thread.run(Thread.java:536)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Thomas reported this:
"If I remove a BundleDescription from the state and then call resolve I get the
following NPE:

java.lang.NullPointerException
	at org.eclipse.osgi.internal.resolver.StateImpl.resolveBundle(StateImpl.java:104)
	at
org.eclipse.osgi.internal.resolver.ResolverImpl.processInnerDelta(ResolverImpl.java:73)
	at org.eclipse.osgi.internal.resolver.ResolverImpl.resolve(ResolverImpl.java:40)
	at org.eclipse.osgi.internal.resolver.StateImpl.resolve(StateImpl.java:133)
	at
org.eclipse.osgi.framework.internal.core.PackageAdmin.resolveBundles(PackageAdmin.java:574)
	at
org.eclipse.osgi.framework.internal.core.PackageAdmin.refreshPackages(PackageAdmin.java:340)
	at
org.eclipse.osgi.framework.internal.core.PackageAdmin$1.run(PackageAdmin.java:317)
	at java.lang.Thread.run(Thread.java:536)"

It seems that the delta is showing that a bundle went unresolved when it was
removed. We try to record that change in the delta, but there is no such bundle
in the state anymore.
Fixed in HEAD. Added regression test case.</WithStack>
    <WithOutStack>Thomas reported this:
"If I remove a BundleDescription from the state and then call resolve I get the
following NPE:

"

It seems that the delta is showing that a bundle went unresolved when it was
removed. We try to record that change in the delta, but there is no such bundle
in the state anymore.
Fixed in HEAD. Added regression test case.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46146" />
    <CreationDate amount="2003-11-05 17:09:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse Foundation" />
    <Product amount="z_Archived" />
    <component amount="Hyades" />
    <Version amount="unspecified" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Add commonBaseEvent.sourceComponentId.componentIdType for Apache access/error log parsers.</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>Add commonBaseEvent.sourceComponentId.componentIdType for Apache access/error 
log parsers.
Code checked-in on 11/05/2003.
Closing.
house keeping</WithStack>
    <WithOutStack>Add commonBaseEvent.sourceComponentId.componentIdType for Apache access/error 
log parsers.
Code checked-in on 11/05/2003.
Closing.
house keeping</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46147" />
    <CreationDate amount="2003-11-05 17:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[browser] SWT accelerators get overriden by IE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Run a snippet with Browser IE and a SWT menubar using F5 as an accelerator.
Give focus to the Browser. Press F5. IE reloads instead of running the SWT 
menu accelerator.
fixed v&gt;20031105

note: we may want to exclude all IE shortcuts alltogether in the future, even 
those that don't override accelerators defined by the SWT app. We need to 
return S_OK in IDocHostUIHandler.TranslateAccelerator for all accelerators we 
want to filter out. Looking for nCmdID == 0 is not enough when the focus is 
given to an hyperlink or a form widget inside the brower.</WithStack>
    <WithOutStack>Run a snippet with Browser IE and a SWT menubar using F5 as an accelerator.
Give focus to the Browser. Press F5. IE reloads instead of running the SWT 
menu accelerator.
fixed v&gt;20031105

note: we may want to exclude all IE shortcuts alltogether in the future, even 
those that don't override accelerators defined by the SWT app. We need to 
return S_OK in IDocHostUIHandler.TranslateAccelerator for all accelerators we 
want to filter out. Looking for nCmdID == 0 is not enough when the focus is 
given to an hyperlink or a form widget inside the brower.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46148" />
    <CreationDate amount="2003-11-05 17:21:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>configuration updator should be more robust</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>We need to make the configuration updator more tolerant to non-fatal errors, and
try to install as many bundles as we can.
agreed!
update.configurator moved to Update...
Can you provide a test scenario?
This has been improved after this PR was opened, so most obvious cases are now
properly handled.

It seems it is sufficiently safe now, so feel free to close it.
Closing as requested.</WithStack>
    <WithOutStack>We need to make the configuration updator more tolerant to non-fatal errors, and
try to install as many bundles as we can.
agreed!
update.configurator moved to Update...
Can you provide a test scenario?
This has been improved after this PR was opened, so most obvious cases are now
properly handled.

It seems it is sufficiently safe now, so feel free to close it.
Closing as requested.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46149" />
    <CreationDate amount="2003-11-05 17:21:00 -0500" />
    <DupId amount="45982" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>AEOOB in Util.computeDietRange during editing</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341072051">
        <Exception>java.lang.ArrayIndexOutOfBoundsException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.System.arraycopy(Native Method)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.compiler.parser.diagnose.Util.computeDietRange(Util.java:103)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.parser.Parser.reportSyntaxErrors(Parser.java:5329)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5310)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5628)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5593)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1094)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:118)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:200)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:487)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:925)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:48)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:523)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1042)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1014)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1007)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.getElementForInputAt(JavaBrowsingPart.java:1225)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.setSelectionFromEditor(JavaBrowsingPart.java:1117)</Frame>
          <Frame depth="20">org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.selectionChanged(JavaBrowsingPart.java:669)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.ui.browsing.ProjectsView.selectionChanged(ProjectsView.java:214)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.AbstractSelectionService$4.run(AbstractSelectionService.java:178)</Frame>
          <Frame depth="23">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1143)</Frame>
          <Frame depth="24">org.eclipse.core.runtime.Platform.run(Platform.java:461)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.AbstractSelectionService.firePostSelection(AbstractSelectionService.java:176)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.AbstractSelectionService$2.selectionChanged(AbstractSelectionService.java:76)</Frame>
          <Frame depth="27">org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2142)</Frame>
          <Frame depth="28">org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2095)</Frame>
          <Frame depth="29">org.eclipse.jface.text.TextViewer$4.run(TextViewer.java:2074)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.runTimers(Display.java:2412)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1919)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1611)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.run(Workbench.java:1594)</Frame>
          <Frame depth="34">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="35">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="36">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="37">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="38">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="39">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="41">org.eclipse.core.launcher.Main.run(Main.java:765)</Frame>
          <Frame depth="42">org.eclipse.core.launcher.Main.main(Main.java:599)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072051">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.System.arraycopy(Native Method)</Frame>
          <Frame depth="1">org.eclipse.jdt.internal.compiler.parser.diagnose.Util.computeDietRange(Util.java:104)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.compiler.parser.Parser.reportSyntaxErrors(Parser.java:5329)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5310)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5628)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5593)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1094)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:118)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:200)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:487)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:925)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:48)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:523)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1042)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1014)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1007)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.getElementForInputAt(JavaBrowsingPart.java:1225)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.setSelectionFromEditor(JavaBrowsingPart.java:1117)</Frame>
          <Frame depth="20">org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.selectionChanged(JavaBrowsingPart.java:669)</Frame>
          <Frame depth="21">org.eclipse.jdt.internal.ui.browsing.ProjectsView.selectionChanged(ProjectsView.java:214)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.AbstractSelectionService$4.run(AbstractSelectionService.java:178)</Frame>
          <Frame depth="23">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1143)</Frame>
          <Frame depth="24">org.eclipse.core.runtime.Platform.run(Platform.java:461)</Frame>
          <Frame depth="25">org.eclipse.ui.internal.AbstractSelectionService.firePostSelection(AbstractSelectionService.java:176)</Frame>
          <Frame depth="26">org.eclipse.ui.internal.AbstractSelectionService$2.selectionChanged(AbstractSelectionService.java:76)</Frame>
          <Frame depth="27">org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2142)</Frame>
          <Frame depth="28">org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2095)</Frame>
          <Frame depth="29">org.eclipse.jface.text.TextViewer$4.run(TextViewer.java:2074)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.runTimers(Display.java:2412)</Frame>
          <Frame depth="31">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1919)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1611)</Frame>
          <Frame depth="33">org.eclipse.ui.internal.Workbench.run(Workbench.java:1594)</Frame>
          <Frame depth="34">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="35">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="36">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="37">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="38">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="39">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="41">org.eclipse.core.launcher.Main.run(Main.java:765)</Frame>
          <Frame depth="42">org.eclipse.core.launcher.Main.main(Main.java:599)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Eclipse: 200311040800
OSX: 10.3

I am getting a lot of the following during editing - cannot say much more than that really.

!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.ArrayIndexOutOfBoundsException
        at java.lang.System.arraycopy(Native Method)
        at org.eclipse.jdt.internal.compiler.parser.diagnose.Util.computeDietRange(Util.java:103)
        at org.eclipse.jdt.internal.compiler.parser.Parser.reportSyntaxErrors(Parser.java:5329)
        at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5310)
        at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5628)
        at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5593)
        at 
org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.ja
va:1094)
        at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:118)
        at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:200)
        at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:487)
        at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:925)
        at 
org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingC
opyOperation.java:48)
        at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366)
        at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705)
        at org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:523)
        at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1042)
        at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1014)
        at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1007)
        at 
org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.getElementForInputAt(JavaBrowsingPart.java:
1225)
        at 
org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.setSelectionFromEditor(JavaBrowsingPart.java:
1117)
        at 
org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.selectionChanged(JavaBrowsingPart.java:669)
        at org.eclipse.jdt.internal.ui.browsing.ProjectsView.selectionChanged(ProjectsView.java:214)
        at org.eclipse.ui.internal.AbstractSelectionService$4.run(AbstractSelectionService.java:178)
        at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1143)
        at org.eclipse.core.runtime.Platform.run(Platform.java:461)
        at 
org.eclipse.ui.internal.AbstractSelectionService.firePostSelection(AbstractSelectionService.java:176)
        at 
org.eclipse.ui.internal.AbstractSelectionService$2.selectionChanged(AbstractSelectionService.java:
76)
        at org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2142)
        at org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2095)
        at org.eclipse.jface.text.TextViewer$4.run(TextViewer.java:2074)
        at org.eclipse.swt.widgets.Display.runTimers(Display.java:2412)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1919)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1611)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1594)
        at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
        at org.eclipse.core.launcher.Main.run(Main.java:765)
        at org.eclipse.core.launcher.Main.main(Main.java:599)
Got a NPE in exactly the same place:

!ENTRY org.eclipse.ui.workbench 4 2 Nov 06, 2003 08:12:56.784
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
java.lang.NullPointerException
        at java.lang.System.arraycopy(Native Method)
        at org.eclipse.jdt.internal.compiler.parser.diagnose.Util.computeDietRange(Util.java:104)
        at org.eclipse.jdt.internal.compiler.parser.Parser.reportSyntaxErrors(Parser.java:5329)
        at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5310)
        at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5628)
        at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:5593)
        at 
org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.ja
va:1094)
        at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:118)
        at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:200)
        at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:487)
        at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:925)
        at 
org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingC
opyOperation.java:48)
        at org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366)
        at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705)
        at org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:523)
        at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1042)
        at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1014)
        at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1007)
        at 
org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.getElementForInputAt(JavaBrowsingPart.java:
1225)
        at 
org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.setSelectionFromEditor(JavaBrowsingPart.java:
1117)
        at 
org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.selectionChanged(JavaBrowsingPart.java:669)
        at org.eclipse.jdt.internal.ui.browsing.ProjectsView.selectionChanged(ProjectsView.java:214)
        at org.eclipse.ui.internal.AbstractSelectionService$4.run(AbstractSelectionService.java:178)
        at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1143)
        at org.eclipse.core.runtime.Platform.run(Platform.java:461)
        at 
org.eclipse.ui.internal.AbstractSelectionService.firePostSelection(AbstractSelectionService.java:176)
        at 
org.eclipse.ui.internal.AbstractSelectionService$2.selectionChanged(AbstractSelectionService.java:
76)
        at org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2142)
        at org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2095)
        at org.eclipse.jface.text.TextViewer$4.run(TextViewer.java:2074)
        at org.eclipse.swt.widgets.Display.runTimers(Display.java:2412)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1919)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1611)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1594)
        at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
        at org.eclipse.core.launcher.Main.run(Main.java:765)
        at org.eclipse.core.launcher.Main.main(Main.java:599)



*** This bug has been marked as a duplicate of 45982 ***</WithStack>
    <WithOutStack>Eclipse: 200311040800
OSX: 10.3

I am getting a lot of the following during editing - cannot say much more than that really.

!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0
Got a NPE in exactly the same place:

!ENTRY org.eclipse.ui.workbench 4 2 Nov 06, 2003 08:12:56.784
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench".
!STACK 0




*** This bug has been marked as a duplicate of 45982 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46150" />
    <CreationDate amount="2003-11-05 17:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>formatter failed to format</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>i20031105 with Equinox 20031010

The formatter refused format a block of code, and an entry was added to the log.
Will attach the session .log.
Created attachment 6672
.log file
I will investigate.
Your code is not syntactically correct. Missing '}' in installBundles(). So the 
new formatter cannot format your code and returns no edit.
Close as INVALID?
If the idea is to stop logging it when the formatter is more stable, I agree.
Move to JDT/UI for comment.
Would it be possible to distinguish source with syntax errors from source that 
the formatter fails to format?
Move it back when you replied.
In this case, I can actually format all methods except the one that contains 
the syntax error. This one is left as is. This is possible in this case, 
because the diet parse was successfull and only the parsing of one method body 
failed.
In general, the formatter cannot format code that is not syntactically correct, 
but in this case we can do something.
I consider this enough to close this PR.
Fixed and released in HEAD.
Regression test added.
Verified.</WithStack>
    <WithOutStack>i20031105 with Equinox 20031010

The formatter refused format a block of code, and an entry was added to the log.
Will attach the session .log.
Created attachment 6672
.log file
I will investigate.
Your code is not syntactically correct. Missing '}' in installBundles(). So the 
new formatter cannot format your code and returns no edit.
Close as INVALID?
If the idea is to stop logging it when the formatter is more stable, I agree.
Move to JDT/UI for comment.
Would it be possible to distinguish source with syntax errors from source that 
the formatter fails to format?
Move it back when you replied.
In this case, I can actually format all methods except the one that contains 
the syntax error. This one is left as is. This is possible in this case, 
because the diet parse was successfull and only the parsing of one method body 
failed.
In general, the formatter cannot format code that is not syntactically correct, 
but in this case we can do something.
I consider this enough to close this PR.
Fixed and released in HEAD.
Regression test added.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46151" />
    <CreationDate amount="2003-11-05 17:25:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>IWorkspace.run should use scheduling rule</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>This is a meta-bug for all clients that currently call IWorkspace.run.  Callers
of this method need to revisit their use and decide what scheduling rule is
appropriate. See the following porting guide link for more details:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-core-home/documents/plan_concurrency_porting_guide.html
Note that the intent here is to catch the main cases that are often being
blocked by background activity.  If you have an IWorkspaceRunnable that does
complicated things on many resources, it's probably better to stich with the
"root" rule to avoid the possibility of breaking the rule you set out.

Focus should be on simple IWorkspaceRunnable instances that do simple things. 
IWorkspaceRunnables that only modify markers are the main candidates to focus on
right now.  We don't want to create a lot of work for all components.
Note to self: there needs to be documentation in the resources plugin API about
what rules are needed for which operations.
See bug 46332 for the editor save case
.</WithStack>
    <WithOutStack>This is a meta-bug for all clients that currently call IWorkspace.run.  Callers
of this method need to revisit their use and decide what scheduling rule is
appropriate. See the following porting guide link for more details:

http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-core-home/documents/plan_concurrency_porting_guide.html
Note that the intent here is to catch the main cases that are often being
blocked by background activity.  If you have an IWorkspaceRunnable that does
complicated things on many resources, it's probably better to stich with the
"root" rule to avoid the possibility of breaking the rule you set out.

Focus should be on simple IWorkspaceRunnable instances that do simple things. 
IWorkspaceRunnables that only modify markers are the main candidates to focus on
right now.  We don't want to create a lot of work for all components.
Note to self: there needs to be documentation in the resources plugin API about
what rules are needed for which operations.
See bug 46332 for the editor save case
.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46152" />
    <CreationDate amount="2003-11-05 17:42:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Revise usage of IWorkspace.run</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>See bug 46151 for more details.

It looks like the following methods only modify markers, so a "null" scheduling
rule is sufficient.

org.eclipse.debug.core.model.Breakpoint.setAttribute(String, boolean)
org.eclipse.debug.core.model.Breakpoint.setAttribute(String, int)
org.eclipse.debug.core.model.Breakpoint.setAttribute(String, Object)
org.eclipse.debug.core.model.Breakpoint.setAttributes(Map)
org.eclipse.debug.core.model.Breakpoint.setAttributes(String[], Object[])
org.eclipse.debug.internal.core.BreakpointManager.addBreakpoints(IBreakpoint[])
org.eclipse.debug.internal.core.BreakpointManager.BreakpointManagerVisitor.update()
I missed:

BreakpointManager.removeBreakpoints 

I had fixed it in my workspace so I missed it in the search.  This is an
important one.  To see the consequences, try double-clicking on a breakpoint
while a long running background operation is going on (such as checkout or
refresh sync view).
doh .... :-/

I was working on, and almost "fixed" bug 44100 this morning. This bug is more or
less the test case you gave in comment 1. I was "fixing" the other call to
run(..) at the same time.

But what I was doing is wrong, I didn't know that operation on marker didn't
need rule, so I was set the resource of the markers as rule.

did I miss something in the doc ? or is it something that we should know when we
use markers ? or does the doc doesn't say anything about the fact that no rules
are needed for marker operations ?

Anyway, thanks for the info. That should be easier to fix now.

marker not resource change
Fixed.

There was also
org.eclipse.debug.internal.ui.views.launch.LaunchView#getInstructionPointer(int,
int, int)
org.eclipse.debug.internal.ui.action.EnableBreakpointAction#run()
org.eclipse.debug.internal.ui.action.RemoveBreakpointAction#run()

I replaced the method BreakpointManager.fork(IWorkspaceRunnable) by
fork(ISchedulingRule, IWorkspaceRunnable).
Please verify, Jared.
Your question about where this is documented is valid.  It needs to be specified
in the javadoc for all methods that change the workspace.  I'll add a comment to
bug 46151 so I don't forget.
Verified. Thanks, John.</WithStack>
    <WithOutStack>See bug 46151 for more details.

It looks like the following methods only modify markers, so a "null" scheduling
rule is sufficient.

org.eclipse.debug.core.model.Breakpoint.setAttribute(String, boolean)
org.eclipse.debug.core.model.Breakpoint.setAttribute(String, int)
org.eclipse.debug.core.model.Breakpoint.setAttribute(String, Object)
org.eclipse.debug.core.model.Breakpoint.setAttributes(Map)
org.eclipse.debug.core.model.Breakpoint.setAttributes(String[], Object[])
org.eclipse.debug.internal.core.BreakpointManager.addBreakpoints(IBreakpoint[])
org.eclipse.debug.internal.core.BreakpointManager.BreakpointManagerVisitor.update()
I missed:

BreakpointManager.removeBreakpoints 

I had fixed it in my workspace so I missed it in the search.  This is an
important one.  To see the consequences, try double-clicking on a breakpoint
while a long running background operation is going on (such as checkout or
refresh sync view).
doh .... :-/

I was working on, and almost "fixed" bug 44100 this morning. This bug is more or
less the test case you gave in comment 1. I was "fixing" the other call to
run(..) at the same time.

But what I was doing is wrong, I didn't know that operation on marker didn't
need rule, so I was set the resource of the markers as rule.

did I miss something in the doc ? or is it something that we should know when we
use markers ? or does the doc doesn't say anything about the fact that no rules
are needed for marker operations ?

Anyway, thanks for the info. That should be easier to fix now.

marker not resource change
Fixed.

There was also
org.eclipse.debug.internal.ui.views.launch.LaunchView#getInstructionPointer(int,
int, int)
org.eclipse.debug.internal.ui.action.EnableBreakpointAction#run()
org.eclipse.debug.internal.ui.action.RemoveBreakpointAction#run()

I replaced the method BreakpointManager.fork(IWorkspaceRunnable) by
fork(ISchedulingRule, IWorkspaceRunnable).
Please verify, Jared.
Your question about where this is documented is valid.  It needs to be specified
in the javadoc for all methods that change the workspace.  I'll add a comment to
bug 46151 so I don't forget.
Verified. Thanks, John.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46153" />
    <CreationDate amount="2003-11-05 17:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Revise use of IWorkspace.run</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>See bug 46151 for more details.

The following methods only modify markers, so a "null" rule is sufficient:

JavaBreakpoint.run
JavaDebugOptionsManager.updateBreakpointMessages
org.eclipse.jdt.internal.debug.ui.propertypages.JavaBreakpointPage.performOk()
Fixed.

There were also
JavaDebugOptionManager#initializeProblemHandling()
JavaExceptionBreakpoint#JavaExceptionBreakpoint(...)
JavaLineBreakpoint#JavaLineBreakpoint(...)
JavaMethodBreakpoint#JavaMethodBreakpoint(...)
JavaMethodEntryBreakpoint#JavaMethodEntryBreakpoint(...)
JavaPatternBreakpoint#JavaPatternBreakpoint(...)
JavaStratumLineBreakpoint#JavaStratumLineBreakpoint(...)
JavaTargetPatternBreakpoint#JavaTargetPatternBreakpoint(...)
JavaWatchpoint#JavaWatchpoint(...)
JavaDebugOptionManager#initializeProblemHandling()

Replaced
JavaBreakpoint#fork(IWorkspaceRunnable) by JavaBreakpoint(ISchedulingRule,
IWorspaceRunnable)
JavaModelListener#fork(IWorkspaceRunnable) by
JavaModelListener#(ISchedulingRule, IWorkspaceRunnable)

Please verify, Jared.
The same applies to JDIDebugTarget#newDebugTarget(...), no?
That should read JDIDebugModel#newDebugTarget(...)
Looking at this code, it's not clear why we're even using a workspace runnable 
here. The code dates back from when we just edited markers manually throughout 
the code instead of using breakpoint objects, though, so the runnable could have 
existing to wrapper marker changes.
My only caution is to avoid using a scheduling rule unless you can be certain of
what the code does in all cases.  If for example the code fires events to third
parties, you can't predict what resources those third parties might try to
modify.  The only rules that are "safe" when calling third parties are "null"
(don't lock anything, but still batch changes), and IWorkspaceRoot (lock
everything).
Made the same change to JDIDebugModel#newDebugTarget(...). Verified.</WithStack>
    <WithOutStack>See bug 46151 for more details.

The following methods only modify markers, so a "null" rule is sufficient:

JavaBreakpoint.run
JavaDebugOptionsManager.updateBreakpointMessages
org.eclipse.jdt.internal.debug.ui.propertypages.JavaBreakpointPage.performOk()
Fixed.

There were also
JavaDebugOptionManager#initializeProblemHandling()
JavaExceptionBreakpoint#JavaExceptionBreakpoint(...)
JavaLineBreakpoint#JavaLineBreakpoint(...)
JavaMethodBreakpoint#JavaMethodBreakpoint(...)
JavaMethodEntryBreakpoint#JavaMethodEntryBreakpoint(...)
JavaPatternBreakpoint#JavaPatternBreakpoint(...)
JavaStratumLineBreakpoint#JavaStratumLineBreakpoint(...)
JavaTargetPatternBreakpoint#JavaTargetPatternBreakpoint(...)
JavaWatchpoint#JavaWatchpoint(...)
JavaDebugOptionManager#initializeProblemHandling()

Replaced
JavaBreakpoint#fork(IWorkspaceRunnable) by JavaBreakpoint(ISchedulingRule,
IWorspaceRunnable)
JavaModelListener#fork(IWorkspaceRunnable) by
JavaModelListener#(ISchedulingRule, IWorkspaceRunnable)

Please verify, Jared.
The same applies to JDIDebugTarget#newDebugTarget(...), no?
That should read JDIDebugModel#newDebugTarget(...)
Looking at this code, it's not clear why we're even using a workspace runnable 
here. The code dates back from when we just edited markers manually throughout 
the code instead of using breakpoint objects, though, so the runnable could have 
existing to wrapper marker changes.
My only caution is to avoid using a scheduling rule unless you can be certain of
what the code does in all cases.  If for example the code fires events to third
parties, you can't predict what resources those third parties might try to
modify.  The only rules that are "safe" when calling third parties are "null"
(don't lock anything, but still batch changes), and IWorkspaceRoot (lock
everything).
Made the same change to JDIDebugModel#newDebugTarget(...). Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46154" />
    <CreationDate amount="2003-11-05 18:02:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Move to new progress API</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="functioncall">
        <location start="1596" end="1636" />
        <code>IWorkbench now has getProgressService();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="6">
        <Lines>
          <Line>1) ProgressMonitorWithJosDialogs</Line>
          <Line>2) UIJobs</Line>
          <Line>See comment #3.  There are still no references to the new progress service in</Line>
          <Line>the Platform Workbench or IDE Workbench.  If we are not using our own API for</Line>
          <Line>reporting progress, we can't expect anyone else to use it.</Line>
          <Line>The workbench has no UI Jobs - they are all workbench jobs. Team has several.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="4">
        <Lines>
          <Line>- porting some major operations to use new progress service</Line>
          <Line>- Making ProgressFeedbackManager work (see bug 41806)</Line>
          <Line>- minor fixes in ProgressManager (make job to open monitor a system job, change</Line>
          <Line>timing delay, removed redundant "setOpenOnRun"</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Tod, I'm submitting this patch now so I don't lose track of the changes in my
workspace. It contains:

- porting some major operations to use new progress service
- Making ProgressFeedbackManager work (see bug 41806)
- minor fixes in ProgressManager (make job to open monitor a system job, change
timing delay, removed redundant "setOpenOnRun"

There is also an added method ProgressManager.getDefaultMonitor.  This is a work
in progress, so ignore it.
Created attachment 6673
Patch to org.eclipse.ui.workbench project
This is done already as we are such good pals.
The intent is to replace main users of ProgressMonitorDialog with the new
IProgressService.  Currently the IProgressService is not used at all in the
workbench or generic IDE.  All of the features of this service (progressive
switching from busy cursor to modal dialog, detailed job information when
blocked, etc), are currently not exploited by anyone. WorkspaceAction.run is the
main one, but there are a number of other places where the old
ProgressMonitorDialog.run are used. Agreed that the rest of the patch
(ProgressFeedbackManager) is no longer relevant.
Most this work is already done but we need to check for

UIJobs that should be workbench jobs
ProgressMonitorDialogs that could be
1) ProgressMonitorWithJosDialogs
2) UIJobs
See comment #3.  There are still no references to the new progress service in
the Platform Workbench or IDE Workbench.  If we are not using our own API for
reporting progress, we can't expect anyone else to use it.
The workbench has no UI Jobs - they are all workbench jobs. Team has several.
IWorkbench now has getProgressService();
The only places still using the ProgressMonitorDialog was some RCP code that 
opened a dialog if there was no window. I have changed this to a 
ProgressMonitorJobsDialog.
Have these changes been released? I still see quite a lot of users of
ProgressMonitorDialog in the IDE plugin. The biggest one is when the user tries
to quit the workbench. If something long running is going on, they are stuck
with a modal progress dialog with no chance to cancel the background job or even
see what is happening. Similar effect when creating, moving, and deleting resources.

To me, the most important ones are:

org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.disconnectFromWorkspace()
org.eclipse.ui.actions.DeleteResourceAction.run()
org.eclipse.ui.actions.WorkspaceAction.run()
org.eclipse.ui.dialogs.NewFolderDialog.createNewFolder(String, String)

Other less important (not as common) ones are:

org.eclipse.ui.actions.CopyFilesAndFoldersOperation.copyFiles(String[], IContainer) 
org.eclipse.ui.actions.CopyFilesAndFoldersOperation.copyResources(IResource[],
IContainer) 
org.eclipse.ui.actions.CopyProjectAction.performCopy(IProject, String, IPath) 
org.eclipse.ui.actions.CopyProjectOperation.performProjectCopy(IProject, String,
IPath) 
org.eclipse.ui.actions.MoveProjectAction.performMove(IProject, String, IPath) 
org.eclipse.ui.internal.ide.dialogs.ProjectReferencePage.performOk() 
org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.refreshFromLocal() 
org.eclipse.ui.wizards.datatransfer.WizardFileSystemResourceImportPage1.setupSelectionsBasedOnSelectedTypes()

Opening to investigate Johns comment
Made the changes as suggested by John. I am not going to move anything else to 
a job unless we find something that is slow and running in the UI Thread.
I'm happy now &lt;g&gt;.

Sorry for any miscommunication - I was never suggesting that we move more things
into jobs. I just wanted us to start using the IProgressService rather than
ProgressMonitorDialog, both to gain the new advantages (such as being able to
cancel other background jobs while waiting), and to iron out any bugs with the
new progress API.
Thanks for the double check John - my Search was missing the ide plug-in on my 
first pass.</WithStack>
    <WithOutStack>Tod, I'm submitting this patch now so I don't lose track of the changes in my
workspace. It contains:

- porting some major operations to use new progress service
- Making ProgressFeedbackManager work (see bug 41806)
- minor fixes in ProgressManager (make job to open monitor a system job, change
timing delay, removed redundant "setOpenOnRun"

There is also an added method ProgressManager.getDefaultMonitor.  This is a work
in progress, so ignore it.
Created attachment 6673
Patch to org.eclipse.ui.workbench project
This is done already as we are such good pals.
The intent is to replace main users of ProgressMonitorDialog with the new
IProgressService.  Currently the IProgressService is not used at all in the
workbench or generic IDE.  All of the features of this service (progressive
switching from busy cursor to modal dialog, detailed job information when
blocked, etc), are currently not exploited by anyone. WorkspaceAction.run is the
main one, but there are a number of other places where the old
ProgressMonitorDialog.run are used. Agreed that the rest of the patch
(ProgressFeedbackManager) is no longer relevant.
Most this work is already done but we need to check for

UIJobs that should be workbench jobs
ProgressMonitorDialogs that could be
1) ProgressMonitorWithJosDialogs
2) UIJobs
See comment #3.  There are still no references to the new progress service in
the Platform Workbench or IDE Workbench.  If we are not using our own API for
reporting progress, we can't expect anyone else to use it.
The workbench has no UI Jobs - they are all workbench jobs. Team has several.
IWorkbench now has getProgressService();
The only places still using the ProgressMonitorDialog was some RCP code that 
opened a dialog if there was no window. I have changed this to a 
ProgressMonitorJobsDialog.
Have these changes been released? I still see quite a lot of users of
ProgressMonitorDialog in the IDE plugin. The biggest one is when the user tries
to quit the workbench. If something long running is going on, they are stuck
with a modal progress dialog with no chance to cancel the background job or even
see what is happening. Similar effect when creating, moving, and deleting resources.

To me, the most important ones are:

org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.disconnectFromWorkspace()
org.eclipse.ui.actions.DeleteResourceAction.run()
org.eclipse.ui.actions.WorkspaceAction.run()
org.eclipse.ui.dialogs.NewFolderDialog.createNewFolder(String, String)

Other less important (not as common) ones are:

org.eclipse.ui.actions.CopyFilesAndFoldersOperation.copyFiles(String[], IContainer) 
org.eclipse.ui.actions.CopyFilesAndFoldersOperation.copyResources(IResource[],
IContainer) 
org.eclipse.ui.actions.CopyProjectAction.performCopy(IProject, String, IPath) 
org.eclipse.ui.actions.CopyProjectOperation.performProjectCopy(IProject, String,
IPath) 
org.eclipse.ui.actions.MoveProjectAction.performMove(IProject, String, IPath) 
org.eclipse.ui.internal.ide.dialogs.ProjectReferencePage.performOk() 
org.eclipse.ui.internal.ide.IDEWorkbenchAdvisor.refreshFromLocal() 
org.eclipse.ui.wizards.datatransfer.WizardFileSystemResourceImportPage1.setupSelectionsBasedOnSelectedTypes()

Opening to investigate Johns comment
Made the changes as suggested by John. I am not going to move anything else to 
a job unless we find something that is slow and running in the UI Thread.
I'm happy now &lt;g&gt;.

Sorry for any miscommunication - I was never suggesting that we move more things
into jobs. I just wanted us to start using the IProgressService rather than
ProgressMonitorDialog, both to gain the new advantages (such as being able to
cancel other background jobs while waiting), and to iron out any bugs with the
new progress API.
Thanks for the double check John - my Search was missing the ide plug-in on my 
first pass.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46155" />
    <CreationDate amount="2003-11-05 18:11:00 -0500" />
    <DupId amount="46116" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>NPE while synchronizing with repository</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341072059">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.team.internal.ui.jobs.JobBusyCursor.showCursor(JobBusyCursor.java:48)</Frame>
          <Frame depth="1">org.eclipse.team.internal.ui.jobs.JobBusyCursor.finished(JobBusyCursor.java:93)</Frame>
          <Frame depth="2">org.eclipse.team.internal.ui.jobs.JobStatusHandler$2.notify(JobStatusHandler.java:224)</Frame>
          <Frame depth="3">org.eclipse.team.internal.ui.jobs.JobStatusHandler$Notification.run(JobStatusHandler.java:46)</Frame>
          <Frame depth="4">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1143)</Frame>
          <Frame depth="5">org.eclipse.core.runtime.Platform.run(Platform.java:461)</Frame>
          <Frame depth="6">org.eclipse.team.internal.ui.jobs.JobStatusHandler$Notification.run(JobStatusHandler.java:43)</Frame>
          <Frame depth="7">org.eclipse.team.internal.ui.jobs.JobStatusHandler.fireNotification(JobStatusHandler.java:174)</Frame>
          <Frame depth="8">org.eclipse.team.internal.ui.jobs.JobStatusHandler.fireEndNotification(JobStatusHandler.java:222)</Frame>
          <Frame depth="9">org.eclipse.team.internal.ui.jobs.JobStatusHandler.jobDone(JobStatusHandler.java:216)</Frame>
          <Frame depth="10">org.eclipse.team.internal.ui.jobs.JobStatusHandler.done(JobStatusHandler.java:150)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:106)</Frame>
          <Frame depth="13">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1143)</Frame>
          <Frame depth="14">org.eclipse.core.runtime.Platform.run(Platform.java:461)</Frame>
          <Frame depth="15">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="16">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="17">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:305)</Frame>
          <Frame depth="18">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:85)</Frame>
          <Frame depth="19">org.eclipse.core.internal.jobs.Worker.run(Worker.java:72)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Build: I-20031105
I was trying to synchronize with the repository and got 6 instances of the 
following exception:


Error Nov 05, 2003 17:59:43.529 Problems occurred when invoking code from plug-
in: "org.eclipse.team.ui".
java.lang.NullPointerException
	at org.eclipse.team.internal.ui.jobs.JobBusyCursor.showCursor
(JobBusyCursor.java:48)
	at org.eclipse.team.internal.ui.jobs.JobBusyCursor.finished
(JobBusyCursor.java:93)
	at org.eclipse.team.internal.ui.jobs.JobStatusHandler$2.notify
(JobStatusHandler.java:224)
	at org.eclipse.team.internal.ui.jobs.JobStatusHandler$Notification.run
(JobStatusHandler.java:46)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1143)
	at org.eclipse.core.runtime.Platform.run(Platform.java:461)
	at org.eclipse.team.internal.ui.jobs.JobStatusHandler$Notification.run
(JobStatusHandler.java:43)
	at org.eclipse.team.internal.ui.jobs.JobStatusHandler.fireNotification
(JobStatusHandler.java:174)
	at 
org.eclipse.team.internal.ui.jobs.JobStatusHandler.fireEndNotification
(JobStatusHandler.java:222)
	at org.eclipse.team.internal.ui.jobs.JobStatusHandler.jobDone
(JobStatusHandler.java:216)
	at org.eclipse.team.internal.ui.jobs.JobStatusHandler.done
(JobStatusHandler.java:150)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:106)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1143)
	at org.eclipse.core.runtime.Platform.run(Platform.java:461)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:305)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:85)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:72)


*** This bug has been marked as a duplicate of 46116 ***</WithStack>
    <WithOutStack>Build: I-20031105
I was trying to synchronize with the repository and got 6 instances of the 
following exception:


Error Nov 05, 2003 17:59:43.529 Problems occurred when invoking code from plug-
in: "org.eclipse.team.ui".



*** This bug has been marked as a duplicate of 46116 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46156" />
    <CreationDate amount="2003-11-05 18:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="SWT" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Eclipse crash with KERN_PROTECTION_FAILURE when customizing perspective</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Eclipse 200311040800
osx: 10.3
power mac G5

Crash when customizing the perspective:

Crash log

**********

Host:       eden
Date/Time:  2003-11-05 22:56:04 +0000
OS Version: 10.3 (Build 7B85)

Command:    java_swt (/Users/channing/java/eclipse/Eclipse.app/Contents/MacOS/java_swt)
PID:        1697
Thread:     0

Exception:  EXC_BAD_ACCESS (0x0001)
Codes:      KERN_PROTECTION_FAILURE (0x0002) at 0x00000040

Thread 0 Crashed:
 #0   0x927e04fc in GetMenuSystemAttributes(MenuData*, unsigned long*) 
(GetMenuSystemAttributes(MenuData*, unsigned long*) + 0)
 #1   0x927de27c in FindNextMenuInRoot(IterPosition*, MenuData*) 
(FindNextMenuInRoot(IterPosition*, MenuData*) + 176)
 #2   0x927dfe40 in FindNextMenu(IterPosition*, RootMenus*) (FindNextMenu(IterPosition*, 
RootMenus*) + 228)
 #3   0x927e5df4 in MenuIterGetDataAtIndex(OpaqueMenuIteratorRef*, long) 
(MenuIterGetDataAtIndex(OpaqueMenuIteratorRef*, long) + 92)
 #4   0x927e56e0 in UpdateMenuEnabling() (UpdateMenuEnabling() + 272)
 #5   0x928134b0 in MenuBarTimer(__EventLoopTimer*, void*) (MenuBarTimer(__EventLoopTimer*, 
void*) + 92)
 #6   0x90194848 in __CFRunLoopDoTimer (__CFRunLoopDoTimer + 244)
 #7   0x90191ba8 in __CFRunLoopRun (__CFRunLoopRun + 1480)
 #8   0x901960bc in CFRunLoopRunSpecific (CFRunLoopRunSpecific + 328)
 #9   0x927d5ecc in RunCurrentEventLoopInMode (RunCurrentEventLoopInMode + 172)
 #10  0x927dc640 in ReceiveNextEventCommon (ReceiveNextEventCommon + 380)
 #11  0x9284d698 in ReceiveNextEventInMode (ReceiveNextEventInMode + 72)
 #12  0x0261d670 in Java_org_eclipse_swt_internal_carbon_OS_ReceiveNextEvent 
(Java_org_eclipse_swt_internal_carbon_OS_ReceiveNextEvent + 212)
 #13  0x0423fd4c in 0x423fd4c
 #14  0x04540a74 in 0x4540a74
 #15  0x03d97e10 in 0x3d97e10
 #16  0x03d97f90 in 0x3d97f90
 #17  0x03d98200 in 0x3d98200
 #18  0x03d97ea0 in 0x3d97ea0
 #19  0x03d9516c in 0x3d9516c
 #20  0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #21  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #22  0x948538e4 in JVM_IsNaN (JVM_IsNaN + 23316)
 #23  0x9487b234 in __floatdisf (__floatdisf + 3828)
 #24  0x948a9150 in JVM_InvokeMethod (JVM_InvokeMethod + 496)
 #25  0x03d9e5c0 in 0x3d9e5c0
 #26  0x03d97ea0 in 0x3d97ea0
 #27  0x03d97ea0 in 0x3d97ea0
 #28  0x03d98200 in 0x3d98200
 #29  0x03d97ea0 in 0x3d97ea0
 #30  0x03d97ea0 in 0x3d97ea0
 #31  0x03d97ea0 in 0x3d97ea0
 #32  0x03d9516c in 0x3d9516c
 #33  0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #34  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #35  0x948d06fc in JVM_UnloadLibrary (JVM_UnloadLibrary + 62364)
 #36  0x9499e79c in jio_vsnprintf (jio_vsnprintf + 66524)
 #37  0x00003448 in main (java_swt.c:362)
 #38  0x00002118 in _start (crt.c:267)
 #39  0x00001f98 in start (start + 48)

Thread 1:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x9487f80c in JNI_CreateJavaVM_Impl (JNI_CreateJavaVM_Impl + 17580)
 #3   0x9487f7a0 in JNI_CreateJavaVM_Impl (JNI_CreateJavaVM_Impl + 17472)
 #4   0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #5   0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 2:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7688 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4584)
 #3   0x947da944 in __divdi3 (__divdi3 + 20612)
 #4   0x947f0480 in JVM_GetMethodIxModifiers (JVM_GetMethodIxModifiers + 1264)
 #5   0x94897b8c in JVM_GetInterfaceVersion (JVM_GetInterfaceVersion + 97052)
 #6   0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #7   0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 3:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7608 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4456)
 #3   0x947a2034 in _mh_dylib_header (_mh_dylib_header + 8244)
 #4   0x947ab3a4 in __cmpdi2 (__cmpdi2 + 6820)
 #5   0x947a7ae8 in JVM_MonitorWait (JVM_MonitorWait + 264)
 #6   0x04499ca4 in 0x4499ca4
 #7   0x044a1560 in 0x44a1560
 #8   0x03d97f90 in 0x3d97f90
 #9   0x03d9516c in 0x3d9516c
 #10  0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #11  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #12  0x94818868 in JVM_Close (JVM_Close + 1208)
 #13  0x94829120 in JVM_Interrupt (JVM_Interrupt + 736)
 #14  0x948cdeac in JVM_UnloadLibrary (JVM_UnloadLibrary + 52044)
 #15  0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #16  0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #17  0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 4:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7608 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4456)
 #3   0x947a2034 in _mh_dylib_header (_mh_dylib_header + 8244)
 #4   0x947ab3a4 in __cmpdi2 (__cmpdi2 + 6820)
 #5   0x947a7ae8 in JVM_MonitorWait (JVM_MonitorWait + 264)
 #6   0x04499ca4 in 0x4499ca4
 #7   0x04211884 in 0x4211884
 #8   0x042115e0 in 0x42115e0
 #9   0x03d97ea0 in 0x3d97ea0
 #10  0x03d9516c in 0x3d9516c
 #11  0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #12  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #13  0x94818868 in JVM_Close (JVM_Close + 1208)
 #14  0x94829120 in JVM_Interrupt (JVM_Interrupt + 736)
 #15  0x948cdeac in JVM_UnloadLibrary (JVM_UnloadLibrary + 52044)
 #16  0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #17  0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #18  0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 5:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7688 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4584)
 #3   0x947b7130 in JVM_GetCPMethodSignatureUTF (JVM_GetCPMethodSignatureUTF + 6160)
 #4   0x947b72d0 in JVM_GetCPMethodSignatureUTF (JVM_GetCPMethodSignatureUTF + 6576)
 #5   0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #6   0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 6:
 #0   0x90014628 in semaphore_wait_trap (semaphore_wait_trap + 8)
 #1   0x948d2e80 in JVM_UnloadLibrary (JVM_UnloadLibrary + 72480)
 #2   0x948d2044 in JVM_UnloadLibrary (JVM_UnloadLibrary + 68836)
 #3   0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #4   0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #5   0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 7:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7608 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4456)
 #3   0x947da9a4 in __divdi3 (__divdi3 + 20708)
 #4   0x94811ce0 in JVM_GetFieldIxModifiers (JVM_GetFieldIxModifiers + 2912)
 #5   0x947fda2c in JVM_SocketAvailable (JVM_SocketAvailable + 4876)
 #6   0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #7   0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #8   0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 8:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7608 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4456)
 #3   0x947a2034 in _mh_dylib_header (_mh_dylib_header + 8244)
 #4   0x947ab3a4 in __cmpdi2 (__cmpdi2 + 6820)
 #5   0x947a7ae8 in JVM_MonitorWait (JVM_MonitorWait + 264)
 #6   0x03d9e5c0 in 0x3d9e5c0
 #7   0x03d97f90 in 0x3d97f90
 #8   0x03d97f90 in 0x3d97f90
 #9   0x03d982f0 in 0x3d982f0
 #10  0x03d9516c in 0x3d9516c
 #11  0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #12  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #13  0x94818868 in JVM_Close (JVM_Close + 1208)
 #14  0x94829120 in JVM_Interrupt (JVM_Interrupt + 736)
 #15  0x948cdeac in JVM_UnloadLibrary (JVM_UnloadLibrary + 52044)
 #16  0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #17  0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #18  0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 9:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7688 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4584)
 #3   0x947a2034 in _mh_dylib_header (_mh_dylib_header + 8244)
 #4   0x947ab3a4 in __cmpdi2 (__cmpdi2 + 6820)
 #5   0x947a7ae8 in JVM_MonitorWait (JVM_MonitorWait + 264)
 #6   0x04499ca4 in 0x4499ca4
 #7   0x0451ba8c in 0x451ba8c
 #8   0x03d9516c in 0x3d9516c
 #9   0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #10  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #11  0x94818868 in JVM_Close (JVM_Close + 1208)
 #12  0x94829120 in JVM_Interrupt (JVM_Interrupt + 736)
 #13  0x948cdeac in JVM_UnloadLibrary (JVM_UnloadLibrary + 52044)
 #14  0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #15  0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #16  0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 10:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7688 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4584)
 #3   0x947a2034 in _mh_dylib_header (_mh_dylib_header + 8244)
 #4   0x947ab3a4 in __cmpdi2 (__cmpdi2 + 6820)
 #5   0x947a7ae8 in JVM_MonitorWait (JVM_MonitorWait + 264)
 #6   0x03d9e5c0 in 0x3d9e5c0
 #7   0x03d97f90 in 0x3d97f90
 #8   0x041136dc in 0x41136dc
 #9   0x03d97ea0 in 0x3d97ea0
 #10  0x03d9516c in 0x3d9516c
 #11  0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #12  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #13  0x94818868 in JVM_Close (JVM_Close + 1208)
 #14  0x94829120 in JVM_Interrupt (JVM_Interrupt + 736)
 #15  0x948cdeac in JVM_UnloadLibrary (JVM_UnloadLibrary + 52044)
 #16  0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #17  0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #18  0x900247e8 in _pthread_body (_pthread_body + 40)

PPC Thread State:
  srr0: 0x927e04fc srr1: 0x0000f030                vrsave: 0x00000000
    cr: 0x84024222  xer: 0x20000000   lr: 0x927da78c  ctr: 0x90193720
    r0: 0x927de27c   r1: 0xbfffde30   r2: 0x00000030   r3: 0x00000000
    r4: 0xbfffde70   r5: 0x73686f72   r6: 0x00000000   r7: 0x00000002
    r8: 0x00000000   r9: 0xbfffddd2  r10: 0x00000000  r11: 0xbfffddd2
   r12: 0x0c583c90  r13: 0x00500ac0  r14: 0x00000000  r15: 0x00000001
   r16: 0x00000000  r17: 0x00000000  r18: 0xa01915f8  r19: 0x00000000
   r20: 0x00000000  r21: 0x00000000  r22: 0x0030fb00  r23: 0x0030fc18
   r24: 0xa019475c  r25: 0xa00011ac  r26: 0x00000194  r27: 0x0c5a7fc0
   r28: 0x0034e210  r29: 0x00000010  r30: 0xbfffdf80  r31: 0x927dfd6c
Created attachment 6987
Another crash

This has happened again for me but apparently from a different place
(SetupParamBlockForCIcon) so I attached a new log.
What version/build of eclipse are running? I believe the second stack you 
attached has been fixed already.
I am now using build 20031121
I haven't seen this happen again - perhaps the problem has been solved?
I believe the problem has been solved. Please reopen if you see it again.</WithStack>
    <WithOutStack>Eclipse 200311040800
osx: 10.3
power mac G5

Crash when customizing the perspective:

Crash log

**********

Host:       eden
Date/Time:  2003-11-05 22:56:04 +0000
OS Version: 10.3 (Build 7B85)

Command:    java_swt (/Users/channing/java/eclipse/Eclipse.app/Contents/MacOS/java_swt)
PID:        1697
Thread:     0

Exception:  EXC_BAD_ACCESS (0x0001)
Codes:      KERN_PROTECTION_FAILURE (0x0002) at 0x00000040

Thread 0 Crashed:
 #0   0x927e04fc in GetMenuSystemAttributes(MenuData*, unsigned long*) 
(GetMenuSystemAttributes(MenuData*, unsigned long*) + 0)
 #1   0x927de27c in FindNextMenuInRoot(IterPosition*, MenuData*) 
(FindNextMenuInRoot(IterPosition*, MenuData*) + 176)
 #2   0x927dfe40 in FindNextMenu(IterPosition*, RootMenus*) (FindNextMenu(IterPosition*, 
RootMenus*) + 228)
 #3   0x927e5df4 in MenuIterGetDataAtIndex(OpaqueMenuIteratorRef*, long) 
(MenuIterGetDataAtIndex(OpaqueMenuIteratorRef*, long) + 92)
 #4   0x927e56e0 in UpdateMenuEnabling() (UpdateMenuEnabling() + 272)
 #5   0x928134b0 in MenuBarTimer(__EventLoopTimer*, void*) (MenuBarTimer(__EventLoopTimer*, 
void*) + 92)
 #6   0x90194848 in __CFRunLoopDoTimer (__CFRunLoopDoTimer + 244)
 #7   0x90191ba8 in __CFRunLoopRun (__CFRunLoopRun + 1480)
 #8   0x901960bc in CFRunLoopRunSpecific (CFRunLoopRunSpecific + 328)
 #9   0x927d5ecc in RunCurrentEventLoopInMode (RunCurrentEventLoopInMode + 172)
 #10  0x927dc640 in ReceiveNextEventCommon (ReceiveNextEventCommon + 380)
 #11  0x9284d698 in ReceiveNextEventInMode (ReceiveNextEventInMode + 72)
 #12  0x0261d670 in Java_org_eclipse_swt_internal_carbon_OS_ReceiveNextEvent 
(Java_org_eclipse_swt_internal_carbon_OS_ReceiveNextEvent + 212)
 #13  0x0423fd4c in 0x423fd4c
 #14  0x04540a74 in 0x4540a74
 #15  0x03d97e10 in 0x3d97e10
 #16  0x03d97f90 in 0x3d97f90
 #17  0x03d98200 in 0x3d98200
 #18  0x03d97ea0 in 0x3d97ea0
 #19  0x03d9516c in 0x3d9516c
 #20  0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #21  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #22  0x948538e4 in JVM_IsNaN (JVM_IsNaN + 23316)
 #23  0x9487b234 in __floatdisf (__floatdisf + 3828)
 #24  0x948a9150 in JVM_InvokeMethod (JVM_InvokeMethod + 496)
 #25  0x03d9e5c0 in 0x3d9e5c0
 #26  0x03d97ea0 in 0x3d97ea0
 #27  0x03d97ea0 in 0x3d97ea0
 #28  0x03d98200 in 0x3d98200
 #29  0x03d97ea0 in 0x3d97ea0
 #30  0x03d97ea0 in 0x3d97ea0
 #31  0x03d97ea0 in 0x3d97ea0
 #32  0x03d9516c in 0x3d9516c
 #33  0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #34  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #35  0x948d06fc in JVM_UnloadLibrary (JVM_UnloadLibrary + 62364)
 #36  0x9499e79c in jio_vsnprintf (jio_vsnprintf + 66524)
 #37  0x00003448 in main (java_swt.c:362)
 #38  0x00002118 in _start (crt.c:267)
 #39  0x00001f98 in start (start + 48)

Thread 1:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x9487f80c in JNI_CreateJavaVM_Impl (JNI_CreateJavaVM_Impl + 17580)
 #3   0x9487f7a0 in JNI_CreateJavaVM_Impl (JNI_CreateJavaVM_Impl + 17472)
 #4   0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #5   0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 2:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7688 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4584)
 #3   0x947da944 in __divdi3 (__divdi3 + 20612)
 #4   0x947f0480 in JVM_GetMethodIxModifiers (JVM_GetMethodIxModifiers + 1264)
 #5   0x94897b8c in JVM_GetInterfaceVersion (JVM_GetInterfaceVersion + 97052)
 #6   0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #7   0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 3:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7608 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4456)
 #3   0x947a2034 in _mh_dylib_header (_mh_dylib_header + 8244)
 #4   0x947ab3a4 in __cmpdi2 (__cmpdi2 + 6820)
 #5   0x947a7ae8 in JVM_MonitorWait (JVM_MonitorWait + 264)
 #6   0x04499ca4 in 0x4499ca4
 #7   0x044a1560 in 0x44a1560
 #8   0x03d97f90 in 0x3d97f90
 #9   0x03d9516c in 0x3d9516c
 #10  0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #11  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #12  0x94818868 in JVM_Close (JVM_Close + 1208)
 #13  0x94829120 in JVM_Interrupt (JVM_Interrupt + 736)
 #14  0x948cdeac in JVM_UnloadLibrary (JVM_UnloadLibrary + 52044)
 #15  0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #16  0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #17  0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 4:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7608 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4456)
 #3   0x947a2034 in _mh_dylib_header (_mh_dylib_header + 8244)
 #4   0x947ab3a4 in __cmpdi2 (__cmpdi2 + 6820)
 #5   0x947a7ae8 in JVM_MonitorWait (JVM_MonitorWait + 264)
 #6   0x04499ca4 in 0x4499ca4
 #7   0x04211884 in 0x4211884
 #8   0x042115e0 in 0x42115e0
 #9   0x03d97ea0 in 0x3d97ea0
 #10  0x03d9516c in 0x3d9516c
 #11  0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #12  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #13  0x94818868 in JVM_Close (JVM_Close + 1208)
 #14  0x94829120 in JVM_Interrupt (JVM_Interrupt + 736)
 #15  0x948cdeac in JVM_UnloadLibrary (JVM_UnloadLibrary + 52044)
 #16  0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #17  0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #18  0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 5:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7688 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4584)
 #3   0x947b7130 in JVM_GetCPMethodSignatureUTF (JVM_GetCPMethodSignatureUTF + 6160)
 #4   0x947b72d0 in JVM_GetCPMethodSignatureUTF (JVM_GetCPMethodSignatureUTF + 6576)
 #5   0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #6   0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 6:
 #0   0x90014628 in semaphore_wait_trap (semaphore_wait_trap + 8)
 #1   0x948d2e80 in JVM_UnloadLibrary (JVM_UnloadLibrary + 72480)
 #2   0x948d2044 in JVM_UnloadLibrary (JVM_UnloadLibrary + 68836)
 #3   0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #4   0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #5   0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 7:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7608 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4456)
 #3   0x947da9a4 in __divdi3 (__divdi3 + 20708)
 #4   0x94811ce0 in JVM_GetFieldIxModifiers (JVM_GetFieldIxModifiers + 2912)
 #5   0x947fda2c in JVM_SocketAvailable (JVM_SocketAvailable + 4876)
 #6   0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #7   0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #8   0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 8:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7608 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4456)
 #3   0x947a2034 in _mh_dylib_header (_mh_dylib_header + 8244)
 #4   0x947ab3a4 in __cmpdi2 (__cmpdi2 + 6820)
 #5   0x947a7ae8 in JVM_MonitorWait (JVM_MonitorWait + 264)
 #6   0x03d9e5c0 in 0x3d9e5c0
 #7   0x03d97f90 in 0x3d97f90
 #8   0x03d97f90 in 0x3d97f90
 #9   0x03d982f0 in 0x3d982f0
 #10  0x03d9516c in 0x3d9516c
 #11  0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #12  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #13  0x94818868 in JVM_Close (JVM_Close + 1208)
 #14  0x94829120 in JVM_Interrupt (JVM_Interrupt + 736)
 #15  0x948cdeac in JVM_UnloadLibrary (JVM_UnloadLibrary + 52044)
 #16  0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #17  0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #18  0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 9:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7688 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4584)
 #3   0x947a2034 in _mh_dylib_header (_mh_dylib_header + 8244)
 #4   0x947ab3a4 in __cmpdi2 (__cmpdi2 + 6820)
 #5   0x947a7ae8 in JVM_MonitorWait (JVM_MonitorWait + 264)
 #6   0x04499ca4 in 0x4499ca4
 #7   0x0451ba8c in 0x451ba8c
 #8   0x03d9516c in 0x3d9516c
 #9   0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #10  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #11  0x94818868 in JVM_Close (JVM_Close + 1208)
 #12  0x94829120 in JVM_Interrupt (JVM_Interrupt + 736)
 #13  0x948cdeac in JVM_UnloadLibrary (JVM_UnloadLibrary + 52044)
 #14  0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #15  0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #16  0x900247e8 in _pthread_body (_pthread_body + 40)

Thread 10:
 #0   0x900075c8 in mach_msg_trap (mach_msg_trap + 8)
 #1   0x90007118 in mach_msg (mach_msg + 56)
 #2   0x947a7688 in JVM_GetClassAccessFlags (JVM_GetClassAccessFlags + 4584)
 #3   0x947a2034 in _mh_dylib_header (_mh_dylib_header + 8244)
 #4   0x947ab3a4 in __cmpdi2 (__cmpdi2 + 6820)
 #5   0x947a7ae8 in JVM_MonitorWait (JVM_MonitorWait + 264)
 #6   0x03d9e5c0 in 0x3d9e5c0
 #7   0x03d97f90 in 0x3d97f90
 #8   0x041136dc in 0x41136dc
 #9   0x03d97ea0 in 0x3d97ea0
 #10  0x03d9516c in 0x3d9516c
 #11  0x947ba0f8 in JVM_GetCPMethodClassNameUTF (JVM_GetCPMethodClassNameUTF + 2856)
 #12  0x947dbce8 in JVM_GetCPClassNameUTF (JVM_GetCPClassNameUTF + 2456)
 #13  0x94818868 in JVM_Close (JVM_Close + 1208)
 #14  0x94829120 in JVM_Interrupt (JVM_Interrupt + 736)
 #15  0x948cdeac in JVM_UnloadLibrary (JVM_UnloadLibrary + 52044)
 #16  0x948145d4 in JVM_FindClassFromClass (JVM_FindClassFromClass + 3092)
 #17  0x9496f9cc in JVM_UnloadLibrary (JVM_UnloadLibrary + 714348)
 #18  0x900247e8 in _pthread_body (_pthread_body + 40)

PPC Thread State:
  srr0: 0x927e04fc srr1: 0x0000f030                vrsave: 0x00000000
    cr: 0x84024222  xer: 0x20000000   lr: 0x927da78c  ctr: 0x90193720
    r0: 0x927de27c   r1: 0xbfffde30   r2: 0x00000030   r3: 0x00000000
    r4: 0xbfffde70   r5: 0x73686f72   r6: 0x00000000   r7: 0x00000002
    r8: 0x00000000   r9: 0xbfffddd2  r10: 0x00000000  r11: 0xbfffddd2
   r12: 0x0c583c90  r13: 0x00500ac0  r14: 0x00000000  r15: 0x00000001
   r16: 0x00000000  r17: 0x00000000  r18: 0xa01915f8  r19: 0x00000000
   r20: 0x00000000  r21: 0x00000000  r22: 0x0030fb00  r23: 0x0030fc18
   r24: 0xa019475c  r25: 0xa00011ac  r26: 0x00000194  r27: 0x0c5a7fc0
   r28: 0x0034e210  r29: 0x00000010  r30: 0xbfffdf80  r31: 0x927dfd6c
Created attachment 6987
Another crash

This has happened again for me but apparently from a different place
(SetupParamBlockForCIcon) so I attached a new log.
What version/build of eclipse are running? I believe the second stack you 
attached has been fixed already.
I am now using build 20031121
I haven't seen this happen again - perhaps the problem has been solved?
I believe the problem has been solved. Please reopen if you see it again.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46157" />
    <CreationDate amount="2003-11-05 20:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Merge not showing differences</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- working in HEAD stream,</Line>
          <Line>- select IActionDelegate.java (1.6)</Line>
          <Line>- Team &gt; Merge &gt; start point version: RCP_PRE_SPLIT (1.6) &gt; merge with</Line>
          <Line>version: RCP_MERGED_WITH_v20031105-pre-rcp-merge (1.6.10.1)</Line>
          <Line>- it shows no differences</Line>
          <Line>- however, there are differences (white space differences in Javadoc).</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>build I20031105 + team UI patch

- working in HEAD stream,
- select IActionDelegate.java (1.6)
- Team &gt; Merge &gt; start point version: RCP_PRE_SPLIT (1.6) &gt; merge with 
version: RCP_MERGED_WITH_v20031105-pre-rcp-merge (1.6.10.1)
- it shows no differences
- however, there are differences (white space differences in Javadoc).

First noticed this after trying the same merge on the whole project 
(org.eclipse.ui.workbench).  All other changes came in properly except this 
one, and another similar case for IWorkbenchPage.java.  

The IWorkbenchPage.java case was really strange.  In my workspace, it somehow 
got the 1.9.10.5 contents loaded (correct), but with a duplicate import 
(import org.eclipse.ui.activities.IActivationService;).  This does not appear 
in any of the revisions.  When I tried doing the merge separately on this file 
(after reloading from HEAD and using the same tags as above), it showed no 
differences.
The state of HEAD for project org.eclipse.ui.workbench at the time was the 
same as v20031105-pre-rcp-merge.

Couldn't reproduce this. We've added a couple of merge tests based on the PRs 
the UI found when split streaming the RCP work. Please re-open if other merge 
problems occur.</WithStack>
    <WithOutStack>build I20031105 + team UI patch

- working in HEAD stream,
- select IActionDelegate.java (1.6)
- Team &gt; Merge &gt; start point version: RCP_PRE_SPLIT (1.6) &gt; merge with 
version: RCP_MERGED_WITH_v20031105-pre-rcp-merge (1.6.10.1)
- it shows no differences
- however, there are differences (white space differences in Javadoc).

First noticed this after trying the same merge on the whole project 
(org.eclipse.ui.workbench).  All other changes came in properly except this 
one, and another similar case for IWorkbenchPage.java.  

The IWorkbenchPage.java case was really strange.  In my workspace, it somehow 
got the 1.9.10.5 contents loaded (correct), but with a duplicate import 
(import org.eclipse.ui.activities.IActivationService;).  This does not appear 
in any of the revisions.  When I tried doing the merge separately on this file 
(after reloading from HEAD and using the same tags as above), it showed no 
differences.
The state of HEAD for project org.eclipse.ui.workbench at the time was the 
same as v20031105-pre-rcp-merge.

Couldn't reproduce this. We've added a couple of merge tests based on the PRs 
the UI found when split streaming the RCP work. Please re-open if other merge 
problems occur.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46158" />
    <CreationDate amount="2003-11-05 20:35:00 -0500" />
    <DupId amount="69795" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Show in resource history not shown for incoming changes</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- did a regular sync</Line>
          <Line>- it had an incoming addition</Line>
          <Line>- tried to do a Show in Resource History, but it wasn't on the context menu</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>build I20031105 + latest team UI patch

- did a regular sync
- it had an incoming addition
- tried to do a Show in Resource History, but it wasn't on the context menu

Since this is a repository-only operation (aside from indicating which 
revision is loaded), it should also be available for incoming additions.
Actually has never been enabled yet in 3.0. We have to change the enablement 
code for these contributions to suppor the sync view nodes and work for non-
existing resources.
*** Bug 52521 has been marked as a duplicate of this bug. ***
*** Bug 53007 has been marked as a duplicate of this bug. ***
post 3.0. workaround is to use the new 'commit sets' layout in the sync view.


*** This bug has been marked as a duplicate of 69795 ***</WithStack>
    <WithOutStack>build I20031105 + latest team UI patch

- did a regular sync
- it had an incoming addition
- tried to do a Show in Resource History, but it wasn't on the context menu

Since this is a repository-only operation (aside from indicating which 
revision is loaded), it should also be available for incoming additions.
Actually has never been enabled yet in 3.0. We have to change the enablement 
code for these contributions to suppor the sync view nodes and work for non-
existing resources.
*** Bug 52521 has been marked as a duplicate of this bug. ***
*** Bug 53007 has been marked as a duplicate of this bug. ***
post 3.0. workaround is to use the new 'commit sets' layout in the sync view.


*** This bug has been marked as a duplicate of 69795 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46159" />
    <CreationDate amount="2003-11-05 20:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Merge update leaves line ending changes on binary files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="2">
      <Enumeration lines="11">
        <Lines>
          <Line>- org.eclipse.ui loaded from HEAD (tagged with v20031105-pre-rcp-merge)</Line>
          <Line>- merge with start point: PRE_RCP_STATE_1, merge point:</Line>
          <Line>RCP_MERGED_WITH_v20031105-pre-rcp-merge</Line>
          <Line>- it shows a bunch of changes in the sync view</Line>
          <Line>- Update on the project</Line>
          <Line>- when done, Compare With &gt; RCP_MERGED_WITH_v20031105-pre-rcp-merge</Line>
          <Line>- it shows changes to 4 of the schema files: exportWizards.exsd,</Line>
          <Line>importWizards.exsd, newWizards.exsd, popupMenus.exsd</Line>
          <Line>- the compare editors show changes, but only to whitespace at line ends</Line>
          <Line>- the lines in question have a trailing space</Line>
          <Line>- the schema files all indicate Binary</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="3">
        <Lines>
          <Line>- workspace: v20031104</Line>
          <Line>- start point: PRE_RCP_STATE_1</Line>
          <Line>- merge point: RCP_MERGED_WITH_v20031104</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>build I20031105 + team UI patch

- org.eclipse.ui loaded from HEAD (tagged with v20031105-pre-rcp-merge)
- merge with start point: PRE_RCP_STATE_1, merge point: 
RCP_MERGED_WITH_v20031105-pre-rcp-merge
- it shows a bunch of changes in the sync view
- Update on the project
- when done, Compare With &gt; RCP_MERGED_WITH_v20031105-pre-rcp-merge
- it shows changes to 4 of the schema files: exportWizards.exsd, 
importWizards.exsd, newWizards.exsd, popupMenus.exsd
- the compare editors show changes, but only to whitespace at line ends
- the lines in question have a trailing space
- the schema files all indicate Binary

Please let me know when you're done with this PR so I can change the format to 
ASCII.
Correction: not all lines had a trailing space.

Noticed the same problem in the result of merging org.eclipse.jface.
The .classpath and plugin.xml file show line ending changes on some, but not 
all, lines.
Unlike the schema files above, these files are ASCII -kkv.

For the merge of org.eclipse.jface, the 3 points were:
- workspace: v20031104
- start point: PRE_RCP_STATE_1
- merge point: RCP_MERGED_WITH_v20031104

Post 3.0
This bug report is old and we have change to using a client side merge.</WithStack>
    <WithOutStack>build I20031105 + team UI patch

- org.eclipse.ui loaded from HEAD (tagged with v20031105-pre-rcp-merge)
- merge with start point: PRE_RCP_STATE_1, merge point: 
RCP_MERGED_WITH_v20031105-pre-rcp-merge
- it shows a bunch of changes in the sync view
- Update on the project
- when done, Compare With &gt; RCP_MERGED_WITH_v20031105-pre-rcp-merge
- it shows changes to 4 of the schema files: exportWizards.exsd, 
importWizards.exsd, newWizards.exsd, popupMenus.exsd
- the compare editors show changes, but only to whitespace at line ends
- the lines in question have a trailing space
- the schema files all indicate Binary

Please let me know when you're done with this PR so I can change the format to 
ASCII.
Correction: not all lines had a trailing space.

Noticed the same problem in the result of merging org.eclipse.jface.
The .classpath and plugin.xml file show line ending changes on some, but not 
all, lines.
Unlike the schema files above, these files are ASCII -kkv.

For the merge of org.eclipse.jface, the 3 points were:
- workspace: v20031104
- start point: PRE_RCP_STATE_1
- merge point: RCP_MERGED_WITH_v20031104

Post 3.0
This bug report is old and we have change to using a client side merge.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46160" />
    <CreationDate amount="2003-11-05 20:52:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="minor" />
    <Summery>Absolute path in config files cause un-copyable Eclipse folder</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>(a) Use your current Eclipse install.  Go into that directory.</Line>
          <Line>(b) Copy the entire "eclipse" program directory to "eclipse2" or something similar.</Line>
          <Line>(c) In "eclipse2", run eclipse.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Eclipse stores the absolute path to the workspace and to projects in several
files (listed below).  Although this may help in some places, it means that the
eclipse folder as a whole can't be moved around (and it is, as far as I can
tell, the only thing preventing moving eclipse, with prefs and projects, from
one computer to another.

Reproduction Scenario:
(a) Use your current Eclipse install.  Go into that directory.
(b) Copy the entire "eclipse" program directory to "eclipse2" or something similar.
(c) In "eclipse2", run eclipse.

Most of the time when I do this, Eclipse comes up without as if just installed
-- no projects, and with a re-initialized set of preferences.  Sometimes it
works, but I don't know why -- I had it work the first N times I moved the
eclipse folder between directories/machines, but it no longer works at all.

As far as my best guess, if Eclipse didn't use absolute filenames in several
config files (listed below) this problem probably wouldn't happen.  If so,
there'd be no barrier to just copying Eclipse as a whole between machines -- a
big benefit when you want to move projects and preferences between machines.

Eclipse Version: 2.1.1
Build id: 200306271545

The files that use absolute directory paths are:

workspace/.metadata/.config/platform.cfg.metadata/v2Config1065210040915.xml
(and all other similar files in this directory)
Binary file workspace/.metadata/.registry matches

(The Component selected above is a guess -- I don't know if this is in the core
or somewhere else, but Bugzilla requires a component to be picked).
This seems to be a recent regression.  It was previously possible to move
workspaces and eclipse installs to different paths and it continued to work (I
actually rename eclipse install directories frequently to reflect the Id of the
build).

John, when you say "recent regression", what timeframe did you have in mind?
The bug is reported on

Eclipse Version: 2.1.1
Build id: 200306271545

and, to my knowledge, the code for saving update configuration has not changed 
for quite some time.

I think the full path in the .config directory is not affecting the proper 
running of eclipse, so I think the only issue is project migration.

Is there anything that the update/install component must do?
John, the previous comment was for you, I forgot to cc: you.
I just noticed that Aaron was "just guessing" that this is the cause. 

Aaron, this works for me.  I frequently move and rename Eclipse 2.1.1 installs
to other locations and continued to use them on the same workspaces.  Do you use
the "-data" flag to specify your workspaces? Are there errors in the log when
you open a workspace after moving?  Can you give steps to reproduce a problem?
I am wrong -- this is not a bug in eclipse.

The version I was copying lost the eclipse/workspace/.metadata folder -- it was
completely missing when I ran eclipse.  (Obviously eclipse shouldn't be expected
to run right when missing config files).

This is NOT a bug in eclipse -- I tracked down the lost folder to Windows XP's
"Send To Compressed (zipped) Folder".  Windows XP's built in Zip functionality
doesn't zip folders that start with a dot!  (Though it works fine on files that
start with a dot).

Sorry for the false bug report, I was operating under the assumption that zip
worked fine.</WithStack>
    <WithOutStack>Eclipse stores the absolute path to the workspace and to projects in several
files (listed below).  Although this may help in some places, it means that the
eclipse folder as a whole can't be moved around (and it is, as far as I can
tell, the only thing preventing moving eclipse, with prefs and projects, from
one computer to another.

Reproduction Scenario:
(a) Use your current Eclipse install.  Go into that directory.
(b) Copy the entire "eclipse" program directory to "eclipse2" or something similar.
(c) In "eclipse2", run eclipse.

Most of the time when I do this, Eclipse comes up without as if just installed
-- no projects, and with a re-initialized set of preferences.  Sometimes it
works, but I don't know why -- I had it work the first N times I moved the
eclipse folder between directories/machines, but it no longer works at all.

As far as my best guess, if Eclipse didn't use absolute filenames in several
config files (listed below) this problem probably wouldn't happen.  If so,
there'd be no barrier to just copying Eclipse as a whole between machines -- a
big benefit when you want to move projects and preferences between machines.

Eclipse Version: 2.1.1
Build id: 200306271545

The files that use absolute directory paths are:

workspace/.metadata/.config/platform.cfg.metadata/v2Config1065210040915.xml
(and all other similar files in this directory)
Binary file workspace/.metadata/.registry matches

(The Component selected above is a guess -- I don't know if this is in the core
or somewhere else, but Bugzilla requires a component to be picked).
This seems to be a recent regression.  It was previously possible to move
workspaces and eclipse installs to different paths and it continued to work (I
actually rename eclipse install directories frequently to reflect the Id of the
build).

John, when you say "recent regression", what timeframe did you have in mind?
The bug is reported on

Eclipse Version: 2.1.1
Build id: 200306271545

and, to my knowledge, the code for saving update configuration has not changed 
for quite some time.

I think the full path in the .config directory is not affecting the proper 
running of eclipse, so I think the only issue is project migration.

Is there anything that the update/install component must do?
John, the previous comment was for you, I forgot to cc: you.
I just noticed that Aaron was "just guessing" that this is the cause. 

Aaron, this works for me.  I frequently move and rename Eclipse 2.1.1 installs
to other locations and continued to use them on the same workspaces.  Do you use
the "-data" flag to specify your workspaces? Are there errors in the log when
you open a workspace after moving?  Can you give steps to reproduce a problem?
I am wrong -- this is not a bug in eclipse.

The version I was copying lost the eclipse/workspace/.metadata folder -- it was
completely missing when I ran eclipse.  (Obviously eclipse shouldn't be expected
to run right when missing config files).

This is NOT a bug in eclipse -- I tracked down the lost folder to Windows XP's
"Send To Compressed (zipped) Folder".  Windows XP's built in Zip functionality
doesn't zip folders that start with a dot!  (Though it works fine on files that
start with a dot).

Sorry for the false bug report, I was operating under the assumption that zip
worked fine.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46161" />
    <CreationDate amount="2003-11-05 21:11:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Not enought detail in error for when a resource exists with a different case</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341072071">
        <Exception>org.eclipse.core.internal.resources.ResourceException</Exception>
        <Reason>A resource exists with 
a different case: /Project/bin/com/package/package.</Reason>
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.resources.Resource.checkDoesNotExist(Resource.java:269)</Frame>
          <Frame depth="1">org.eclipse.core.internal.resources.Folder.assertCreateRequirements(Folder.java:23)</Frame>
          <Frame depth="2">org.eclipse.core.internal.resources.Folder.create(Folder.java:84)</Frame>
          <Frame depth="3">org.eclipse.core.internal.resources.Folder.create(Folder.java:114)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.createFolder(AbstractImageBuilder.java:253)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.builder.BatchImageBuilder$3.visit(BatchImageBuilder.java:205)</Frame>
          <Frame depth="6">org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:52)</Frame>
          <Frame depth="7">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:76)</Frame>
          <Frame depth="8">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="9">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="10">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="11">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="12">org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:80)</Frame>
          <Frame depth="13">org.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:119)</Frame>
          <Frame depth="14">org.eclipse.core.internal.resources.Resource.accept(Resource.java:62)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.core.builder.BatchImageBuilder.copyExtraResourcesBack(BatchImageBuilder.java:170)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders(BatchImageBuilder.java:113)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:37)</Frame>
          <Frame depth="18">org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:211)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:134)</Frame>
          <Frame depth="20">org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:475)</Frame>
          <Frame depth="21">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1018)</Frame>
          <Frame depth="22">org.eclipse.core.runtime.Platform.run(Platform.java:461)</Frame>
          <Frame depth="23">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:130)</Frame>
          <Frame depth="24">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:201)</Frame>
          <Frame depth="25">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:156)</Frame>
          <Frame depth="26">org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:182)</Frame>
          <Frame depth="27">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1018)</Frame>
          <Frame depth="28">org.eclipse.core.runtime.Platform.run(Platform.java:461)</Frame>
          <Frame depth="29">org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:185)</Frame>
          <Frame depth="30">org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:219)</Frame>
          <Frame depth="31">org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:247)</Frame>
          <Frame depth="32">org.eclipse.core.internal.resources.Workspace.build(Workspace.java:172)</Frame>
          <Frame depth="33">org.eclipse.ui.actions.GlobalBuildAction$1.run(GlobalBuildAction.java:174)</Frame>
          <Frame depth="34">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When you get a Error showing in your problems list of:

The project was not built due to "A resource exists with a different 
case: /Project/bin/com/package/package.". Fix the problem, then try refreshing 
this project and rebuilding it since it may be inconsistent.

There is not enough information to guide the developer at to exactly which 
file is causing the problem....  the "On Resource" just points to the Project, 
but it doesn't identify the current resource that was causing Eclipse to 
attempt to create the folder, which would GREATLY improve the developers 
chances of fixing the problem in minutes, not hours on a large scale project.

!ENTRY org.eclipse.jdt.core 4 4 Nov 05, 2003 17:59:15.640
!MESSAGE JavaBuilder handling ImageBuilderInternalException
!STACK 1
org.eclipse.core.internal.resources.ResourceException: A resource exists with 
a different case: /Project/bin/com/package/package.
	at org.eclipse.core.internal.resources.Resource.checkDoesNotExist
(Resource.java:269)
	at org.eclipse.core.internal.resources.Folder.assertCreateRequirements
(Folder.java:23)
	at org.eclipse.core.internal.resources.Folder.create(Folder.java:84)
	at org.eclipse.core.internal.resources.Folder.create(Folder.java:114)
	at 
org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.createFolder
(AbstractImageBuilder.java:253)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder$3.visit
(BatchImageBuilder.java:205)
	at org.eclipse.core.internal.resources.Resource$1.visitElement
(Resource.java:52)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:76)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:80)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:80)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:80)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:80)
	at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration
(ElementTreeIterator.java:80)
	at org.eclipse.core.internal.watson.ElementTreeIterator.iterate
(ElementTreeIterator.java:119)
	at org.eclipse.core.internal.resources.Resource.accept
(Resource.java:62)
	at 
org.eclipse.jdt.internal.core.builder.BatchImageBuilder.copyExtraResourcesBack
(BatchImageBuilder.java:170)
	at 
org.eclipse.jdt.internal.core.builder.BatchImageBuilder.cleanOutputFolders
(BatchImageBuilder.java:113)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build
(BatchImageBuilder.java:37)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll
(JavaBuilder.java:211)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build
(JavaBuilder.java:134)
	at org.eclipse.core.internal.events.BuildManager$2.run
(BuildManager.java:475)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1018)
	at org.eclipse.core.runtime.Platform.run(Platform.java:461)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:130)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:201)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:156)
	at org.eclipse.core.internal.events.BuildManager$1.run
(BuildManager.java:182)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1018)
	at org.eclipse.core.runtime.Platform.run(Platform.java:461)
	at org.eclipse.core.internal.events.BuildManager.basicBuild
(BuildManager.java:185)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop
(BuildManager.java:219)
	at org.eclipse.core.internal.events.BuildManager.build
(BuildManager.java:247)
	at org.eclipse.core.internal.resources.Workspace.build
(Workspace.java:172)
	at org.eclipse.ui.actions.GlobalBuildAction$1.run
(GlobalBuildAction.java:174)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
!ENTRY org.eclipse.core.resources 4 275 Nov 05, 2003 17:59:15.640
!MESSAGE A resource exists with a different 
case: /Project/bin/com/package/package.
Which drop/release are you using?
You do have the path of the conflicting resources 'com/package/package'. Is it 
not straight forward to do a case-insensitive search for declarations of the 
package/type?

We consider this problem to be a fatal build case and want it associated with 
the project so the user sees it. It may be filtered in the problems view if we 
attach it to a single resource (when there can be multiple conflicting 
resources).
Please reopen if the above note is not sufficient.</WithStack>
    <WithOutStack>When you get a Error showing in your problems list of:

The project was not built due to "A resource exists with a different 
case: /Project/bin/com/package/package.". Fix the problem, then try refreshing 
this project and rebuilding it since it may be inconsistent.

There is not enough information to guide the developer at to exactly which 
file is causing the problem....  the "On Resource" just points to the Project, 
but it doesn't identify the current resource that was causing Eclipse to 
attempt to create the folder, which would GREATLY improve the developers 
chances of fixing the problem in minutes, not hours on a large scale project.

!ENTRY org.eclipse.jdt.core 4 4 Nov 05, 2003 17:59:15.640
!MESSAGE JavaBuilder handling ImageBuilderInternalException
!STACK 1

!ENTRY org.eclipse.core.resources 4 275 Nov 05, 2003 17:59:15.640
!MESSAGE A resource exists with a different 
case: /Project/bin/com/package/package.
Which drop/release are you using?
You do have the path of the conflicting resources 'com/package/package'. Is it 
not straight forward to do a case-insensitive search for declarations of the 
package/type?

We consider this problem to be a fatal build case and want it associated with 
the project so the user sees it. It may be filtered in the problems view if we 
attach it to a single resource (when there can be multiple conflicting 
resources).
Please reopen if the above note is not sufficient.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46162" />
    <CreationDate amount="2003-11-05 21:14:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="enhancement" />
    <Summery>[Dialogs] ARROW_DOWN in TwoPaneElementSelector should navigate through all choices</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="13">
      <source_code type="assignment">
        <location start="674" end="738" />
        <code>Composite contents = (Composite) super.createDialogArea(parent);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="739" end="767" />
        <code>createMessageArea(contents);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="768" end="795" />
        <code>createFilterText(contents);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="797" end="836" />
        <code>createLabel(contents, fUpperListLabel);</code>
      </source_code>
      <source_code type="assignment">
        <location start="837" end="888" />
        <code>~ FilteredList list = createFilteredList(contents);</code>
      </source_code>
      <source_code type="functioncall">
        <location start="889" end="928" />
        <code>createLabel(contents, fLowerListLabel);</code>
      </source_code>
      <source_code type="assignment">
        <location start="929" end="977" />
        <code>~ final Table table = createLowerList(contents);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="979" end="1018" />
        <code>+list.addKeyListener(new KeyAdapter() {</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1019" end="1413" />
        <code>+	public void keyPressed(KeyEvent e) {
+		if (e.keyCode == 16777217) {
+			if (table.getSelectionIndex() &gt; 0) {
+				table.setSelection(table.getSelectionIndex() - 
1);
+				e.doit = false;
+			}				
+		}
+		if (e.keyCode == 16777218) {
+			if (table.getSelectionIndex() &lt; table.getItemCount() - 
1) {
+				table.setSelection(table.getSelectionIndex() + 
1);
+				e.doit = false;
+			}
+		}
+	}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="1767" end="1812" />
        <code>/**
 * Adds a key listener from the list
 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1813" end="1898" />
        <code>public void addKeyListener(KeyListener listener) {
	fList.addKeyListener(listener);
}</code>
      </source_code>
      <source_code type="multicomment">
        <location start="1899" end="1946" />
        <code>/**
 * Removes a key listener from the list
 */</code>
      </source_code>
      <source_code type="functiondef">
        <location start="1947" end="2038" />
        <code>public void removeKeyListener(KeyListener listener) {
	fList.removeKeyListener(listener);
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Pressing down arrow in the type dialog throw focus from the Text control to 
the "Matching Types" list, which makes it unnecessary to press TAB.  Pretty 
cool, so let's take it one step further.  When I type "Keystr", DOWN will 
select "javax.swing.Keystroke".  The next DOWN_ARROW should 
select "org.eclipse.ui.Keystroke", thereby allowing all matches to be 
enumerated with just one key.

Alternatively, collapse the two lists into a single list or table.
The dialog we are using is provided by Platform/UI. 
Deb has looked into this one in the past
Post 3.0
Reopening now that 3.0 has shipped
This took 5 minutes to do :-).  In TwoPaneElementSelector#createDialogArea:

Composite contents = (Composite) super.createDialogArea(parent);
createMessageArea(contents);
createFilterText(contents);

createLabel(contents, fUpperListLabel);
~ FilteredList list = createFilteredList(contents);
createLabel(contents, fLowerListLabel);
~ final Table table = createLowerList(contents);

+list.addKeyListener(new KeyAdapter() {
+	public void keyPressed(KeyEvent e) {
+		if (e.keyCode == 16777217) {
+			if (table.getSelectionIndex() &gt; 0) {
+				table.setSelection(table.getSelectionIndex() - 
1);
+				e.doit = false;
+			}				
+		}
+		if (e.keyCode == 16777218) {
+			if (table.getSelectionIndex() &lt; table.getItemCount() - 
1) {
+				table.setSelection(table.getSelectionIndex() + 
1);
+				e.doit = false;
+			}
+		}
+	}


And in FilteredList, you need to override addKeyListener and removeKeyListener 
so that they are forwarded to the fList.
replace magic numbers with:
SWT.ARROW_UP
SWT.ARROW_DOWN
Please increase the priority since I have provided the actual fix itself.  You 
just need to review and commit the changes.

In case it wasn't obvious, in FilteredList, add:

/**
 * Adds a key listener from the list
 */
public void addKeyListener(KeyListener listener) {
	fList.addKeyListener(listener);
}
/**
 * Removes a key listener from the list
 */
public void removeKeyListener(KeyListener listener) {
	fList.removeKeyListener(listener);
}

Billy has moved teams.
The Open Type dialog has been changed to use a single list.

TwoPaneElementSelector is API so I'm sure it still exists, no?
Anyway, who cares. Thanks (JDT?) for the improved dialog.
It is still API, but I was also concerned about the change.  When there's more
than one item in the middle pane, you don't want up/down affecting the lower pane.

This problem is still annoying me when trying to open a plugin.xml file.
Sorry, I disagree with having a different mode for the behaviour of up/down arrow based on the number of items in the list.

Note that there is also work going on to make Open Resource work more like Open Type (i.e. using a single pane), which may address the problem.</WithStack>
    <WithOutStack>Pressing down arrow in the type dialog throw focus from the Text control to 
the "Matching Types" list, which makes it unnecessary to press TAB.  Pretty 
cool, so let's take it one step further.  When I type "Keystr", DOWN will 
select "javax.swing.Keystroke".  The next DOWN_ARROW should 
select "org.eclipse.ui.Keystroke", thereby allowing all matches to be 
enumerated with just one key.

Alternatively, collapse the two lists into a single list or table.
The dialog we are using is provided by Platform/UI. 
Deb has looked into this one in the past
Post 3.0
Reopening now that 3.0 has shipped
This took 5 minutes to do :-).  In TwoPaneElementSelector#createDialogArea:

Composite contents = (Composite) super.createDialogArea(parent);
createMessageArea(contents);
createFilterText(contents);

createLabel(contents, fUpperListLabel);
~ FilteredList list = createFilteredList(contents);
createLabel(contents, fLowerListLabel);
~ final Table table = createLowerList(contents);

+list.addKeyListener(new KeyAdapter() {
+	public void keyPressed(KeyEvent e) {
+		if (e.keyCode == 16777217) {
+			if (table.getSelectionIndex() &gt; 0) {
+				table.setSelection(table.getSelectionIndex() - 
1);
+				e.doit = false;
+			}				
+		}
+		if (e.keyCode == 16777218) {
+			if (table.getSelectionIndex() &lt; table.getItemCount() - 
1) {
+				table.setSelection(table.getSelectionIndex() + 
1);
+				e.doit = false;
+			}
+		}
+	}


And in FilteredList, you need to override addKeyListener and removeKeyListener 
so that they are forwarded to the fList.
replace magic numbers with:
SWT.ARROW_UP
SWT.ARROW_DOWN
Please increase the priority since I have provided the actual fix itself.  You 
just need to review and commit the changes.

In case it wasn't obvious, in FilteredList, add:

/**
 * Adds a key listener from the list
 */
public void addKeyListener(KeyListener listener) {
	fList.addKeyListener(listener);
}
/**
 * Removes a key listener from the list
 */
public void removeKeyListener(KeyListener listener) {
	fList.removeKeyListener(listener);
}

Billy has moved teams.
The Open Type dialog has been changed to use a single list.

TwoPaneElementSelector is API so I'm sure it still exists, no?
Anyway, who cares. Thanks (JDT?) for the improved dialog.
It is still API, but I was also concerned about the change.  When there's more
than one item in the middle pane, you don't want up/down affecting the lower pane.

This problem is still annoying me when trying to open a plugin.xml file.
Sorry, I disagree with having a different mode for the behaviour of up/down arrow based on the number of items in the list.

Note that there is also work going on to make Open Resource work more like Open Type (i.e. using a single pane), which may address the problem.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46163" />
    <CreationDate amount="2003-11-05 21:40:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Add Remove All to sync view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>build I20031105 + team UI patch

After completing the RCP merge, I was left with a handful of merges in the 
sync view.  To clean them up, I had to select them one-by-one and choose 
remove.  It would be helpful to have a Remove All action.

Suggest putting Remove and Remove All in the view menu, but leaving only 
Remove on the toolbar (I don't expect Remove All to be frequently used).
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>build I20031105 + team UI patch

After completing the RCP merge, I was left with a handful of merges in the 
sync view.  To clean them up, I had to select them one-by-one and choose 
remove.  It would be helpful to have a Remove All action.

Suggest putting Remove and Remove All in the view menu, but leaving only 
Remove on the toolbar (I don't expect Remove All to be frequently used).
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46164" />
    <CreationDate amount="2003-11-05 22:31:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="IDE" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P4" />
    <bug_severity amount="minor" />
    <Summery>[Tasks] Go To enabled for non-file markers</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>build I20031105 

Go To in the Tasks view is enabled even for a manually created task.
It should only be enabled for tasks on files.
Should also review the handling of this in IDE.openEditor(IMarker, ...).

Created attachment 79041
Patch to disable the action if all of the selected markers do not have an associated IFile.

(In reply to comment #1)
&gt; Should also review the handling of this in IDE.openEditor(IMarker, ...).

It seems that it fails silently by logging the fact that the IMarker's corresponding IResource isn't an IFile.
Fixed in M3 in both the problems view and the new markers view.
Verified in I20071029-0100</WithStack>
    <WithOutStack>build I20031105 

Go To in the Tasks view is enabled even for a manually created task.
It should only be enabled for tasks on files.
Should also review the handling of this in IDE.openEditor(IMarker, ...).

Created attachment 79041
Patch to disable the action if all of the selected markers do not have an associated IFile.

(In reply to comment #1)
&gt; Should also review the handling of this in IDE.openEditor(IMarker, ...).

It seems that it fails silently by logging the fact that the IMarker's corresponding IResource isn't an IFile.
Fixed in M3 in both the problems view and the new markers view.
Verified in I20071029-0100</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46165" />
    <CreationDate amount="2003-11-05 22:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-parser" />
    <Version amount="2.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>fields referenced in constructor chains are not called back upon</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functioncall">
        <location start="0" end="33" />
        <code>class A { int myX; A( int x ); };</code>
      </source_code>
      <source_code type="functiondef">
        <location start="34" end="62" />
        <code>A::A( int x ) : myX( x ) { }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>class A { int myX; A( int x ); };
A::A( int x ) : myX( x ) { }
Resolved in HEAD &amp; 1_2.</WithStack>
    <WithOutStack>class A { int myX; A( int x ); };
A::A( int x ) : myX( x ) { }
Resolved in HEAD &amp; 1_2.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46166" />
    <CreationDate amount="2003-11-05 22:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Compiler Error: "y can not be resolved" in comment(?)</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="3">
      <source_code type="multicomment">
        <location start="0" end="351" />
        <code>/* The next peace of code produces Compiler Error messages:
 *  1. Invalid Unicode
 *  2. nvalidUnicode cannot become resolvewd (or ....) 
 *  3. y can not be resolved
 * I think only the first error should become reported, because all others
 * (possible very much) confuses me (and perhaps other persons)
 * Bug Seven?
 *
 * Kinds regards
 * mle
 */</code>
      </source_code>
      <source_code type="multicomment">
        <location start="352" end="426" />
        <code>/**
 * .\uInvalidUnicode converts comment to none-comment 
 * int x=y;
 */</code>
      </source_code>
      <source_code type="functioncall">
        <location start="652" end="703" />
        <code>are some (at least one) bugs fixed in the compiler;</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>/* The next peace of code produces Compiler Error messages:
 *  1. Invalid Unicode
 *  2. nvalidUnicode cannot become resolvewd (or ....) 
 *  3. y can not be resolved
 * I think only the first error should become reported, because all others
 * (possible very much) confuses me (and perhaps other persons)
 * Bug Seven?
 *
 * Kinds regards
 * mle
 */
/**
 * .\uInvalidUnicode converts comment to none-comment 
 * int x=y;
 */
I can only reproduce the invalid unicode in comment which is legite.
Sorry I forget to note the version I use:
  linux_i386.eclipse_gtk_2003_10_10 integration build.

Yesterday I tried the newest intergration build and there
are some (at least one) bugs fixed in the compiler;
but the new version debugpane is too buggy for me, 
so I stopped using it. Perhaps this bug is fixed also in 
the newest release.

Sorry for my bug report on old version.

PS: I read a little bit in the sources of
  
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/jdt-core-home/r3.0/main.html#updates

and it seams it exists a good peace of Java 1.5 language features
in the compiler.
When are they useable? I tried to compile a template, but it doesn't work.
1.5 support is in progress, we will broadcast once we reach some decent state. 
This isn't achieved yet. We have a grammar and some of the nodes created, but 
not supported yet.

The unicode issue is a JLS requirement (JLS 3.2) or see bug 6677.
Does the invalid reference occur if you remove the invalid unicode ?



&gt;The unicode issue is a JLS requirement (JLS 3.2) or see bug 6677.
I know: first lex, then parse the JavaCode or something like that .. .
&gt; Does the invalid reference occur if you remove the invalid unicode ?
No: If I remove the invalid unicode, or insert an valid one everything 
is ok.
Btw: I discovered this (fixed) bug as I inserted ca. 100 lines of a 
Windows batch file in a comment: I got dozend of compilaton errors beyond
an invalid unicode.
Is it ok to close now ?
Yes, please close it. (Btw: (--bugcount) == 6 ;-)
Closing, as reporter cannot reproduce either on latest.</WithStack>
    <WithOutStack>/* The next peace of code produces Compiler Error messages:
 *  1. Invalid Unicode
 *  2. nvalidUnicode cannot become resolvewd (or ....) 
 *  3. y can not be resolved
 * I think only the first error should become reported, because all others
 * (possible very much) confuses me (and perhaps other persons)
 * Bug Seven?
 *
 * Kinds regards
 * mle
 */
/**
 * .\uInvalidUnicode converts comment to none-comment 
 * int x=y;
 */
I can only reproduce the invalid unicode in comment which is legite.
Sorry I forget to note the version I use:
  linux_i386.eclipse_gtk_2003_10_10 integration build.

Yesterday I tried the newest intergration build and there
are some (at least one) bugs fixed in the compiler;
but the new version debugpane is too buggy for me, 
so I stopped using it. Perhaps this bug is fixed also in 
the newest release.

Sorry for my bug report on old version.

PS: I read a little bit in the sources of
  
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/jdt-core-home/r3.0/main.html#updates

and it seams it exists a good peace of Java 1.5 language features
in the compiler.
When are they useable? I tried to compile a template, but it doesn't work.
1.5 support is in progress, we will broadcast once we reach some decent state. 
This isn't achieved yet. We have a grammar and some of the nodes created, but 
not supported yet.

The unicode issue is a JLS requirement (JLS 3.2) or see bug 6677.
Does the invalid reference occur if you remove the invalid unicode ?



&gt;The unicode issue is a JLS requirement (JLS 3.2) or see bug 6677.
I know: first lex, then parse the JavaCode or something like that .. .
&gt; Does the invalid reference occur if you remove the invalid unicode ?
No: If I remove the invalid unicode, or insert an valid one everything 
is ok.
Btw: I discovered this (fixed) bug as I inserted ca. 100 lines of a 
Windows batch file in a comment: I got dozend of compilaton errors beyond
an invalid unicode.
Is it ok to close now ?
Yes, please close it. (Btw: (--bugcount) == 6 ;-)
Closing, as reporter cannot reproduce either on latest.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46167" />
    <CreationDate amount="2003-11-06 00:01:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[Perspectives] Window &gt; Save Perspective As... is broken</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="8">
        <Lines>
          <Line>- in resource perspective,</Line>
          <Line>- Window &gt; Save Perspective As...</Line>
          <Line>- enter a new name</Line>
          <Line>- OK</Line>
          <Line>- it seems to work</Line>
          <Line>- Open Perspective &gt; Other...</Line>
          <Line>- it does not show up.</Line>
          <Line>Also, the window title is not updated on save.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="CLOSED" />
    <resolution amount="FIXED" />
    <WithStack>build I20031115 + RCP changes

- in resource perspective,
- Window &gt; Save Perspective As...
- enter a new name
- OK
- it seems to work
- Open Perspective &gt; Other...
- it does not show up.
Also, the window title is not updated on save.

Although the newly created perspective is in the perspective registry, it's 
getting filtered out in PerspContentProvider by the activity-based filtering 
(since it's not coming from an extension).

Filed bug 46388 for the window title problem.
Created attachment 6727
Patch for org.eclipse.ui.workbench

Only filters if the given perspective is supplied by the registry (ie: not
custom).
Fix submitted by Tod
Closed.</WithStack>
    <WithOutStack>build I20031115 + RCP changes

- in resource perspective,
- Window &gt; Save Perspective As...
- enter a new name
- OK
- it seems to work
- Open Perspective &gt; Other...
- it does not show up.
Also, the window title is not updated on save.

Although the newly created perspective is in the perspective registry, it's 
getting filtered out in PerspContentProvider by the activity-based filtering 
(since it's not coming from an extension).

Filed bug 46388 for the window title problem.
Created attachment 6727
Patch for org.eclipse.ui.workbench

Only filters if the given perspective is supplied by the registry (ie: not
custom).
Fix submitted by Tod
Closed.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46168" />
    <CreationDate amount="2003-11-06 01:26:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>fork() methods should use jobs</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>BreakpointManager.fork(ISchedulingRule, IWorkspaceRunnable),
JavaBreakpoint#fork(IWorkspaceRunnable) and
JavaModelListener#(ISchedulingRule, IWorkspaceRunnable)
should use the job mechanisme instead of created new threads.
True.
Done.
I replaced BreakpointManager#fork() by a job.
JavaBreakpiont#fork() is no more.
JavaModelListener was removed when I implemented the refactoring support for the
breakpoints.
Please verify, Darin W.
Verified</WithStack>
    <WithOutStack>BreakpointManager.fork(ISchedulingRule, IWorkspaceRunnable),
JavaBreakpoint#fork(IWorkspaceRunnable) and
JavaModelListener#(ISchedulingRule, IWorkspaceRunnable)
should use the job mechanisme instead of created new threads.
True.
Done.
I replaced BreakpointManager#fork() by a job.
JavaBreakpiont#fork() is no more.
JavaModelListener was removed when I implemented the refactoring support for the
breakpoints.
Please verify, Darin W.
Verified</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46169" />
    <CreationDate amount="2003-11-06 03:39:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="PDE" />
    <component amount="UI" />
    <Version amount="2.1.1" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>next and previous buttons for "properties for error" dialog</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>In the error log viewer:

When scanning the details of the error log, it takes 
a lot of "open window, close window, open window".

Adding "next error" "previous error" buttons would make it a lot easier.

Thanks.
This one was already addressed in the 3.0 stream.
You can view the details of an error without the need to open a dialog, by 
selecting 'Show details' from the view's drop down menu.</WithStack>
    <WithOutStack>In the error log viewer:

When scanning the details of the error log, it takes 
a lot of "open window, close window, open window".

Adding "next error" "previous error" buttons would make it a lot easier.

Thanks.
This one was already addressed in the 3.0 stream.
You can view the details of an error without the need to open a dialog, by 
selecting 'Show details' from the view's drop down menu.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46170" />
    <CreationDate amount="2003-11-06 04:01:00 -0500" />
    <DupId amount="43603" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Use quickdiff against CVS information to create a simple way to navigate current work</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- Easily navigate files that have been changed</Line>
          <Line>- Easily navigate the spots within the files where changes have been made</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>It would be nice to somehow use the quickdiff against CVS information to cut 
down on amount of mouse-jockying to navigate the source code. 

- Easily navigate files that have been changed
- Easily navigate the spots within the files where changes have been made

Navigating the source code is a high frequency activity.
The navigation problems can be somewhat addressed by setting up the navigation 
preferences (e.g. the up/down arrows in the java editor) to consider diff 
changes. However, it's really mouse intensive to show/merge the changes. I've 
talked to Tom about this already and understand that this should be improved.
see also bug 43603 
I suggest to close this bug and continue the discussion in bug 43603, as some of
the points mentioned there already cover the issues mentioned in comment 0. 

closing as dup according to comment 3

*** This bug has been marked as a duplicate of 43603 ***</WithStack>
    <WithOutStack>It would be nice to somehow use the quickdiff against CVS information to cut 
down on amount of mouse-jockying to navigate the source code. 

- Easily navigate files that have been changed
- Easily navigate the spots within the files where changes have been made

Navigating the source code is a high frequency activity.
The navigation problems can be somewhat addressed by setting up the navigation 
preferences (e.g. the up/down arrows in the java editor) to consider diff 
changes. However, it's really mouse intensive to show/merge the changes. I've 
talked to Tom about this already and understand that this should be improved.
see also bug 43603 
I suggest to close this bug and continue the discussion in bug 43603, as some of
the points mentioned there already cover the issues mentioned in comment 0. 

closing as dup according to comment 3

*** This bug has been marked as a duplicate of 43603 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46171" />
    <CreationDate amount="2003-11-06 04:10:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>[Comments] Inconsistent handling of comments adjacent to members</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="2840" end="3314" />
        <code>public class Test2 {

///////////////////////////////////////////////////
//            METHODS
///////////////////////////////////////////////////

	public void preceding () {}

	// moveTest before
		 
	/** 
	 * moveTest doc 
	 */
	
	public void moveTest () {}
	
	// moveTest after
	
	/** 
	 * succeeding doc 
	 */
	
	public void succeeding () {}

///////////////////////////////////////////////////
//            -----
///////////////////////////////////////////////////
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="4">
      <Enumeration lines="15">
        <Lines>
          <Line>(a) The Cut and Delete commands in the Members View removes all preceding</Line>
          <Line>comments not separated from the deleted member declaration with at least on</Line>
          <Line>blank line, and all succeeding comments separated from the next member with at</Line>
          <Line>least on blank line. Javadoc comments are treated differently. However if the</Line>
          <Line>member is a method and the only member of the class, all preceding comments are</Line>
          <Line>removed but no succeeding ones.</Line>
          <Line />
          <Line>(b) The Show Source of Selected Element Only text editor mode will show all</Line>
          <Line>comments preceding the selected member in addition to the member declaration.</Line>
          <Line />
          <Line>(c) Drag &amp; drop move of a member into classes and interfaces copies all</Line>
          <Line>preceding comments to the receiver but removes some preceding ones and some</Line>
          <Line>succeeding ones from the provider. Exactly which comments that are thereby lost</Line>
          <Line>or duplicated is dependent on style (/**, /*, //) and the use of blank lines.</Line>
          <Line>The behavior gives an impression of a mix of (a) and (b) above.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="20">
        <Lines>
          <Line>(a)  What it's about is knowing and being able to control which comments</Line>
          <Line>belong, and which comments do not belong, to a given class member.</Line>
          <Line />
          <Line>(b)  One reliable source of such knowledge should naturally be the "Show</Line>
          <Line>source of selected element only" editor mode. It's a bit closer at hand to the</Line>
          <Line>average user than astview :-) (thanks for the screen dump though)</Line>
          <Line />
          <Line>(c)  This could be end of story were it not for the need to support trailing</Line>
          <Line>comments and file adornments. By the latter I mean comments not connected to</Line>
          <Line>any method and thus invisible to users of the "Show source of selected element</Line>
          <Line>only" editor mode. Without these disturbing notions, all comments preceding a</Line>
          <Line>member would simply and necessarily belong to it; however with them, comes the</Line>
          <Line>necessity of more or less complicated heuristics.</Line>
          <Line />
          <Line>(d)  Because other peoples obnoxious insistence on using their own source code</Line>
          <Line>conventions, allowing for an appropriate identification of trailing comments</Line>
          <Line>and file adornments does require a degree of adaptivity. My conclusion is</Line>
          <Line>that "User preferences" has to be extended with a section on this. As a side</Line>
          <Line>effect, such settings would catch the user's attention and make her conscious</Line>
          <Line>of these facilities. Something along these lines:</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="6">
        <Lines>
          <Line>(1) Given one version of the code, the heuristics clearly must associate each</Line>
          <Line>comment to either zero or one member declaration.</Line>
          <Line />
          <Line>(2) There must be a well defined means of avoiding that a file-related comment</Line>
          <Line>(like a header for a sequence of declarations) is associated with any member</Line>
          <Line>declaration. This is the reason for the word zero above.</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="2">
        <Lines>
          <Line>- getExtendedStartPosition(ASTNode)</Line>
          <Line>- getExtendedLength(ASTNode)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="NEW" />
    <resolution amount="" />
    <WithStack>(Although it may be the tip of an iceberg, I am experiencing this particularly 
with the Members View and Java Text Editor in the Java Browsing perspective.)

Comments adjacent to a member declaration (before and after) are sometimes 
considered as belonging to it and sometimes not. I have studied the affects of 
Cut and Delete commands in the Members View in the Java Browsing perspective, 
drag &amp; drop from the Members View to the Type View, and the Show Source of 
Selected Element Only mode of the Java Text Editor, and they apply complex and 
differing heuristics. 

I think it would be reasonable that: 

(Basic requirement) The member declaration source code is regarded by the 
Members View as being exactly the source code shown by the Java Text Editor in 
Show Source of Selected Element Only mode. Editing commands including drag &amp; 
drop must only affect the source code of the involved members.

To fix this, the heuristics for associating comments with member declarations 
must be unified. As input to this work, I would like to propose a couple of 
principles to make editing using the Member View commands safer and more 
profitable:

(1) Given one version of the code, the heuristics clearly must associate each 
comment to either zero or one member declaration.

(2) There must be a well defined means of avoiding that a file-related comment 
(like a header for a sequence of declarations) is associated with any member 
declaration. This is the reason for the word zero above.

The second principle (2) is particularly important to me as it was while trying 
to figure out the (currently not so well defined) means for keeping heading-
like comments out of harms way that I discovered how broken this was. And it 
does appear that at present there exists no such means.
 
Findings in 3.0 M3:

(a) The Cut and Delete commands in the Members View removes all preceding 
comments not separated from the deleted member declaration with at least on 
blank line, and all succeeding comments separated from the next member with at 
least on blank line. Javadoc comments are treated differently. However if the 
member is a method and the only member of the class, all preceding comments are 
removed but no succeeding ones.
 
(b) The Show Source of Selected Element Only text editor mode will show all 
comments preceding the selected member in addition to the member declaration.

(c) Drag &amp; drop move of a member into classes and interfaces copies all 
preceding comments to the receiver but removes some preceding ones and some 
succeeding ones from the provider. Exactly which comments that are thereby lost 
or duplicated is dependent on style (/**, /*, //) and the use of blank lines. 
The behavior gives an impression of a mix of (a) and (b) above.

Playing around with code like the following has proven educational:

public class Test2 {

///////////////////////////////////////////////////
//            METHODS
///////////////////////////////////////////////////

	public void preceding () {}

	// moveTest before
		 
	/** 
	 * moveTest doc 
	 */
	
	public void moveTest () {}
	
	// moveTest after
	
	/** 
	 * succeeding doc 
	 */
	
	public void succeeding () {}

///////////////////////////////////////////////////
//            -----
///////////////////////////////////////////////////
}
I forgot to mention that Bug 41734 addresses a subset of this. I doubt that 
just fixing 41734 is meningfull---the rest of the adjacent comment handling 
being the way it is, no one is likely to notice a partial improvement.
We currently have several different heuristics of how comments are assigned to 
members.

Cut-copy paste uses the ASTRewriter heuristic, show selected element and other 
Java element based ranges a different one.

Moving to jdt.core 

Frederic: pls double check this scenario is now supported with extended source 
range approach.
I'd love to. But what exactly is the extended source range approach?
comment 3: Currently this is not the case.

M8 jdt-core implementation for comment mapping (class 
org.eclipse.jdt.core.dom.DefaultCommentMapper) uses exactly the same heuristic 
than jdt-ui written in org.eclipse.jdt.internal.corext.dom.CommentMapper class.

As jdt-ui was our first main client for this, it was the first goal of comment 
mapping transfer: do the same as before. Note however that these two classes do 
not work exactly the same due to some unhandled cases discovered on jdt-ui 
heuristic and fixed during the transfer...

We were lacking of input to decide how to change existing heuristic or propose 
new ones. Here's a input which sounds interesting and I'll see if it would be 
possible to open our comment mapping class to take it into account.

comment 4: DOM AST nodes have a start position and a length calculated when 
converting compiler AST nodes. They are based on code but does not include 
leading and trailing comments (comments are not meaningful for compiler...).

Extended range for a DOM AST node is made of an extended start position which 
includes leading comment and an extended length which includes trailing 
comments. You can get extended start position and extended length of a DOM AST 
nodeare using org.eclipse.jdt.core.dom.CompilationUnit following methods:
 - getExtendedStartPosition(ASTNode)
 - getExtendedLength(ASTNode)

These methods are really useful to know if a comment is attached to a node 
because it's the extended range which is used to answer it...

Note that there's an exception for javadoc comment preceeding body declaration 
(a method declaration for example). This kind of comments is included in the 
node itself by compiler due to the fact that it can include @deprecated 
information...

Because this is starting to get technical to the point of missing it (the 
pont), I would like to emphasize that to understand what this bug report is 
about, one has to see the problem from the outside, from the view point of the 
user of the "Refactor" command, drag&amp;drop of program elements, and the "Show 
source of selected element only" editor mode:

(1)  How can this user predict what will happen when a code 
moving/replacing/coping operation is performed?

(2)  How can this user control the affects of such operations on comments 
contained in the affected files?

After thinking this over for a while I've come to the following conclusions:

(a)  What it's about is knowing and being able to control which comments 
belong, and which comments do not belong, to a given class member.

(b)  One reliable source of such knowledge should naturally be the "Show 
source of selected element only" editor mode. It's a bit closer at hand to the 
average user than astview :-) (thanks for the screen dump though)

(c)  This could be end of story were it not for the need to support trailing 
comments and file adornments. By the latter I mean comments not connected to 
any method and thus invisible to users of the "Show source of selected element 
only" editor mode. Without these disturbing notions, all comments preceding a 
member would simply and necessarily belong to it; however with them, comes the 
necessity of more or less complicated heuristics.

(d)  Because other peoples obnoxious insistence on using their own source code 
conventions, allowing for an appropriate identification of trailing comments 
and file adornments does require a degree of adaptivity. My conclusion is 
that "User preferences" has to be extended with a section on this. As a side 
effect, such settings would catch the user's attention and make her conscious 
of these facilities. Something along these lines:

--------------------------------------------------------

Identifying Trailing comments and File Adornments 

In addition to the closest preceding Javadoc (/**...) comment, comments 
identified in the following way are considered as belonging to a program 
element (class or member):

    []  All preceding Javadoc comments
    []  Closest preceding comment regardless of type
    []  All preceding comments not separated from element by a blank line
    []  All preceding comments starting with {    }
    []  All preceding comments not starting with {    }

    When not allocated by the above rules:

    []  Closest succeeding comment regardless of type
    []  All succeeding comments not separated from element by a blank line
    []  All succeeding comments starting with {    }
    []  All succeeding comments not starting with {    }

All other comments are considered as belonging to the file itself rather than 
any program element and will as far as possible not be affected or included 
when contained elements are moved, copied, or removed.

My assumption would be that bug 54204 will be done for M9 but your last 
proposal about new options to modify heuristic will be postponed after 3.0.

Of course this need to be confirmed and will update milestone accordingly.

I will also appreciate feedback on new heuristic proposal, thx

Already sent attached a comment to this affect to Bug 54204 but for the sake 
of completness: 

I believe that the focus on relating as many comments as posssible to one node 
or another is counterproductive from the JDT user's point of view. At all 
times, even when using refactoring commands or drag&amp;droping program elements, 
when I edit my code, I naturally want to know exactly what happens with it. 
Complicated heuristics with tricky corner cases will simply not do. Robustness 
is the issue, and, as always, doing as little as possible the key. Therefore I 
believe in a default heuristic much simpler than todays with an added 
possiblity for the individual user to introduce additional rules to support a 
specific programming (code formating) style. This was the reason for my 
options proposal.
Position tuning is deferred post 3.0 (too risky)
Reopen as LATER is deprecated...</WithStack>
    <WithOutStack>(Although it may be the tip of an iceberg, I am experiencing this particularly 
with the Members View and Java Text Editor in the Java Browsing perspective.)

Comments adjacent to a member declaration (before and after) are sometimes 
considered as belonging to it and sometimes not. I have studied the affects of 
Cut and Delete commands in the Members View in the Java Browsing perspective, 
drag &amp; drop from the Members View to the Type View, and the Show Source of 
Selected Element Only mode of the Java Text Editor, and they apply complex and 
differing heuristics. 

I think it would be reasonable that: 

(Basic requirement) The member declaration source code is regarded by the 
Members View as being exactly the source code shown by the Java Text Editor in 
Show Source of Selected Element Only mode. Editing commands including drag &amp; 
drop must only affect the source code of the involved members.

To fix this, the heuristics for associating comments with member declarations 
must be unified. As input to this work, I would like to propose a couple of 
principles to make editing using the Member View commands safer and more 
profitable:

(1) Given one version of the code, the heuristics clearly must associate each 
comment to either zero or one member declaration.

(2) There must be a well defined means of avoiding that a file-related comment 
(like a header for a sequence of declarations) is associated with any member 
declaration. This is the reason for the word zero above.

The second principle (2) is particularly important to me as it was while trying 
to figure out the (currently not so well defined) means for keeping heading-
like comments out of harms way that I discovered how broken this was. And it 
does appear that at present there exists no such means.
 
Findings in 3.0 M3:

(a) The Cut and Delete commands in the Members View removes all preceding 
comments not separated from the deleted member declaration with at least on 
blank line, and all succeeding comments separated from the next member with at 
least on blank line. Javadoc comments are treated differently. However if the 
member is a method and the only member of the class, all preceding comments are 
removed but no succeeding ones.
 
(b) The Show Source of Selected Element Only text editor mode will show all 
comments preceding the selected member in addition to the member declaration.

(c) Drag &amp; drop move of a member into classes and interfaces copies all 
preceding comments to the receiver but removes some preceding ones and some 
succeeding ones from the provider. Exactly which comments that are thereby lost 
or duplicated is dependent on style (/**, /*, //) and the use of blank lines. 
The behavior gives an impression of a mix of (a) and (b) above.

Playing around with code like the following has proven educational:

public class Test2 {

///////////////////////////////////////////////////
//            METHODS
///////////////////////////////////////////////////

	public void preceding () {}

	// moveTest before
		 
	/** 
	 * moveTest doc 
	 */
	
	public void moveTest () {}
	
	// moveTest after
	
	/** 
	 * succeeding doc 
	 */
	
	public void succeeding () {}

///////////////////////////////////////////////////
//            -----
///////////////////////////////////////////////////
}
I forgot to mention that Bug 41734 addresses a subset of this. I doubt that 
just fixing 41734 is meningfull---the rest of the adjacent comment handling 
being the way it is, no one is likely to notice a partial improvement.
We currently have several different heuristics of how comments are assigned to 
members.

Cut-copy paste uses the ASTRewriter heuristic, show selected element and other 
Java element based ranges a different one.

Moving to jdt.core 

Frederic: pls double check this scenario is now supported with extended source 
range approach.
I'd love to. But what exactly is the extended source range approach?
comment 3: Currently this is not the case.

M8 jdt-core implementation for comment mapping (class 
org.eclipse.jdt.core.dom.DefaultCommentMapper) uses exactly the same heuristic 
than jdt-ui written in org.eclipse.jdt.internal.corext.dom.CommentMapper class.

As jdt-ui was our first main client for this, it was the first goal of comment 
mapping transfer: do the same as before. Note however that these two classes do 
not work exactly the same due to some unhandled cases discovered on jdt-ui 
heuristic and fixed during the transfer...

We were lacking of input to decide how to change existing heuristic or propose 
new ones. Here's a input which sounds interesting and I'll see if it would be 
possible to open our comment mapping class to take it into account.

comment 4: DOM AST nodes have a start position and a length calculated when 
converting compiler AST nodes. They are based on code but does not include 
leading and trailing comments (comments are not meaningful for compiler...).

Extended range for a DOM AST node is made of an extended start position which 
includes leading comment and an extended length which includes trailing 
comments. You can get extended start position and extended length of a DOM AST 
nodeare using org.eclipse.jdt.core.dom.CompilationUnit following methods:
 - getExtendedStartPosition(ASTNode)
 - getExtendedLength(ASTNode)

These methods are really useful to know if a comment is attached to a node 
because it's the extended range which is used to answer it...

Note that there's an exception for javadoc comment preceeding body declaration 
(a method declaration for example). This kind of comments is included in the 
node itself by compiler due to the fact that it can include @deprecated 
information...

Because this is starting to get technical to the point of missing it (the 
pont), I would like to emphasize that to understand what this bug report is 
about, one has to see the problem from the outside, from the view point of the 
user of the "Refactor" command, drag&amp;drop of program elements, and the "Show 
source of selected element only" editor mode:

(1)  How can this user predict what will happen when a code 
moving/replacing/coping operation is performed?

(2)  How can this user control the affects of such operations on comments 
contained in the affected files?

After thinking this over for a while I've come to the following conclusions:

(a)  What it's about is knowing and being able to control which comments 
belong, and which comments do not belong, to a given class member.

(b)  One reliable source of such knowledge should naturally be the "Show 
source of selected element only" editor mode. It's a bit closer at hand to the 
average user than astview :-) (thanks for the screen dump though)

(c)  This could be end of story were it not for the need to support trailing 
comments and file adornments. By the latter I mean comments not connected to 
any method and thus invisible to users of the "Show source of selected element 
only" editor mode. Without these disturbing notions, all comments preceding a 
member would simply and necessarily belong to it; however with them, comes the 
necessity of more or less complicated heuristics.

(d)  Because other peoples obnoxious insistence on using their own source code 
conventions, allowing for an appropriate identification of trailing comments 
and file adornments does require a degree of adaptivity. My conclusion is 
that "User preferences" has to be extended with a section on this. As a side 
effect, such settings would catch the user's attention and make her conscious 
of these facilities. Something along these lines:

--------------------------------------------------------

Identifying Trailing comments and File Adornments 

In addition to the closest preceding Javadoc (/**...) comment, comments 
identified in the following way are considered as belonging to a program 
element (class or member):

    []  All preceding Javadoc comments
    []  Closest preceding comment regardless of type
    []  All preceding comments not separated from element by a blank line
    []  All preceding comments starting with {    }
    []  All preceding comments not starting with {    }

    When not allocated by the above rules:

    []  Closest succeeding comment regardless of type
    []  All succeeding comments not separated from element by a blank line
    []  All succeeding comments starting with {    }
    []  All succeeding comments not starting with {    }

All other comments are considered as belonging to the file itself rather than 
any program element and will as far as possible not be affected or included 
when contained elements are moved, copied, or removed.

My assumption would be that bug 54204 will be done for M9 but your last 
proposal about new options to modify heuristic will be postponed after 3.0.

Of course this need to be confirmed and will update milestone accordingly.

I will also appreciate feedback on new heuristic proposal, thx

Already sent attached a comment to this affect to Bug 54204 but for the sake 
of completness: 

I believe that the focus on relating as many comments as posssible to one node 
or another is counterproductive from the JDT user's point of view. At all 
times, even when using refactoring commands or drag&amp;droping program elements, 
when I edit my code, I naturally want to know exactly what happens with it. 
Complicated heuristics with tricky corner cases will simply not do. Robustness 
is the issue, and, as always, doing as little as possible the key. Therefore I 
believe in a default heuristic much simpler than todays with an added 
possiblity for the individual user to introduce additional rules to support a 
specific programming (code formating) style. This was the reason for my 
options proposal.
Position tuning is deferred post 3.0 (too risky)
Reopen as LATER is deprecated...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46172" />
    <CreationDate amount="2003-11-06 04:20:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Search" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Search fills up list of open files</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>When I step through the search results, the list of editors fills up. 

Suggestion:

search should close the previous editor it opened before opening up a new one.

Øyvind
Window &gt; Preferences &gt; Workbench &gt; Search &gt; Reuse editors to show matches

I know I know - we have too many preferences :-)
&gt;Window &gt; Preferences &gt; Workbench &gt; Search &gt; Reuse editors to show matches
&gt;
&gt;I know I know - we have too many preferences :-)

Consider this a feature request: switch the default and remove the 
preference! :-)

Øyvind

You can imagine that we did not add the preference at the beginning. There are
people who get very upset if you close editors for them.
It pleases me to hear that you do not add options willingly :-)

Øyvind</WithStack>
    <WithOutStack>When I step through the search results, the list of editors fills up. 

Suggestion:

search should close the previous editor it opened before opening up a new one.

Øyvind
Window &gt; Preferences &gt; Workbench &gt; Search &gt; Reuse editors to show matches

I know I know - we have too many preferences :-)
&gt;Window &gt; Preferences &gt; Workbench &gt; Search &gt; Reuse editors to show matches
&gt;
&gt;I know I know - we have too many preferences :-)

Consider this a feature request: switch the default and remove the 
preference! :-)

Øyvind

You can imagine that we did not add the preference at the beginning. There are
people who get very upset if you close editors for them.
It pleases me to hear that you do not add options willingly :-)

Øyvind</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46173" />
    <CreationDate amount="2003-11-06 04:22:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Performance Degrade</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>Hi Guys,

I am using Eclipse 3.0 M4 Gtk version on Linux RH9 with Sun J2SDK1.4.2_02.
I have got an Intel P.IV with 512m of Ram.

I have noted that the memory dosn't not decrease and Eclipse becames slower and
slower after a debug session is active.

Even when the debug session is finish the memory usage dosn't decrease. 

Best Regards,

Andrea
Will investigate in M6
Some extra info:
I just tried in 3.0 M4 to debug a large project (ArgoUML). The performance is 
horrible. I upgraded from 3.0 Nightly build of 18 augustus (if I am not 
misstaken). Performance in that release was not great but workable. Now I have 
to move back to 2.1 or another build of 3.0 to get performance on line again.
It only happens with debugging.
I tried to run argouml under JDK 1.4.1_01

Please try M8, and update bug report with findings.
Marking as works for me, as there has been no further information provided.</WithStack>
    <WithOutStack>Hi Guys,

I am using Eclipse 3.0 M4 Gtk version on Linux RH9 with Sun J2SDK1.4.2_02.
I have got an Intel P.IV with 512m of Ram.

I have noted that the memory dosn't not decrease and Eclipse becames slower and
slower after a debug session is active.

Even when the debug session is finish the memory usage dosn't decrease. 

Best Regards,

Andrea
Will investigate in M6
Some extra info:
I just tried in 3.0 M4 to debug a large project (ArgoUML). The performance is 
horrible. I upgraded from 3.0 Nightly build of 18 augustus (if I am not 
misstaken). Performance in that release was not great but workable. Now I have 
to move back to 2.1 or another build of 3.0 to get performance on line again.
It only happens with debugging.
I tried to run argouml under JDK 1.4.1_01

Please try M8, and update bug report with findings.
Marking as works for me, as there has been no further information provided.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46174" />
    <CreationDate amount="2003-11-06 04:34:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="major" />
    <Summery>Eclipse Crash Visualizing CVS files differences</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="CLOSED" />
    <resolution amount="INVALID" />
    <WithStack>Hi Guys,

I am using Eclipse 3.0 M4 Gtk on RH9 Linux with J2sdk1.4.2_02.

Opening the "comparing resource CVS files" view eclipse crashed. No jvm log was
created.

Usually, only with M4, the open of the "comparing resource CVS files" view is a
very slow action.

Best Regads,

Andrea
Created attachment 6675
Eclipse Log FIle
Is this reproduceable. What are the exact steps to reproduce? The log file 
doesn't have anything related to this crash. 

What eactly do you mean by "comparing resource CVS files"? 
Hi Jean-Michel,

Write "comparing resource CVS files" I means that I would like to compere two
files one present locally and one on the CVS server.

The crash is not easily reproducible but this action has a big performany degare
since I have installed the M4.

Best Regards,

Andrea
Our usual practice is to move bugs to the RESOLVED REMIND state when there is not enough information provided to address the reported issue and more information has been requested. This bug has been in the RESOLVED REMIND state for quite some time so it is being CLOSED. If you can provide the requested information or you otherwise feel that this is still an issue, please reopen the bug. If you are unable to open it due to a lack or permissions, please add a comment to the bug stating that you would like to have the request reconsidered.  I applogize for this blanket approach to bug screening but there are just to many bugs in the REMIND state for us to effectively triage them. Your help in this matter is appreciated.
[REMIND-&gt;INVALID] The "REMIND" bugzilla resolution is being removed so reopening
to mark as INVALID.
INVALID.
Closing.</WithStack>
    <WithOutStack>Hi Guys,

I am using Eclipse 3.0 M4 Gtk on RH9 Linux with J2sdk1.4.2_02.

Opening the "comparing resource CVS files" view eclipse crashed. No jvm log was
created.

Usually, only with M4, the open of the "comparing resource CVS files" view is a
very slow action.

Best Regads,

Andrea
Created attachment 6675
Eclipse Log FIle
Is this reproduceable. What are the exact steps to reproduce? The log file 
doesn't have anything related to this crash. 

What eactly do you mean by "comparing resource CVS files"? 
Hi Jean-Michel,

Write "comparing resource CVS files" I means that I would like to compere two
files one present locally and one on the CVS server.

The crash is not easily reproducible but this action has a big performany degare
since I have installed the M4.

Best Regards,

Andrea
Our usual practice is to move bugs to the RESOLVED REMIND state when there is not enough information provided to address the reported issue and more information has been requested. This bug has been in the RESOLVED REMIND state for quite some time so it is being CLOSED. If you can provide the requested information or you otherwise feel that this is still an issue, please reopen the bug. If you are unable to open it due to a lack or permissions, please add a comment to the bug stating that you would like to have the request reconsidered.  I applogize for this blanket approach to bug screening but there are just to many bugs in the REMIND state for us to effectively triage them. Your help in this matter is appreciated.
[REMIND-&gt;INVALID] The "REMIND" bugzilla resolution is being removed so reopening
to mark as INVALID.
INVALID.
Closing.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46175" />
    <CreationDate amount="2003-11-06 04:37:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.2" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Make editable those C/C++ build properties that are already defined</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>Currently, there are only two options - eiter to define new parameter (like
compiler header file/library search path, env. variables etc.) or to delete
existing one. It would be good to make already defined settings editable. Having
to delete existing settings and define them again just because something has
changed (or a mistyping) isn't very comfortable.
It affects both builders ?

Sean/Dave comments.
Currently, you can double-click the entry in the list to edit it. Thomas added
an edit button to the standard build tab, and I have done the same for the
custom field editor. This is not a bug.
PR was not targeted to any particular release. Changing target milestone to 2.1
according to seans last comment this is not a bug</WithStack>
    <WithOutStack>Currently, there are only two options - eiter to define new parameter (like
compiler header file/library search path, env. variables etc.) or to delete
existing one. It would be good to make already defined settings editable. Having
to delete existing settings and define them again just because something has
changed (or a mistyping) isn't very comfortable.
It affects both builders ?

Sean/Dave comments.
Currently, you can double-click the entry in the list to edit it. Thomas added
an edit button to the standard build tab, and I have done the same for the
custom field editor. This is not a bug.
PR was not targeted to any particular release. Changing target milestone to 2.1
according to seans last comment this is not a bug</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46176" />
    <CreationDate amount="2003-11-06 04:46:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P3" />
    <bug_severity amount="critical" />
    <Summery>Eclipse doesn't launch under 1.4.2 DP1</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I20031104
MacOS X 10.3
Java 1.4.2 DP1

- launch Eclipse
Observe: java_swt terminates with exit code 255 (-1)
This seems to be a regression with 1.4.2 DP1 since Apple's own sample
"simpleJavaLauncher" (ftp://ftp.apple.com/developer/Sample_Code/Java/simpleJavaLauncher.sit)
has exactly the same problem.

Confirmed 1.4.2 DP1 bug.
A workaround has been posted on the java-seed mailing list.
Search for Stuart Roebuck.

Is there a fix coming for this?  I need to do some 1.4.2 testing and would really like to be able to 
get this working - but made it to the java-seed list too late to see the workaround mentioned.

Is there a workaround that will work for 1.4.2 that won't damage the ability to load under 1.4.1?  Is 
there a fix in progress?  Or are we just waiting for Apple to release a version of 1.4.2 DP that isn't a 
total mess?
No, we cannot provide an Eclipse fix for that because JNI provides no API for asking 
specifically for a "1.4.2" VM. So we'll have to wiat for Apple to fix 1.4.2.

However, a temporary workaround appears to be to set up a symbolic link in:

	/System/Library/Frameworks/JavaVM.framework/Versions

to point from 1.4.1 to 1.4.2

e.g.:

	cd /System/Library/Frameworks/JavaVM.framework/Versions
	sudo ln -s 1.4.2 1.4.1

Then Eclipse launches okay.

To remove this patch and restore the normal configuration, enter:

	sudo rm /System/Library/Frameworks/JavaVM.framework/Versions/1.4.1

*** Bug 47026 has been marked as a duplicate of this bug. ***
*** Bug 47942 has been marked as a duplicate of this bug. ***
This not only appears to still be a problem with 1.4.2 final, but the workaround suggested (symlinking 
1.4.2 from 1.4.1) has no effect.  I cannot get Eclipse 2.1.2 running on Panther with JDK 1.4.2 at all.
Cancel that last comment - the failure to launch was due to my using an alias rather than a symlink to 
point to the workspace.

Since the final Java 1.4.2 is out now, this shouldn't no longer be an issue.</WithStack>
    <WithOutStack>I20031104
MacOS X 10.3
Java 1.4.2 DP1

- launch Eclipse
Observe: java_swt terminates with exit code 255 (-1)
This seems to be a regression with 1.4.2 DP1 since Apple's own sample
"simpleJavaLauncher" (ftp://ftp.apple.com/developer/Sample_Code/Java/simpleJavaLauncher.sit)
has exactly the same problem.

Confirmed 1.4.2 DP1 bug.
A workaround has been posted on the java-seed mailing list.
Search for Stuart Roebuck.

Is there a fix coming for this?  I need to do some 1.4.2 testing and would really like to be able to 
get this working - but made it to the java-seed list too late to see the workaround mentioned.

Is there a workaround that will work for 1.4.2 that won't damage the ability to load under 1.4.1?  Is 
there a fix in progress?  Or are we just waiting for Apple to release a version of 1.4.2 DP that isn't a 
total mess?
No, we cannot provide an Eclipse fix for that because JNI provides no API for asking 
specifically for a "1.4.2" VM. So we'll have to wiat for Apple to fix 1.4.2.

However, a temporary workaround appears to be to set up a symbolic link in:

	/System/Library/Frameworks/JavaVM.framework/Versions

to point from 1.4.1 to 1.4.2

e.g.:

	cd /System/Library/Frameworks/JavaVM.framework/Versions
	sudo ln -s 1.4.2 1.4.1

Then Eclipse launches okay.

To remove this patch and restore the normal configuration, enter:

	sudo rm /System/Library/Frameworks/JavaVM.framework/Versions/1.4.1

*** Bug 47026 has been marked as a duplicate of this bug. ***
*** Bug 47942 has been marked as a duplicate of this bug. ***
This not only appears to still be a problem with 1.4.2 final, but the workaround suggested (symlinking 
1.4.2 from 1.4.1) has no effect.  I cannot get Eclipse 2.1.2 running on Panther with JDK 1.4.2 at all.
Cancel that last comment - the failure to launch was due to my using an alias rather than a symlink to 
point to the workspace.

Since the final Java 1.4.2 is out now, this shouldn't no longer be an issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46177" />
    <CreationDate amount="2003-11-06 04:53:00 -0500" />
    <DupId amount="54444" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Remove rename logic when converting local variable to field [refactoring]</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I have a local variable I want to convert to a field. Eclipse 
suggests "listener" as a field name, instead of just leaving the variable name 
alone.


ChangeListener overlapModelChangeListener = new ChangeListener()
Martin, can you please comment.
This is refactoring, correct?

Refactoring should use the method StubUtility.suggestArgumentName.

&gt;This is refactoring, correct?
&gt;
&gt;Refactoring should use the method StubUtility.suggestArgumentName.

Why should refactoring suggest a name at all?

I think it would be better if it just left it alone. It almost always suggests 
something else than what I want.

Øyvind


Yup, correct. Markus, can you please fix this.
Debugging through M8, the code does most of the guess work in 
InternalNamingConventions.computeNames.  It will use the original name, only if 
it was unable to compute another one.  I'd suggest that always adding the 
default name as the first choice would "vastly improve" this.  I imagine that 
if such a field already exists, it will get dropped out by later logic. 


*** This bug has been marked as a duplicate of 54444 ***</WithStack>
    <WithOutStack>I have a local variable I want to convert to a field. Eclipse 
suggests "listener" as a field name, instead of just leaving the variable name 
alone.


ChangeListener overlapModelChangeListener = new ChangeListener()
Martin, can you please comment.
This is refactoring, correct?

Refactoring should use the method StubUtility.suggestArgumentName.

&gt;This is refactoring, correct?
&gt;
&gt;Refactoring should use the method StubUtility.suggestArgumentName.

Why should refactoring suggest a name at all?

I think it would be better if it just left it alone. It almost always suggests 
something else than what I want.

Øyvind


Yup, correct. Markus, can you please fix this.
Debugging through M8, the code does most of the guess work in 
InternalNamingConventions.computeNames.  It will use the original name, only if 
it was unable to compute another one.  I'd suggest that always adding the 
default name as the first choice would "vastly improve" this.  I imagine that 
if such a field already exists, it will get dropped out by later logic. 


*** This bug has been marked as a duplicate of 54444 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46178" />
    <CreationDate amount="2003-11-06 05:12:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>(CVS) Warning should be displayed while trying to commit not compilable code</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Hi.

I think, that there should be a configurable option to display a warning window if the user is trying to commit into CVS files which cannot be compiled (contain errors, etc). 

This can prevent from submitting code which others can't compile too.
Interesting suggestion. 
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>Hi.

I think, that there should be a configurable option to display a warning window if the user is trying to commit into CVS files which cannot be compiled (contain errors, etc). 

This can prevent from submitting code which others can't compile too.
Interesting suggestion. 
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46179" />
    <CreationDate amount="2003-11-06 05:25:00 -0500" />
    <DupId amount="45194" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>enclosing_type variable does not resolve</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="1">
      <source_code type="assignment">
        <location start="33" end="104" />
        <code>private static Logger log = Logger.getLogger( ${enclosing_type}.class);</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>If a have a template like this:

private static Logger log = Logger.getLogger( ${enclosing_type}.class);

the enclosing_type does not resolve.


*** This bug has been marked as a duplicate of 45194 ***</WithStack>
    <WithOutStack>If a have a template like this:

private static Logger log = Logger.getLogger( ${enclosing_type}.class);

the enclosing_type does not resolve.


*** This bug has been marked as a duplicate of 45194 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46180" />
    <CreationDate amount="2003-11-06 05:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Tools" />
    <Product amount="CDT" />
    <component amount="cdt-core" />
    <Version amount="1.2" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Project build bugs displayed in different order in Tasks and C-Build view</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="4">
      <source_code type="class">
        <location start="492" end="630" />
        <code>class MyClass
{
	public:
	
		MyClass();
		
		int getId()	// note the missing semicolon
		void setId( int id );
		
	protected:
		int _id;
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="633" end="677" />
        <code>inline int MyClass::getId()
{
	return _id;
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="679" end="730" />
        <code>inline void MyClass::setId( int id )
{
	_id = id;
}</code>
      </source_code>
      <source_code type="functiondef">
        <location start="791" end="826" />
        <code>MyClass::MyClass()
{
	setId( 0 );
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>The Task view displays bugs (reported by the compiler during the project build)
in different order that the compiler output as seen in the C-Build view. The
order in which bugs are displayed in the Task view makes the navigation to the
corresponding place in the source code much harder than if the the compiler
generated ordering was preserved.
I will try to demonstrate it on simple example. Lets assume a source code
consisting of 2 files myclass.h, myclass.cpp ...

myclass.h
-----------
class MyClass
{
	public:
	
		MyClass();
		
		int getId()	// note the missing semicolon
		void setId( int id );
		
	protected:
		int _id;
};

inline int MyClass::getId()
{
	return _id;
}

inline void MyClass::setId( int id )
{
	_id = id;
}

-----------

myclass.cpp
-----------
#include "myclass.h"

MyClass::MyClass()
{
	setId( 0 );
}
-----------

The compiler output produces:
----------
make all 
In file included from ../myclass.cpp:2:
../myclass.h:11: error: parse error before `void'
../myclass.h:23: error: no `void MyClass::setId(int)' member function declared 
   in class `MyClass'
../myclass.cpp: In constructor `MyClass::MyClass()':
../myclass.cpp:6: error: `setId' undeclared (first use this function)
../myclass.cpp:6: error: (Each undeclared identifier is reported only once for 
   each function it appears in.)
make: *** [myclass.o] Error 1
g++ -O0 -g3 -Wall -c -o myclass.o ../myclass.cpp
Build complete for project compiletest
-----------

It reports first the problem in myclass.h which is OK. This is where the cause
of the problem is. 

On the other hand the Task view reports first messages concerning myclass.cpp
and then those related to the myclass.h. If the project consists of more files
the output is quite confusing. Bugs in header files are propagated to the source
files but not vice versa so the header files should be listed first (as the
compiler output does).
In this situation I normaly switch to the C-Build view and then try to locate
corresponding line in the Task view to navigate to the source code. Because of
different order of messages in each view this approach is quite time consuming
(and annoying).
You should change the sort order of the Task View to "by Creation Time".
Click in the Task View in the Toolbar with the Down-Arrow.
Yes, this (changing the sort order of the Task View to "by Creation Time")
solves the problem. I didn't realize the "strange" behaviour I described was
because of this setting. I think the bug could closed as fixed. I'm just not
sure whether I'm authorized to do that.
Thanks, kesselhaus@gmx.net, 8-) For the quick response.

Yes you are authorised to change
the status has fix.  But did for you.

Thanks for the feedback.</WithStack>
    <WithOutStack>The Task view displays bugs (reported by the compiler during the project build)
in different order that the compiler output as seen in the C-Build view. The
order in which bugs are displayed in the Task view makes the navigation to the
corresponding place in the source code much harder than if the the compiler
generated ordering was preserved.
I will try to demonstrate it on simple example. Lets assume a source code
consisting of 2 files myclass.h, myclass.cpp ...

myclass.h
-----------
class MyClass
{
	public:
	
		MyClass();
		
		int getId()	// note the missing semicolon
		void setId( int id );
		
	protected:
		int _id;
};

inline int MyClass::getId()
{
	return _id;
}

inline void MyClass::setId( int id )
{
	_id = id;
}

-----------

myclass.cpp
-----------
#include "myclass.h"

MyClass::MyClass()
{
	setId( 0 );
}
-----------

The compiler output produces:
----------
make all 
In file included from ../myclass.cpp:2:
../myclass.h:11: error: parse error before `void'
../myclass.h:23: error: no `void MyClass::setId(int)' member function declared 
   in class `MyClass'
../myclass.cpp: In constructor `MyClass::MyClass()':
../myclass.cpp:6: error: `setId' undeclared (first use this function)
../myclass.cpp:6: error: (Each undeclared identifier is reported only once for 
   each function it appears in.)
make: *** [myclass.o] Error 1
g++ -O0 -g3 -Wall -c -o myclass.o ../myclass.cpp
Build complete for project compiletest
-----------

It reports first the problem in myclass.h which is OK. This is where the cause
of the problem is. 

On the other hand the Task view reports first messages concerning myclass.cpp
and then those related to the myclass.h. If the project consists of more files
the output is quite confusing. Bugs in header files are propagated to the source
files but not vice versa so the header files should be listed first (as the
compiler output does).
In this situation I normaly switch to the C-Build view and then try to locate
corresponding line in the Task view to navigate to the source code. Because of
different order of messages in each view this approach is quite time consuming
(and annoying).
You should change the sort order of the Task View to "by Creation Time".
Click in the Task View in the Toolbar with the Down-Arrow.
Yes, this (changing the sort order of the Task View to "by Creation Time")
solves the problem. I didn't realize the "strange" behaviour I described was
because of this setting. I think the bug could closed as fixed. I'm just not
sure whether I'm authorized to do that.
Thanks, kesselhaus@gmx.net, 8-) For the quick response.

Yes you are authorised to change
the status has fix.  But did for you.

Thanks for the feedback.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46181" />
    <CreationDate amount="2003-11-06 05:47:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="Macintosh" />
    <op_sys amount="Mac OS X - Carbon (unsup.)" />
    <priority amount="P2" />
    <bug_severity amount="normal" />
    <Summery>Renaming Eclipse.app prevents SWT apps from launching</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341072097">
        <Exception>java.io.IOException</Exception>
        <Reason>/Eclipse/eclipseI1105/Eclipse.app/Contents/MacOS/java_swt: not found</Reason>
        <Frames>
          <Frame depth="0">java.lang.UNIXProcess.forkAndExec(Native Method)</Frame>
          <Frame depth="1">java.lang.UNIXProcess.&lt;init&gt;(UNIXProcess.java:54)</Frame>
          <Frame depth="2">java.lang.Runtime.execInternal(Native Method)</Frame>
          <Frame depth="3">java.lang.Runtime.exec(Runtime.java:566)</Frame>
          <Frame depth="4">org.eclipse.debug.core.DebugPlugin.exec(DebugPlugin.java:584)</Frame>
          <Frame depth="5">org.eclipse.jdt.launching.AbstractVMRunner.exec(AbstractVMRunner.java:69)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.launching.macosx.MacOSXVMRunner.exec(MacOSXVMRunner.java:30)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.launching.StandardVMRunner.run(StandardVMRunner.java:263)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.launching.JavaLocalApplicationLaunchConfigurationDelegate.launch(JavaLocalApplicationLaunchConfigurationDelegate.java:120)</Frame>
          <Frame depth="9">org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)</Frame>
          <Frame depth="10">org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:749)</Frame>
          <Frame depth="11">org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:625)</Frame>
          <Frame depth="12">org.eclipse.debug.ui.DebugUITools$3.run(DebugUITools.java:581)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="3">
        <Lines>
          <Line>- rename the Eclipse application (e.g. Eclipse.app to Eclipse1.app)</Line>
          <Line>- launch Eclipse1</Line>
          <Line>- from within Eclipse launch SWT application</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20031105
Mac OS X 10.3

- rename the Eclipse application (e.g. Eclipse.app to Eclipse1.app)
- launch Eclipse1
- from within Eclipse launch SWT application

It doesn't launch but the following stacktrace is printed in Console:

!MESSAGE Exception occurred executing command line.
!STACK 0
java.io.IOException: /Eclipse/eclipseI1105/Eclipse.app/Contents/MacOS/java_swt: not found
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.&lt;init&gt;(UNIXProcess.java:54)
	at java.lang.Runtime.execInternal(Native Method)
	at java.lang.Runtime.exec(Runtime.java:566)
	at org.eclipse.debug.core.DebugPlugin.exec(DebugPlugin.java:584)
	at org.eclipse.jdt.launching.AbstractVMRunner.exec(AbstractVMRunner.java:69)
	at org.eclipse.jdt.internal.launching.macosx.MacOSXVMRunner.exec(MacOSXVMRunner.java:
30)
	at org.eclipse.jdt.internal.launching.StandardVMRunner.run(StandardVMRunner.java:263)
	at 
org.eclipse.jdt.internal.launching.JavaLocalApplicationLaunchConfigurationDelegate.launch(JavaLoc
alApplicationLaunchConfigurationDelegate.java:120)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:156)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:749)
	at org.eclipse.debug.ui.DebugUITools.buildAndLaunch(DebugUITools.java:625)
	at org.eclipse.debug.ui.DebugUITools$3.run(DebugUITools.java:581)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:62)
fixed for N20031108
unable to verify on a PC
verified for I-I20031119-200311192030 on Mac OS X 10.3.1 &amp; 10.2.8</WithStack>
    <WithOutStack>I20031105
Mac OS X 10.3

- rename the Eclipse application (e.g. Eclipse.app to Eclipse1.app)
- launch Eclipse1
- from within Eclipse launch SWT application

It doesn't launch but the following stacktrace is printed in Console:

!MESSAGE Exception occurred executing command line.
!STACK 0

fixed for N20031108
unable to verify on a PC
verified for I-I20031119-200311192030 on Mac OS X 10.3.1 &amp; 10.2.8</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46182" />
    <CreationDate amount="2003-11-06 05:55:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Change Type for a binary method creates NPE</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="4">
        <Lines>
          <Line>- open String</Line>
          <Line>- select toString()</Line>
          <Line>- activate Change Type</Line>
          <Line>Dirk,</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>- open String
- select toString()
- activate Change Type
Dirk,

When I open class String, and I right-click anywhere in the editor,
I don't have a "Refactor" menu. So, I don't even know how to start
the Change Type refactoring. Can you please tell me exactly how
you encountered this bug?

  -Frank
You have to select the toString method in the outliner. 
Fixed in latest version.</WithStack>
    <WithOutStack>- open String
- select toString()
- activate Change Type
Dirk,

When I open class String, and I right-click anywhere in the editor,
I don't have a "Refactor" menu. So, I don't even know how to start
the Change Type refactoring. Can you please tell me exactly how
you encountered this bug?

  -Frank
You have to select the toString method in the outliner. 
Fixed in latest version.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46183" />
    <CreationDate amount="2003-11-06 06:15:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="2.1.1" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P5" />
    <bug_severity amount="normal" />
    <Summery>CVS Remove after Delete</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>I have a bit more information about the above issue. In the package explorer I
selected the file (build.xml) -&gt; right click -&gt; select delete. The file is
deleted from package explorer view and there is **NO** output in the CVS
Console. Then in package explorer I select the **directory** that contained
the build.xml file and -&gt; right click -&gt; Team -&gt; Update. 

In the CVS console, I see,
cvs update -d -P "/dev/src/build.xml"

This is all fine. Then I get 
R src/build.xml

Meaning there is a deletion of file build.xml awaiting a commit to update the
repository. So the deletion of a file from package view also issues a "cvs
remove filename" command to the CVS server. That is the only way the CVS will
show a "R src/build.xml". If the file was only removed from the local file
system, CVS will show a "U src/build.xml" and simply update the local file
system with the latest version on the server. 

It would be helpful if on delete of a file the CVS console showed the issuing
of the "cvs remove filename" to the CVS server. 

Mura
The problem is that we don't actually issue a CVS command to remember the 
deletion. It's done automatically. 
When you say it is done automatically. Which module does this? Is the Package 
explorer a JDT component? I am presuming by Team -&gt; Sharing project, I am 
making the package explorer aware of the CVS repository. Then on deleting a 
file the package explorer issues the cvs remove command silently. Is this 
correct? Can the package explorer then be made to issue a log to the CVS 
Console?
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithStack>
    <WithOutStack>I have a bit more information about the above issue. In the package explorer I
selected the file (build.xml) -&gt; right click -&gt; select delete. The file is
deleted from package explorer view and there is **NO** output in the CVS
Console. Then in package explorer I select the **directory** that contained
the build.xml file and -&gt; right click -&gt; Team -&gt; Update. 

In the CVS console, I see,
cvs update -d -P "/dev/src/build.xml"

This is all fine. Then I get 
R src/build.xml

Meaning there is a deletion of file build.xml awaiting a commit to update the
repository. So the deletion of a file from package view also issues a "cvs
remove filename" command to the CVS server. That is the only way the CVS will
show a "R src/build.xml". If the file was only removed from the local file
system, CVS will show a "U src/build.xml" and simply update the local file
system with the latest version on the server. 

It would be helpful if on delete of a file the CVS console showed the issuing
of the "cvs remove filename" to the CVS server. 

Mura
The problem is that we don't actually issue a CVS command to remember the 
deletion. It's done automatically. 
When you say it is done automatically. Which module does this? Is the Package 
explorer a JDT component? I am presuming by Team -&gt; Sharing project, I am 
making the package explorer aware of the CVS repository. Then on deleting a 
file the package explorer issues the cvs remove command silently. Is this 
correct? Can the package explorer then be made to issue a log to the CVS 
Console?
This bug has not been touched for 2 years. Closing as WONTFIX. Please reopen if 
you feel this is still an important issue.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46184" />
    <CreationDate amount="2003-11-06 06:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[misc] Add magnifying feature to text editor</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="ASSIGNED" />
    <resolution amount="" />
    <WithStack>This idea tries to address the problem of not having to compromise between 
small/large font in the text editor. Larger font makes text easier to read, but 
gives poor overview. Small font is harder to read, but gives better overview.

Idea:

Increase the fontsize around the cursor, and reduce outside, the idea being 
to "magnify" those parts that are currently being edited.

Øyvind
Some time ago we shortly investigated to offer commands to increase and decrease
the font for the text viewer.

Would be a nice feature.

moved to Platform Text</WithStack>
    <WithOutStack>This idea tries to address the problem of not having to compromise between 
small/large font in the text editor. Larger font makes text easier to read, but 
gives poor overview. Small font is harder to read, but gives better overview.

Idea:

Increase the fontsize around the cursor, and reduce outside, the idea being 
to "magnify" those parts that are currently being edited.

Øyvind
Some time ago we shortly investigated to offer commands to increase and decrease
the font for the text viewer.

Would be a nice feature.

moved to Platform Text</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46185" />
    <CreationDate amount="2003-11-06 06:23:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Introduce Factory creates two factory methods</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="12" end="79" />
        <code>public class StringTest {
	public void foo() {
		new String();
	}
}</code>
      </source_code>
      <source_code type="class">
        <location start="132" end="344" />
        <code>public class StringTest {
	public static String createString() {
		return new String();
	}

	public static String createString() {
		return new String();
	}

	public void foo() {
		StringTest.createString();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Test case:

public class StringTest {
	public void foo() {
		new String();
	}
}

create a factory method for new String(). You get

public class StringTest {
	public static String createString() {
		return new String();
	}

	public static String createString() {
		return new String();
	}

	public void foo() {
		StringTest.createString();
	}
}
Happens when using I20031029 as a base build
Didn't properly handle case where constructor was implicit. Fixed in latest 
build.</WithStack>
    <WithOutStack>Test case:

public class StringTest {
	public void foo() {
		new String();
	}
}

create a factory method for new String(). You get

public class StringTest {
	public static String createString() {
		return new String();
	}

	public static String createString() {
		return new String();
	}

	public void foo() {
		StringTest.createString();
	}
}
Happens when using I20031029 as a base build
Didn't properly handle case where constructor was implicit. Fixed in latest 
build.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46186" />
    <CreationDate amount="2003-11-06 06:38:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Introduce Factory: MalformedTreeException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341072102">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java:104)</Frame>
          <Frame depth="2">java.lang.reflect.InvocationTargetException.&lt;init&gt;(InvocationTargetException.java:66)</Frame>
          <Frame depth="3">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:271)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:377)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:297)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:293)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:79)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.previewPressed(RefactoringWizardDialog2.java:418)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.access$3(RefactoringWizardDialog2.java:416)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2$1.widgetSelected(RefactoringWizardDialog2.java:547)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)</Frame>
          <Frame depth="17">org.eclipse.jface.window.Window.runEventLoop(Window.java)</Frame>
          <Frame depth="18">org.eclipse.jface.window.Window.open(Window.java:563)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:56)</Frame>
          <Frame depth="20">com.ibm.watson.refactoring.actions.IntroduceFactoryAction.run(IntroduceFactoryAction.java:108)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:265)</Frame>
          <Frame depth="22">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:547)</Frame>
          <Frame depth="23">org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:494)</Frame>
          <Frame depth="24">org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:466)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1571)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.run(Workbench.java:1554)</Frame>
          <Frame depth="31">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="32">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="34">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)</Frame>
          <Frame depth="35">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)</Frame>
          <Frame depth="36">java.lang.reflect.Method.invoke(Method.java:386)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.run(Main.java:765)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.main(Main.java:599)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341072102">
        <Exception>org.eclipse.text.edits.MalformedTreeException</Exception>
        <Reason>Overlapping text 
edits</Reason>
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="2">org.eclipse.text.edits.MalformedTreeException.&lt;init&gt;(MalformedTreeException.java:35)</Frame>
          <Frame depth="3">org.eclipse.text.edits.TextEdit$InsertionComparator.compare(TextEdit.java:113)</Frame>
          <Frame depth="4">java.util.Collections.indexedBinarySearch(Collections.java:323)</Frame>
          <Frame depth="5">java.util.Collections.binarySearch(Collections.java:311)</Frame>
          <Frame depth="6">org.eclipse.text.edits.TextEdit.computeInsertionIndex(TextEdit.java:692)</Frame>
          <Frame depth="7">org.eclipse.text.edits.TextEdit.internalAdd(TextEdit.java:679)</Frame>
          <Frame depth="8">org.eclipse.text.edits.TextEdit.addChild(TextEdit.java:275)</Frame>
          <Frame depth="9">com.ibm.watson.refactoring.IntroduceFactoryRefactoring.addAllChangesFor(IntroduceFactoryRefactoring.java:948)</Frame>
          <Frame depth="10">com.ibm.watson.refactoring.IntroduceFactoryRefactoring.createChange(IntroduceFactoryRefactoring.java:1047)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:104)</Frame>
          <Frame depth="12">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="1">
      <source_code type="class">
        <location start="11" end="210" />
        <code>public class TestClass {
	
	public TestClass() {
	}
	
	public TestClass(int i) {
	}
	
	public static void main(String[] args) {
		TestClass t= new TestClass();
		TestClass t1= new TestClass(10);
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="2">
      <Enumeration lines="3">
        <Lines>
          <Line>- select new TestClass(10)</Line>
          <Line>- introduce factory</Line>
          <Line>- you get the exception below</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="7">
        <Lines>
          <Line>- create rewriter</Line>
          <Line>- do all modification to the rewriter without rewriting the node</Line>
          <Line>- do the rewriting at the end of the try block for all modifications.</Line>
          <Line>- to group modifications so that the preview will look nice a group</Line>
          <Line>descriptions can to be passed to the ASTRewrite methods (e.g mark*(ASTNode,</Line>
          <Line>GroupDescription).</Line>
          <Line>- add all used group descriptions at the end to the change object .</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>TestCase:

public class TestClass {
	
	public TestClass() {
	}
	
	public TestClass(int i) {
	}
	
	public static void main(String[] args) {
		TestClass t= new TestClass();
		TestClass t1= new TestClass(10);
	}
}

- select new TestClass(10)
- introduce factory
- you get the exception below

- the problem is that edits generated by one rewiter can't be easily combined. 
The code should be written in the following way:

- create rewriter
- do all modification to the rewriter without rewriting the node
- do the rewriting at the end of the try block for all modifications.
- to group modifications so that the preview will look nice a group
  descriptions can to be passed to the ASTRewrite methods (e.g mark*(ASTNode,
  GroupDescription).
- add all used group descriptions at the end to the change object .

====================== the exception ==============================
java.lang.reflect.InvocationTargetException
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at java.lang.Throwable.&lt;init&gt;(Throwable.java:104)
	at java.lang.reflect.InvocationTargetException.&lt;init&gt;
(InvocationTargetException.java:66)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run
(RefactoringWizardDialog2.java:271)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.createChange
(RefactoringWizard.java:377)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.computeUserInputSucce
ssorPage(RefactoringWizard.java:297)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.computeUserInputSucce
ssorPage(RefactoringWizard.java:293)
	at 
org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.getNextPage
(UserInputWizardPage.java:79)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.previewPressed
(RefactoringWizardDialog2.java:418)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.access$3
(RefactoringWizardDialog2.java:416)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2
$1.widgetSelected(RefactoringWizardDialog2.java:547)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java)
	at org.eclipse.jface.window.Window.open(Window.java:563)
	at 
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate
(RefactoringStarter.java:56)
	at com.ibm.watson.refactoring.actions.IntroduceFactoryAction.run
(IntroduceFactoryAction.java:108)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:265)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:547)
	at org.eclipse.jface.action.ActionContributionItem.access$4
(ActionContributionItem.java:494)
	at org.eclipse.jface.action.ActionContributionItem$6.handleEvent
(ActionContributionItem.java:466)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1571)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1554)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:79)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:41)
	at java.lang.reflect.Method.invoke(Method.java:386)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:765)
	at org.eclipse.core.launcher.Main.main(Main.java:599)
Caused by: org.eclipse.text.edits.MalformedTreeException: Overlapping text 
edits
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at org.eclipse.text.edits.MalformedTreeException.&lt;init&gt;
(MalformedTreeException.java:35)
	at org.eclipse.text.edits.TextEdit$InsertionComparator.compare
(TextEdit.java:113)
	at java.util.Collections.indexedBinarySearch(Collections.java:323)
	at java.util.Collections.binarySearch(Collections.java:311)
	at org.eclipse.text.edits.TextEdit.computeInsertionIndex
(TextEdit.java:692)
	at org.eclipse.text.edits.TextEdit.internalAdd(TextEdit.java:679)
	at org.eclipse.text.edits.TextEdit.addChild(TextEdit.java:275)
	at 
com.ibm.watson.refactoring.IntroduceFactoryRefactoring.addAllChangesFor
(IntroduceFactoryRefactoring.java:948)
	at com.ibm.watson.refactoring.IntroduceFactoryRefactoring.createChange
(IntroduceFactoryRefactoring.java:1047)
	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run
(CreateChangeOperation.java:104)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
Appends when using I20030929 as a base build
The change creation code is now following the recommended practice suggested in 
the original bug report (thanks Dirk!).</WithStack>
    <WithOutStack>TestCase:

public class TestClass {
	
	public TestClass() {
	}
	
	public TestClass(int i) {
	}
	
	public static void main(String[] args) {
		TestClass t= new TestClass();
		TestClass t1= new TestClass(10);
	}
}

- select new TestClass(10)
- introduce factory
- you get the exception below

- the problem is that edits generated by one rewiter can't be easily combined. 
The code should be written in the following way:

- create rewriter
- do all modification to the rewriter without rewriting the node
- do the rewriting at the end of the try block for all modifications.
- to group modifications so that the preview will look nice a group
  descriptions can to be passed to the ASTRewrite methods (e.g mark*(ASTNode,
  GroupDescription).
- add all used group descriptions at the end to the change object .

====================== the exception ==============================


Appends when using I20030929 as a base build
The change creation code is now following the recommended practice suggested in 
the original bug report (thanks Dirk!).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46187" />
    <CreationDate amount="2003-11-06 06:44:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Inefficiencies in org.eclipse.core.runtime.Path</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="5">
      <source_code type="functiondef">
        <location start="1024" end="1222" />
        <code>public int hashCode() {
	if( (separators &amp; HASH_MASK) == 0){
               separators = (computeHashCode() &lt;&lt; 3) | (_separators &amp;
ALL_SEPARATORS);
        }
        return separators &amp; HASH_MASK;
}</code>
      </source_code>
      <source_code type="assignment">
        <location start="1348" end="1424" />
        <code>separators = (computeHashCode() &lt;&lt; 3) | (_separators &amp; ALL_SEPARATORS);</code>
      </source_code>
      <source_code type="assignment">
        <location start="1434" end="1481" />
        <code>separators = _separators &amp; ALL_SEPARATORS;</code>
      </source_code>
      <source_code type="functioncall">
        <location start="2049" end="2114" />
        <code>getPath().removeFileExtension().addFileExtension(EXTENSION_java);</code>
      </source_code>
      <source_code type="functiondef">
        <location start="3579" end="4687" />
        <code>private String collapseSlashes(String path) {
	int length = path.length();
	// if the path is only 0, 1 or 2 chars long then it could not possibly have illegal
	// duplicate slashes.
	if (length &lt; 3)
		return path;
	// check for an occurence of // in the path.  Start at index 1 to ensure we
skip leading UNC //
	// If there are no // then there is nothing to collapse so just return.
	int startIdx = path.indexOf("//", 1);
	if(startIdx == -1)
		 return path;
	char[] result = new char[length - 1];  //We'll remove at least one slash
	int count = startIdx + 1;	//copy first slash too
	boolean hasPrevious = true; //we found slashes
	char[] characters = path.toCharArray();
	
	System.arraycopy(characters, 0, result, 0, count);
		 
	for (int index = startIdx + 2; index &lt; characters.length; index++) {
		char c = characters[index];
		if (c == SEPARATOR) {
			if (!hasPrevious) { //no need to check for UNC as index is surely &gt; 1
				hasPrevious = true;
				result[count] = c;
				count++;
			}
		} else {
			hasPrevious = false;
			result[count] = c;
			count++;
		}
	}
	return new String(result, 0, count);
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="3">
      <Enumeration lines="44">
        <Lines>
          <Line>1. Possible unnecessary String generation in collapseSlashes()</Line>
          <Line>While in case of some special cases collapseSlashes() rightly returns the path</Line>
          <Line>argument it received, it always generates a new String if the argument does not</Line>
          <Line>match those special cases, even if there was no change made (there were no</Line>
          <Line>duplicate slashes in the argument String). This is unnecessary in many cases (I</Line>
          <Line>think) and could be avoided by introducing a boolean local variable marking</Line>
          <Line>whether there were any changes made, and a new String would only be generated</Line>
          <Line>when there was a change made.</Line>
          <Line />
          <Line>2. It seems to me that the hashCode of Path is unnecessarily calculated in many</Line>
          <Line>cases.  The reason for this seems to be the fact that the same integer used to</Line>
          <Line>store the hashCode is also used to indicate some facts about the Path</Line>
          <Line>(separators).  This, however, could be improved by letting only hashCode()</Line>
          <Line>regenerate the hash if it is not set like:</Line>
          <Line />
          <Line />
          <Line />
          <Line>In those cases when the hashcode is now computed the hashCode part of separators</Line>
          <Line>should be zeroed out like:</Line>
          <Line>Instead of this</Line>
          <Line />
          <Line>use this</Line>
          <Line />
          <Line />
          <Line>In equals() the following change is necessary:</Line>
          <Line />
          <Line>From</Line>
          <Line>if ((separators &amp; HASH_MASK) != (target.separators &amp; HASH_MASK))</Line>
          <Line>to</Line>
          <Line>if (hashCode() != target.hashCode())</Line>
          <Line />
          <Line>As a result of these changes the hash would only be calculated when it is really</Line>
          <Line>needed.</Line>
          <Line />
          <Line>3. A couple of methods (I think) could be made static in this way decreasing the</Line>
          <Line>size of Path:</Line>
          <Line />
          <Line>computeSegmentCount()</Line>
          <Line>computeSegments()</Line>
          <Line>isValidPath()</Line>
          <Line>isValidSegment()</Line>
          <Line />
          <Line>4. Path is more or less non-mutable. However, there are cases, when this results</Line>
          <Line>in unnecessary object generation such as:</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="18">
        <Lines>
          <Line>1. What case did you have in mind where the current optimizations don't work?</Line>
          <Line>We currently only use the "slow" approach if there is a double-slash in the</Line>
          <Line>string. I don't know of any cases that include a double front slash that will be</Line>
          <Line>able to preserve the original string.</Line>
          <Line />
          <Line>2. Fair enough.  In practice hashCode is used quite frequently so I'm not</Line>
          <Line>convinced this is worthwhile.  I think the fact that we only ever compute it</Line>
          <Line>once per instance (and the fact that hashCode isn't overly expensive to compute</Line>
          <Line>in the first place), is sufficient optimization.  Do you have tests where this</Line>
          <Line>is affecting performance?</Line>
          <Line />
          <Line>3. Methods are not stored on instances.  The number of methods does not affect</Line>
          <Line>the size of an instance.</Line>
          <Line />
          <Line>4. True, but the benefits of immutable paths far outweighs the small performance</Line>
          <Line>cost in these cases.  We have a feature request already for the particular case</Line>
          <Line>you mention (bug 37187).</Line>
          <Line>1. Ummm ..., you're right, I overlooked this line</Line>
        </Lines>
      </Enumeration>
      <Enumeration lines="29">
        <Lines>
          <Line>1. Ummm ..., you're right, I overlooked this line</Line>
          <Line />
          <Line>if (path.indexOf("//", 1) == -1) //$NON-NLS-1$</Line>
          <Line>return path;</Line>
          <Line />
          <Line>One comment though: the result of indexOf could be used to initialize the start</Line>
          <Line>of the for loop to avoid going through the characters up to the first "//" again</Line>
          <Line>(although it might not worth it), something like:</Line>
          <Line />
          <Line />
          <Line />
          <Line>According to my measurements it is about 10% faster, than the original version</Line>
          <Line>in case there is a '//' in the String using a combination of various input strings.</Line>
          <Line />
          <Line>2. No, I only did a kind of a static code review, but will try to create some</Line>
          <Line>tests to compare the two approaches.</Line>
          <Line />
          <Line>3. Hmmm, this was a really stupid suggestion, sorry about that ...</Line>
          <Line />
          <Line>4. Sorry, I did not recognise that bug.</Line>
          <Line>Thanks for your input, but it's not worth further optimization in the case where</Line>
          <Line>the path contains duplicate slashes, since this is not a common case.  Since</Line>
          <Line>this class is relied upon by a great number of components, we don't like to make</Line>
          <Line>changes in there unless there's a very good reason.  If you're looking for</Line>
          <Line>things to optimize, I'm sure you can find many performance problems in Eclipse</Line>
          <Line>to look into (look for bugs with the "performance" keyword).  Path happens to be</Line>
          <Line>one of the most optimized classes in the system already, so I don't think you're</Line>
          <Line>going to find great speedups in here.</Line>
          <Line>Fine, thanks for your patience.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>The other day I happened to check the implementation of Path and found things
that could be made more efficient:

1. Possible unnecessary String generation in collapseSlashes()
While in case of some special cases collapseSlashes() rightly returns the path
argument it received, it always generates a new String if the argument does not
match those special cases, even if there was no change made (there were no
duplicate slashes in the argument String). This is unnecessary in many cases (I
think) and could be avoided by introducing a boolean local variable marking
whether there were any changes made, and a new String would only be generated
when there was a change made.

2. It seems to me that the hashCode of Path is unnecessarily calculated in many
cases.  The reason for this seems to be the fact that the same integer used to
store the hashCode is also used to indicate some facts about the Path
(separators).  This, however, could be improved by letting only hashCode()
regenerate the hash if it is not set like:

public int hashCode() {
	if( (separators &amp; HASH_MASK) == 0){
               separators = (computeHashCode() &lt;&lt; 3) | (_separators &amp;
ALL_SEPARATORS);
        }
        return separators &amp; HASH_MASK;
}

In those cases when the hashcode is now computed the hashCode part of separators
should be zeroed out like:
Instead of this
     separators = (computeHashCode() &lt;&lt; 3) | (_separators &amp; ALL_SEPARATORS);
use this
     separators = _separators &amp; ALL_SEPARATORS;

In equals() the following change is necessary:

From
	if ((separators &amp; HASH_MASK) != (target.separators &amp; HASH_MASK))
to
	if (hashCode() != target.hashCode())

As a result of these changes the hash would only be calculated when it is really
needed.

3. A couple of methods (I think) could be made static in this way decreasing the
size of Path:

computeSegmentCount()
computeSegments()
isValidPath()
isValidSegment()

4. Path is more or less non-mutable. However, there are cases, when this results
in unnecessary object generation such as:

IPath sourceFilePath =
getPath().removeFileExtension().addFileExtension(EXTENSION_java);

in ClassFile.java

where removeFileExtension() (or more precisely removeLastSegments() called by
removeFileExtension) creates a new Path objects only used temporarily to create
another one in addFileExtension().
1. What case did you have in mind where the current optimizations don't work? 
We currently only use the "slow" approach if there is a double-slash in the
string. I don't know of any cases that include a double front slash that will be
able to preserve the original string.

2. Fair enough.  In practice hashCode is used quite frequently so I'm not
convinced this is worthwhile.  I think the fact that we only ever compute it
once per instance (and the fact that hashCode isn't overly expensive to compute
in the first place), is sufficient optimization.  Do you have tests where this
is affecting performance?

3. Methods are not stored on instances.  The number of methods does not affect
the size of an instance.

4. True, but the benefits of immutable paths far outweighs the small performance
cost in these cases.  We have a feature request already for the particular case
you mention (bug 37187).
1. Ummm ..., you're right, I overlooked this line

        if (path.indexOf("//", 1) == -1) //$NON-NLS-1$
                return path;

One comment though: the result of indexOf could be used to initialize the start
of the for loop to avoid going through the characters up to the first "//" again
(although it might not worth it), something like:

private String collapseSlashes(String path) {
	int length = path.length();
	// if the path is only 0, 1 or 2 chars long then it could not possibly have illegal
	// duplicate slashes.
	if (length &lt; 3)
		return path;
	// check for an occurence of // in the path.  Start at index 1 to ensure we
skip leading UNC //
	// If there are no // then there is nothing to collapse so just return.
	int startIdx = path.indexOf("//", 1);
	if(startIdx == -1)
		 return path;
	char[] result = new char[length - 1];  //We'll remove at least one slash
	int count = startIdx + 1;	//copy first slash too
	boolean hasPrevious = true; //we found slashes
	char[] characters = path.toCharArray();
	
	System.arraycopy(characters, 0, result, 0, count);
		 
	for (int index = startIdx + 2; index &lt; characters.length; index++) {
		char c = characters[index];
		if (c == SEPARATOR) {
			if (!hasPrevious) { //no need to check for UNC as index is surely &gt; 1
				hasPrevious = true;
				result[count] = c;
				count++;
			}
		} else {
			hasPrevious = false;
			result[count] = c;
			count++;
		}
	}
	return new String(result, 0, count);
}

According to my measurements it is about 10% faster, than the original version
in case there is a '//' in the String using a combination of various input strings.

2. No, I only did a kind of a static code review, but will try to create some
tests to compare the two approaches.

3. Hmmm, this was a really stupid suggestion, sorry about that ...

4. Sorry, I did not recognise that bug.
Thanks for your input, but it's not worth further optimization in the case where
the path contains duplicate slashes, since this is not a common case.  Since
this class is relied upon by a great number of components, we don't like to make
changes in there unless there's a very good reason.  If you're looking for
things to optimize, I'm sure you can find many performance problems in Eclipse
to look into (look for bugs with the "performance" keyword).  Path happens to be
one of the most optimized classes in the system already, so I don't think you're
going to find great speedups in here.
Fine, thanks for your patience.</WithStack>
    <WithOutStack>The other day I happened to check the implementation of Path and found things
that could be made more efficient:

1. Possible unnecessary String generation in collapseSlashes()
While in case of some special cases collapseSlashes() rightly returns the path
argument it received, it always generates a new String if the argument does not
match those special cases, even if there was no change made (there were no
duplicate slashes in the argument String). This is unnecessary in many cases (I
think) and could be avoided by introducing a boolean local variable marking
whether there were any changes made, and a new String would only be generated
when there was a change made.

2. It seems to me that the hashCode of Path is unnecessarily calculated in many
cases.  The reason for this seems to be the fact that the same integer used to
store the hashCode is also used to indicate some facts about the Path
(separators).  This, however, could be improved by letting only hashCode()
regenerate the hash if it is not set like:

public int hashCode() {
	if( (separators &amp; HASH_MASK) == 0){
               separators = (computeHashCode() &lt;&lt; 3) | (_separators &amp;
ALL_SEPARATORS);
        }
        return separators &amp; HASH_MASK;
}

In those cases when the hashcode is now computed the hashCode part of separators
should be zeroed out like:
Instead of this
     separators = (computeHashCode() &lt;&lt; 3) | (_separators &amp; ALL_SEPARATORS);
use this
     separators = _separators &amp; ALL_SEPARATORS;

In equals() the following change is necessary:

From
	if ((separators &amp; HASH_MASK) != (target.separators &amp; HASH_MASK))
to
	if (hashCode() != target.hashCode())

As a result of these changes the hash would only be calculated when it is really
needed.

3. A couple of methods (I think) could be made static in this way decreasing the
size of Path:

computeSegmentCount()
computeSegments()
isValidPath()
isValidSegment()

4. Path is more or less non-mutable. However, there are cases, when this results
in unnecessary object generation such as:

IPath sourceFilePath =
getPath().removeFileExtension().addFileExtension(EXTENSION_java);

in ClassFile.java

where removeFileExtension() (or more precisely removeLastSegments() called by
removeFileExtension) creates a new Path objects only used temporarily to create
another one in addFileExtension().
1. What case did you have in mind where the current optimizations don't work? 
We currently only use the "slow" approach if there is a double-slash in the
string. I don't know of any cases that include a double front slash that will be
able to preserve the original string.

2. Fair enough.  In practice hashCode is used quite frequently so I'm not
convinced this is worthwhile.  I think the fact that we only ever compute it
once per instance (and the fact that hashCode isn't overly expensive to compute
in the first place), is sufficient optimization.  Do you have tests where this
is affecting performance?

3. Methods are not stored on instances.  The number of methods does not affect
the size of an instance.

4. True, but the benefits of immutable paths far outweighs the small performance
cost in these cases.  We have a feature request already for the particular case
you mention (bug 37187).
1. Ummm ..., you're right, I overlooked this line

        if (path.indexOf("//", 1) == -1) //$NON-NLS-1$
                return path;

One comment though: the result of indexOf could be used to initialize the start
of the for loop to avoid going through the characters up to the first "//" again
(although it might not worth it), something like:

private String collapseSlashes(String path) {
	int length = path.length();
	// if the path is only 0, 1 or 2 chars long then it could not possibly have illegal
	// duplicate slashes.
	if (length &lt; 3)
		return path;
	// check for an occurence of // in the path.  Start at index 1 to ensure we
skip leading UNC //
	// If there are no // then there is nothing to collapse so just return.
	int startIdx = path.indexOf("//", 1);
	if(startIdx == -1)
		 return path;
	char[] result = new char[length - 1];  //We'll remove at least one slash
	int count = startIdx + 1;	//copy first slash too
	boolean hasPrevious = true; //we found slashes
	char[] characters = path.toCharArray();
	
	System.arraycopy(characters, 0, result, 0, count);
		 
	for (int index = startIdx + 2; index &lt; characters.length; index++) {
		char c = characters[index];
		if (c == SEPARATOR) {
			if (!hasPrevious) { //no need to check for UNC as index is surely &gt; 1
				hasPrevious = true;
				result[count] = c;
				count++;
			}
		} else {
			hasPrevious = false;
			result[count] = c;
			count++;
		}
	}
	return new String(result, 0, count);
}

According to my measurements it is about 10% faster, than the original version
in case there is a '//' in the String using a combination of various input strings.

2. No, I only did a kind of a static code review, but will try to create some
tests to compare the two approaches.

3. Hmmm, this was a really stupid suggestion, sorry about that ...

4. Sorry, I did not recognise that bug.
Thanks for your input, but it's not worth further optimization in the case where
the path contains duplicate slashes, since this is not a common case.  Since
this class is relied upon by a great number of components, we don't like to make
changes in there unless there's a very good reason.  If you're looking for
things to optimize, I'm sure you can find many performance problems in Eclipse
to look into (look for bugs with the "performance" keyword).  Path happens to be
one of the most optimized classes in the system already, so I don't think you're
going to find great speedups in here.
Fine, thanks for your patience.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46188" />
    <CreationDate amount="2003-11-06 07:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Modeling" />
    <Product amount="MDT.XSD" />
    <component amount="Core" />
    <Version amount="1.0.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="blocker" />
    <Summery>EMFPort: XML Schema resolving schema locations problem</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="8">
      <source_code type="multicomment">
        <location start="611" end="1518" />
        <code>/**
   * Resolve the namespace and schema location relative to the base schema 
location.
   * For example, the expression
   *&lt;pre&gt;
   *  resolveSchemaLocation
   *    ("http://www.example.com/A/a.xsd", 
   *     "http://www.example.com/B", 
   *     "../B/b.xsd");
   *&lt;/pre&gt;
   * would yield
   *&lt;pre&gt;
   *  "http://www.example.com/B/b.xsd"
   *&lt;/pre&gt;
   * When no namespace schema location is provided, the namespace itself will 
be used.
   * @param baseSchemaLocationURI the location of the schema containing the 
reference, i.e., {@link com.ibm.etools.xsd.XSDSchema#getSchemaLocation}.
   * @param namespaceURI the namespace being resolved, i.e., {@link 
com.ibm.etools.xsd.XSDImport#getNamespace}.
   * @param schemaLocationURI the suggested location of the namespace being 
resolved, i.e., {@link com.ibm.etools.xsd.XSDImport#getSchemaLocation}.
   * @return the resolved schema location.
   */</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="1661" end="1755" />
        <code>if (schemaLocationURI == null)
      {
        schemaLocationURI = namespaceURI;
      }</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="1756" end="3006" />
        <code>if (schemaLocationURI != null)
      {
        URI schemaLocation = URIFactoryRegister.getFactory().makeURI
(schemaLocationURI);
        String schemaLocationFile = schemaLocation.getFile();
        IPath schemaLocationPath = new Path(schemaLocationFile);
        if (!schemaLocationPath.isAbsolute())
        {
          int index = baseSchemaLocationURI.lastIndexOf("/");
          baseSchemaLocationURI = baseSchemaLocationURI.substring(0, index);
          if (index != -1)
          {
           if (schemaLocationPath.segmentCount() &gt; 0)
           {
              while (schemaLocationPath.segment(0).equals(".."))
              {
                int indexOfSlash = baseSchemaLocationURI.lastIndexOf("/");
                if (indexOfSlash != -1)
                {
                  schemaLocationPath = schemaLocationPath.removeFirstSegments
(1);
                  baseSchemaLocationURI = baseSchemaLocationURI.substring(0, 
indexOfSlash);
                }
                else
                {
                  break;
                }
              }
           }

            String resolvedSchemaLocation = baseSchemaLocationURI + "/" + 
schemaLocationPath;
            return resolvedSchemaLocation;
          }
        }
      }</code>
      </source_code>
      <source_code type="functioncall">
        <location start="3051" end="3085" />
        <code>exception.printStackTrace();</code>
      </source_code>
      <source_code type="multicomment">
        <location start="3555" end="4452" />
        <code>/**
   * Resolve the namespace and schema location relative to the base schema 
location.
   * For example, the expression
   *&lt;pre&gt;
   *  resolveSchemaLocation
   *    ("http://www.example.com/A/a.xsd", 
   *     "http://www.example.com/B", 
   *     "../B/b.xsd");
   *&lt;/pre&gt;
   * would yield
   *&lt;pre&gt;
   *  "http://www.example.com/B/b.xsd"
   *&lt;/pre&gt;
   * When no namespace schema location is provided, the namespace itself will 
be used.
   * @param baseSchemaLocationURI the location of the schema containing the 
reference, i.e., {@link org.eclipse.xsd.XSDSchema#getSchemaLocation}.
   * @param namespaceURI the namespace being resolved, i.e., {@link 
org.eclipse.xsd.XSDImport#getNamespace}.
   * @param schemaLocationURI the suggested location of the namespace being 
resolved, i.e., {@link org.eclipse.xsd.XSDImport#getSchemaLocation}.
   * @return the resolved schema location.
   */</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="4595" end="4689" />
        <code>if (schemaLocationURI == null)
      {
        schemaLocationURI = namespaceURI;
      }</code>
      </source_code>
      <source_code type="ifstatement">
        <location start="4690" end="5127" />
        <code>if (schemaLocationURI != null)
      {
        URI baseSchemaLocation = URI.createURI(baseSchemaLocationURI);
        URI schemaLocation = URI.createURI(schemaLocationURI);
        if (baseSchemaLocation.isHierarchical() &amp;&amp; !
baseSchemaLocation.isRelative() &amp;&amp; schemaLocation.isRelative())
        {
          schemaLocation = schemaLocation.resolve(baseSchemaLocation);
        }

        return schemaLocation.toString();
      }</code>
      </source_code>
      <source_code type="functioncall">
        <location start="5172" end="5206" />
        <code>exception.printStackTrace();</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>Hello Ed,  Dan wanted me to open a bugzilla to track this problem.

I have one problem when I have an xsd file including/importing another xsd 
file.

The files to reproduce this are any file that includes another file.  In my 
example I have top.xsd including external.xsd with schemaLocation 
= "external.xsd"


We need XSDConstants resolveSchemaLocation(String baseSchemaLocationURI, 
String namespaceURI,  String schemaLocationURI) to return "MSet/external.xsd" 
when you load top.xsd and this method gets called to resolve external.xsd.

Now let me explain what is happening when we use com.ibm.etools.xsd


  /**
   * Resolve the namespace and schema location relative to the base schema 
location.
   * For example, the expression
   *&lt;pre&gt;
   *  resolveSchemaLocation
   *    ("http://www.example.com/A/a.xsd", 
   *     "http://www.example.com/B", 
   *     "../B/b.xsd");
   *&lt;/pre&gt;
   * would yield
   *&lt;pre&gt;
   *  "http://www.example.com/B/b.xsd"
   *&lt;/pre&gt;
   * When no namespace schema location is provided, the namespace itself will 
be used.
   * @param baseSchemaLocationURI the location of the schema containing the 
reference, i.e., {@link com.ibm.etools.xsd.XSDSchema#getSchemaLocation}.
   * @param namespaceURI the namespace being resolved, i.e., {@link 
com.ibm.etools.xsd.XSDImport#getNamespace}.
   * @param schemaLocationURI the suggested location of the namespace being 
resolved, i.e., {@link com.ibm.etools.xsd.XSDImport#getSchemaLocation}.
   * @return the resolved schema location.
   */
  public static String resolveSchemaLocation(String baseSchemaLocationURI, 
String namespaceURI,  String schemaLocationURI)
  {
    try
    {
      if (schemaLocationURI == null)
      {
        schemaLocationURI = namespaceURI;
      }
      if (schemaLocationURI != null)
      {
        URI schemaLocation = URIFactoryRegister.getFactory().makeURI
(schemaLocationURI);
        String schemaLocationFile = schemaLocation.getFile();
        IPath schemaLocationPath = new Path(schemaLocationFile);
        if (!schemaLocationPath.isAbsolute())
        {
          int index = baseSchemaLocationURI.lastIndexOf("/");
          baseSchemaLocationURI = baseSchemaLocationURI.substring(0, index);
          if (index != -1)
          {
           if (schemaLocationPath.segmentCount() &gt; 0)
           {
              while (schemaLocationPath.segment(0).equals(".."))
              {
                int indexOfSlash = baseSchemaLocationURI.lastIndexOf("/");
                if (indexOfSlash != -1)
                {
                  schemaLocationPath = schemaLocationPath.removeFirstSegments
(1);
                  baseSchemaLocationURI = baseSchemaLocationURI.substring(0, 
indexOfSlash);
                }
                else
                {
                  break;
                }
              }
           }

            String resolvedSchemaLocation = baseSchemaLocationURI + "/" + 
schemaLocationPath;
            return resolvedSchemaLocation;
          }
        }
      }
    }
    catch (Exception exception)
    {
      exception.printStackTrace();
    }

    return schemaLocationURI;
  }




When I load top.xsd the XSDConstants.resolveSchemaLocation() gets called and 
this is what is passed in
baseSchemaLocationURI = MSet/top.mxsd
nameSpaceURI = null
schemaLocationURI = external.xsd

then baseSchemaLocationURI is set the baseSchemaLocationURI but without the 
file name in it = MSet

Then this method returns baseSchemaLocationURI + "/" + schemaLocationPath, 
which is "MSet/external.xsd"


org.eclipse.xsd way

  /**
   * Resolve the namespace and schema location relative to the base schema 
location.
   * For example, the expression
   *&lt;pre&gt;
   *  resolveSchemaLocation
   *    ("http://www.example.com/A/a.xsd", 
   *     "http://www.example.com/B", 
   *     "../B/b.xsd");
   *&lt;/pre&gt;
   * would yield
   *&lt;pre&gt;
   *  "http://www.example.com/B/b.xsd"
   *&lt;/pre&gt;
   * When no namespace schema location is provided, the namespace itself will 
be used.
   * @param baseSchemaLocationURI the location of the schema containing the 
reference, i.e., {@link org.eclipse.xsd.XSDSchema#getSchemaLocation}.
   * @param namespaceURI the namespace being resolved, i.e., {@link 
org.eclipse.xsd.XSDImport#getNamespace}.
   * @param schemaLocationURI the suggested location of the namespace being 
resolved, i.e., {@link org.eclipse.xsd.XSDImport#getSchemaLocation}.
   * @return the resolved schema location.
   */
  public static String resolveSchemaLocation(String baseSchemaLocationURI, 
String namespaceURI,  String schemaLocationURI)
  {
    try
    {
      if (schemaLocationURI == null)
      {
        schemaLocationURI = namespaceURI;
      }
      if (schemaLocationURI != null)
      {
        URI baseSchemaLocation = URI.createURI(baseSchemaLocationURI);
        URI schemaLocation = URI.createURI(schemaLocationURI);
        if (baseSchemaLocation.isHierarchical() &amp;&amp; !
baseSchemaLocation.isRelative() &amp;&amp; schemaLocation.isRelative())
        {
          schemaLocation = schemaLocation.resolve(baseSchemaLocation);
        }

        return schemaLocation.toString();
      }
    }
    catch (Exception exception)
    {
      exception.printStackTrace();
    }

    return schemaLocationURI;
  }




When I load top.xsd the XSDConstants.resolveSchemaLocation() gets called and 
this is what is passed in
baseSchemaLocationURI = MSet/top.mxsd
nameSpaceURI = null
schemaLocationURI = external.xsd

This method returns schemaLocation.toString() , which is "external.xsd" 
because it does not get into the if (baseSchemaLocation.isHierarchical() &amp;&amp; !
baseSchemaLocation.isRelative() &amp;&amp; schemaLocation.isRelative()) statement.

Now when it tries to load external.xsd it can't find it.  It needs to be 
MSet/external.xsd.

This is a blocker for us because we break migration if this is not fixed.
Lets do the solution we talked about.
This will be fixed in a 1.1.1.1 maintenance version.
The fix is available in 1.1.1.1 or later.
Move to verified as per bug 206558.
Move to verified as per bug 206558.</WithStack>
    <WithOutStack>Hello Ed,  Dan wanted me to open a bugzilla to track this problem.

I have one problem when I have an xsd file including/importing another xsd 
file.

The files to reproduce this are any file that includes another file.  In my 
example I have top.xsd including external.xsd with schemaLocation 
= "external.xsd"


We need XSDConstants resolveSchemaLocation(String baseSchemaLocationURI, 
String namespaceURI,  String schemaLocationURI) to return "MSet/external.xsd" 
when you load top.xsd and this method gets called to resolve external.xsd.

Now let me explain what is happening when we use com.ibm.etools.xsd


  /**
   * Resolve the namespace and schema location relative to the base schema 
location.
   * For example, the expression
   *&lt;pre&gt;
   *  resolveSchemaLocation
   *    ("http://www.example.com/A/a.xsd", 
   *     "http://www.example.com/B", 
   *     "../B/b.xsd");
   *&lt;/pre&gt;
   * would yield
   *&lt;pre&gt;
   *  "http://www.example.com/B/b.xsd"
   *&lt;/pre&gt;
   * When no namespace schema location is provided, the namespace itself will 
be used.
   * @param baseSchemaLocationURI the location of the schema containing the 
reference, i.e., {@link com.ibm.etools.xsd.XSDSchema#getSchemaLocation}.
   * @param namespaceURI the namespace being resolved, i.e., {@link 
com.ibm.etools.xsd.XSDImport#getNamespace}.
   * @param schemaLocationURI the suggested location of the namespace being 
resolved, i.e., {@link com.ibm.etools.xsd.XSDImport#getSchemaLocation}.
   * @return the resolved schema location.
   */
  public static String resolveSchemaLocation(String baseSchemaLocationURI, 
String namespaceURI,  String schemaLocationURI)
  {
    try
    {
      if (schemaLocationURI == null)
      {
        schemaLocationURI = namespaceURI;
      }
      if (schemaLocationURI != null)
      {
        URI schemaLocation = URIFactoryRegister.getFactory().makeURI
(schemaLocationURI);
        String schemaLocationFile = schemaLocation.getFile();
        IPath schemaLocationPath = new Path(schemaLocationFile);
        if (!schemaLocationPath.isAbsolute())
        {
          int index = baseSchemaLocationURI.lastIndexOf("/");
          baseSchemaLocationURI = baseSchemaLocationURI.substring(0, index);
          if (index != -1)
          {
           if (schemaLocationPath.segmentCount() &gt; 0)
           {
              while (schemaLocationPath.segment(0).equals(".."))
              {
                int indexOfSlash = baseSchemaLocationURI.lastIndexOf("/");
                if (indexOfSlash != -1)
                {
                  schemaLocationPath = schemaLocationPath.removeFirstSegments
(1);
                  baseSchemaLocationURI = baseSchemaLocationURI.substring(0, 
indexOfSlash);
                }
                else
                {
                  break;
                }
              }
           }

            String resolvedSchemaLocation = baseSchemaLocationURI + "/" + 
schemaLocationPath;
            return resolvedSchemaLocation;
          }
        }
      }
    }
    catch (Exception exception)
    {
      exception.printStackTrace();
    }

    return schemaLocationURI;
  }




When I load top.xsd the XSDConstants.resolveSchemaLocation() gets called and 
this is what is passed in
baseSchemaLocationURI = MSet/top.mxsd
nameSpaceURI = null
schemaLocationURI = external.xsd

then baseSchemaLocationURI is set the baseSchemaLocationURI but without the 
file name in it = MSet

Then this method returns baseSchemaLocationURI + "/" + schemaLocationPath, 
which is "MSet/external.xsd"


org.eclipse.xsd way

  /**
   * Resolve the namespace and schema location relative to the base schema 
location.
   * For example, the expression
   *&lt;pre&gt;
   *  resolveSchemaLocation
   *    ("http://www.example.com/A/a.xsd", 
   *     "http://www.example.com/B", 
   *     "../B/b.xsd");
   *&lt;/pre&gt;
   * would yield
   *&lt;pre&gt;
   *  "http://www.example.com/B/b.xsd"
   *&lt;/pre&gt;
   * When no namespace schema location is provided, the namespace itself will 
be used.
   * @param baseSchemaLocationURI the location of the schema containing the 
reference, i.e., {@link org.eclipse.xsd.XSDSchema#getSchemaLocation}.
   * @param namespaceURI the namespace being resolved, i.e., {@link 
org.eclipse.xsd.XSDImport#getNamespace}.
   * @param schemaLocationURI the suggested location of the namespace being 
resolved, i.e., {@link org.eclipse.xsd.XSDImport#getSchemaLocation}.
   * @return the resolved schema location.
   */
  public static String resolveSchemaLocation(String baseSchemaLocationURI, 
String namespaceURI,  String schemaLocationURI)
  {
    try
    {
      if (schemaLocationURI == null)
      {
        schemaLocationURI = namespaceURI;
      }
      if (schemaLocationURI != null)
      {
        URI baseSchemaLocation = URI.createURI(baseSchemaLocationURI);
        URI schemaLocation = URI.createURI(schemaLocationURI);
        if (baseSchemaLocation.isHierarchical() &amp;&amp; !
baseSchemaLocation.isRelative() &amp;&amp; schemaLocation.isRelative())
        {
          schemaLocation = schemaLocation.resolve(baseSchemaLocation);
        }

        return schemaLocation.toString();
      }
    }
    catch (Exception exception)
    {
      exception.printStackTrace();
    }

    return schemaLocationURI;
  }




When I load top.xsd the XSDConstants.resolveSchemaLocation() gets called and 
this is what is passed in
baseSchemaLocationURI = MSet/top.mxsd
nameSpaceURI = null
schemaLocationURI = external.xsd

This method returns schemaLocation.toString() , which is "external.xsd" 
because it does not get into the if (baseSchemaLocation.isHierarchical() &amp;&amp; !
baseSchemaLocation.isRelative() &amp;&amp; schemaLocation.isRelative()) statement.

Now when it tries to load external.xsd it can't find it.  It needs to be 
MSet/external.xsd.

This is a blocker for us because we break migration if this is not fixed.
Lets do the solution we talked about.
This will be fixed in a 1.1.1.1 maintenance version.
The fix is available in 1.1.1.1 or later.
Move to verified as per bug 206558.
Move to verified as per bug 206558.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46189" />
    <CreationDate amount="2003-11-06 08:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Introduce Factory: doesn't generate factory method</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="12" end="63" />
        <code>public class TestClass {
	public TestClass() {
	}
}</code>
      </source_code>
      <source_code type="class">
        <location start="65" end="137" />
        <code>public class UseTestClass {
	public void foo() {
		new TestClass();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- select new TestClass in UseTestClass#foo</Line>
          <Line>- the needed static method createTestClass isn't inserted into TestClass</Line>
          <Line>This was actually two issues. First, there are two top-level public classes in</Line>
          <Line>this example, which prevents the constructor call binding from resolving to</Line>
          <Line>anything. Second, the refactoring wasn't handling expression statements</Line>
          <Line>properly, which is now fixed. There are now JUnit testcases for both issues.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Test case:

public class TestClass {
	public TestClass() {
	}
}

public class UseTestClass {
	public void foo() {
		new TestClass();
	}
}

- select new TestClass in UseTestClass#foo
- the needed static method createTestClass isn't inserted into TestClass
This was actually two issues. First, there are two top-level public classes in 
this example, which prevents the constructor call binding from resolving to 
anything. Second, the refactoring wasn't handling expression statements 
properly, which is now fixed. There are now JUnit testcases for both issues.</WithStack>
    <WithOutStack>Test case:

public class TestClass {
	public TestClass() {
	}
}

public class UseTestClass {
	public void foo() {
		new TestClass();
	}
}

- select new TestClass in UseTestClass#foo
- the needed static method createTestClass isn't inserted into TestClass
This was actually two issues. First, there are two top-level public classes in 
this example, which prevents the constructor call binding from resolving to 
anything. Second, the refactoring wasn't handling expression statements 
properly, which is now fixed. There are now JUnit testcases for both issues.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46190" />
    <CreationDate amount="2003-11-06 08:17:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Introduce Factory: IllegalArgumentException</Summery>
    <Patches amount="0" />
    <Stacktraces amount="2">
      <Stacktrace timestamp="1437341072113">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">java.lang.Throwable.&lt;init&gt;(Throwable.java:104)</Frame>
          <Frame depth="2">java.lang.reflect.InvocationTargetException.&lt;init&gt;(InvocationTargetException.java:66)</Frame>
          <Frame depth="3">org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:271)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:377)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:297)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:293)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:79)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.previewPressed(RefactoringWizardDialog2.java:418)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.access$3(RefactoringWizardDialog2.java:416)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2$1.widgetSelected(RefactoringWizardDialog2.java:547)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java)</Frame>
          <Frame depth="13">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="14">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="15">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)</Frame>
          <Frame depth="16">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)</Frame>
          <Frame depth="17">org.eclipse.jface.window.Window.runEventLoop(Window.java)</Frame>
          <Frame depth="18">org.eclipse.jface.window.Window.open(Window.java:563)</Frame>
          <Frame depth="19">org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:56)</Frame>
          <Frame depth="20">com.ibm.watson.refactoring.actions.IntroduceFactoryAction.run(IntroduceFactoryAction.java:108)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:265)</Frame>
          <Frame depth="22">org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:541)</Frame>
          <Frame depth="23">org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:494)</Frame>
          <Frame depth="24">org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:466)</Frame>
          <Frame depth="25">org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)</Frame>
          <Frame depth="28">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)</Frame>
          <Frame depth="29">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2347)</Frame>
          <Frame depth="30">org.eclipse.ui.internal.Workbench.run(Workbench.java:2330)</Frame>
          <Frame depth="31">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="32">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="33">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="34">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)</Frame>
          <Frame depth="35">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:41)</Frame>
          <Frame depth="36">java.lang.reflect.Method.invoke(Method.java:386)</Frame>
          <Frame depth="37">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="38">org.eclipse.core.launcher.Main.run(Main.java:765)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.main(Main.java:599)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341072113">
        <Exception>java.lang.IllegalArgumentException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.lang.Throwable.&lt;init&gt;(Throwable.java)</Frame>
          <Frame depth="1">org.eclipse.jdt.core.dom.ASTNode.checkNewChild(ASTNode.java:1042)</Frame>
          <Frame depth="2">org.eclipse.jdt.core.dom.ASTNode$NodeList.add(ASTNode.java:774)</Frame>
          <Frame depth="3">com.ibm.watson.refactoring.IntroduceFactoryRefactoring.createFactoryChange(IntroduceFactoryRefactoring.java:1026)</Frame>
          <Frame depth="4">com.ibm.watson.refactoring.IntroduceFactoryRefactoring.addAllChangesFor(IntroduceFactoryRefactoring.java:928)</Frame>
          <Frame depth="5">com.ibm.watson.refactoring.IntroduceFactoryRefactoring.createChange(IntroduceFactoryRefactoring.java:1047)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:104)</Frame>
          <Frame depth="7">org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="2">
      <source_code type="class">
        <location start="12" end="110" />
        <code>public class TestClass {
	
	public TestClass() {
	}
	
	public void foo() {
		new TestClass();
	}
}</code>
      </source_code>
      <source_code type="class">
        <location start="112" end="184" />
        <code>public class UseTestClass {
	public void foo() {
		new TestClass();
	}
}</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- select new TestClass in UseTestClass#foo</Line>
          <Line>- check create factory</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>Test Case:

public class TestClass {
	
	public TestClass() {
	}
	
	public void foo() {
		new TestClass();
	}
}

public class UseTestClass {
	public void foo() {
		new TestClass();
	}
}

- select new TestClass in UseTestClass#foo
- check create factory

java.lang.reflect.InvocationTargetException
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at java.lang.Throwable.&lt;init&gt;(Throwable.java:104)
	at java.lang.reflect.InvocationTargetException.&lt;init&gt;
(InvocationTargetException.java:66)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:283)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.run
(RefactoringWizardDialog2.java:271)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.createChange
(RefactoringWizard.java:377)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.computeUserInputSucce
ssorPage(RefactoringWizard.java:297)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizard.computeUserInputSucce
ssorPage(RefactoringWizard.java:293)
	at 
org.eclipse.jdt.internal.ui.refactoring.UserInputWizardPage.getNextPage
(UserInputWizardPage.java:79)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.previewPressed
(RefactoringWizardDialog2.java:418)
	at 
org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2.access$3
(RefactoringWizardDialog2.java:416)
	at org.eclipse.jdt.internal.ui.refactoring.RefactoringWizardDialog2
$1.widgetSelected(RefactoringWizardDialog2.java:547)
	at org.eclipse.swt.widgets.TypedListener.handleEvent
(TypedListener.java)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java)
	at org.eclipse.jface.window.Window.open(Window.java:563)
	at 
org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate
(RefactoringStarter.java:56)
	at com.ibm.watson.refactoring.actions.IntroduceFactoryAction.run
(IntroduceFactoryAction.java:108)
	at org.eclipse.ui.internal.PluginAction.runWithEvent
(PluginAction.java:265)
	at 
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:541)
	at org.eclipse.jface.action.ActionContributionItem.access$4
(ActionContributionItem.java:494)
	at org.eclipse.jface.action.ActionContributionItem$6.handleEvent
(ActionContributionItem.java:466)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2347)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:2330)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:79)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:41)
	at java.lang.reflect.Method.invoke(Method.java:386)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
	at org.eclipse.core.launcher.Main.run(Main.java:765)
	at org.eclipse.core.launcher.Main.main(Main.java:599)
Caused by: java.lang.IllegalArgumentException
	at java.lang.Throwable.&lt;init&gt;(Throwable.java)
	at org.eclipse.jdt.core.dom.ASTNode.checkNewChild(ASTNode.java:1042)
	at org.eclipse.jdt.core.dom.ASTNode$NodeList.add(ASTNode.java:774)
	at 
com.ibm.watson.refactoring.IntroduceFactoryRefactoring.createFactoryChange
(IntroduceFactoryRefactoring.java:1026)
	at 
com.ibm.watson.refactoring.IntroduceFactoryRefactoring.addAllChangesFor
(IntroduceFactoryRefactoring.java:928)
	at com.ibm.watson.refactoring.IntroduceFactoryRefactoring.createChange
(IntroduceFactoryRefactoring.java:1047)
	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run
(CreateChangeOperation.java:104)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
Fixed in latest build.</WithStack>
    <WithOutStack>Test Case:

public class TestClass {
	
	public TestClass() {
	}
	
	public void foo() {
		new TestClass();
	}
}

public class UseTestClass {
	public void foo() {
		new TestClass();
	}
}

- select new TestClass in UseTestClass#foo
- check create factory



Fixed in latest build.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46191" />
    <CreationDate amount="2003-11-06 08:50:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>Make selectReveal() in PackageExplr work with JarEntryFiles</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>If I have an IPackageFragment (in a jar file) and get its non java resources, 
then try to selectReveal it in the PackageExplorer, nothing happens.

The PackageExplorer only seems to work with IJavaElement or IResources.

Seems to me that if selectReveal gets a JarEntryFile, why can't it reveal it?
I mean JarEntryFile is a jdt class, so you know its located in the hierarchy of 
the jar.

Now that I think of it. JarEntryFile(s) should be a bit more first class in the 
model. You should at least have an easier way to find the IPackageFragment it 
lives in. Maybe I've missed something but I'm scanning through the whole 
project, getting all the IPackageFragments, thier non java resources, and then 
doing comparison with the JarEntryFile I have. just to find the 
IPackageFragment it lives in. yuk.

Of course, JarEntryFile is an internal class (I never cast to that, I just use 
IStorage).
I just figured out why it wouldn't work wven if you tried.

If you add the same jar (external) to more than one project's build path its 
impossible to tell by only looking at the JarEntryFile which project is the one 
the user expects it to be revealed in. 

pity.
You are correct.
oh well, it was worth a try.
Closing...</WithStack>
    <WithOutStack>If I have an IPackageFragment (in a jar file) and get its non java resources, 
then try to selectReveal it in the PackageExplorer, nothing happens.

The PackageExplorer only seems to work with IJavaElement or IResources.

Seems to me that if selectReveal gets a JarEntryFile, why can't it reveal it?
I mean JarEntryFile is a jdt class, so you know its located in the hierarchy of 
the jar.

Now that I think of it. JarEntryFile(s) should be a bit more first class in the 
model. You should at least have an easier way to find the IPackageFragment it 
lives in. Maybe I've missed something but I'm scanning through the whole 
project, getting all the IPackageFragments, thier non java resources, and then 
doing comparison with the JarEntryFile I have. just to find the 
IPackageFragment it lives in. yuk.

Of course, JarEntryFile is an internal class (I never cast to that, I just use 
IStorage).
I just figured out why it wouldn't work wven if you tried.

If you add the same jar (external) to more than one project's build path its 
impossible to tell by only looking at the JarEntryFile which project is the one 
the user expects it to be revealed in. 

pity.
You are correct.
oh well, it was worth a try.
Closing...</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46192" />
    <CreationDate amount="2003-11-06 08:51:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Core" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>ILocalVariable.exists() always returns false</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="6">
        <Lines>
          <Line>- it is not logical that the element whose parent exist doesn't exist</Line>
          <Line>- wouldn't sort of a synthetic flag be better?</Line>
          <Line>- how can we know if the local still exists? Do we have to ask the parent?</Line>
          <Line>- it is not logical that the element whose parent exist doesn't exist</Line>
          <Line>Wrong. You can create a method handle whose parent is an existing type without</Line>
          <Line>the method existing.</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>I20031105

After talking to Jerome, reading the Javadoc and discussing within the JDT UI
team we still consider it a bug that the exists() method returns false:

- it is not logical that the element whose parent exist doesn't exist
- wouldn't sort of a synthetic flag be better?
- how can we know if the local still exists? Do we have to ask the parent?
- it is not logical that the element whose parent exist doesn't exist
Wrong. You can create a method handle whose parent is an existing type without 
the method existing.

- wouldn't sort of a synthetic flag be better?
What do you mean?

- how can we know if the local still exists? Do we have to ask the parent?
It never existed. It doesn't exist. It will never exist. This is just a pseudo-
element resulting from a codeSelect(...). Its lifetime is 0. You cannot use it 
outside the operation that created it. Never keep a reference to it.
Alternatively, it could always answer true if the enclosing method exists. 
However, I agree with Jerome that you shouldn't be persisting these, and have 
to ask yourself questions such as #exists(). What are you trying to do ?
I was running through existing code (of which we have a lot) but stuff (in my
case adapted code for getting the JavaSourceHover and JavaElementLabels) for the
local variable never showed up. The reason was that we test for
IJavaElement.exists where it falls through. This basically means that
ILocalVariable (returned for existing elements) will never pass any of our JDT
UI code that is protected with exists().
Right, you need to change this code
Can't we be optimistic and explain that variable elements are living until the 
code is changed again. Thus until this occurs, it will always pretend it exists 
by default. I suspect it could be protected by saying that it exists as long as 
its enclosing element exists, but this is just to be nice.
We have no way to know that the code changed under the local variable handle. 
It is not a child of its method.
I agree, though for the same reason it could just pretend to exist all the time 
(equally wrong, but lees suspicious to clients ?). No strong opininon.

If always true, then IJavaElement#exists API spec need to be tuned to describe 
this situation.

Side-question: Dani, are you using the memento API of a local variable ? We 
suspect we shouldn't have provided it ever, since it incorrectly encourages 
clients to persist such handles for more than their expected life time (which 
is very short).
Couldn't search results simply extract the info they need from elements, 
instead of storing the element memento ? Names + source ranges.
Dirk, please comment as well.

For me it feels wrong that exists always returns false for local variable, 
especially since they are IJavaElements. If an API returns IJavaElement the 
exist method for that Java element should return a "reasonable" value 
independent of the concert element that got returned. Meaning, if I do code 
resolve and get a local variable back, it exists and therefore #exists() 
should return true. Otherwise we always have to treat locals special which 
results in lots of instanceof checks. And how will we find out that a 
local "really" doesn't exist.

A solution as outlined by Philippe in comment #6 is IMO the right path to 
follow.
Changed spec and behavior to return whether the parent exists.
Verified.</WithStack>
    <WithOutStack>I20031105

After talking to Jerome, reading the Javadoc and discussing within the JDT UI
team we still consider it a bug that the exists() method returns false:

- it is not logical that the element whose parent exist doesn't exist
- wouldn't sort of a synthetic flag be better?
- how can we know if the local still exists? Do we have to ask the parent?
- it is not logical that the element whose parent exist doesn't exist
Wrong. You can create a method handle whose parent is an existing type without 
the method existing.

- wouldn't sort of a synthetic flag be better?
What do you mean?

- how can we know if the local still exists? Do we have to ask the parent?
It never existed. It doesn't exist. It will never exist. This is just a pseudo-
element resulting from a codeSelect(...). Its lifetime is 0. You cannot use it 
outside the operation that created it. Never keep a reference to it.
Alternatively, it could always answer true if the enclosing method exists. 
However, I agree with Jerome that you shouldn't be persisting these, and have 
to ask yourself questions such as #exists(). What are you trying to do ?
I was running through existing code (of which we have a lot) but stuff (in my
case adapted code for getting the JavaSourceHover and JavaElementLabels) for the
local variable never showed up. The reason was that we test for
IJavaElement.exists where it falls through. This basically means that
ILocalVariable (returned for existing elements) will never pass any of our JDT
UI code that is protected with exists().
Right, you need to change this code
Can't we be optimistic and explain that variable elements are living until the 
code is changed again. Thus until this occurs, it will always pretend it exists 
by default. I suspect it could be protected by saying that it exists as long as 
its enclosing element exists, but this is just to be nice.
We have no way to know that the code changed under the local variable handle. 
It is not a child of its method.
I agree, though for the same reason it could just pretend to exist all the time 
(equally wrong, but lees suspicious to clients ?). No strong opininon.

If always true, then IJavaElement#exists API spec need to be tuned to describe 
this situation.

Side-question: Dani, are you using the memento API of a local variable ? We 
suspect we shouldn't have provided it ever, since it incorrectly encourages 
clients to persist such handles for more than their expected life time (which 
is very short).
Couldn't search results simply extract the info they need from elements, 
instead of storing the element memento ? Names + source ranges.
Dirk, please comment as well.

For me it feels wrong that exists always returns false for local variable, 
especially since they are IJavaElements. If an API returns IJavaElement the 
exist method for that Java element should return a "reasonable" value 
independent of the concert element that got returned. Meaning, if I do code 
resolve and get a local variable back, it exists and therefore #exists() 
should return true. Otherwise we always have to treat locals special which 
results in lots of instanceof checks. And how will we find out that a 
local "really" doesn't exist.

A solution as outlined by Philippe in comment #6 is IMO the right path to 
follow.
Changed spec and behavior to return whether the parent exists.
Verified.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46193" />
    <CreationDate amount="2003-11-06 09:05:00 -0500" />
    <DupId amount="42418" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Problems managing status messages</Summery>
    <Patches amount="0" />
    <Stacktraces amount="13">
      <Stacktrace timestamp="1437341072131">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage(StatusLineProgressListener.java:139)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.StatusLineProgressListener.remove(StatusLineProgressListener.java:117)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.progress.JobProgressManager.remove(JobProgressManager.java:358)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.JobProgressManager.done(JobProgressManager.java:298)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:96)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:292)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072131">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage(StatusLineProgressListener.java:139)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.StatusLineProgressListener.remove(StatusLineProgressListener.java:117)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.progress.JobProgressManager.remove(JobProgressManager.java:358)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.JobProgressManager.done(JobProgressManager.java:298)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:96)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:292)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072131">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage(StatusLineProgressListener.java:139)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.StatusLineProgressListener.remove(StatusLineProgressListener.java:117)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.progress.JobProgressManager.remove(JobProgressManager.java:358)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.JobProgressManager.done(JobProgressManager.java:298)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:96)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:292)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072131">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage(StatusLineProgressListener.java:139)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.StatusLineProgressListener.remove(StatusLineProgressListener.java:117)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.progress.JobProgressManager.remove(JobProgressManager.java:358)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.JobProgressManager.done(JobProgressManager.java:298)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:96)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:292)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072131">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage(StatusLineProgressListener.java:139)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.StatusLineProgressListener.remove(StatusLineProgressListener.java:117)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.progress.JobProgressManager.remove(JobProgressManager.java:358)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.JobProgressManager.done(JobProgressManager.java:298)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:96)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:292)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072131">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage(StatusLineProgressListener.java:139)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.StatusLineProgressListener.remove(StatusLineProgressListener.java:117)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.progress.JobProgressManager.remove(JobProgressManager.java:358)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.JobProgressManager.done(JobProgressManager.java:298)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:96)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:292)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072131">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage(StatusLineProgressListener.java:139)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.StatusLineProgressListener.remove(StatusLineProgressListener.java:117)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.progress.JobProgressManager.remove(JobProgressManager.java:358)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.JobProgressManager.done(JobProgressManager.java:298)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:96)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:292)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072131">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage(StatusLineProgressListener.java:139)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.StatusLineProgressListener.remove(StatusLineProgressListener.java:117)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.progress.JobProgressManager.remove(JobProgressManager.java:358)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.JobProgressManager.done(JobProgressManager.java:298)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:96)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:292)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072131">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage(StatusLineProgressListener.java:139)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.StatusLineProgressListener.remove(StatusLineProgressListener.java:117)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.progress.JobProgressManager.remove(JobProgressManager.java:358)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.JobProgressManager.done(JobProgressManager.java:298)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:96)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:292)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072131">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage(StatusLineProgressListener.java:139)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.StatusLineProgressListener.remove(StatusLineProgressListener.java:117)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.progress.JobProgressManager.remove(JobProgressManager.java:358)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.JobProgressManager.done(JobProgressManager.java:298)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:96)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:292)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072131">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage(StatusLineProgressListener.java:139)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.StatusLineProgressListener.remove(StatusLineProgressListener.java:117)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.progress.JobProgressManager.remove(JobProgressManager.java:358)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.JobProgressManager.done(JobProgressManager.java:298)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:96)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:292)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072131">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage(StatusLineProgressListener.java:139)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.StatusLineProgressListener.remove(StatusLineProgressListener.java:117)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.progress.JobProgressManager.remove(JobProgressManager.java:358)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.JobProgressManager.done(JobProgressManager.java:298)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:96)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:292)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)</Frame>
        </Frames>
      </Stacktrace>
      <Stacktrace timestamp="1437341072131">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage(StatusLineProgressListener.java:139)</Frame>
          <Frame depth="3">org.eclipse.ui.internal.progress.StatusLineProgressListener.remove(StatusLineProgressListener.java:117)</Frame>
          <Frame depth="4">org.eclipse.ui.internal.progress.JobProgressManager.remove(JobProgressManager.java:358)</Frame>
          <Frame depth="5">org.eclipse.ui.internal.progress.JobProgressManager.done(JobProgressManager.java:298)</Frame>
          <Frame depth="6">org.eclipse.core.internal.jobs.JobListeners$3.notify(JobListeners.java:37)</Frame>
          <Frame depth="7">org.eclipse.core.internal.jobs.JobListeners$7.run(JobListeners.java:96)</Frame>
          <Frame depth="8">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="9">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="10">org.eclipse.core.internal.jobs.JobListeners.doNotify(JobListeners.java:86)</Frame>
          <Frame depth="11">org.eclipse.core.internal.jobs.JobListeners.done(JobListeners.java:125)</Frame>
          <Frame depth="12">org.eclipse.core.internal.jobs.JobManager.endJob(JobManager.java:292)</Frame>
          <Frame depth="13">org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)</Frame>
          <Frame depth="14">org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>Here is an extract from this morning's Eclipse log taken over a 10 min. period 
or so. I am running Eclipse I20030917 wit Sun JDK 1.4.2_02 on a dual processor 
933Mhz Windows XP box with 1GB of physical memory.

The log entries look pretty self-explanatory. During this time I was editing 
java files. Note that the Java collection classes are not thread-safe so you 
need to provide your own synchronization. BTW these entries caused no 
externally visible symptoms except to clutter up the .log file.

!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:24:57.869
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:26:06.805
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:26:10.602
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:26:11.40
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:33:54.25
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:33:58.556
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:33:59.525
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)

!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:43:55.296
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:43:55.515
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:43:55.686
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:43:55.811
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:43:55.858
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:43:56.171
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)


*** This bug has been marked as a duplicate of 42418 ***</WithStack>
    <WithOutStack>Here is an extract from this morning's Eclipse log taken over a 10 min. period 
or so. I am running Eclipse I20030917 wit Sun JDK 1.4.2_02 on a dual processor 
933Mhz Windows XP box with 1GB of physical memory.

The log entries look pretty self-explanatory. During this time I was editing 
java files. Note that the Java collection classes are not thread-safe so you 
need to provide your own synchronization. BTW these entries caused no 
externally visible symptoms except to clutter up the .log file.

!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:24:57.869
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:26:06.805
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:26:10.602
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:26:11.40
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:33:54.25
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:33:58.556
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:33:59.525
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)

!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:43:55.296
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:43:55.515
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:43:55.686
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:43:55.811
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:43:55.858
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.ui.internal.progress.StatusLineProgressListener.getNextMessage
(StatusLineProgressListener.java:139)
	at org.eclipse.ui.internal.progress.StatusLineProgressListener.remove
(StatusLineProgressListener.java:117)
	at org.eclipse.ui.internal.progress.JobProgressManager.remove
(JobProgressManager.java:358)
	at org.eclipse.ui.internal.progress.JobProgressManager.done
(JobProgressManager.java:298)
	at org.eclipse.core.internal.jobs.JobListeners$3.notify
(JobListeners.java:37)
	at org.eclipse.core.internal.jobs.JobListeners$7.run
(JobListeners.java:96)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.core.internal.jobs.JobListeners.doNotify
(JobListeners.java:86)
	at org.eclipse.core.internal.jobs.JobListeners.done
(JobListeners.java:125)
	at org.eclipse.core.internal.jobs.JobManager.endJob
(JobManager.java:292)
	at org.eclipse.core.internal.jobs.WorkerPool.endJob(WorkerPool.java:50)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:74)
!ENTRY org.eclipse.core.runtime 4 2 Nov 06, 2003 08:43:56.171
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.core.runtime".
!STACK 0



*** This bug has been marked as a duplicate of 42418 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46194" />
    <CreationDate amount="2003-11-06 09:13:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Resources" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>ElementTreeIterator.requestPath - Path inefficiency</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="2">
      <source_code type="functiondef">
        <location start="380" end="643" />
        <code>public Path(String device, String[]segments, int validElemNum){
          this.device = device;
          this.segments = new String[validElemNum];
          System.arrayCopy(segments, 0, this.segments, 0, validElemNum);
          this.separators = ....
    }</code>
      </source_code>
      <source_code type="functiondef">
        <location start="752" end="906" />
        <code>public IPath requestPath() {
		if (nextFreeSegment == 0)
			return Path.ROOT;
                return new Path(null, segments, nextFreeSegment);
        }</code>
      </source_code>
    </SourceCodeRegions>
    <Enumerations amount="1">
      <Enumeration lines="2">
        <Lines>
          <Line>- decreases performance</Line>
          <Line>- generates unnecessary short living objects (StringBuffer, String)</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>ElementTreeIterator.requestPath() creates a path String from the segment array
and passes that to the constructor of Path() which, in turn, scans the string
and creates a segment array from it.

This seems to be an unnecessary operation that
- decreases performance
- generates unnecessary short living objects (StringBuffer, String)

If Path had another public constructor like

    public Path(String device, String[]segments, int validElemNum){
          this.device = device;
          this.segments = new String[validElemNum];
          System.arrayCopy(segments, 0, this.segments, 0, validElemNum);
          this.separators = ....
    }

then the unnecessary coding/encoding could be avoided and requestPath could
simply become something like:

	public IPath requestPath() {
		if (nextFreeSegment == 0)
			return Path.ROOT;
                return new Path(null, segments, nextFreeSegment);
        }
Thanks for the suggestion, but unless this is identified as a bottleneck in a
critical performance area we like to avoid micro-optimizations like this
(especially since it requires new API).</WithStack>
    <WithOutStack>ElementTreeIterator.requestPath() creates a path String from the segment array
and passes that to the constructor of Path() which, in turn, scans the string
and creates a segment array from it.

This seems to be an unnecessary operation that
- decreases performance
- generates unnecessary short living objects (StringBuffer, String)

If Path had another public constructor like

    public Path(String device, String[]segments, int validElemNum){
          this.device = device;
          this.segments = new String[validElemNum];
          System.arrayCopy(segments, 0, this.segments, 0, validElemNum);
          this.separators = ....
    }

then the unnecessary coding/encoding could be avoided and requestPath could
simply become something like:

	public IPath requestPath() {
		if (nextFreeSegment == 0)
			return Path.ROOT;
                return new Path(null, segments, nextFreeSegment);
        }
Thanks for the suggestion, but unless this is identified as a bottleneck in a
critical performance area we like to avoid micro-optimizations like this
(especially since it requires new API).</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46195" />
    <CreationDate amount="2003-11-06 09:13:00 -0500" />
    <DupId amount="40387" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Text" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Concurrent modification access problem in CompilationUnit reconciliation</Summery>
    <Patches amount="0" />
    <Stacktraces amount="1">
      <Stacktrace timestamp="1437341072134">
        <Exception>java.util.ConcurrentModificationException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">java.util.AbstractList$Itr.checkForComodification(AbstractList.java:448)</Frame>
          <Frame depth="1">java.util.AbstractList$Itr.next(AbstractList.java:419)</Frame>
          <Frame depth="2">org.eclipse.jdt.internal.ui.javaeditor.filebuffers.CompilationUnitDocumentProvider2$CompilationUnitAnnotationModel.endReporting(CompilationUnitDocumentProvider2.java:459)</Frame>
          <Frame depth="3">org.eclipse.jdt.internal.core.JavaModelManager$PerWorkingCopyInfo.endReporting(JavaModelManager.java:515)</Frame>
          <Frame depth="4">org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:146)</Frame>
          <Frame depth="5">org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:200)</Frame>
          <Frame depth="6">org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:487)</Frame>
          <Frame depth="7">org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:918)</Frame>
          <Frame depth="8">org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:48)</Frame>
          <Frame depth="9">org.eclipse.jdt.internal.core.JavaModelOperation.execute(JavaModelOperation.java:366)</Frame>
          <Frame depth="10">org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:705)</Frame>
          <Frame depth="11">org.eclipse.jdt.internal.core.JavaElement.runOperation(JavaElement.java:523)</Frame>
          <Frame depth="12">org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1031)</Frame>
          <Frame depth="13">org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1007)</Frame>
          <Frame depth="14">org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1000)</Frame>
          <Frame depth="15">org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.getElementForInputAt(JavaBrowsingPart.java:1295)</Frame>
          <Frame depth="16">org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.setSelectionFromEditor(JavaBrowsingPart.java:1146)</Frame>
          <Frame depth="17">org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.selectionChanged(JavaBrowsingPart.java:698)</Frame>
          <Frame depth="18">org.eclipse.ui.internal.AbstractSelectionService$4.run(AbstractSelectionService.java:178)</Frame>
          <Frame depth="19">org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:1016)</Frame>
          <Frame depth="20">org.eclipse.core.runtime.Platform.run(Platform.java:420)</Frame>
          <Frame depth="21">org.eclipse.ui.internal.AbstractSelectionService.firePostSelection(AbstractSelectionService.java:176)</Frame>
          <Frame depth="22">org.eclipse.ui.internal.AbstractSelectionService$2.selectionChanged(AbstractSelectionService.java:76)</Frame>
          <Frame depth="23">org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2099)</Frame>
          <Frame depth="24">org.eclipse.jface.text.TextViewer.firePostSelectionChanged(TextViewer.java:2052)</Frame>
          <Frame depth="25">org.eclipse.jface.text.TextViewer$4.run(TextViewer.java:2031)</Frame>
          <Frame depth="26">org.eclipse.swt.widgets.Display.runTimer(Display.java:2229)</Frame>
          <Frame depth="27">org.eclipse.swt.widgets.Display.messageProc(Display.java:1763)</Frame>
          <Frame depth="28">org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)</Frame>
          <Frame depth="29">org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1343)</Frame>
          <Frame depth="30">org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)</Frame>
          <Frame depth="31">org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037)</Frame>
          <Frame depth="32">org.eclipse.ui.internal.Workbench.run(Workbench.java:2020)</Frame>
          <Frame depth="33">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
          <Frame depth="34">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
          <Frame depth="35">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="36">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="37">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="38">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="39">org.eclipse.core.launcher.Main.basicRun(Main.java:295)</Frame>
          <Frame depth="40">org.eclipse.core.launcher.Main.run(Main.java:751)</Frame>
          <Frame depth="41">org.eclipse.core.launcher.Main.main(Main.java:587)</Frame>
        </Frames>
      </Stacktrace>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="DUPLICATE" />
    <WithStack>I was editing a java file when I got a popup stating that an error had 
occurred and that I should check the log. I am running Eclipse I20030917 under 
Sun JDK 1.4.2_02 on a dual processor 933Mhz machine with 1GB of memory.

The log entry is pretty self-explanatory. Java collection classes are not 
thread-safe and there is obviously some missing synchronization.

The log entry follows:

!ENTRY org.eclipse.ui.workbench 4 2 Nov 06, 2003 08:41:17.657
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.ui.workbench".
!STACK 0
java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification
(AbstractList.java:448)
	at java.util.AbstractList$Itr.next(AbstractList.java:419)
	at 
org.eclipse.jdt.internal.ui.javaeditor.filebuffers.CompilationUnitDocumentProvi
der2$CompilationUnitAnnotationModel.endReporting
(CompilationUnitDocumentProvider2.java:459)
	at 
org.eclipse.jdt.internal.core.JavaModelManager$PerWorkingCopyInfo.endReporting
(JavaModelManager.java:515)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure
(CompilationUnit.java:146)
	at org.eclipse.jdt.internal.core.Openable.generateInfos
(Openable.java:200)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed
(JavaElement.java:487)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent
(CompilationUnit.java:918)
	at 
org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation
(ReconcileWorkingCopyOperation.java:48)
	at org.eclipse.jdt.internal.core.JavaModelOperation.execute
(JavaModelOperation.java:366)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run
(JavaModelOperation.java:705)
	at org.eclipse.jdt.internal.core.JavaElement.runOperation
(JavaElement.java:523)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile
(CompilationUnit.java:1031)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile
(CompilationUnit.java:1007)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile
(CompilationUnit.java:1000)
	at 
org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.getElementForInputAt
(JavaBrowsingPart.java:1295)
	at 
org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.setSelectionFromEditor
(JavaBrowsingPart.java:1146)
	at 
org.eclipse.jdt.internal.ui.browsing.JavaBrowsingPart.selectionChanged
(JavaBrowsingPart.java:698)
	at org.eclipse.ui.internal.AbstractSelectionService$4.run
(AbstractSelectionService.java:178)
	at org.eclipse.core.internal.runtime.InternalPlatform.run
(InternalPlatform.java:1016)
	at org.eclipse.core.runtime.Platform.run(Platform.java:420)
	at org.eclipse.ui.internal.AbstractSelectionService.firePostSelection
(AbstractSelectionService.java:176)
	at org.eclipse.ui.internal.AbstractSelectionService$2.selectionChanged
(AbstractSelectionService.java:76)
	at org.eclipse.jface.text.TextViewer.firePostSelectionChanged
(TextViewer.java:2099)
	at org.eclipse.jface.text.TextViewer.firePostSelectionChanged
(TextViewer.java:2052)
	at org.eclipse.jface.text.TextViewer$4.run(TextViewer.java:2031)
	at org.eclipse.swt.widgets.Display.runTimer(Display.java:2229)
	at org.eclipse.swt.widgets.Display.messageProc(Display.java:1763)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1343)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1875)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2037)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:2020)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:295)
	at org.eclipse.core.launcher.Main.run(Main.java:751)
	at org.eclipse.core.launcher.Main.main(Main.java:587)
Note: 

*** This bug has been marked as a duplicate of 40387 ***</WithStack>
    <WithOutStack>I was editing a java file when I got a popup stating that an error had 
occurred and that I should check the log. I am running Eclipse I20030917 under 
Sun JDK 1.4.2_02 on a dual processor 933Mhz machine with 1GB of memory.

The log entry is pretty self-explanatory. Java collection classes are not 
thread-safe and there is obviously some missing synchronization.

The log entry follows:

!ENTRY org.eclipse.ui.workbench 4 2 Nov 06, 2003 08:41:17.657
!MESSAGE Problems occurred when invoking code from plug-
in: "org.eclipse.ui.workbench".
!STACK 0

Note: 

*** This bug has been marked as a duplicate of 40387 ***</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46196" />
    <CreationDate amount="2003-11-06 09:16:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Linux" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Workbench] Eclipse doesn't work under Gnome 2.4.0</Summery>
    <Patches amount="0" />
    <Stacktraces amount="3">
      <Stacktrace timestamp="1437341072135">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</Frame>
          <Frame depth="1">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</Frame>
          <Frame depth="2">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</Frame>
          <Frame depth="3">java.lang.reflect.Method.invoke(Method.java:324)</Frame>
          <Frame depth="4">org.eclipse.core.launcher.Main.basicRun(Main.java:299)</Frame>
          <Frame depth="5">org.eclipse.core.launcher.Main.run(Main.java:765)</Frame>
          <Frame depth="6">org.eclipse.core.launcher.Main.main(Main.java:599)</Frame>
        </Frames>
      </Stacktrace>
      <Cause timestamp="1437341072135">
        <Exception>java.lang.reflect.InvocationTargetException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:861)</Frame>
          <Frame depth="1">org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)</Frame>
        </Frames>
      </Cause>
      <Cause timestamp="1437341072135">
        <Exception>java.lang.NullPointerException</Exception>
        <Reason />
        <Frames>
          <Frame depth="0">org.eclipse.swt.widgets.ToolBar.releaseWidget(ToolBar.java:328)</Frame>
          <Frame depth="1">org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:868)</Frame>
          <Frame depth="2">org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:604)</Frame>
          <Frame depth="3">org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:609)</Frame>
          <Frame depth="4">org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:868)</Frame>
          <Frame depth="5">org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:604)</Frame>
          <Frame depth="6">org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:609)</Frame>
          <Frame depth="7">org.eclipse.swt.widgets.Canvas.releaseWidget(Canvas.java:132)</Frame>
          <Frame depth="8">org.eclipse.swt.widgets.Decorations.releaseWidget(Decorations.java:384)</Frame>
          <Frame depth="9">org.eclipse.swt.widgets.Shell.releaseWidget(Shell.java:1170)</Frame>
          <Frame depth="10">org.eclipse.swt.widgets.Widget.dispose(Widget.java:375)</Frame>
          <Frame depth="11">org.eclipse.swt.widgets.Shell.dispose(Shell.java:1112)</Frame>
          <Frame depth="12">org.eclipse.swt.widgets.Display.release(Display.java:1643)</Frame>
          <Frame depth="13">org.eclipse.swt.graphics.Device.dispose(Device.java:174)</Frame>
          <Frame depth="14">org.eclipse.ui.internal.Workbench.run(Workbench.java:2335)</Frame>
          <Frame depth="15">org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)</Frame>
        </Frames>
      </Cause>
    </Stacktraces>
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="INVALID" />
    <WithStack>I recently upgraded from Red Hat Linux 9.0.93 to Fedora 1.0 and now I can't
start Eclipse with gtk bindings. This is the error I get:

!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Nov 06, 2003 10:12:52.822
!MESSAGE Exception launching the Eclipse Platform:
!STACK
java.lang.reflect.InvocationTargetException
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:299)
        at org.eclipse.core.launcher.Main.run(Main.java:765)
        at org.eclipse.core.launcher.Main.main(Main.java:599)
Caused by: java.lang.reflect.InvocationTargetException
        at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:861)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        ... 7 more
Caused by: java.lang.NullPointerException
        at org.eclipse.swt.widgets.ToolBar.releaseWidget(ToolBar.java:328)
        at org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:868)
        at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:604)
       at org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:609)
        at org.eclipse.swt.widgets.Widget.releaseResources(Widget.java:868)
        at org.eclipse.swt.widgets.Composite.releaseChildren(Composite.java:604)
       at org.eclipse.swt.widgets.Composite.releaseWidget(Composite.java:609)
        at org.eclipse.swt.widgets.Canvas.releaseWidget(Canvas.java:132)
        at org.eclipse.swt.widgets.Decorations.releaseWidget(Decorations.java:384)
        at org.eclipse.swt.widgets.Shell.releaseWidget(Shell.java:1170)
        at org.eclipse.swt.widgets.Widget.dispose(Widget.java:375)
        at org.eclipse.swt.widgets.Shell.dispose(Shell.java:1112)
        at org.eclipse.swt.widgets.Display.release(Display.java:1643)
        at org.eclipse.swt.graphics.Device.dispose(Device.java:174)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:2335)
        at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
        ... 8 more
 
I have Eclipse 3.0M4 on a Fedora (Red Hat) Linux box
with JDK 1.4.2_02. 

The motif version still seems to work.

I post this as an enhancement request as I am aware you don't promise
comaptibility with Gnome 2.4.0. In the mean time I'd like advice on a workaround
  using Gnome 2.2 for Eclipse while using Gnome 2.4 for the rest of my machine.
is this still a problem for you on R3.0?
Marking remind pending response
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>I recently upgraded from Red Hat Linux 9.0.93 to Fedora 1.0 and now I can't
start Eclipse with gtk bindings. This is the error I get:

!SESSION ----------------------------------------------------------------------
!ENTRY org.eclipse.core.launcher 4 0 Nov 06, 2003 10:12:52.822
!MESSAGE Exception launching the Eclipse Platform:
!STACK


        ... 7 more

        ... 8 more
 
I have Eclipse 3.0M4 on a Fedora (Red Hat) Linux box
with JDK 1.4.2_02. 

The motif version still seems to work.

I post this as an enhancement request as I am aware you don't promise
comaptibility with Gnome 2.4.0. In the mean time I'd like advice on a workaround
  using Gnome 2.2 for Eclipse while using Gnome 2.4 for the rest of my machine.
is this still a problem for you on R3.0?
Marking remind pending response
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46197" />
    <CreationDate amount="2003-11-06 09:35:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="UI" />
    <Version amount="3.0" />
    <rep_platform amount="All" />
    <op_sys amount="All" />
    <priority amount="P3" />
    <bug_severity amount="trivial" />
    <Summery>[Workbench] bogus javadoc for IMemento.TAG_ID</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="VERIFIED" />
    <resolution amount="FIXED" />
    <WithStack>The javadoc for IMemento.TAG_ID says the constant value is "org.eclipse.ui.id"
when it is really "IMemento.internal.id".
;-)
https://bugs.eclipse.org/bugs/buglist.cgi?
query_format=specific&amp;order=relevance+desc&amp;bug_status=__all__&amp;product=Platform&amp;
content=bogus
Jim, is it OK to correct this mistake by updating the Javadoc?
Fix released &gt;20070619.
Correcting target milestone. Verified by code inspection using I20080429-0100.</WithStack>
    <WithOutStack>The javadoc for IMemento.TAG_ID says the constant value is "org.eclipse.ui.id"
when it is really "IMemento.internal.id".
;-)
https://bugs.eclipse.org/bugs/buglist.cgi?
query_format=specific&amp;order=relevance+desc&amp;bug_status=__all__&amp;product=Platform&amp;
content=bogus
Jim, is it OK to correct this mistake by updating the Javadoc?
Fix released &gt;20070619.
Correcting target milestone. Verified by code inspection using I20080429-0100.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46198" />
    <CreationDate amount="2003-11-06 09:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Update  (deprecated - use RT&gt;Equinox&gt;p2)" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="enhancement" />
    <Summery>[Plan Item] Support for pure OSGi bundles</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="1">
      <Enumeration lines="13">
        <Lines>
          <Line>1) Being able to list a bundle in feature.xml (we may need to revise</Line>
          <Line>feature.xml DTD to allow adding plug-in entries that are actually bundles)</Line>
          <Line>2) Being able to install a pure bundle as part of the feature install</Line>
          <Line>3) Being able to handle bundles in all other Update operation (reconciliation,</Line>
          <Line>enable, disable etc.)</Line>
          <Line>Do OSGI bundles get installed using the install/update/etc. osgi API's, or</Line>
          <Line>they follow a similar process as the eclipse plugins (i.e. unpacked in the</Line>
          <Line>plugins directory).</Line>
          <Line>You can assume both (the same as with plug-ins): they can just 'appear' in</Line>
          <Line>the 'plugins' directory, and must be taken into account during partial or full</Line>
          <Line>reconciliation; or, they can be explicitly installed using Eclipse Update.</Line>
          <Line>Note that OSGi itself does not spec any way for bundles materializing on a</Line>
          <Line>particular machine.  For clarification (hopefully)...</Line>
        </Lines>
      </Enumeration>
    </Enumerations>
    <bug_status amount="RESOLVED" />
    <resolution amount="FIXED" />
    <WithStack>This a new plan item added to handle OSGi runtime. Update should be able to 
handle pure bundles (i.e. bundles that do not have plugin.xml or 
fragment.xml). This handling should include:

1) Being able to list a bundle in feature.xml (we may need to revise 
feature.xml DTD to allow adding plug-in entries that are actually bundles)
2) Being able to install a pure bundle as part of the feature install
3) Being able to handle bundles in all other Update operation (reconciliation, 
enable, disable etc.)
Do OSGI bundles get installed using the install/update/etc. osgi API's, or 
they follow a similar process as the eclipse plugins (i.e. unpacked in the 
plugins directory).
You can assume both (the same as with plug-ins): they can just 'appear' in 
the 'plugins' directory, and must be taken into account during partial or full 
reconciliation; or, they can be explicitly installed using Eclipse Update.
Note that OSGi itself does not spec any way for bundles materializing on a 
particular machine.  For clarification (hopefully)... 

There are a series of methods (installBundle, updateBundle, ...) but you should 
look at these as "configure" operations. That is, the bundle is located 
somewhere and these methods tell the runtime that the bundle exists and should 
be considered for execution.

Having said that, we would like in 3.0 for there to be any number of ways for a 
bundle/plugin to come into existance.  Update/install is one means for getting 
a bundle to a machine and then calling installBundle.  Other installers however 
may fetch bundles and then call installBundle.  Still others may fetch/laydown 
bundles and not call installBundle but wait for the framework to notice the new 
bundle.

In the current Equinox code there is the notion of "Configurators".  These are 
bundles which are (optionally) run early in the startup of Equinox.  their job 
is to consult "some configuration information" and ensure that the framework 
matches the configuration outlined.  Currently we supply an UpdateConfigurator 
which reads platform.cfg files and checks that the listed plugins 
are "installed" into the framework.  It is possible to have alternative or more 
configurators.

Fixed.
Pure bundles mean, they do not have plugin.xml or fragment.xml, but only a 
valid MANIFEST.MF.  They are treated like plugins with plugin.xml or both 
plugin.xml and MANIFEST.MF.  When plugin.xml or fragment.xml exist, 
information in these files take precendence over MANIFEST.MF.  MANIFEST.MF 
will be installed, but Update is not looking inside it.
Bundles can be installed/uninstalled, enabled/disabled (by feature).
There is no change to feature.xml syntax.
Hate to be a fly in the ointment, but it should be the other way around. If 
there is a valid OSGi MANIFEST.MF, it should be consulted, because in that 
case OSGi will use it and ignore what is in plugin.xml. Content of plugin.xml 
will only be used for extensions and extension points when paired with a valid 
manifest file.

extensions.xml is gone.
Thanks Dejan for pointing this out.
Fixed now.  If MANIFEST.MF file present has Bundle-GlobalName, it takes 
precedence over plugin/fragment.xml
this bug just will not die.  The correct header to look for is 
    Bundle-SymbolicName
M7 is still generating Bundle-GlobalName but we had to change it for a number 
of reasons and very much hope that it will not change again.

Sorry for not making this change known sooner.  We are actually just gathering 
up a list of method deprecations and other changes to be mailed out in the next 
day or so.


Jeff,
Is Bundle-SymbolicName just replacing Bundle-GlobalName, or are there more 
changes to MANIFEST.MF headers documented in 
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-core-
home/runtime/runtime-porting.html ?

We are also using(reading) Bundle-Version and Host-Bundle headers.
Unfortuntaely that doc was out of date.  In fact, the first half of it has been 
merged with the Eclipse 3.0 porting guide.  The second half has been moved 
to "adoption.html".  I just updated it with the correct header mappings.

To eliminate the suspense, Bundle-Host is now Fragment-Host.

Sorry for the confusion (red face...)
Unfortuntaely that doc was out of date.  In fact, the first half of it has been 
merged with the Eclipse 3.0 porting guide.  The second half has been moved 
to "adoption.html".  I just updated it with the correct header mappings.

To eliminate the suspense, Bundle-Host is now Fragment-Host.

Sorry for the confusion (red face...)
We should be using the org.osgi.framework.Constants.BUNDLE_XXXXX names instead 
of the actual strings, as this will help identify when some headers change or 
become deprecated.
I initially tried using org.eclipse.osgi.framework.util.Headers for parsing 
MANIFEST.MF, but had problems accessing org.eclipse.osgi.framework.util 
package from the org.eclipse.update.core plugin.  According to Pascal, we 
should be using java.util.zip.Manifest to parse manifest.  Will not using 
org.osgi.framework.Constants for header keys be the same issue?
&lt;quote&gt;According to Pascal, we 
should be using java.util.zip.Manifest to parse manifest
&lt;/quote&gt;

Funny, this is the exact opposite to the advice I got from Jeff when I had to 
parse the manifest. I used Java Manifest class and it was choking on some files 
that OSGi code didn't have problems with (one blank space missing before the 
new line or something). Jeff suggested that Manifest it too finicky and the 
fact that it fails to load the file does not mean the file is not correct (OSGi 
has its own parser). So PDE now has its own as well :-). 

Luckily the format is simple so the whole parser class is very small, otherwise 
it would be a huge waste (imagine inhouse XML parsers everywhere :-).
The org.osgi.framework package is API.  the org.eclipse.osgi.framework.util is 
not.

The constants are part of the spec and so you are free to use them.

Note that you will find org.eclipse.osgi.util.ManifestElement useful when 
dealing with manifest headers.

As for the parser, Dejan's quote is correct but out of context.  The Java 
manifest parser is exactly correct.  It reads manifests exactly according to 
the spec.  Turns ou that the spec is very particular presumably in an effort to 
simplify parsing.

Our OSGi implementation has its own parser not because it wants to be more 
liberal but because its targetted base class library does not contain the 
Manifest parser class.  Strange but true apparently.

The original conversation went along the lines of "I take this manifest that 
the runtime can parse and I cannot parse it using the Java Manifest parser =&gt; I 
need my own parser."  I see that logic as somewhat backwards.  Just because our 
implementation is less picky and allows technically illegal manifests to be 
used, does not mean that the tooling has to support that.

It is up to you how liberal you want to be.  Being liberal likely improves the 
users experience.  If you are going to do that then I suggest that you use a 
*copy* of ours so that we are equally liberal.

Note that way down the road, if PDE is going to be a BDE in any form, it should 
likely ensure that it writes out compliant manifests (regardless of what was 
input).
Thanks everybody.
Fixed for the third time ... and counting.</WithStack>
    <WithOutStack>This a new plan item added to handle OSGi runtime. Update should be able to 
handle pure bundles (i.e. bundles that do not have plugin.xml or 
fragment.xml). This handling should include:

1) Being able to list a bundle in feature.xml (we may need to revise 
feature.xml DTD to allow adding plug-in entries that are actually bundles)
2) Being able to install a pure bundle as part of the feature install
3) Being able to handle bundles in all other Update operation (reconciliation, 
enable, disable etc.)
Do OSGI bundles get installed using the install/update/etc. osgi API's, or 
they follow a similar process as the eclipse plugins (i.e. unpacked in the 
plugins directory).
You can assume both (the same as with plug-ins): they can just 'appear' in 
the 'plugins' directory, and must be taken into account during partial or full 
reconciliation; or, they can be explicitly installed using Eclipse Update.
Note that OSGi itself does not spec any way for bundles materializing on a 
particular machine.  For clarification (hopefully)... 

There are a series of methods (installBundle, updateBundle, ...) but you should 
look at these as "configure" operations. That is, the bundle is located 
somewhere and these methods tell the runtime that the bundle exists and should 
be considered for execution.

Having said that, we would like in 3.0 for there to be any number of ways for a 
bundle/plugin to come into existance.  Update/install is one means for getting 
a bundle to a machine and then calling installBundle.  Other installers however 
may fetch bundles and then call installBundle.  Still others may fetch/laydown 
bundles and not call installBundle but wait for the framework to notice the new 
bundle.

In the current Equinox code there is the notion of "Configurators".  These are 
bundles which are (optionally) run early in the startup of Equinox.  their job 
is to consult "some configuration information" and ensure that the framework 
matches the configuration outlined.  Currently we supply an UpdateConfigurator 
which reads platform.cfg files and checks that the listed plugins 
are "installed" into the framework.  It is possible to have alternative or more 
configurators.

Fixed.
Pure bundles mean, they do not have plugin.xml or fragment.xml, but only a 
valid MANIFEST.MF.  They are treated like plugins with plugin.xml or both 
plugin.xml and MANIFEST.MF.  When plugin.xml or fragment.xml exist, 
information in these files take precendence over MANIFEST.MF.  MANIFEST.MF 
will be installed, but Update is not looking inside it.
Bundles can be installed/uninstalled, enabled/disabled (by feature).
There is no change to feature.xml syntax.
Hate to be a fly in the ointment, but it should be the other way around. If 
there is a valid OSGi MANIFEST.MF, it should be consulted, because in that 
case OSGi will use it and ignore what is in plugin.xml. Content of plugin.xml 
will only be used for extensions and extension points when paired with a valid 
manifest file.

extensions.xml is gone.
Thanks Dejan for pointing this out.
Fixed now.  If MANIFEST.MF file present has Bundle-GlobalName, it takes 
precedence over plugin/fragment.xml
this bug just will not die.  The correct header to look for is 
    Bundle-SymbolicName
M7 is still generating Bundle-GlobalName but we had to change it for a number 
of reasons and very much hope that it will not change again.

Sorry for not making this change known sooner.  We are actually just gathering 
up a list of method deprecations and other changes to be mailed out in the next 
day or so.


Jeff,
Is Bundle-SymbolicName just replacing Bundle-GlobalName, or are there more 
changes to MANIFEST.MF headers documented in 
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platform-core-
home/runtime/runtime-porting.html ?

We are also using(reading) Bundle-Version and Host-Bundle headers.
Unfortuntaely that doc was out of date.  In fact, the first half of it has been 
merged with the Eclipse 3.0 porting guide.  The second half has been moved 
to "adoption.html".  I just updated it with the correct header mappings.

To eliminate the suspense, Bundle-Host is now Fragment-Host.

Sorry for the confusion (red face...)
Unfortuntaely that doc was out of date.  In fact, the first half of it has been 
merged with the Eclipse 3.0 porting guide.  The second half has been moved 
to "adoption.html".  I just updated it with the correct header mappings.

To eliminate the suspense, Bundle-Host is now Fragment-Host.

Sorry for the confusion (red face...)
We should be using the org.osgi.framework.Constants.BUNDLE_XXXXX names instead 
of the actual strings, as this will help identify when some headers change or 
become deprecated.
I initially tried using org.eclipse.osgi.framework.util.Headers for parsing 
MANIFEST.MF, but had problems accessing org.eclipse.osgi.framework.util 
package from the org.eclipse.update.core plugin.  According to Pascal, we 
should be using java.util.zip.Manifest to parse manifest.  Will not using 
org.osgi.framework.Constants for header keys be the same issue?
&lt;quote&gt;According to Pascal, we 
should be using java.util.zip.Manifest to parse manifest
&lt;/quote&gt;

Funny, this is the exact opposite to the advice I got from Jeff when I had to 
parse the manifest. I used Java Manifest class and it was choking on some files 
that OSGi code didn't have problems with (one blank space missing before the 
new line or something). Jeff suggested that Manifest it too finicky and the 
fact that it fails to load the file does not mean the file is not correct (OSGi 
has its own parser). So PDE now has its own as well :-). 

Luckily the format is simple so the whole parser class is very small, otherwise 
it would be a huge waste (imagine inhouse XML parsers everywhere :-).
The org.osgi.framework package is API.  the org.eclipse.osgi.framework.util is 
not.

The constants are part of the spec and so you are free to use them.

Note that you will find org.eclipse.osgi.util.ManifestElement useful when 
dealing with manifest headers.

As for the parser, Dejan's quote is correct but out of context.  The Java 
manifest parser is exactly correct.  It reads manifests exactly according to 
the spec.  Turns ou that the spec is very particular presumably in an effort to 
simplify parsing.

Our OSGi implementation has its own parser not because it wants to be more 
liberal but because its targetted base class library does not contain the 
Manifest parser class.  Strange but true apparently.

The original conversation went along the lines of "I take this manifest that 
the runtime can parse and I cannot parse it using the Java Manifest parser =&gt; I 
need my own parser."  I see that logic as somewhat backwards.  Just because our 
implementation is less picky and allows technically illegal manifests to be 
used, does not mean that the tooling has to support that.

It is up to you how liberal you want to be.  Being liberal likely improves the 
users experience.  If you are going to do that then I suggest that you use a 
*copy* of ours so that we are equally liberal.

Note that way down the road, if PDE is going to be a BDE in any form, it should 
likely ensure that it writes out compliant manifests (regardless of what was 
input).
Thanks everybody.
Fixed for the third time ... and counting.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46199" />
    <CreationDate amount="2003-11-06 09:49:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="JDT" />
    <component amount="Debug" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows XP" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>[scrapbook] Comparison of java scrap pages does not use syntax highlighting</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WONTFIX" />
    <WithStack>Java scrap pages use syntax highlighting as per java files.
When doing a comparison of two scrap pages no highlighting 
is used, unlike a comparison of two java source files where
the highlighting is still used.

Steps to reproduce.
Create two scrap pages
type in some java code
verify that highlighting is happening to the code in the
scrap pages when viewed in editor.
select both files (scrap pages) in package explorer
right click, choose compare to | each other

and there you are.
Deferred
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithStack>
    <WithOutStack>Java scrap pages use syntax highlighting as per java files.
When doing a comparison of two scrap pages no highlighting 
is used, unlike a comparison of two java source files where
the highlighting is still used.

Steps to reproduce.
Create two scrap pages
type in some java code
verify that highlighting is happening to the code in the
scrap pages when viewed in editor.
select both files (scrap pages) in package explorer
right click, choose compare to | each other

and there you are.
Deferred
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.</WithOutStack>
  </Bug>
  <Bug>
    <BugId amount="46200" />
    <CreationDate amount="2003-11-06 09:54:00 -0500" />
    <DupId amount="" />
    <classification amount="Eclipse" />
    <Product amount="Platform" />
    <component amount="Team" />
    <Version amount="3.0" />
    <rep_platform amount="PC" />
    <op_sys amount="Windows 2000" />
    <priority amount="P3" />
    <bug_severity amount="normal" />
    <Summery>Synchronize view lists files as different when they are not</Summery>
    <Patches amount="0" />
    <Stacktraces amount="0" />
    <SourceCodeRegions amount="0" />
    <Enumerations amount="0" />
    <bug_status amount="RESOLVED" />
    <resolution amount="WORKSFORME" />
    <WithStack>I prefer the "comparing content ignoring whitespace" option, however it lists 
files that are not different.

When I reselect "Comparing content ignoring whitespace", the file is no longer 
listed as different.

This has to be done for each folder.

I'll attach a picture.

Øyvind
Created attachment 6682
Shows a file listed in the synchronize view which is equal to the one in the repository
This looks like a Team issue.
Moving to Team.
You are using an old build (pre-M5). Try the latest integration, we've fixed 
many things relating to this in the past month.</WithStack>
    <WithOutStack>I prefer the "comparing content ignoring whitespace" option, however it lists 
files that are not different.

When I reselect "Comparing content ignoring whitespace", the file is no longer 
listed as different.

This has to be done for each folder.

I'll attach a picture.

Øyvind
Created attachment 6682
Shows a file listed in the synchronize view which is equal to the one in the repository
This looks like a Team issue.
Moving to Team.
You are using an old build (pre-M5). Try the latest integration, we've fixed 
many things relating to this in the past month.</WithOutStack>
  </Bug>
</infozilla-output>

